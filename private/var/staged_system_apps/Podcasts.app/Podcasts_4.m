id sub_100375688()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
  return [super dealloc];
}

uint64_t sub_100375744()
{
  swift_release();
  sub_10004D2D8(v0 + 24);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link, (uint64_t *)&unk_1005F7750);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_contextActionType, &qword_1005F9A58);

  return swift_deallocClassInstance();
}

uint64_t sub_10037584C()
{
  return type metadata accessor for ShareOtherContextAction(0);
}

uint64_t type metadata accessor for ShareOtherContextAction(uint64_t a1)
{
  return sub_10004F778(a1, qword_100605BA8);
}

void sub_100375874()
{
  sub_1003759DC(319, (unint64_t *)&qword_1005F6DC8, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    type metadata accessor for MetricsLabel();
    if (v1 <= 0x3F)
    {
      sub_1003759DC(319, (unint64_t *)&qword_100605BC0, (void (*)(uint64_t))&type metadata accessor for ContextActionType);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1003759DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100375A30()
{
  return type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
}

uint64_t type metadata accessor for ShareOtherContextAction.ActivityItemProvider(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_100605DA0);
}

uint64_t sub_100375A58()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100375AF4()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t sub_100375B20()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_systemImageName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100375B5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100375BD0@<X0>(uint64_t a1@<X8>)
{
  return sub_100054BBC(v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_contextActionType, a1, &qword_1005F9A58);
}

uint64_t sub_100375C00()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t sub_100375C2C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t sub_100375C58()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t sub_100375C8C@<X0>(uint64_t a1@<X8>)
{
  return sub_100056D54(v1 + 24, a1);
}

uint64_t sub_100375C98(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002687C4(a1, a2, WitnessTable);
}

void *sub_100375CF8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_100375D58(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_100375DB8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_100375E18()
{
  return sub_10037611C((unint64_t *)&unk_100605DB0);
}

uint64_t sub_100375E4C(uint64_t a1)
{
  uint64_t result = sub_10037611C((unint64_t *)&unk_100605DB0);
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_100375E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6 = (objc_class *)type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
  v7 = (char *)objc_allocWithZone(v6);
  v8 = v7;
  if (a3)
  {
    v9 = &v7[OBJC_IVAR____TtCC8Podcasts23ShareOtherContextActionP33_EEA9E3C8BAC5199A99988C7A83F9625320ActivityItemProvider_link];
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
    v12 = self;
    v13 = v8;
    id v14 = [v12 mainBundle];
    v26._object = (void *)0xE000000000000000;
    v15._object = (void *)0x80000001004DFFB0;
    v15._countAndFlagsBits = 0xD00000000000002DLL;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v26);

    sub_100054B78(&qword_1005F7720);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10046D010;
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_10004DA4C();
    *(void *)(v17 + 32) = a2;
    *(void *)(v17 + 40) = a3;
    uint64_t v18 = String.init(format:_:)();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v21 = (uint64_t *)&v13[OBJC_IVAR____TtCC8Podcasts23ShareOtherContextActionP33_EEA9E3C8BAC5199A99988C7A83F9625320ActivityItemProvider_title];
    uint64_t *v21 = v18;
    v21[1] = v20;

    v25.receiver = v13;
    v25.super_class = v6;
    [super init];
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  else
  {
    uint64_t v23 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v22;
}

uint64_t sub_10037611C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ShareOtherContextAction(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100376160()
{
  unint64_t result = qword_1006005B0;
  if (!qword_1006005B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006005B0);
  }
  return result;
}

id SyncControllerFactory.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncControllerFactory();
  return [super init];
}

uint64_t type metadata accessor for SyncControllerFactory()
{
  return self;
}

id SyncControllerFactory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncControllerFactory();
  [super dealloc];
}

unint64_t sub_100376298()
{
  unint64_t result = qword_1005FF768;
  if (!qword_1005FF768)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005FF768);
  }
  return result;
}

void NowPlayingTabController.perform(testCase:runner:)(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for PerformanceTestCase();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin();
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = PerformanceTestCase.name.getter();
  uint64_t v10 = v8;
  if (v9 == 0xD000000000000016 && v8 == 0x80000001004E0090
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v9 == 0xD00000000000001FLL && v10 == 0x80000001004E00B0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, v7, v4);
    *(void *)(v12 + ((v6 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
    id v13 = v2;
    id v14 = sub_100377AFC;
LABEL_8:
    sub_100377874((uint64_t)v14, v12);
    swift_release();
    return;
  }
  if (v9 == 0xD00000000000001BLL && v10 == 0x80000001004E00D0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v9 == 0xD000000000000024 && v10 == 0x80000001004E00F0)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v15, v7, v4);
    *(void *)(v12 + ((v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
    id v16 = v2;
    id v14 = sub_100376E48;
    goto LABEL_8;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_15;
  }
  if (UIApp)
  {
    id v18 = UIApp;
    PerformanceTestCase.name.getter();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v22 = String._bridgeToObjectiveC()();
    [v18 failedTest:v19 withFailure:v22];

    uint64_t v20 = v22;
  }
  else
  {
    __break(1u);
  }
}

void sub_1003766A8(uint64_t a1, void *a2)
{
  sub_100054B78(&qword_100605E00);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (UIApp)
  {
    id v6 = UIApp;
    PerformanceTestCase.name.getter();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 startedTest:v7];

    uint64_t v8 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *a2) + 0x200))();
    if (v8)
    {
      if (object_getClass(v8) == (Class)_TtC8Podcasts19NowPlayingBootstrap)
      {
        uint64_t v9 = type metadata accessor for NowPlayingHostedContentID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
        sub_100012998();
        swift_retain();
        swift_release();
        dispatch thunk of NowPlayingViewModel.updateContentSelection(_:animated:)();
        swift_unknownObjectRelease();
        swift_release();
        sub_100377BB4((uint64_t)v5);
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    sub_10037688C(a1, 0, 5);
  }
  else
  {
    __break(1u);
  }
}

void sub_10037688C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for PerformanceTestCase();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  if (a2 < a3)
  {
    uint64_t v30 = a2;
    uint64_t v31 = a3;
    v32 = v3;
    if (UIApp)
    {
      id v10 = UIApp;
      NSString v11 = String._bridgeToObjectiveC()();
      uint64_t v12 = a1;
      PerformanceTestCase.name.getter();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v10 startedSubTest:v11 forTest:v13];

      id v14 = (void *)UIApp;
      if (UIApp)
      {
        v27 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
        v27((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12, v7);
        uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
        uint64_t v29 = v15 | 7;
        uint64_t v16 = swift_allocObject();
        v28 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
        v28(v16 + ((v15 + 16) & ~v15), (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
        aBlock[4] = sub_100377C18;
        aBlock[5] = v16;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003B424;
        aBlock[3] = &unk_1005652F8;
        char v17 = _Block_copy(aBlock);
        id v18 = v14;
        swift_release();
        [v18 installCACommitCompletionBlock:v17];
        _Block_release(v17);

        v27((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12, v7);
        uint64_t v19 = (v15 + 24) & ~v15;
        unint64_t v20 = (v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v21 = swift_allocObject();
        NSString v22 = v32;
        *(void *)(v21 + 16) = v32;
        v28(v21 + v19, (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
        *(void *)(v21 + v20) = v30;
        *(void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v31;
        uint64_t v23 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t))((swift_isaMask & *v22) + 0x1B0);
        v24 = v22;
        v23(1, sub_100377C48, v21);
        swift_release();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  if (!UIApp)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v25 = UIApp;
  PerformanceTestCase.name.getter();
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 finishedTest:v32];

  Swift::String v26 = v32;
}

void sub_100376C58(uint64_t a1, void *a2)
{
  sub_100054B78(&qword_100605E00);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (UIApp)
  {
    id v6 = UIApp;
    PerformanceTestCase.name.getter();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 startedTest:v7];

    uint64_t v8 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *a2) + 0x200))();
    if (v8)
    {
      if (object_getClass(v8) == (Class)_TtC8Podcasts19NowPlayingBootstrap)
      {
        static NowPlayingHostedContentID.queue.getter();
        uint64_t v9 = type metadata accessor for NowPlayingHostedContentID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
        sub_100012998();
        swift_retain();
        swift_release();
        dispatch thunk of NowPlayingViewModel.updateContentSelection(_:animated:)();
        swift_unknownObjectRelease();
        swift_release();
        sub_100377BB4((uint64_t)v5);
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    sub_10037688C(a1, 0, 5);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100376E48()
{
  return sub_100377B14((uint64_t (*)(unint64_t, uint64_t))sub_100376C58);
}

uint64_t sub_100376E60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v6 = type metadata accessor for PerformanceTestCase();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t result = __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (UIApp)
  {
    id v11 = UIApp;
    NSString v12 = String._bridgeToObjectiveC()();
    PerformanceTestCase.name.getter();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v11 finishedSubTest:v12 forTest:v13 waitForCommit:1];

    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v15 = (v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v17 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v14, v10, v6);
    *(void *)(v17 + v15) = a2;
    *(void *)(v17 + v16) = v19;
    *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v20;
    id v18 = a2;
    sub_100377874((uint64_t)sub_100377C88, v17);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100377060(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PerformanceTestCase();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v35 = v10;
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (UIApp)
  {
    uint64_t v32 = a3;
    uint64_t v33 = a4;
    v34 = a2;
    id v12 = UIApp;
    NSString v13 = String._bridgeToObjectiveC()();
    uint64_t v31 = a1;
    PerformanceTestCase.name.getter();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 startedSubTest:v13 forTest:v14];

    unint64_t v15 = (void *)UIApp;
    if (UIApp)
    {
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v16 = v31;
      v28(v11, v31, v8);
      uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
      uint64_t v18 = v35;
      uint64_t v30 = v17 | 7;
      uint64_t v19 = swift_allocObject();
      uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
      v29(v19 + ((v17 + 16) & ~v17), v11, v8);
      aBlock[4] = sub_100377CA4;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003B424;
      aBlock[3] = &unk_1005653C0;
      uint64_t v20 = _Block_copy(aBlock);
      id v21 = v15;
      swift_release();
      [v21 installCACommitCompletionBlock:v20];
      _Block_release(v20);

      v28(v11, v16, v8);
      uint64_t v22 = (v17 + 24) & ~v17;
      unint64_t v23 = (v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v24 = swift_allocObject();
      id v25 = v34;
      *(void *)(v24 + 16) = v34;
      v29(v24 + v22, v11, v8);
      *(void *)(v24 + v23) = v32;
      *(void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8)) = v33;
      Swift::String v26 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t))((swift_isaMask & *v25) + 0x1B8);
      v27 = v25;
      v26(1, sub_100377E54, v24);
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1003773CC()
{
  if (!UIApp)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v0 = UIApp;
  NSString v1 = String._bridgeToObjectiveC()();
  PerformanceTestCase.name.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 finishedSubTest:v1 forTest:v2];

  if (!UIApp)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v3 = UIApp;
  NSString v4 = String._bridgeToObjectiveC()();
  PerformanceTestCase.name.getter();
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 startedSubTest:v4 forTest:v5];
}

uint64_t sub_1003774F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v19 = a4;
  uint64_t v20 = a6;
  uint64_t v9 = type metadata accessor for PerformanceTestCase();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin();
  id v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v13, v12, v9);
  *(void *)(v16 + v14) = a1;
  *(void *)(v16 + v15) = a3;
  *(void *)(v16 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
  id v17 = a1;
  sub_100377874(v20, v16);
  return swift_release();
}

uint64_t sub_100377668(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v6 = type metadata accessor for PerformanceTestCase();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t result = __chkstk_darwin();
  if (UIApp)
  {
    id v10 = UIApp;
    NSString v11 = String._bridgeToObjectiveC()();
    PerformanceTestCase.name.getter();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 finishedSubTest:v11 forTest:v12 waitForCommit:1];

    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v14 = (char *)swift_allocObject();
    uint64_t v15 = v18;
    *((void *)v14 + 2) = v17;
    *((void *)v14 + 3) = v15;
    *((void *)v14 + 4) = a2;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v14[v13], (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    id v16 = a2;
    sub_100377874((uint64_t)sub_100378178, (uint64_t)v14);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100377850(uint64_t a1)
{
}

uint64_t sub_100377874(uint64_t a1, uint64_t a2)
{
  type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin();
  uint64_t v4 = type metadata accessor for DispatchTime();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)v13 - v8;
  sub_1000566BC();
  v13[0] = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  aBlock[3] = &unk_100565460;
  _Block_copy(aBlock);
  v13[1] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  swift_retain();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  DispatchWorkItem.init(flags:block:)();
  swift_release();
  NSString v11 = (void *)v13[0];
  OS_dispatch_queue.asyncAfter(deadline:execute:)();

  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v4);
}

uint64_t sub_100377AFC()
{
  return sub_100377B14((uint64_t (*)(unint64_t, uint64_t))sub_1003766A8);
}

uint64_t sub_100377B14(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for PerformanceTestCase() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v3, v4);
}

uint64_t sub_100377BB4(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100605E00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100377C18()
{
}

uint64_t sub_100377C48()
{
  return sub_100377E74((uint64_t)&unk_100565358, (uint64_t)sub_100377C6C);
}

uint64_t sub_100377C6C()
{
  return sub_100377FF4((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_100376E60);
}

uint64_t sub_100377C88()
{
  return sub_100377FF4((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_100377060);
}

void sub_100377CA4()
{
}

void sub_100377CE4()
{
}

uint64_t sub_100377D74()
{
  uint64_t v1 = type metadata accessor for PerformanceTestCase();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100377E54()
{
  return sub_100377E74((uint64_t)&unk_100565420, (uint64_t)sub_100377FDC);
}

uint64_t sub_100377E74(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for PerformanceTestCase() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1003774F4(*(void **)(v2 + 16), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), a1, a2);
}

uint64_t sub_100377F28()
{
  uint64_t v1 = type metadata accessor for PerformanceTestCase();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100377FDC()
{
  return sub_100377FF4((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_100377668);
}

uint64_t sub_100377FF4(uint64_t (*a1)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for PerformanceTestCase() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v3, v6, v7, v8);
}

uint64_t sub_1003780AC()
{
  uint64_t v1 = type metadata accessor for PerformanceTestCase();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100378178()
{
  uint64_t v1 = type metadata accessor for PerformanceTestCase();
  uint64_t v4 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v3 = v4;
  uint64_t v5 = *(void *)(v0 + 16);
  if (v5 < *(void *)(v0 + 24)) {
    return sub_10037688C(v0 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v5 + 1);
  }
  return result;
}

void sub_1003781F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
}

void sub_100378214(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v8 = a5;
  if (!a3)
  {
    NSString v11 = 0;
    if (!a5) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v16 = a3;
  uint64_t v17 = a4;
  NSString v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  unint64_t v14 = sub_10037837C;
  uint64_t v15 = &unk_100565548;
  NSString v11 = _Block_copy(&v12);
  swift_retain();
  swift_release();
  if (v8)
  {
LABEL_3:
    id v16 = v8;
    uint64_t v17 = a6;
    NSString v12 = _NSConcreteStackBlock;
    uint64_t v13 = 1107296256;
    unint64_t v14 = sub_1003783D0;
    uint64_t v15 = &unk_100565520;
    uint64_t v8 = _Block_copy(&v12);
    swift_retain();
    swift_release();
  }
LABEL_4:
  [v6 performImport:a1 fromSource:a2 withProgressBlock:v11 completionHandler:v8];
  _Block_release(v8);
  _Block_release(v11);
}

uint64_t sub_10037837C(uint64_t a1, float a2)
{
  uint64_t v3 = *(void (**)(uint64_t, float))(a1 + 32);
  uint64_t v4 = swift_retain();
  v3(v4, a2);

  return swift_release();
}

void sub_1003783D0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = *(void (**)(uint64_t, void *, void *, unint64_t))(a1 + 32);
  if (a4)
  {
    swift_retain();
    id v7 = a3;
    id v8 = v4;
    uint64_t v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    id v11 = a3;
    unint64_t v10 = 0xF000000000000000;
  }
  v6(a2, a3, v4, v10);
  sub_10021A3FC((uint64_t)v4, v10);
  swift_release();
}

id sub_100378498(uint64_t a1, char a2)
{
  id v3 = [*v2 itemWithPersistentID:a1 verifyExistence:a2 & 1];

  return v3;
}

uint64_t sub_1003784DC()
{
  id v1 = [objc_allocWithZone((Class)ML3ArtworkTokenSet) initWithEntity:v0 artworkType:1];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [v1 artworkTokenForSource:500];
  if (!v3)
  {

    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v5;
}

void sub_100378574(uint64_t a1, uint64_t a2)
{
  id v3 = *v2;
  if (a2) {
    NSString v4 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v4 = 0;
  }
  id v5 = v4;
  [v3 populateLocationPropertiesWithPath:protectionType:];
}

id sub_1003785E0(uint64_t a1, unint64_t a2)
{
  id v3 = *v2;
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  id v5 = [v3 populateArtworkCacheWithArtworkData:isa];

  return v5;
}

uint64_t sub_10037863C()
{
  return sub_1003784DC();
}

id sub_100378660(uint64_t a1, uint64_t a2)
{
  id v3 = *v2;
  if (a2) {
    NSString v4 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v4 = 0;
  }
  id v5 = [v3 removeArtworkAssetWithToken:v4];

  return v5;
}

double sub_1003786B4@<D0>(uint64_t a1@<X8>)
{
  id v3 = [objc_allocWithZone((Class)ML3Track) initWithPersistentID:MediaLibraryPid.value.getter() inLibrary:*v1];
  if (v3)
  {
    id v4 = v3;
    *(void *)(a1 + 24) = sub_10037873C();
    *(void *)(a1 + 32) = &off_1005654C8;
    *(void *)a1 = v4;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

unint64_t sub_10037873C()
{
  unint64_t result = qword_100605E08;
  if (!qword_100605E08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100605E08);
  }
  return result;
}

void MTPlayerController.startPlayback(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PendingPlaybackMetadata();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    id v8 = objc_allocWithZone((Class)type metadata accessor for PlaceholderManifest());
    sub_1001C6B98((uint64_t)v7);
    unint64_t v10 = v9;
    [v2 playManifest:v9 reason:3 interactive:0 completion:0];
  }
}

void sub_100378890(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PendingPlaybackMetadata();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *v1;
  if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    id v8 = objc_allocWithZone((Class)type metadata accessor for PlaceholderManifest());
    sub_1001C6B98((uint64_t)v6);
    unint64_t v10 = v9;
    [v7 playManifest:v9 reason:3 interactive:0 completion:0];
  }
}

uint64_t sub_1003789C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v26 = a5;
  uint64_t v17 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowHeader.primaryArtwork.getter();
  HeaderModel.PrimaryArtwork.artwork.getter();
  swift_release();
  uint64_t v20 = type metadata accessor for ArtworkModel();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20) == 1) {
    return sub_100054B1C((uint64_t)v19, &qword_1005F76A0);
  }
  uint64_t v24 = a3;
  id v25 = a6;
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  sub_100056D54(a1, (uint64_t)v27);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  sub_100042FC4(v27, v23 + 24);
  *(void *)(v23 + 64) = a2;
  *(unsigned char *)(v23 + 72) = v26;
  *(void *)(v23 + 80) = a8;
  *(void *)(v23 + 88) = a9;
  *(void *)(v23 + 96) = a10;
  *(void *)(v23 + 104) = a11;
  *(void *)(v23 + 112) = v24;
  *(void *)(v23 + 120) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100365E20(v25, (uint64_t)sub_10037B38C, v23);
  swift_release();
  swift_release();
  return sub_10037B3D4((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t sub_100378BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v98 = a8;
  v76 = a7;
  int v95 = a5;
  uint64_t v96 = a3;
  uint64_t v97 = a4;
  uint64_t v92 = a1;
  uint64_t v93 = a2;
  uint64_t v94 = a9;
  uint64_t v10 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v10 - 8);
  NSString v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100054B78(&qword_100605E18);
  uint64_t v71 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  unint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100054B78(&qword_100605E20);
  uint64_t v73 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  id v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100054B78(&qword_100605E28);
  uint64_t v78 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  v69 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100054B78((uint64_t *)&unk_100605E30);
  uint64_t v80 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  v74 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100054B78(&qword_100606140);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v84 = v19;
  uint64_t v85 = v20;
  __chkstk_darwin(v19);
  v75 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100054B78(&qword_100605E40);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v86 = v22;
  uint64_t v87 = v23;
  __chkstk_darwin(v22);
  v81 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100054B78(&qword_100605E48);
  uint64_t v91 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  v82 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100054B78((uint64_t *)&unk_100605E50);
  uint64_t v90 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  v83 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = [self sharedInstance];
  id v28 = [v27 mainQueueContext];

  uint64_t v29 = ShowHeader.showID.getter();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v29;
  *(void *)(v34 + 24) = v31;
  *(unsigned char *)(v34 + 32) = v33;
  sub_100054B78(&qword_1005F76A0);
  uint64_t v35 = NSManagedObjectContext.performAndPublish<A>(_:)();

  swift_release();
  *(void *)&long long v99 = v35;
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v100 = (id)static OS_dispatch_queue.uiAssetPreparationQueue.getter();
  uint64_t v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v37 = *(void *)(v36 - 8);
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  uint64_t v67 = v37 + 56;
  v64 = v12;
  v66(v12, 1, 1, v36);
  sub_100054B78((uint64_t *)&unk_10060A520);
  sub_100044200((unint64_t *)&unk_100605E60, (uint64_t *)&unk_10060A520);
  unint64_t v65 = sub_100059BE0();
  Publisher.receive<A>(on:options:)();
  sub_100054B1C((uint64_t)v12, &qword_1005F9F20);

  swift_release();
  type metadata accessor for ArtworkModel();
  v68 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100044200((unint64_t *)&unk_100605E70, &qword_100605E18);
  uint64_t v38 = v70;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v14, v38);
  uint64_t v39 = swift_allocObject();
  long long v40 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v39 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v39 + 32) = v40;
  *(_OWORD *)(v39 + 48) = *(_OWORD *)(a6 + 32);
  *(void *)(v39 + 64) = *(void *)(a6 + 48);
  type metadata accessor for ArtworkRequest();
  v41 = v69;
  uint64_t v42 = v72;
  Publishers.CompactMap.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v16, v42);
  sub_100056D54((uint64_t)v76, (uint64_t)&v99);
  uint64_t v43 = swift_allocObject();
  sub_100042FC4(&v99, v43 + 16);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_100379E9C;
  *(void *)(v44 + 24) = v43;
  static Subscribers.Demand.unlimited.getter();
  sub_10004D29C(0, (unint64_t *)&unk_1006061A0);
  sub_100054B78((uint64_t *)&unk_100605E80);
  v76 = &protocol conformance descriptor for Publishers.CompactMap<A, B>;
  sub_100044200(&qword_1006061B0, &qword_100605E28);
  sub_100044200((unint64_t *)&unk_1006054B0, (uint64_t *)&unk_100605E80);
  v45 = v74;
  uint64_t v46 = v77;
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v41, v46);
  *(void *)&long long v99 = static OS_dispatch_queue.main.getter();
  uint64_t v47 = (uint64_t)v64;
  v66(v64, 1, 1, v36);
  sub_100044200((unint64_t *)&unk_100606160, (uint64_t *)&unk_100605E30);
  v48 = v75;
  uint64_t v49 = v79;
  Publisher.receive<A>(on:options:)();
  sub_100054B1C(v47, &qword_1005F9F20);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v45, v49);
  uint64_t v50 = swift_allocObject();
  swift_weakInit();
  sub_100056D54(v92, (uint64_t)&v99);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v50;
  sub_100042FC4(&v99, v51 + 24);
  uint64_t v52 = v94;
  *(void *)(v51 + 64) = v93;
  *(unsigned char *)(v51 + 72) = v95;
  uint64_t v53 = v97;
  *(void *)(v51 + 80) = v98;
  *(void *)(v51 + 88) = v52;
  *(void *)(v51 + 96) = v96;
  *(void *)(v51 + 104) = v53;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100054B78((uint64_t *)&unk_100605E90);
  sub_100044200(&qword_100606180, &qword_100606140);
  v54 = v81;
  uint64_t v55 = v84;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v48, v55);
  *(void *)&long long v99 = 0;
  sub_100044200((unint64_t *)&unk_100605EA0, &qword_100605E40);
  v56 = v82;
  uint64_t v57 = v86;
  Publisher.replaceError(with:)();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v54, v57);
  sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
  sub_100044200(&qword_100605EB0, &qword_100605E48);
  v58 = v83;
  uint64_t v59 = v89;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v56, v59);
  sub_100044200(&qword_100605EB8, (uint64_t *)&unk_100605E50);
  uint64_t v60 = v88;
  uint64_t v61 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v58, v60);
  return v61;
}

void sub_10037987C(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = NSManagedObjectContext.unsafeShow(for:sortDescriptors:)();
  if (v1)
  {
    static Logger.artwork.getter();
    swift_errorRetain();
    swift_errorRetain();
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v17 = a1;
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v16 = v3;
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v15 = v10 + 4;
      uint64_t v18 = v1;
      swift_errorRetain();
      sub_100054B78(&qword_100603F70);
      uint64_t v11 = String.init<A>(describing:)();
      uint64_t v18 = sub_10004B974(v11, v12, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      a1 = v17;
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unable to fetch artwork due to database error: %s ", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v16);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    uint64_t v13 = (void *)v7;
    if (v7)
    {
      MTPodcast.artworkModel.getter();

      return;
    }
  }
  uint64_t v14 = type metadata accessor for ArtworkModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 1, 1, v14);
}

uint64_t sub_100379BB4()
{
  sub_1001EE720(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));

  return swift_deallocObject();
}

void sub_100379BF0(uint64_t a1@<X8>)
{
}

uint64_t sub_100379C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100054BBC(a1, a2, &qword_1005F76A0);
}

uint64_t sub_100379C34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ArtworkModel();
  __chkstk_darwin(v9 - 8);
  sub_100313288(a1, (uint64_t)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for CropCode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  static Logger.artwork.getter();
  static os_log_type_t.info.getter();
  SignpostAndLogTrace(domain:level:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
}

uint64_t sub_100379E4C()
{
  return swift_deallocObject();
}

uint64_t sub_100379E5C(uint64_t a1)
{
  return sub_100379C34(a1);
}

uint64_t sub_100379E64()
{
  sub_10004D2D8(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100379E9C()
{
  sub_100041A98((void *)(v0 + 16), *(void *)(v0 + 40));
  return dispatch thunk of ImageProvider.load(artwork:)();
}

uint64_t sub_100379EE8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10038266C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100379EF0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_100379F28(void **a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void *a7@<X8>, uint64_t a8)
{
  uint64_t v14 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong() && (id v15 = sub_10037A158(a2, a3, v14, a4, a5, a6), swift_release(), v15))
  {
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D060;
    *(void *)(inited + 32) = v15;
    unint64_t v21 = inited;
    specialized Array._endMutation()();
    swift_bridgeObjectRetain();
    id v17 = v15;
    sub_1001C04A0(v21);
    swift_bridgeObjectRelease();
    v18.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    if (a8)
    {
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v19 = 0;
    }
    id v20 = [objc_allocWithZone((Class)CPListSection) initWithItems:v18.super.isa header:v19 sectionIndexTitle:0];
  }
  else
  {
    id v20 = 0;
  }
  *a7 = v20;
}

uint64_t sub_10037A0C4()
{
  swift_release();
  sub_10004D2D8(v0 + 24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10037A11C(void **a1@<X0>, void *a2@<X8>)
{
  sub_100379F28(a1, (void *)(v2 + 24), *(void *)(v2 + 64), *(unsigned __int8 *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), a2, *(void *)(v2 + 104));
}

id sub_10037A158(void *a1, uint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6)
{
  int v122 = a4;
  uint64_t v130 = a2;
  v115 = a1;
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (uint64_t *)((char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v14 - 8);
  v116 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = _s27CarPlayEpisodeSubtitleStyleOMa();
  __chkstk_darwin(v113);
  v114 = (uint64_t *)((char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for EpisodePlayState();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v134 = v17;
  uint64_t v135 = v18;
  __chkstk_darwin(v17);
  uint64_t v129 = (uint64_t)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v20 - 8);
  v128 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v22 - 8);
  v127 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100054B78(&qword_1005FCBF0);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  v132 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v110 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v110 - v30;
  uint64_t v32 = type metadata accessor for EpisodeOffer();
  uint64_t v126 = *(void *)(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  v111 = (char *)&v110 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  v112 = (char *)&v110 - v36;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v110 - v37;
  uint64_t v133 = v6;
  uint64_t v39 = ShowHeader.primaryButtonAction.getter();
  uint64_t v123 = a5;
  uint64_t v124 = a6;
  v121 = v12;
  id v117 = a3;
  uint64_t v125 = v32;
  if (v39)
  {
    type metadata accessor for PlayAction();
    uint64_t v40 = swift_dynamicCastClass();
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v42 = (uint64_t)v31;
      swift_retain();
      uint64_t v131 = v41;
      PlayAction.episodeOffer.getter();
      swift_release();
      EpisodeOffer.contentId.getter();
      (*(void (**)(char *, uint64_t))(v126 + 8))(v38, v32);
      char v43 = 0;
      goto LABEL_7;
    }
    uint64_t v42 = (uint64_t)v31;
    swift_release();
  }
  else
  {
    uint64_t v42 = (uint64_t)v31;
  }
  uint64_t v131 = 0;
  char v43 = 1;
LABEL_7:
  uint64_t v44 = v134;
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
  v45(v42, 1, 1, v134);
  if (ShowHeader.episodeToPlay.getter())
  {
    Episode.uuid.getter();
    EpisodeStateController.stateMachine(for:)();
    swift_bridgeObjectRelease();
    dispatch thunk of EpisodeStateMachine.currentState.getter();
    swift_release();
    sub_100054B1C(v42, &qword_1005FCBF0);
    v45((uint64_t)v29, 0, 1, v44);
    sub_10037B2C4((uint64_t)v29, v42);
    uint64_t v130 = Episode.title.getter();
    uint64_t v47 = v46;
    Episode.uuid.getter();
    Episode.adamId.getter();
    uint64_t v48 = type metadata accessor for EpisodeListSettings();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v127, 1, 1, v48);
    static ActionMetrics.notInstrumented.getter();
    type metadata accessor for LibraryPlayPauseAction();
    swift_allocObject();
    uint64_t v49 = LibraryPlayPauseAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:isSmartPlayButton:isWidgetPlayButton:timestamp:waitForEngine:shouldPreventQueueing:actionMetrics:)();
    swift_release();
    uint64_t v51 = v131;
    uint64_t v50 = (uint64_t)v132;
  }
  else if (v43)
  {
    uint64_t v130 = 0;
    uint64_t v47 = 0;
    uint64_t v49 = 0;
    uint64_t v51 = v131;
    uint64_t v50 = (uint64_t)v132;
    uint64_t v44 = v134;
  }
  else
  {
    EpisodeStateController.stateMachine(for:)();
    dispatch thunk of EpisodeStateMachine.currentState.getter();
    swift_release();
    sub_100054B1C(v42, &qword_1005FCBF0);
    uint64_t v44 = v134;
    v45((uint64_t)v29, 0, 1, v134);
    sub_10037B2C4((uint64_t)v29, v42);
    uint64_t v51 = v131;
    if (v131)
    {
      swift_retain();
      PlayAction.episodeOffer.getter();
      swift_release();
      uint64_t v130 = EpisodeOffer.title.getter();
      uint64_t v47 = v52;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v38, v125);
    }
    else
    {
      uint64_t v130 = 0;
      uint64_t v47 = 0;
    }
    uint64_t v50 = (uint64_t)v132;
    swift_retain();
    uint64_t v49 = v51;
  }
  sub_100054BBC(v42, v50, &qword_1005FCBF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v50, 1, v44) == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100054B1C(v42, &qword_1005FCBF0);
    uint64_t v53 = v50;
LABEL_27:
    sub_100054B1C(v53, &qword_1005FCBF0);
    return 0;
  }
  uint64_t v54 = v129;
  sub_10037B224(v50, v129, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
  if (!v49)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    swift_release();
    sub_10037B3D4(v54, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
    uint64_t v53 = v42;
    goto LABEL_27;
  }
  if (!v47)
  {
    swift_release();
    goto LABEL_26;
  }
  aBlock = (void **)v130;
  uint64_t v137 = v47;
  sub_1001AB688();
  swift_retain();
  if ((Collection.isNotEmpty.getter() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release_n();
    goto LABEL_26;
  }
  if (ShowHeader.episodeToPlay.getter())
  {
    char v55 = Episode.showTypeIsSerial.getter();
    LODWORD(v135) = Episode.isExplicit.getter();
    if (v55)
    {
      uint64_t v56 = Episode.seasonNumber.getter();
      char v58 = v57;
      uint64_t v59 = Episode.episodeNumber.getter();
      char v61 = v60;
      uint64_t v62 = Episode.duration.getter();
      uint64_t v63 = v114;
      uint64_t *v114 = v56;
      *((unsigned char *)v63 + 8) = v58 & 1;
      v63[2] = v59;
      char v64 = v61 & 1;
      uint64_t v65 = (uint64_t)v63;
      *((unsigned char *)v63 + 24) = v64;
      v63[4] = v62;
      *((unsigned char *)v63 + 40) = v66 & 1;
    }
    else
    {
      uint64_t v76 = sub_100054B78(&qword_1005F8140);
      uint64_t v65 = (uint64_t)v114;
      uint64_t v77 = v49;
      uint64_t v78 = (char *)v114 + *(int *)(v76 + 64);
      *(void *)uint64_t v65 = Episode.episodeNumber.getter();
      *(unsigned char *)(v65 + 8) = v79 & 1;
      Episode.releaseDate.getter();
      *(void *)uint64_t v78 = Episode.duration.getter();
      v78[8] = v80 & 1;
      uint64_t v49 = v77;
    }
    v81 = v115;
    swift_storeEnumTagMultiPayload();
    sub_1001B5730(v81, v135 & 1, v65);
    uint64_t v75 = v82;
    sub_10037B3D4(v65, (uint64_t (*)(void))_s27CarPlayEpisodeSubtitleStyleOMa);
    swift_release();
    uint64_t v83 = (uint64_t)v116;
  }
  else
  {
    if (v51)
    {
      swift_retain();
      v69 = v111;
      PlayAction.episodeOffer.getter();
      swift_release();
      uint64_t v70 = v126;
      uint64_t v71 = (uint64_t)v112;
      uint64_t v72 = v69;
      uint64_t v73 = v125;
      (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v112, v72, v125);
      sub_1001B6380(v115, v71, 1);
      uint64_t v75 = v74;
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v73);
    }
    else
    {
      uint64_t v75 = 0;
    }
    uint64_t v83 = (uint64_t)v116;
  }
  if (!ShowHeader.episodeToPlay.getter())
  {
    uint64_t v88 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v83, 1, 1, v88);
    goto LABEL_39;
  }
  Episode.assetUrl.getter();
  swift_release();
  uint64_t v84 = type metadata accessor for URL();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48))(v83, 1, v84) == 1)
  {
LABEL_39:
    sub_100054B1C(v83, (uint64_t *)&unk_1005F7750);
    id v87 = 0;
    goto LABEL_40;
  }
  sub_100054B1C(v83, (uint64_t *)&unk_1005F7750);
  id v85 = [self configurationWithPointSize:4 weight:-1 scale:16.0];
  NSString v86 = String._bridgeToObjectiveC()();
  id v87 = [self systemImageNamed:v86 withConfiguration:v85];

LABEL_40:
  id v89 = v117;
  id v90 = v87;
  NSString v91 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v75)
  {
    NSString v92 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v92 = 0;
  }
  id v93 = [objc_allocWithZone((Class)CPListItem) initWithText:v91 detailText:v92 image:v89 accessoryImage:v90 accessoryType:0];

  id v142 = v93;
  id v94 = v93;
  uint64_t v95 = sub_1001B6954();
  if ((v96 & 1) == 0) {
    [v94 setPlaybackProgress:*(double *)&v95];
  }

  uint64_t v97 = v118;
  uint64_t *v118 = v49;
  *((unsigned char *)v97 + 8) = 0;
  uint64_t v98 = v120;
  swift_storeEnumTagMultiPayload();
  id v99 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
  swift_retain();
  id v100 = [v99 init];
  uint64_t v101 = (uint64_t)v97;
  uint64_t v102 = (uint64_t)v121;
  sub_10037B224(v101, (uint64_t)v121, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v102, 0, 1, v98);
  uint64_t v103 = (uint64_t)&v100[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934(v102, v103);
  swift_endAccess();
  v100[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = v122;
  sub_10004D29C(0, &qword_1005F88B0);
  v104 = NSString.init(stringLiteral:)();
  v105 = v100;
  sub_1001BFA4C((uint64_t)v104, (uint64_t)v100);

  v106 = v142;
  uint64_t v107 = swift_allocObject();
  uint64_t v108 = v124;
  *(void *)(v107 + 16) = v123;
  *(void *)(v107 + 24) = v108;
  v140 = sub_1001BFA88;
  uint64_t v141 = v107;
  aBlock = _NSConcreteStackBlock;
  uint64_t v137 = 1107296256;
  v138 = sub_1001BF99C;
  v139 = &unk_100565688;
  v109 = _Block_copy(&aBlock);
  id v67 = v106;
  swift_retain();
  swift_release();
  [v67 setHandler:v109];
  _Block_release(v109);

  swift_release_n();
  swift_release();
  sub_10037B3D4(v129, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
  sub_100054B1C(v42, &qword_1005FCBF0);
  return v67;
}

void sub_10037B05C(void *a1, uint64_t a2, void *a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v18 = sub_10037A158(a3, a4, a1, a5, a6, a7);
    if (v18)
    {
      uint64_t v19 = v18;
      sub_100054B78((uint64_t *)&unk_1005FA7F0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10046D060;
      *(void *)(inited + 32) = v19;
      unint64_t v26 = inited;
      specialized Array._endMutation()();
      swift_bridgeObjectRetain();
      id v21 = v19;
      sub_1001C04A0(v26);
      swift_bridgeObjectRelease();
      v22.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      if (a11)
      {
        NSString v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v23 = 0;
      }
      id v24 = [objc_allocWithZone((Class)CPListSection) initWithItems:v22.super.isa header:v23 sectionIndexTitle:0];

      id v25 = v24;
      ((void (*)(id))a8)(v24);
      swift_release();
    }
    else
    {
      a8();
      swift_release();
    }
  }
}

uint64_t sub_10037B224(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10037B28C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10037B2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005FCBF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037B32C()
{
  swift_release();
  sub_10004D2D8(v0 + 24);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10037B38C(void *a1)
{
  sub_10037B05C(a1, *(void *)(v1 + 16), (void *)(v1 + 24), *(void *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void (**)(void))(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120));
}

uint64_t sub_10037B3D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10037B438(uint64_t a1, uint64_t a2)
{
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_10037D464(&qword_100605FA8, v4, (void (*)(uint64_t))type metadata accessor for RemoteNotificationSetting);
  uint64_t v5 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v7 = v6;
  swift_release();
  id v8 = objc_allocWithZone((Class)IMWritePushNotificationSettingsService);
  sub_10023FCA8(v5, v7);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v10 = [v8 initWithData:isa];
  sub_10021A410(v5, v7);

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  aBlock[4] = sub_10037D374;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10023ED20;
  aBlock[3] = &unk_100565790;
  unint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v10 performDataRequestWithCompletion:v12];
  _Block_release(v12);

  return sub_10021A410(v5, v7);
}

void sub_10037B650(void *a1@<X8>)
{
  *a1 = &off_100554718;
}

uint64_t sub_10037B660(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100054B78(&qword_100605F78);
  uint64_t v65 = *(void (***)(char *, uint64_t))(v5 - 8);
  uint64_t v66 = v5;
  __chkstk_darwin();
  unint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v55 - v8;
  *(void *)(v3 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v10 = a1[3];
  id v67 = a1;
  sub_100041A98(a1, v10);
  unint64_t v11 = sub_10037D240();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    swift_release();
    uint64_t v12 = v3;
    goto LABEL_41;
  }
  uint64_t v63 = v7;
  unint64_t v64 = v11;
  char v60 = (void *)(v3 + 16);
  LOBYTE(v68) = 0;
  uint64_t v13 = v65;
  uint64_t v14 = v66;
  KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)();
  char v58 = v9;
  uint64_t v59 = v3;
  sub_100041A98(v70, v71);
  uint64_t v15 = dispatch thunk of UnkeyedDecodingContainer.count.getter();
  if ((v16 & 1) != 0 || (uint64_t v17 = v15, v15 < 2))
  {
    uint64_t v12 = v59;
    swift_release();
    uint64_t v68 = 0;
    unint64_t v69 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    v50._countAndFlagsBits = 0xD00000000000002BLL;
    v50._object = (void *)0x80000001004E01E0;
    String.append(_:)(v50);
    sub_100054B78(&qword_100605F88);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v51 = v68;
    unint64_t v52 = v69;
    sub_10037D294();
    swift_allocError();
    *uint64_t v53 = v51;
    v53[1] = v52;
    swift_willThrow();
    v13[1](v58, v14);
    sub_10004D2D8((uint64_t)v70);
LABEL_41:
    sub_10004D2D8((uint64_t)v67);
    return v12;
  }
  uint64_t v65 = v13 + 1;
  uint64_t v62 = "fcation flags are invalid: ";
  unint64_t v61 = 0x80000001004E0210;
  char v57 = "dcasts.account.recommendations";
  unint64_t v56 = 0x80000001004E0240;
  id v18 = v63;
  uint64_t v19 = v60;
  while (v17)
  {
    sub_100055EF0((uint64_t)v70, v71);
    dispatch thunk of UnkeyedDecodingContainer.nestedContainer<A>(keyedBy:)();
    LOBYTE(v68) = 2;
    uint64_t v21 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v22 = v20;
    if (v21 == 0xD00000000000002ELL && v20 == v61 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v68) = 1;
      char v23 = KeyedDecodingContainer.decode(_:forKey:)();
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v72 = (void *)*v19;
      id v25 = v72;
      *uint64_t v19 = 0x8000000000000000;
      unint64_t v27 = sub_1002270B4(0);
      uint64_t v28 = v25[2];
      BOOL v29 = (v26 & 1) == 0;
      uint64_t v30 = v28 + v29;
      if (__OFADD__(v28, v29)) {
        goto LABEL_44;
      }
      char v31 = v26;
      if (v25[3] < v30)
      {
        sub_10027C7EC(v30, isUniquelyReferenced_nonNull_native);
        unint64_t v32 = sub_1002270B4(0);
        if ((v31 & 1) != (v33 & 1)) {
          goto LABEL_48;
        }
        unint64_t v27 = v32;
        uint64_t v34 = v72;
        if ((v31 & 1) == 0) {
          goto LABEL_33;
        }
LABEL_17:
        *(unsigned char *)(v34[7] + v27) = v23 & 1;
LABEL_35:
        uint64_t v14 = v66;
        id v18 = v63;
        *uint64_t v19 = v34;
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_36;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v34 = v72;
        if (v26) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_100282520();
        uint64_t v34 = v72;
        if (v31) {
          goto LABEL_17;
        }
      }
LABEL_33:
      v34[(v27 >> 6) + 8] |= 1 << v27;
      *(unsigned char *)(v34[6] + v27) = 0;
      *(unsigned char *)(v34[7] + v27) = v23 & 1;
      uint64_t v48 = v34[2];
      BOOL v46 = __OFADD__(v48, 1);
      uint64_t v47 = v48 + 1;
      if (v46) {
        goto LABEL_45;
      }
LABEL_34:
      v34[2] = v47;
      goto LABEL_35;
    }
    if (v21 == 0xD00000000000002ALL && v22 == v56)
    {
      swift_bridgeObjectRelease();
LABEL_22:
      LOBYTE(v68) = 1;
      char v23 = KeyedDecodingContainer.decode(_:forKey:)();
      swift_beginAccess();
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v72 = (void *)*v19;
      uint64_t v37 = v72;
      *uint64_t v19 = 0x8000000000000000;
      unint64_t v27 = sub_1002270B4(1);
      uint64_t v39 = v37[2];
      BOOL v40 = (v38 & 1) == 0;
      uint64_t v41 = v39 + v40;
      if (__OFADD__(v39, v40)) {
        goto LABEL_46;
      }
      char v42 = v38;
      if (v37[3] >= v41)
      {
        if (v36)
        {
          uint64_t v34 = v72;
          if (v38) {
            goto LABEL_17;
          }
        }
        else
        {
          sub_100282520();
          uint64_t v34 = v72;
          if (v42) {
            goto LABEL_17;
          }
        }
      }
      else
      {
        sub_10027C7EC(v41, v36);
        unint64_t v43 = sub_1002270B4(1);
        if ((v42 & 1) != (v44 & 1)) {
          goto LABEL_48;
        }
        unint64_t v27 = v43;
        uint64_t v34 = v72;
        if (v42) {
          goto LABEL_17;
        }
      }
      v34[(v27 >> 6) + 8] |= 1 << v27;
      *(unsigned char *)(v34[6] + v27) = 1;
      *(unsigned char *)(v34[7] + v27) = v23 & 1;
      uint64_t v45 = v34[2];
      BOOL v46 = __OFADD__(v45, 1);
      uint64_t v47 = v45 + 1;
      if (v46) {
        goto LABEL_47;
      }
      goto LABEL_34;
    }
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_22;
    }
LABEL_36:
    uint64_t v49 = *v65;
    (*v65)(v18, v14);
    if (!--v17)
    {
      v49(v58, v14);
      sub_10004D2D8((uint64_t)v70);
      sub_10004D2D8((uint64_t)v67);
      return v59;
    }
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10037BDC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002ED028(*a1, *a2);
}

Swift::Int sub_10037BDD0()
{
  return Hasher._finalize()();
}

uint64_t sub_10037BE74()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10037BF04()
{
  return Hasher._finalize()();
}

unint64_t sub_10037BFA4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10037D6C8(*a1);
  *a2 = result;
  return result;
}

void sub_10037BFD4(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0x80000001004D1E60;
  unint64_t v4 = 0xE900000000000064;
  uint64_t v5 = 0x656C62616E457369;
  if (v2 != 1)
  {
    uint64_t v5 = 1701667182;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = 0xD000000000000018;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_10037C034()
{
  uint64_t v1 = 0x656C62616E457369;
  if (*v0 != 1) {
    uint64_t v1 = 1701667182;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000018;
  }
}

unint64_t sub_10037C090@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10037D6C8(a1);
  *a2 = result;
  return result;
}

void sub_10037C0B8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10037C0C4(uint64_t a1)
{
  unint64_t v2 = sub_10037D240();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10037C100(uint64_t a1)
{
  unint64_t v2 = sub_10037D240();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10037C13C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_100605F98);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  unint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (void (*)(char *, uint64_t))((char *)v20 - v8);
  sub_100041A98(a1, a1[3]);
  sub_10037D240();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v25 = 0;
  KeyedEncodingContainer.nestedUnkeyedContainer(forKey:)();
  uint64_t v21 = v2;
  uint64_t v22 = v9;
  uint64_t v28 = (void (**)(char *, uint64_t))(v5 + 8);
  sub_100055EF0((uint64_t)v26, v27);
  dispatch thunk of UnkeyedEncodingContainer.nestedContainer<A>(keyedBy:)();
  char v25 = 2;
  id v24 = v7;
  uint64_t v10 = v23;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v10)
  {
    unint64_t v11 = (char *)v22;
    swift_bridgeObjectRelease();
    uint64_t v12 = *v28;
    (*v28)(v24, v4);
    v12(v11, v4);
  }
  else
  {
    v20[1] = "fcation flags are invalid: ";
    char v23 = "dcasts.account.recommendations";
    uint64_t v13 = v21 + 16;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v21 = v13;
    if (*(void *)(*(void *)v13 + 16))
    {
      sub_1002270B4(0);
      uint64_t v14 = v22;
      uint64_t v15 = v28;
    }
    else
    {
      uint64_t v15 = v28;
      uint64_t v14 = v22;
    }
    char v16 = v24;
    swift_endAccess();
    char v25 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v22 = *v15;
    v22(v16, v4);
    sub_100055EF0((uint64_t)v26, v27);
    dispatch thunk of UnkeyedEncodingContainer.nestedContainer<A>(keyedBy:)();
    char v25 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    swift_bridgeObjectRelease();
    uint64_t v18 = v21;
    swift_beginAccess();
    if (*(void *)(*(void *)v18 + 16)) {
      sub_1002270B4(1);
    }
    swift_endAccess();
    char v25 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v19 = v22;
    v22(v16, v4);
    v19((char *)v14, v4);
  }
  return sub_10004D2D8((uint64_t)v26);
}

uint64_t sub_10037C598(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_errorRetain();
    v32[8] = static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    char v16 = (void *)static OS_os_log.notifications.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10046D010;
    swift_getErrorValue();
    uint64_t v18 = Error.localizedDescription.getter();
    uint64_t v19 = v15;
    uint64_t v20 = v12;
    uint64_t v21 = v10;
    uint64_t v22 = a5;
    uint64_t v23 = a4;
    uint64_t v25 = v24;
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_10004DA4C();
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v25;
    a4 = v23;
    a5 = v22;
    uint64_t v10 = v21;
    uint64_t v12 = v20;
    uint64_t v15 = v19;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v26 = 0;
  }
  else if (a2 >> 60 == 15)
  {
    uint64_t v26 = 0;
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    sub_10023FCA8(a1, a2);
    JSONDecoder.init()();
    type metadata accessor for RemoteNotificationSetting();
    sub_10037D464(&qword_100605FB0, v27, (void (*)(uint64_t))type metadata accessor for RemoteNotificationSetting);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    sub_10021A3FC(a1, a2);
    uint64_t v26 = aBlock[0];
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v28 = (void *)static OS_dispatch_queue.main.getter();
  BOOL v29 = (void *)swift_allocObject();
  v29[2] = a4;
  v29[3] = a5;
  v29[4] = v26;
  v29[5] = a3;
  aBlock[4] = sub_10037D434;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  aBlock[3] = &unk_100565830;
  uint64_t v30 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_retain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10037D464((unint64_t *)&qword_1005FA630, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v30);
  swift_release();

  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v15, v34);
}

uint64_t sub_10037CB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_errorRetain();
    v27[1] = static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v15 = static OS_os_log.notifications.getter();
    uint64_t v28 = a4;
    uint64_t v16 = v9;
    uint64_t v17 = (void *)v15;
    sub_100054B78(&qword_1005F7720);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10046D010;
    swift_getErrorValue();
    uint64_t v19 = Error.localizedDescription.getter();
    uint64_t v20 = a5;
    uint64_t v22 = v21;
    *(void *)(v18 + 56) = &type metadata for String;
    *(void *)(v18 + 64) = sub_10004DA4C();
    *(void *)(v18 + 32) = v19;
    *(void *)(v18 + 40) = v22;
    a5 = v20;
    os_log(_:dso:log:_:_:)();

    uint64_t v9 = v16;
    a4 = v28;
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v23 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a4;
  v24[3] = a5;
  v24[4] = a3;
  aBlock[4] = sub_10037D3BC;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  aBlock[3] = &unk_1005657E0;
  uint64_t v25 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10037D464((unint64_t *)&qword_1005FA630, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v30);
}

uint64_t sub_10037CF48()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteNotificationSetting()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for RemoteNotificationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10037D070);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNotificationType()
{
  return &type metadata for RemoteNotificationType;
}

uint64_t sub_10037D0A8()
{
  return sub_100044200(&qword_100605F60, &qword_100605F68);
}

unint64_t sub_10037D0E8()
{
  unint64_t result = qword_100605F70;
  if (!qword_100605F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605F70);
  }
  return result;
}

uint64_t sub_10037D13C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_10037B660(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_10037D194(void *a1)
{
  return sub_10037C13C(a1);
}

uint64_t sub_10037D1B8()
{
  swift_beginAccess();
  sub_10037D2E8();
  swift_bridgeObjectRetain();
  uint64_t v0 = Dictionary.description.getter();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_10037D240()
{
  unint64_t result = qword_100605F80;
  if (!qword_100605F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605F80);
  }
  return result;
}

unint64_t sub_10037D294()
{
  unint64_t result = qword_100605F90;
  if (!qword_100605F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605F90);
  }
  return result;
}

unint64_t sub_10037D2E8()
{
  unint64_t result = qword_100605FA0;
  if (!qword_100605FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605FA0);
  }
  return result;
}

uint64_t sub_10037D33C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10037D374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10037CB60(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_10037D37C()
{
  swift_release();
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_10037D3BC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_10037D3EC()
{
  swift_release();
  swift_release();
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_10037D434()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10037D464(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNotificationSettingsError()
{
  return &type metadata for RemoteNotificationSettingsError;
}

unsigned char *storeEnumTagSinglePayload for RemoteNotificationSetting.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10037D588);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNotificationSetting.CodingKeys()
{
  return &type metadata for RemoteNotificationSetting.CodingKeys;
}

unint64_t sub_10037D5C4()
{
  unint64_t result = qword_100605FB8;
  if (!qword_100605FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605FB8);
  }
  return result;
}

unint64_t sub_10037D61C()
{
  unint64_t result = qword_100605FC0;
  if (!qword_100605FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605FC0);
  }
  return result;
}

unint64_t sub_10037D674()
{
  unint64_t result = qword_100605FC8;
  if (!qword_100605FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605FC8);
  }
  return result;
}

unint64_t sub_10037D6C8(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100554740, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

ValueMetadata *type metadata accessor for UpdateEpisodePlayStateIntentImplementation()
{
  return &type metadata for UpdateEpisodePlayStateIntentImplementation;
}

uint64_t sub_10037D72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a3;
  v3[3] = a1;
  v3[4] = a2;
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for EpisodeEntity();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  uint64_t v6 = sub_100054B78(&qword_1005F7050);
  unint64_t v7 = (void *)swift_task_alloc();
  v3[14] = v7;
  void *v7 = v3;
  v7[1] = sub_10037D8D0;
  return BaseObjectGraph.inject<A>(_:)(v3 + 2, v6, v6);
}

uint64_t sub_10037D8D0()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    Swift::String v2 = sub_10037DF70;
  }
  else {
    Swift::String v2 = sub_10037D9E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10037D9E4()
{
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v20 = v0[9];
  uint64_t v21 = v0[8];
  v0[16] = v0[2];
  UpdateEpisodePlayStateIntent.episode.getter();
  uint64_t v4 = EpisodeEntity.episodeStateIdentifier.getter();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[17] = v9;
  v0[18] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v1, v3);
  v0[19] = dispatch thunk of EpisodeStateController.stateMachine(for:)();
  sub_1001DD848(v4, v6, v8);
  dispatch thunk of EpisodeStateMachine.currentState.getter();
  uint64_t updated = UpdateEpisodePlayStateIntent.playState.getter();
  sub_1001DD65C(v20, v21);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 3) < 2 || EnumCaseMultiPayload == 1)
  {
    if (updated != 2) {
      goto LABEL_7;
    }
LABEL_11:
    uint64_t v17 = v0[9];
    uint64_t v18 = v0[3];
    swift_release();
    swift_release();
    sub_1001DD7D4(v17, v18);
    (*(void (**)(void, void, uint64_t, void))(v0[7] + 56))(v0[3], 0, 1, v0[6]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  if (EnumCaseMultiPayload != 2)
  {
    sub_1001DD6C0(v0[8]);
    goto LABEL_11;
  }
  sub_1001B6BC4(v0[8]);
  if (!updated) {
    goto LABEL_11;
  }
LABEL_7:
  UpdateEpisodePlayStateIntent.episode.getter();
  uint64_t v12 = UpdateEpisodePlayStateIntent.playState.getter();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[20] = v13;
  void *v13 = v0;
  v13[1] = sub_10037DC70;
  uint64_t v14 = v0[12];
  uint64_t v15 = v0[5];
  return sub_10037E3E0(v14, v12, v15);
}

uint64_t sub_10037DC70()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 96);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_10037DEC8;
  }
  else {
    uint64_t v5 = sub_10037DDF0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10037DDF0()
{
  uint64_t v1 = v0[9];
  dispatch thunk of EpisodeStateMachine.currentState.getter();
  swift_release();
  swift_release();
  sub_1001DD6C0(v1);
  (*(void (**)(void, void, uint64_t, void))(v0[7] + 56))(v0[3], 0, 1, v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10037DEC8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  swift_release();
  sub_1001DD6C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10037DF70()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037DFF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v17[1] = a5;
  uint64_t v9 = sub_100054B78(&qword_100605FF0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin();
  uint64_t v12 = a2[3];
  v17[0] = a2[4];
  sub_100041A98(a2, v12);
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10046D010;
  *(void *)(v13 + 32) = a3;
  *(void *)(v13 + 40) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  swift_bridgeObjectRetain();
  dispatch thunk of LibraryActionControllerProtocol.mark(episodeUUIDS:as:completion:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10037E1B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v12[1] = a4;
  uint64_t v6 = sub_100054B78(&qword_100605FF0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin();
  sub_100041A98(a2, a2[3]);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  dispatch thunk of LibraryActionControllerProtocol.mark(episodeOffers:as:completion:)();
  return swift_release();
}

uint64_t sub_10037E330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10000B8F0;
  return sub_10037D72C(a1, a2, a3);
}

uint64_t sub_10037E3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[14] = a2;
  v3[15] = a3;
  v3[13] = a1;
  uint64_t EpisodeOffersIntent = type metadata accessor for FetchEpisodeOffersIntent();
  v3[16] = EpisodeOffersIntent;
  v3[17] = *(void *)(EpisodeOffersIntent - 8);
  v3[18] = swift_task_alloc();
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_100609320);
  uint64_t v6 = (void *)swift_task_alloc();
  v3[19] = v6;
  void *v6 = v3;
  v6[1] = sub_10037E504;
  return BaseObjectGraph.inject<A>(_:)(v3 + 2, v5, v5);
}

uint64_t sub_10037E504()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10037EF58, 0, 0);
  }
  else
  {
    uint64_t v3 = sub_100054B78(&qword_1005F7560);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 168) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_10037E6A4;
    return BaseObjectGraph.inject<A>(_:)(v2 + 56, v3, v3);
  }
}

uint64_t sub_10037E6A4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10037EFBC;
  }
  else {
    uint64_t v2 = sub_10037E7B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10037E7B8()
{
  uint64_t v1 = EpisodeEntity.uuid.getter();
  v0[23] = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    uint64_t v5 = v0[14];
    uint64_t v6 = (void *)swift_task_alloc();
    v0[24] = v6;
    v6[2] = v0 + 7;
    v6[3] = v3;
    v6[4] = v4;
    v6[5] = v5;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[25] = v7;
    void *v7 = v0;
    v7[1] = sub_10037EA00;
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
  else
  {
    uint64_t v8 = v0[5];
    uint64_t v9 = v0[6];
    sub_100041A98(v0 + 2, v8);
    sub_100054B78((uint64_t *)&unk_1005F8260);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10046D010;
    *(void *)(v10 + 32) = EpisodeEntity.adamID.getter();
    FetchEpisodeOffersIntent.init(adamIDs:)();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[26] = v11;
    uint64_t v12 = sub_10005E3D8(&qword_100601800, (void (*)(uint64_t))&type metadata accessor for FetchEpisodeOffersIntent);
    *uint64_t v11 = v0;
    v11[1] = sub_10037EBB0;
    uint64_t v13 = v0[18];
    uint64_t v14 = v0[15];
    uint64_t v15 = v0[16];
    return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 12, v13, v14, v15, v12, v8, v9);
  }
}

uint64_t sub_10037EA00()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_10037EB34, 0, 0);
}

uint64_t sub_10037EB34()
{
  sub_10004D2D8(v0 + 56);
  sub_10004D2D8(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037EBB0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 144);
  uint64_t v3 = *(void *)(*(void *)v1 + 136);
  uint64_t v4 = *(void *)(*(void *)v1 + 128);
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_10037F028;
  }
  else {
    uint64_t v5 = sub_10037ED20;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10037ED20()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  v0[28] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[29] = v3;
  v3[2] = v0 + 7;
  v3[3] = v2;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[30] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10037EE24;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10037EE24()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_10037F12C, 0, 0);
}

uint64_t sub_10037EF58()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037EFBC()
{
  sub_10004D2D8(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037F028()
{
  sub_10004D2D8(v0 + 56);
  sub_10004D2D8(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037F0A0(uint64_t a1)
{
  return sub_10037E1B4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10037F0AC(uint64_t a1)
{
  return sub_10037DFF8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10037F0C4()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10037F130()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v2 = &v14[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v4 = &v14[-v3];
  sub_100054B78((uint64_t *)&unk_100600600);
  __chkstk_darwin();
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  if (*(void *)(v0 + 16))
  {
    type metadata accessor for OtherContextActionConfiguration(0);
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v6, result + qword_10061AA78, v7);
      uint64_t v12 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32);
      v12(v10, v6, v7);
      v12(v4, v10, v7);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      sub_100222DB4((uint64_t)v4, (uint64_t)v2);
      uint64_t v13 = v0 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_link;
      swift_beginAccess();
      sub_100222E1C((uint64_t)v2, v13);
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_10037F394()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_link;
  swift_beginAccess();
  sub_100054BBC(v7, (uint64_t)v2, (uint64_t *)&unk_1005F7750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_100054B1C((uint64_t)v2, (uint64_t *)&unk_1005F7750);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v9 = [self generalPasteboard];
  URL.absoluteString.getter();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setString:v10];

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10037F58C()
{
  swift_release();
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_link, (uint64_t *)&unk_1005F7750);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_contextActionType, &qword_1005F9A58);

  return swift_deallocClassInstance();
}

uint64_t sub_10037F678()
{
  return type metadata accessor for CopyLinkOtherContextAction();
}

uint64_t type metadata accessor for CopyLinkOtherContextAction()
{
  uint64_t result = qword_100606020;
  if (!qword_100606020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10037F6CC()
{
  sub_1003759DC(319, (unint64_t *)&qword_1005F6DC8, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    type metadata accessor for MetricsLabel();
    if (v1 <= 0x3F)
    {
      sub_1003759DC(319, (unint64_t *)&qword_100605BC0, (void (*)(uint64_t))&type metadata accessor for ContextActionType);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_10037F82C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_systemImageName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10037F868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_10037F8DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100054BBC(v1 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_contextActionType, a1, &qword_1005F9A58);
}

BOOL sub_10037F90C()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  unint64_t v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (!*(void *)(v0 + 16)) {
    return 0;
  }
  type metadata accessor for OtherContextActionConfiguration(0);
  if (!swift_dynamicCastClass()) {
    return 0;
  }
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_link;
  swift_beginAccess();
  sub_100054BBC(v3, (uint64_t)v2, (uint64_t *)&unk_1005F7750);
  uint64_t v4 = type metadata accessor for URL();
  BOOL v5 = (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4) != 1;
  sub_100054B1C((uint64_t)v2, (uint64_t *)&unk_1005F7750);
  return v5;
}

uint64_t sub_10037FA50(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002687C4(a1, a2, WitnessTable);
}

void *sub_10037FAB0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_10037FB10(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_10037FB70(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

unint64_t sub_10037FBD0(uint64_t a1)
{
  unint64_t result = sub_10037FBF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10037FBF8()
{
  unint64_t result = qword_100608C40;
  if (!qword_100608C40)
  {
    type metadata accessor for CopyLinkOtherContextAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100608C40);
  }
  return result;
}

uint64_t sub_10037FC50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v3 = sub_100054B78((uint64_t *)&unk_100600580);
  __chkstk_darwin(v3 - 8);
  v106 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_100606120);
  __chkstk_darwin(v5 - 8);
  v114 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1005FB028);
  __chkstk_darwin(v7 - 8);
  uint64_t v113 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_100606128);
  __chkstk_darwin(v9 - 8);
  v112 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v11 - 8);
  v111 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for ShowOffer();
  uint64_t v13 = *(void *)(v115 - 8);
  uint64_t v14 = __chkstk_darwin(v115);
  NSString v86 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v108 = (char *)&v85 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  id v99 = (char *)&v85 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  id v94 = (char *)&v85 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v85 - v22;
  uint64_t v24 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  v104 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v110 = (char *)&v85 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v85 - v29;
  uint64_t v31 = type metadata accessor for URL();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v85 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = EpisodeOffer.title.getter();
  uint64_t v105 = v35;
  EpisodeOffer.streamUrl.getter();
  uint64_t v36 = URL.absoluteString.getter();
  uint64_t v101 = v37;
  uint64_t v102 = v36;
  char v38 = *(void (**)(char *, uint64_t))(v32 + 8);
  v38(v34, v31);
  EpisodeOffer.showOffer.getter();
  ShowOffer.feedUrl.getter();
  v109 = *(void (**)(char *, uint64_t))(v13 + 8);
  v109(v23, v115);
  uint64_t v39 = v32;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_100054B1C((uint64_t)v30, (uint64_t *)&unk_1005F7750);
    uint64_t v97 = 0;
    uint64_t v98 = 0;
  }
  else
  {
    uint64_t v40 = URL.absoluteString.getter();
    uint64_t v97 = v41;
    uint64_t v98 = v40;
    v38(v30, v31);
  }
  uint64_t v42 = v31;
  uint64_t v43 = a1;
  uint64_t v96 = EpisodeOffer.contentId.getter();
  char v44 = v94;
  EpisodeOffer.showOffer.getter();
  uint64_t v95 = ShowOffer.adamId.getter();
  uint64_t v45 = v44;
  uint64_t v46 = v115;
  uint64_t v47 = v109;
  v109(v45, v115);
  uint64_t v48 = v99;
  EpisodeOffer.showOffer.getter();
  id v94 = (char *)ShowOffer.author.getter();
  uint64_t v93 = v49;
  v47(v48, v46);
  uint64_t v91 = EpisodeOffer.duration.getter();
  int v90 = v50;
  uint64_t v51 = (char *)(v39 + 56);
  unint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  v52(v110, 1, 1, v42);
  uint64_t v53 = v108;
  EpisodeOffer.showOffer.getter();
  int v88 = ShowOffer.subscribable.getter();
  v47(v53, v46);
  uint64_t v54 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v111, 1, 1, v54);
  int v89 = EpisodeOffer.isEntitledOffer.getter();
  char v55 = EpisodeOffer.contentRating.getter();
  unint64_t v56 = v114;
  if (v55 == 2)
  {
    LODWORD(v108) = 0;
  }
  else
  {
    uint64_t v57 = ContentRating.rawValue.getter();
    uint64_t v59 = v58;
    LODWORD(v108) = 1;
    if (v57 != ContentRating.rawValue.getter() || v59 != v60) {
      LODWORD(v108) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (EpisodeOffer.contentRating.getter() == 2)
  {
    int v61 = 0;
    goto LABEL_17;
  }
  uint64_t v62 = ContentRating.rawValue.getter();
  uint64_t v64 = v63;
  if (v62 == ContentRating.rawValue.getter() && v64 == v65)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v61 = 0;
    if ((v66 & 1) == 0) {
      goto LABEL_17;
    }
  }
  type metadata accessor for RestrictionsController();
  int v61 = static RestrictionsController.isExplicitContentAllowed.getter() ^ 1;
LABEL_17:
  int v87 = v61;
  uint64_t v67 = enum case for PodcastsMediaLibrary.MediaItem.ItemType.stream(_:);
  uint64_t v68 = type metadata accessor for PodcastsMediaLibrary.MediaItem.ItemType();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = v112;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 104))(v112, v67, v68);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v68);
  sub_100380840(v113);
  char v71 = EpisodeOffer.mediaType.getter();
  id v99 = v51;
  uint64_t v100 = v42;
  NSString v92 = v52;
  switch(v71)
  {
    case 1:
      uint64_t v72 = (unsigned int *)&enum case for PodcastEpisodeAttributes.MediaKind.video(_:);
      break;
    case 2:
      uint64_t v72 = (unsigned int *)&enum case for PodcastEpisodeAttributes.MediaKind.external(_:);
      break;
    default:
      uint64_t v72 = (unsigned int *)&enum case for PodcastEpisodeAttributes.MediaKind.audio(_:);
      break;
  }
  uint64_t v73 = *v72;
  uint64_t v74 = type metadata accessor for PodcastEpisodeAttributes.MediaKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 104))(v56, v73, v74);
  uint64_t v75 = v86;
  type metadata accessor for PodcastEpisodeAttributes.MediaKind();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v56, 0, 1, v74);
  EpisodeOffer.episodeNumber.getter();
  EpisodeOffer.seasonNumber.getter();
  EpisodeOffer.showOffer.getter();
  ShowOffer.showType.getter();
  v109(v75, v115);
  uint64_t v76 = ShowType.rawValue.getter();
  uint64_t v78 = v77;
  if (v76 != ShowType.rawValue.getter() || v78 != v79) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v80 = (uint64_t)v106;
  EpisodeOffer.transcriptInfo.getter();
  uint64_t v81 = type metadata accessor for TranscriptRequestInformation();
  uint64_t v82 = *(void *)(v81 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81) == 1)
  {
    sub_100054B1C(v80, (uint64_t *)&unk_100600580);
  }
  else
  {
    TranscriptRequestInformation.ttmlIdentifier.getter();
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
  }
  v92(v104, 1, 1, v100);
  sub_1003809B8((uint64_t)_swiftEmptyArrayStorage);
  PodcastsMediaLibrary.MediaItem.init(title:assetURL:feedURL:storeTrackId:podcastStoreId:uuid:guid:externalContentID:author:duration:playhead:artworkURL:itemDescription:serverArtwork:isSubscribable:releaseDate:album:isSubscriptionActive:isExplicit:isRestricted:subscriptionRequired:itemType:priceType:mediaKind:episodeNumber:seasonNumber:podcastIsSerial:showArtworkTemplateURL:artworkInfo:transcriptIdentifier:isAppleNewsEpisode:isAppleMusicEpisode:transcriptSource:shareURL:podcastUUID:restorationContentItemID:isShallow:feedDeleted:podcastSubscriptionState:podcastPageContext:)();
  uint64_t v83 = type metadata accessor for EpisodeOffer();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v43, v83);
}

uint64_t sub_100380840@<X0>(uint64_t a1@<X8>)
{
  switch(EpisodeOffer.priceType.getter())
  {
    case 1:
      uint64_t v7 = (unsigned int *)&enum case for PriceType.stdq(_:);
      goto LABEL_7;
    case 2:
      uint64_t v7 = (unsigned int *)&enum case for PriceType.psub(_:);
      goto LABEL_7;
    case 3:
      uint64_t v7 = (unsigned int *)&enum case for PriceType.plus(_:);
      goto LABEL_7;
    case 4:
      uint64_t v7 = (unsigned int *)&enum case for PriceType.prmo(_:);
LABEL_7:
      uint64_t v8 = *v7;
      uint64_t v9 = type metadata accessor for PriceType();
      uint64_t v11 = *(void *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104))(a1, v8, v9);
      uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
      uint64_t v5 = a1;
      uint64_t v6 = 0;
      uint64_t v4 = v9;
      break;
    default:
      uint64_t v2 = type metadata accessor for PriceType();
      uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
      uint64_t v4 = v2;
      uint64_t v5 = a1;
      uint64_t v6 = 1;
      break;
  }

  return v3(v5, v6, 1, v4);
}

unint64_t sub_1003809B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100054B78((uint64_t *)&unk_100606130);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_10023FCA8(v7, v8);
    unint64_t result = sub_100380AE0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (uint64_t *)(v2[7] + 16 * result);
    uint64_t *v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100380AE0(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100380B58(a1, a2, v4);
}

unint64_t sub_100380B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        uint64_t v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_100380CA0(unint64_t a1, uint64_t a2, int a3, int a4, int a5, _OWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v140 = a8;
  uint64_t v120 = a7;
  v116 = a6;
  int v138 = a4;
  int v139 = a5;
  LODWORD(v141) = a3;
  uint64_t v121 = a2;
  unint64_t v132 = a1;
  uint64_t v118 = sub_100054B78((uint64_t *)&unk_1005F8D00);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v11 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v129 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v130 = v14;
  uint64_t v131 = (uint64_t)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v128 = (char *)&v98 - v15;
  uint64_t v127 = sub_100054B78(&qword_1006061B8);
  uint64_t v126 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v125 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100054B78(&qword_1006061C0);
  uint64_t v133 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  v143 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78(&qword_1006061C8);
  uint64_t v136 = *(void *)(v18 - 8);
  uint64_t v137 = v18;
  __chkstk_darwin(v18);
  uint64_t v134 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v20 - 8);
  id v142 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100054B78(&qword_100605E18);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  id v99 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100054B78(&qword_100605E20);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v119 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_100054B78(&qword_1006061D0);
  uint64_t v106 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  v104 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100054B78(&qword_1006061D8);
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v105 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100054B78(&qword_1006061E0);
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v107 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100054B78(&qword_1006061E8);
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v110 = (char *)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100054B78(&qword_1006061F0);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v98 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100054B78((uint64_t *)&unk_1006061F8);
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for EpisodePlayState();
  uint64_t v122 = *(void *)(v36 - 8);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v124 = (uint64_t)&v98 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = v38;
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v98 - v39;
  uint64_t v41 = v9;
  uint64_t v42 = dispatch thunk of LegacyLockup.playAction.getter();
  if (v42)
  {
    uint64_t v118 = v42;
    uint64_t v117 = a9;
    LibraryEpisodeLockup.uuid.getter();
    EpisodeStateController.stateMachine(for:)();
    swift_bridgeObjectRelease();
    dispatch thunk of EpisodeStateMachine.currentState.getter();
    swift_release();
    *(void *)&long long v144 = 0;
    uint64_t v121 = sub_100054B78((uint64_t *)&unk_10060A480);
    Just.init(_:)();
    sub_100054B78(&qword_100603F70);
    Just.setFailureType<A>(to:)();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    sub_100044200(&qword_100606208, (uint64_t *)&unk_1006061F8);
    uint64_t v43 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    uint64_t v44 = (uint64_t)v40;
    if (v141)
    {
      id v45 = [self sharedInstance];
      id v46 = [v45 mainQueueContext];

      uint64_t v141 = v43;
      uint64_t v47 = LibraryEpisodeLockup.podcastUuid.getter();
      uint64_t v49 = v48;
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = v47;
      *(void *)(v50 + 24) = v49;
      sub_100054B78(&qword_1005F76A0);
      uint64_t v51 = NSManagedObjectContext.performAndPublish<A>(_:)();

      swift_release();
      *(void *)&long long v144 = v51;
      sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      id v145 = (id)static OS_dispatch_queue.uiAssetPreparationQueue.getter();
      uint64_t v52 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v53 = (uint64_t)v142;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v142, 1, 1, v52);
      sub_100054B78((uint64_t *)&unk_10060A520);
      sub_100044200((unint64_t *)&unk_100605E60, (uint64_t *)&unk_10060A520);
      sub_100059BE0();
      uint64_t v54 = v99;
      Publisher.receive<A>(on:options:)();
      sub_100054B1C(v53, &qword_1005F9F20);

      swift_release();
      type metadata accessor for ArtworkModel();
      sub_100044200((unint64_t *)&unk_100605E70, &qword_100605E18);
      uint64_t v55 = v101;
      Publisher.compactMap<A>(_:)();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v54, v55);
      uint64_t v101 = v41;
      sub_100056D54(v120, (uint64_t)&v144);
      uint64_t v56 = swift_allocObject();
      sub_100042FC4(&v144, v56 + 16);
      uint64_t v57 = v116;
      long long v58 = v116[1];
      *(_OWORD *)(v56 + 56) = *v116;
      *(_OWORD *)(v56 + 72) = v58;
      *(_OWORD *)(v56 + 88) = v57[2];
      *(void *)(v56 + 104) = *((void *)v57 + 6);
      static Subscribers.Demand.unlimited.getter();
      sub_10004D29C(0, (unint64_t *)&unk_1006061A0);
      sub_100054B78((uint64_t *)&unk_100605E80);
      sub_100044200(&qword_100606228, &qword_100605E20);
      sub_100044200((unint64_t *)&unk_1006054B0, (uint64_t *)&unk_100605E80);
      uint64_t v59 = v104;
      uint64_t v60 = v103;
      int v61 = v119;
      Publisher.flatMap<A, B>(maxPublishers:_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v61, v60);
      uint64_t v41 = v101;
      sub_100056D54(v120, (uint64_t)&v144);
      uint64_t v62 = swift_allocObject();
      sub_100042FC4(&v144, v62 + 16);
      long long v63 = v57[1];
      *(_OWORD *)(v62 + 56) = *v57;
      *(_OWORD *)(v62 + 72) = v63;
      *(_OWORD *)(v62 + 88) = v57[2];
      *(void *)(v62 + 104) = *((void *)v57 + 6);
      sub_100044200(&qword_100606230, &qword_1006061D0);
      uint64_t v64 = v105;
      uint64_t v65 = v108;
      Publisher.catch<A>(_:)();
      swift_release();
      uint64_t v66 = v65;
      uint64_t v67 = (uint64_t)v142;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v59, v66);
      sub_100044200(&qword_100606238, &qword_1006061D8);
      uint64_t v68 = v107;
      uint64_t v69 = v111;
      Publisher.map<A>(_:)();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v64, v69);
      *(void *)&long long v144 = 0;
      sub_100044200(&qword_100606240, &qword_1006061E0);
      uint64_t v70 = v110;
      uint64_t v71 = v113;
      Publisher.replaceEmpty(with:)();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v68, v71);
      sub_100044200(&qword_100606248, &qword_1006061E8);
      uint64_t v72 = v115;
      uint64_t v43 = Publisher.eraseToAnyPublisher()();
      swift_release();
      (*(void (**)(char *, uint64_t))(v114 + 8))(v70, v72);
    }
    else
    {
      uint64_t v67 = (uint64_t)v142;
    }
    uint64_t v98 = v44;
    uint64_t v141 = v43;
    *(void *)&long long v144 = v43;
    id v145 = 0;
    sub_100054B78((uint64_t *)&unk_100605440);
    sub_100044200((unint64_t *)&unk_100605450, (uint64_t *)&unk_100605440);
    uint64_t v75 = v125;
    Publisher.replaceError(with:)();
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    *(void *)&long long v144 = static OS_dispatch_queue.main.getter();
    uint64_t v76 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v67, 1, 1, v76);
    sub_100044200(&qword_100606210, &qword_1006061B8);
    sub_100059BE0();
    uint64_t v77 = v127;
    Publisher.receive<A>(on:options:)();
    sub_100054B1C(v67, &qword_1005F9F20);

    (*(void (**)(char *, uint64_t))(v126 + 8))(v75, v77);
    uint64_t v78 = (uint64_t)v128;
    LibraryEpisodeLockup.assetFileUrl.getter();
    id v142 = (char *)LegacyLockup.title.getter();
    uint64_t v127 = v79;
    uint64_t v80 = v131;
    sub_100053820(v78, v131, (uint64_t *)&unk_1005F7750);
    uint64_t v81 = v124;
    sub_1003896AC(v44, v124, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
    sub_100056D54(v132, (uint64_t)&v144);
    unint64_t v82 = (*(unsigned __int8 *)(v129 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
    unint64_t v83 = (v130 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v84 = (*(unsigned __int8 *)(v122 + 80) + v83 + 16) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
    unint64_t v85 = (v123 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v132 = (v85 + 63) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v86 = swift_allocObject();
    sub_100053820(v80, v86 + v82, (uint64_t *)&unk_1005F7750);
    int v87 = (char **)(v86 + v83);
    uint64_t v88 = v127;
    *int v87 = v142;
    v87[1] = (char *)v88;
    sub_1003867D8(v81, v86 + v84, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
    sub_100042FC4(&v144, v86 + v85);
    unint64_t v89 = v86 + ((v85 + 47) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v89 = v41;
    *(unsigned char *)(v89 + 8) = v138 & 1;
    unint64_t v90 = v86 + v132;
    *(void *)unint64_t v90 = v118;
    *(unsigned char *)(v90 + 8) = v139;
    uint64_t v91 = (void *)(v86 + ((v85 + 79) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v92 = v117;
    *uint64_t v91 = v140;
    v91[1] = v92;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100054B78(&qword_1005FD280);
    sub_100044200(&qword_100606218, &qword_1006061C0);
    id v94 = v134;
    uint64_t v93 = v135;
    uint64_t v95 = v143;
    Publisher.map<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v95, v93);
    sub_100044200(&qword_100606220, &qword_1006061C8);
    uint64_t v96 = v137;
    uint64_t v74 = Publisher.eraseToAnyPublisher()();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v136 + 8))(v94, v96);
    sub_100389714(v98, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
  }
  else
  {
    *(void *)&long long v144 = 0;
    sub_100054B78(&qword_1005FD280);
    Just.init(_:)();
    sub_100044200(&qword_1005F8D10, (uint64_t *)&unk_1005F8D00);
    uint64_t v73 = v118;
    uint64_t v74 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v11, v73);
  }
  return v74;
}

uint64_t sub_1003820B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v52 = a6;
  uint64_t v53 = a7;
  int v51 = a3;
  uint64_t v45 = a2;
  uint64_t v43 = a1;
  uint64_t v9 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100605E30);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100054B78(&qword_100606140);
  uint64_t v46 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100054B78(&qword_100606148);
  uint64_t v49 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100054B78((uint64_t *)&unk_100606150);
  uint64_t v50 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v42 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003834FC(a4, a5, (uint64_t)v15);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  *(void *)&v54[0] = static OS_dispatch_queue.main.getter();
  uint64_t v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
  sub_100044200((unint64_t *)&unk_100606160, (uint64_t *)&unk_100605E30);
  sub_100059BE0();
  Publisher.receive<A>(on:options:)();
  sub_100054B1C((uint64_t)v11, &qword_1005F9F20);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v22 = LegacyLockup.title.getter();
  uint64_t v24 = v23;
  uint64_t v25 = LibraryShowLockup.uuid.getter();
  uint64_t v27 = v26;
  char v28 = LegacyLockup.isExplicit.getter();
  uint64_t v29 = LegacyLockup.subtitle.getter();
  uint64_t v31 = v30;
  sub_100056D54(v43, (uint64_t)v54);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v29;
  *(void *)(v32 + 24) = v31;
  *(unsigned char *)(v32 + 32) = v28 & 1;
  sub_100042FC4(v54, v32 + 40);
  *(void *)(v32 + 80) = v22;
  *(void *)(v32 + 88) = v24;
  uint64_t v33 = v45;
  sub_100053820(v45, v32 + 96, (uint64_t *)&unk_100606170);
  *(void *)(v32 + 168) = v25;
  *(void *)(v32 + 176) = v27;
  *(unsigned char *)(v32 + 184) = v51;
  uint64_t v34 = v53;
  *(void *)(v32 + 192) = v52;
  *(void *)(v32 + 200) = v34;
  sub_100386454(v33, (void (*)(void, void, void, void, void, void, void, void, char))sub_1002DDB24);
  swift_retain();
  sub_100054B78(&qword_1005FD280);
  sub_100044200(&qword_100606180, &qword_100606140);
  uint64_t v35 = v44;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v35);
  *(void *)&v54[0] = 0;
  sub_100044200(&qword_100606188, &qword_100606148);
  uint64_t v36 = v42;
  uint64_t v37 = v47;
  Publisher.replaceError(with:)();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v37);
  sub_100044200((unint64_t *)&unk_100606190, (uint64_t *)&unk_100606150);
  uint64_t v38 = v48;
  uint64_t v39 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v38);
  return v39;
}

uint64_t sub_10038266C@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_10038269C(void *a1, NSObject *a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = (void *)(a3 + 16);
  swift_beginAccess();
  id v15 = a4;
  unint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_100386BF0(v16, (uint64_t)v15);
  char v19 = v18;
  swift_bridgeObjectRelease();

  if (v19) {
    goto LABEL_7;
  }
  id v20 = sub_10038801C(a6, a1, a8, a9);
  if (!v20) {
    goto LABEL_7;
  }
  uint64_t v21 = v20;
  swift_beginAccess();

  if (!(*v14 >> 62))
  {
    uint64_t v22 = *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v23 = v21;
    if (v22 >= v17) {
      goto LABEL_5;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v24 = v21;
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v25 < v17) {
    goto LABEL_9;
  }
LABEL_5:
  if ((v17 & 0x8000000000000000) == 0)
  {
    sub_1001FAC4C(v17, v17, (uint64_t)v21);
    swift_endAccess();

LABEL_7:
    dispatch_group_leave(a2);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_100382814@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LegacyLockup.title.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100382840@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_100386CE0(a1, a2, a3, 0, 0, a4, a5);
  *a6 = result;
  return result;
}

void sub_100382890(void *a1, NSObject *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t v16 = (void *)(a3 + 16);
  swift_beginAccess();
  id v17 = a4;
  unint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_100386BF0(v18, (uint64_t)v17);
  char v21 = v20;
  swift_bridgeObjectRelease();

  if (v21) {
    goto LABEL_7;
  }
  uint64_t v22 = sub_100386CE0(a6, a7, a8, a1, 0, a10, a11);
  if (!v22) {
    goto LABEL_7;
  }
  id v23 = (void *)v22;
  swift_beginAccess();

  if (!(*v16 >> 62))
  {
    uint64_t v24 = *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v25 = v23;
    if (v24 >= v19) {
      goto LABEL_5;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v26 = v23;
  swift_bridgeObjectRetain();
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v27 < v19) {
    goto LABEL_9;
  }
LABEL_5:
  if ((v19 & 0x8000000000000000) == 0)
  {
    sub_1001FAC4C(v19, v19, (uint64_t)v23);
    swift_endAccess();

LABEL_7:
    dispatch_group_leave(a2);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_100382A14(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  a1(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100382A7C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v24 = a3;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ArtworkModel();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ArtworkRequest();
  uint64_t v14 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a2[3];
  v21[1] = a2[4];
  sub_100041A98(a2, v17);
  sub_1003896AC(v22, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  uint64_t v18 = type metadata accessor for CropCode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  static Logger.artwork.getter();
  static os_log_type_t.info.getter();
  SignpostAndLogTrace(domain:level:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
  uint64_t v19 = dispatch thunk of ImageProvider.load(artwork:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v23);
  uint64_t *v24 = v19;
  return result;
}

uint64_t sub_100382D7C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  static Logger.artwork.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v24 = a4;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = v8;
    unint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v25 = v12;
    uint64_t v26 = v17;
    uint64_t v23 = a3;
    *(_DWORD *)unint64_t v16 = 136315138;
    char v21 = v16 + 4;
    swift_errorRetain();
    sub_100054B78(&qword_100603F70);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v25 = sub_10004B974(v18, v19, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a4 = v24;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to load show artwork: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_100041A98(a2, a2[3]);
  uint64_t result = dispatch thunk of ImageProvider.placeholder(for:)();
  *a4 = result;
  return result;
}

void sub_100382FFC(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13)
{
  uint64_t v55 = a3;
  long long v58 = a9;
  uint64_t v20 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = &v52[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v56 = *(void *)(v23 - 8);
  uint64_t v57 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = &v52[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = *a1;
  uint64_t v27 = type metadata accessor for URL();
  int v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(a2, 1, v27);
  id v29 = 0;
  uint64_t v59 = a5;
  if (v28 != 1)
  {
    id v30 = [self configurationWithPointSize:4 weight:-1 scale:16.0];
    NSString v31 = String._bridgeToObjectiveC()();
    id v29 = [self systemImageNamed:v31 withConfiguration:v30];
  }
  swift_bridgeObjectRetain();
  sub_1001B67C0(a6, a7, a8 & 1);
  id v32 = v26;
  id v33 = v29;
  if (a4)
  {
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v34 = 0;
  }
  uint64_t v54 = a12;
  uint64_t v55 = a13;
  int v53 = a11;
  id v35 = objc_allocWithZone((Class)CPListItem);
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v37 = [v35 initWithText:v34 detailText:v36 image:v32 accessoryImage:v33 accessoryType:0];

  id v61 = v37;
  id v38 = v37;
  uint64_t v39 = sub_1001B6954();
  if ((v40 & 1) == 0) {
    [v38 setPlaybackProgress:*(double *)&v39];
  }

  *(void *)uint64_t v25 = a10;
  v25[8] = 0;
  uint64_t v41 = v57;
  swift_storeEnumTagMultiPayload();
  id v42 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
  swift_retain();
  uint64_t v43 = [v42 init];
  sub_1003867D8((uint64_t)v25, (uint64_t)v22, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v56 + 56))(v22, 0, 1, v41);
  uint64_t v44 = (uint64_t)&v43[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934((uint64_t)v22, v44);
  swift_endAccess();
  v43[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = v53;
  sub_10004D29C(0, &qword_1005F88B0);
  uint64_t v45 = NSString.init(stringLiteral:)();
  uint64_t v46 = v43;
  sub_1001BFA4C((uint64_t)v45, (uint64_t)v43);

  uint64_t v47 = v61;
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v55;
  *(void *)(v48 + 16) = v54;
  *(void *)(v48 + 24) = v49;
  aBlock[4] = sub_100386450;
  aBlock[5] = v48;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BF99C;
  aBlock[3] = &unk_100565C40;
  uint64_t v50 = _Block_copy(aBlock);
  id v51 = v47;
  swift_retain();
  swift_release();
  [v51 setHandler:v50];

  _Block_release(v50);
  void *v58 = v51;
}

uint64_t sub_1003834FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v41 = a3;
  uint64_t v4 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_100605E18);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78(&qword_100605E20);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  uint64_t v37 = v12;
  __chkstk_darwin(v11);
  os_log_type_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78(&qword_100605E28);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  uint64_t v40 = v16;
  __chkstk_darwin(v15);
  id v35 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = [self sharedInstance];
  id v19 = [v18 mainQueueContext];

  uint64_t v20 = LibraryShowLockup.uuid.getter();
  uint64_t v22 = v21;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v20;
  *(void *)(v23 + 24) = v22;
  sub_100054B78(&qword_1005F76A0);
  uint64_t v24 = NSManagedObjectContext.performAndPublish<A>(_:)();

  swift_release();
  *(void *)&v42[0] = v24;
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v43 = (id)static OS_dispatch_queue.uiAssetPreparationQueue.getter();
  uint64_t v25 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 1, 1, v25);
  sub_100054B78((uint64_t *)&unk_10060A520);
  sub_100044200((unint64_t *)&unk_100605E60, (uint64_t *)&unk_10060A520);
  sub_100059BE0();
  Publisher.receive<A>(on:options:)();
  sub_100054B1C((uint64_t)v6, &qword_1005F9F20);

  swift_release();
  type metadata accessor for ArtworkModel();
  sub_100044200((unint64_t *)&unk_100605E70, &qword_100605E18);
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v26 = swift_allocObject();
  long long v27 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v26 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v26 + 32) = v27;
  *(_OWORD *)(v26 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v26 + 64) = *(void *)(a1 + 48);
  type metadata accessor for ArtworkRequest();
  id v29 = v35;
  uint64_t v28 = v36;
  Publishers.CompactMap.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v28);
  sub_100056D54(v38, (uint64_t)v42);
  uint64_t v30 = swift_allocObject();
  sub_100042FC4(v42, v30 + 16);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_100379E9C;
  *(void *)(v31 + 24) = v30;
  static Subscribers.Demand.unlimited.getter();
  sub_10004D29C(0, (unint64_t *)&unk_1006061A0);
  sub_100054B78((uint64_t *)&unk_100605E80);
  sub_100044200(&qword_1006061B0, &qword_100605E28);
  sub_100044200((unint64_t *)&unk_1006054B0, (uint64_t *)&unk_100605E80);
  uint64_t v32 = v39;
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v29, v32);
}

void sub_100383AEC(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, char a12, void *a13, uint64_t a14)
{
  uint64_t v14 = a8;
  uint64_t v99 = a7;
  id v88 = a6;
  sub_100053820(a8, (uint64_t)v108, (uint64_t *)&unk_100606170);
  uint64_t v97 = v108[0];
  uint64_t v96 = v108[1];
  uint64_t v95 = v108[2];
  uint64_t v94 = v108[3];
  uint64_t v93 = v108[4];
  uint64_t v92 = v108[5];
  uint64_t v91 = v108[6];
  uint64_t v90 = v108[7];
  int v89 = v109;
  uint64_t v21 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v21 - 8);
  uint64_t v102 = (uint64_t)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v101 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v100 = (id *)((char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v98 = *a1;
  if (a3)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_10004CEAC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v26 = *((void *)v24 + 2);
    unint64_t v25 = *((void *)v24 + 3);
    if (v26 >= v25 >> 1) {
      uint64_t v24 = sub_10004CEAC((char *)(v25 > 1), v26 + 1, 1, v24);
    }
    *((void *)v24 + 2) = v26 + 1;
    long long v27 = &v24[16 * v26];
    *((void *)v27 + 4) = a2;
    *((void *)v27 + 5) = a3;
  }
  else
  {
    uint64_t v24 = (char *)_swiftEmptyArrayStorage;
  }
  v104 = a9;
  uint64_t v103 = v14;
  if (a4)
  {
    sub_100041A98(a5, a5[3]);
    uint64_t v28 = dispatch thunk of StoreDataProvider.explicitSymbol.getter();
    uint64_t v30 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_10004CEAC(0, *((void *)v24 + 2) + 1, 1, v24);
    }
    unint64_t v32 = *((void *)v24 + 2);
    unint64_t v31 = *((void *)v24 + 3);
    unint64_t v33 = v32 + 1;
    if (v32 >= v31 >> 1) {
      uint64_t v24 = sub_10004CEAC((char *)(v31 > 1), v32 + 1, 1, v24);
    }
    *((void *)v24 + 2) = v33;
    uint64_t v34 = &v24[16 * v32];
    *((void *)v34 + 4) = v28;
    *((void *)v34 + 5) = v30;
  }
  else
  {
    unint64_t v33 = *((void *)v24 + 2);
    if (!v33)
    {
      uint64_t v36 = _swiftEmptyArrayStorage;
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRetain();
  id v35 = (uint64_t *)(v24 + 40);
  uint64_t v36 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v40 = *(v35 - 1);
    uint64_t v41 = *v35;
    if (v40) {
      BOOL v42 = 0;
    }
    else {
      BOOL v42 = v41 == 0xE000000000000000;
    }
    if (!v42 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v110[0] = v36;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10005986C(0, v36[2] + 1, 1);
        uint64_t v36 = *(void **)&v110[0];
      }
      unint64_t v38 = v36[2];
      unint64_t v37 = v36[3];
      if (v38 >= v37 >> 1)
      {
        sub_10005986C(v37 > 1, v38 + 1, 1);
        uint64_t v36 = *(void **)&v110[0];
      }
      v36[2] = v38 + 1;
      uint64_t v39 = &v36[2 * v38];
      v39[4] = v40;
      v39[5] = v41;
    }
    v35 += 2;
    --v33;
  }
  while (v33);
  swift_bridgeObjectRelease();
  a9 = v104;
  uint64_t v14 = v103;
LABEL_26:
  swift_bridgeObjectRelease();
  *(void *)&v110[0] = v36;
  static String.eyebrowSeparatorSymbol.getter();
  sub_100054B78((uint64_t *)&unk_100603260);
  sub_100044200((unint64_t *)&qword_1005F8138, (uint64_t *)&unk_100603260);
  BidirectionalCollection<>.joined(separator:)();
  swift_release();
  swift_bridgeObjectRelease();
  id v44 = v98;
  if (v99)
  {
    id v45 = v98;
    swift_bridgeObjectRetain();
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v47 = v98;
    NSString v46 = 0;
  }
  id v49 = a13;
  uint64_t v48 = a14;
  id v50 = objc_allocWithZone((Class)CPListItem);
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v52 = [v50 initWithText:v46 detailText:v51 image:v44 accessoryImage:0 accessoryType:1 v88];

  id v107 = v52;
  sub_100053820(v14, (uint64_t)v110, (uint64_t *)&unk_100606170);
  unsigned __int8 v53 = v111;
  if (v111 == 255)
  {
    uint64_t v75 = v100;
    *uint64_t v100 = a10;
    v75[1] = a11;
    *((unsigned char *)v75 + 16) = a12;
    uint64_t v76 = v105;
    swift_storeEnumTagMultiPayload();
    id v77 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
    swift_bridgeObjectRetain();
    uint64_t v78 = [v77 init];
    uint64_t v79 = (uint64_t)v75;
    uint64_t v80 = v102;
    sub_1003867D8(v79, v102, type metadata accessor for CarPlayTemplateInfo.TemplateType);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v80, 0, 1, v76);
    uint64_t v81 = (uint64_t)&v78[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
    swift_beginAccess();
    sub_1001BF934(v80, v81);
    swift_endAccess();
    v78[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
    sub_10004D29C(0, &qword_1005F88B0);
    unint64_t v82 = NSString.init(stringLiteral:)();
    unint64_t v83 = v78;
    sub_1001BFA4C((uint64_t)v82, (uint64_t)v78);
  }
  else
  {
    long long v54 = v110[1];
    uint64_t v55 = v100;
    *(_OWORD *)uint64_t v100 = v110[0];
    *((_OWORD *)v55 + 1) = v54;
    long long v56 = v110[3];
    *((_OWORD *)v55 + 2) = v110[2];
    *((_OWORD *)v55 + 3) = v56;
    *((unsigned char *)v55 + 64) = v53;
    swift_storeEnumTagMultiPayload();
    id v88 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
    char v57 = v89;
    uint64_t v58 = v97;
    id v98 = a13;
    uint64_t v59 = v96;
    uint64_t v60 = v95;
    char v61 = v94;
    uint64_t v99 = a14;
    uint64_t v62 = v93;
    uint64_t v63 = v92;
    uint64_t v64 = v91;
    uint64_t v65 = v90;
    sub_1001A5920(v97, v96, v95, v94, v93, v92, v91, v90, v89);
    uint64_t v66 = v59;
    id v49 = v98;
    char v67 = v61;
    a9 = v104;
    uint64_t v68 = v62;
    uint64_t v48 = v99;
    sub_1001A5920(v58, v66, v60, v67, v68, v63, v64, v65, v57);
    uint64_t v69 = [v88 init];
    uint64_t v70 = (uint64_t)v55;
    uint64_t v71 = v102;
    sub_1003867D8(v70, v102, type metadata accessor for CarPlayTemplateInfo.TemplateType);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v71, 0, 1, v105);
    uint64_t v72 = (uint64_t)&v69[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
    swift_beginAccess();
    sub_1001BF934(v71, v72);
    swift_endAccess();
    v69[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
    sub_10004D29C(0, &qword_1005F88B0);
    uint64_t v73 = NSString.init(stringLiteral:)();
    uint64_t v74 = v69;
    sub_1001BFA4C((uint64_t)v73, (uint64_t)v69);

    sub_100386454(v103, (void (*)(void, void, void, void, void, void, void, void, char))sub_1001D624C);
  }
  unint64_t v84 = v107;
  uint64_t v85 = swift_allocObject();
  *(void *)(v85 + 16) = v49;
  *(void *)(v85 + 24) = v48;
  aBlock[4] = sub_100386450;
  aBlock[5] = v85;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BF99C;
  aBlock[3] = &unk_100565AB0;
  uint64_t v86 = _Block_copy(aBlock);
  id v87 = v84;
  swift_retain();
  swift_release();
  [v87 setHandler:v86];
  _Block_release(v86);

  *a9 = v87;
}

uint64_t sub_10038447C()
{
  swift_bridgeObjectRelease();
  sub_10004D2D8(v0 + 40);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 160) != 255) {
    sub_100053720(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(unsigned char *)(v0 + 160));
  }
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_100384500(id *a1@<X0>, void *a2@<X8>)
{
  sub_100383AEC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), (void *)(v2 + 40), *(void **)(v2 + 80), *(void *)(v2 + 88), v2 + 96, a2, *(void *)(v2 + 168), *(void *)(v2 + 176), *(unsigned char *)(v2 + 184), *(void **)(v2 + 192), *(void *)(v2 + 200));
}

void sub_10038454C(void *a1@<X0>, uint64_t a2@<X8>)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a1 podcastForUuid:v4];

  if (v5)
  {
    MTPodcast.artworkModel.getter();
  }
  else
  {
    uint64_t v6 = type metadata accessor for ArtworkModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 1, 1, v6);
  }
}

uint64_t sub_10038460C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000503CC(a1, a2);
}

uint64_t sub_100384614(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ArtworkModel();
  __chkstk_darwin(v9 - 8);
  sub_1003896AC(a1, (uint64_t)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  uint64_t v11 = type metadata accessor for CropCode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  static Logger.artwork.getter();
  static os_log_type_t.info.getter();
  SignpostAndLogTrace(domain:level:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
}

uint64_t sub_100384840(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v81 = a8;
  uint64_t v78 = a6;
  uint64_t v79 = a7;
  uint64_t v57 = a5;
  int v80 = a3;
  uint64_t v75 = a1;
  uint64_t v76 = a2;
  uint64_t v77 = a9;
  uint64_t v82 = a11;
  uint64_t v83 = a10;
  uint64_t v13 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v13 - 8);
  uint64_t v72 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100054B78(&qword_100606250);
  uint64_t v15 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100054B78(&qword_100606258);
  uint64_t v62 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  id v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100054B78(&qword_100606260);
  uint64_t v63 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100054B78(&qword_100606268);
  uint64_t v65 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100054B78(&qword_100606270);
  uint64_t v68 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v59 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100054B78(&qword_100606278);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v70 = v25;
  uint64_t v71 = v26;
  __chkstk_darwin(v25);
  uint64_t v66 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100054B78(&qword_100606280);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v73 = v28;
  uint64_t v74 = v29;
  __chkstk_darwin(v28);
  uint64_t v69 = (char *)&v56 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a12;
  *(void *)&v84[0] = a12;
  swift_bridgeObjectRetain();
  sub_100054B78(&qword_100606288);
  sub_100044200(&qword_100606290, &qword_100606288);
  Publishers.Sequence.init(sequence:)();
  sub_100056D54(v57, (uint64_t)v84);
  uint64_t v31 = swift_allocObject();
  long long v32 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v31 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v31 + 32) = v32;
  *(_OWORD *)(v31 + 48) = *(_OWORD *)(a4 + 32);
  *(void *)(v31 + 64) = *(void *)(a4 + 48);
  sub_100042FC4(v84, v31 + 72);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_100386A68;
  *(void *)(v33 + 24) = v31;
  static Subscribers.Demand.unlimited.getter();
  sub_100054B78(&qword_100606298);
  sub_100044200(&qword_1006062A0, &qword_100606250);
  sub_100044200(&qword_1006062A8, &qword_100606298);
  uint64_t v34 = v58;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v34);
  sub_100054B78(&qword_1006062B0);
  sub_100044200(&qword_1006062B8, &qword_100606258);
  uint64_t v35 = v60;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v19, v35);
  sub_100044200(&qword_1006062C0, &qword_100606260);
  uint64_t v36 = v61;
  Publisher.collect()();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v21, v36);
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = v56;
  *(void *)(v37 + 16) = v56;
  swift_bridgeObjectRetain();
  sub_100054B78(&qword_1006062C8);
  sub_100044200(&qword_1006062D0, &qword_100606268);
  uint64_t v39 = v59;
  uint64_t v40 = v64;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v23, v40);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  *(void *)&v84[0] = static OS_dispatch_queue.main.getter();
  uint64_t v41 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v42 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v72, 1, 1, v41);
  sub_100044200(&qword_1006062D8, &qword_100606270);
  sub_100059BE0();
  id v43 = v66;
  uint64_t v44 = v67;
  Publisher.receive<A>(on:options:)();
  sub_100054B1C(v42, &qword_1005F9F20);

  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v44);
  uint64_t v45 = swift_allocObject();
  uint64_t v46 = v76;
  *(void *)(v45 + 16) = v75;
  *(void *)(v45 + 24) = v46;
  uint64_t v47 = v79;
  *(void *)(v45 + 32) = v78;
  *(void *)(v45 + 40) = v47;
  uint64_t v48 = v81;
  *(void *)(v45 + 48) = v38;
  *(void *)(v45 + 56) = v48;
  *(void *)(v45 + 64) = v77;
  *(unsigned char *)(v45 + 72) = v80;
  sub_10004D29C(0, &qword_1006062E0);
  sub_100044200(&qword_1006062E8, &qword_100606278);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v49 = v69;
  uint64_t v50 = v70;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v43, v50);
  uint64_t v51 = swift_allocObject();
  uint64_t v52 = v82;
  *(void *)(v51 + 16) = v83;
  *(void *)(v51 + 24) = v52;
  sub_100044200((unint64_t *)&unk_1006062F0, &qword_100606280);
  swift_retain();
  uint64_t v53 = v73;
  uint64_t v54 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v49, v53);
  return v54;
}

uint64_t sub_1003852B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a4;
  uint64_t v21 = a1;
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_100605E30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_100606300);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100054B78(&qword_100606308);
  uint64_t v13 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003834FC(a3, v20, (uint64_t)v8);
  *(void *)(swift_allocObject() + 16) = v21;
  sub_100054B78(&qword_100606310);
  sub_100044200((unint64_t *)&unk_100606160, (uint64_t *)&unk_100605E30);
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100044200(&qword_100606318, &qword_100606300);
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  Publisher.replaceError(with:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_100044200((unint64_t *)&unk_100606320, &qword_100606308);
  uint64_t v16 = v22;
  uint64_t v17 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  return v17;
}

id sub_1003855EC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)a1[1];
  *a2 = v2;
  a2[1] = v3;
  return v3;
}

uint64_t sub_1003855F8@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v29 = a3;
    if (!v6) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v29 = a3;
    if (!v6) {
      goto LABEL_15;
    }
  }
  uint64_t v7 = self;
  if (v6 < 1) {
    goto LABEL_32;
  }
  uint64_t v8 = (void *)v7;
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((a2 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v8 imageNamed:v10];
    swift_release();

    if (v11)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
LABEL_15:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v13 = _swiftEmptyArrayStorage;
  unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(v5 + 16);
  if (!v14)
  {
LABEL_30:
    *uint64_t v29 = v13;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = (id *)(v5 + 40);
  while (1)
  {
    uint64_t v16 = (uint64_t)*(v15 - 1);
    uint64_t v17 = v30;
    id v18 = *v15;
    if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
      || (v30 & 0x8000000000000000) != 0
      || (v30 & 0x4000000000000000) != 0)
    {
      uint64_t v17 = sub_10041875C(v30);
      unint64_t v30 = v17;
    }
    uint64_t v19 = v17 & 0xFFFFFFFFFFFFFF8;
    unint64_t v20 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16 >= v20) {
      break;
    }
    unint64_t v21 = v20 - 1;
    uint64_t v22 = v20 - 1 - v16;
    if (v22 < 0) {
      goto LABEL_33;
    }
    uint64_t v23 = v19 + 8 * v16;
    uint64_t v24 = *(void **)(v23 + 32);
    memmove((void *)(v23 + 32), (const void *)(v23 + 40), 8 * v22);
    *(void *)(v19 + 16) = v21;
    specialized Array._endMutation()();

    if (v30 >> 62)
    {
      id v27 = v18;
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v28 < v16)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v13 = (void *)v30;
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v26 = v18;
      if (v25 < v16) {
        goto LABEL_28;
      }
    }
    sub_1001FAF68(v16, v16, (uint64_t)v18);

    v15 += 2;
    if (!--v14) {
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100385934(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, void *a6@<X8>, unsigned __int8 a7)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v31 = a3;
  uint64_t v35 = a6;
  int v36 = a7;
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v13 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_allocWithZone((Class)CPListImageRowItem);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1006061A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v16 initWithText:v17 images:isa];

  *a6 = v19;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  uint64_t v41 = sub_100386450;
  uint64_t v42 = (void *)v20;
  aBlock = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_1001BF99C;
  uint64_t v40 = &unk_100565D58;
  unint64_t v21 = _Block_copy(&aBlock);
  id v22 = v19;
  swift_retain();
  swift_release();
  [v22 setHandler:v21];
  _Block_release(v21);
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v32;
  v23[2] = v31;
  v23[3] = v24;
  v23[4] = v33;
  uint64_t v41 = sub_100386B8C;
  uint64_t v42 = v23;
  aBlock = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_10038618C;
  uint64_t v40 = &unk_100565DA8;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v22 setListImageRowHandler:v25];
  _Block_release(v25);

  *uint64_t v15 = v36;
  uint64_t v26 = v34;
  swift_storeEnumTagMultiPayload();
  id v27 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  sub_1003867D8((uint64_t)v15, (uint64_t)v12, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v26);
  uint64_t v28 = (uint64_t)&v27[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934((uint64_t)v12, v28);
  swift_endAccess();
  v27[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_10004D29C(0, &qword_1005F88B0);
  uint64_t v29 = NSString.init(stringLiteral:)();
  unint64_t v30 = v27;
  sub_1001BFA4C((uint64_t)v29, (uint64_t)v27);
}

void sub_100385D80(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, unint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  __chkstk_darwin(v16);
  id v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a5 >> 62))
  {
    if (*(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2) {
      goto LABEL_3;
    }
LABEL_12:
    uint64_t v33 = ((uint64_t (*)(uint64_t))a6)(a1);
    ((void (*)(uint64_t))a3)(v33);
    return;
  }
  uint64_t v38 = v17;
  swift_bridgeObjectRetain();
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v17 = v38;
  if (v32 <= a2) {
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v35 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = a3;
  uint64_t v38 = v17;
  if ((a5 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a2)
  {
LABEL_16:
    __break(1u);
    return;
  }
  swift_retain();
LABEL_7:
  LegacyLockup.title.getter();
  swift_release();
  if ((a5 & 0xC000000000000001) != 0) {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    swift_retain();
  }
  uint64_t v20 = LibraryShowLockup.uuid.getter();
  uint64_t v22 = v21;
  swift_release();
  id v23 = objc_allocWithZone((Class)CPListImageRowItem);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1006061A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v26 = [v23 initWithText:v24 images:isa];

  id v40 = v26;
  *(void *)id v19 = v20;
  *((void *)v19 + 1) = v22;
  v19[16] = 2;
  swift_storeEnumTagMultiPayload();
  id v27 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  sub_1003867D8((uint64_t)v19, (uint64_t)v15, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v15, 0, 1, v16);
  uint64_t v28 = (uint64_t)&v27[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934((uint64_t)v15, v28);
  swift_endAccess();
  v27[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_10004D29C(0, &qword_1005F88B0);
  uint64_t v29 = NSString.init(stringLiteral:)();
  unint64_t v30 = v27;
  sub_1001BFA4C((uint64_t)v29, (uint64_t)v27);

  id v31 = v40;
  v35();

  v37();
}

void sub_10038618C(uint64_t a1, void *a2, int a3, void *aBlock)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  uint64_t v6 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v6;
  swift_retain();
  id v7 = a2;
  v5();
  swift_release();
  swift_release();
}

uint64_t sub_100386250(unsigned char *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v10 = String.init<A>(describing:)();
      uint64_t v12 = sub_10004B974(v10, v11, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Encountered error loading CarPlay image rows: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_100386454(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 64);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v4);
  return a1;
}

void sub_1003864A8(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1003864C4()
{
  return swift_deallocObject();
}

uint64_t sub_1003864D4(uint64_t a1)
{
  return sub_100384614(a1);
}

uint64_t sub_1003864DC()
{
  sub_10004D2D8(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100386514@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_100386544()
{
  uint64_t v1 = *(void *)(sub_100054B78((uint64_t *)&unk_1005F7750) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for EpisodePlayState() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v5, 1, v10)) {
      (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v5, v10);
    }
  }
  sub_10004D2D8(v0 + ((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003867D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_100386840(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_100054B78((uint64_t *)&unk_1005F7750) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for EpisodePlayState() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100382FFC(a1, v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), v2 + v9, v2 + v10, *(void *)(v2 + ((v10 + 47) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v2 + ((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), a2, *(void *)(v2 + ((v10 + 63) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v2 + ((v10 + 63) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v2 + ((v10 + 79) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v10 + 79) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1003869A8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003869E0()
{
  sub_10004D2D8(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100386A18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100382A7C(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_100386A24@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100382D7C(a1, (void *)(v2 + 16), v2 + 56, a2);
}

uint64_t sub_100386A30()
{
  sub_10004D2D8(v0 + 72);

  return swift_deallocObject();
}

uint64_t sub_100386A68(uint64_t a1, uint64_t a2)
{
  return sub_1003852B8(a1, a2, v2 + 16, v2 + 72);
}

uint64_t sub_100386A74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100386AAC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100386AE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1003855F8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100386AEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_100386B3C(void *a1@<X8>)
{
  sub_100385934(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1, *(unsigned char *)(v1 + 72));
}

uint64_t sub_100386B74()
{
  return sub_100058678((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_100386B8C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_100385D80(a1, a2, a3, a4, *(void *)(v4 + 16), *(void (**)(void))(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_100386B98()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_100386BD0()
{
  return swift_deallocObject();
}

id sub_100386BE0@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = *a1;
  *a2 = *(void *)(v2 + 16);
  a2[1] = v3;
  return v3;
}

uint64_t sub_100386BF0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_unknownObjectRelease();
        if (v6 == a2) {
          return v5;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100386CE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v60 = a6;
  int v55 = a5;
  uint64_t v56 = a4;
  uint64_t v57 = a1;
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v58 = *(void *)(v13 - 8);
  uint64_t v59 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for EpisodeDownloadState();
  uint64_t v61 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for EpisodePlayState();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = dispatch thunk of LegacyLockup.playAction.getter();
  if (result)
  {
    uint64_t v51 = result;
    LegacyLockup.adamId.getter();
    EpisodeStateController.stateMachine(for:)();
    dispatch thunk of EpisodeStateMachine.currentState.getter();
    swift_release();
    LegacyLockup.adamId.getter();
    EpisodeStateController.stateMachine(for:)();
    dispatch thunk of EpisodeStateMachine.currentState.getter();
    swift_release();
    char v23 = EpisodeDownloadState.isDownloadedEpisode.getter();
    uint64_t v53 = v16;
    uint64_t v54 = a7;
    uint64_t v52 = v18;
    if (v23)
    {
      id v24 = [self configurationWithPointSize:4 weight:-1 scale:16.0];
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = [self systemImageNamed:v25 withConfiguration:v24];
    }
    else
    {
      id v26 = 0;
    }
    id v27 = v56;
    char v28 = v55;
    LegacyLockup.title.getter();
    uint64_t v30 = v29;
    sub_1001B67C0(v57, v8, v28 & 1);
    id v31 = v27;
    id v32 = v26;
    if (v30)
    {
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v33 = 0;
    }
    id v34 = objc_allocWithZone((Class)CPListItem);
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [v34 initWithText:v33 detailText:v35 image:v31 accessoryImage:v26 accessoryType:0];

    id v63 = v36;
    id v37 = v36;
    uint64_t v38 = sub_1001B6954();
    if ((v39 & 1) == 0) {
      [v37 setPlaybackProgress:*(double *)&v38];
    }

    *(void *)uint64_t v15 = v51;
    v15[8] = 0;
    uint64_t v40 = v59;
    swift_storeEnumTagMultiPayload();
    id v41 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
    swift_retain();
    uint64_t v42 = [v41 init];
    sub_1003867D8((uint64_t)v15, (uint64_t)v12, type metadata accessor for CarPlayTemplateInfo.TemplateType);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v12, 0, 1, v40);
    uint64_t v43 = (uint64_t)&v42[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
    swift_beginAccess();
    sub_1001BF934((uint64_t)v12, v43);
    swift_endAccess();
    v42[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 1;
    sub_10004D29C(0, &qword_1005F88B0);
    uint64_t v44 = NSString.init(stringLiteral:)();
    uint64_t v45 = v42;
    sub_1001BFA4C((uint64_t)v44, (uint64_t)v42);

    uint64_t v46 = v63;
    uint64_t v47 = swift_allocObject();
    uint64_t v48 = v54;
    *(void *)(v47 + 16) = v60;
    *(void *)(v47 + 24) = v48;
    aBlock[4] = sub_100386450;
    aBlock[5] = v47;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001BF99C;
    aBlock[3] = &unk_100565F60;
    id v49 = _Block_copy(aBlock);
    id v50 = v46;
    swift_retain();
    swift_release();
    [v50 setHandler:v49];
    _Block_release(v49);

    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v52, v53);
    sub_100389714((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
    return (uint64_t)v63;
  }
  return result;
}

uint64_t sub_1003872F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v84 = a7;
  uint64_t v75 = a6;
  uint64_t v73 = a5;
  uint64_t v72 = a4;
  uint64_t v85 = a1;
  uint64_t v86 = a3;
  uint64_t v82 = a2;
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v10 - 8);
  uint64_t v71 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for ArtworkModel();
  uint64_t v12 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v70 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for ArtworkRequest();
  uint64_t v14 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v16 - 8);
  uint64_t v74 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v64 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v63 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v62 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_100387F08;
  *(void *)(v23 + 24) = a9;
  *(void *)&long long aBlock = a8;
  swift_retain_n();
  sub_100054B78((uint64_t *)&unk_1005FBC30);
  sub_100044200((unint64_t *)&unk_1005F7E40, (uint64_t *)&unk_1005FBC30);
  if (Collection.isNotEmpty.getter())
  {
    uint64_t v76 = v14;
    uint64_t v24 = v12;
    uint64_t v57 = v21;
    uint64_t v58 = v19;
    uint64_t v59 = v18;
    uint64_t v60 = v23;
    uint64_t v61 = a9;
    *(void *)&long long aBlock = a8;
    swift_getKeyPath();
    sub_100044200(&qword_1005FBC40, (uint64_t *)&unk_1005FBC30);
    sub_10022B5A4();
    unint64_t v25 = Sequence.uniqued<A>(by:)();
    swift_release();
    dispatch_group_t v26 = dispatch_group_create();
    uint64_t result = swift_allocObject();
    uint64_t v67 = result;
    *(void *)(result + 16) = _swiftEmptyArrayStorage;
    char v28 = (void *)(result + 16);
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v30 = v75;
    uint64_t v31 = v82;
    uint64_t v32 = (uint64_t)v74;
    if (!v29)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      id v50 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v51 = (void *)swift_allocObject();
      uint64_t v52 = v60;
      v51[2] = sub_100387F10;
      v51[3] = v52;
      v51[4] = v67;
      uint64_t v93 = sub_1003897F4;
      uint64_t v94 = v51;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v91 = sub_10003B424;
      uint64_t v92 = &unk_100565E98;
      uint64_t v53 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      uint64_t v54 = v62;
      static DispatchQoS.unspecified.getter();
      *(void *)&long long v87 = _swiftEmptyArrayStorage;
      sub_100022F7C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
      int v55 = v64;
      uint64_t v56 = v59;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v53);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v56);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v54, v57);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    if (v29 >= 1)
    {
      uint64_t v33 = 0;
      unint64_t v83 = v25 & 0xC000000000000001;
      uint64_t v77 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
      uint64_t v65 = (void (**)(char *, uint64_t))(v76 + 8);
      dispatch_group_t v80 = v26;
      unint64_t v79 = v25;
      uint64_t v66 = v28;
      uint64_t v78 = v29;
      do
      {
        if (v83)
        {
          uint64_t v34 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v34 = *(void *)(v25 + 8 * v33 + 32);
          swift_retain();
        }
        uint64_t v35 = sub_100386CE0(v85, v31, v86, 0, 0, v30, v84);
        if (v35)
        {
          id v36 = (void *)v35;
          swift_beginAccess();
          id v37 = v36;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          dispatch_group_enter(v26);
          swift_retain();
          LegacyLockup.icon.getter();
          swift_release();
          if ((*v77)(v32, 1, v81) == 1)
          {
            swift_release();

            sub_100054B1C(v32, &qword_1005F76A0);
          }
          else
          {
            uint64_t v38 = v73;
            sub_100056D54(v85, (uint64_t)&aBlock);
            uint64_t v39 = swift_allocObject();
            *(void *)(v39 + 16) = v26;
            *(void *)(v39 + 24) = v67;
            *(void *)(v39 + 32) = v37;
            *(void *)(v39 + 40) = v34;
            sub_100042FC4(&aBlock, v39 + 48);
            *(void *)(v39 + 88) = v31;
            *(void *)(v39 + 96) = v86;
            long long v40 = *(_OWORD *)(v38 + 16);
            *(_OWORD *)(v39 + 104) = *(_OWORD *)v38;
            *(_OWORD *)(v39 + 120) = v40;
            *(_OWORD *)(v39 + 136) = *(_OWORD *)(v38 + 32);
            *(void *)(v39 + 152) = *(void *)(v38 + 48);
            *(void *)(v39 + 160) = v30;
            *(void *)(v39 + 168) = v84;
            uint64_t v76 = swift_allocObject();
            *(unsigned char *)(v76 + 16) = 0;
            sub_1003896AC(v32, v70, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
            uint64_t v41 = type metadata accessor for CropCode();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v71, 1, 1, v41);
            uint64_t v89 = 0;
            long long v87 = 0u;
            long long v88 = 0u;
            uint64_t v42 = self;
            swift_retain();
            id v43 = v37;
            swift_retain();
            uint64_t v44 = v80;
            swift_retain();
            swift_retain();
            swift_retain();
            id v45 = [v42 mainScreen];
            [v45 scale];

            uint64_t v46 = v68;
            ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
            sub_100041A98(v72, v72[3]);
            uint64_t v47 = (void *)swift_allocObject();
            v47[2] = v76;
            v47[3] = sub_100387FB4;
            v47[4] = v39;
            swift_retain();
            swift_retain();
            uint64_t v32 = (uint64_t)v74;
            ImageProvider.load(artwork:receiveImage:receiveCompletion:)();
            uint64_t v30 = v75;
            swift_release();
            uint64_t v48 = v46;
            dispatch_group_t v26 = v80;
            (*v65)(v48, v69);
            char v28 = v66;
            swift_release();
            swift_release();

            uint64_t v31 = v82;
            swift_release();
            sub_100389714(v32, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
          }
          unint64_t v25 = v79;
          uint64_t v29 = v78;
        }
        else
        {
          swift_release();
        }
        ++v33;
      }
      while (v29 != v33);
      goto LABEL_22;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    id v49 = _swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      sub_100054B78(&qword_1005F7E20);
      id v49 = (void *)_bridgeCocoaArray<A>(_:)();
    }
    sub_1002E80C0((unint64_t)v49);
    swift_release();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100387F08(unint64_t a1)
{
  return sub_1002E80C0(a1);
}

uint64_t sub_100387F14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LegacyLockup.title.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100387F44()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 48);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100387FB4(void *a1)
{
  sub_100382890(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), v1 + 48, *(void *)(v1 + 88), *(void *)(v1 + 96), v1 + 104, *(void *)(v1 + 160), *(void *)(v1 + 168));
}

uint64_t sub_100387FF4()
{
  return swift_deallocObject();
}

uint64_t sub_100388004()
{
  return sub_100058678((void (*)(void))&_swift_release);
}

id sub_10038801C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v85 = a3;
  id v83 = a2;
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_1005F88A0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FlowDestination();
  uint64_t v79 = *(void *)(v13 - 8);
  uint64_t v80 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v16 = *(void *)(v82 - 8);
  uint64_t v17 = __chkstk_darwin(v82);
  uint64_t v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v77 - v20;
  uint64_t v89 = v4;
  uint64_t v22 = (void *)LegacyLockup.genreNames.getter();
  uint64_t v84 = v21;
  uint64_t v77 = v15;
  uint64_t v78 = (uint64_t *)v12;
  uint64_t v86 = a4;
  if (!v22) {
    goto LABEL_7;
  }
  if (!v22[2])
  {
    swift_bridgeObjectRelease();
LABEL_7:
    unint64_t v25 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_8;
  }
  uint64_t v23 = v22[4];
  uint64_t v24 = v22[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v25 = sub_10004CEAC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v27 = *((void *)v25 + 2);
  unint64_t v26 = *((void *)v25 + 3);
  if (v27 >= v26 >> 1) {
    unint64_t v25 = sub_10004CEAC((char *)(v26 > 1), v27 + 1, 1, v25);
  }
  *((void *)v25 + 2) = v27 + 1;
  char v28 = &v25[16 * v27];
  *((void *)v28 + 4) = v23;
  *((void *)v28 + 5) = v24;
LABEL_8:
  char v29 = LegacyLockup.isExplicit.getter();
  long long v87 = v19;
  uint64_t v88 = v16;
  if (v29)
  {
    sub_100041A98(a1, a1[3]);
    uint64_t v30 = dispatch thunk of StoreDataProvider.explicitSymbol.getter();
    uint64_t v32 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_10004CEAC(0, *((void *)v25 + 2) + 1, 1, v25);
    }
    unint64_t v34 = *((void *)v25 + 2);
    unint64_t v33 = *((void *)v25 + 3);
    unint64_t v35 = v34 + 1;
    if (v34 >= v33 >> 1) {
      unint64_t v25 = sub_10004CEAC((char *)(v33 > 1), v34 + 1, 1, v25);
    }
    uint64_t v81 = v9;
    *((void *)v25 + 2) = v35;
    id v36 = &v25[16 * v34];
    *((void *)v36 + 4) = v30;
    *((void *)v36 + 5) = v32;
  }
  else
  {
    unint64_t v35 = *((void *)v25 + 2);
    if (!v35)
    {
      uint64_t v38 = _swiftEmptyArrayStorage;
      goto LABEL_29;
    }
    uint64_t v81 = v9;
  }
  swift_bridgeObjectRetain();
  id v37 = (uint64_t *)(v25 + 40);
  uint64_t v38 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v42 = *(v37 - 1);
    uint64_t v43 = *v37;
    if (v42) {
      BOOL v44 = 0;
    }
    else {
      BOOL v44 = v43 == 0xE000000000000000;
    }
    if (!v44 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = (uint64_t)v38;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10005986C(0, v38[2] + 1, 1);
        uint64_t v38 = (void *)aBlock[0];
      }
      unint64_t v40 = v38[2];
      unint64_t v39 = v38[3];
      if (v40 >= v39 >> 1)
      {
        sub_10005986C(v39 > 1, v40 + 1, 1);
        uint64_t v38 = (void *)aBlock[0];
      }
      v38[2] = v40 + 1;
      uint64_t v41 = &v38[2 * v40];
      v41[4] = v42;
      v41[5] = v43;
    }
    v37 += 2;
    --v35;
  }
  while (v35);
  swift_bridgeObjectRelease();
  unint64_t v9 = v81;
LABEL_29:
  swift_bridgeObjectRelease();
  aBlock[0] = (uint64_t)v38;
  static String.eyebrowSeparatorSymbol.getter();
  sub_100054B78((uint64_t *)&unk_100603260);
  sub_100044200((unint64_t *)&qword_1005F8138, (uint64_t *)&unk_100603260);
  BidirectionalCollection<>.joined(separator:)();
  swift_release();
  swift_bridgeObjectRelease();
  LegacyLockup.titleAccessibilityLabel.getter();
  if (v46)
  {
    id v47 = v83;
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v47 = v83;
    NSString v48 = 0;
  }
  uint64_t v49 = (uint64_t)v84;
  id v50 = objc_allocWithZone((Class)CPListItem);
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v52 = [v50 initWithText:v48 detailText:v51 image:v47 accessoryImage:0 accessoryType:0];

  id v94 = v52;
  uint64_t v53 = swift_allocObject();
  uint64_t v54 = v86;
  *(void *)(v53 + 16) = v85;
  *(void *)(v53 + 24) = v54;
  uint64_t v92 = (uint64_t)sub_100386450;
  uint64_t v93 = v53;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001BF99C;
  uint64_t v91 = &unk_100566078;
  int v55 = _Block_copy(aBlock);
  id v56 = v52;
  swift_retain();
  swift_release();
  [v56 setHandler:v55];
  _Block_release(v55);

  uint64_t v57 = type metadata accessor for Podcasts();
  uint64_t v91 = (void *)v57;
  uint64_t v92 = sub_100022F7C((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  uint64_t v58 = sub_10004A244(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v57 - 8) + 104))(v58, enum case for Podcasts.carPlayStoreShowPage(_:), v57);
  LOBYTE(v57) = isFeatureEnabled(_:)();
  sub_10004D2D8((uint64_t)aBlock);
  uint64_t v60 = (uint64_t)v87;
  uint64_t v59 = v88;
  if ((v57 & 1) == 0) {
    goto LABEL_40;
  }
  dispatch thunk of LegacyLockup.clickAction.getter();
  if (!v91)
  {
    uint64_t v64 = (uint64_t *)&unk_1005F89E0;
    uint64_t v65 = aBlock;
LABEL_39:
    sub_100054B1C((uint64_t)v65, v64);
    goto LABEL_40;
  }
  sub_100054B78(&qword_1005F82A0);
  type metadata accessor for FlowAction();
  if (swift_dynamicCast())
  {
    uint64_t v61 = v78;
    dispatch thunk of FlowAction.destination.getter();
    uint64_t v62 = v79;
    uint64_t v63 = v80;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v79 + 48))(v61, 1, v80) != 1)
    {
      uint64_t v72 = v77;
      (*(void (**)(char *, uint64_t *, uint64_t))(v62 + 32))(v77, v61, v63);
      uint64_t v73 = sub_100054B78(&qword_1005F9E90);
      uint64_t v86 = *(int *)(v73 + 48);
      uint64_t v74 = v60 + *(int *)(v73 + 64);
      uint64_t v75 = v62;
      FlowDestination.pageDestinationURL.getter();
      *(void *)(v60 + v86) = FlowDestination.pageDestinationPage.getter();
      uint64_t v76 = LegacyLockup.adamId.getter();
      swift_release();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v63);
      *(void *)uint64_t v74 = v76;
      *(unsigned char *)(v74 + 8) = 0;
      uint64_t v66 = v82;
      swift_storeEnumTagMultiPayload();
      sub_1003867D8(v60, v49, type metadata accessor for CarPlayTemplateInfo.TemplateType);
      goto LABEL_41;
    }
    swift_release();
    uint64_t v64 = (uint64_t *)&unk_1005F88A0;
    uint64_t v65 = v61;
    goto LABEL_39;
  }
LABEL_40:
  *(void *)uint64_t v49 = LegacyLockup.adamId.getter();
  *(unsigned char *)(v49 + 8) = 3;
  uint64_t v66 = v82;
  swift_storeEnumTagMultiPayload();
LABEL_41:
  sub_1003896AC(v49, v60, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  uint64_t v67 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  sub_1003867D8(v60, (uint64_t)v9, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v9, 0, 1, v66);
  uint64_t v68 = (uint64_t)&v67[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934((uint64_t)v9, v68);
  swift_endAccess();
  v67[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 1;
  sub_10004D29C(0, &qword_1005F88B0);
  uint64_t v69 = NSString.init(stringLiteral:)();
  uint64_t v70 = v67;
  sub_1001BFA4C((uint64_t)v69, (uint64_t)v67);

  sub_100389714(v49, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  return v94;
}

uint64_t sub_1003889BC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v75 = a5;
  uint64_t v83 = a4;
  uint64_t v72 = a3;
  uint64_t v71 = a2;
  uint64_t v74 = a1;
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v9 - 8);
  uint64_t v70 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for ArtworkModel();
  uint64_t v11 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v69 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for ArtworkRequest();
  uint64_t v13 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v15 - 8);
  uint64_t v73 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v63 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v62 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v61 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_100387F08;
  *(void *)(v22 + 24) = a7;
  unint64_t v82 = a6;
  *(void *)&long long aBlock = a6;
  swift_retain_n();
  sub_100054B78(&qword_1005F76C0);
  sub_100044200((unint64_t *)&unk_1005F7F50, &qword_1005F76C0);
  if (Collection.isNotEmpty.getter())
  {
    uint64_t v23 = v11;
    dispatch_group_t v24 = dispatch_group_create();
    uint64_t v25 = swift_allocObject();
    uint64_t v66 = v25;
    *(void *)(v25 + 16) = _swiftEmptyArrayStorage;
    unint64_t v26 = (void *)(v25 + 16);
    uint64_t v60 = a7;
    uint64_t v59 = v22;
    uint64_t v58 = v17;
    uint64_t v57 = v18;
    uint64_t v56 = v20;
    if (v82 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v27 = result;
    }
    else
    {
      uint64_t v27 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
    }
    uint64_t v29 = v75;
    uint64_t v30 = v74;
    uint64_t v31 = (uint64_t)v73;
    if (!v27)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      uint64_t v49 = (void *)static OS_dispatch_queue.main.getter();
      id v50 = (void *)swift_allocObject();
      uint64_t v51 = v59;
      v50[2] = sub_100387F10;
      v50[3] = v51;
      v50[4] = v66;
      uint64_t v90 = sub_1003895A4;
      uint64_t v91 = v50;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v88 = sub_10003B424;
      uint64_t v89 = &unk_100565FD8;
      id v52 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      uint64_t v53 = v61;
      static DispatchQoS.unspecified.getter();
      *(void *)&long long v84 = _swiftEmptyArrayStorage;
      sub_100022F7C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
      uint64_t v54 = v63;
      uint64_t v55 = v58;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v52);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v55);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v53, v56);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    if (v27 >= 1)
    {
      uint64_t v32 = 0;
      unint64_t v81 = v82 & 0xC000000000000001;
      uint64_t v77 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
      uint64_t v65 = (void (**)(char *, uint64_t))(v13 + 8);
      uint64_t v78 = v27;
      dispatch_group_t v79 = v24;
      uint64_t v64 = v26;
      do
      {
        if (v81)
        {
          uint64_t v33 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v33 = *(void *)(v82 + 8 * v32 + 32);
          swift_retain();
        }
        id v34 = sub_10038801C(v30, 0, v83, v29);
        if (v34)
        {
          unint64_t v35 = v34;
          swift_beginAccess();
          id v36 = v35;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          dispatch_group_enter(v24);
          LegacyLockup.icon.getter();
          if ((*v77)(v31, 1, v80) == 1)
          {
            swift_release();

            sub_100054B1C(v31, &qword_1005F76A0);
          }
          else
          {
            uint64_t v37 = v72;
            sub_100056D54((uint64_t)v30, (uint64_t)&aBlock);
            uint64_t v38 = swift_allocObject();
            *(void *)(v38 + 16) = v24;
            *(void *)(v38 + 24) = v66;
            *(void *)(v38 + 32) = v36;
            *(void *)(v38 + 40) = v33;
            sub_100042FC4(&aBlock, v38 + 48);
            long long v39 = *(_OWORD *)(v37 + 16);
            *(_OWORD *)(v38 + 88) = *(_OWORD *)v37;
            *(_OWORD *)(v38 + 104) = v39;
            *(_OWORD *)(v38 + 120) = *(_OWORD *)(v37 + 32);
            uint64_t v40 = v83;
            *(void *)(v38 + 136) = *(void *)(v37 + 48);
            *(void *)(v38 + 144) = v40;
            *(void *)(v38 + 152) = v29;
            uint64_t v41 = swift_allocObject();
            *(unsigned char *)(v41 + 16) = 0;
            sub_1003896AC(v31, v69, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
            uint64_t v42 = type metadata accessor for CropCode();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v70, 1, 1, v42);
            uint64_t v86 = 0;
            long long v84 = 0u;
            long long v85 = 0u;
            uint64_t v43 = self;
            swift_retain();
            id v76 = v36;
            BOOL v44 = v79;
            swift_retain();
            swift_retain();
            id v45 = [v43 mainScreen];
            [v45 scale];

            uint64_t v46 = v67;
            unint64_t v26 = v64;
            ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
            sub_100041A98(v71, v71[3]);
            id v47 = (void *)swift_allocObject();
            v47[2] = v41;
            v47[3] = sub_100389624;
            v47[4] = v38;
            swift_retain();
            swift_retain();
            dispatch_group_t v24 = v79;
            ImageProvider.load(artwork:receiveImage:receiveCompletion:)();
            uint64_t v31 = (uint64_t)v73;
            uint64_t v29 = v75;
            swift_release();
            (*v65)(v46, v68);
            uint64_t v30 = v74;
            swift_release();
            swift_release();

            swift_release();
            sub_100389714(v31, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
          }
          uint64_t v27 = v78;
        }
        else
        {
          swift_release();
        }
        ++v32;
      }
      while (v27 != v32);
      goto LABEL_22;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    NSString v48 = _swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      sub_100054B78(&qword_1005F7E20);
      NSString v48 = (void *)_bridgeCocoaArray<A>(_:)();
    }
    sub_1002E80C0((unint64_t)v48);
    swift_release();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100389514(unint64_t a1)
{
  uint64_t v2 = *(void (**)(void))(v1 + 16);
  sub_1001B8104(a1);
  v2();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100389564()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003895A4()
{
  return sub_100382A14(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1003895C4()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 48);
  swift_release();

  return swift_deallocObject();
}

void sub_100389624(void *a1)
{
  sub_10038269C(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), (void *)(v1 + 48), v1 + 88, *(void *)(v1 + 144), *(void *)(v1 + 152));
}

uint64_t sub_10038965C()
{
  return sub_100058678((void (*)(void))&_swift_release);
}

uint64_t sub_100389674()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003896AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100389714(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1003897BC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void *sub_1003897FC()
{
  id v1 = [v0 currentItem];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 episodeUuid];

    if (v3)
    {
      uint64_t v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

id sub_10038988C()
{
  return [v0 pausePlayerTarget];
}

void sub_10038989C()
{
  id v1 = [v0 player];
  [v1 stop];
}

void sub_1003898F4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [self _applePodcastsFoundationSharedUserDefaults];
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.classKit.getter();
  swift_bridgeObjectRetain_n();
  id v11 = a3;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v19 = v6;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v20 = a1;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v18 = v7;
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_10004B974(v20, a2, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Setting user default - %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setBool:1 forKey:v16];
}

uint64_t sub_100389BC8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  id v15 = [self _applePodcastsFoundationSharedUserDefaults];
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v17 = [v15 BOOLForKey:v16];

  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  if (v17)
  {
    static OS_os_log.classKit.getter();
    swift_bridgeObjectRetain_n();
    id v18 = a3;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v41 = v9;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v42 = v8;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v23 = _typeName(_:qualified:)();
      uint64_t v45 = sub_10004B974(v23, v24, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Skipping migration - %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v12, v42);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
  }
  else
  {
    static OS_os_log.classKit.getter();
    swift_bridgeObjectRetain_n();
    id v26 = a3;
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v42 = v8;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v41 = v9;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v31 = _typeName(_:qualified:)();
      uint64_t v40 = a1;
      uint64_t v45 = sub_10004B974(v31, v32, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      a1 = v40;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Starting migration - %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v42);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = a1;
    v33[3] = a2;
    uint64_t v34 = v43;
    uint64_t v35 = v44;
    v33[4] = v26;
    v33[5] = v34;
    v33[6] = v35;
    id v36 = (void *)swift_allocObject();
    v36[2] = a1;
    v36[3] = a2;
    v36[4] = v26;
    v36[5] = sub_10038E14C;
    v36[6] = v33;
    swift_bridgeObjectRetain_n();
    uint64_t v37 = a1;
    id v38 = v26;
    swift_retain();
    swift_retain();
    sub_1003AD960((uint64_t)sub_10038E160, (uint64_t)v36, v37, a2, v38);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_10038A120(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, void (*a5)(uint64_t))
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003898F4(a2, a3, a4);
  a5(a1);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.classKit.getter();
  swift_bridgeObjectRetain_n();
  id v14 = a4;
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v22 = v10;
    unsigned __int8 v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v21 = v11;
    *(_DWORD *)unsigned __int8 v17 = 136315138;
    uint64_t v18 = _typeName(_:qualified:)();
    uint64_t v23 = sub_10004B974(v18, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Finished migration - %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v22);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

id sub_10038A3B8(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v19 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v20 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v20);
  uint64_t v6 = OBJC_IVAR____TtC8Podcasts15ClassKitManager_workQueue;
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v7 = v1;
  static OS_dispatch_queue.Attributes.concurrent.getter();
  static DispatchQoS.unspecified.getter();
  unsigned int v17 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v8 = v2 + 104;
  uint64_t v9 = *(void (**)(char *))(v2 + 104);
  uint64_t v18 = v8;
  v9(v4);
  *(void *)&v1[v6] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v7[OBJC_IVAR____TtC8Podcasts15ClassKitManager_subscriptions] = _swiftEmptyArrayStorage;
  uint64_t v10 = OBJC_IVAR____TtC8Podcasts15ClassKitManager__playbackStart;
  uint64_t v23 = 0;
  char v24 = 1;
  sub_100054B78(&qword_1005FC2B0);
  *(void *)&v7[v10] = Synchronized.init(wrappedValue:)();
  uint64_t v11 = OBJC_IVAR____TtC8Podcasts15ClassKitManager__lastSignificantChangeTime;
  uint64_t v23 = 0;
  *(void *)&v7[v11] = Synchronized.init(wrappedValue:)();
  uint64_t v12 = OBJC_IVAR____TtC8Podcasts15ClassKitManager_migrationQueue;
  static DispatchQoS.unspecified.getter();
  uint64_t v23 = _swiftEmptyArrayStorage;
  sub_10004AD7C((unint64_t *)&qword_1005F5BE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100054B78((uint64_t *)&unk_1005F7A60);
  sub_100044200((unint64_t *)&qword_1005F5BF0, (uint64_t *)&unk_1005F7A60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  ((void (*)(char *, void, uint64_t))v9)(v4, v17, v19);
  *(void *)&v7[v12] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v7[OBJC_IVAR____TtC8Podcasts15ClassKitManager_dataStoreDelegate] = [objc_allocWithZone((Class)type metadata accessor for ClassKitContextBuilder()) init];
  type metadata accessor for PlaybackController();
  BaseObjectGraph.inject<A>(_:)();
  *(void *)&v7[OBJC_IVAR____TtC8Podcasts15ClassKitManager_playbackController] = v23;

  uint64_t v13 = (objc_class *)type metadata accessor for ClassKitManager();
  v22.receiver = v7;
  v22.super_class = v13;
  id v14 = [super init];
  sub_10038C764();

  swift_release();
  return v14;
}

uint64_t sub_10038A78C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    swift_errorRetain();
    static OS_os_log.classKit.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v14 = a1;
      uint64_t v15 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      v13[1] = v9 + 4;
      swift_errorRetain();
      sub_100054B78(&qword_100603F70);
      uint64_t v11 = String.init<A>(describing:)();
      uint64_t v14 = sub_10004B974(v11, v12, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Error saving - %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_10038A9F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *(void *)&v3[OBJC_IVAR____TtC8Podcasts15ClassKitManager_workQueue];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v3;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_10038E1B8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_1005662C8;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  uint64_t v18 = v3;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v20[1] = _swiftEmptyArrayStorage;
  sub_10004AD7C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_10038ACCC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = [a1 podcast];
  if (v7)
  {
    uint64_t v8 = v7;
    MPModelObject.adamID.getter();
    char v10 = v9;

    if ((v10 & 1) == 0)
    {
      uint64_t v11 = MPModelObject.adamID.getter();
      if ((v12 & 1) == 0)
      {
        uint64_t v13 = v11;
        sub_100054B78((uint64_t *)&unk_1005F83F0);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_10046D030;
        sub_1001A5874();
        *(void *)(v14 + 32) = BinaryInteger.description.getter();
        *(void *)(v14 + 40) = v15;
        v23[0] = v13;
        *(void *)(v14 + 48) = BinaryInteger.description.getter();
        *(void *)(v14 + 56) = v16;
        id v17 = [self shared:v23[0]];
        id v18 = [v17 mainAppContext];

        Class isa = Array._bridgeToObjectiveC()().super.isa;
        uint64_t v20 = (void *)swift_allocObject();
        void v20[2] = v14;
        v20[3] = a2;
        v20[4] = a3;
        v20[5] = a4;
        v23[4] = sub_10038E20C;
        v23[5] = v20;
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 1107296256;
        v23[2] = sub_10038B6FC;
        v23[3] = &unk_100566318;
        uint64_t v21 = _Block_copy(v23);
        id v22 = a2;
        swift_retain();
        swift_release();
        [v18 descendantMatchingIdentifierPath:isa completion:v21];
        _Block_release(v21);
      }
    }
  }
}

uint64_t sub_10038AEDC()
{
  id v1 = [v0 podcast];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  MPModelObject.adamID.getter();
  char v4 = v3;

  if (v4) {
    return 0;
  }
  MPModelObject.adamID.getter();
  if (v5) {
    return 0;
  }
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10046D030;
  sub_1001A5874();
  *(void *)(v6 + 32) = BinaryInteger.description.getter();
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = BinaryInteger.description.getter();
  *(void *)(v6 + 56) = v8;
  return v6;
}

uint64_t sub_10038AFCC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v48 = a3;
  uint64_t v49 = a2;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  char v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (void (**)(char *, uint64_t))((char *)&v48 - v13);
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
  id v52 = *(void (***)(char *, uint64_t))(v15 - 8);
  __chkstk_darwin(v15);
  id v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  id v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v49 = *(void **)(a4 + OBJC_IVAR____TtC8Podcasts15ClassKitManager_workQueue);
    uint64_t v23 = v20;
    char v24 = (void *)swift_allocObject();
    uint64_t v25 = v51;
    v24[2] = v50;
    v24[3] = v25;
    v24[4] = a1;
    aBlock[4] = (uint64_t)sub_10038E258;
    aBlock[5] = (uint64_t)v24;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10003B424;
    uint64_t aBlock[3] = (uint64_t)&unk_100566368;
    id v26 = _Block_copy(aBlock);
    id v27 = a1;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v54 = _swiftEmptyArrayStorage;
    sub_10004AD7C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v26);

    v52[1](v17, v15);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v23);
    return swift_release();
  }
  else
  {
    uint64_t v29 = v49;
    uint64_t v30 = v9;
    if (v49)
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      swift_errorRetain();
      static OS_os_log.classKit.getter();
      swift_bridgeObjectRetain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_errorRetain();
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        id v52 = (void (**)(char *, uint64_t))v12;
        uint64_t v34 = v33;
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 136315394;
        uint64_t v35 = Array.description.getter();
        uint64_t v54 = (void *)sub_10004B974(v35, v36, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2080;
        uint64_t v54 = v29;
        swift_errorRetain();
        sub_100054B78(&qword_100603F70);
        uint64_t v37 = String.init<A>(describing:)();
        uint64_t v54 = (void *)sub_10004B974(v37, v38, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Error finding episode context %s - %s", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))((char *)v52, v8);
      }
      else
      {
        swift_errorRelease();
        swift_bridgeObjectRelease_n();
        swift_errorRelease();
        swift_errorRelease();

        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      }
    }
    else
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v39 = v14;
      static OS_os_log.classKit.getter();
      swift_bridgeObjectRetain_n();
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        id v52 = v39;
        aBlock[0] = v43;
        *(_DWORD *)uint64_t v42 = 136315138;
        uint64_t v44 = Array.description.getter();
        uint64_t v54 = (void *)sub_10004B974(v44, v45, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unknown error finding episode context - %s", v42, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v46 = *(uint64_t (**)(void, uint64_t))(v9 + 8);
        id v47 = v52;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v46 = *(uint64_t (**)(void, uint64_t))(v9 + 8);
        id v47 = v14;
      }
      return v46(v47, v8);
    }
  }
}

void sub_10038B6FC(uint64_t a1, void *a2, void *a3)
{
  char v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10038B788()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v22 = xmmword_10046D010;
  uint64_t v18 = v23;
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts15ClassKitManager_migrationQueue);
  v23[3] = &type metadata for OldEpisodeContextMigration;
  v23[4] = &off_1005673F0;
  v23[0] = 0xD00000000000002DLL;
  v23[1] = 0x80000001004E0450;
  v23[2] = v8;
  uint64_t v9 = sub_100041A98(v23, (uint64_t)&type metadata for OldEpisodeContextMigration);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  char v12 = (void *)v9[2];
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v11;
  v13[3] = v10;
  v13[4] = v12;
  v13[5] = sub_1003064C8;
  v13[6] = 0;
  aBlock[4] = sub_10038E138;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100566228;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v12;
  id v16 = v8;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v20 = _swiftEmptyArrayStorage;
  sub_10004AD7C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  swift_release();
  sub_100054B78(&qword_1006063F8);
  return swift_arrayDestroy();
}

void sub_10038BAEC(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  sub_10038D560(a5, a1, a2, a3);
  id v5 = [self shared];
  v7[4] = sub_10038A78C;
  v7[5] = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10034BD38;
  v7[3] = &unk_1005660E8;
  uint64_t v6 = _Block_copy(v7);
  [v5 saveWithCompletion:v6];
  _Block_release(v6);
}

void sub_10038BBC4(void *a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v12 = (char *)&v27 - v11;
  if ((a3 & 1) == 0)
  {
    uint64_t v29 = a2;
    char v30 = 0;
    swift_beginAccess();
    sub_100054B78((uint64_t *)&unk_1006063B0);
    Synchronized.wrappedValue.setter();
    swift_endAccess();
  }
  [a1 becomeActive];
  if (sub_10038AEDC())
  {
    id v13 = [a1 currentActivity];
    if (v13)
    {
      id v14 = v13;
      [v13 setBackgroundTimeTrackingEnabled:1];
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.classKit.getter();
      swift_bridgeObjectRetain();
      id v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v28 = v6;
        id v17 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        uint64_t v27 = v7;
        *(_DWORD *)id v17 = 136315138;
        uint64_t v18 = Array.description.getter();
        uint64_t v29 = sub_10004B974(v18, v19, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Resuming activity for episode - %s", v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      }
    }
    else
    {
      id v14 = [a1 createNewActivity];
      [v14 setBackgroundTimeTrackingEnabled:1];
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.classKit.getter();
      swift_bridgeObjectRetain();
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v27 = v7;
        long long v22 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        uint64_t v28 = v6;
        *(_DWORD *)long long v22 = 136315138;
        uint64_t v23 = Array.description.getter();
        uint64_t v29 = sub_10004B974(v23, v24, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Starting activity for episode - %s", v22, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      }
    }
    [v14 start];

    id v25 = [self shared];
    aBlock[4] = (uint64_t)sub_10038A78C;
    aBlock[5] = 0;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10034BD38;
    uint64_t aBlock[3] = (uint64_t)&unk_1005661B0;
    id v26 = _Block_copy(aBlock);
    [v25 saveWithCompletion:v26];
    _Block_release(v26);
  }
}

void sub_10038C12C(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  char v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v14 = (char *)v40 - v13;
  id v15 = [a1 currentActivity];
  if (v15)
  {
    uint64_t v44 = v15;
    if ([v15 isStarted])
    {
      swift_beginAccess();
      swift_retain();
      sub_100054B78(&qword_1005FC2B0);
      Synchronized.wrappedValue.getter();
      swift_release();
      if ((v46 & 1) == 0 && (a4 & 1) == 0)
      {
        double v16 = v45;
        uint64_t v47 = a3;
        char v48 = 0;
        swift_beginAccess();
        sub_100054B78((uint64_t *)&unk_1006063B0);
        Synchronized.wrappedValue.setter();
        swift_endAccess();
        sub_10038D560(a5, a1, v16, *(double *)&a3);
      }
      uint64_t v17 = sub_10038AEDC();
      if (v17)
      {
        uint64_t v18 = v17;
        [a5 duration];
        if (v19 <= 120.0 || ([v44 progress], v20 >= 0.9))
        {
          [a5 duration];
          if (v21 > 120.0 || ([v44 progress], v22 >= 0.8))
          {
            uint64_t v23 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
            static OS_os_log.classKit.getter();
            swift_bridgeObjectRetain_n();
            unint64_t v24 = Logger.logObject.getter();
            os_log_type_t v25 = static os_log_type_t.default.getter();
            BOOL v26 = os_log_type_enabled(v24, v25);
            uint64_t v43 = v10;
            if (v26)
            {
              uint64_t v42 = (void (*)(char *, uint64_t))v23;
              uint64_t v27 = (uint8_t *)swift_slowAlloc();
              uint64_t v41 = swift_slowAlloc();
              double v45 = *(double *)&v41;
              *(_DWORD *)uint64_t v27 = 136315138;
              v40[1] = v27 + 4;
              uint64_t v28 = Array.description.getter();
              uint64_t v47 = sub_10004B974(v28, v29, (uint64_t *)&v45);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v24, v25, "Setting progress to 100%%%% for episode - %s", v27, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              uint64_t v10 = v43;
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
            v31(v14, v9);
            [v44 addProgressRangeFromStart:0.0 toEnd:1.0];
            static OS_os_log.classKit.getter();
            swift_bridgeObjectRetain_n();
            os_log_type_t v32 = Logger.logObject.getter();
            os_log_type_t v33 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v32, v33))
            {
              uint64_t v34 = (uint8_t *)swift_slowAlloc();
              uint64_t v35 = swift_slowAlloc();
              uint64_t v42 = v31;
              double v45 = *(double *)&v35;
              *(_DWORD *)uint64_t v34 = 136315138;
              uint64_t v41 = (uint64_t)(v34 + 4);
              uint64_t v36 = Array.description.getter();
              uint64_t v47 = sub_10004B974(v36, v37, (uint64_t *)&v45);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v32, v33, "Completing activities for episode - %s", v34, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              v42(v12, v9);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              v31(v12, v9);
            }
            id v38 = [self shared];
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v38 completeAllAssignedActivitiesMatching:isa];
          }
        }
        sub_10038DE1C(v18, v44, a1);

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    else
    {
      char v30 = v44;
    }
  }
}

void sub_10038C764()
{
  uint64_t v1 = sub_100054B78(&qword_1005FA1B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v33 = v1;
  uint64_t v34 = v2;
  __chkstk_darwin(v1);
  char v30 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78(&qword_1006063C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  uint64_t v32 = v5;
  __chkstk_darwin(v4);
  uint64_t v28 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1006063C8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  uint64_t v36 = v8;
  __chkstk_darwin(v7);
  unint64_t v29 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_1006063D0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1005FE9A0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of PlaybackController.$isPlaying.getter();
  sub_100044200(&qword_1005F9FE0, (uint64_t *)&unk_1006063D0);
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100044200((unint64_t *)&unk_1005FE9F0, (uint64_t *)&unk_1005FE9A0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  swift_beginAccess();
  v27[1] = sub_100054B78((uint64_t *)&unk_1005F9ED0);
  sub_100044200(qword_1005F8BB0, (uint64_t *)&unk_1005F9ED0);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v18 = v28;
  dispatch thunk of PlaybackController.$durationSnapshot.getter();
  double v19 = v30;
  dispatch thunk of PlaybackController.$nowPlayingItem.getter();
  sub_100044200((unint64_t *)&unk_1006063E0, &qword_1006063C0);
  sub_100044200(&qword_100603410, &qword_1005FA1B0);
  double v20 = v29;
  uint64_t v21 = v31;
  uint64_t v22 = v33;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v21);
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10038DC94;
  *(void *)(v24 + 24) = v23;
  sub_100044200(&qword_1006063F0, &qword_1006063C8);
  uint64_t v25 = v35;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v25);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  id v26 = [self defaultCenter];
  [v26 addObserver:v0 selector:"applicationWillTerminate:" name:MTApplicationWillTerminateNotification object:0];
}

void sub_10038CDB0(char *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  char v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    swift_retain();

    dispatch thunk of PlaybackController.durationSnapshot.getter();
    swift_release();
    sub_10038DD20((uint64_t)v28, (uint64_t)v29);
    if (v31 != 2)
    {
      double v9 = *(double *)v29;
      double v10 = *(double *)&v29[3];
      double v11 = *(double *)&v29[4];
      float v12 = v30;
      swift_beginAccess();
      uint64_t v13 = swift_unknownObjectWeakLoadStrong();
      if (v13)
      {
        uint64_t v14 = (void *)v13;
        swift_retain();

        uint64_t v15 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter();
        swift_release();
        if (v15)
        {
          Date.init()();
          Date.timeIntervalSinceReferenceDate.getter();
          double v17 = v16;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          if (v11 + (v17 - v9) * v12 >= v10) {
            double v18 = v10;
          }
          else {
            double v18 = v11 + (v17 - v9) * v12;
          }
          swift_beginAccess();
          uint64_t v19 = swift_unknownObjectWeakLoadStrong();
          if (v19)
          {
            double v20 = (void *)v19;
            double v21 = fmax(v18, 0.0);
            uint64_t v22 = swift_allocObject();
            if (v6)
            {
              *(double *)(v22 + 16) = v21;
              *(unsigned char *)(v22 + 24) = 0;
              *(void *)(v22 + 32) = v20;
              *(void *)(v22 + 40) = v15;
              id v23 = v20;
              id v24 = v15;
              uint64_t v25 = v24;
              id v26 = sub_10038DE0C;
            }
            else
            {
              *(void *)(v22 + 16) = v20;
              *(double *)(v22 + 24) = v21;
              *(unsigned char *)(v22 + 32) = 0;
              *(void *)(v22 + 40) = v15;
              id v23 = v20;
              id v24 = v15;
              uint64_t v25 = v24;
              id v26 = (void (*)(void *))sub_10038DDC8;
            }
            sub_10038A9F0(v24, (uint64_t)v26, v22);

            swift_release();
          }
          else
          {
          }
        }
      }
    }
  }
}

void sub_10038D07C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10038DD20(a1, (uint64_t)v20);
  if (v22 != 2 && a2 != 0)
  {
    float v9 = v21;
    double v10 = *(double *)&v20[3];
    double v11 = *(double *)&v20[4];
    double v12 = *(double *)v20;
    id v13 = a2;
    Date.init()();
    Date.timeIntervalSinceReferenceDate.getter();
    double v15 = v14;
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v17 = (void *)Strong;
      double v18 = v11 + (v15 - v12) * v9;
      if (v18 >= v10) {
        double v18 = v10;
      }
      sub_10038D1FC(v13, fmax(v18, 0.0));
    }
  }
}

uint64_t sub_10038D1FC(void *a1, double a2)
{
  swift_beginAccess();
  swift_retain();
  Synchronized.wrappedValue.getter();
  uint64_t result = swift_release();
  if (a2 - v9 > 30.0)
  {
    swift_beginAccess();
    sub_100054B78((uint64_t *)&unk_1006063A0);
    Synchronized.wrappedValue.setter();
    swift_endAccess();
    swift_beginAccess();
    swift_retain();
    sub_100054B78(&qword_1005FC2B0);
    Synchronized.wrappedValue.getter();
    uint64_t result = swift_release();
    if ((v8 & 1) == 0)
    {
      swift_beginAccess();
      sub_100054B78((uint64_t *)&unk_1006063B0);
      Synchronized.wrappedValue.setter();
      swift_endAccess();
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v2;
      *(void *)(v6 + 24) = a1;
      *(double *)(v6 + 32) = a2;
      *(double *)(v6 + 40) = a2;
      id v7 = v2;
      sub_10038A9F0(a1, (uint64_t)sub_10038D554, v6);
      return swift_release();
    }
  }
  return result;
}

id sub_10038D444()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClassKitManager();
  return [super dealloc];
}

uint64_t sub_10038D514()
{
  return swift_deallocObject();
}

void sub_10038D554(void *a1)
{
  sub_10038BAEC(a1, *(double *)(v1 + 32), *(double *)(v1 + 40), *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10038D560(void *a1, void *a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  double v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  double v14 = (char *)&v54 - v13;
  __chkstk_darwin(v12);
  double v16 = (char *)&v54 - v15;
  id v17 = [a1 podcast];
  if (v17)
  {
    double v18 = v17;
    uint64_t v19 = MPModelObject.adamID.getter();
    char v21 = v20;

    if ((v21 & 1) == 0)
    {
      uint64_t v22 = MPModelObject.adamID.getter();
      if ((v23 & 1) == 0)
      {
        uint64_t v24 = v22;
        uint64_t v55 = v8;
        sub_100054B78((uint64_t *)&unk_1005F83F0);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_10046D030;
        uint64_t v58 = v19;
        sub_1001A5874();
        *(void *)(v25 + 32) = BinaryInteger.description.getter();
        *(void *)(v25 + 40) = v26;
        uint64_t v58 = v24;
        *(void *)(v25 + 48) = BinaryInteger.description.getter();
        *(void *)(v25 + 56) = v27;
        id v28 = [a2 currentActivity];
        if (v28)
        {
          unint64_t v29 = v28;
          [a1 duration];
          double v31 = fmin(a3 / v30, 1.0);
          if (v31 < 0.0) {
            double v32 = 0.0;
          }
          else {
            double v32 = v31;
          }
          [a1 duration];
          double v34 = fmin(a4 / v33, 1.0);
          if (v34 < 0.0) {
            double v35 = 0.0;
          }
          else {
            double v35 = v34;
          }
          if (v32 == v35)
          {
            swift_bridgeObjectRelease();
            sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
            static OS_os_log.classKit.getter();
            uint64_t v36 = Logger.logObject.getter();
            os_log_type_t v37 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v36, v37))
            {
              id v38 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v38 = 0;
              _os_log_impl((void *)&_mh_execute_header, v36, v37, "Skipping range with equal start and stop times", v38, 2u);
              swift_slowDealloc();
            }

            (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v55);
          }
          else
          {
            uint64_t v58 = 0;
            unint64_t v59 = 0xE000000000000000;
            v39._countAndFlagsBits = 91;
            v39._object = (void *)0xE100000000000000;
            String.append(_:)(v39);
            Double.write<A>(to:)();
            v40._countAndFlagsBits = 8236;
            v40._object = (void *)0xE200000000000000;
            String.append(_:)(v40);
            Double.write<A>(to:)();
            v41._countAndFlagsBits = 93;
            v41._object = (void *)0xE100000000000000;
            String.append(_:)(v41);
            uint64_t v43 = v58;
            unint64_t v42 = v59;
            sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
            if (v32 >= v35)
            {
              static OS_os_log.classKit.getter();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v49 = Logger.logObject.getter();
              os_log_type_t v50 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v49, v50))
              {
                uint64_t v51 = swift_slowAlloc();
                uint64_t v58 = swift_slowAlloc();
                *(_DWORD *)uint64_t v51 = 136315394;
                swift_bridgeObjectRetain();
                uint64_t v57 = sub_10004B974(v43, v42, &v58);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v51 + 12) = 2080;
                uint64_t v52 = Array.description.getter();
                uint64_t v57 = sub_10004B974(v52, v53, &v58);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v49, v50, "Unable to add progress range %s to activity for episode - %s", (uint8_t *)v51, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
              }

              (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v55);
            }
            else
            {
              static OS_os_log.classKit.getter();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v44 = Logger.logObject.getter();
              os_log_type_t v45 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v44, v45))
              {
                uint64_t v46 = swift_slowAlloc();
                uint64_t v58 = swift_slowAlloc();
                *(_DWORD *)uint64_t v46 = 136315394;
                swift_bridgeObjectRetain();
                uint64_t v57 = sub_10004B974(v43, v42, &v58);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v46 + 12) = 2080;
                uint64_t v47 = Array.description.getter();
                uint64_t v57 = sub_10004B974(v47, v48, &v58);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v44, v45, "Adding progress range %s to activity for episode - %s", (uint8_t *)v46, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
              }
              (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v55);
              [v29 addProgressRangeFromStart:v32 toEnd:v35];
            }
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_10038DC54()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10038DC8C(char *a1)
{
}

void sub_10038DC94(uint64_t a1, void *a2)
{
}

uint64_t sub_10038DC9C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10038DCD4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(unsigned char *, void))(v1 + 16);
  sub_10038DD20(a1, (uint64_t)v5);
  return v3(v5, *(void *)(a1 + 56));
}

uint64_t sub_10038DD20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100605878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10038DD88()
{
  return swift_deallocObject();
}

uint64_t sub_10038DDCC()
{
  return swift_deallocObject();
}

void sub_10038DE0C(void *a1)
{
  sub_10038BBC4(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_10038DE1C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.classKit.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v19 = a3;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v5;
    uint64_t v12 = (uint8_t *)v11;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v13 = Array.description.getter();
    double v18 = a2;
    uint64_t v20 = sub_10004B974(v13, v14, aBlock);
    a3 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a2 = v18;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Stopping activity for episode - %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  [a2 stop];
  [a3 resignActive];
  id v15 = [self shared];
  aBlock[4] = (uint64_t)sub_10038A78C;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10034BD38;
  uint64_t aBlock[3] = (uint64_t)&unk_1005661D8;
  double v16 = _Block_copy(aBlock);
  [v15 saveWithCompletion:v16];
  _Block_release(v16);
}

uint64_t sub_10038E138()
{
  return sub_100389BC8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10038E14C(uint64_t a1)
{
  return sub_10038A120(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(uint64_t))(v1 + 40));
}

uint64_t sub_10038E160(unint64_t a1)
{
  return sub_1003AD510(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(uint64_t (**)(void))(v1 + 40));
}

uint64_t sub_10038E170()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10038E1B8()
{
  sub_10038ACCC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10038E1C4()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10038E20C(void *a1, void *a2)
{
  return sub_10038AFCC(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_10038E218()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10038E258()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

void sub_10038E288()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = dispatch thunk of PlaybackController.nowPlayingItem.getter();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    dispatch thunk of PlaybackController.durationSnapshot.getter();
    sub_10038DD20((uint64_t)v18, (uint64_t)v19);
    if (v21 == 2)
    {
    }
    else
    {
      double v7 = *(double *)v19;
      double v8 = *(double *)&v19[3];
      double v9 = *(double *)&v19[4];
      float v10 = v20;
      Date.init()();
      Date.timeIntervalSinceReferenceDate.getter();
      double v12 = v11;
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
      double v13 = v9 + (v12 - v7) * v10;
      if (v13 >= v8) {
        double v13 = v8;
      }
      double v14 = fmax(v13, 0.0);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v0;
      *(double *)(v15 + 24) = v14;
      *(unsigned char *)(v15 + 32) = 0;
      *(void *)(v15 + 40) = v6;
      id v16 = v0;
      id v17 = v6;
      sub_10038A9F0(v17, (uint64_t)sub_10038DDC8, v15);

      swift_release();
    }
  }
}

void sub_10038E444(void *a1)
{
  sub_10038C12C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10038E470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100059EA8(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_100054B78(&qword_100606428);
  return swift_task_create();
}

uint64_t sub_10038E61C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10038E65C()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100015D40, 0, 0);
}

uint64_t sub_10038E67C(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (a1)
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 32) = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_10038E7E8;
    return RestrictionsController.isExplicitContentRestrictedByDefaultInCurrentStorefront()();
  }
  else
  {
    uint64_t v6 = *(uint64_t (**)(void))(v4 + 8);
    return v6(0);
  }
}

uint64_t sub_10038E7E8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

void sub_10038E8E4(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = self;
  id v5 = [v4 mainBundle:v30];
  v6._countAndFlagsBits = 0xD000000000000016;
  v33._object = (void *)0xE000000000000000;
  v6._object = (void *)0x80000001004E0540;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v33._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v33);

  id v8 = [v4 mainBundle];
  v34._object = (void *)0xE000000000000000;
  v9._object = (void *)0x80000001004E0560;
  v9._countAndFlagsBits = 0xD000000000000014;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v34._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v34);

  id v11 = [v4 mainBundle];
  v35._object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 19279;
  v12._object = (void *)0xE200000000000000;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v35);

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [self alertControllerWithTitle:v14 message:v15 preferredStyle:1];

  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  double v18 = [self actionWithTitle:v17 style:0 handler:0];

  [v16 addAction:v18];
  [v16 setPreferredAction:v18];
  id v19 = [self sharedApplication];
  id v20 = [v19 delegate];

  if (v20)
  {
    if ([v20 respondsToSelector:"window"])
    {
      id v21 = [v20 window];
      swift_unknownObjectRelease();
      if (v21)
      {
        id v22 = [v21 rootViewController];

        if (v22)
        {
          uint64_t v23 = swift_allocObject();
          swift_unknownObjectWeakInit();
          aBlock[4] = sub_10038F1F0;
          aBlock[5] = v23;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10003B424;
          uint64_t aBlock[3] = &unk_1005664A8;
          uint64_t v24 = _Block_copy(aBlock);
          swift_release();
          [v22 presentViewController:v16 animated:1 completion:v24];
          _Block_release(v24);

          return;
        }
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  static Logger.restrictions.getter();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed to present launch restrictions alert due to missing root view controller", v27, 2u);
    swift_slowDealloc();
    id v28 = v18;
  }
  else
  {
    id v28 = v25;
    uint64_t v25 = v16;
    id v16 = v18;
  }
  uint64_t v29 = v31;

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v29);
}

void sub_10038EDC8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = [self standardUserDefaults];
    sub_10000FB64();
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v2 integerForKey:v3];

    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      Class isa = Int._bridgeToObjectiveC()().super.super.isa;
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v2 setValue:isa forKey:v6];
    }
  }
}

uint64_t sub_10038EECC(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  id v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  NSString v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *NSString v3 = v2;
  v3[1] = sub_10038EFAC;
  return v5(v2 + 32);
}

uint64_t sub_10038EFAC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  NSString v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_10038F0C0(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000B8F0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100606418 + dword_100606418);
  return v6(a1, v4);
}

uint64_t sub_10038F178()
{
  return swift_deallocObject();
}

void sub_10038F1B0()
{
  sub_10038E8E4(*(void *)(v0 + 16));
}

uint64_t sub_10038F1B8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10038F1F0()
{
}

uint64_t sub_10038F1F8()
{
  swift_release();

  return swift_deallocObject();
}

id MTPlayerItem.init(podcastEpisode:podcast:)(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithPodcastEpisode:a1 podcast:a2];

  return v4;
}

uint64_t sub_10038F294(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v7 = (uint64_t)sub_10035C26C(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        NSString v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              id v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        id v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = sub_10035C284(result);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

void MTPlayerItem.init(podcastEpisode:podcast:)(void *a1, id a2)
{
  uint64_t v3 = v2;
  sub_100054B78(&qword_1005F8FB8);
  __chkstk_darwin();
  uint64_t v358 = (uint64_t)&v332 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v371 = sub_100054B78(&qword_100606440);
  __chkstk_darwin();
  v357 = (uint64_t *)((char *)&v332 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v356 = (uint64_t *)((char *)&v332 - v8);
  __chkstk_darwin();
  v366 = (uint64_t *)((char *)&v332 - v9);
  double v372 = COERCE_DOUBLE(type metadata accessor for URL());
  uint64_t v362 = *(void *)(*(void *)&v372 - 8);
  __chkstk_darwin();
  v336 = (char *)&v332 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = type metadata accessor for PodcastEpisodeAttributes.MediaKind();
  uint64_t v359 = *(void *)(v349 - 8);
  __chkstk_darwin();
  *(void *)&double v370 = (char *)&v332 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  *(void *)&double v369 = (char *)&v332 - v12;
  uint64_t v355 = type metadata accessor for PodcastEpisodeAttributes.EpisodeType();
  uint64_t v354 = *(void *)(v355 - 8);
  __chkstk_darwin();
  v353 = (char *)&v332 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v364 = *(void *)(v14 - 8);
  uint64_t v365 = v14;
  __chkstk_darwin();
  v335 = (char *)&v332 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v368 = type metadata accessor for PodcastEpisodeAttributes.ChannelKind();
  uint64_t v351 = *(void *)(v368 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v332 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v350 = (char *)&v332 - v18;
  uint64_t v339 = type metadata accessor for PodcastAttributes.DisplayType();
  uint64_t v338 = *(void *)(v339 - 8);
  __chkstk_darwin();
  v337 = (char *)&v332 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin();
  v352 = (char *)&v332 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v347 = (uint64_t)&v332 - v21;
  __chkstk_darwin();
  uint64_t v23 = (char *)&v332 - v22;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  v340 = (char *)&v332 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v343 = (char *)&v332 - v25;
  __chkstk_darwin();
  v334 = (char *)&v332 - v26;
  __chkstk_darwin();
  id v28 = (char *)&v332 - v27;
  __chkstk_darwin();
  uint64_t v30 = (char *)&v332 - v29;
  uint64_t v361 = type metadata accessor for PriceType();
  uint64_t v360 = *(void *)(v361 - 8);
  __chkstk_darwin();
  double v32 = (char *)&v332 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    goto LABEL_15;
  }
  id v33 = a2;
  uint64_t v34 = ServerPodcastBase.relationships.getter();

  if (!v34) {
    goto LABEL_15;
  }
  uint64_t v35 = PodcastRelationships.channel.getter();
  swift_release();
  if (!v35) {
    goto LABEL_15;
  }
  unint64_t v36 = PodcastChannelRelationshipContainer.data.getter();
  swift_release();
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v42) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
  if (!*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    swift_bridgeObjectRelease();
LABEL_15:
    id v373 = 0;
    LODWORD(v367) = 1;
    goto LABEL_16;
  }
LABEL_6:
  v348 = v17;
  os_log_type_t v37 = v3;
  if ((v36 & 0xC000000000000001) != 0)
  {
    id v38 = a2;
    id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_216;
    }
    id v38 = a2;
    id v39 = *(id *)(v36 + 32);
  }
  Swift::String v40 = v39;
  swift_bridgeObjectRelease();
  if (v40)
  {
    id v41 = v40;
    ServerChannel.attributes.getter();
    id v373 = v41;

    ChannelAttributes.isSubscribed.getter();
    swift_release();
    LODWORD(v367) = 0;
  }
  else
  {
    id v373 = 0;
    LODWORD(v367) = 1;
  }
  a2 = v38;
  uint64_t v3 = v37;
  uint64_t v17 = v348;
LABEL_16:
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)();
  v374 = v32;
  if (!v45)
  {
    id v56 = (id)_MTLogCategoryPlayback();
    if (v56)
    {
      uint64_t v57 = v56;
      static os_log_type_t.error.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v58 = swift_allocObject();
      *(_OWORD *)(v58 + 16) = xmmword_10046D010;
      uint64_t v59 = ServerPodcastEpisode.id.getter();
      uint64_t v61 = v60;
      *(void *)(v58 + 56) = &type metadata for String;
      *(void *)(v58 + 64) = sub_10004DA4C();
      *(void *)(v58 + 32) = v59;
      *(void *)(v58 + 40) = v61;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v360 + 8))(v374, v361);
      swift_getObjectType();
      swift_deallocPartialClassInstance();
      return;
    }
    goto LABEL_218;
  }
  int v46 = v44;
  double v341 = v43;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  id v344 = a2;
  uint64_t v47 = dispatch thunk of ServerPodcastEpisode.relationships.getter();
  id v375 = a1;
  LODWORD(v342) = v46;
  if (v47)
  {
    unint64_t v48 = (void *)v47;
    uint64_t v49 = v23;
    os_log_type_t v50 = v17;
    uint64_t v51 = v3;
    id v52 = a2;
    unint64_t v53 = (void *)PodcastEpisodeRelationships.podcast.getter();

    if (v53)
    {
      unint64_t v54 = PodcastRelationshipContainer.data.getter();

      if (v54 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      a2 = v52;
      uint64_t v3 = v51;
      if (v55)
      {
        uint64_t v17 = v50;
        if ((v54 & 0xC000000000000001) != 0)
        {
          a2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v23 = v49;
          goto LABEL_25;
        }
        if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v23 = v49;
          a2 = *(id *)(v54 + 32);
LABEL_25:

          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
LABEL_216:
        __break(1u);
LABEL_217:
        __break(1u);
LABEL_218:
        __break(1u);
        goto LABEL_219;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      a2 = v52;
      uint64_t v3 = v51;
    }
    uint64_t v17 = v50;
    uint64_t v23 = v49;
  }
LABEL_31:
  id v376 = a2;
  sub_100054BBC((uint64_t)v30, (uint64_t)v28, (uint64_t *)&unk_1005F7750);
  uint64_t v62 = v362;
  uint64_t v63 = *(unsigned int (**)(char *, uint64_t, void))(v362 + 48);
  double v64 = v372;
  uint64_t v346 = v362 + 48;
  v345 = v63;
  if (v63(v28, 1, *(void *)&v372) == 1)
  {
    uint64_t v66 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v65);
    uint64_t v66 = v67;
    (*(void (**)(char *, double))(v62 + 8))(v28, COERCE_DOUBLE(*(void *)&v64));
  }
  id v68 = [v3 initWithUrl:v66];

  id v69 = v68;
  ServerPodcastEpisode.id.getter();
  NSString v70 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v71 = [v70 longLongValue];

  [v69 setEpisodeStoreId:v71];
  id v72 = v69;
  ServerPodcastEpisode.attributes.getter();
  PodcastEpisodeAttributes.name.getter();
  uint64_t v74 = v73;
  swift_release();
  if (v74)
  {
    NSString v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v75 = 0;
  }
  [v72 setTitle:v75];

  ServerPodcastEpisode.attributes.getter();
  PodcastEpisodeAttributes.guid.getter();
  uint64_t v77 = v76;
  swift_release();
  if (v77)
  {
    NSString v78 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v78 = 0;
  }
  [v72 setEpisodeGuid:v78];

  ServerPodcastEpisode.attributes.getter();
  dispatch_group_t v79 = (void *)PodcastEpisodeAttributes.description.getter();
  swift_release();
  if (v79)
  {
    ServerDescription.standard.getter();
    uint64_t v81 = v80;
    swift_release();
    if (v81)
    {
      dispatch_group_t v79 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      dispatch_group_t v79 = 0;
    }
  }
  [v72 setSubtitle:v79];

  v363 = v30;
  id v82 = v376;
  if (v376)
  {
    id v83 = v72;
    id v84 = v82;
    uint64_t v85 = ServerPodcastBase.attributes.getter();

    if (v85)
    {
      PodcastAttributes.name.getter();
      uint64_t v87 = v86;
      swift_release();
      if (v87) {
        goto LABEL_50;
      }
    }
  }
  else
  {
    id v88 = v72;
  }
  swift_bridgeObjectRelease();
LABEL_50:
  NSString v89 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v72 setAuthor:v89];

  ServerPodcastEpisode.attributes.getter();
  PodcastEpisodeAttributes.releaseDateResolved.getter();
  swift_release();
  uint64_t v91 = v364;
  uint64_t v90 = v365;
  uint64_t v92 = v364 + 48;
  uint64_t v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48);
  unsigned int v94 = v93(v23, 1, v365);
  uint64_t v333 = v92;
  v332 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v93;
  if (v94 == 1)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v23, v90);
  }
  [v72 setPubDate:isa v332 v333];

  uint64_t v379 = ServerPodcastEpisode.attributes.getter();
  type metadata accessor for PodcastEpisodeAttributes();
  MediaAttributes.contentRatingResolved.getter();
  swift_release();
  uint64_t v96 = ContentRating.rawValue.getter();
  uint64_t v98 = v97;
  char v99 = 1;
  if (v96 != ContentRating.rawValue.getter() || v98 != v100) {
    char v99 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  [v72 setIsExplicit:v99 & 1];

  id v101 = v72;
  PriceType.rawValue.getter();
  NSString v102 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v101 setPriceType:v102];

  id v103 = v376;
  if (v376)
  {
    id v104 = v101;
    id v105 = v103;
    id v103 = (id)ServerPodcastBase.attributes.getter();

    if (v103)
    {
      uint64_t v106 = v337;
      PodcastAttributes.displayTypeResolved.getter();
      swift_release();
      PodcastAttributes.DisplayType.rawValue.getter();
      (*(void (**)(char *, uint64_t))(v338 + 8))(v106, v339);
      id v103 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v107 = v101;
  }
  [v101 setPodcastDisplayType:v103];

  double v108 = v341 / 1000.0;
  if (v342) {
    double v108 = 0.0;
  }
  [v101 setDuration:v108];
  v348 = v17;
  if (v367)
  {
    id v109 = v101;
    uint64_t v110 = 0;
  }
  else
  {
    id v111 = v373;
    id v112 = v101;
    ServerChannel.attributes.getter();

    LOBYTE(v111) = ChannelAttributes.isSubscribed.getter();
    swift_release();
    uint64_t v110 = v111 & 1;
  }
  [v101 setPaidSubscriptionActive:v110];
  ServerPodcastEpisode.attributes.getter();
  uint64_t v113 = PodcastEpisodeAttributes.channelKind.getter();
  uint64_t v115 = v114;
  swift_release();
  uint64_t v116 = v351;
  uint64_t v117 = v350;
  uint64_t v118 = v368;
  v342 = *(void (**)(char *, void, uint64_t))(v351 + 104);
  v342(v350, enum case for PodcastEpisodeAttributes.ChannelKind.music(_:), v368);
  uint64_t v119 = PodcastEpisodeAttributes.ChannelKind.rawValue.getter();
  uint64_t v121 = v120;
  uint64_t v122 = *(void (**)(char *, uint64_t))(v116 + 8);
  v122(v117, v118);
  if (v115)
  {
    if (v113 == v119 && v115 == v121) {
      char v123 = 1;
    }
    else {
      char v123 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v123 = 0;
  }
  swift_bridgeObjectRelease();
  [v101 setIsAppleMusicEpisode:v123 & 1];
  ServerPodcastEpisode.attributes.getter();
  uint64_t v124 = PodcastEpisodeAttributes.channelKind.getter();
  uint64_t v126 = v125;
  swift_release();
  uint64_t v127 = v348;
  uint64_t v128 = v368;
  v342(v348, enum case for PodcastEpisodeAttributes.ChannelKind.news(_:), v368);
  uint64_t v129 = PodcastEpisodeAttributes.ChannelKind.rawValue.getter();
  uint64_t v131 = v130;
  v122(v127, v128);
  if (v126)
  {
    uint64_t v132 = v359;
    if (v124 == v129 && v126 == v131) {
      char v133 = 1;
    }
    else {
      char v133 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    id v134 = v376;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v133 = 0;
    id v134 = v376;
    uint64_t v132 = v359;
  }
  swift_bridgeObjectRelease();
  [v101 setIsAppleNewsEpisode:v133 & 1];

  if ((v367 & 1) == 0)
  {
    id v135 = v373;
    uint64_t v136 = ServerChannel.id.getter();
    unint64_t v138 = v137;

    uint64_t v139 = sub_10038F294(v136, v138);
    if ((v140 & 1) == 0)
    {
      [v101 setChannelStoreId:v139];
      id v141 = v101;
      id v142 = v334;
      ServerPodcastEpisode.alternatePaidURL()();
      double v143 = v372;
      if (v345(v142, 1, *(void *)&v372) == 1)
      {
        id v145 = 0;
      }
      else
      {
        URL._bridgeToObjectiveC()(v144);
        id v145 = v146;
        (*(void (**)(char *, double))(v362 + 8))(v142, COERCE_DOUBLE(*(void *)&v143));
      }
      [v141 setAlternatePaidURL:v145];
    }
  }
  id v147 = v101;
  uint64_t v148 = ServerPodcastEpisode.id.getter();
  uint64_t v150 = sub_10038F294(v148, v149);
  if (v151) {
    uint64_t v152 = 0;
  }
  else {
    uint64_t v152 = v150;
  }
  [v147 setEpisodeStoreId:v152];

  id v153 = v147;
  if (v134)
  {
    id v154 = v134;
    uint64_t v155 = ServerPodcastBase.id.getter();
    unint64_t v157 = v156;
  }
  else
  {
    unint64_t v157 = 0xE100000000000000;
    uint64_t v155 = 48;
  }
  uint64_t v158 = sub_10038F294(v155, v157);
  if (v159) {
    uint64_t v160 = 0;
  }
  else {
    uint64_t v160 = v158;
  }
  [v147 setPodcastStoreId:v160];

  ServerPodcastEpisode.attributes.getter();
  uint64_t v161 = PodcastEpisodeAttributes.seasonNumber.getter();
  char v163 = v162;
  swift_release();
  if (v163) {
    uint64_t v164 = 0;
  }
  else {
    uint64_t v164 = v161;
  }
  ServerPodcastEpisode.attributes.getter();
  uint64_t v165 = PodcastEpisodeAttributes.episodeNumber.getter();
  char v167 = v166;
  swift_release();
  if (v167) {
    uint64_t v165 = 0;
  }
  v168 = v352;
  uint64_t v368 = v164;
  if (v134)
  {
    NSString v169 = v134;
    if (ServerPodcastBase.attributes.getter())
    {
      char v170 = PodcastAttributes.isSerialShowTypeInFeed.getter();
      swift_release();
      if (v170)
      {
        if (v164 > 0)
        {
          v171 = self;
          id v172 = v147;
          id v173 = [v171 mainBundle];
          if (v165 < 1)
          {
            v383._object = (void *)0xE000000000000000;
            v328._object = (void *)0x80000001004D40D0;
            v328._countAndFlagsBits = 0xD000000000000014;
            v329._countAndFlagsBits = 0;
            v329._object = (void *)0xE000000000000000;
            v383._countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v328, (Swift::String_optional)0, (NSBundle)v173, v329, v383);

            sub_100054B78(&qword_1005F7720);
            uint64_t v330 = swift_allocObject();
            *(_OWORD *)(v330 + 16) = xmmword_10046D010;
            *(void *)(v330 + 56) = &type metadata for Int;
            *(void *)(v330 + 64) = &protocol witness table for Int;
            *(void *)(v330 + 32) = v368;
          }
          else
          {
            v174._countAndFlagsBits = 0xD000000000000020;
            v381._object = (void *)0xE000000000000000;
            v174._object = (void *)0x80000001004E0620;
            v175._countAndFlagsBits = 0;
            v175._object = (void *)0xE000000000000000;
            v381._countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v174, (Swift::String_optional)0, (NSBundle)v173, v175, v381);

            sub_100054B78(&qword_1005F7720);
            uint64_t v176 = swift_allocObject();
            *(_OWORD *)(v176 + 16) = xmmword_10046D030;
            *(void *)(v176 + 56) = &type metadata for Int;
            *(void *)(v176 + 64) = &protocol witness table for Int;
            *(void *)(v176 + 32) = v368;
            *(void *)(v176 + 96) = &type metadata for Int;
            *(void *)(v176 + 104) = &protocol witness table for Int;
            *(void *)(v176 + 72) = v165;
          }
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          NSString v183 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v172 setAlbum:v183];

          id v134 = v376;
          uint64_t v132 = v359;
          goto LABEL_208;
        }
        if (v165 > 0)
        {
          v177 = self;
          id v178 = v147;
          id v179 = [v177 mainBundle];
          v180._countAndFlagsBits = 0xD000000000000015;
          v382._object = (void *)0xE000000000000000;
          v180._object = (void *)0x80000001004D4520;
          v181._countAndFlagsBits = 0;
          v181._object = (void *)0xE000000000000000;
          v382._countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v180, (Swift::String_optional)0, (NSBundle)v179, v181, v382);

          sub_100054B78(&qword_1005F7720);
          uint64_t v182 = swift_allocObject();
          *(_OWORD *)(v182 + 16) = xmmword_10046D010;
          *(void *)(v182 + 56) = &type metadata for Int;
          *(void *)(v182 + 64) = &protocol witness table for Int;
          *(void *)(v182 + 32) = v165;
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          NSString v183 = String._bridgeToObjectiveC()();
          uint64_t v132 = v359;
          swift_bridgeObjectRelease();
          [v178 setAlbum:v183];

          id v134 = v376;
LABEL_208:
          uint64_t v193 = v355;
          goto LABEL_115;
        }
      }
    }

    id v134 = v376;
  }
  NSString v183 = v147;
  id v184 = [v183 pubDate];
  if (v184)
  {
    v185 = v184;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v186 = 0;
  }
  else
  {
    uint64_t v186 = 1;
  }
  uint64_t v187 = (uint64_t)v168;
  uint64_t v188 = v364;
  uint64_t v189 = v365;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v364 + 56))(v187, v186, 1, v365);
  uint64_t v190 = v187;
  uint64_t v191 = v347;
  sub_100053820(v190, v347, &qword_1005F5D20);
  if (v332(v191, 1, v189))
  {
    sub_100054B1C(v191, &qword_1005F5D20);
    NSString v169 = 0;
  }
  else
  {
    v192 = v335;
    (*(void (**)(char *, uint64_t, uint64_t))(v188 + 16))(v335, v191, v189);
    sub_100054B1C(v191, &qword_1005F5D20);
    Date.verboseDisplayStringWithoutTime()();
    (*(void (**)(char *, uint64_t))(v188 + 8))(v192, v189);
    NSString v169 = String._bridgeToObjectiveC()();
    id v134 = v376;
    swift_bridgeObjectRelease();
  }
  uint64_t v193 = v355;
  [v183 setAlbum:v169];
LABEL_115:

  [v147 setSeasonNumber:v368];
  [v147 setEpisodeNumber:v165];
  if (v134)
  {
    id v194 = v147;
    id v195 = v134;
    uint64_t v196 = ServerPodcastBase.attributes.getter();

    uint64_t v197 = v349;
    if (v196)
    {
      char v198 = PodcastAttributes.isSerialShowTypeInFeed.getter();
      swift_release();
    }
    else
    {
      char v198 = 0;
    }
  }
  else
  {
    id v199 = v147;
    char v198 = 0;
    uint64_t v197 = v349;
  }
  [v147 setPodcastIsSerial:v198 & 1];

  ServerPodcastEpisode.attributes.getter();
  v200 = v353;
  PodcastEpisodeAttributes.episodeType.getter();
  swift_release();
  uint64_t v201 = v354;
  int v202 = (*(uint64_t (**)(char *, uint64_t))(v354 + 88))(v200, v193);
  if (v202 == enum case for PodcastEpisodeAttributes.EpisodeType.full(_:))
  {
    [v147 setEpisodeType:0];
  }
  else if (v202 == enum case for PodcastEpisodeAttributes.EpisodeType.trailer(_:))
  {
    [v147 setEpisodeType:1];
  }
  else if (v202 == enum case for PodcastEpisodeAttributes.EpisodeType.bonus(_:))
  {
    [v147 setEpisodeType:2];
  }
  else
  {
    [v147 setEpisodeType:0];
    (*(void (**)(char *, uint64_t))(v201 + 8))(v200, v193);
  }
  id v203 = v147;
  ServerPodcastEpisode.attributes.getter();
  v204 = (void *)PodcastEpisodeAttributes.description.getter();
  swift_release();
  if (v204)
  {
    ServerDescription.standard.getter();
    uint64_t v206 = v205;
    swift_release();
    if (v206)
    {
      v204 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      v204 = 0;
    }
  }
  [v203 setItemDescription:v204];

  ServerPodcastEpisode.attributes.getter();
  PodcastEpisodeAttributes.mediaKindResolved.getter();
  swift_release();
  (*(void (**)(double, void, uint64_t))(v132 + 104))(COERCE_DOUBLE(*(void *)&v370), enum case for PodcastEpisodeAttributes.MediaKind.video(_:), v197);
  sub_100391C98();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v379 == v377 && v380 == v378) {
    char v207 = 1;
  }
  else {
    char v207 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v208 = *(void (**)(void, uint64_t))(v132 + 8);
  v208(*(void *)&v370, v197);
  v208(*(void *)&v369, v197);
  [v203 setIsVideo:v207 & 1];

  ServerPodcastEpisode.attributes.getter();
  PodcastEpisodeAttributes.url.getter();
  uint64_t v210 = v209;
  swift_release();
  if (v210)
  {
    uint64_t v211 = (uint64_t)v343;
    URL.init(string:)();
    swift_bridgeObjectRelease();
    double v212 = v372;
    if (v345((char *)v211, 1, *(void *)&v372) != 1)
    {
      uint64_t v218 = v362;
      v219 = v336;
      (*(void (**)(char *, uint64_t, double))(v362 + 32))(v336, v211, COERCE_DOUBLE(*(void *)&v212));
      id v220 = v203;
      URL._bridgeToObjectiveC()(v221);
      v223 = v222;
      [v220 setEpisodeShareUrl:v222];

      (*(void (**)(char *, double))(v218 + 8))(v219, COERCE_DOUBLE(*(void *)&v212));
      if (v134) {
        goto LABEL_139;
      }
LABEL_143:
      id v224 = v203;
LABEL_144:
      swift_bridgeObjectRelease();
      goto LABEL_145;
    }
    sub_100054B1C(v211, (uint64_t *)&unk_1005F7750);
  }
  if (!v134) {
    goto LABEL_143;
  }
LABEL_139:
  id v213 = v203;
  id v214 = v134;
  uint64_t v215 = ServerPodcastBase.attributes.getter();

  if (!v215) {
    goto LABEL_144;
  }
  PodcastAttributes.feedUrl.getter();
  uint64_t v217 = v216;
  swift_release();
  if (!v217) {
    goto LABEL_144;
  }
LABEL_145:
  NSString v225 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v203 setPodcastFeedUrl:v225];

  id v226 = v203;
  if (v134)
  {
    id v227 = v134;
    ServerPodcastBase.id.getter();
  }
  NSString v228 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v229 = [v228 longLongValue];

  [v203 setPodcastStoreId:v229];
  if (v134)
  {
    id v230 = v203;
    id v231 = v134;
    uint64_t v232 = ServerPodcastBase.attributes.getter();

    if (v232)
    {
      char v233 = PodcastAttributes.subscribable.getter();
      swift_release();
      char v234 = (v233 == 2) | v233;
      goto LABEL_152;
    }
  }
  else
  {
    id v235 = v203;
  }
  char v234 = 1;
LABEL_152:
  [v203 setIsNotSubscribeable:(v234 & 1) == 0];

  uint64_t v236 = v371;
  v237 = v366;
  uint64_t v238 = (uint64_t)v366 + *(int *)(v371 + 64);
  [v203 paidSubscriptionActive];
  uint64_t v239 = ServerPodcastEpisode.determineBestTranscriptMetadata(isSubscriptionActive:)();
  uint64_t v241 = v240;
  uint64_t v243 = v242;
  uint64_t v245 = v244;
  uint64_t *v237 = v239;
  v237[1] = v240;
  v237[2] = v242;
  v237[3] = v244;
  uint64_t v246 = *(int *)(v236 + 64);
  v247 = v356;
  uint64_t v248 = (uint64_t)v356 + v246;
  uint64_t *v356 = v239;
  v247[1] = v240;
  v247[2] = v242;
  v247[3] = v244;
  sub_100054BBC(v238, (uint64_t)v247 + v246, &qword_1005F8FB8);
  swift_bridgeObjectRetain();
  id v249 = v203;
  if (v241)
  {
    swift_bridgeObjectRetain();
    NSString v250 = String._bridgeToObjectiveC()();
  }
  else
  {
    NSString v250 = 0;
  }
  sub_100054B1C(v248, &qword_1005F8FB8);
  [v203 setTranscriptIdentifier:v250];

  uint64_t v251 = *(int *)(v371 + 64);
  v252 = v357;
  uint64_t v253 = (uint64_t)v357 + v251;
  uint64_t *v357 = v239;
  v252[1] = v241;
  v252[2] = v243;
  v252[3] = v245;
  sub_100054BBC(v238, (uint64_t)v252 + v251, &qword_1005F8FB8);
  id v254 = v203;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v255 = v358;
  sub_100053820(v253, v358, &qword_1005F8FB8);
  uint64_t v256 = type metadata accessor for TranscriptSource();
  uint64_t v257 = *(void *)(v256 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v257 + 48))(v255, 1, v256) == 1)
  {
    sub_100054B1C(v255, &qword_1005F8FB8);
    NSString v258 = 0;
  }
  else
  {
    TranscriptSource.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v255, v256);
    NSString v258 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v260 = v375;
  id v259 = v376;
  uint64_t v261 = (uint64_t)v363;
  [v254 setTranscriptSource:v258];

  ServerPodcastEpisode.attributes.getter();
  uint64_t v262 = PodcastEpisodeAttributes.artwork.getter();
  swift_release();
  if (v262)
  {
    ServerArtwork.url.getter();
    uint64_t v264 = v263;
    swift_release();
    if (v264)
    {
      type metadata accessor for ArtworkFormatter();
      id v265 = v254;
      v266 = v340;
      static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)();
      swift_bridgeObjectRelease();
      double v267 = v372;
      v269 = 0;
      if (v345(v266, 1, *(void *)&v372) != 1)
      {
        URL._bridgeToObjectiveC()(v268);
        v269 = v270;
        (*(void (**)(char *, double))(v362 + 8))(v266, COERCE_DOUBLE(*(void *)&v267));
      }
      [v265 setArtworkUrl:v269];

      uint64_t v261 = (uint64_t)v363;
    }
  }
  uint64_t v271 = dispatch thunk of ServerPodcastEpisode.relationships.getter();
  v272 = v374;
  if (!v271
    || (v273 = (void *)v271, uint64_t v274 = PodcastEpisodeRelationships.playbackPosition.getter(), v273, !v274))
  {
LABEL_173:
    ServerPodcastEpisode.attributes.getter();
    uint64_t v285 = PodcastEpisodeAttributes.episodeArtwork.getter();
    swift_release();
    if (v285)
    {
      uint64_t v286 = ServerArtwork.url.getter();
      if (!v287)
      {
        swift_release();
        if (v259)
        {
LABEL_181:
          id v297 = v259;
          uint64_t v298 = ServerPodcastBase.attributes.getter();

          if (v298)
          {
            uint64_t v299 = PodcastAttributes.artwork.getter();
            swift_release();
            if (v299)
            {
              double v300 = COERCE_DOUBLE(ServerArtwork.url.getter());
              if (v301)
              {
                double v372 = v300;
                id v376 = v254;
                double v302 = (double)ServerArtwork.width.getter();
                if (v303) {
                  double v302 = 0.0;
                }
                uint64_t v371 = *(void *)&v302;
                double v304 = (double)ServerArtwork.height.getter();
                if (v305) {
                  double v304 = 0.0;
                }
                double v370 = v304;
                *(double *)&uint64_t v306 = COERCE_DOUBLE(ServerArtwork.bgColor.getter());
                uint64_t v368 = v307;
                double v369 = *(double *)&v306;
                uint64_t v367 = ServerArtwork.textColor1.getter();
                uint64_t v365 = v308;
                ServerArtwork.textColor2.getter();
                ServerArtwork.textColor3.getter();
                ServerArtwork.textColor4.getter();
                id v309 = objc_allocWithZone((Class)type metadata accessor for PlayerArtwork());
                id v260 = v375;
                v310 = (void *)PlayerArtwork.init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)();
                id v311 = v376;
                [v376 setShowArtworkProperties:v310];
                swift_release();

                uint64_t v261 = (uint64_t)v363;
              }
              else
              {
                swift_release();
              }
            }
          }
          id v312 = v297;
          uint64_t v313 = ServerPodcastBase.attributes.getter();

          if (v313)
          {
            uint64_t v314 = PodcastAttributes.editorialArtwork.getter();
            swift_release();
            if (v314)
            {
              uint64_t v315 = PodcastEditorialArtworkContainer.podcastPageBackground.getter();
              swift_release();
              if (v315)
              {
                v316 = (void *)ServerArtwork.url.getter();
                if (v317)
                {
                  id v376 = v316;
                  double v318 = (double)ServerArtwork.width.getter();
                  if (v319) {
                    double v318 = 0.0;
                  }
                  double v372 = v318;
                  double v320 = (double)ServerArtwork.height.getter();
                  if (v321) {
                    double v320 = 0.0;
                  }
                  uint64_t v371 = *(void *)&v320;
                  *(double *)&uint64_t v322 = COERCE_DOUBLE(ServerArtwork.bgColor.getter());
                  double v369 = *(double *)&v323;
                  double v370 = *(double *)&v322;
                  uint64_t v324 = ServerArtwork.textColor1.getter();
                  uint64_t v367 = v325;
                  uint64_t v368 = v324;
                  ServerArtwork.textColor2.getter();
                  ServerArtwork.textColor3.getter();
                  ServerArtwork.textColor4.getter();
                  id v326 = objc_allocWithZone((Class)type metadata accessor for PlayerArtwork());
                  v327 = (void *)PlayerArtwork.init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)();
                  [v254 setUberArtworkProperties:v327];

                  swift_release();
                  sub_100054B1C((uint64_t)v366, &qword_100606440);
                  sub_100054B1C((uint64_t)v363, (uint64_t *)&unk_1005F7750);
                  (*(void (**)(char *, uint64_t))(v360 + 8))(v374, v361);
                  goto LABEL_204;
                }

                swift_release();
                v272 = v374;
LABEL_203:
                sub_100054B1C((uint64_t)v366, &qword_100606440);
                sub_100054B1C(v261, (uint64_t *)&unk_1005F7750);
                (*(void (**)(char *, uint64_t))(v360 + 8))(v272, v361);
LABEL_204:

                return;
              }
            }
          }
          v272 = v374;
LABEL_202:

          goto LABEL_203;
        }
LABEL_190:
        id v312 = 0;
        goto LABEL_202;
      }
      uint64_t v371 = v286;
      double v372 = COERCE_DOUBLE(v254);
      double v288 = (double)ServerArtwork.width.getter();
      if (v289) {
        double v288 = 0.0;
      }
      double v370 = v288;
      double v290 = (double)ServerArtwork.height.getter();
      if (v291) {
        double v290 = 0.0;
      }
      double v369 = v290;
      uint64_t v292 = ServerArtwork.bgColor.getter();
      uint64_t v367 = v293;
      uint64_t v368 = v292;
      uint64_t v365 = ServerArtwork.textColor1.getter();
      ServerArtwork.textColor2.getter();
      ServerArtwork.textColor3.getter();
      ServerArtwork.textColor4.getter();
      id v294 = objc_allocWithZone((Class)type metadata accessor for PlayerArtwork());
      id v260 = v375;
      id v259 = v376;
      v272 = v374;
      v295 = (void *)PlayerArtwork.init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)();
      double v296 = v372;
      [*(id *)&v372 setEpisodeArtworkProperties:v295];
      swift_release();

      uint64_t v261 = (uint64_t)v363;
    }
    if (v259) {
      goto LABEL_181;
    }
    goto LABEL_190;
  }
  unint64_t v275 = PodcastPlaybackPositionContainer.data.getter();
  swift_release();
  if (v275 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v261 = (uint64_t)v363;
    uint64_t v331 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v331) {
      goto LABEL_172;
    }
  }
  else if (!*(void *)((v275 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_172:
    swift_bridgeObjectRelease();
    goto LABEL_173;
  }
  if ((v275 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v275 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_retain();
      goto LABEL_170;
    }
    goto LABEL_217;
  }
  specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_170:
  swift_bridgeObjectRelease();
  PodcastPlaybackPositionData.attributes.getter();
  swift_release();
  PodcastPlaybackPositionDataAttributes.positionInMilliseconds.getter();
  double v277 = v276;
  swift_release();
  double v278 = v277 / 1000.0;
  [v254 setPlayhead:v278];
  id v279 = (id)_MTLogCategoryPlayback();
  if (v279)
  {
    v280 = v279;
    static os_log_type_t.default.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v281 = swift_allocObject();
    *(_OWORD *)(v281 + 16) = xmmword_10046D030;
    *(void *)(v281 + 56) = &type metadata for Double;
    *(void *)(v281 + 64) = &protocol witness table for Double;
    *(double *)(v281 + 32) = v278;
    uint64_t v282 = ServerPodcastEpisode.id.getter();
    uint64_t v284 = v283;
    *(void *)(v281 + 96) = &type metadata for String;
    *(void *)(v281 + 104) = sub_10004DA4C();
    *(void *)(v281 + 72) = v282;
    *(void *)(v281 + 80) = v284;
    os_log(_:dso:log:type:_:)();

    v272 = v374;
    uint64_t v261 = (uint64_t)v363;
    goto LABEL_172;
  }
LABEL_219:
  __break(1u);
}

unint64_t sub_100391C98()
{
  unint64_t result = qword_100606448;
  if (!qword_100606448)
  {
    type metadata accessor for PodcastEpisodeAttributes.MediaKind();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100606448);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EntitledFirstTimeAvailableMigrator.performMigrationStep()()
{
}

uint64_t sub_100391D4C(void *a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithEntityName:v3];

  id v5 = [self predicateForDerivedEntitlementStateEntitled];
  [v4 setPredicate:v5];

  [v4 setReturnsObjectsAsFaults:0];
  [v4 setFetchBatchSize:200];
  sub_1003184DC();
  uint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  uint64_t v11 = result;
  if ((unint64_t)result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
    {
LABEL_14:

      return swift_bridgeObjectRelease();
    }
  }
  if (v7 >= 1)
  {
    uint64_t v8 = 0;
    while (1)
    {
      id v9 = (v11 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v11 + 8 * v8 + 32);
      uint64_t v10 = v9;
      [v9 resolveAvailabilityDate];
      uint64_t result = (uint64_t)[v4 fetchBatchSize];
      if (!result) {
        break;
      }
      if (!(++v8 % result)) {
        [a1 saveInCurrentBlock];
      }

      if (v7 == v8) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100391F74()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 privateQueueContext];

  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  v5[4] = sub_1002F3A10;
  v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_10003B424;
  v5[3] = &unk_1005665E8;
  NSString v3 = _Block_copy(v5);
  id v4 = v1;
  swift_release();
  [v4 performBlockAndWaitWithSave:v3];
  _Block_release(v3);
}

ValueMetadata *type metadata accessor for EntitledFirstTimeAvailableMigrator()
{
  return &type metadata for EntitledFirstTimeAvailableMigrator;
}

uint64_t sub_1003920A8()
{
  return swift_deallocObject();
}

uint64_t sub_1003920E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return String.subscript.getter();
  }
  else {
    return 0;
  }
}

uint64_t sub_100392128(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = __CocoaSet.startIndex.getter();
    uint64_t v5 = v4;
    __CocoaSet.endIndex.getter();
    char v6 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100360974(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_100392B34(v3, v5, v2 != 0, a1);
    uint64_t v7 = v11;
    sub_100360974(v3, v5, v2 != 0);
    return v7;
  }
  uint64_t result = sub_100360730(a1);
  if ((v10 & 1) == 0)
  {
    uint64_t v5 = v9;
    if (*(_DWORD *)(a1 + 36) == v9)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100392238(uint64_t a1)
{
  uint64_t result = sub_100392A94(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_100392D8C(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

void sub_1003922B8()
{
  uint64_t v1 = v0;
  type metadata accessor for EpisodeMetadata(0);
  __chkstk_darwin();
  int v3 = (char *)&aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_100607FB0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts34FetchBatchEpisodeMetadataOperation_uuids);
  if (*(void *)(v6 + 16) == 1
    && (uint64_t v7 = sub_100392238(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts34FetchBatchEpisodeMetadataOperation_uuids)), v8))
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    sub_10040C624(v7, v8, (uint64_t)v5);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)v5;
      uint64_t v12 = *((void *)v5 + 1);
      unsigned __int8 v13 = v5[16];
      sub_1002435BC();
      uint64_t v14 = swift_allocError();
      *(void *)uint64_t v15 = v11;
      *(void *)(v15 + 8) = v12;
      *(unsigned char *)(v15 + 16) = v13;
      sub_1002433A0(v11, v12, v13);
      sub_100419980(v14, 1);
      sub_1002433D8(v11, v12, v13);
      swift_errorRelease();
    }
    else
    {
      sub_100392970((uint64_t)v5, (uint64_t)v3);
      sub_100054B78(&qword_100606498);
      uint64_t v24 = (int *)(sub_100054B78(&qword_1005F6488) - 8);
      unint64_t v25 = (*(unsigned __int8 *)(*(void *)v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v24 + 80);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_10046D010;
      uint64_t v27 = (uint64_t *)(v26 + v25);
      uint64_t v28 = v26 + v25 + v24[14];
      uint64_t *v27 = v9;
      v27[1] = v10;
      sub_1003929D4((uint64_t)v3, v28);
      unint64_t v29 = sub_10016F594(v26);
      uint64_t v30 = *(void (**)(void ***))(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
      if (v30)
      {
        uint64_t v34 = (void *)sub_100054B78(&qword_1006064A0);
        long long aBlock = (void **)v29;
        LOBYTE(v32) = 0;
        sub_10004ACDC((uint64_t)v30);
        swift_bridgeObjectRetain();
        v30(&aBlock);
        sub_1000536BC((uint64_t)v30);
        sub_10004D2D8((uint64_t)&aBlock);
      }
      sub_100049E74();
      swift_bridgeObjectRelease();
      sub_100392A38((uint64_t)v3);
    }
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts34FetchBatchEpisodeMetadataOperation_episodeStorage);
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v18 = *(uint64_t (**)(uint64_t))(v16 + 16);
    swift_retain();
    uint64_t v19 = swift_retain();
    uint64_t v20 = (void *)v18(v19);
    swift_release();
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = v6;
    v21[3] = v20;
    v21[4] = v16;
    v21[5] = sub_100392908;
    v21[6] = v17;
    uint64_t v35 = sub_100392960;
    unint64_t v36 = v21;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    id v33 = sub_10003B424;
    uint64_t v34 = &unk_100566660;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    id v23 = v20;
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    [v23 performBlock:v22];
    _Block_release(v22);
    swift_release_n();
  }
}

void sub_1003926D8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v3 = (void *)Strong;
    uint64_t v4 = *(void (**)(uint64_t *))(Strong + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
    if (v4)
    {
      uint64_t v7 = sub_100054B78(&qword_1006064A0);
      uint64_t v5 = a1;
      char v6 = 0;
      swift_bridgeObjectRetain_n();
      sub_10004ACDC((uint64_t)v4);
      v4(&v5);
      sub_1000536BC((uint64_t)v4);
      sub_10004D2D8((uint64_t)&v5);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_100049E74();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003927EC()
{
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_10039282C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FetchBatchEpisodeMetadataOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for FetchBatchEpisodeMetadataOperation()
{
  return self;
}

uint64_t sub_1003928D0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100392908(uint64_t a1)
{
}

uint64_t sub_100392910()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100392960()
{
  return sub_10040C56C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_100392970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003929D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100392A38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100392A94(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_100392B34(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_1003184DC();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_1003184DC();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = static NSObject.== infix(_:_:)();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  uint64_t v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_100392D8C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

id sub_100392DE0(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_10002090C(a1);
}

uint64_t sub_100392E14()
{
  swift_release();
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_flowController, &qword_100604710);
  swift_unknownObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100392F30(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_flowController;
  swift_beginAccess();
  sub_10005DF4C(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_100392F8C())()
{
  return j__swift_endAccess;
}

uint64_t sub_100392FE8(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)(v2 + OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_actionRunner);
  swift_beginAccess();
  *char v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_100393048())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1003930A4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1003930F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OSLogger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  char v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  id v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  char v10 = &v1[OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_actionRunner];
  swift_beginAccess();
  if (*(void *)v10)
  {
    uint64_t v17 = *((void *)v10 + 1);
    swift_unknownObjectRetain();
    Link.Presentation.init(rawValue:)();
    static ActionMetrics.notInstrumented.getter();
    uint64_t v11 = type metadata accessor for TabChangeAction();
    swift_allocObject();
    uint64_t v12 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
    type metadata accessor for ActionRunnerOptions();
    swift_retain();
    BaseObjectGraph.__allocating_init(_:)();
    memset(v20, 0, sizeof(v20));
    id v13 = [v1 view];
    sub_100054BBC((uint64_t)v20, (uint64_t)v18, &qword_1005F5D30);
    uint64_t v14 = v6;
    id v15 = v13;
    ActionOrigin.init(sender:view:)();
    ActionRunnerOptions.withActionOrigin(_:)();
    sub_100054B1C((uint64_t)v19, (uint64_t *)&unk_100600670);
    swift_release();

    sub_100054B1C((uint64_t)v20, &qword_1005F5D30);
    swift_getObjectType();
    v19[3] = v11;
    v19[4] = sub_1000119D8((unint64_t *)&unk_100600680, 255, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
    v19[0] = v12;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ActionMetricsBehavior.notProcessed(_:), v14);
    swift_retain();
    ActionRunner.perform(_:withMetrics:asPartOf:)();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
    return sub_10004D2D8((uint64_t)v19);
  }
  else
  {
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.init(stringLiteral:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_100393588()
{
  uint64_t v1 = v0;
  type metadata accessor for JULoadingViewController.PresentationContext();
  __chkstk_darwin();
  static JULoadingViewController.PresentationContext.fullCover.getter();
  id v2 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController());
  uint64_t v3 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)();
  uint64_t v4 = OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_overlayViewController;
  id v5 = *(id *)(v1 + OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_overlayViewController);
  static ViewControllerContainment.remove(_:)();

  uint64_t v6 = *(void **)(v1 + v4);
  *(void *)(v1 + v4) = v3;
  id v7 = v3;

  id v8 = *(id *)(v1 + v4);
  static ViewControllerContainment.add(_:to:frame:)();
}

void sub_1003936A8(char a1, uint64_t a2)
{
  if (static Podcasts.isUIPSidebarEnabled.getter())
  {
    char v5 = a1 & 1;
    uint64_t v6 = TabMenu.Group.items(for:)();
    id v7 = sub_10000C004(v6);
    swift_bridgeObjectRelease();
    id v8 = v2;
    swift_bridgeObjectRetain();
    unint64_t v9 = (unint64_t)sub_100395380((uint64_t)v7, (uint64_t)v8, a2, v5);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v9 >> 62)
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F7EB0);
      swift_bridgeObjectRetain();
      _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F7EB0);
    }
    swift_bridgeObjectRelease();
    sub_10004D29C(0, (unint64_t *)&qword_1005F7EB0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 setViewControllers:isa];
  }
}

void sub_10039382C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  uint64_t v9 = *a1;
  sub_100393ABC(*a1);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(a3 + 16);
  char v28 = a4;
  if (!v12)
  {
    id v16 = v10;
LABEL_12:
    id v21 = [v11 _uip_tabElement:v26];

    if (v21 && (self, uint64_t v22 = swift_dynamicCastObjCClass(), v21, v22))
    {
      id v14 = v11;
    }
    else
    {
      uint64_t v23 = *(void *)(a2 + OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_objectGraph);
      uint64_t v24 = a2 + OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_flowController;
      swift_beginAccess();
      sub_100054BBC(v24, (uint64_t)v29, &qword_100604710);
      if (v30)
      {
        sub_100054B78(&qword_1005F7E80);
        type metadata accessor for ParentFlowController();
        if (swift_dynamicCast()) {
          unint64_t v25 = v31;
        }
        else {
          unint64_t v25 = 0;
        }
      }
      else
      {
        sub_100054B1C((uint64_t)v29, &qword_100604710);
        unint64_t v25 = 0;
      }
      id v14 = sub_1003950A8(v23, v25, v9, v28 & 1);
      swift_release();
      if (v14) {

      }
      else {
        id v14 = v11;
      }
    }
    goto LABEL_23;
  }
  uint64_t v27 = a5;
  uint64_t v13 = *(void *)(a3 + 32);
  id v14 = v10;
  swift_bridgeObjectRetain();
  sub_100036488(v13);
  char v15 = static NavigationTab.== infix(_:_:)();
  sub_10003649C(v13);
  if (v15)
  {
LABEL_3:

    swift_bridgeObjectRelease();
    a5 = v27;
LABEL_23:
    *a5 = v14;
    return;
  }
  if (v12 == 1)
  {
    swift_bridgeObjectRelease();
    a5 = v27;
    goto LABEL_12;
  }
  uint64_t v26 = v11;
  uint64_t v17 = 5;
  while (1)
  {
    uint64_t v18 = v17 - 3;
    if (__OFADD__(v17 - 4, 1)) {
      break;
    }
    uint64_t v19 = *(void *)(a3 + 8 * v17);
    sub_100036488(v19);
    char v20 = static NavigationTab.== infix(_:_:)();
    sub_10003649C(v19);
    if (v20) {
      goto LABEL_3;
    }
    ++v17;
    if (v18 == v12)
    {
      swift_bridgeObjectRelease();
      a5 = v27;
      uint64_t v11 = v26;
      goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_100393ABC(uint64_t a1)
{
  char v2 = static Podcasts.isUIPSidebarEnabled.getter();
  uint64_t v155 = v1;
  unint64_t v3 = UITabBarController.navigationControllers.getter();
  uint64_t v4 = v3;
  unint64_t v5 = v3 >> 62;
  if ((v2 & 1) == 0)
  {
    if (v5)
    {
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      if (v9)
      {
LABEL_7:
        uint64_t v10 = 4;
        while (1)
        {
          id v11 = (v4 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(v4 + 8 * v10);
          uint64_t v12 = v11;
          uint64_t v13 = v10 - 3;
          if (__OFADD__(v10 - 4, 1)) {
            break;
          }
          id v14 = [v11 tabBarItem];
          if (!v14) {
            goto LABEL_168;
          }
          char v15 = v14;
          [v14 tag];

          uint64_t v16 = NavigationTab.init(intValue:)();
          if (v16 != 19)
          {
            uint64_t v17 = v16;
            char v18 = static NavigationTab.== infix(_:_:)();
            sub_100349EF0(v17);
            if (v18) {
              goto LABEL_142;
            }
          }

          ++v10;
          if (v13 == v9) {
            goto LABEL_166;
          }
        }
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        if (v6) {
          goto LABEL_4;
        }
        goto LABEL_158;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9) {
        goto LABEL_7;
      }
    }
LABEL_166:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
    goto LABEL_169;
  }
  if (v5) {
    goto LABEL_157;
  }
  uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
  {
LABEL_158:
    swift_bridgeObjectRelease();
    uint64_t v129 = *(void *)(v155 + OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_objectGraph);
    uint64_t v130 = v155 + OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_flowController;
    swift_beginAccess();
    sub_100054BBC(v130, (uint64_t)v171, &qword_100604710);
    if (v172)
    {
      sub_100054B78(&qword_1005F7E80);
      type metadata accessor for ParentFlowController();
      if (swift_dynamicCast()) {
        uint64_t v131 = v170;
      }
      else {
        uint64_t v131 = 0;
      }
    }
    else
    {
      sub_100054B1C((uint64_t)v171, &qword_100604710);
      uint64_t v131 = 0;
    }
    id v132 = sub_1003950A8(v129, v131, a1, 1);
    swift_release();
    if (v132) {
      return;
    }
LABEL_169:
    __break(1u);
    return;
  }
LABEL_4:
  unint64_t v7 = 0;
  unint64_t v159 = v4 & 0xC000000000000001;
  uint64_t v143 = v4 + 32;
  uint64_t v144 = v4 & 0xFFFFFFFFFFFFFF8;
  id v8 = &NSFileSize_ptr;
  uint64_t v153 = v6;
  while (1)
  {
    if (v159)
    {
      unint64_t v19 = v7;
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v7 >= *(void *)(v144 + 16)) {
        goto LABEL_167;
      }
      unint64_t v19 = v7;
      id v20 = *(id *)(v143 + 8 * v7);
    }
    id v21 = v20;
    BOOL v22 = __OFADD__(v19, 1);
    unint64_t v23 = v19 + 1;
    if (v22) {
      goto LABEL_152;
    }
    unint64_t v164 = v23;
    id v24 = [v20 _uip_tabElement];
    if (v24)
    {
      unint64_t v25 = v24;
      uint64_t v26 = UITab.navigationTab.getter();

      LOBYTE(v25) = static NavigationTab.== infix(_:_:)();
      sub_10003649C(v26);
      if (v25) {
        goto LABEL_142;
      }
    }
    id v27 = [v21 _uip_tabElement:v133];
    char v28 = v27;
    if (v27)
    {
      id v29 = [v27 _identifier];

      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      char v28 = v31;
    }
    else
    {
      uint64_t v30 = 0;
    }
    id v32 = [self _searchElement];
    id v33 = [v32 _identifier];

    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v36 = v35;

    if (!v28)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    if (v30 == v34 && v28 == v36)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_36;
      }
    }
    if (static NavigationTab.== infix(_:_:)()) {
      goto LABEL_142;
    }
LABEL_36:
    id v38 = [v21 _uip_tabElement];
    if (v38) {
      break;
    }

LABEL_18:
    unint64_t v7 = v164;
    if (v164 == v153) {
      goto LABEL_158;
    }
  }
  id v39 = v38;
  uint64_t v40 = UITab.navigationTab.getter();
  char v41 = static NavigationTab.== infix(_:_:)();
  sub_10003649C(v40);
  if (v41)
  {
    swift_bridgeObjectRelease();

    return;
  }
  self;
  uint64_t v42 = swift_dynamicCastObjCClass();
  if (!v42)
  {

    goto LABEL_18;
  }
  double v43 = (void *)v42;
  id v44 = v39;
  id v45 = [v43 _children];
  sub_10004D29C(0, &qword_100606510);
  unint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v46 >> 62))
  {
    uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v47) {
      goto LABEL_41;
    }
    goto LABEL_130;
  }
  swift_bridgeObjectRetain();
  uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
  if (!v47)
  {
LABEL_130:

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
LABEL_41:
  uint64_t v48 = 0;
  unint64_t v156 = v46 & 0xC000000000000001;
  unint64_t v141 = v46 + 32;
  uint64_t v151 = v47;
  while (2)
  {
    if (v156) {
      id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v49 = *(id *)(v141 + 8 * v48);
    }
    os_log_type_t v50 = v49;
    BOOL v22 = __OFADD__(v48, 1);
    uint64_t v51 = v48 + 1;
    if (v22) {
      goto LABEL_153;
    }
    uint64_t v163 = v51;
    self;
    if (!swift_dynamicCastObjCClass()) {
      goto LABEL_52;
    }
    uint64_t v52 = UITab.navigationTab.getter();
    char v53 = static NavigationTab.== infix(_:_:)();
    sub_10003649C(v52);
    if (v53)
    {

      swift_bridgeObjectRelease();
      goto LABEL_141;
    }
    self;
    uint64_t v54 = swift_dynamicCastObjCClass();
    if (!v54)
    {
LABEL_52:

      goto LABEL_129;
    }
    uint64_t v55 = (void *)v54;
    id v145 = v50;
    id v56 = [v55 _children];
    unint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v57 >> 62))
    {
      uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v59 = v58;
      if (v58) {
        goto LABEL_51;
      }
LABEL_128:

      swift_bridgeObjectRelease_n();
LABEL_129:
      uint64_t v48 = v163;
      if (v163 == v151) {
        goto LABEL_130;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain();
  uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
  if (!v59) {
    goto LABEL_128;
  }
LABEL_51:
  uint64_t v60 = 0;
  unint64_t v61 = v57 & 0xC000000000000001;
  unint64_t v136 = v57 + 32;
  unint64_t v137 = v57 & 0xC000000000000001;
  uint64_t v150 = v59;
  while (2)
  {
    if (v61) {
      id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v62 = *(id *)(v136 + 8 * v60);
    }
    uint64_t v63 = v62;
    BOOL v22 = __OFADD__(v60++, 1);
    if (v22) {
      goto LABEL_154;
    }
    self;
    if (!swift_dynamicCastObjCClass())
    {

      goto LABEL_54;
    }
    uint64_t v149 = v60;
    uint64_t v64 = UITab.navigationTab.getter();
    char v65 = static NavigationTab.== infix(_:_:)();
    sub_10003649C(v64);
    if (v65)
    {
      uint64_t v126 = v145;

      swift_bridgeObjectRelease();
      goto LABEL_140;
    }
    self;
    uint64_t v66 = swift_dynamicCastObjCClass();
    if (!v66)
    {

      goto LABEL_126;
    }
    uint64_t v67 = (void *)v66;
    id v68 = v63;
    id v69 = [v67 _children];
    unint64_t v70 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v70 >> 62))
    {
      uint64_t v71 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v72 = v71;
      if (v71) {
        goto LABEL_64;
      }
LABEL_125:

      swift_bridgeObjectRelease_n();
LABEL_126:
      uint64_t v60 = v149;
      unint64_t v61 = v137;
LABEL_54:
      if (v60 == v150) {
        goto LABEL_128;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain();
  uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
  if (!v72) {
    goto LABEL_125;
  }
LABEL_64:
  uint64_t v73 = 0;
  unint64_t v152 = v70 & 0xC000000000000001;
  unint64_t v135 = v70 + 32;
  char v162 = v68;
  uint64_t v147 = v72;
  while (2)
  {
    uint64_t v74 = v73;
    if (v152) {
      id v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v75 = *(id *)(v135 + 8 * v73);
    }
    uint64_t v76 = v75;
    BOOL v22 = __OFADD__(v74, 1);
    uint64_t v77 = v74 + 1;
    if (v22) {
      goto LABEL_155;
    }
    uint64_t v161 = v77;
    self;
    if (!swift_dynamicCastObjCClass())
    {

      goto LABEL_66;
    }
    uint64_t v78 = UITab.navigationTab.getter();
    char v79 = static NavigationTab.== infix(_:_:)();
    sub_10003649C(v78);
    if (v79)
    {
      uint64_t v127 = v162;

      swift_bridgeObjectRelease();
      uint64_t v126 = v145;
      goto LABEL_139;
    }
    self;
    uint64_t v80 = swift_dynamicCastObjCClass();
    if (!v80)
    {

      id v68 = v162;
      goto LABEL_66;
    }
    uint64_t v81 = (void *)v80;
    id v82 = v44;
    id v83 = v76;
    id v84 = [v81 _children];
    unint64_t v85 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v157 = v85;
    id v142 = v83;
    if (v85 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v87 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v86 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v87 = v86;
    }
    id v68 = v162;
    id v44 = v82;
    if (!v87)
    {
LABEL_121:

      swift_bridgeObjectRelease_n();
LABEL_66:
      uint64_t v73 = v161;
      if (v161 == v147) {
        goto LABEL_125;
      }
      continue;
    }
    break;
  }
  uint64_t v88 = 0;
  unint64_t v133 = v157 + 32;
  id v134 = v82;
  uint64_t v146 = v87;
  while (1)
  {
    uint64_t v89 = v88;
    if ((v157 & 0xC000000000000001) != 0) {
      id v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v90 = *(id *)(v133 + 8 * v88);
    }
    uint64_t v91 = v90;
    BOOL v22 = __OFADD__(v89, 1);
    uint64_t v92 = v89 + 1;
    if (v22) {
      goto LABEL_156;
    }
    uint64_t v160 = v92;
    self;
    if (swift_dynamicCastObjCClass()) {
      break;
    }

LABEL_79:
    uint64_t v88 = v160;
    if (v160 == v146) {
      goto LABEL_121;
    }
  }
  uint64_t v93 = UITab.navigationTab.getter();
  char v94 = static NavigationTab.== infix(_:_:)();
  sub_10003649C(v93);
  if (v94)
  {
    uint64_t v128 = v142;

    swift_bridgeObjectRelease();
    uint64_t v126 = v145;
    uint64_t v127 = v162;
    goto LABEL_138;
  }
  self;
  uint64_t v95 = swift_dynamicCastObjCClass();
  if (!v95)
  {

    id v68 = v162;
    goto LABEL_79;
  }
  uint64_t v96 = (void *)v95;
  id v138 = v91;
  id v97 = [v96 _children];
  unint64_t v98 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v98 >> 62))
  {
    uint64_t v99 = *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v68 = v162;
    if (v99) {
      goto LABEL_89;
    }
    goto LABEL_119;
  }
  swift_bridgeObjectRetain();
  uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
  id v68 = v162;
  if (!v99)
  {
LABEL_119:

    swift_bridgeObjectRelease_n();
    goto LABEL_79;
  }
LABEL_89:
  uint64_t v100 = 0;
  unint64_t v158 = v98 & 0xC000000000000001;
  unint64_t v139 = v98 + 32;
  uint64_t v140 = v4;
  uint64_t v154 = v99;
  char v166 = v21;
  while (2)
  {
    if (v158) {
      id v101 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v101 = *(id *)(v139 + 8 * v100);
    }
    NSString v102 = v101;
    BOOL v22 = __OFADD__(v100, 1);
    uint64_t v103 = v100 + 1;
    if (v22) {
      goto LABEL_151;
    }
    uint64_t v165 = v103;
    self;
    if (!swift_dynamicCastObjCClass()) {
      goto LABEL_90;
    }
    uint64_t v104 = UITab.navigationTab.getter();
    char v105 = static NavigationTab.== infix(_:_:)();
    sub_10003649C(v104);
    if ((v105 & 1) == 0)
    {
      self;
      uint64_t v106 = swift_dynamicCastObjCClass();
      if (v106)
      {
        id v107 = (void *)v106;
        id v148 = v102;
        id v108 = [v107 _children];
        unint64_t v109 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (!(v109 >> 62))
        {
          uint64_t v4 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v4) {
            goto LABEL_101;
          }
LABEL_116:

          swift_bridgeObjectRelease_n();
          uint64_t v4 = v140;
LABEL_91:
          uint64_t v100 = v165;
          if (v165 == v154) {
            goto LABEL_119;
          }
          continue;
        }
        swift_bridgeObjectRetain();
        uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
        if (!v4) {
          goto LABEL_116;
        }
LABEL_101:
        unint64_t v168 = v109 & 0xC000000000000001;
        uint64_t v110 = 4;
        unint64_t v167 = v109;
        while (2)
        {
          if (v168) {
            id v111 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v111 = *(id *)(v109 + 8 * v110);
          }
          id v112 = v111;
          uint64_t v113 = v110 - 3;
          if (__OFADD__(v110 - 4, 1)) {
            goto LABEL_150;
          }
          self;
          if (swift_dynamicCastObjCClass())
          {
            uint64_t v114 = v4;
            uint64_t v115 = v8;
            id v116 = v112;
            uint64_t v117 = UITab.navigationTab.getter();
            char v118 = static NavigationTab.== infix(_:_:)();
            sub_10003649C(v117);
            if (v118)
            {
              uint64_t v124 = v148;

              swift_bridgeObjectRelease();
LABEL_136:
              uint64_t v125 = v138;

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v126 = v145;
              uint64_t v127 = v162;
              goto LABEL_137;
            }
            self;
            uint64_t v119 = swift_dynamicCastObjCClass();
            if (v119)
            {
              uint64_t v120 = (void *)v119;
              id v121 = v116;
              id v122 = [v120 _children];
              unint64_t v123 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              sub_100036488(a1);
              LOBYTE(v122) = sub_100394E6C(v123, a1);
              sub_10003649C(a1);
              swift_bridgeObjectRelease();

              if (v122)
              {
                uint64_t v124 = v148;

                swift_bridgeObjectRelease();
                goto LABEL_136;
              }
              id v8 = v115;
              unint64_t v109 = v167;
              uint64_t v4 = v114;
              id v21 = v166;
              goto LABEL_104;
            }

            id v8 = v115;
            unint64_t v109 = v167;
            uint64_t v4 = v114;
            id v21 = v166;
          }

LABEL_104:
          ++v110;
          if (v113 == v4)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v4 = v140;
            id v44 = v134;
            id v68 = v162;
            goto LABEL_91;
          }
          continue;
        }
      }
LABEL_90:

      goto LABEL_91;
    }
    break;
  }
  uint64_t v127 = v68;
  uint64_t v125 = v138;

  swift_bridgeObjectRelease();
  uint64_t v126 = v145;
LABEL_137:
  uint64_t v128 = v142;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_138:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v44 = v134;
LABEL_139:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_140:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_141:
  swift_bridgeObjectRelease();

LABEL_142:
  swift_bridgeObjectRelease();
}

id sub_100394A6C()
{
  id v1 = [v0 selectedViewController];

  return v1;
}

uint64_t (*sub_100394AA8(void *a1))()
{
  char v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = UITabBarController.selectedNavigationController.modify();
  return sub_1001B8C14;
}

void sub_100394B04(char a1, uint64_t a2)
{
}

uint64_t (*sub_100394B1C(void *a1))()
{
  char v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = UITabBarController.rootViewControllers.modify();
  return sub_1001B8C14;
}

NSObject *sub_100394B74()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  unint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = UITabBarController.selectedNavigationController.getter();
  if (result)
  {
    unint64_t v5 = result;
    id v6 = [result visibleViewController];
    if (v6
      && (id v13 = v6,
          sub_10004D29C(0, (unint64_t *)&qword_1005F7EB0),
          sub_100054B78(&qword_100606528),
          (swift_dynamicCast() & 1) != 0))
    {
      if (*((void *)&v15 + 1))
      {
        sub_100042FC4(&v14, (uint64_t)v17);
LABEL_11:
        sub_100041A98(v17, v17[3]);
        dispatch thunk of SearchPerforming.perform(searchAction:)();

        return sub_10004D2D8((uint64_t)v17);
      }
    }
    else
    {
      uint64_t v16 = 0;
      long long v14 = 0u;
      long long v15 = 0u;
    }
    sub_100054B1C((uint64_t)&v14, &qword_100606520);
    id v7 = [v5 bottomViewController];
    if (v7
      && (id v13 = v7,
          sub_10004D29C(0, (unint64_t *)&qword_1005F7EB0),
          sub_100054B78(&qword_100606528),
          (swift_dynamicCast() & 1) != 0))
    {
      if (*((void *)&v15 + 1))
      {
        sub_100042FC4(&v14, (uint64_t)v17);
        FlowNavigationController.popToRootViewController(animated:)(1);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v16 = 0;
      long long v14 = 0u;
      long long v15 = 0u;
    }
    sub_100054B1C((uint64_t)&v14, &qword_100606520);
    static Logger.ui.getter();
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Search actions may only be performed while the SearchViewController is visible.", v10, 2u);
      swift_slowDealloc();
      id v11 = v5;
    }
    else
    {
      id v11 = v8;
      id v8 = v5;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

NSObject *sub_100394E48()
{
  return sub_100394B74();
}

uint64_t sub_100394E6C(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v18 = v2 & 0xC000000000000001;
      uint64_t v4 = 4;
      while (1)
      {
        if (v18) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(v2 + 8 * v4);
        }
        id v6 = v5;
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        self;
        if (!swift_dynamicCastObjCClass()) {
          goto LABEL_5;
        }
        unint64_t v8 = v2;
        id v9 = v6;
        uint64_t v10 = UITab.navigationTab.getter();
        char v11 = static NavigationTab.== infix(_:_:)();
        sub_10003649C(v10);
        if (v11)
        {
          swift_bridgeObjectRelease();

          return 1;
        }
        self;
        uint64_t v12 = swift_dynamicCastObjCClass();
        if (!v12) {
          break;
        }
        id v13 = (void *)v12;
        id v14 = v9;
        id v15 = [v13 _children];
        sub_10004D29C(0, &qword_100606510);
        uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100036488(a2);
        LOBYTE(v15) = sub_100394E6C(v16, a2);
        sub_10003649C(a2);
        swift_bridgeObjectRelease();

        if (v15)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
        unint64_t v2 = v8;
LABEL_6:
        ++v4;
        if (v7 == v3) {
          goto LABEL_22;
        }
      }

      unint64_t v2 = v8;
LABEL_5:

      goto LABEL_6;
    }
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1003950A8(uint64_t a1, id a2, uint64_t a3, char a4)
{
  sub_100054B78(&qword_100606518);
  __chkstk_darwin();
  unint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v9 = (uint64_t (*)(uint64_t, void))ParentFlowController.viewControllerGenerator.getter();
    if (v9)
    {
      uint64_t v10 = (uint64_t)v9;
      uint64_t v11 = v9(a3, a4 & 1);
      if (v11)
      {
        uint64_t v12 = (void *)v11;
        type metadata accessor for FlowNavigationController();
        swift_retain();
        id v13 = (void *)FlowNavigationController.__allocating_init(asPartOf:)();
        if (static Podcasts.isUIPSidebarEnabled.getter())
        {
          v24[0] = v13;
          static TabMenu.item(for:interfaceMode:)();
          uint64_t v14 = type metadata accessor for TabMenu.Item();
          uint64_t v15 = *(void *)(v14 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
          {
            sub_100054B1C((uint64_t)v8, &qword_100606518);
            uint64_t v16 = 0;
          }
          else
          {
            uint64_t v16 = (void *)TabMenu.Item.tabBarElement(asPartOf:interfaceMode:)();
            (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v14);
          }
          id v17 = v24[0];
          [v24[0] _uip_setTabElement:v16];
        }
        id v18 = v13;
        id v19 = [v12 tabBarItem];
        [v18 setTabBarItem:v19];

        sub_100054B78((uint64_t *)&unk_1005FA7F0);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_10046D060;
        *(void *)(v20 + 32) = v12;
        v24[1] = (id)v20;
        specialized Array._endMutation()();
        sub_10004D29C(0, (unint64_t *)&qword_1005F7EB0);
        a2 = v18;
        id v21 = v12;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [a2 setViewControllers:isa];

        sub_1000536BC(v10);
      }
      else
      {
        sub_1000536BC(v10);
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return a2;
}

void *sub_100395380(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v7)
  {
    char v11 = a4 & 1;
    id v17 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v12 = (uint64_t *)(a1 + 32);
    while (1)
    {
      uint64_t v14 = *v12++;
      uint64_t v13 = v14;
      uint64_t v15 = v14;
      sub_100036488(v14);
      sub_10039382C(&v15, a2, a3, v11, &v16);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      sub_10003649C(v13);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v7) {
        return v17;
      }
    }
    sub_10003649C(v13);
    return (void *)swift_release();
  }
  return result;
}

void *sub_100395498(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      uint64_t v7 = UITab.navigationTab.getter();
      char v8 = static NavigationTab.== infix(_:_:)();
      sub_10003649C(v7);
      if (v8)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1003955C4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

uint64_t sub_100395610(uint64_t a1, uint64_t a2, void *a3)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v8 = (char *)&v14 - v7;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    URL.init(string:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7750);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_100041A98(a3, a3[3]);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v12, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
      LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)();
      swift_release();
      sub_100054B1C((uint64_t)v6, (uint64_t *)&unk_1005F7750);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  return 0;
}

uint64_t sub_100395858(uint64_t *a1, id a2)
{
  id v3 = [a2 uuid];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003958D8(uint64_t *a1, void *a2)
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FlowPresentationContext();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FlowAction();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for FlowPresentationContext.pushDetail(_:), v6);
  id v10 = a2;
  static ActionMetrics.notInstrumented.getter();
  *a1 = FlowAction.init(podcast:presentationContext:actionMetrics:)(v10, (uint64_t)v9, (uint64_t)v5);
  return swift_release();
}

uint64_t sub_100395A38(uint64_t *a1, id a2, uint64_t a3)
{
  id v5 = [a2 uuid];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  *a1 = v7;
  a1[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t result = MTEpisode.contentId.getter();
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v11 & 1;
  return result;
}

void sub_100395AC8(uint64_t a1, id *a2, void **a3, void *a4)
{
  type metadata accessor for PodcastsURLEpisodeParameters(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 24);
  sub_10039B8F0(a1, (uint64_t)v9);
  if (v10)
  {
    sub_10039B954((uint64_t)v9);
  }
  else
  {
    uint64_t v11 = v9[56];
    sub_10039B954((uint64_t)v9);
    if (v11) {
      goto LABEL_11;
    }
  }
  id v12 = [objc_allocWithZone((Class)MTEpisodeLookupRequest) init];
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRetain();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v13 = 0;
  }
  [v12 setUuid:v13];

  if (*(unsigned char *)(a1 + 56)) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = *(void *)(a1 + 48);
  }
  [v12 setStoreTrackId:v14];
  id v15 = [self sharedInstance];
  id v16 = [v15 findEpisodeWithRequest:v12];

  id v17 = *a2;
  *a2 = v16;

LABEL_11:
  if (*a2)
  {
    id v18 = [*a2 podcast];
    id v19 = *a3;
    *a3 = v18;
  }
  else
  {
    id v19 = *a3;
    *a3 = 0;
  }

  if (!*a3)
  {
    if (*(void *)(a1 + 8))
    {
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = [a4 podcastForUuid:v20];

      BOOL v22 = *a3;
      *a3 = v21;
    }
  }
}

id sub_100395CE0(uint64_t a1, unint64_t a2, void **a3, uint64_t a4, uint64_t a5, void *a6, id *a7)
{
  uint64_t v14 = self;
  id result = [v14 isNotEmpty:a1];
  if (result)
  {
    id v36 = [self predicateForPodcastStoreId:a1];
    id v16 = [a2 objectsInEntity:kMTPodcastEntityName];
    if (!v16) {
      goto LABEL_14;
    }
    id v17 = v16;
    sub_10004D29C(0, (unint64_t *)&qword_1005F7130);
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      id v19 = (id *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_5;
      }
    }
    else
    {
      id v19 = *(id **)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v19)
      {
LABEL_5:
        if ((v18 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_31;
          }
          id v20 = *(id *)(v18 + 32);
        }
        id v21 = v20;
        swift_bridgeObjectRelease();
        self;
        id v16 = (id)swift_dynamicCastObjCClass();
        if (v16)
        {
LABEL_14:
          BOOL v22 = *a3;
          *a3 = v16;

          if (*a3)
          {
            id v19 = a7;
            id v23 = [v14 isNotEmpty:a4];
            if (v23)
            {
              id v24 = [self predicateForEpisodeStoreTrackId:a4];
              goto LABEL_19;
            }
            if (a6)
            {
              sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
              sub_100054B78(&qword_1005F7720);
              uint64_t v25 = swift_allocObject();
              *(_OWORD *)(v25 + 16) = xmmword_10046D030;
              uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v28 = v27;
              *(void *)(v25 + 56) = &type metadata for String;
              unint64_t v29 = sub_10004DA4C();
              *(void *)(v25 + 32) = v26;
              *(void *)(v25 + 40) = v28;
              *(void *)(v25 + 96) = &type metadata for String;
              *(void *)(v25 + 104) = v29;
              *(void *)(v25 + 64) = v29;
              *(void *)(v25 + 72) = a5;
              *(void *)(v25 + 80) = a6;
              swift_bridgeObjectRetain();
              id v24 = (id)NSPredicate.init(format:_:)();
LABEL_19:
              a6 = v24;
              id v30 = [a2 objectsInEntity:kMTEpisodeEntityName predicate:v24 sortDescriptors:a5];
              if (!v30)
              {

                goto LABEL_33;
              }
              uint64_t v31 = v30;
              sub_10004D29C(0, (unint64_t *)&qword_1005F7130);
              a2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if (!(a2 >> 62))
              {
                if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
LABEL_22:
                  if ((a2 & 0xC000000000000001) != 0)
                  {
                    id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    {
                      __break(1u);
                      return (id)_objc_release_x1(v23, v32);
                    }
                    id v33 = *(id *)(a2 + 32);
                  }
                  uint64_t v34 = v33;

                  swift_bridgeObjectRelease();
                  self;
                  id v23 = (id)swift_dynamicCastObjCClass();
                  if (v23) {
                    goto LABEL_34;
                  }

LABEL_33:
                  id v23 = 0;
LABEL_34:
                  id v32 = *v19;
                  *id v19 = v23;
LABEL_35:
                  return (id)_objc_release_x1(v23, v32);
                }
LABEL_32:
                swift_bridgeObjectRelease();

                goto LABEL_33;
              }
LABEL_31:
              swift_bridgeObjectRetain();
              uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
              id v23 = (id)swift_bridgeObjectRelease();
              if (v35) {
                goto LABEL_22;
              }
              goto LABEL_32;
            }
          }
          id v32 = v36;
          goto LABEL_35;
        }

LABEL_13:
        id v16 = 0;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  return result;
}

uint64_t type metadata accessor for URLActionResolver()
{
  return self;
}

uint64_t sub_100396134(void *a1)
{
  uint64_t v2 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v70 = v2;
  uint64_t v71 = v3;
  __chkstk_darwin();
  id v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FlowPresentationContext();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  uint64_t v74 = v7;
  __chkstk_darwin();
  char v65 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v66 = (char *)&v61 - v9;
  __chkstk_darwin();
  uint64_t v67 = (char *)&v61 - v10;
  __chkstk_darwin();
  id v12 = (char *)&v61 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v61 - v13;
  uint64_t v15 = type metadata accessor for FlowDestination();
  uint64_t v72 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v64 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v18 = (char *)&v61 - v17;
  __chkstk_darwin();
  id v20 = (char *)&v61 - v19;
  __chkstk_darwin();
  BOOL v22 = (char *)&v61 - v21;
  __chkstk_darwin();
  id v24 = (char *)&v61 - v23;
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  uint64_t v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1[2];
  if (v27)
  {
    if ((id v69 = v26, a1[4] == 0x7972617262696CLL) && a1[5] == 0xE700000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      id v62 = v5;
      uint64_t v61 = type metadata accessor for PopToRootAction();
      swift_allocObject();
      id v68 = a1;
      swift_bridgeObjectRetain();
      uint64_t v63 = PopToRootAction.init(animationBehavior:)();
      id v28 = [self currentTraitCollection];
      char v29 = UITraitCollection.interfaceMode.getter();

      if (v29)
      {
        if (v27 != 1)
        {
          uint64_t v40 = v68[6];
          uint64_t v41 = v68[7];
          if ((v40 != 0x73776F6873 || v41 != 0xE500000000000000)
            && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
            && (v40 != 0x6465766173 || v41 != 0xE500000000000000)
            && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
            && (v40 != 0x64616F6C6E776F64 || v41 != 0xEA00000000006465)
            && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
            && (v40 != 0x652D74736574616CLL || v41 != 0xEF7365646F736970))
          {
            _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          Link.Presentation.init(rawValue:)();
          static ActionMetrics.notInstrumented.getter();
          type metadata accessor for TabChangeAction();
          swift_allocObject();
          uint64_t v30 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
          swift_release();
          goto LABEL_26;
        }
        goto LABEL_10;
      }
      if (v27 == 1)
      {
LABEL_10:
        Link.Presentation.init(rawValue:)();
        static ActionMetrics.notInstrumented.getter();
        type metadata accessor for TabChangeAction();
        swift_allocObject();
        uint64_t v30 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
LABEL_21:
        swift_release();
LABEL_26:
        swift_bridgeObjectRelease();
        return v30;
      }
      uint64_t v31 = v68[6];
      uint64_t v32 = v68[7];
      if (v31 == 0x73776F6873 && v32 == 0xE500000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        (*(void (**)(char *, void, uint64_t))(v72 + 104))(v24, enum case for FlowDestination.shows(_:), v15);
        (*(void (**)(char *, void, uint64_t))(v74 + 104))(v14, enum case for FlowPresentationContext.showDetail(_:), v73);
        unsigned __int8 v33 = static Link.Presentation.textFollowsTintColor.getter();
        char v34 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
        Link.Presentation.init(rawValue:)();
        Link.Presentation.init(rawValue:)();
        if (Link.Presentation.init(rawValue:)() != v33) {
          Link.Presentation.init(rawValue:)();
        }
        Link.Presentation.init(rawValue:)();
        char v35 = Link.Presentation.init(rawValue:)();
        uint64_t v36 = v63;
        if (v35 != v34) {
          Link.Presentation.init(rawValue:)();
        }
      }
      else
      {
        if (v31 == 0x6465766173 && v32 == 0xE500000000000000
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          *(void *)BOOL v22 = 4;
          *(_OWORD *)(v22 + 8) = 0u;
          *(_OWORD *)(v22 + 24) = 0u;
          *(_OWORD *)(v22 + 40) = 0u;
          *((void *)v22 + 7) = 0;
          v22[64] = 9;
          (*(void (**)(char *, void, uint64_t))(v72 + 104))(v22, enum case for FlowDestination.episodeList(_:), v15);
          (*(void (**)(char *, void, uint64_t))(v74 + 104))(v12, enum case for FlowPresentationContext.showDetail(_:), v73);
          unsigned __int8 v43 = static Link.Presentation.textFollowsTintColor.getter();
          char v44 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
          Link.Presentation.init(rawValue:)();
          Link.Presentation.init(rawValue:)();
          if (Link.Presentation.init(rawValue:)() != v43) {
            Link.Presentation.init(rawValue:)();
          }
          Link.Presentation.init(rawValue:)();
          char v45 = Link.Presentation.init(rawValue:)();
          uint64_t v46 = v63;
          if (v45 != v44) {
            Link.Presentation.init(rawValue:)();
          }
          (*(void (**)(char *, void, uint64_t))(v71 + 104))(v62, enum case for FlowDestinationPageHeader.standard(_:), v70);
          static ActionMetrics.notInstrumented.getter();
          uint64_t v47 = type metadata accessor for FlowAction();
          swift_allocObject();
          uint64_t v48 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
          sub_100054B78(&qword_100603DD0);
          uint64_t v49 = swift_allocObject();
          *(_OWORD *)(v49 + 16) = xmmword_10046D030;
          *(void *)(v49 + 56) = v61;
          *(void *)(v49 + 64) = sub_10039BC84(&qword_1006065D0, (void (*)(uint64_t))&type metadata accessor for PopToRootAction);
          *(void *)(v49 + 32) = v46;
          *(void *)(v49 + 96) = v47;
          *(void *)(v49 + 104) = sub_10039BC84((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
          *(void *)(v49 + 72) = v48;
          swift_retain();
          swift_retain();
          Link.Presentation.init(rawValue:)();
          static ActionMetrics.notInstrumented.getter();
          type metadata accessor for TabChangeAction();
          swift_allocObject();
          goto LABEL_20;
        }
        if ((v31 != 0x64616F6C6E776F64 || v32 != 0xEA00000000006465)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if ((v31 != 0x652D74736574616CLL || v32 != 0xEF7365646F736970)
            && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            if ((v31 != 0xD000000000000010 || v32 != 0x80000001004E07F0)
              && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
            {
              swift_release();
              swift_bridgeObjectRelease();
              return 0;
            }
            sub_100054B78(&qword_100603DD0);
            uint64_t v55 = swift_allocObject();
            *(_OWORD *)(v55 + 16) = xmmword_10046D030;
            *(void *)(v55 + 56) = v61;
            *(void *)(v55 + 64) = sub_10039BC84(&qword_1006065D0, (void (*)(uint64_t))&type metadata accessor for PopToRootAction);
            id v56 = v64;
            *(void *)(v55 + 32) = v63;
            (*(void (**)(char *, void, uint64_t))(v72 + 104))(v56, enum case for FlowDestination.recentlyUpdated(_:), v15);
            (*(void (**)(char *, void, uint64_t))(v74 + 104))(v65, enum case for FlowPresentationContext.showDetail(_:), v73);
            swift_retain();
            unsigned __int8 v57 = static Link.Presentation.textFollowsTintColor.getter();
            unsigned __int8 v58 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
            Link.Presentation.init(rawValue:)();
            Link.Presentation.init(rawValue:)();
            if (Link.Presentation.init(rawValue:)() != v57) {
              Link.Presentation.init(rawValue:)();
            }
            Link.Presentation.init(rawValue:)();
            if (Link.Presentation.init(rawValue:)() != v58) {
              Link.Presentation.init(rawValue:)();
            }
            (*(void (**)(char *, void, uint64_t))(v71 + 104))(v62, enum case for FlowDestinationPageHeader.standard(_:), v70);
            static ActionMetrics.notInstrumented.getter();
            uint64_t v59 = type metadata accessor for FlowAction();
            swift_allocObject();
            uint64_t v60 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
            *(void *)(v55 + 96) = v59;
            *(void *)(v55 + 104) = sub_10039BC84((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
            *(void *)(v55 + 72) = v60;
            Link.Presentation.init(rawValue:)();
            static ActionMetrics.notInstrumented.getter();
            type metadata accessor for TabChangeAction();
            swift_allocObject();
            uint64_t v30 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
            goto LABEL_21;
          }
          *(void *)unint64_t v18 = 3;
          *(_OWORD *)(v18 + 8) = 0u;
          *(_OWORD *)(v18 + 24) = 0u;
          *(_OWORD *)(v18 + 40) = 0u;
          *((void *)v18 + 7) = 0;
          v18[64] = 9;
          (*(void (**)(char *, void, uint64_t))(v72 + 104))(v18, enum case for FlowDestination.episodeList(_:), v15);
          (*(void (**)(char *, void, uint64_t))(v74 + 104))(v66, enum case for FlowPresentationContext.showDetail(_:), v73);
          unsigned __int8 v53 = static Link.Presentation.textFollowsTintColor.getter();
          unsigned __int8 v54 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
          Link.Presentation.init(rawValue:)();
          Link.Presentation.init(rawValue:)();
          if (Link.Presentation.init(rawValue:)() != v53) {
            Link.Presentation.init(rawValue:)();
          }
          Link.Presentation.init(rawValue:)();
          if (Link.Presentation.init(rawValue:)() != v54) {
            Link.Presentation.init(rawValue:)();
          }
          (*(void (**)(char *, void, uint64_t))(v71 + 104))(v62, enum case for FlowDestinationPageHeader.standard(_:), v70);
          static ActionMetrics.notInstrumented.getter();
          uint64_t v37 = type metadata accessor for FlowAction();
          swift_allocObject();
          uint64_t v38 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
          sub_100054B78(&qword_100603DD0);
          uint64_t v39 = swift_allocObject();
          *(_OWORD *)(v39 + 16) = xmmword_10046D030;
          *(void *)(v39 + 56) = v61;
          *(void *)(v39 + 64) = sub_10039BC84(&qword_1006065D0, (void (*)(uint64_t))&type metadata accessor for PopToRootAction);
          uint64_t v36 = v63;
          goto LABEL_19;
        }
        *((_OWORD *)v20 + 2) = 0u;
        *((_OWORD *)v20 + 3) = 0u;
        *(_OWORD *)id v20 = 0u;
        *((_OWORD *)v20 + 1) = 0u;
        v20[64] = 9;
        (*(void (**)(char *, void, uint64_t))(v72 + 104))(v20, enum case for FlowDestination.episodeList(_:), v15);
        (*(void (**)(char *, void, uint64_t))(v74 + 104))(v67, enum case for FlowPresentationContext.showDetail(_:), v73);
        unsigned __int8 v50 = static Link.Presentation.textFollowsTintColor.getter();
        char v51 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
        Link.Presentation.init(rawValue:)();
        Link.Presentation.init(rawValue:)();
        if (Link.Presentation.init(rawValue:)() != v50) {
          Link.Presentation.init(rawValue:)();
        }
        Link.Presentation.init(rawValue:)();
        char v52 = Link.Presentation.init(rawValue:)();
        uint64_t v36 = v63;
        if (v52 != v51) {
          Link.Presentation.init(rawValue:)();
        }
      }
      (*(void (**)(char *, void, uint64_t))(v71 + 104))(v62, enum case for FlowDestinationPageHeader.standard(_:), v70);
      static ActionMetrics.notInstrumented.getter();
      uint64_t v37 = type metadata accessor for FlowAction();
      swift_allocObject();
      uint64_t v38 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
      sub_100054B78(&qword_100603DD0);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_10046D030;
      *(void *)(v39 + 56) = v61;
      *(void *)(v39 + 64) = sub_10039BC84(&qword_1006065D0, (void (*)(uint64_t))&type metadata accessor for PopToRootAction);
LABEL_19:
      *(void *)(v39 + 32) = v36;
      *(void *)(v39 + 96) = v37;
      *(void *)(v39 + 104) = sub_10039BC84((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
      *(void *)(v39 + 72) = v38;
      swift_retain();
      swift_retain();
      Link.Presentation.init(rawValue:)();
      static ActionMetrics.notInstrumented.getter();
      type metadata accessor for TabChangeAction();
      swift_allocObject();
LABEL_20:
      uint64_t v30 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
      swift_release();
      goto LABEL_21;
    }
  }
  return 0;
}

uint64_t sub_100397388(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin();
  id v28 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  char v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  uint64_t v5 = URL.pathComponents.getter();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 40);
    uint64_t v8 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v12 = *(v7 - 1);
      uint64_t v13 = *v7;
      BOOL v14 = v12 == 47 && v13 == 0xE100000000000000;
      if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v30 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10005986C(0, v8[2] + 1, 1);
          uint64_t v8 = v30;
        }
        unint64_t v10 = v8[2];
        unint64_t v9 = v8[3];
        if (v10 >= v9 >> 1)
        {
          sub_10005986C(v9 > 1, v10 + 1, 1);
          uint64_t v8 = v30;
        }
        v8[2] = v10 + 1;
        uint64_t v11 = &v8[2 * v10];
        v11[4] = v12;
        v11[5] = v13;
      }
      v7 += 2;
      --v6;
    }
    while (v6);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = v8[2];
  if (v16)
  {
    uint64_t v18 = v8[4];
    uint64_t v17 = v8[5];
    BOOL v19 = v18 == 0x6573776F7262 && v17 == 0xE600000000000000;
    if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      BOOL v20 = v18 == 0x676F6C61746163 && v17 == 0xE700000000000000;
      if (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        if (v18 == 1701670760 && v17 == 0xE400000000000000
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
          || v18 == 0x6E2D6E657473696CLL && v17 == 0xEA0000000000776FLL
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_release();
          Link.Presentation.init(rawValue:)();
          static ActionMetrics.notInstrumented.getter();
          type metadata accessor for TabChangeAction();
          swift_allocObject();
        }
        else
        {
          if (v18 == 0x7972617262696CLL && v17 == 0xE700000000000000
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v21 = sub_100396134(v8);
            goto LABEL_28;
          }
          swift_bridgeObjectRetain();
          swift_release();
          if ((v18 != 0x686372616573 || v17 != 0xE600000000000000)
            && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            if (v18 == 0x687475616FLL && v17 == 0xE500000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v24 & 1) == 0) {
                return 0;
              }
            }
            (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v27, v26);
            type metadata accessor for ResumeOAuthAction();
            swift_allocObject();
            return ResumeOAuthAction.init(redirectURL:)();
          }
          swift_bridgeObjectRelease();
          Link.Presentation.init(rawValue:)();
          static ActionMetrics.notInstrumented.getter();
          type metadata accessor for TabChangeAction();
          swift_allocObject();
        }
        return TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
      }
    }
  }
  if (v16 != (v16 != 0))
  {
    swift_release();
    return 0;
  }
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for TabChangeAction();
  swift_allocObject();
  uint64_t v21 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
LABEL_28:
  uint64_t v22 = v21;
  swift_release();
  return v22;
}

BOOL sub_100397950(uint64_t a1, uint64_t a2)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = URL.absoluteString.getter();
  unint64_t v11 = v10;
  uint64_t v12 = String.count.getter();
  v13._countAndFlagsBits = 0x3A74736163646F70;
  v13._object = (void *)0xEC00000070747468;
  BOOL result = String.hasPrefix(_:)(v13);
  if (result)
  {
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      return result;
    }
    unint64_t v15 = String.index(_:offsetBy:)();
    sub_1003955C4(v15, v9, v11);
    v20[0] = v4;
    swift_bridgeObjectRelease();
    uint64_t v4 = (char *)v20[0];
    uint64_t v9 = static String._fromSubstring(_:)();
    unint64_t v11 = v16;
    swift_bridgeObjectRelease();
  }
  v17._countAndFlagsBits = 0x74736163646F70;
  v17._object = (void *)0xE700000000000000;
  if (String.hasPrefix(_:)(v17))
  {
    String.index(_:offsetBy:)();
    *(void *)&v21[0] = v9;
    *((void *)&v21[0] + 1) = v11;
    v20[3] = 0x74736163646F70;
    v20[4] = 0xE700000000000000;
    v20[1] = 1886680168;
    _OWORD v20[2] = 0xE400000000000000;
    sub_1001AA530();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
  }
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100054B1C((uint64_t)v4, (uint64_t *)&unk_1005F7750);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    type metadata accessor for TextFieldAction();
    URL.absoluteString.getter();
    sub_100056D54(a2, (uint64_t)v21);
    uint64_t v19 = swift_allocObject();
    sub_100042FC4(v21, v19 + 16);
    uint64_t v18 = static TextFieldAction.subscribeByURLAction(textFieldContent:okClosure:)();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v18;
}

uint64_t sub_100397D2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for PodcastsURLEpisodeParameters(0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  id v5 = [self sharedInstance];
  id v6 = [v5 mainOrPrivateContext];

  sub_10039B8F0(a1, (uint64_t)v4);
  unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v8 = (v3 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  sub_10035C1A8((uint64_t)v4, v10 + v7);
  *(void *)(v10 + v8) = &v18;
  *(void *)(v10 + v9) = &v17;
  *(void *)(v10 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)) = v6;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_10039BB68;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_100018840;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  uint64_t aBlock[3] = &unk_100566778;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v6;
  swift_retain();
  swift_release();
  [v13 performBlockAndWait:v12];

  _Block_release(v12);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v13)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v17;
    swift_release();
    return v15;
  }
  return result;
}

uint64_t sub_100397FA0(void *a1, void *a2)
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  id v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v36 = *(void *)(v6 - 8);
  __chkstk_darwin();
  unint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FlowPresentationContext();
  uint64_t v35 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FlowDestination();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  if (a2)
  {
    unsigned __int8 v33 = v11;
    uint64_t v34 = v6;
    id v16 = a2;
    uint64_t v17 = (uint64_t (*)())[v16 managedObjectContext];
    if (v17)
    {
      v32[0] = v8;
      v32[1] = v5;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = &v44;
      *(void *)(v18 + 24) = v16;
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_10039BC6C;
      *(void *)(v19 + 24) = v18;
      v32[2] = v18;
      uint64_t v41 = sub_100018840;
      uint64_t v42 = v19;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v38 = 1107296256;
      uint64_t v39 = sub_100018818;
      uint64_t v40 = &unk_100566868;
      BOOL v20 = _Block_copy(&aBlock);
      id v21 = v16;
      swift_retain();
      swift_release();
      [v17 performBlockAndWait:v20];

      _Block_release(v20);
      LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if (v20) {
        goto LABEL_19;
      }
      uint64_t v23 = v45;
      unsigned __int8 v43 = 0;
      if (v45)
      {
        *(void *)uint64_t v15 = v44;
        *((void *)v15 + 1) = v23;
        *((void *)v15 + 3) = 0;
        *((void *)v15 + 4) = 0;
        *((void *)v15 + 2) = 0;
        v15[40] = 1;
        *((void *)v15 + 6) = 0;
        v15[56] = 1;
        (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for FlowDestination.episodeDetails(_:), v12);
        (*(void (**)(char *, void, uint64_t))(v35 + 104))(v33, enum case for FlowPresentationContext.pushDetail(_:), v9);
        swift_bridgeObjectRetain();
        unsigned __int8 v24 = static Link.Presentation.textFollowsTintColor.getter();
        unsigned __int8 v25 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
        Link.Presentation.init(rawValue:)();
        Link.Presentation.init(rawValue:)();
        if (Link.Presentation.init(rawValue:)() != v24) {
          Link.Presentation.init(rawValue:)();
        }
        Link.Presentation.init(rawValue:)();
        if (Link.Presentation.init(rawValue:)() != v25) {
          Link.Presentation.init(rawValue:)();
        }
        (*(void (**)(void, void, uint64_t))(v36 + 104))(v32[0], enum case for FlowDestinationPageHeader.standard(_:), v34);
        static ActionMetrics.notInstrumented.getter();
        type metadata accessor for FlowAction();
        swift_allocObject();
        id v26 = (id)FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
        swift_release();
        uint64_t v27 = 0;
        uint64_t v17 = sub_10039BC6C;
        goto LABEL_17;
      }
      uint64_t v17 = sub_10039BC6C;
    }
    else
    {

      unsigned __int8 v43 = 0;
    }
  }
  else
  {
    uint64_t v17 = 0;
    unsigned __int8 v43 = 0;
  }
  id v26 = [a1 managedObjectContext];
  if (!v26)
  {
    uint64_t v27 = 0;
    goto LABEL_17;
  }
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = &v43;
  *(void *)(v28 + 24) = a1;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_10039BC54;
  *(void *)(v29 + 24) = v28;
  uint64_t v41 = sub_100018840;
  uint64_t v42 = v29;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_100018818;
  uint64_t v40 = &unk_1005667F0;
  uint64_t v30 = _Block_copy(&aBlock);
  id v31 = a1;
  swift_retain();
  swift_release();
  [v26 performBlockAndWait:v30];

  _Block_release(v30);
  LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v30 & 1) == 0)
  {
    uint64_t v27 = sub_10039BC54;
    id v26 = v43;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1000536BC((uint64_t)v17);
    sub_1000536BC((uint64_t)v27);
    return (uint64_t)v26;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_10039864C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v36 = a3;
  uint64_t v37 = a1;
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  uint64_t v35 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin();
  uint64_t v34 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FlowPresentationContext();
  v30[0] = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v32 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FlowDestination();
  __chkstk_darwin();
  v30[1] = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v38 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (char *)v30 - v16;
  __chkstk_darwin();
  uint64_t v19 = (char *)v30 - v18;
  __chkstk_darwin();
  id v21 = (char *)v30 - v20;
  uint64_t v22 = 0;
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) != 0 || ![self isNotEmpty:v36])
    {
      id v25 = [self productURLForStoreCollectionId:v37 storeTrackId:0];
      if (v25)
      {
        id v26 = v25;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, 1, 1, v11);
      }
      uint64_t v19 = v17;
    }
    else
    {
      id v23 = [self productURLForStoreCollectionId:v37 storeTrackId:v36];
      if (v23)
      {
        unsigned __int8 v24 = v23;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v19, 0, 1, v11);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v19, 1, 1, v11);
      }
    }
    sub_100053820((uint64_t)v19, (uint64_t)v21, (uint64_t *)&unk_1005F7750);
    sub_100054BBC((uint64_t)v21, (uint64_t)v15, (uint64_t *)&unk_1005F7750);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v15, 1, v11) == 1)
    {
      sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F7750);
      sub_100054B1C((uint64_t)v15, (uint64_t *)&unk_1005F7750);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v38, v15, v11);
      static FlowDestination.page(_:)();
      (*(void (**)(char *, void, uint64_t))(v30[0] + 104))(v32, enum case for FlowPresentationContext.infer(_:), v8);
      unsigned __int8 v27 = static Link.Presentation.textFollowsTintColor.getter();
      unsigned __int8 v28 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      Link.Presentation.init(rawValue:)();
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v27) {
        Link.Presentation.init(rawValue:)();
      }
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v28) {
        Link.Presentation.init(rawValue:)();
      }
      (*(void (**)(char *, void, uint64_t))(v31 + 104))(v34, enum case for FlowDestinationPageHeader.standard(_:), v33);
      static ActionMetrics.notInstrumented.getter();
      type metadata accessor for FlowAction();
      swift_allocObject();
      uint64_t v22 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v38, v11);
      sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F7750);
    }
  }
  return v22;
}

uint64_t sub_100398C40(uint64_t a1)
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  type metadata accessor for PodcastsURLEpisodeParameters(0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039B8F0(a1 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters, (uint64_t)v3);
  uint64_t v4 = (void *)sub_100397D2C((uint64_t)v3);
  id v5 = v4;
  uint64_t v7 = v6;
  if (v4)
  {
    id v8 = v4;
    uint64_t v9 = sub_100397FA0(v8, v7);
    sub_10004D29C(0, (unint64_t *)&qword_100603DE0);
    static UITraitCollection.interfaceMode.getter();
    uint64_t v10 = InterfaceMode.rawValue.getter();
    uint64_t v12 = v11;
    if (v10 == InterfaceMode.rawValue.getter() && v12 == v13)
    {

      swift_bridgeObjectRelease_n();
      uint64_t v14 = 1;
      if (!v9) {
        goto LABEL_12;
      }
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19) {
        uint64_t v14 = 1;
      }
      else {
        uint64_t v14 = 7;
      }
      if (!v9) {
        goto LABEL_12;
      }
    }
  }
  else
  {
    uint64_t v9 = sub_10039864C(*((void *)v3 + 4), v3[40], *((void *)v3 + 6), v3[56]);
    uint64_t v14 = 10;
    if (!v9)
    {
LABEL_12:

      sub_10003649C(v14);
      sub_10039B954((uint64_t)v3);
      return 0;
    }
  }
  sub_100054B78(&qword_100603DD0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10046D030;
  uint64_t v16 = type metadata accessor for PopToRootAction();
  swift_allocObject();
  swift_retain();
  uint64_t v17 = PopToRootAction.init(animationBehavior:)();
  *(void *)(v15 + 56) = v16;
  *(void *)(v15 + 64) = sub_10039BC84(&qword_1006065D0, (void (*)(uint64_t))&type metadata accessor for PopToRootAction);
  *(void *)(v15 + 32) = v17;
  *(void *)(v15 + 96) = type metadata accessor for FlowAction();
  *(void *)(v15 + 104) = sub_10039BC84((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
  *(void *)(v15 + 72) = v9;
  swift_retain();
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for TabChangeAction();
  swift_allocObject();
  uint64_t v18 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
  swift_release_n();

  sub_10039B954((uint64_t)v3);
  return v18;
}

uint64_t sub_100398F98(uint64_t a1, int a2)
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v27 - v8;
  type metadata accessor for PodcastsURLEpisodeParameters(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039B8F0(a1 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters, (uint64_t)v11);
  id v13 = (id)sub_100397D2C((uint64_t)v11);
  uint64_t v14 = v12;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v32 = 0;
  char v33 = 1;
  if (!v12)
  {
    uint64_t v16 = 0;
    goto LABEL_11;
  }
  id v15 = v12;
  uint64_t v16 = (uint64_t (*)())[v15 managedObjectContext];
  if (!v16)
  {

    goto LABEL_11;
  }
  int v29 = a2;
  id v30 = v13;
  uint64_t v31 = v5;
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = &v34;
  v17[3] = v15;
  void v17[4] = &v32;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_10039B9E8;
  *(void *)(v18 + 24) = v17;
  *((void *)&v38 + 1) = sub_10004A010;
  *(void *)&long long v39 = v18;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  *(void *)&long long v37 = 1107296256;
  *((void *)&v37 + 1) = sub_100018818;
  *(void *)&long long v38 = &unk_100566700;
  char v19 = _Block_copy(&aBlock);
  id v20 = v15;
  swift_retain();
  swift_release();
  [v16 performBlockAndWait:v19];

  _Block_release(v19);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    if (v35)
    {
      uint64_t v27 = v34;
      uint64_t v23 = type metadata accessor for EpisodeListSettings();
      unsigned __int8 v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
      v24(v9, 1, 1, v23);
      int v25 = v11[58];
      id v28 = v20;
      if (v25 != 2 && (v25 & 1) != 0)
      {
        uint64_t aBlock = 1;
        long long v37 = 0u;
        long long v38 = 0u;
        long long v39 = 0u;
        uint64_t v40 = 0;
        char v41 = 5;
        swift_bridgeObjectRetain();
        EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();
        sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005FEA40);
        v24(v7, 0, 1, v23);
        sub_100053820((uint64_t)v7, (uint64_t)v9, (uint64_t *)&unk_1005FEA40);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_100054BBC((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1005FEA40);
      static ActionMetrics.notInstrumented.getter();
      type metadata accessor for LibraryPlayAction();
      swift_allocObject();
      uint64_t v26 = LibraryPlayAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:title:timestamp:actionMetrics:)();

      sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005FEA40);
      sub_10039B954((uint64_t)v11);
      uint64_t v16 = sub_10039B9E8;
      goto LABEL_19;
    }
    uint64_t v16 = sub_10039B9E8;
    id v13 = v30;
LABEL_11:
    if (v11[56] == 1)
    {
      sub_10039B954((uint64_t)v11);

      uint64_t v26 = 0;
    }
    else
    {
      if ([self isNotEmpty:*((void *)v11 + 6)])
      {
        AdamID.init(rawValue:)();
        static ActionMetrics.notInstrumented.getter();
        type metadata accessor for StoreEpisodePlayAction();
        swift_allocObject();
        uint64_t v26 = StoreEpisodePlayAction.init(episodeId:actionMetrics:)();
      }
      else
      {

        uint64_t v26 = 0;
      }
      sub_10039B954((uint64_t)v11);
    }
LABEL_19:
    swift_bridgeObjectRelease();
    sub_1000536BC((uint64_t)v16);
    return v26;
  }
  __break(1u);
  return result;
}

uint64_t sub_100399524()
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  type metadata accessor for PodcastsURLScheme();
  if (sub_1003B8A70())
  {
    type metadata accessor for PodcastsURLNowPlayingCommand();
    if (swift_dynamicCastClass())
    {
      type metadata accessor for PresentNowPlayingAction();
      swift_allocObject();
      uint64_t v0 = PresentNowPlayingAction.init()();
LABEL_11:
      uint64_t v1 = v0;
LABEL_12:
      swift_release();
      return v1;
    }
    type metadata accessor for PodcastsURLBrowseCommand();
    if (swift_dynamicCastClass())
    {
      Link.Presentation.init(rawValue:)();
      static ActionMetrics.notInstrumented.getter();
      type metadata accessor for TabChangeAction();
      swift_allocObject();
      uint64_t v0 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
      goto LABEL_11;
    }
    type metadata accessor for PodcastsURLShowCommand(0);
    uint64_t v2 = swift_dynamicCastClass();
    if (v2)
    {
      uint64_t v0 = sub_100398C40(v2);
      goto LABEL_11;
    }
    type metadata accessor for PodcastsURLPlayCommand(0);
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v0 = sub_100398F98(v3, 2);
      goto LABEL_11;
    }
    type metadata accessor for PodcastsURLShowAndPlayCommand(0);
    uint64_t v1 = swift_dynamicCastClass();
    if (!v1) {
      goto LABEL_12;
    }
    swift_retain();
    uint64_t v5 = sub_100398C40(v1);
    uint64_t v6 = sub_100398F98(v1, 0);
    if (v5)
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (v6)
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    swift_release();
    swift_release();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_25;
      }
    }
    else if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_25:
      type metadata accessor for CompoundAction();
      sub_1001B81C8((unint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      uint64_t v1 = CompoundAction.__allocating_init(actions:)();
      swift_release_n();
      return v1;
    }
    swift_bridgeObjectRelease();
    swift_release_n();
    return 0;
  }
  return 0;
}

uint64_t sub_100399860()
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  id v84 = (char *)&v68 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v76 = *(void *)(v1 - 8);
  uint64_t v77 = v1;
  __chkstk_darwin();
  uint64_t v78 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FlowPresentationContext();
  uint64_t v82 = *(void *)(v3 - 8);
  uint64_t v83 = v3;
  __chkstk_darwin();
  uint64_t v81 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v80 = (char *)&v68 - v5;
  uint64_t v6 = type metadata accessor for FlowDestination();
  uint64_t v74 = *(void *)(v6 - 8);
  uint64_t v75 = v6;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for URL();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005FD6C8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v68 - v13;
  __chkstk_darwin();
  uint64_t v85 = (uint64_t)&v68 - v15;
  URL._bridgeToObjectiveC()((NSURL *)((char *)&v68 - v15));
  uint64_t v17 = v16;
  id v18 = [v16 pf_cleanUrlToStoreId];
  id v19 = [v17 pf_cleanUrlToStoreTrackId];
  id v86 = v17;
  id v20 = [v17 pf_cleanUrlToEpisodeGuid];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  id v25 = [self sharedInstance];
  id v26 = [v25 mainQueueContext];

  id v88 = 0;
  id v89 = 0;
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = v18;
  v27[3] = v26;
  v27[4] = &v89;
  v27[5] = v19;
  v27[6] = v22;
  v27[7] = v24;
  v27[8] = &v88;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_10039BD0C;
  *(void *)(v28 + 24) = v27;
  aBlock[4] = sub_100018840;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  uint64_t aBlock[3] = &unk_1005668E0;
  int v29 = _Block_copy(aBlock);
  id v30 = v26;
  swift_retain();
  swift_release();
  [v30 performBlockAndWait:v29];
  _Block_release(v29);
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v29 & 1) == 0)
  {
    id v32 = v89;
    if (v89)
    {
      id v33 = v88;
      id v79 = v30;
      if (v88)
      {
        id v34 = v89;
        id v35 = v33;
        id v36 = [v35 uuid];
        if (v36)
        {
          long long v37 = v36;
          id v71 = v35;
          uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v69 = v38;

          static URL._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v39 = v85;
          URLComponents.init(url:resolvingAgainstBaseURL:)();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v10, v73);
          sub_100054BBC(v39, (uint64_t)v14, &qword_1005FD6C8);
          uint64_t v40 = type metadata accessor for URLComponents();
          uint64_t v41 = *(void *)(v40 - 8);
          uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
          if (v42(v14, 1, v40) == 1)
          {
            sub_100054B1C((uint64_t)v14, &qword_1005FD6C8);
            uint64_t v73 = 0;
            LODWORD(v72) = 1;
          }
          else
          {
            uint64_t v73 = URLComponents.referenceTime.getter();
            LODWORD(v72) = v52 & 1;
            (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v40);
          }
          sub_100054BBC(v85, (uint64_t)v12, &qword_1005FD6C8);
          unsigned int v53 = v42(v12, 1, v40);
          uint64_t v54 = v82;
          if (v53 == 1)
          {
            sub_100054B1C((uint64_t)v12, &qword_1005FD6C8);
            uint64_t v55 = 0;
            char v56 = 1;
          }
          else
          {
            uint64_t v55 = URLComponents.playerTime.getter();
            char v56 = v57 & 1;
            (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v40);
          }
          uint64_t v46 = v83;
          uint64_t v58 = v69;
          *(void *)uint64_t v8 = v70;
          *((void *)v8 + 1) = v58;
          *((void *)v8 + 2) = 0;
          *((void *)v8 + 3) = 0;
          *((void *)v8 + 4) = v73;
          v8[40] = v72;
          *((void *)v8 + 6) = v55;
          v8[56] = v56;
          (*(void (**)(char *, void, uint64_t))(v74 + 104))(v8, enum case for FlowDestination.episodeDetails(_:), v75);
          uint64_t v45 = *(void (**)(char *, void, uint64_t))(v54 + 104);
          v45(v80, enum case for FlowPresentationContext.infer(_:), v46);
          unsigned __int8 v59 = static Link.Presentation.textFollowsTintColor.getter();
          unsigned __int8 v60 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
          Link.Presentation.init(rawValue:)();
          Link.Presentation.init(rawValue:)();
          if (Link.Presentation.init(rawValue:)() != v59) {
            Link.Presentation.init(rawValue:)();
          }
          Link.Presentation.init(rawValue:)();
          if (Link.Presentation.init(rawValue:)() != v60) {
            Link.Presentation.init(rawValue:)();
          }
          (*(void (**)(char *, void, uint64_t))(v76 + 104))(v78, enum case for FlowDestinationPageHeader.standard(_:), v77);
          static ActionMetrics.notInstrumented.getter();
          type metadata accessor for FlowAction();
          swift_allocObject();
          uint64_t v50 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();

          sub_100054B1C(v85, &qword_1005FD6C8);
          uint64_t v44 = (uint64_t)v81;
          goto LABEL_26;
        }
      }
      else
      {
        id v43 = v89;
      }
      type metadata accessor for FlowAction();
      uint64_t v44 = (uint64_t)v81;
      uint64_t v45 = *(void (**)(char *, void, uint64_t))(v82 + 104);
      uint64_t v46 = v83;
      v45(v81, enum case for FlowPresentationContext.infer(_:), v83);
      id v47 = v32;
      uint64_t v48 = (uint64_t)v84;
      static ActionMetrics.notInstrumented.getter();
      uint64_t v49 = FlowAction.init(podcast:presentationContext:actionMetrics:)(v47, v44, v48);
      if (v49)
      {
        uint64_t v50 = v49;
LABEL_26:
        v45((char *)v44, enum case for FlowPresentationContext.showDetail(_:), v46);
        swift_retain();
        dispatch thunk of FlowAction.presentationContext.setter();
        swift_release();
        sub_10004D29C(0, (unint64_t *)&qword_100603DE0);
        swift_retain();
        static UITraitCollection.interfaceMode.getter();
        uint64_t v61 = InterfaceMode.rawValue.getter();
        uint64_t v63 = v62;
        if (v61 == InterfaceMode.rawValue.getter() && v63 == v64)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        id v65 = v79;
        sub_100054B78(&qword_100603DD0);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_10046D010;
        *(void *)(v66 + 56) = type metadata accessor for FlowAction();
        *(void *)(v66 + 64) = sub_10039BC84((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
        *(void *)(v66 + 32) = v50;
        swift_retain();
        Link.Presentation.init(rawValue:)();
        static ActionMetrics.notInstrumented.getter();
        type metadata accessor for TabChangeAction();
        swift_allocObject();
        uint64_t v51 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();

        swift_release_n();
        goto LABEL_31;
      }
    }
    else
    {
    }
    uint64_t v51 = 0;
LABEL_31:
    id v67 = v89;
    swift_release();

    return v51;
  }
  __break(1u);
  return result;
}

uint64_t sub_10039A36C(uint64_t a1)
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  uint64_t v63 = (char *)v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FlowPresentationContext();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  __chkstk_darwin();
  id v71 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FlowDestination();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  __chkstk_darwin();
  uint64_t v68 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URLQueryItem();
  uint64_t v73 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_100601D98);
  __chkstk_darwin();
  uint64_t v70 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005FD6C8);
  __chkstk_darwin();
  uint64_t v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URLComponents();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v74 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  id v18 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(type metadata accessor for URL() - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1;
  uint64_t v24 = v23;
  sub_100054BBC(v22, (uint64_t)v18, (uint64_t *)&unk_1005F7750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v24) == 1)
  {
    id v25 = (uint64_t *)&unk_1005F7750;
    uint64_t v26 = (uint64_t)v18;
LABEL_5:
    sub_100054B1C(v26, v25);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v18, v24);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v24);
    id v25 = &qword_1005FD6C8;
    uint64_t v26 = (uint64_t)v13;
    goto LABEL_5;
  }
  uint64_t v27 = v14;
  uint64_t v55 = v21;
  uint64_t v56 = v19;
  uint64_t v59 = v24;
  uint64_t v57 = v15;
  uint64_t v28 = *(void (**)(char *, char *))(v15 + 32);
  int v29 = v74;
  uint64_t v58 = v27;
  v28(v74, v13);
  uint64_t v30 = URLComponents.queryItems.getter();
  if (!v30)
  {
LABEL_23:
    (*(void (**)(char *, uint64_t))(v57 + 8))(v29, v58);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v59);
    return 0;
  }
  uint64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
    uint64_t v72 = *(void (**)(char *, unint64_t, uint64_t))(v73 + 16);
    unint64_t v32 = v30 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
    id v33 = (void (**)(char *, uint64_t))(v73 + 8);
    uint64_t v34 = *(void *)(v73 + 72);
    v54[1] = v30;
    swift_bridgeObjectRetain();
    unint64_t v60 = 0x80000001004E0810;
    while (1)
    {
      v72(v10, v32, v8);
      if (URLQueryItem.name.getter() == 0xD000000000000010 && v35 == v60) {
        break;
      }
      char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_17;
      }
      (*v33)(v10, v8);
      v32 += v34;
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v37 = 1;
        uint64_t v38 = v71;
        int v29 = v74;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v38 = v71;
    swift_bridgeObjectRelease();
    uint64_t v39 = v73;
    uint64_t v40 = (uint64_t)v70;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v10, v8);
    uint64_t v37 = 0;
    int v29 = v74;
  }
  else
  {
    uint64_t v37 = 1;
    uint64_t v38 = v71;
LABEL_15:
    uint64_t v39 = v73;
    uint64_t v40 = (uint64_t)v70;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v40, v37, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v8) == 1)
  {
    sub_100054B1C(v40, &qword_100601D98);
    goto LABEL_23;
  }
  URLQueryItem.value.getter();
  uint64_t v42 = v41;
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v8);
  if (!v42) {
    goto LABEL_23;
  }
  id v43 = [self sharedInstance];
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v45 = [v43 syncValueForKey:v44];

  if (v45)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v75 = 0u;
    long long v76 = 0u;
  }
  uint64_t v48 = v68;
  sub_100053820((uint64_t)&v75, (uint64_t)v77, &qword_1005F5D30);
  sub_100054BBC((uint64_t)v77, (uint64_t)&v75, &qword_1005F5D30);
  uint64_t v49 = v59;
  uint64_t v50 = v56;
  if (*((void *)&v76 + 1))
  {
    int v51 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v48, v51 ^ 1u, 1, v49);
  }
  else
  {
    sub_100054B1C((uint64_t)&v75, &qword_1005F5D30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v48, 1, 1, v49);
  }
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v48, enum case for FlowDestination.finance(_:), v65);
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v38, enum case for FlowPresentationContext.infer(_:), v67);
  unsigned __int8 v52 = static Link.Presentation.textFollowsTintColor.getter();
  unsigned __int8 v53 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v52) {
    Link.Presentation.init(rawValue:)();
  }
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v53) {
    Link.Presentation.init(rawValue:)();
  }
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v69, enum case for FlowDestinationPageHeader.standard(_:), v62);
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for FlowAction();
  swift_allocObject();
  uint64_t v46 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
  sub_100054B1C((uint64_t)v77, &qword_1005F5D30);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v29, v58);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v59);
  return v46;
}

uint64_t sub_10039AE04(uint64_t a1)
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = 1836213620;
  unint64_t v18 = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_100226C5C((uint64_t)&v19), (v5 & 1) != 0))
  {
    sub_10004D328(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v21);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  sub_100172F18((uint64_t)&v19);
  if (!*((void *)&v22 + 1))
  {
    sub_100054B1C((uint64_t)&v21, &qword_1005F5D30);
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v19 = v17;
  unint64_t v20 = v18;
  sub_1001AA530();
  StringProtocol.removingPercentEncoding.getter();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_10;
  }
LABEL_11:
  uint64_t v17 = 0x6574617669746361;
  unint64_t v18 = 0xE800000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v8 = sub_100226C5C((uint64_t)&v19), (v9 & 1) != 0))
  {
    sub_10004D328(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v21);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  sub_100172F18((uint64_t)&v19);
  if (*((void *)&v22 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v19 = v17;
      unint64_t v20 = v18;
      sub_1001AA530();
      StringProtocol.removingPercentEncoding.getter();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      if (v11)
      {
        Swift::String v12 = String.lowercased()();
        swift_bridgeObjectRelease();
        if (v12._countAndFlagsBits == 1702195828 && v12._object == (void *)0xE400000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  else
  {
    sub_100054B1C((uint64_t)&v21, &qword_1005F5D30);
  }
  sub_100054B78(&qword_100603DD0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10046D010;
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  static ActionMetrics.notInstrumented.getter();
  *(void *)(v13 + 56) = type metadata accessor for SearchAction();
  *(void *)(v13 + 64) = sub_10039BC84(&qword_1005FE308, (void (*)(uint64_t))&type metadata accessor for SearchAction);
  sub_10004A244((uint64_t *)(v13 + 32));
  SearchAction.init(origin:term:url:hintIndex:activatesSearchBar:actionMetrics:)();
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for TabChangeAction();
  swift_allocObject();
  return TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
}

uint64_t sub_10039B260(uint64_t a1)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = (id)sub_100399860();
  if (!v4)
  {
    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(void *)(v5 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v3, a1, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v3, 0, 1, v5);
    id v4 = (id)sub_10039A36C((uint64_t)v3);
    sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_1005F7750);
    if (!v4)
    {
      URL._bridgeToObjectiveC()(v7);
      uint64_t v10 = v9;
      id v4 = [v9 pf_queryAsDictionary];

      if (v4)
      {
        uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        *(void *)&long long v14 = 0x6E6F69746361;
        *((void *)&v14 + 1) = 0xE600000000000000;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v11 + 16) && (unint64_t v12 = sub_100226C5C((uint64_t)v16), (v13 & 1) != 0))
        {
          sub_10004D328(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v14);
        }
        else
        {
          long long v14 = 0u;
          long long v15 = 0u;
        }
        sub_100172F18((uint64_t)v16);
        if (!*((void *)&v15 + 1))
        {
          swift_bridgeObjectRelease();
          sub_100054B1C((uint64_t)&v14, &qword_1005F5D30);
          return sub_100397388(a1);
        }
        sub_10004D384(&v14, v17);
        sub_10004D328((uint64_t)v17, (uint64_t)v16);
        if (swift_dynamicCast())
        {
          if (v14 == __PAIR128__(0xE600000000000000, 0x686372616573)
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            id v4 = (id)sub_10039AE04(v11);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10004D2D8((uint64_t)v17);
            return (uint64_t)v4;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_10004D2D8((uint64_t)v17);
        return 0;
      }
    }
  }
  return (uint64_t)v4;
}

uint64_t sub_10039B548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = URL.scheme.getter();
  uint64_t v10 = v9;
  if (!v9) {
    return v10;
  }
  uint64_t v11 = v8;
  if (v8 == 1886680168 && v9 == 0xE400000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v11 == 0x7370747468 && v10 == 0xE500000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return sub_100397388(a1);
  }
  if (v11 == 0x74736163646F70 && v10 == 0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return sub_100397950(a1, a2);
  }
  if (v11 == 0x7374736163646F70 && v10 == 0xE800000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_100399524();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    if (!v10) {
      uint64_t v10 = sub_100397388((uint64_t)v7);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v10;
  }
  if (v11 != 0x646F702D736D7469 || v10 != 0xED00007374736163)
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_28;
    }
    return 0;
  }
  swift_bridgeObjectRelease();
LABEL_28:

  return sub_10039B260(a1);
}

uint64_t sub_10039B8B0()
{
  sub_10004D2D8(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10039B8E8(uint64_t a1, uint64_t a2)
{
  return sub_100395610(a1, a2, (void *)(v2 + 16));
}

uint64_t sub_10039B8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039B954(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10039B9B0()
{
  return swift_deallocObject();
}

uint64_t sub_10039B9E8()
{
  return sub_100395A38(*(uint64_t **)(v0 + 16), *(id *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10039B9F4()
{
  return swift_deallocObject();
}

uint64_t sub_10039BA04()
{
  uint64_t v1 = (int *)(type metadata accessor for PodcastsURLEpisodeParameters(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + v1[12];
  uint64_t v5 = type metadata accessor for MetricsWidgetContext();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  objc_release(*(id *)(v0
                     + ((((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

void sub_10039BB68()
{
  uint64_t v1 = *(void *)(type metadata accessor for PodcastsURLEpisodeParameters(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(id **)(v0 + v3);
  uint64_t v6 = *(void ***)(v0 + v4);
  uint64_t v7 = *(void **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100395AC8(v0 + v2, v5, v6, v7);
}

uint64_t sub_10039BC0C()
{
  return swift_deallocObject();
}

uint64_t sub_10039BC1C()
{
  return swift_deallocObject();
}

uint64_t sub_10039BC54()
{
  return sub_1003958D8(*(uint64_t **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10039BC5C()
{
  return swift_deallocObject();
}

uint64_t sub_10039BC6C()
{
  return sub_100395858(*(uint64_t **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_10039BC74()
{
  return swift_deallocObject();
}

uint64_t sub_10039BC84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10039BCCC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_10039BD0C()
{
  return sub_100395CE0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(id **)(v0 + 64));
}

uint64_t sub_10039BD20()
{
  return swift_deallocObject();
}

uint64_t (**MTImageStore.alternativeSizeWithBuckets.unsafeMutableAddressor())()
{
  return &static MTImageStore.alternativeSizeWithBuckets;
}

void sub_10039BD50()
{
  off_1006065D8 = &off_1005547D0;
}

uint64_t sub_10039BD64(uint64_t a1, __n128 a2, __n128 a3, __n128 a4)
{
  double v4 = a4.n128_f64[0];
  unint64_t v5 = a3.n128_u64[0];
  double v6 = a2.n128_f64[0];
  if (qword_1005F5B28 != -1) {
    a1 = swift_once();
  }
  uint64_t v7 = *((void *)off_1006065D8 + 2);
  if (v7)
  {
    uint64_t v8 = (double *)((char *)off_1006065D8 + 32);
    while (1)
    {
      a2.n128_f64[0] = ceil(*v8 * v4);
      if (a2.n128_f64[0] > v6) {
        break;
      }
      ++v8;
      if (!--v7) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    a2.n128_f64[0] = v4;
  }
  a3.n128_f64[0] = v6;
  a4.n128_u64[0] = v5;

  return CGSize.init(width:proportionalTo:)(a1, a2, a3, a4);
}

uint64_t (*static MTImageStore.alternativeSizeWithBuckets.getter())(uint64_t a1, __n128 a2, __n128 a3, __n128 a4)
{
  return sub_10039BD64;
}

uint64_t sub_10039BE30(unsigned int (**a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  uint64_t v89 = a8;
  uint64_t v86 = a7;
  uint64_t v84 = a6;
  uint64_t v83 = a5;
  uint64_t v106 = a3;
  id v107 = a4;
  unint64_t v13 = a11;
  uint64_t v96 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v93 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for DispatchQoS();
  uint64_t v92 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v91 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v16 - 8);
  uint64_t v90 = (uint64_t)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v85 = (unint64_t *)((char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v19 - 8);
  char v105 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ArtworkModel();
  unint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v104 = (uint64_t)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for ArtworkRequest();
  uint64_t v24 = *(void (***)(char *, uint64_t))(v103 - 8);
  __chkstk_darwin(v103);
  NSString v102 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  uint64_t v100 = a11 >> 62;
  if (a11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v29 = *(void *)((a11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v110 = a11;
  id v108 = v28;
  id v97 = v24;
  if (v29)
  {
    uint64_t result = self;
    if (v29 < 1) {
      goto LABEL_31;
    }
    uint64_t v31 = (void *)result;
    unint64_t v98 = a1;
    unint64_t v99 = v22;
    uint64_t v109 = a2;
    for (uint64_t i = 0; i != v29; ++i)
    {
      if ((a11 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      NSString v33 = String._bridgeToObjectiveC()();
      id v34 = [v31 imageNamed:v33];
      swift_release();

      if (v34)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      unint64_t v13 = v110;
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = (void *)aBlock;
    uint64_t v28 = v108;
    unint64_t v22 = v99;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = _swiftEmptyArrayStorage;
  }
  uint64_t v109 = swift_allocObject();
  *(void *)(v109 + 16) = v35;
  id v36 = objc_allocWithZone((Class)CPListImageRowItem);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1006061A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v39 = [v36 initWithText:v37 images:isa];

  id v116 = v39;
  id v40 = v39;
  uint64_t v41 = dispatch_group_create();
  if (v100)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v42 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v42 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_19:
  id v80 = v40;
  uint64_t v82 = a10;
  uint64_t v81 = a9;
  if (v42)
  {
    uint64_t v43 = 0;
    unint64_t v44 = v13 & 0xC000000000000001;
    id v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    ++v97;
    uint64_t v101 = v21;
    uint64_t v100 = v42;
    unint64_t v99 = v13 & 0xC000000000000001;
    unint64_t v98 = (unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    uint64_t v46 = v102;
    do
    {
      dispatch_group_enter(v41);
      if (v44) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      Showcase.showArtwork.getter();
      swift_release();
      if ((*v45)(v28, 1, v21) == 1)
      {
        sub_100054B1C((uint64_t)v28, &qword_1005F76A0);
      }
      else
      {
        id v47 = (void *)swift_allocObject();
        v47[2] = v109;
        v47[3] = v43;
        v47[4] = v41;
        uint64_t v48 = swift_allocObject();
        *(unsigned char *)(v48 + 16) = 0;
        sub_10039F168((uint64_t)v28, v104, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
        uint64_t v49 = type metadata accessor for CropCode();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v105, 1, 1, v49);
        uint64_t v114 = 0;
        long long aBlock = 0u;
        long long v113 = 0u;
        uint64_t v50 = self;
        swift_retain();
        int v51 = v41;
        id v52 = [v50 mainScreen];
        [v52 scale];

        ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
        sub_100041A98(v107, v107[3]);
        unsigned __int8 v53 = (void *)swift_allocObject();
        v53[2] = v48;
        v53[3] = sub_10039EF4C;
        v53[4] = v47;
        swift_retain();
        swift_retain();
        uint64_t v21 = v101;
        uint64_t v28 = v108;
        ImageProvider.load(artwork:receiveImage:receiveCompletion:)();
        uint64_t v42 = v100;
        swift_release();
        (*v97)(v46, v103);
        unint64_t v13 = v110;
        swift_release();
        unint64_t v44 = v99;
        swift_release();
        id v45 = v98;
        sub_10039F1D0((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      }
      ++v43;
    }
    while (v42 != v43);
  }
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v84;
  *(void *)(v54 + 16) = v83;
  *(void *)(v54 + 24) = v55;
  uint64_t v114 = sub_100386450;
  uint64_t v115 = (void *)v54;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v113 = sub_1001BF99C;
  *((void *)&v113 + 1) = &unk_100566968;
  uint64_t v56 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v57 = v80;
  [v80 setHandler:v56];
  _Block_release(v56);
  uint64_t v58 = (void *)swift_allocObject();
  uint64_t v59 = v86;
  v58[2] = v13;
  v58[3] = v59;
  v58[4] = v89;
  uint64_t v114 = sub_10039EDF4;
  uint64_t v115 = v58;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v113 = sub_10038618C;
  *((void *)&v113 + 1) = &unk_1005669B8;
  unint64_t v60 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v57 setListImageRowHandler:v60];
  _Block_release(v60);

  uint64_t v61 = v85;
  *uint64_t v85 = v13;
  uint64_t v62 = v88;
  swift_storeEnumTagMultiPayload();
  id v63 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
  swift_bridgeObjectRetain();
  uint64_t v64 = [v63 init];
  uint64_t v65 = (uint64_t)v61;
  uint64_t v66 = v90;
  sub_1001BF8D0(v65, v90);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v66, 0, 1, v62);
  uint64_t v67 = (uint64_t)&v64[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934(v66, v67);
  swift_endAccess();
  v64[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_10004D29C(0, &qword_1005F88B0);
  uint64_t v68 = NSString.init(stringLiteral:)();
  uint64_t v69 = v64;
  sub_1001BFA4C((uint64_t)v68, (uint64_t)v64);

  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v70 = (void *)static OS_dispatch_queue.main.getter();
  id v71 = v116;
  uint64_t v72 = (void *)swift_allocObject();
  uint64_t v73 = v109;
  v72[2] = v71;
  v72[3] = v73;
  uint64_t v74 = v82;
  v72[4] = v81;
  v72[5] = v74;
  uint64_t v114 = sub_10039EF00;
  uint64_t v115 = v72;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v113 = sub_10003B424;
  *((void *)&v113 + 1) = &unk_100566A08;
  long long v75 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  id v76 = v71;
  uint64_t v77 = v91;
  static DispatchQoS.unspecified.getter();
  id v111 = _swiftEmptyArrayStorage;
  sub_10004AEE4((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  uint64_t v78 = v93;
  uint64_t v79 = v96;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v75);

  (*(void (**)(char *, uint64_t))(v95 + 8))(v78, v79);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v77, v94);

  swift_release();
  return swift_release();
}

uint64_t sub_10039CCB4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v51 = a7;
  uint64_t v50 = a6;
  uint64_t v65 = a3;
  uint64_t v64 = a2;
  uint64_t v78 = a1;
  uint64_t v57 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v54 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for DispatchQoS();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  id v52 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v13 - 8);
  id v63 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for ArtworkModel();
  uint64_t v15 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v73 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for ArtworkRequest();
  uint64_t v17 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_group_t v22 = dispatch_group_create();
  uint64_t v23 = swift_allocObject();
  uint64_t v66 = v23;
  *(void *)(v23 + 16) = _swiftEmptyArrayStorage;
  uint64_t v24 = (void *)(v23 + 16);
  unint64_t v77 = a8;
  if (!(a8 >> 62))
  {
    uint64_t v25 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    uint64_t v42 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v43 = (void *)swift_allocObject();
    uint64_t v44 = v51;
    v43[2] = v50;
    v43[3] = v44;
    v43[4] = v66;
    uint64_t v85 = sub_10039F2D8;
    uint64_t v86 = v43;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v83 = sub_10003B424;
    uint64_t v84 = &unk_100566AF8;
    id v45 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    uint64_t v46 = v52;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long v79 = _swiftEmptyArrayStorage;
    sub_10004AEE4((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
    id v47 = v54;
    uint64_t v48 = v57;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v55);
    swift_release();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v25 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v25 >= 1)
  {
    uint64_t v27 = 0;
    dispatch_group_t v75 = v22;
    unint64_t v76 = v77 & 0xC000000000000001;
    uint64_t v69 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v58 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v72 = a5;
    uint64_t v71 = a4;
    unint64_t v60 = v21;
    uint64_t v59 = v24;
    uint64_t v70 = v25;
    do
    {
      if (v76)
      {
        uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v28 = *(void *)(v77 + 8 * v27 + 32);
        swift_retain();
      }
      id v29 = sub_10039D6F4(v78, 0, a4, a5);
      if (v29)
      {
        uint64_t v30 = v29;
        swift_beginAccess();
        id v31 = v30;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
        dispatch_group_t v32 = v75;
        dispatch_group_enter(v75);
        Showcase.showArtwork.getter();
        if ((*v69)(v21, 1, v74) == 1)
        {
          swift_release();

          sub_100054B1C((uint64_t)v21, &qword_1005F76A0);
        }
        else
        {
          sub_100056D54((uint64_t)v78, (uint64_t)&aBlock);
          NSString v33 = (void *)swift_allocObject();
          v33[2] = v66;
          v33[3] = v31;
          v33[4] = v28;
          sub_100042FC4(&aBlock, (uint64_t)(v33 + 5));
          v33[10] = v71;
          v33[11] = a5;
          v33[12] = v32;
          uint64_t v34 = swift_allocObject();
          *(unsigned char *)(v34 + 16) = 0;
          uint64_t v68 = &type metadata accessor for ArtworkModel;
          sub_10039F168((uint64_t)v21, v73, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
          uint64_t v35 = type metadata accessor for CropCode();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v63, 1, 1, v35);
          uint64_t v81 = 0;
          long long v79 = 0u;
          long long v80 = 0u;
          id v36 = self;
          id v67 = v31;
          swift_retain();
          swift_retain();
          swift_retain();
          NSString v37 = v32;
          id v38 = [v36 mainScreen];
          [v38 scale];

          id v39 = v61;
          ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
          sub_100041A98(v65, v65[3]);
          id v40 = (void *)swift_allocObject();
          void v40[2] = v34;
          v40[3] = sub_10039F344;
          v40[4] = v33;
          swift_retain();
          swift_retain();
          uint64_t v21 = v60;
          ImageProvider.load(artwork:receiveImage:receiveCompletion:)();
          a4 = v71;
          swift_release();
          uint64_t v41 = v39;
          uint64_t v24 = v59;
          (*v58)(v41, v62);
          swift_release();
          swift_release();

          a5 = v72;
          swift_release();
          sub_10039F1D0((uint64_t)v21, (uint64_t (*)(void))v68);
        }
        uint64_t v25 = v70;
      }
      else
      {
        swift_release();
      }
      ++v27;
    }
    while (v25 != v27);
    dispatch_group_t v22 = v75;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10039D6BC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_10039D6F4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v114 = a3;
  uint64_t v115 = a4;
  uint64_t v7 = type metadata accessor for HeaderModel.MetadataComponent();
  uint64_t v123 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (void *)((char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v119 = v10;
  uint64_t v120 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v116 = (uint64_t)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v99 - v14;
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (void *)((char *)v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v118 = (uint64_t)v99 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v99 - v22;
  uint64_t v24 = sub_100054B78((uint64_t *)&unk_1005F88A0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for FlowDestination();
  uint64_t v122 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  id v121 = (char *)v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = v4;
  Showcase.clickAction.getter();
  if (!v125)
  {
    uint64_t v34 = (uint64_t *)&unk_1005F89E0;
    uint64_t v35 = aBlock;
    goto LABEL_7;
  }
  sub_100054B78(&qword_1005F82A0);
  type metadata accessor for FlowAction();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v112 = a1;
  id v29 = v15;
  id v30 = v128;
  swift_retain();
  uint64_t v107 = Action.title.getter();
  uint64_t v32 = v31;
  swift_release();
  uint64_t v109 = v32;
  if (!v32)
  {
    swift_release();
    return 0;
  }
  char v105 = a2;
  dispatch thunk of FlowAction.destination.getter();
  uint64_t v33 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v26, 1, v27) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v34 = (uint64_t *)&unk_1005F88A0;
    uint64_t v35 = (uint64_t *)v26;
LABEL_7:
    sub_100054B1C((uint64_t)v35, v34);
    return 0;
  }
  uint64_t v37 = (uint64_t)v29;
  id v102 = v30;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v121, v26, v27);
  uint64_t v38 = v119;
  uint64_t v39 = v120 + 56;
  id v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56);
  v40(v23, 1, 1, v119);
  uint64_t v41 = type metadata accessor for Podcasts();
  uint64_t v125 = (void *)v41;
  uint64_t v126 = sub_10004AEE4((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  uint64_t v42 = sub_10004A244(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v42, enum case for Podcasts.carPlayStoreShowPage(_:), v41);
  LOBYTE(v41) = isFeatureEnabled(_:)();
  sub_10004D2D8((uint64_t)aBlock);
  id v108 = v23;
  uint64_t v101 = v39;
  uint64_t v103 = v27;
  uint64_t v104 = v40;
  if (v41)
  {
    uint64_t v43 = sub_100054B78(&qword_1005F9E90);
    uint64_t v44 = *(int *)(v43 + 48);
    uint64_t v45 = v37;
    uint64_t v46 = v118;
    uint64_t v47 = v118 + *(int *)(v43 + 64);
    FlowDestination.pageDestinationURL.getter();
    *(void *)(v46 + v44) = FlowDestination.pageDestinationPage.getter();
    uint64_t v48 = Showcase.showAdamId.getter();
    LOBYTE(v44) = v49;
    sub_100054B1C((uint64_t)v108, (uint64_t *)&unk_1005F8CF0);
    *(void *)uint64_t v47 = v48;
    *(unsigned char *)(v47 + 8) = v44 & 1;
    uint64_t v37 = v45;
    uint64_t v27 = v103;
    uint64_t v23 = v108;
    swift_storeEnumTagMultiPayload();
    v104((char *)v46, 0, 1, v38);
    sub_10039F230(v46, (uint64_t)v23);
  }
  else
  {
    uint64_t v50 = Showcase.showAdamId.getter();
    if ((v51 & 1) == 0)
    {
      uint64_t v52 = v50;
      sub_100054B1C((uint64_t)v23, (uint64_t *)&unk_1005F8CF0);
      *(void *)uint64_t v23 = v52;
      v23[8] = 3;
      swift_storeEnumTagMultiPayload();
      v104(v23, 0, 1, v38);
    }
  }
  sub_10039F100((uint64_t)v23, (uint64_t)v19);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v120 + 48))(v19, 1, v38) == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_100054B1C((uint64_t)v23, (uint64_t *)&unk_1005F8CF0);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v27);
    uint64_t v35 = v19;
    uint64_t v34 = (uint64_t *)&unk_1005F8CF0;
    goto LABEL_7;
  }
  sub_1001BF8D0((uint64_t)v19, v37);
  uint64_t v53 = Showcase.showMetadata.getter();
  uint64_t v54 = *(void *)(v53 + 16);
  uint64_t v100 = v37;
  if (v54)
  {
    uint64_t v120 = *(void *)(v123 + 16);
    unint64_t v55 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
    v99[1] = v53;
    unint64_t v56 = v53 + v55;
    uint64_t v117 = *(void *)(v123 + 72);
    uint64_t v57 = (uint64_t (**)(uint64_t *, uint64_t))(v123 + 88);
    int v113 = enum case for HeaderModel.MetadataComponent.category(_:);
    int v111 = enum case for HeaderModel.MetadataComponent.explicit(_:);
    uint64_t v106 = (void (**)(uint64_t *, uint64_t))(v123 + 8);
    v123 += 16;
    unint64_t v110 = (void (**)(uint64_t *, uint64_t))(v123 + 80);
    uint64_t v58 = (char *)_swiftEmptyArrayStorage;
    ((void (*)(uint64_t *, unint64_t, uint64_t))v120)(v9, v53 + v55, v7);
    while (1)
    {
      int v59 = (*v57)(v9, v7);
      if (v59 == v113)
      {
        (*v110)(v9, v7);
        uint64_t v60 = *v9;
        uint64_t v61 = v9[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v58 = sub_10004CEAC(0, *((void *)v58 + 2) + 1, 1, v58);
        }
        unint64_t v63 = *((void *)v58 + 2);
        unint64_t v62 = *((void *)v58 + 3);
        if (v63 >= v62 >> 1) {
          uint64_t v58 = sub_10004CEAC((char *)(v62 > 1), v63 + 1, 1, v58);
        }
        *((void *)v58 + 2) = v63 + 1;
        uint64_t v64 = &v58[16 * v63];
        *((void *)v64 + 4) = v60;
        *((void *)v64 + 5) = v61;
      }
      else if (v59 == v111)
      {
        sub_100041A98(v112, v112[3]);
        uint64_t v65 = dispatch thunk of StoreDataProvider.explicitSymbol.getter();
        uint64_t v67 = v66;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v58 = sub_10004CEAC(0, *((void *)v58 + 2) + 1, 1, v58);
        }
        unint64_t v69 = *((void *)v58 + 2);
        unint64_t v68 = *((void *)v58 + 3);
        if (v69 >= v68 >> 1) {
          uint64_t v58 = sub_10004CEAC((char *)(v68 > 1), v69 + 1, 1, v58);
        }
        *((void *)v58 + 2) = v69 + 1;
        uint64_t v70 = &v58[16 * v69];
        *((void *)v70 + 4) = v65;
        *((void *)v70 + 5) = v67;
      }
      else
      {
        (*v106)(v9, v7);
      }
      v56 += v117;
      if (!--v54) {
        break;
      }
      ((void (*)(uint64_t *, unint64_t, uint64_t))v120)(v9, v56, v7);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v58 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v71 = v105;
  uint64_t v72 = *((void *)v58 + 2);
  uint64_t v73 = (uint64_t)v108;
  if (v72)
  {
    swift_bridgeObjectRetain();
    uint64_t v74 = (uint64_t *)(v58 + 40);
    dispatch_group_t v75 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v79 = *(v74 - 1);
      uint64_t v80 = *v74;
      if (v79) {
        BOOL v81 = 0;
      }
      else {
        BOOL v81 = v80 == 0xE000000000000000;
      }
      if (!v81 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        aBlock[0] = (uint64_t)v75;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10005986C(0, v75[2] + 1, 1);
          dispatch_group_t v75 = (void *)aBlock[0];
        }
        unint64_t v77 = v75[2];
        unint64_t v76 = v75[3];
        if (v77 >= v76 >> 1)
        {
          sub_10005986C(v76 > 1, v77 + 1, 1);
          dispatch_group_t v75 = (void *)aBlock[0];
        }
        v75[2] = v77 + 1;
        uint64_t v78 = &v75[2 * v77];
        v78[4] = v79;
        v78[5] = v80;
        uint64_t v73 = (uint64_t)v108;
      }
      v74 += 2;
      --v72;
    }
    while (v72);
    swift_bridgeObjectRelease();
    uint64_t v71 = v105;
  }
  else
  {
    dispatch_group_t v75 = _swiftEmptyArrayStorage;
  }
  aBlock[0] = (uint64_t)v75;
  static String.eyebrowSeparatorSymbol.getter();
  sub_100054B78((uint64_t *)&unk_100603260);
  sub_100044200((unint64_t *)&qword_1005F8138, (uint64_t *)&unk_100603260);
  BidirectionalCollection<>.joined(separator:)();
  swift_release();
  swift_bridgeObjectRelease();
  id v83 = objc_allocWithZone((Class)CPListItem);
  id v84 = v71;
  NSString v85 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v86 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v87 = [v83 initWithText:v85 detailText:v86 image:v84 accessoryImage:0 accessoryType:0];

  id v128 = v87;
  uint64_t v88 = swift_allocObject();
  uint64_t v89 = v115;
  *(void *)(v88 + 16) = v114;
  *(void *)(v88 + 24) = v89;
  uint64_t v126 = (uint64_t)sub_100386450;
  uint64_t v127 = v88;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001BF99C;
  uint64_t v125 = &unk_100566B98;
  uint64_t v90 = _Block_copy(aBlock);
  id v91 = v87;
  swift_retain();
  swift_release();
  [v91 setHandler:v90];
  _Block_release(v90);

  uint64_t v92 = v100;
  uint64_t v93 = v116;
  sub_10039F168(v100, v116, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  uint64_t v94 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  uint64_t v95 = v118;
  sub_1001BF8D0(v93, v118);
  v104((char *)v95, 0, 1, v119);
  uint64_t v96 = (uint64_t)&v94[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934(v95, v96);
  swift_endAccess();
  v94[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 1;
  sub_10004D29C(0, &qword_1005F88B0);
  id v97 = NSString.init(stringLiteral:)();
  unint64_t v98 = v94;
  sub_1001BFA4C((uint64_t)v97, (uint64_t)v94);
  swift_release();

  sub_10039F1D0(v92, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  sub_100054B1C(v73, (uint64_t *)&unk_1005F8CF0);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v103);
  swift_bridgeObjectRelease();
  return v128;
}

id sub_10039E3EC()
{
  uint64_t v0 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v60 = *(void *)(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  unint64_t v3 = (char *)v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v59 = (uint64_t)v53 - v4;
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (void *)((char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v53 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v53 - v12;
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1005F88A0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FlowDestination();
  uint64_t v61 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Showcase.clickAction.getter();
  if (!v64)
  {
    uint64_t v24 = (uint64_t *)&unk_1005F89E0;
    uint64_t v25 = v63;
LABEL_7:
    sub_100054B1C((uint64_t)v25, v24);
    return 0;
  }
  sub_100054B78(&qword_1005F82A0);
  type metadata accessor for FlowAction();
  if (swift_dynamicCast())
  {
    uint64_t v58 = v3;
    id v20 = v62;
    uint64_t v21 = Showcase.title.getter();
    if (!v22)
    {
      swift_release();
      return 0;
    }
    uint64_t v56 = v21;
    uint64_t v57 = v22;
    dispatch thunk of FlowAction.destination.getter();
    uint64_t v23 = v61;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v16, 1, v17) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v24 = (uint64_t *)&unk_1005F88A0;
      uint64_t v25 = (uint64_t *)v16;
    }
    else
    {
      id v55 = v20;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v19, v16, v17);
      uint64_t v28 = v60 + 56;
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56);
      v27(v13, 1, 1, v0);
      uint64_t v29 = type metadata accessor for Podcasts();
      uint64_t v64 = v29;
      uint64_t v65 = sub_10004AEE4((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
      id v30 = sub_10004A244(v63);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v30, enum case for Podcasts.carPlayStoreShowPage(_:), v29);
      LOBYTE(v29) = isFeatureEnabled(_:)();
      sub_10004D2D8((uint64_t)v63);
      v53[1] = v28;
      uint64_t v54 = v27;
      if (v29)
      {
        uint64_t v31 = sub_100054B78(&qword_1005F9E90);
        uint64_t v32 = *(int *)(v31 + 48);
        v53[0] = &v11[*(int *)(v31 + 64)];
        FlowDestination.pageDestinationURL.getter();
        *(void *)&v11[v32] = FlowDestination.pageDestinationPage.getter();
        uint64_t v33 = Showcase.showAdamId.getter();
        char v35 = v34;
        sub_100054B1C((uint64_t)v13, (uint64_t *)&unk_1005F8CF0);
        uint64_t v36 = v53[0];
        *(void *)v53[0] = v33;
        char v37 = v35 & 1;
        uint64_t v38 = v54;
        *(unsigned char *)(v36 + 8) = v37;
        swift_storeEnumTagMultiPayload();
        v38(v11, 0, 1, v0);
        sub_10039F230((uint64_t)v11, (uint64_t)v13);
        uint64_t v39 = (uint64_t)v58;
      }
      else
      {
        uint64_t v40 = Showcase.showAdamId.getter();
        uint64_t v39 = (uint64_t)v58;
        if ((v41 & 1) == 0)
        {
          uint64_t v42 = v40;
          sub_100054B1C((uint64_t)v13, (uint64_t *)&unk_1005F8CF0);
          *(void *)uint64_t v13 = v42;
          v13[8] = 3;
          swift_storeEnumTagMultiPayload();
          v27(v13, 0, 1, v0);
        }
      }
      sub_10039F100((uint64_t)v13, (uint64_t)v8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v60 + 48))(v8, 1, v0) != 1)
      {
        uint64_t v43 = (uint64_t)v8;
        uint64_t v44 = v59;
        sub_1001BF8D0(v43, v59);
        id v45 = objc_allocWithZone((Class)CPListImageRowItem);
        NSString v46 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        sub_10004D29C(0, (unint64_t *)&unk_1006061A0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        id v48 = [v45 initWithText:v46 images:isa];

        id v62 = v48;
        sub_10039F168(v44, v39, type metadata accessor for CarPlayTemplateInfo.TemplateType);
        char v49 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
        sub_1001BF8D0(v39, (uint64_t)v11);
        v54(v11, 0, 1, v0);
        uint64_t v50 = (uint64_t)&v49[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
        swift_beginAccess();
        sub_1001BF934((uint64_t)v11, v50);
        swift_endAccess();
        v49[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 1;
        sub_10004D29C(0, &qword_1005F88B0);
        char v51 = NSString.init(stringLiteral:)();
        uint64_t v52 = v49;
        sub_1001BFA4C((uint64_t)v51, (uint64_t)v49);
        swift_release();

        sub_10039F1D0(v44, type metadata accessor for CarPlayTemplateInfo.TemplateType);
        sub_100054B1C((uint64_t)v13, (uint64_t *)&unk_1005F8CF0);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v19, v17);
        return v62;
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_100054B1C((uint64_t)v13, (uint64_t *)&unk_1005F8CF0);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v19, v17);
      uint64_t v25 = v8;
      uint64_t v24 = (uint64_t *)&unk_1005F8CF0;
    }
    goto LABEL_7;
  }
  return 0;
}

void sub_10039EB48(void *a1, uint64_t a2, uint64_t a3, dispatch_group_t group)
{
  if (!a1) {
    goto LABEL_6;
  }
  uint64_t v7 = (void *)(a2 + 16);
  swift_beginAccess();
  id v8 = a1;

  if (!(*v7 >> 62))
  {
    uint64_t v9 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v10 = v8;
    if (v9 >= a3) {
      goto LABEL_4;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v11 = v8;
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v12 < a3) {
    goto LABEL_8;
  }
LABEL_4:
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_1001FAF68(a3, a3, (uint64_t)v8);
    swift_endAccess();

LABEL_6:
    dispatch_group_leave(group);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_10039EC3C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10039EC74(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, unint64_t a5, uint64_t (*a6)(id))
{
  if (a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12 <= a2) {
      goto LABEL_12;
    }
  }
  else if (*(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
  {
LABEL_12:
    uint64_t v13 = a6(a1);
    a3(v13);
    return;
  }
  if ((a5 & 0xC000000000000001) == 0)
  {
    if (a2 < 0)
    {
      __break(1u);
    }
    else if (*(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a2)
    {
      swift_retain();
      goto LABEL_7;
    }
    __break(1u);
    return;
  }
  specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
  id v14 = sub_10039E3EC();
  swift_release();
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v11 = a6(v14);
  a3(v11);
}

uint64_t sub_10039EDDC()
{
  return sub_100058678((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_10039EDF4(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  sub_10039EC74(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t (**)(id))(v4 + 24));
}

uint64_t sub_10039EE00(void *a1, uint64_t a2, uint64_t (*a3)(void *))
{
  swift_beginAccess();
  sub_10004D29C(0, (unint64_t *)&unk_1006061A0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 updateImages:isa];

  return a3(a1);
}

uint64_t sub_10039EEB8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10039EF00()
{
  return sub_10039EE00(*(void **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void *))(v0 + 32));
}

uint64_t sub_10039EF0C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10039EF4C(void *a1)
{
  sub_10039EB48(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(dispatch_group_t *)(v1 + 32));
}

uint64_t sub_10039EF58()
{
  return swift_deallocObject();
}

uint64_t sub_10039EF68()
{
  return sub_100058678((void (*)(void))&_swift_release);
}

void sub_10039EF80(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, NSObject *a8)
{
  uint64_t v13 = (void *)(a2 + 16);
  swift_beginAccess();
  id v14 = a3;
  unint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_100386BF0(v15, (uint64_t)v14);
  char v18 = v17;
  swift_bridgeObjectRelease();

  if (v18) {
    goto LABEL_7;
  }
  id v19 = sub_10039D6F4(a5, a1, a6, a7);
  if (!v19) {
    goto LABEL_7;
  }
  id v20 = v19;
  swift_beginAccess();

  if (!(*v13 >> 62))
  {
    uint64_t v21 = *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v22 = v20;
    if (v21 >= v16) {
      goto LABEL_5;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v23 = v20;
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 < v16) {
    goto LABEL_9;
  }
LABEL_5:
  if ((v16 & 0x8000000000000000) == 0)
  {
    sub_1001FAC4C(v16, v16, (uint64_t)v20);
    swift_endAccess();

LABEL_7:
    dispatch_group_leave(a8);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_10039F100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039F168(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10039F1D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10039F230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039F298()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10039F2D8()
{
  return sub_100382A14(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_10039F2E4()
{
  swift_release();

  swift_release();
  sub_10004D2D8(v0 + 40);
  swift_release();

  return swift_deallocObject();
}

void sub_10039F344(void *a1)
{
  sub_10039EF80(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), (void *)(v1 + 40), *(void *)(v1 + 80), *(void *)(v1 + 88), *(NSObject **)(v1 + 96));
}

uint64_t sub_10039F35C()
{
  return sub_100058678((void (*)(void))&_swift_release);
}

id sub_10039F38C()
{
  qword_1006065E0 = kMTImageDownloaderArtworkDidLoadNotification;
  return kMTImageDownloaderArtworkDidLoadNotification;
}

uint64_t sub_10039F3A4()
{
  id v1 = [self defaultCenter];
  if (qword_1005F5B30 != -1) {
    swift_once();
  }
  [v1 removeObserver:v0 name:qword_1006065E0 object:0];

  sub_1000536BC(*(void *)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t sub_10039F45C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)Notification.name.getter();
  if (qword_1005F5B30 != -1) {
    swift_once();
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return result;
    }
  }
  Class isa = Notification._bridgeToObjectiveC()().super.isa;
  id v11 = (id)MTImageDownloaderArtworkDidLoadEntityUuids();

  uint64_t v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  sub_10039F7E0(v12, v1);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t type metadata accessor for ImageDownloadObserver()
{
  return self;
}

uint64_t sub_10039F6DC()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_10004ACDC(v2);
  return v2;
}

uint64_t sub_10039F730(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 16);
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return sub_1000536BC(v6);
}

uint64_t (*sub_10039F788())()
{
  return j__swift_endAccess;
}

uint64_t sub_10039F7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  uint64_t v6 = (void (**)(uint64_t, uint64_t))(a2 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v8 = 0;
  int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    while (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      uint64_t v12 = *v6;
      if (*v6) {
        goto LABEL_23;
      }
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v9) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v19 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v9) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v19 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v9) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v19 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v9) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v19 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v8 << 6);
    uint64_t v12 = *v6;
    if (*v6)
    {
LABEL_23:
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      swift_bridgeObjectRetain();
      sub_10004ACDC((uint64_t)v12);
      v12(v17, v18);
      sub_1000536BC((uint64_t)v12);
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v9) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v19 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v9) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v19 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_10039F9CC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t), uint64_t a7)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    a6(1, 0, 2);
    return;
  }
  uint64_t v12 = (void *)Strong;
  if (a4)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    int64_t v13 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10046D010;
    swift_getErrorValue();
    uint64_t v15 = Error.localizedDescription.getter();
    uint64_t v17 = v16;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_10004DA4C();
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v17;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    uint64_t v18 = (void *)_convertErrorToNSError(_:)();
    id v19 = [v18 code];

    if (v19 == (id)-999)
    {
      uint64_t v20 = 1;
    }
    else
    {
      uint64_t v27 = (void *)_convertErrorToNSError(_:)();
      id v28 = [v27 code];

      if (v28 != (id)-1009)
      {
        swift_errorRetain();
        a6(a4, 0, 128);
        swift_release();
        swift_errorRelease();
        goto LABEL_16;
      }
      uint64_t v20 = 0;
    }
    a6(v20, 0, 2);
    swift_release();
LABEL_16:
    swift_errorRelease();
    return;
  }
  if (!a3 || (self, (uint64_t v21 = swift_dynamicCastObjCClass()) == 0))
  {
    sub_1003D19F0();
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v29 = (void *)static OS_os_log.downloads.getter();
    os_log(_:dso:log:_:_:)();

    a6(0, 0, 192);
    swift_release();
    return;
  }
  id v22 = (void *)v21;
  id v23 = a3;
  if ((uint64_t)[v22 statusCode] < 200 || (uint64_t)objc_msgSend(v22, "statusCode") >= 300)
  {
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v24 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10046D010;
    id v26 = [v22 statusCode];
    *(void *)(v25 + 56) = &type metadata for Int;
    *(void *)(v25 + 64) = &protocol witness table for Int;
    *(void *)(v25 + 32) = v26;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
LABEL_35:
    uint64_t v42 = 0;
    uint64_t v43 = 192;
    goto LABEL_36;
  }
  id v30 = [v22 allHeaderFields];
  uint64_t v31 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  strcpy((char *)v62, "Content-Length");
  HIBYTE(v62[1]) = -18;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v31 + 16) && (unint64_t v32 = sub_100226C5C((uint64_t)v63), (v33 & 1) != 0))
  {
    sub_10004D328(*(void *)(v31 + 56) + 32 * v32, (uint64_t)&v64);
  }
  else
  {
    long long v64 = 0u;
    long long v65 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100172F18((uint64_t)v63);
  if (!*((void *)&v65 + 1))
  {
    sub_100054B1C((uint64_t)&v64, &qword_1005F5D30);
    goto LABEL_33;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_33:
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    char v41 = (void *)static OS_os_log.downloads.getter();
LABEL_34:
    os_log(_:dso:log:_:_:)();

    goto LABEL_35;
  }
  uint64_t v34 = HIBYTE(v62[1]) & 0xF;
  uint64_t v35 = v62[0] & 0xFFFFFFFFFFFFLL;
  if ((v62[1] & 0x2000000000000000) != 0) {
    uint64_t v36 = HIBYTE(v62[1]) & 0xF;
  }
  else {
    uint64_t v36 = v62[0] & 0xFFFFFFFFFFFFLL;
  }
  if (!v36)
  {
    swift_bridgeObjectRelease();
LABEL_83:
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    char v41 = (void *)static OS_os_log.downloads.getter();
    goto LABEL_34;
  }
  if ((v62[1] & 0x1000000000000000) != 0)
  {
    uint64_t v38 = sub_10035C284(v62[0]);
    char v40 = v61;
    goto LABEL_69;
  }
  if ((v62[1] & 0x2000000000000000) != 0)
  {
    v63[0] = v62[0];
    v63[1] = v62[1] & 0xFFFFFFFFFFFFFFLL;
    if (LOBYTE(v62[0]) == 43)
    {
      if (v34 == 1 || (BYTE1(v62[0]) - 48) > 9u) {
        goto LABEL_56;
      }
      uint64_t v38 = (BYTE1(v62[0]) - 48);
      if (v34 != 2)
      {
        if ((BYTE2(v62[0]) - 48) > 9u) {
          goto LABEL_56;
        }
        uint64_t v38 = 10 * (BYTE1(v62[0]) - 48) + (BYTE2(v62[0]) - 48);
        uint64_t v44 = v34 - 3;
        if (v44)
        {
          id v45 = (unsigned __int8 *)v63 + 3;
          while (1)
          {
            unsigned int v46 = *v45 - 48;
            if (v46 > 9) {
              goto LABEL_56;
            }
            uint64_t v47 = 10 * v38;
            if ((unsigned __int128)(v38 * (__int128)10) >> 64 != (10 * v38) >> 63) {
              goto LABEL_56;
            }
            uint64_t v38 = v47 + v46;
            if (__OFADD__(v47, v46)) {
              goto LABEL_56;
            }
            char v40 = 0;
            ++v45;
            if (!--v44) {
              goto LABEL_69;
            }
          }
        }
      }
    }
    else
    {
      if (LOBYTE(v62[0]) == 45)
      {
        if (v34 != 1 && (BYTE1(v62[0]) - 48) <= 9u)
        {
          if (v34 == 2)
          {
            char v40 = 0;
            uint64_t v38 = -(uint64_t)(BYTE1(v62[0]) - 48);
            goto LABEL_69;
          }
          if ((BYTE2(v62[0]) - 48) <= 9u)
          {
            uint64_t v38 = -10 * (BYTE1(v62[0]) - 48) - (BYTE2(v62[0]) - 48);
            uint64_t v52 = v34 - 3;
            if (!v52) {
              goto LABEL_68;
            }
            uint64_t v58 = (unsigned __int8 *)v63 + 3;
            while (1)
            {
              unsigned int v59 = *v58 - 48;
              if (v59 > 9) {
                break;
              }
              uint64_t v60 = 10 * v38;
              if ((unsigned __int128)(v38 * (__int128)10) >> 64 != (10 * v38) >> 63) {
                break;
              }
              uint64_t v38 = v60 - v59;
              if (__OFSUB__(v60, v59)) {
                break;
              }
              char v40 = 0;
              ++v58;
              if (!--v52) {
                goto LABEL_69;
              }
            }
          }
        }
LABEL_56:
        uint64_t v38 = 0;
        char v40 = 1;
        goto LABEL_69;
      }
      if ((LOBYTE(v62[0]) - 48) > 9u) {
        goto LABEL_56;
      }
      uint64_t v38 = (LOBYTE(v62[0]) - 48);
      if (v34 != 1)
      {
        if ((BYTE1(v62[0]) - 48) > 9u) {
          goto LABEL_56;
        }
        uint64_t v38 = 10 * (LOBYTE(v62[0]) - 48) + (BYTE1(v62[0]) - 48);
        uint64_t v48 = v34 - 2;
        if (v48)
        {
          char v49 = (unsigned __int8 *)v63 + 2;
          while (1)
          {
            unsigned int v50 = *v49 - 48;
            if (v50 > 9) {
              goto LABEL_56;
            }
            uint64_t v51 = 10 * v38;
            if ((unsigned __int128)(v38 * (__int128)10) >> 64 != (10 * v38) >> 63) {
              goto LABEL_56;
            }
            uint64_t v38 = v51 + v50;
            if (__OFADD__(v51, v50)) {
              goto LABEL_56;
            }
            char v40 = 0;
            ++v49;
            if (!--v48) {
              goto LABEL_69;
            }
          }
        }
      }
    }
LABEL_68:
    char v40 = 0;
    goto LABEL_69;
  }
  if ((v62[0] & 0x1000000000000000) != 0) {
    char v37 = (unsigned __int8 *)((v62[1] & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    char v37 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
  uint64_t v38 = (uint64_t)sub_10035C26C(v37, v35, 10);
  char v40 = v39 & 1;
LABEL_69:
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0 || v38 < 1) {
    goto LABEL_83;
  }
  uint64_t v53 = v12[10];
  if (v53 == 1 || v53 == 2 && v12[9] < v38)
  {
    sub_1003A03B0(v38, a6, a7);
    goto LABEL_37;
  }
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v54 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_10046D030;
  *(void *)(v55 + 56) = &type metadata for Int64;
  *(void *)(v55 + 64) = &protocol witness table for Int64;
  *(void *)(v55 + 32) = v38;
  uint64_t v56 = v12[2];
  uint64_t v57 = v12[3];
  *(void *)(v55 + 96) = &type metadata for String;
  *(void *)(v55 + 104) = sub_10004DA4C();
  *(void *)(v55 + 72) = v56;
  *(void *)(v55 + 80) = v57;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v42 = v38;
  uint64_t v43 = 64;
LABEL_36:
  a6(v42, 0, v43);
LABEL_37:
  swift_release();
}

uint64_t sub_1003A02E8(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_10021A3FC((uint64_t)v6, v10);

  return swift_release();
}

uint64_t sub_1003A03B0(uint64_t a1, void (*a2)(uint64_t, uint64_t, void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v64 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  __chkstk_darwin();
  id v62 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for DispatchQoS();
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin();
  uint64_t v60 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + 72);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  int64_t v13 = (void *)swift_allocObject();
  uint64_t v56 = v11;
  void v13[2] = v11;
  v13[3] = a1;
  v13[4] = v12;
  v13[5] = a2;
  unint64_t v68 = v13;
  v13[6] = a3;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v14;
  unsigned int v59 = a2;
  v15[4] = a2;
  v15[5] = a3;
  unint64_t v69 = v15;
  id v16 = objc_allocWithZone((Class)NSNumber);
  uint64_t v58 = a3;
  swift_retain_n();
  uint64_t v57 = a1;
  id v17 = [v16 initWithLongLong:a1];
  uint64_t v18 = static Localization.fileSize(_:)();
  uint64_t v71 = v19;
  uint64_t v72 = v18;

  uint64_t v20 = self;
  id v21 = [v20 mainBundle];
  v75._object = (void *)0xE000000000000000;
  v22._object = (void *)0x80000001004E0920;
  v22._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v75._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v75)._countAndFlagsBits;

  uint64_t v67 = sub_100054B78(&qword_1005F7720);
  uint64_t v24 = swift_allocObject();
  long long v66 = xmmword_10046D010;
  *(_OWORD *)(v24 + 16) = xmmword_10046D010;
  uint64_t v25 = *(void *)(v4 + 32);
  id v26 = *(void **)(v4 + 40);
  *(void *)(v24 + 56) = &type metadata for String;
  unint64_t v27 = sub_10004DA4C();
  *(void *)(v24 + 64) = v27;
  if (v26)
  {
    object = v26;
  }
  else
  {
    id v29 = [v20 mainBundle];
    v30._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v76._object = (void *)0xE000000000000000;
    v30._object = (void *)0x80000001004E0940;
    v31._uint64_t countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v76._uint64_t countAndFlagsBits = 0;
    Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)(unint64_t)v25, (NSBundle)v29, v31, v76);
    uint64_t v25 = v32._countAndFlagsBits;
    object = v32._object;
  }
  *(void *)(v24 + 32) = v25;
  *(void *)(v24 + 40) = object;
  swift_bridgeObjectRetain();
  uint64_t v33 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v36 = [v20 mainBundle];
  uint64_t v37 = v71;
  if (v71)
  {
    v38._uint64_t countAndFlagsBits = 0xD000000000000029;
    v77._object = (void *)0xE000000000000000;
    v38._object = (void *)0x80000001004E09A0;
    v39._uint64_t countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    v77._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v36, v39, v77);

    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v66;
    *(void *)(v40 + 56) = &type metadata for String;
    *(void *)(v40 + 64) = v27;
    *(void *)(v40 + 32) = v72;
    *(void *)(v40 + 40) = v37;
    uint64_t v41 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v43 = v42;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v4 + 96))
    {
LABEL_6:
      sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      uint64_t v44 = (void *)static OS_dispatch_queue.main.getter();
      id v45 = (void *)swift_allocObject();
      v45[2] = v33;
      v45[3] = v35;
      v45[4] = v41;
      v45[5] = v43;
      unsigned int v46 = v68;
      uint64_t v47 = v69;
      v45[6] = sub_1003A1224;
      v45[7] = v46;
      v45[8] = sub_1003A1274;
      v45[9] = v47;
      aBlock[4] = sub_1003A12E0;
      aBlock[5] = v45;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003B424;
      uint64_t aBlock[3] = &unk_100566C78;
      uint64_t v48 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      char v49 = v60;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      unsigned int v50 = v62;
      uint64_t v51 = v65;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v48);
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v64 + 8))(v50, v51);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v49, v63);
    }
  }
  else
  {
    v53._uint64_t countAndFlagsBits = 0xD000000000000027;
    v78._object = (void *)0xE000000000000000;
    v53._object = (void *)0x80000001004E0970;
    v54._uint64_t countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    v78._uint64_t countAndFlagsBits = 0;
    Swift::String v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)(unint64_t)v72, (NSBundle)v36, v54, v78);
    uint64_t v41 = v55._countAndFlagsBits;
    uint64_t v43 = v55._object;

    if (*(unsigned char *)(v4 + 96)) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v59(v57, v56, 0);
  swift_release();

  return swift_release();
}

uint64_t sub_1003A0AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void))
{
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v8 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10046D050;
  *(void *)(v9 + 56) = &type metadata for Int64;
  *(void *)(v9 + 64) = &protocol witness table for Int64;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 96) = &type metadata for Int64;
  *(void *)(v9 + 104) = &protocol witness table for Int64;
  *(void *)(v9 + 72) = a3;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = *(void *)(Strong + 16);
    unint64_t v11 = *(void *)(Strong + 24);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v11 = 0;
  }
  *(void *)(v9 + 136) = &type metadata for String;
  *(void *)(v9 + 144) = sub_10004DA4C();
  if (v11) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  unint64_t v14 = 0xE000000000000000;
  if (v11) {
    unint64_t v14 = v11;
  }
  *(void *)(v9 + 112) = v13;
  *(void *)(v9 + 120) = v14;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  return a5(a3, a2, 0);
}

uint64_t sub_1003A0C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, uint64_t))
{
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v6 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10046D030;
  *(void *)(v7 + 56) = &type metadata for Int64;
  *(void *)(v7 + 64) = &protocol witness table for Int64;
  *(void *)(v7 + 32) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = *(void *)(Strong + 16);
    unint64_t v9 = *(void *)(Strong + 24);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v9 = 0;
  }
  *(void *)(v7 + 96) = &type metadata for String;
  *(void *)(v7 + 104) = sub_10004DA4C();
  if (v9) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  unint64_t v12 = 0xE000000000000000;
  if (v9) {
    unint64_t v12 = v9;
  }
  *(void *)(v7 + 72) = v11;
  *(void *)(v7 + 80) = v12;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  return a4(a2, 0, 64);
}

void sub_1003A0DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [self alertControllerWithTitle:v12 message:v13 preferredStyle:1];

  v15._object = (void *)0x80000001004E09D0;
  v15._uint64_t countAndFlagsBits = 0xD000000000000025;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  localizedStringReferencingWiFi(_:comment:)(v15, v16);
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  sub_10004ACDC(a5);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a5)
  {
    uint64_t v31 = a5;
    uint64_t v32 = a6;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    id v29 = sub_1001F2B1C;
    Swift::String v30 = &unk_100566CC8;
    uint64_t v18 = _Block_copy(&aBlock);
    swift_release();
  }
  else
  {
    uint64_t v18 = 0;
  }
  uint64_t v19 = self;
  id v20 = [v19 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  id v21 = [self mainBundle];
  v22._uint64_t countAndFlagsBits = 0xD000000000000027;
  v33._object = (void *)0xE000000000000000;
  v22._object = (void *)0x80000001004E0A00;
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v33);

  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  sub_10004ACDC(a7);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a7)
  {
    uint64_t v31 = a7;
    uint64_t v32 = a8;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    id v29 = sub_1001F2B1C;
    Swift::String v30 = &unk_100566CA0;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_release();
  }
  else
  {
    uint64_t v25 = 0;
  }
  id v26 = [v19 actionWithTitle:v24 style:0 handler:v25];
  _Block_release(v25);

  [v14 addAction:v20];
  [v14 addAction:v26];
  [v14 presentAnimated:1 completion:0];
}

uint64_t sub_1003A1130()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DownloadPreflightValidator()
{
  return self;
}

uint64_t sub_1003A11AC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003A11E4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A1224(uint64_t a1)
{
  return sub_1003A0AAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t (**)(uint64_t, uint64_t, void))(v1 + 40));
}

uint64_t sub_1003A1234()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A1274(uint64_t a1)
{
  return sub_1003A0C30(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t, void, uint64_t))(v1 + 32));
}

uint64_t sub_1003A1280()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1003A12E0()
{
  sub_1003A0DA8(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9]);
}

void sub_1003A12F4(uint64_t a1, void (*a2)(uint64_t, void, uint64_t), uint64_t a3)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  NSString v13 = *(void **)(a1 + 88);
  swift_retain();
  id v14 = v13;
  DownloadableURLOptions.url.getter();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100054B1C((uint64_t)v7, (uint64_t *)&unk_1005F7750);
    a2(2, 0, 2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    if (*(void *)(a1 + 80))
    {
      id v15 = objc_allocWithZone((Class)NSMutableURLRequest);
      URL._bridgeToObjectiveC()(v16);
      uint64_t v18 = v17;
      id v19 = [v15 initWithURL:v17];

      NSString v20 = String._bridgeToObjectiveC()();
      [v19 setHTTPMethod:v20];

      double v21 = *(double *)(a1 + 64);
      id v41 = v19;
      [v19 setTimeoutInterval:v21];
      id v22 = *(id *)(a1 + 88);
      char v23 = DownloadableURLOptions.nonAppInitiated.getter();

      [v19 setNonAppInitiated:v23 & 1];
      static os_log_type_t.default.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      NSString v24 = (void *)static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_10046D010;
      uint64_t v26 = *(void *)(a1 + 16);
      uint64_t v27 = *(void *)(a1 + 24);
      *(void *)(v25 + 56) = &type metadata for String;
      *(void *)(v25 + 64) = sub_10004DA4C();
      *(void *)(v25 + 32) = v26;
      *(void *)(v25 + 40) = v27;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      uint64_t v28 = *(void **)(a1 + 48);
      uint64_t v29 = swift_allocObject();
      swift_weakInit();
      Swift::String v30 = (void *)swift_allocObject();
      void v30[2] = v29;
      v30[3] = sub_1003A1884;
      v30[4] = v12;
      aBlock[4] = sub_1003A18CC;
      aBlock[5] = v30;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1003A02E8;
      uint64_t aBlock[3] = &unk_100566D40;
      uint64_t v31 = _Block_copy(aBlock);
      id v32 = v41;
      swift_retain();
      swift_release();
      id v33 = [v28 dataTaskWithRequest:v32 completionHandler:v31];
      _Block_release(v31);

      uint64_t v34 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = v33;

      uint64_t v35 = *(void **)(a1 + 56);
      if (!v35)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        swift_release();

        return;
      }
      [v35 resume];
    }
    else
    {
      LODWORD(v41) = static os_log_type_t.default.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      id v36 = (void *)static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_10046D010;
      uint64_t v39 = *(void *)(a1 + 16);
      uint64_t v38 = *(void *)(a1 + 24);
      *(void *)(v37 + 56) = &type metadata for String;
      *(void *)(v37 + 64) = sub_10004DA4C();
      *(void *)(v37 + 32) = v39;
      *(void *)(v37 + 40) = v38;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      a2(0, 0, 64);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_release();
}

uint64_t sub_1003A184C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A1884(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return sub_1001773BC(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 16));
}

uint64_t sub_1003A188C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1003A18CC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_10039F9CC(a1, a2, a3, a4, *(void *)(v4 + 16), *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24), *(void *)(v4 + 32));
}

uint64_t type metadata accessor for InstagramShareModel()
{
  return self;
}

uint64_t type metadata accessor for InstagramShareUtil()
{
  return self;
}

void sub_1003A1B6C()
{
  qword_100606818 = 0x3FD71C71C71C71C7;
}

void sub_1003A1B88()
{
  qword_100606820 = 0x408C480000000000;
}

double sub_1003A1B9C()
{
  if (qword_1005F5B40 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_100606820;
  if (qword_1005F5B38 != -1) {
    swift_once();
  }
  double result = v0 * *(double *)&qword_100606818;
  *(double *)&qword_100606828 = v0 * *(double *)&qword_100606818;
  return result;
}

double sub_1003A1C34()
{
  if (qword_1005F5B38 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_100606818 * 991.19;
  *(double *)&qword_100606830 = *(double *)&qword_100606818 * 991.19;
  return result;
}

void sub_1003A1C94()
{
  qword_100606838 = 0x4018000000000000;
}

double sub_1003A1CA4()
{
  if (qword_1005F5B38 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_100606818 * 889.5;
  *(double *)&qword_100606840 = *(double *)&qword_100606818 * 889.5;
  return result;
}

void sub_1003A1D08()
{
  qword_100606848 = 0xC054000000000000;
}

void sub_1003A1D18()
{
  qword_100606850 = 0;
}

double sub_1003A1D24()
{
  if (qword_1005F5B38 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_100606818 * 87.76;
  *(double *)&qword_100606858 = *(double *)&qword_100606818 * 87.76;
  return result;
}

void sub_1003A1D84()
{
  qword_100606860 = 0x4036000000000000;
}

void sub_1003A1D94()
{
  qword_100606868 = 0x4032000000000000;
}

void sub_1003A1DA4()
{
  qword_100606870 = 0x4022000000000000;
}

uint64_t sub_1003A1DB4()
{
  sub_100054B78(&qword_1005FE7A0);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v21 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1006068F8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100054B78(&qword_100606900);
  uint64_t v23 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v22 = (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AttributeContainer();
  __chkstk_darwin();
  uint64_t v8 = self;
  id v9 = [v8 mainBundle];
  v10._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v30._object = (void *)0x80000001004E0DD0;
  v10._object = (void *)0x80000001004E0DB0;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v30._uint64_t countAndFlagsBits = 0xD000000000000013;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v30);

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v12 = self;
  if (qword_1005F5B90 != -1) {
    swift_once();
  }
  uint64_t v28 = (uint64_t)[v12 systemFontOfSize:*(double *)&qword_100606870];
  sub_1003A5524();
  AttributedString.subscript.setter();
  id v13 = [v8 mainBundle];
  v31._uint64_t countAndFlagsBits = 0xD000000000000015;
  v14._uint64_t countAndFlagsBits = 0xD000000000000025;
  v31._object = (void *)0x80000001004E0E20;
  v14._object = (void *)0x80000001004E0DF0;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v31);

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  swift_getKeyPath();
  __chkstk_darwin();
  swift_getKeyPath();
  if (qword_1005F5B88 != -1) {
    swift_once();
  }
  uint64_t v28 = (uint64_t)[v12 systemFontOfSize:*(double *)&qword_100606868];
  AttributedString.subscript.setter();
  uint64_t v28 = 16421;
  unint64_t v29 = 0xE200000000000000;
  uint64_t v16 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v1, 1, 1, v16);
  sub_1003A5618();
  sub_1001AA530();
  uint64_t v17 = v25;
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_100054B1C((uint64_t)v1, &qword_1005FE7A0);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v3, 1, v26) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v17);
    return sub_100054B1C((uint64_t)v3, &qword_1006068F8);
  }
  else
  {
    uint64_t v19 = (uint64_t)v3;
    uint64_t v20 = v22;
    sub_100053820(v19, v22, &qword_100606900);
    sub_100044200(&qword_100606918, &qword_100606900);
    AttributedString.replaceSubrange<A, B>(_:with:)();
    sub_100054B1C(v20, &qword_100606900);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v7, v17);
  }
}

uint64_t sub_1003A23D0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_1003A242C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  sub_100054B78(&qword_1006069C0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78(&qword_1006069C8) - 8;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1006069D0) - 8;
  __chkstk_darwin();
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = static Alignment.center.getter();
  uint64_t v12 = v11;
  *(void *)uint64_t v3 = static HorizontalAlignment.center.getter();
  *((void *)v3 + 1) = 0;
  v3[16] = 0;
  uint64_t v13 = sub_100054B78(&qword_1006069D8);
  sub_1003A2610(v1, (uint64_t)&v3[*(int *)(v13 + 44)]);
  uint64_t v14 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100054BBC((uint64_t)v3, (uint64_t)v6, &qword_1006069C0);
  uint64_t v16 = (uint64_t *)&v6[*(int *)(v4 + 44)];
  *uint64_t v16 = KeyPath;
  v16[1] = v14;
  sub_100054B1C((uint64_t)v3, &qword_1006069C0);
  sub_100053820((uint64_t)v6, (uint64_t)v9, &qword_1006069C8);
  uint64_t v17 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  *uint64_t v17 = v10;
  v17[1] = v12;
  sub_100054BBC((uint64_t)v9, v20, &qword_1006069D0);
  return sub_100054B1C((uint64_t)v9, &qword_1006069D0);
}

uint64_t sub_1003A2610@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v218 = a2;
  sub_100054B78(&qword_1006069E0);
  __chkstk_darwin();
  uint64_t v215 = (uint64_t *)((char *)&v194 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v214 = sub_100054B78(&qword_1006069E8);
  __chkstk_darwin();
  uint64_t v217 = (uint64_t)&v194 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v216 = (uint64_t)&v194 - v5;
  uint64_t v209 = sub_100054B78(&qword_1006069F0);
  __chkstk_darwin();
  uint64_t v212 = (uint64_t)&v194 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_100054B78(&qword_1006069F8);
  __chkstk_darwin();
  uint64_t v211 = (uint64_t)&v194 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_100606A00);
  __chkstk_darwin();
  v221 = (char *)&v194 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_100606A08);
  uint64_t v201 = *(void *)(v9 - 8);
  uint64_t v202 = v9;
  __chkstk_darwin();
  char v198 = (char *)&v194 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v196 = (char *)&v194 - v11;
  sub_100054B78(&qword_100606A10);
  __chkstk_darwin();
  uint64_t v197 = (uint64_t)&v194 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v219 = (unint64_t)&v194 - v13;
  __chkstk_darwin();
  unint64_t v199 = (unint64_t)&v194 - v14;
  __chkstk_darwin();
  uint64_t v220 = (uint64_t)&v194 - v15;
  sub_100054B78(&qword_100606A18);
  __chkstk_darwin();
  uint64_t v213 = (uint64_t)&v194 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v224 = (uint64_t)&v194 - v17;
  uint64_t v207 = sub_100054B78(&qword_100606A20);
  __chkstk_darwin();
  uint64_t v208 = (uint64_t)&v194 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  uint64_t v21 = (double *)((char *)&v194 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for Image.ResizingMode();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin();
  uint64_t v25 = (char *)&v194 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_100054B78(&qword_100606A28);
  __chkstk_darwin();
  uint64_t v27 = (char *)&v194 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_100054B78(&qword_100606A30);
  __chkstk_darwin();
  uint64_t v223 = (uint64_t)&v194 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v222 = (uint64_t)&v194 - v29;
  NSString v225 = a1;
  id v30 = *(id *)(*a1 + OBJC_IVAR___MTInstagramShareModel_artwork);
  Image.init(uiImage:)();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, enum case for Image.ResizingMode.stretch(_:), v22);
  uint64_t v204 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  if (qword_1005F5B48 != -1) {
    swift_once();
  }
  double v31 = *(double *)&qword_100606828;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v32 = v270;
  char v33 = v271;
  uint64_t v203 = v272;
  DWORD2(v200) = v273;
  uint64_t v34 = v274;
  *(void *)&long long v200 = v275;
  double v35 = v31 * 0.033;
  id v36 = (char *)v21 + *(int *)(v19 + 20);
  uint64_t v37 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v38 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
  double *v21 = v35;
  v21[1] = v35;
  uint64_t v39 = v208;
  sub_1003A5D8C((uint64_t)v21, v208, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v39 + *(int *)(v207 + 36)) = 256;
  sub_100054BBC(v39, (uint64_t)&v27[*(int *)(v205 + 36)], &qword_100606A20);
  uint64_t v40 = v203;
  *(void *)uint64_t v27 = v204;
  *((void *)v27 + 1) = v32;
  v27[16] = v33;
  *((void *)v27 + 3) = v40;
  v27[32] = BYTE8(v200);
  uint64_t v41 = v200;
  *((void *)v27 + 5) = v34;
  *((void *)v27 + 6) = v41;
  swift_retain();
  sub_100054B1C(v39, &qword_100606A20);
  sub_1003A5DF4((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  uint64_t v42 = static Alignment.center.getter();
  uint64_t v44 = v43;
  uint64_t v45 = static Alignment.center.getter();
  uint64_t v47 = v46;
  sub_1003A3E28(v290);
  uint64_t v48 = v223;
  sub_100054BBC((uint64_t)v27, v223, &qword_100606A28);
  uint64_t v49 = v48 + *(int *)(v206 + 36);
  *(void *)uint64_t v49 = v45;
  *(void *)(v49 + 8) = v47;
  memcpy((void *)(v49 + 16), v290, 0x130uLL);
  *(_OWORD *)(v49 + 320) = xmmword_100478C00;
  *(unsigned char *)(v49 + 336) = 0;
  *(_DWORD *)(v49 + 337) = *(_DWORD *)v289;
  *(_DWORD *)(v49 + 340) = *(_DWORD *)&v289[3];
  *(void *)(v49 + 344) = 0xC006000000000000;
  *(void *)(v49 + 352) = 0xC006000000000000;
  *(void *)(v49 + 360) = v42;
  *(void *)(v49 + 368) = v44;
  sub_100054B1C((uint64_t)v27, &qword_100606A28);
  sub_100053820(v48, v222, &qword_100606A30);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v208 = v276;
  LODWORD(v207) = v277;
  uint64_t v206 = v278;
  LODWORD(v205) = v279;
  uint64_t v203 = v281;
  uint64_t v204 = v280;
  unsigned int v50 = v225;
  uint64_t v51 = *v225;
  uint64_t v52 = (void *)(*v225 + OBJC_IVAR___MTInstagramShareModel_episodeName);
  uint64_t v53 = v52[1];
  if (v53)
  {
    *(void *)&long long v200 = *v52;
    Swift::String v54 = *(void **)((char *)v50 + *(int *)(type metadata accessor for SocialStoryPostView() + 28));
    uint64_t v55 = *(void *)(v51 + OBJC_IVAR___MTInstagramShareModel_publishDate);
    swift_bridgeObjectRetain();
    id v56 = [v54 stringForObjectValue:v55];
    if (v56)
    {
      uint64_t v57 = v56;
      uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v60 = v59;
    }
    else
    {
      uint64_t v58 = 0;
      unint64_t v60 = 0xE000000000000000;
    }
    *((void *)&v200 + 1) = v53;
    *(void *)&long long v259 = v58;
    *((void *)&v259 + 1) = v60;
    unint64_t v199 = sub_1001AA530();
    uint64_t v120 = Text.init<A>(_:)();
    uint64_t v122 = v121;
    char v124 = v123;
    if (qword_1005F5B80 != -1) {
      swift_once();
    }
    uint64_t v195 = type metadata accessor for Font.Design();
    uint64_t v125 = *(void *)(v195 - 8);
    id v194 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v125 + 56);
    uint64_t v196 = (char *)(v125 + 56);
    uint64_t v126 = (uint64_t)v221;
    v194(v221, 1, 1, v195);
    static Font.system(size:weight:design:)();
    sub_100054B1C(v126, &qword_100606A00);
    uint64_t v127 = Text.font(_:)();
    uint64_t v129 = v128;
    LOBYTE(v126) = v130;
    uint64_t v132 = v131;
    swift_release();
    LOBYTE(v126) = v126 & 1;
    sub_1001ACBD0(v120, v122, v124 & 1);
    swift_bridgeObjectRelease();
    *(void *)&long long v259 = v127;
    *((void *)&v259 + 1) = v129;
    LOBYTE(v260) = v126;
    *((void *)&v260 + 1) = v132;
    *(void *)&long long v261 = 0x3FE0000000000000;
    static Font.Weight.semibold.getter();
    sub_100054B78(&qword_100606A38);
    sub_1003A5E54();
    unint64_t v133 = v198;
    View.fontWeight(_:)();
    sub_1001ACBD0(v127, v129, v126);
    swift_bridgeObjectRelease();
    double v134 = *(double *)&qword_100606828;
    static Alignment.leading.getter();
    uint64_t v135 = v197;
    __n128 v136 = sub_1003A4630(0.0, 1, 0.0, 1, v134, 0, 0.0, 1, v197, 0.0, 1, 0.0, 1);
    (*(void (**)(char *, uint64_t, __n128))(v201 + 8))(v133, v202, v136);
    sub_100053820(v135, v219, &qword_100606A10);
    long long v259 = v200;
    uint64_t v137 = Text.init<A>(_:)();
    uint64_t v139 = v138;
    LOBYTE(v132) = v140 & 1;
    uint64_t v141 = (uint64_t)v221;
    v194(v221, 1, 1, v195);
    static Font.system(size:weight:design:)();
    sub_100054B1C(v141, &qword_100606A00);
    uint64_t v142 = Text.font(_:)();
    uint64_t v144 = v143;
    char v146 = v145;
    swift_release();
    LOBYTE(v127) = v146 & 1;
    sub_1001ACBD0(v137, v139, v132);
    swift_bridgeObjectRelease();
    static Font.Weight.semibold.getter();
    uint64_t v147 = Text.fontWeight(_:)();
    uint64_t v149 = v148;
    uint64_t v151 = v150;
    char v153 = v152 & 1;
    sub_1001ACBD0(v142, v144, v127);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v282 = v147;
    uint64_t v283 = v149;
    char v284 = v153;
    uint64_t v285 = v151;
    uint64_t v286 = KeyPath;
    uint64_t v287 = 0;
    char v288 = 1;
    double v155 = *(double *)&qword_100606828;
    static Alignment.leading.getter();
    sub_1003A481C(0.0, 1, 0.0, 1, v155, 0, 0.0, 1, (uint64_t)&v259, 0.0, 1, 0.0, 1);
    sub_1001ACBD0(v147, v149, v153);
    swift_release();
    swift_bridgeObjectRelease();
    long long v245 = v267;
    long long v246 = v268;
    uint64_t v247 = v269;
    long long v241 = v263;
    long long v242 = v264;
    long long v243 = v265;
    long long v244 = v266;
    long long v237 = v259;
    long long v238 = v260;
    long long v239 = v261;
    long long v240 = v262;
    uint64_t v157 = v219;
    uint64_t v156 = v220;
    sub_100054BBC(v219, v220, &qword_100606A10);
    long long v233 = v244;
    long long v234 = v245;
    long long v235 = v246;
    uint64_t v236 = v247;
    long long v230 = v241;
    long long v231 = v242;
    long long v232 = v243;
    long long v226 = v237;
    long long v227 = v238;
    long long v228 = v239;
    long long v229 = v240;
    uint64_t v158 = v211;
    sub_100054BBC(v156, v211, &qword_100606A10);
    uint64_t v159 = v158 + *(int *)(sub_100054B78(&qword_100606A48) + 48);
    long long v160 = v233;
    long long v161 = v234;
    long long v256 = v234;
    long long v257 = v235;
    long long v162 = v230;
    long long v163 = v230;
    long long v252 = v230;
    long long v253 = v231;
    long long v254 = v232;
    long long v255 = v233;
    long long v248 = v226;
    long long v249 = v227;
    long long v250 = v228;
    long long v251 = v229;
    long long v164 = v235;
    *(_OWORD *)(v159 + 128) = v234;
    *(_OWORD *)(v159 + 144) = v164;
    long long v165 = v231;
    long long v166 = v232;
    long long v167 = v231;
    *(_OWORD *)(v159 + 64) = v162;
    *(_OWORD *)(v159 + 80) = v165;
    long long v168 = v233;
    *(_OWORD *)(v159 + 96) = v166;
    *(_OWORD *)(v159 + 112) = v168;
    long long v169 = v227;
    long long v171 = v226;
    long long v170 = v227;
    *(_OWORD *)uint64_t v159 = v226;
    *(_OWORD *)(v159 + 16) = v169;
    long long v172 = v229;
    long long v174 = v228;
    long long v173 = v229;
    *(_OWORD *)(v159 + 32) = v228;
    *(_OWORD *)(v159 + 48) = v172;
    long long v267 = v161;
    long long v268 = v235;
    long long v263 = v163;
    long long v264 = v167;
    long long v265 = v232;
    long long v266 = v160;
    long long v259 = v171;
    long long v260 = v170;
    uint64_t v258 = v236;
    *(void *)(v159 + 160) = v236;
    uint64_t v269 = v236;
    long long v261 = v174;
    long long v262 = v173;
    sub_1003A5F2C((uint64_t)&v248);
    sub_1003A5F2C((uint64_t)&v237);
    sub_1003A5F7C((uint64_t)&v259);
    sub_100054B1C(v156, &qword_100606A10);
    sub_100054BBC(v158, v212, &qword_1006069F8);
    swift_storeEnumTagMultiPayload();
    sub_100044200(&qword_100606A50, &qword_1006069F8);
    _ConditionalContent<>.init(storage:)();
    sub_100054B1C(v158, &qword_1006069F8);
    sub_1003A5F7C((uint64_t)&v237);
    sub_100054B1C(v157, &qword_100606A10);
    uint64_t v119 = (uint64_t)v225;
  }
  else
  {
    uint64_t v61 = *(void *)(v51 + OBJC_IVAR___MTInstagramShareModel_creatorName + 8);
    *(void *)&long long v259 = *(void *)(v51 + OBJC_IVAR___MTInstagramShareModel_creatorName);
    *((void *)&v259 + 1) = v61;
    unint64_t v62 = sub_1001AA530();
    swift_bridgeObjectRetain();
    unint64_t v219 = v62;
    uint64_t v63 = Text.init<A>(_:)();
    uint64_t v65 = v64;
    char v67 = v66;
    if (qword_1005F5B80 != -1) {
      swift_once();
    }
    *(void *)&long long v200 = type metadata accessor for Font.Design();
    uint64_t v68 = *(void *)(v200 - 8);
    char v198 = *(char **)(v68 + 56);
    *((void *)&v200 + 1) = v68 + 56;
    uint64_t v69 = (uint64_t)v221;
    ((void (*)(char *, uint64_t, uint64_t, void))v198)(v221, 1, 1, v200);
    static Font.system(size:weight:design:)();
    sub_100054B1C(v69, &qword_100606A00);
    uint64_t v70 = Text.font(_:)();
    uint64_t v72 = v71;
    LOBYTE(v69) = v73;
    uint64_t v75 = v74;
    swift_release();
    LOBYTE(v69) = v69 & 1;
    sub_1001ACBD0(v63, v65, v67 & 1);
    swift_bridgeObjectRelease();
    *(void *)&long long v259 = v70;
    *((void *)&v259 + 1) = v72;
    LOBYTE(v260) = v69;
    *((void *)&v260 + 1) = v75;
    *(void *)&long long v261 = 0x3FE0000000000000;
    static Font.Weight.semibold.getter();
    sub_100054B78(&qword_100606A38);
    sub_1003A5E54();
    Swift::String v76 = v196;
    View.fontWeight(_:)();
    sub_1001ACBD0(v70, v72, v69);
    swift_bridgeObjectRelease();
    double v77 = *(double *)&qword_100606828;
    static Alignment.leading.getter();
    uint64_t v78 = v199;
    __n128 v79 = sub_1003A4630(0.0, 1, 0.0, 1, v77, 0, 0.0, 1, v199, 0.0, 1, 0.0, 1);
    (*(void (**)(char *, uint64_t, __n128))(v201 + 8))(v76, v202, v79);
    sub_100053820(v78, v220, &qword_100606A10);
    uint64_t v80 = (void *)(*v225 + OBJC_IVAR___MTInstagramShareModel_showName);
    uint64_t v81 = v80[1];
    *(void *)&long long v259 = *v80;
    *((void *)&v259 + 1) = v81;
    swift_bridgeObjectRetain();
    uint64_t v82 = Text.init<A>(_:)();
    uint64_t v84 = v83;
    LOBYTE(v72) = v85 & 1;
    uint64_t v86 = (uint64_t)v221;
    ((void (*)(char *, uint64_t, uint64_t, void))v198)(v221, 1, 1, v200);
    static Font.system(size:weight:design:)();
    sub_100054B1C(v86, &qword_100606A00);
    uint64_t v87 = Text.font(_:)();
    uint64_t v89 = v88;
    LOBYTE(v70) = v90;
    swift_release();
    char v91 = v70 & 1;
    sub_1001ACBD0(v82, v84, v72);
    swift_bridgeObjectRelease();
    static Font.Weight.semibold.getter();
    uint64_t v92 = Text.fontWeight(_:)();
    uint64_t v94 = v93;
    uint64_t v96 = v95;
    LOBYTE(v70) = v97 & 1;
    sub_1001ACBD0(v87, v89, v91);
    swift_bridgeObjectRelease();
    uint64_t v98 = swift_getKeyPath();
    uint64_t v282 = v92;
    uint64_t v283 = v94;
    char v284 = v70;
    uint64_t v285 = v96;
    uint64_t v286 = v98;
    uint64_t v287 = 0;
    char v288 = 1;
    double v99 = *(double *)&qword_100606828;
    static Alignment.leading.getter();
    sub_1003A481C(0.0, 1, 0.0, 1, v99, 0, 0.0, 1, (uint64_t)&v259, 0.0, 1, 0.0, 1);
    sub_1001ACBD0(v92, v94, v70);
    swift_release();
    swift_bridgeObjectRelease();
    long long v245 = v267;
    long long v246 = v268;
    uint64_t v247 = v269;
    long long v241 = v263;
    long long v242 = v264;
    long long v243 = v265;
    long long v244 = v266;
    long long v237 = v259;
    long long v238 = v260;
    long long v239 = v261;
    long long v240 = v262;
    uint64_t v100 = v220;
    uint64_t v101 = v199;
    sub_100054BBC(v220, v199, &qword_100606A10);
    long long v233 = v244;
    long long v234 = v245;
    long long v235 = v246;
    uint64_t v236 = v247;
    long long v230 = v241;
    long long v231 = v242;
    long long v232 = v243;
    long long v226 = v237;
    long long v227 = v238;
    long long v228 = v239;
    long long v229 = v240;
    uint64_t v102 = v211;
    sub_100054BBC(v101, v211, &qword_100606A10);
    uint64_t v103 = v102 + *(int *)(sub_100054B78(&qword_100606A48) + 48);
    long long v104 = v233;
    long long v105 = v234;
    long long v256 = v234;
    long long v257 = v235;
    long long v106 = v230;
    long long v107 = v230;
    long long v252 = v230;
    long long v253 = v231;
    long long v254 = v232;
    long long v255 = v233;
    long long v248 = v226;
    long long v249 = v227;
    long long v250 = v228;
    long long v251 = v229;
    long long v108 = v235;
    *(_OWORD *)(v103 + 128) = v234;
    *(_OWORD *)(v103 + 144) = v108;
    long long v109 = v231;
    long long v110 = v232;
    long long v111 = v231;
    *(_OWORD *)(v103 + 64) = v106;
    *(_OWORD *)(v103 + 80) = v109;
    long long v112 = v233;
    *(_OWORD *)(v103 + 96) = v110;
    *(_OWORD *)(v103 + 112) = v112;
    long long v113 = v227;
    long long v115 = v226;
    long long v114 = v227;
    *(_OWORD *)uint64_t v103 = v226;
    *(_OWORD *)(v103 + 16) = v113;
    long long v116 = v229;
    long long v118 = v228;
    long long v117 = v229;
    *(_OWORD *)(v103 + 32) = v228;
    *(_OWORD *)(v103 + 48) = v116;
    long long v267 = v105;
    long long v268 = v235;
    long long v263 = v107;
    long long v264 = v111;
    long long v265 = v232;
    long long v266 = v104;
    long long v259 = v115;
    long long v260 = v114;
    uint64_t v258 = v236;
    *(void *)(v103 + 160) = v236;
    uint64_t v269 = v236;
    long long v261 = v118;
    long long v262 = v117;
    sub_1003A5F2C((uint64_t)&v248);
    sub_1003A5F2C((uint64_t)&v237);
    sub_1003A5F7C((uint64_t)&v259);
    sub_100054B1C(v101, &qword_100606A10);
    sub_100054BBC(v102, v212, &qword_1006069F8);
    swift_storeEnumTagMultiPayload();
    sub_100044200(&qword_100606A50, &qword_1006069F8);
    _ConditionalContent<>.init(storage:)();
    uint64_t v119 = (uint64_t)v225;
    sub_100054B1C(v102, &qword_1006069F8);
    sub_1003A5F7C((uint64_t)&v237);
    sub_100054B1C(v100, &qword_100606A10);
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  NSString v225 = (void *)v259;
  LODWORD(v221) = BYTE8(v259);
  uint64_t v220 = v260;
  LODWORD(v219) = BYTE8(v260);
  uint64_t v211 = *((void *)&v261 + 1);
  uint64_t v212 = v261;
  uint64_t v175 = static VerticalAlignment.center.getter();
  uint64_t v176 = (uint64_t)v215;
  *uint64_t v215 = v175;
  *(void *)(v176 + 8) = 0;
  *(unsigned char *)(v176 + 16) = 0;
  uint64_t v177 = sub_100054B78(&qword_100606A58);
  sub_1003A4A04(v119, v176 + *(int *)(v177 + 44));
  if (qword_1005F5B68 != -1) {
    swift_once();
  }
  uint64_t v178 = qword_100606848;
  if (qword_1005F5B70 != -1) {
    swift_once();
  }
  uint64_t v179 = qword_100606850;
  uint64_t v180 = v217;
  sub_100054BBC(v176, v217, &qword_1006069E0);
  Swift::String v181 = (uint64_t *)(v180 + *(int *)(v214 + 36));
  *Swift::String v181 = v178;
  v181[1] = v179;
  sub_100054B1C(v176, &qword_1006069E0);
  uint64_t v182 = v216;
  sub_100053820(v180, v216, &qword_1006069E8);
  uint64_t v183 = v222;
  uint64_t v184 = v223;
  sub_100054BBC(v222, v223, &qword_100606A30);
  uint64_t v185 = v224;
  uint64_t v186 = v213;
  sub_100054BBC(v224, v213, &qword_100606A18);
  sub_100054BBC(v182, v180, &qword_1006069E8);
  uint64_t v187 = v218;
  sub_100054BBC(v184, v218, &qword_100606A30);
  uint64_t v188 = (int *)sub_100054B78(&qword_100606A60);
  uint64_t v189 = v187 + v188[12];
  *(void *)uint64_t v189 = 0;
  *(unsigned char *)(v189 + 8) = 1;
  *(void *)(v189 + 16) = v208;
  *(unsigned char *)(v189 + 24) = v207;
  *(void *)(v189 + 32) = v206;
  *(unsigned char *)(v189 + 40) = v205;
  uint64_t v190 = v203;
  *(void *)(v189 + 48) = v204;
  *(void *)(v189 + 56) = v190;
  sub_100054BBC(v186, v187 + v188[16], &qword_100606A18);
  uint64_t v191 = v187 + v188[20];
  *(void *)uint64_t v191 = 0;
  *(unsigned char *)(v191 + 8) = 1;
  *(void *)(v191 + 16) = v225;
  *(unsigned char *)(v191 + 24) = (_BYTE)v221;
  *(void *)(v191 + 32) = v220;
  *(unsigned char *)(v191 + 40) = v219;
  uint64_t v192 = v211;
  *(void *)(v191 + 48) = v212;
  *(void *)(v191 + 56) = v192;
  sub_100054BBC(v180, v187 + v188[24], &qword_1006069E8);
  sub_100054B1C(v182, &qword_1006069E8);
  sub_100054B1C(v185, &qword_100606A18);
  sub_100054B1C(v183, &qword_100606A30);
  sub_100054B1C(v180, &qword_1006069E8);
  sub_100054B1C(v186, &qword_100606A18);
  return sub_100054B1C(v184, &qword_100606A30);
}

uint64_t sub_1003A3E28@<X0>(void *a1@<X8>)
{
  Path.init(_:)();
  sub_100054B78(&qword_100606A70);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10046D030;
  *(void *)(v1 + 32) = static Color.black.getter();
  *(void *)(v1 + 40) = static Color.clear.getter();
  *(void *)&__src[0] = v1;
  specialized Array._endMutation()();
  static UnitPoint.leading.getter();
  static UnitPoint.trailing.getter();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  static Alignment.bottomLeading.getter();
  _FrameLayout.init(width:height:alignment:)();
  if (qword_1005F5B48 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100606828;
  if (qword_1005F5B58 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100606838;
  Path.init(_:)();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10046D030;
  *(void *)(v4 + 32) = static Color.black.getter();
  *(void *)(v4 + 40) = static Color.clear.getter();
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.top.getter();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  static Alignment.bottomLeading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v5 = qword_100606828;
  *(_DWORD *)unint64_t v59 = *(_DWORD *)v36;
  *(_DWORD *)&v59[3] = *(_DWORD *)&v36[3];
  int v64 = v34;
  __int16 v65 = v35;
  *(_DWORD *)uint64_t v68 = *(_DWORD *)v33;
  *(_DWORD *)uint64_t v71 = *(_DWORD *)v37;
  *(_DWORD *)&v68[3] = *(_DWORD *)&v33[3];
  *(_DWORD *)&v71[3] = *(_DWORD *)&v37[3];
  DWORD1(v39) = *(_DWORD *)&v32[3];
  *(_DWORD *)((char *)&v39 + 1) = *(_DWORD *)v32;
  DWORD1(v48) = *(_DWORD *)&v36[3];
  *(_DWORD *)((char *)&v48 + 1) = *(_DWORD *)v36;
  WORD3(v51) = v35;
  uint64_t v46 = v3;
  v47[1] = v21;
  LOBYTE(v48) = v22;
  *((void *)&v48 + 1) = v23;
  long long v49 = v24;
  long long v50 = v25;
  LOWORD(v51) = 256;
  *(_DWORD *)((char *)&v51 + 2) = v34;
  *((void *)&v51 + 1) = v26;
  LOBYTE(v52) = v27;
  DWORD1(v52) = *(_DWORD *)&v33[3];
  *(_DWORD *)((char *)&v52 + 1) = *(_DWORD *)v33;
  *((void *)&v52 + 1) = v28;
  LOBYTE(v53) = v29;
  DWORD1(v53) = *(_DWORD *)&v37[3];
  *(_DWORD *)((char *)&v53 + 1) = *(_DWORD *)v37;
  *((void *)&v53 + 1) = v30;
  *(void *)&long long v54 = v31;
  *((void *)&v54 + 1) = v3;
  uint64_t v55 = qword_100606828;
  *(_OWORD *)((char *)&__src[16] + 8) = v53;
  *(_OWORD *)((char *)&__src[17] + 8) = v54;
  *(void *)&__src[9] = v3;
  *((void *)&__src[18] + 1) = qword_100606828;
  v47[0] = v20;
  *(_OWORD *)((char *)&__src[15] + 8) = v52;
  *(_OWORD *)((char *)&__src[11] + 8) = v48;
  *(_OWORD *)((char *)&__src[12] + 8) = v24;
  *(_OWORD *)((char *)&__src[13] + 8) = v25;
  *(_OWORD *)((char *)&__src[14] + 8) = v51;
  *(_OWORD *)((char *)&__src[9] + 8) = v20;
  *(_OWORD *)((char *)&__src[10] + 8) = v21;
  *((void *)&v45 + 1) = v2;
  v38[0] = v8;
  v38[1] = v9;
  LOBYTE(v39) = v10;
  *((void *)&v39 + 1) = v11;
  long long v40 = v12;
  long long v41 = v13;
  LOWORD(v42) = 256;
  *((void *)&v42 + 1) = v14;
  LOBYTE(v43) = v15;
  *((void *)&v43 + 1) = v16;
  LOBYTE(v44) = v17;
  *((void *)&v44 + 1) = v18;
  *(void *)&long long v45 = v19;
  __src[0] = v8;
  __src[1] = v9;
  __src[4] = v13;
  __src[5] = v42;
  __src[2] = v39;
  __src[3] = v12;
  __src[7] = v44;
  __src[8] = v45;
  __src[6] = v43;
  memcpy(a1, __src, 0x130uLL);
  v57[0] = v20;
  v57[1] = v21;
  char v58 = v22;
  uint64_t v60 = v23;
  long long v61 = v24;
  long long v62 = v25;
  __int16 v63 = 256;
  uint64_t v66 = v26;
  char v67 = v27;
  uint64_t v69 = v28;
  char v70 = v29;
  uint64_t v72 = v30;
  uint64_t v73 = v31;
  uint64_t v74 = v3;
  uint64_t v75 = v5;
  sub_1003A60DC((uint64_t)v38);
  sub_1003A60DC((uint64_t)v47);
  sub_1003A6138((uint64_t)v57);
  v76[0] = v8;
  v76[1] = v9;
  char v77 = v10;
  *(_DWORD *)uint64_t v78 = *(_DWORD *)v32;
  *(_DWORD *)&v78[3] = *(_DWORD *)&v32[3];
  uint64_t v79 = v11;
  long long v80 = v12;
  long long v81 = v13;
  __int16 v82 = 256;
  uint64_t v83 = v14;
  char v84 = v15;
  uint64_t v85 = v16;
  char v86 = v17;
  uint64_t v87 = v18;
  uint64_t v88 = v19;
  uint64_t v89 = v2;
  uint64_t v90 = v3;
  return sub_1003A6138((uint64_t)v76);
}

void sub_1003A4488()
{
  Path.move(to:)((CGPoint)0);
  if (qword_1005F5B50 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_100606830;
  double v1 = *(double *)&qword_100606830;
  if (qword_1005F5B60 != -1)
  {
    swift_once();
    double v1 = *(double *)&qword_100606830;
  }
  uint64_t v2 = qword_100606840;
  *(double *)&unint64_t v3 = v0 - *(double *)&qword_100606840;
  *(double *)&unint64_t v4 = v1 - *(double *)&qword_100606840;
  Path.addLine(to:)((CGPoint)__PAIR128__(v1 - *(double *)&qword_100606840, v3));
  Path.addLine(to:)((CGPoint)__PAIR128__(v1 + -3.5, v4));
  Path.addLine(to:)((CGPoint)__PAIR128__(v2, 0));
}

void sub_1003A4568()
{
  Path.move(to:)((CGPoint)0);
  if (qword_1005F5B60 != -1) {
    swift_once();
  }
  Path.addLine(to:)((CGPoint)(unint64_t)qword_100606840);
  if (qword_1005F5B50 != -1) {
    swift_once();
  }
  *(double *)&unint64_t v0 = *(double *)&qword_100606830 - *(double *)&qword_100606840;
  Path.addLine(to:)((CGPoint)__PAIR128__(*(double *)&qword_100606830 - *(double *)&qword_100606840, qword_100606830));
  Path.addLine(to:)((CGPoint)__PAIR128__(v0, v0));
}

__n128 sub_1003A4630@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = sub_100054B78(&qword_100606A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  long long v25 = (_OWORD *)(a9 + *(int *)(sub_100054B78(&qword_100606A10) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *long long v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_1003A481C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v37 = *v13;
  long long v38 = v24;
  sub_1003A6020((uint64_t)&v37, (uint64_t)v40);
  long long v26 = v13[1];
  long long v35 = v13[2];
  long long v25 = v35;
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v39 = *((void *)&v38 + 1);
  char v36 = *((unsigned char *)v13 + 48);
  *(unsigned char *)(a9 + 48) = v36;
  *(_OWORD *)(a9 + 72) = v29;
  *(_OWORD *)(a9 + 88) = v30;
  sub_1003A607C((uint64_t)v40);
  sub_1001DCF64((uint64_t)&v39);
  return sub_1003A60B0((uint64_t)&v35);
}

uint64_t sub_1003A4A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  __chkstk_darwin();
  long long v54 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100054B78(&qword_100606A20);
  __chkstk_darwin();
  uint64_t v52 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  uint64_t v7 = (double *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Image.ResizingMode();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_100606A28);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v53 = (uint64_t)&v46 - v15;
  uint64_t v50 = type metadata accessor for SocialStoryPostView();
  uint64_t v16 = *(int *)(v50 + 24);
  uint64_t v57 = a1;
  id v17 = *(id *)(a1 + v16);
  Image.init(uiImage:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v8);
  uint64_t v18 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_1005F5B78 != -1) {
    swift_once();
  }
  double v19 = *(double *)&qword_100606858;
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v20 = v59;
  char v21 = v60;
  uint64_t v22 = v61;
  char v23 = v62;
  uint64_t v48 = v63;
  uint64_t v47 = v64;
  double v24 = v19 * 0.1578;
  long long v25 = (char *)v7 + *(int *)(v49 + 20);
  uint64_t v26 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v27 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  double *v7 = v24;
  v7[1] = v24;
  uint64_t v28 = v52;
  sub_1003A5D8C((uint64_t)v7, v52, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v28 + *(int *)(v51 + 36)) = 256;
  sub_100054BBC(v28, (uint64_t)&v14[*(int *)(v12 + 36)], &qword_100606A20);
  *(void *)uint64_t v14 = v18;
  *((void *)v14 + 1) = v20;
  v14[16] = v21;
  *((void *)v14 + 3) = v22;
  v14[32] = v23;
  uint64_t v29 = v47;
  *((void *)v14 + 5) = v48;
  *((void *)v14 + 6) = v29;
  swift_retain();
  sub_100054B1C(v28, &qword_100606A20);
  sub_1003A5DF4((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  uint64_t v30 = v53;
  sub_100053820((uint64_t)v14, v53, &qword_100606A28);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v52 = v65;
  char v31 = v66;
  uint64_t v51 = v67;
  LODWORD(v49) = v68;
  uint64_t v48 = v69;
  uint64_t v47 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v57 + *(int *)(v50 + 20), v56);
  uint64_t v32 = Text.init(_:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_100054BBC(v30, (uint64_t)v14, &qword_100606A28);
  uint64_t v40 = v58;
  sub_100054BBC((uint64_t)v14, v58, &qword_100606A28);
  uint64_t v41 = sub_100054B78(&qword_100606A68);
  uint64_t v42 = v40 + *(int *)(v41 + 48);
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  *(void *)(v42 + 16) = v52;
  *(unsigned char *)(v42 + 24) = v31;
  *(void *)(v42 + 32) = v51;
  *(unsigned char *)(v42 + 40) = v49;
  uint64_t v43 = v47;
  *(void *)(v42 + 48) = v48;
  *(void *)(v42 + 56) = v43;
  uint64_t v44 = v40 + *(int *)(v41 + 64);
  *(void *)uint64_t v44 = v32;
  *(void *)(v44 + 8) = v34;
  *(unsigned char *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v36;
  *(void *)(v44 + 32) = KeyPath;
  *(void *)(v44 + 40) = 0;
  sub_1001ACAB4(v32, v34, v38);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100054B1C(v30, &qword_100606A28);
  sub_1001ACBD0(v32, v34, v38);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100054B1C((uint64_t)v14, &qword_100606A28);
}

double sub_1003A5048@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_100606A70);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10046D030;
  *(void *)(v6 + 32) = static Color.purple.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  *(void *)(v6 + 40) = Color.init(_:red:green:blue:opacity:)();
  uint64_t v20 = v6;
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v7 = v16;
  long long v15 = v17;
  uint64_t v8 = v18;
  uint64_t v9 = v19;
  swift_bridgeObjectRelease();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v10 = v20;
  char v11 = v21;
  uint64_t v12 = v22;
  char v13 = v23;
  *(void *)a1 = v7;
  *(_OWORD *)(a1 + 8) = v15;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(_WORD *)(a1 + 40) = 256;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v13;
  double result = *(double *)&v24;
  *(_OWORD *)(a1 + 80) = v24;
  return result;
}

uint64_t sub_1003A5238@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003A5264()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1003A5290(void *a1)
{
  uint64_t v2 = type metadata accessor for SocialStoryPostView();
  __chkstk_darwin();
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v16 - v5;
  *(uint64_t *)((char *)&v16 - v5) = (uint64_t)a1;
  id v7 = a1;
  sub_1003A1DB4();
  uint64_t v8 = *(int *)(v2 + 24);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [self imageNamed:v9];

  if (!v10) {
    id v10 = [objc_allocWithZone((Class)UIImage) init];
  }
  *(void *)&v6[v8] = v10;
  uint64_t v11 = *(int *)(v2 + 28);
  id v12 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v12 setDateStyle:3];
  [v12 setTimeStyle:0];
  *(void *)&v6[v11] = v12;
  sub_1003A5D8C((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SocialStoryPostView);
  sub_100054B78(&qword_1006068F0);
  swift_allocObject();
  ImageRenderer.init(content:)();
  id v13 = [self mainScreen];
  [v13 scale];

  ImageRenderer.scale.setter();
  uint64_t v14 = ImageRenderer.uiImage.getter();
  swift_release();
  sub_1003A5DF4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SocialStoryPostView);
  return v14;
}

uint64_t type metadata accessor for SocialStoryPostView()
{
  uint64_t result = qword_100606980;
  if (!qword_100606980) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003A5504()
{
}

unint64_t sub_1003A5524()
{
  unint64_t result = qword_100606908;
  if (!qword_100606908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100606908);
  }
  return result;
}

void sub_1003A5578()
{
}

uint64_t sub_1003A55A0()
{
  return 8;
}

uint64_t sub_1003A55AC()
{
  return swift_release();
}

uint64_t sub_1003A55B4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1003A55C4()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void *sub_1003A560C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1003A5618()
{
  unint64_t result = qword_100606910;
  if (!qword_100606910)
  {
    type metadata accessor for AttributedString();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100606910);
  }
  return result;
}

void **sub_1003A5670(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a3[5];
    NSString v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for AttributedString();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    id v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = *(void **)((char *)a2 + v14);
    *(void **)((char *)v7 + v14) = v16;
    long long v17 = *(void **)((char *)a2 + v15);
    *(void **)((char *)v7 + v15) = v17;
    id v18 = v16;
    id v19 = v17;
  }
  return v7;
}

void sub_1003A577C(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = *(id *)((char *)a1 + a2[7]);
}

void **sub_1003A5814(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  NSString v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = *(void **)((char *)a2 + v13);
  *(void **)((char *)a1 + v13) = v15;
  uint64_t v16 = *(void **)((char *)a2 + v14);
  *(void **)((char *)a1 + v14) = v16;
  id v17 = v15;
  id v18 = v16;
  return a1;
}

void **sub_1003A58D4(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = *(void **)((char *)a2 + v13);
  uint64_t v15 = *(void **)((char *)a1 + v13);
  *(void **)((char *)a1 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = a3[7];
  id v18 = *(void **)((char *)a2 + v17);
  id v19 = *(void **)((char *)a1 + v17);
  *(void **)((char *)a1 + v17) = v18;
  id v20 = v18;

  return a1;
}

void *sub_1003A599C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void **sub_1003A5A3C(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)((char *)a1 + v11);
  *(void **)((char *)a1 + v11) = *(void **)((char *)a2 + v11);

  uint64_t v13 = a3[7];
  uint64_t v14 = *(void **)((char *)a1 + v13);
  *(void **)((char *)a1 + v13) = *(void **)((char *)a2 + v13);

  return a1;
}

uint64_t sub_1003A5AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A5B0C);
}

uint64_t sub_1003A5B0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AttributedString();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1003A5BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A5BD0);
}

void *sub_1003A5BD0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributedString();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1003A5C78()
{
  uint64_t result = type metadata accessor for AttributedString();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003A5D18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003A5D34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003A5D60()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1003A5D8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003A5DF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1003A5E54()
{
  unint64_t result = qword_100606A40;
  if (!qword_100606A40)
  {
    sub_100044244(&qword_100606A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100606A40);
  }
  return result;
}

uint64_t sub_1003A5EC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1003A5EFC()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1003A5F2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003A5F7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003A5FCC@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineSpacing.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1003A5FF8()
{
  return EnvironmentValues.lineSpacing.setter();
}

uint64_t sub_1003A6020(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1003A607C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003A60B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003A60DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003A6120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1003A6138(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003A617C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

ValueMetadata *type metadata accessor for StoryBackgroundView()
{
  return &type metadata for StoryBackgroundView;
}

unint64_t sub_1003A61A8()
{
  unint64_t result = qword_100606A78;
  if (!qword_100606A78)
  {
    sub_100044244(&qword_100606A80);
    sub_1003A6248();
    sub_100044200(&qword_100606A90, &qword_1006069D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100606A78);
  }
  return result;
}

unint64_t sub_1003A6248()
{
  unint64_t result = qword_100606A88;
  if (!qword_100606A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100606A88);
  }
  return result;
}

uint64_t sub_1003A629C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1003A62BC()
{
  unint64_t result = qword_100606A98;
  if (!qword_100606A98)
  {
    sub_100044244(&qword_100606AA0);
    sub_100044200(&qword_100606AA8, &qword_100606AB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100606A98);
  }
  return result;
}

unint64_t sub_1003A635C()
{
  sub_100054B78(&qword_100606AB8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10046D010;
  uint64_t v1 = type metadata accessor for PodcastsUIAppIntentsPackage();
  unint64_t result = sub_1003A6598();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = result;
  static PodcastsAppIntentPackage.includedPackages = v0;
  return result;
}

uint64_t *PodcastsAppIntentPackage.includedPackages.unsafeMutableAddressor()
{
  if (qword_1005F5B98 != -1) {
    swift_once();
  }
  return &static PodcastsAppIntentPackage.includedPackages;
}

uint64_t static PodcastsAppIntentPackage.includedPackages.getter()
{
  if (qword_1005F5B98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PodcastsAppIntentPackage.includedPackages.setter(uint64_t a1)
{
  if (qword_1005F5B98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static PodcastsAppIntentPackage.includedPackages = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PodcastsAppIntentPackage.includedPackages.modify())()
{
  if (qword_1005F5B98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for PodcastsAppIntentPackage()
{
  return &type metadata for PodcastsAppIntentPackage;
}

unint64_t sub_1003A6598()
{
  unint64_t result = qword_100606AC0;
  if (!qword_100606AC0)
  {
    type metadata accessor for PodcastsUIAppIntentsPackage();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100606AC0);
  }
  return result;
}

CSSearchableItem __swiftcall AppCoreSpotlightEntityAnnotator.annotate(item:with:)(CSSearchableItem item, NSManagedObject with)
{
  uint64_t v2 = (void *)sub_1003A69DC((uint64_t)item.super.isa, with.super.isa);

  return (CSSearchableItem)v2;
}

CSSearchableItem __swiftcall AppCoreSpotlightEntityAnnotator.annotate(item:with:)(CSSearchableItem item, MTPlayerItem *with)
{
  Class isa = item.super.isa;
  uint64_t v3 = type metadata accessor for EpisodeEntity();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [(MTPlayerItem *)with episode];
  if (v7)
  {
    id v8 = v7;
    EpisodeEntity.init(model:)();
    sub_1003A6CCC(&qword_100606AC8, (void (*)(uint64_t))&type metadata accessor for EpisodeEntity);
    CSSearchableItem.associateAppEntity<A>(_:priority:)();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  Class v9 = isa;

  return (CSSearchableItem)v9;
}

id AppCoreSpotlightEntityAnnotator.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppCoreSpotlightEntityAnnotator();
  return [super init];
}

id AppCoreSpotlightEntityAnnotator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppCoreSpotlightEntityAnnotator();
  return [super dealloc];
}

uint64_t sub_1003A69DC(uint64_t a1, void *a2)
{
  self;
  if (swift_dynamicCastObjCClass())
  {
    *((void *)&v10 + 1) = type metadata accessor for EpisodeEntity();
    uint64_t v11 = sub_1003A6CCC(&qword_100606AC8, (void (*)(uint64_t))&type metadata accessor for EpisodeEntity);
    sub_10004A244((uint64_t *)&v9);
    id v4 = a2;
    EpisodeEntity.init(model:)();
  }
  else
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      *((void *)&v10 + 1) = type metadata accessor for ShowEntity();
      uint64_t v11 = sub_1003A6CCC(&qword_100606B10, (void (*)(uint64_t))&type metadata accessor for ShowEntity);
      sub_10004A244((uint64_t *)&v9);
      id v5 = a2;
      ShowEntity.init(model:)();
    }
    else
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        *((void *)&v10 + 1) = type metadata accessor for ChannelEntity();
        uint64_t v11 = sub_1003A6CCC(&qword_100606B08, (void (*)(uint64_t))&type metadata accessor for ChannelEntity);
        sub_10004A244((uint64_t *)&v9);
        id v6 = a2;
        ChannelEntity.init(model:)();
      }
      else
      {
        self;
        if (!swift_dynamicCastObjCClass())
        {
          uint64_t v11 = 0;
          long long v9 = 0u;
          long long v10 = 0u;
          sub_1003A6C6C((uint64_t)&v9);
          return a1;
        }
        *((void *)&v10 + 1) = type metadata accessor for StationEntity();
        uint64_t v11 = sub_1003A6CCC(&qword_100606B00, (void (*)(uint64_t))&type metadata accessor for StationEntity);
        sub_10004A244((uint64_t *)&v9);
        id v7 = a2;
        StationEntity.init(model:)();
      }
    }
  }
  sub_100042FC4(&v9, (uint64_t)v12);
  sub_100041A98(v12, v12[3]);
  CSSearchableItem.associateAppEntity<A>(_:priority:)();
  sub_10004D2D8((uint64_t)v12);
  return a1;
}

uint64_t sub_1003A6C6C(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100606AF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003A6CCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void MTEpisodeUnavailableUtil.showDialog(for:)(uint64_t a1)
{
  uint64_t v3 = sub_100054B78(&qword_100606B18);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PlaybackController.PlayerError();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  long long v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v21 - v11;
  v21[1] = a1;
  swift_errorRetain();
  sub_100054B78(&qword_100603F70);
  char v13 = swift_dynamicCast();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if ((v13 & 1) == 0)
  {
    v14(v5, 1, 1, v6);
    sub_1003A701C((uint64_t)v5);
LABEL_5:
    uint64_t v17 = 0;
LABEL_6:
    uint64_t v18 = static EpisodeUnavailableReason.Translator.episodeUnavailableReason(for:)();
    uint64_t v19 = EpisodeUnavailableReason.rawValue.getter();
    if (v19 == EpisodeUnavailableReason.rawValue.getter())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v17)
      {
        NSString v20 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v20 = 0;
      }
      [v1 showDialogForReason:v18 podcastTitle:v20 completion:0];
    }
    return;
  }
  v14(v5, 0, 1, v6);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v15(v12, v5, v6);
  v15(v10, v12, v6);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v16 == enum case for PlaybackController.PlayerError.providerUnavailable(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    uint64_t v17 = *((void *)v10 + 1);
    goto LABEL_6;
  }
  if (v16 == enum case for PlaybackController.PlayerError.requestError(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return;
  }
  if (v16 != enum case for PlaybackController.PlayerError.noContentToPlay(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_5;
  }
}

uint64_t sub_1003A701C(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100606B18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1003A707C()
{
  uint64_t v1 = OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter____lazy_storage___playerPathCoordinator;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter____lazy_storage___playerPathCoordinator);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter____lazy_storage___playerPathCoordinator);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for PlayerPathCoordinator());
    uint64_t v6 = (void *)PlayerPathCoordinator.init(playerID:bundleID:)();
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1003A711C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlueMoonStubPlayerAdapter();
  return [super dealloc];
}

uint64_t sub_1003A723C()
{
  return type metadata accessor for BlueMoonStubPlayerAdapter();
}

uint64_t sub_1003A7244()
{
  uint64_t result = type metadata accessor for PlayerAutoStopMode();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_1003A7340()
{
}

void *sub_1003A739C()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_route);
  swift_beginAccess();
  objc_super v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1003A73EC(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_route);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1003A7440())()
{
  return j_j__swift_endAccess;
}

void sub_1003A749C()
{
}

uint64_t sub_1003A74FC()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_isHandoffEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1003A7544(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_isHandoffEnabled);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_1003A7590())()
{
  return j_j__swift_endAccess;
}

double sub_1003A75EC()
{
  return 0.0;
}

uint64_t sub_1003A75F4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_currentItemPlainEpisodeNotes);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1003A7630()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_currentItemEpisodeNotes);
  id v2 = v1;
  return v1;
}

float sub_1003A7660()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_volume;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_1003A76A8(float a1)
{
  id v3 = (float *)(v1 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_volume);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_1003A76FC())()
{
  return j_j__swift_endAccess;
}

void *sub_1003A7758()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_currentItem);
  id v2 = v1;
  return v1;
}

uint64_t sub_1003A7788()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_1003A77C4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_explicitCharacter);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1003A7800()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_isLocalVideo);
}

uint64_t sub_1003A7810()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_presentationSize);
}

void sub_1003A7828()
{
}

void sub_1003A7884()
{
}

void *sub_1003A78E0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_playbackSpeedMenu);
  id v2 = v1;
  return v1;
}

void sub_1003A7910()
{
}

double sub_1003A796C()
{
  return *(double *)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_autoStopTimeRemaining);
}

uint64_t sub_1003A797C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_autoStopMode;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for PlayerAutoStopMode();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1003A7A00(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_autoStopMode;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for PlayerAutoStopMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1003A7A8C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1003A7AE8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts25BlueMoonStubPlayerAdapter_isPlayingVideoFullScreen);
}

id sub_1003A7AF8()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.modernPlayback.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Accessing AVPlayer with BlueMoon does not work.", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return [objc_allocWithZone((Class)AVPlayer) init];
}

uint64_t type metadata accessor for SimplifiedPodcastsStateTransitionsFinder()
{
  return self;
}

char *sub_1003A7C68(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  return sub_1003A878C(a1, a2, a3, a4, a5);
}

uint64_t sub_1003A7C8C(uint64_t a1, char a2, __int16 a3)
{
  switch(a2)
  {
    case 0:
      sub_100054B78(&qword_1005FB138);
      uint64_t v5 = swift_allocObject();
      uint64_t result = 0;
      if ((a3 & 0x100) != 0)
      {
        *(_OWORD *)(v5 + 16) = xmmword_10046D010;
        *(void *)(v5 + 32) = a1;
        *(unsigned char *)(v5 + 40) = 0;
      }
      else
      {
        *(_OWORD *)(v5 + 16) = xmmword_10046D030;
        *(void *)(v5 + 32) = a1;
        *(unsigned char *)(v5 + 40) = 0;
        *(void *)(v5 + 48) = 0;
        *(unsigned char *)(v5 + 56) = 2;
      }
      return result;
    case 2:
      sub_100054B78(&qword_1005FB138);
      goto LABEL_6;
    case 3:
      sub_100054B78(&qword_1005FB138);
      if (a3)
      {
        if ((a3 & 0x100) != 0)
        {
          uint64_t v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_10046D010;
          *(void *)(v9 + 32) = a1;
          *(unsigned char *)(v9 + 40) = 1;
LABEL_16:
          uint64_t result = 3;
        }
        else
        {
          uint64_t v8 = swift_allocObject();
          *(_OWORD *)(v8 + 16) = xmmword_10046D030;
          *(void *)(v8 + 32) = 1;
          uint64_t result = 2;
          *(unsigned char *)(v8 + 40) = 2;
          *(void *)(v8 + 48) = a1;
          *(unsigned char *)(v8 + 56) = 1;
        }
      }
      else
      {
LABEL_6:
        uint64_t v7 = swift_allocObject();
        *(_OWORD *)(v7 + 16) = xmmword_10046D010;
        *(void *)(v7 + 32) = a1;
        uint64_t result = 1;
        *(unsigned char *)(v7 + 40) = 1;
      }
      break;
    case 4:
      uint64_t result = 2;
      switch(a1)
      {
        case 1:
          if ((a3 & 1) == 0) {
            goto LABEL_18;
          }
          if ((a3 & 0x100) == 0) {
            return result;
          }
          goto LABEL_16;
        case 2:
          if ((a3 & 1) == 0) {
            goto LABEL_18;
          }
          if ((a3 & 0x100) != 0) {
            goto LABEL_16;
          }
          return result;
        case 5:
        case 6:
          if ((a3 & 0x100) == 0) {
            goto LABEL_18;
          }
          return 1;
        case 9:
          return result;
        default:
          goto LABEL_18;
      }
    default:
LABEL_18:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_1003A7EDC(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v21 - v10;
  if (!a2)
  {
    sub_100054B78(&qword_1005FB138);
    uint64_t v13 = swift_allocObject();
    uint64_t result = 0;
    *(_OWORD *)(v13 + 16) = xmmword_10046D050;
    *(void *)(v13 + 32) = 0;
    *(unsigned char *)(v13 + 40) = 2;
    *(void *)(v13 + 48) = a1;
    *(unsigned char *)(v13 + 56) = 0;
LABEL_13:
    *(void *)(v13 + 64) = 4;
    *(unsigned char *)(v13 + 72) = 2;
    return result;
  }
  if (a2 == 2)
  {
    if ((a3 & 1) == 0)
    {
      sub_100054B78(&qword_1005FB138);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_10046D030;
      *(void *)(v14 + 32) = a1;
      uint64_t result = 1;
      *(unsigned char *)(v14 + 40) = 1;
      *(void *)(v14 + 48) = 4;
      *(unsigned char *)(v14 + 56) = 2;
      return result;
    }
    static Logger.podcastsStatesCoordination.getter();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Somehow we end up with an Implicit Follow that does NOT have any play state, that doesn't make sense.", v17, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    sub_100054B78(&qword_1005FB138);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10046D050;
    *(void *)(v13 + 32) = 0;
    *(unsigned char *)(v13 + 40) = 2;
    *(void *)(v13 + 48) = a1;
    uint64_t result = 1;
    *(unsigned char *)(v13 + 56) = 1;
    goto LABEL_13;
  }
  if (a2 != 4) {
    return 2;
  }
  uint64_t result = 2;
  switch(a1)
  {
    case 0:
      if (a3)
      {
        static Logger.podcastsStatesCoordination.getter();
        uint64_t v18 = Logger.logObject.getter();
        os_log_type_t v19 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v18, v19))
        {
          NSString v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)NSString v20 = 0;
          _os_log_impl((void *)&_mh_execute_header, v18, v19, "Somehow we end up with an Implicit Follow that does NOT have any play state, that doesn't make sense.", v20, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = 1;
      }
      break;
    case 4:
      uint64_t result = 3;
      break;
    case 6:
    case 8:
    case 9:
      return result;
    case 7:
      if ((a3 & 1) == 0) {
        return 2;
      }
      uint64_t result = 3;
      break;
    default:
      return 2;
  }
  return result;
}

uint64_t sub_1003A82B8(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v21 - v10;
  if (a2)
  {
    if (a2 == 2)
    {
      sub_100054B78(&qword_1005FB138);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_10046D010;
      *(void *)(v14 + 32) = a1;
      uint64_t result = 1;
      *(unsigned char *)(v14 + 40) = 1;
    }
    else if (a2 == 4)
    {
      uint64_t result = 1;
      switch(a1)
      {
        case 0:
          return result;
        case 3:
          uint64_t result = 2;
          break;
        case 5:
          static Logger.podcastsStatesCoordination.getter();
          uint64_t v15 = Logger.logObject.getter();
          os_log_type_t v16 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v15, v16))
          {
            uint64_t v17 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v17 = 0;
            _os_log_impl((void *)&_mh_execute_header, v15, v16, "Somehow we end up with an Implicit Follow that does NOT have any play state, that doesn't make sense.", v17, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
          uint64_t result = 2;
          break;
        case 6:
          if (a3)
          {
            uint64_t result = 2;
          }
          else
          {
            static Logger.podcastsStatesCoordination.getter();
            uint64_t v18 = Logger.logObject.getter();
            os_log_type_t v19 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v18, v19))
            {
              NSString v20 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)NSString v20 = 0;
              _os_log_impl((void *)&_mh_execute_header, v18, v19, "The show has play state but for some reason it's in Store state. This doesn't make any sense, with playState a show should be at least Implicitly Followed. Figure out what's going on.", v20, 2u);
              swift_slowDealloc();
            }

            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
            uint64_t result = 2;
          }
          break;
        default:
          return 3;
      }
    }
    else
    {
      return 3;
    }
  }
  else
  {
    sub_100054B78(&qword_1005FB138);
    uint64_t v13 = swift_allocObject();
    uint64_t result = 0;
    *(_OWORD *)(v13 + 16) = xmmword_10046D010;
    *(void *)(v13 + 32) = a1;
    *(unsigned char *)(v13 + 40) = 0;
  }
  return result;
}

uint64_t sub_1003A8610(uint64_t a1, unsigned __int8 a2, __int16 a3)
{
  if (a2 - 2 >= 2)
  {
    if (a2 == 1)
    {
      sub_100054B78(&qword_1005FB138);
      if (a3)
      {
        if ((a3 & 0x100) != 0)
        {
          uint64_t v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_10046D010;
          *(void *)(v9 + 32) = a1;
          *(unsigned char *)(v9 + 40) = 0;
          return 3;
        }
        else
        {
          uint64_t v8 = swift_allocObject();
          *(_OWORD *)(v8 + 16) = xmmword_10046D050;
          *(void *)(v8 + 32) = a1;
          *(unsigned char *)(v8 + 40) = 0;
          *(void *)(v8 + 48) = 1;
          uint64_t result = 2;
          *(unsigned char *)(v8 + 56) = 2;
          *(void *)(v8 + 64) = 0;
          *(unsigned char *)(v8 + 72) = 2;
        }
      }
      else
      {
        uint64_t v7 = swift_allocObject();
        if ((a3 & 0x100) != 0)
        {
          *(_OWORD *)(v7 + 16) = xmmword_10046D010;
          *(void *)(v7 + 32) = a1;
          *(unsigned char *)(v7 + 40) = 0;
        }
        else
        {
          *(_OWORD *)(v7 + 16) = xmmword_10046D030;
          *(void *)(v7 + 32) = a1;
          *(unsigned char *)(v7 + 40) = 0;
          *(void *)(v7 + 48) = 0;
          *(unsigned char *)(v7 + 56) = 2;
        }
        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    sub_100054B78(&qword_1005FB138);
    uint64_t v4 = swift_allocObject();
    uint64_t result = 0;
    *(_OWORD *)(v4 + 16) = xmmword_10046D010;
    *(void *)(v4 + 32) = a1;
    *(unsigned char *)(v4 + 40) = 1;
  }
  return result;
}

char *sub_1003A878C(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  id v85 = a2;
  uint64_t v82 = a5;
  uint64_t v83 = a3;
  int v84 = a4;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v79 = *(void *)(v7 - 8);
  uint64_t v80 = v7;
  __chkstk_darwin();
  long long v81 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PodcastStateModel();
  uint64_t v87 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v78 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v69 - v11;
  PodcastStateModel.uuid.getter();
  uint64_t v13 = self;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 predicateForLibraryEpisodesOnPodcastUuid:v14];

  uint64_t v16 = kMTEpisodeEntityName;
  unsigned int v77 = [a2 hasAnyObjectsInEntity:kMTEpisodeEntityName satisfyingPredicate:v15];
  swift_bridgeObjectRelease();

  PodcastStateModel.uuid.getter();
  id v17 = [v13 predicateForHasAnyVisualPlayState];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v13 predicateForAllEpisodesOnPodcastUuid:v18];

  id v20 = [v17 AND:v19];
  uint64_t v21 = v87;
  unsigned int v22 = [v85 hasAnyObjectsInEntity:v16 satisfyingPredicate:v20];
  swift_bridgeObjectRelease();

  char v23 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v23(v12, a1, v9);
  uint64_t v24 = v86;
  long long v25 = (void *)PodcastStateModel.sanitizedState()();
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v9);
  }
  else
  {
    uint64_t v76 = a1;
    uint64_t v26 = v78;
    id v85 = v25;
    int v74 = v77 ^ 1;
    uint64_t v27 = *(void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v87 = v21 + 8;
    uint64_t v75 = v27;
    v27(v12, v9);
    int v73 = v22 ^ 1;
    switch((char)v85)
    {
      case 1:
        if (v22) {
          __int16 v32 = 0;
        }
        else {
          __int16 v32 = 256;
        }
        uint64_t v29 = sub_1003A7C8C(v83, v84, v32 | (unsigned __int16)v74);
        break;
      case 2:
        uint64_t v29 = sub_1003A7EDC(v83, v84, v22 ^ 1);
        break;
      case 3:
        uint64_t v29 = sub_1003A82B8(v83, v84, v22 ^ 1);
        break;
      default:
        if (v22) {
          __int16 v28 = 0;
        }
        else {
          __int16 v28 = 256;
        }
        uint64_t v29 = sub_1003A8610(v83, v84, v28 | (unsigned __int16)v74);
        break;
    }
    uint64_t v12 = (char *)v29;
    uint64_t v86 = v30;
    unsigned int v77 = v31;
    uint64_t v33 = v81;
    static Logger.podcastsStatesCoordination.getter();
    int v34 = static os_log_type_t.default.getter();
    v23(v26, v76, v9);
    swift_bridgeObjectRetain_n();
    uint64_t v35 = Logger.logObject.getter();
    if (os_log_type_enabled(v35, (os_log_type_t)v34))
    {
      int v71 = v34;
      os_log_t v72 = v35;
      uint64_t v76 = 0;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      uint64_t v92 = v70;
      *(_DWORD *)uint64_t v36 = 136382211;
      uint64_t v69 = v36 + 4;
      uint64_t v37 = PodcastStateModel.id.getter();
      uint64_t v39 = v38;
      unsigned __int8 v41 = v40;
      uint64_t v42 = PodcastIdentifier.description.getter();
      uint64_t v43 = v12;
      unint64_t v45 = v44;
      sub_10021C03C(v37, v39, v41);
      uint64_t v90 = sub_10004B974(v42, v45, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v12 = v43;
      swift_bridgeObjectRelease();
      v75(v26, v9);
      *(_WORD *)(v36 + 12) = 2080;
      LOBYTE(v90) = (_BYTE)v85;
      sub_10021C058();
      uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v90 = sub_10004B974(v46, v47, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 2080;
      unint64_t v48 = sub_1003017F0(v83, v84);
      uint64_t v90 = sub_10004B974(v48, v49, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 32) = 2080;
      LOBYTE(v90) = v74;
      sub_10021C0AC();
      uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v90 = sub_10004B974(v50, v51, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 42) = 2080;
      LOBYTE(v90) = v73;
      sub_10021C100();
      uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v90 = sub_10004B974(v52, v53, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 52) = 2080;
      uint64_t v54 = PodcastsStateChangeOrigin.description.getter();
      uint64_t v90 = sub_10004B974(v54, v55, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 62) = 2080;
      uint64_t v56 = 0x697469736E617254;
      if (v77) {
        uint64_t v56 = 0x3A6E6F28706F6F6CLL;
      }
      unint64_t v57 = 0xEF203A6F74286E6FLL;
      if (v77) {
        unint64_t v57 = 0xE900000000000020;
      }
      uint64_t v90 = v56;
      unint64_t v91 = v57;
      object = (void *)0xE100000000000000;
      v89._uint64_t countAndFlagsBits = 46;
      v89._object = (void *)0xE100000000000000;
      char v88 = (char)v43;
      uint64_t v59 = v86;
      swift_bridgeObjectRetain();
      v60._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v60);
      swift_bridgeObjectRelease();
      String.append(_:)(v89);
      swift_bridgeObjectRelease();
      if (v59)
      {
        v89._uint64_t countAndFlagsBits = 0x746365666665202CLL;
        v89._object = (void *)0xEB00000000203A73;
        swift_bridgeObjectRetain();
        v61._uint64_t countAndFlagsBits = Array.description.getter();
        String.append(_:)(v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v62._uint64_t countAndFlagsBits = 41;
        v62._object = (void *)0xE100000000000000;
        String.append(_:)(v62);
        uint64_t countAndFlagsBits = v89._countAndFlagsBits;
        object = v89._object;
      }
      else
      {
        uint64_t countAndFlagsBits = 41;
      }
      uint64_t v65 = v79;
      uint64_t v64 = v80;
      char v66 = object;
      String.append(_:)(*(Swift::String *)&countAndFlagsBits);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v90 = sub_10004B974(v90, v91, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v67 = v72;
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v71, "Show with %{private}s; State: .%s; Event: (.%s, .%s, .%s, from: .%s) ==> %s",
        (uint8_t *)v36,
        0x48u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v65 + 8))(v81, v64);
    }
    else
    {
      v75(v26, v9);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v33, v80);
    }
  }
  return v12;
}

uint64_t sub_1003A9088@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ArtworkCrop();
  __chkstk_darwin(v4 - 8);
  id v5 = [a1 uberBackgroundImageURL];
  if (v5)
  {
    uint64_t v6 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v7 = [a1 uberBackgroundJoeColor];
    if (v7)
    {
      uint64_t v8 = v7;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      Color.init(descriptor:)();
      swift_bridgeObjectRelease();
    }
    [a1 storeId];
    AdamID.init(rawValue:)();
    static ArtworkCrop.sr.getter();
    id v12 = [a1 name];
    if (v12)
    {
      uint64_t v13 = v12;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    static ArtworkFormat.preferredFormat.getter();
    ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)();
    uint64_t v14 = type metadata accessor for ArtworkModel();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ArtworkModel();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a2, 1, 1, v9);
  }
}

uint64_t sub_1003A935C@<X0>(void *a1@<X0>, SEL *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ArtworkCrop();
  __chkstk_darwin(v6 - 8);
  id v7 = [a1 *a2];
  if (v7)
  {
    uint64_t v8 = v7;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    [a1 storeId];
    AdamID.init(rawValue:)();
    static ArtworkCrop.boundingBox.getter();
    static ArtworkFormat.preferredFormat.getter();
    ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)();
    uint64_t v9 = type metadata accessor for ArtworkModel();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a3, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = type metadata accessor for ArtworkModel();
    id v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a3, 1, 1, v11);
  }
}

uint64_t sub_1003A955C(void *a1)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v21._object = (void *)0xE000000000000000;
  v4._uint64_t countAndFlagsBits = 0x5F4C454E4E414843;
  v4._object = (void *)0xED0000454C544954;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v21);

  id v7 = [v2 mainBundle];
  v22._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001004E1370;
  v8._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v22);

  sub_100054B78(&qword_1005F7720);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046D010;
  id v11 = [a1 resolvedShowCount];
  *(void *)(v10 + 56) = &type metadata for Int64;
  *(void *)(v10 + 64) = &protocol witness table for Int64;
  *(void *)(v10 + 32) = v11;
  uint64_t v12 = String.init(format:_:)();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  type metadata accessor for EyebrowBuilder();
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10046D030;
  *(Swift::String *)(v15 + 32) = v6;
  *(void *)(v15 + 48) = v12;
  *(void *)(v15 + 56) = v14;
  v20[3] = sub_100054B78((uint64_t *)&unk_100603260);
  v20[4] = sub_1003A9A98();
  v20[0] = v15;
  swift_bridgeObjectRetain();
  uint64_t v16 = static EyebrowBuilder.concatenate(captionElements:uppercased:)();
  uint64_t v18 = v17;
  sub_10004D2D8((uint64_t)v20);
  if (v18)
  {
    swift_bridgeObjectRelease();
    return v16;
  }
  return v12;
}

uint64_t sub_1003A977C(void *a1)
{
  if ([a1 subscriptionActive]) {
    return 3;
  }
  uint64_t result = (uint64_t)[a1 displayType];
  if (result)
  {
    id v3 = (void *)result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    NSString v4 = String._bridgeToObjectiveC()();
    uint64_t v5 = MTDisplayTypeFromPersistentString();
    swift_bridgeObjectRelease_n();

    if (v5 == 1) {
      return 1;
    }
    else {
      return 2 * (v5 == 2);
    }
  }
  return result;
}

uint64_t sub_1003A9830(void *a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F76A0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  Swift::String v8 = (char *)&v19 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - v9;
  id v11 = [a1 backgroundColor];
  if (v11)
  {
    uint64_t v12 = v11;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    uint64_t v13 = Color.init(descriptor:)();
    int v21 = v14;
    uint64_t v22 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = 0;
    int v21 = 255;
  }
  [a1 storeId];
  uint64_t v15 = AdamID.init(rawValue:)();
  id v16 = [a1 name];
  uint64_t v23 = v15;
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v20 = 0;
  }
  sub_1003A955C(a1);
  sub_1003A977C(a1);
  sub_1003A9088(a1, (uint64_t)v10);
  sub_1003A935C(a1, (SEL *)&selRef_logoImageURL, (uint64_t)v8);
  sub_1003A935C(a1, (SEL *)&selRef_artworkURL, (uint64_t)v5);
  [a1 showCount];
  [a1 availableShowCount];
  return dispatch thunk of ChannelDetail.__allocating_init(adamId:title:subtitle:displayType:uberArtwork:logoArtwork:iconArtwork:backgroundColor:showCount:availableShowCount:)();
}

unint64_t sub_1003A9A98()
{
  unint64_t result = qword_100606CA8;
  if (!qword_100606CA8)
  {
    sub_100044244((uint64_t *)&unk_100603260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100606CA8);
  }
  return result;
}

uint64_t sub_1003A9AF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for CLSContextMetadata();
  uint64_t v34 = *((void *)v6 - 1);
  __chkstk_darwin();
  Swift::String v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(self, "isEmpty:", objc_msgSend(v1, "storeCollectionId")) & 1) != 0
    || (id v9 = [v1 title]) == 0)
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v34 + 56);
    return v22(a1, 1, 1, v6);
  }
  else
  {
    uint64_t v10 = v9;
    uint64_t v33 = a1;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v12;

    *(void *)&v38[0] = [v2 storeCollectionId];
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v15 = v14;
    uint64_t v39 = 0;
    memset(v38, 0, sizeof(v38));
    v8[40] = 1;
    *((void *)v8 + 6) = 0;
    uint64_t v16 = (uint64_t)&v8[v6[9]];
    uint64_t v17 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    uint64_t v18 = (uint64_t (**)())&v8[v6[10]];
    *uint64_t v18 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
    v18[1] = 0;
    *(void *)&v8[v6[11]] = 0;
    uint64_t v19 = v6[12];
    *(void *)&v8[v19] = 0;
    *(void *)Swift::String v8 = 0;
    *((void *)v8 + 1) = v13;
    *((void *)v8 + 2) = v15;
    *((void *)v8 + 3) = v11;
    *((void *)v8 + 4) = v32;
    sub_10035C0D8((uint64_t)v38, (uint64_t)v35);
    uint64_t v20 = v36;
    if (v36)
    {
      uint64_t v21 = v37;
      sub_100041A98(v35, v36);
      uint64_t v20 = sub_1002577B4(v20, v21);
      sub_1002578B4((uint64_t)v38);
      sub_10004D2D8((uint64_t)v35);
    }
    else
    {
      sub_1002578B4((uint64_t)v38);
      sub_1002578B4((uint64_t)v35);
    }
    swift_bridgeObjectRelease();
    *(void *)&v8[v19] = v20;
    v8[40] = 0;
    sub_1003A9F08((uint64_t)v5);
    sub_100222E1C((uint64_t)v5, v16);
    id v24 = [v2 uuid];
    long long v25 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
    if (v24)
    {
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      double v29 = (double)CLSContextThumbnailMaximumAllowedDimension;
      id v24 = (id)swift_allocObject();
      *((void *)v24 + 2) = v26;
      *((void *)v24 + 3) = v28;
      *((double *)v24 + 4) = v29;
      *((double *)v24 + 5) = v29;
      long long v25 = (uint64_t (*)())sub_1003AA4B0;
    }
    uint64_t v30 = v25;
    uint64_t v31 = v33;
    swift_release();
    *uint64_t v18 = v30;
    v18[1] = (uint64_t (*)())v24;
    sub_10035C140((uint64_t)v8, v31, (uint64_t (*)(void))type metadata accessor for CLSContextMetadata);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v34 + 56))(v31, 0, 1, v6);
    return sub_10035C20C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CLSContextMetadata);
  }
}

uint64_t sub_1003A9F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URLComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastsURLEpisodeParameters(0);
  __chkstk_darwin();
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin();
  uint64_t v12 = (char *)&v22 - v11;
  *((void *)v12 + 6) = 0;
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[56] = 1;
  *(_WORD *)(v12 + 57) = 514;
  uint64_t v13 = (char *)&v22 + *(int *)(v10 + 48) - v11;
  uint64_t v14 = type metadata accessor for MetricsWidgetContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *((void *)v12 + 4) = [v2 storeCollectionId];
  v12[40] = 0;
  type metadata accessor for PodcastsURLScheme();
  sub_10035C140((uint64_t)v12, (uint64_t)v9, type metadata accessor for PodcastsURLEpisodeParameters);
  type metadata accessor for PodcastsURLShowCommand(0);
  uint64_t v15 = swift_allocObject();
  sub_10035C1A8((uint64_t)v9, v15 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
  type metadata accessor for PodcastsURLNowPlayingCommand();
  if (swift_dynamicCastClass() || (type metadata accessor for PodcastsURLBrowseCommand(), swift_dynamicCastClass()))
  {
    swift_retain();
    URLComponents.init()();
    URLComponents.scheme.setter();
    URLComponents.host.setter();
  }
  else
  {
    type metadata accessor for PodcastsURLOpenCommand(0);
    uint64_t v17 = swift_dynamicCastClass();
    if (v17)
    {
      uint64_t v18 = v17;
      swift_retain();
      sub_1003B9E50(v18, a1);
      goto LABEL_5;
    }
    uint64_t v19 = swift_dynamicCastClass();
    if (!v19)
    {
      type metadata accessor for PodcastsURLPlayCommand(0);
      uint64_t v19 = swift_dynamicCastClass();
      if (!v19)
      {
        type metadata accessor for PodcastsURLShowAndPlayCommand(0);
        uint64_t v19 = swift_dynamicCastClass();
        if (!v19)
        {
          uint64_t v21 = type metadata accessor for URL();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 1, 1, v21);
          goto LABEL_6;
        }
      }
    }
    uint64_t v20 = v19;
    swift_retain();
    URLComponents.init()();
    URLComponents.scheme.setter();
    URLComponents.host.setter();
    sub_1003BB178(v20 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
    URLComponents.queryItems.setter();
  }
  URLComponents.url.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_5:
  swift_release();
LABEL_6:
  swift_release();
  return sub_10035C20C((uint64_t)v12, type metadata accessor for PodcastsURLEpisodeParameters);
}

id sub_1003AA378(double a1, double a2)
{
  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 artworkForPodcastUuid:v5 size:0 triggerDownload:a1 a2];

  id v7 = [v6 CGImage];
  return v7;
}

uint64_t sub_1003AA428()
{
  [*v0 storeCollectionId];
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1003AA478()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1003AA4B0()
{
  return sub_1003AA378(*(double *)(v0 + 32), *(double *)(v0 + 40));
}

void sub_1003AA4BC()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_podcastUuid + 8))
  {
    uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_downloadManager);
    NSString v2 = String._bridgeToObjectiveC()();
    unint64_t v3 = (unint64_t)[v1 numberOfDownloadsFrom:v2];

    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  unint64_t v3 = (unint64_t)[*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_downloadManager) numberOfDownloads];
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if (v3 != *(void *)(v0 + OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_currentValue))
  {
    *(void *)(v0 + OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_currentValue) = v3;
    uint64_t v4 = (void (**)(unint64_t))(v0 + OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_didChange);
    swift_beginAccess();
    NSString v5 = *v4;
    if (*v4)
    {
      swift_retain();
      v5(v3);
      sub_1000536BC((uint64_t)v5);
    }
  }
}

id sub_1003AA600()
{
  [*(id *)&v0[OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_downloadsNotifier] unregisterForUpdates:v0];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadCountObserver();
  return [super dealloc];
}

uint64_t type metadata accessor for DownloadCountObserver()
{
  return self;
}

void sub_1003AA830(void *a1@<X8>)
{
  *a1 = *(void *)(*v1 + OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_currentValue);
}

uint64_t (*sub_1003AA848())()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_didChange);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  if (v2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    NSString v5 = sub_1002E3338;
  }
  else
  {
    NSString v5 = 0;
  }
  sub_10004ACDC(v2);
  return v5;
}

uint64_t sub_1003AA8F0(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    id v6 = sub_1002E3334;
  }
  else
  {
    id v6 = 0;
    uint64_t v5 = 0;
  }
  id v7 = (uint64_t *)(*v2 + OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_didChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = (uint64_t)v6;
  v7[1] = v5;
  return sub_1000536BC(v8);
}

void (*sub_1003AA994(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_didChange;
  v3[5] = *v1;
  v3[6] = v5;
  id v6 = (uint64_t *)(v4 + v5);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*v6)
  {
    uint64_t v8 = v6[1];
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v8;
    uint64_t v10 = sub_1002E32DC;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  v3[3] = v10;
  v3[4] = v9;
  return sub_1003AAA60;
}

void sub_1003AAA60(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    if (v3)
    {
      uint64_t v4 = v2[4];
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v4;
      id v6 = sub_1002E32D4;
      goto LABEL_7;
    }
  }
  else if (v3)
  {
    uint64_t v7 = v2[4];
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v7;
    id v6 = (uint64_t (*)(uint64_t))sub_1002E3334;
    goto LABEL_7;
  }
  id v6 = 0;
  uint64_t v5 = 0;
LABEL_7:
  uint64_t v8 = (uint64_t (**)(uint64_t))(v2[5] + v2[6]);
  char *v8 = v6;
  v8[1] = (uint64_t (*)(uint64_t))v5;
  swift_endAccess();

  free(v2);
}

uint64_t sub_1003AAB2C()
{
  swift_release();

  return swift_deallocObject();
}

char *sub_1003AAB64(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (char *)objc_allocWithZone((Class)type metadata accessor for DownloadCountObserver());

  return sub_1003AABD4(a1, a2, a3, a4, v8);
}

char *sub_1003AABD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char *a5)
{
  swift_bridgeObjectRelease();
  *(void *)&a5[OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_currentValue] = 0;
  uint64_t v8 = &a5[OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_didChange];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  uint64_t v9 = &a5[OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_podcastUuid];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_downloadManager] = a1;
  *(void *)&a5[OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_downloadsNotifier] = a2;
  v15.receiver = a5;
  v15.super_class = (Class)type metadata accessor for DownloadCountObserver();
  swift_unknownObjectRetain();
  id v10 = a2;
  uint64_t v11 = [(char *)[super init]];
  uint64_t v12 = *(void **)&v11[OBJC_IVAR____TtC8Podcasts21DownloadCountObserver_downloadsNotifier];
  uint64_t v13 = v11;
  [v12 registerForUpdates:v13];
  sub_1003AA4BC();

  swift_unknownObjectRelease();
  return v13;
}

uint64_t sub_1003AACD4()
{
  uint64_t v1 = v0;
  type metadata accessor for InteractionContext.Page();
  __chkstk_darwin();
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for InteractionContext();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v0 + 64);
  if (v9)
  {
    swift_retain();
    dispatch thunk of ContextActionsConfiguration.context.getter();
    swift_release();
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    LOBYTE(v9) = InteractionContext.Page.isShowPage.getter();
    uint64_t result = sub_1002E60C4((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
  }
  *(unsigned char *)(v1 + 72) = v9 & 1;
  return result;
}

uint64_t sub_1003AAE50()
{
  type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 72) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 56);
    if (v3)
    {
      uint64_t v4 = v3 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
      swift_beginAccess();
      sub_1001AC690(v4, (uint64_t)v2);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v7 = self;
        NSString v8 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v9 = [v7 predicateForAllEpisodesOnPodcastUuid:v8];

        sub_100041A98((void *)(v0 + 16), *(void *)(v0 + 40));
        char v5 = dispatch thunk of LibraryActionControllerProtocol.hasEpisodesThatAreNotVisuallyPlayed(baseEpisodesPredicate:)();

        return v5 & 1;
      }
      sub_1002E60C4((uint64_t)v2, type metadata accessor for PodcastContextActionDataType);
    }
  }
  char v5 = 0;
  return v5 & 1;
}

uint64_t sub_1003AAFC4()
{
  uint64_t v1 = v0;
  sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin();
  uint64_t v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for PresentationSource();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for PodcastContextActionDataType(0);
  uint64_t result = __chkstk_darwin();
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v1 + 72) == 1)
  {
    uint64_t v11 = *(void *)(v1 + 56);
    if (v11)
    {
      uint64_t v12 = v11 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
      swift_beginAccess();
      sub_1001AC690(v12, (uint64_t)v10);
      if (swift_getEnumCaseMultiPayload() == 1) {
        return sub_1002E60C4((uint64_t)v10, type metadata accessor for PodcastContextActionDataType);
      }
      swift_beginAccess();
      if (*(void *)(v1 + 64))
      {
        swift_retain();
        dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
        swift_release();
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v3, v4);
          uint64_t v13 = self;
          NSString v14 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v15 = [v13 predicateForAllEpisodesOnPodcastUuid:v14];

          sub_100041A98((void *)(v1 + 16), *(void *)(v1 + 40));
          dispatch thunk of LibraryActionControllerProtocol.handleMarkingEpisodesAsPlayed(source:baseEpisodesPredicate:)();

          return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
        }
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
      }
      swift_bridgeObjectRelease();
      return sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_100605DC0);
    }
  }
  return result;
}

uint64_t sub_1003AB2D4()
{
  sub_10004D2D8(v0 + 16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28MarkAllAsPlayedContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts28MarkAllAsPlayedContextAction_contextActionType, &qword_1005F9A58);

  return swift_deallocClassInstance();
}

uint64_t sub_1003AB3B4()
{
  return type metadata accessor for MarkAllAsPlayedContextAction();
}

uint64_t type metadata accessor for MarkAllAsPlayedContextAction()
{
  uint64_t result = qword_100606D88;
  if (!qword_100606D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003AB408()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1003AB514()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1003AB544()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1003AB574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28MarkAllAsPlayedContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1003AB5E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts28MarkAllAsPlayedContextAction_contextActionType, a1);
}

uint64_t sub_1003AB608(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

void *sub_1003AB668(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1003AB6C8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1003AB728(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1003AB788(uint64_t a1)
{
  uint64_t result = sub_1003AB810(&qword_100606EB0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003AB7CC(uint64_t a1)
{
  uint64_t result = sub_1003AB810(&qword_100606EB8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003AB810(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MarkAllAsPlayedContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1003AB854()
{
  return [v0 requestNotificationPermissionsIfNeeded];
}

id sub_1003AB864()
{
  return [v0 canPromptForNotificationPermissionsWithPreWarmSheet];
}

id sub_1003AB888()
{
  return [v0 requestNotificationPermissionsWithPreWarmSheetIfNeeded];
}

uint64_t sub_1003AB898()
{
  __int16 v8 = 0;
  id v1 = [self sharedInstance];
  id v2 = [v1 mainOrPrivateContext];

  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = v0;
  v3[3] = (char *)&v8 + 1;
  v3[4] = &v8;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1003AC72C;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = sub_10004A010;
  aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  uint64_t aBlock[3] = &unk_1005670C8;
  uint64_t v5 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v2 performBlockAndWait:v5];

  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(_WORD *)(v0 + 72) = v8;
    return swift_release();
  }
  return result;
}

void sub_1003ABA50(uint64_t a1, unsigned char *a2, unsigned __int8 *a3)
{
  type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8)
  {
    uint64_t v9 = v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess();
    sub_1001AC690(v9, (uint64_t)v7);
    uint64_t v10 = (void *)sub_100241558();
    sub_1002E60C4((uint64_t)v7, type metadata accessor for PodcastContextActionDataType);
    if (v10)
    {
      [v10 hidesPlayedEpisodes];
      *a2 = MTPodcastHidesPlayedEpisodesResolved();
      unsigned __int8 v11 = [v10 subscribed];

      *a3 = v11;
    }
  }
}

uint64_t sub_1003ABB64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext.Origin();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - v6;
  type metadata accessor for InteractionContext.Page();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for InteractionContext();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v15 = (char *)&v21 - v14;
  if (*(void *)(v1 + 56))
  {
    uint64_t v21 = v3;
    swift_beginAccess();
    if (*(void *)(v1 + 64))
    {
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.context.getter();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v13, v10);
      InteractionContext.page.getter();
      char v16 = InteractionContext.Page.isShowPage.getter();
      sub_1002E60C4((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
      if (v16)
      {
        InteractionContext.origin.getter();
        uint64_t v17 = v21;
        (*(void (**)(char *, void, uint64_t))(v21 + 104))(v5, enum case for InteractionContext.Origin.local(_:), v2);
        char v18 = static InteractionContext.Origin.== infix(_:_:)();
        uint64_t v19 = *(void (**)(char *, uint64_t))(v17 + 8);
        v19(v5, v2);
        v19(v7, v2);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
        if (v18) {
          return *(unsigned __int8 *)(v1 + 72);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
      }
    }
  }
  return 0;
}

void sub_1003ABE6C()
{
  if (*(unsigned char *)(v0 + 73)) {
    int v1 = 1;
  }
  else {
    int v1 = 2;
  }
  id v2 = [self sharedInstance];
  id v3 = [v2 mainOrPrivateContext];

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  *(_DWORD *)(v4 + 24) = v1;
  *(void *)(v4 + 32) = v3;
  v7[4] = sub_1003AC6E4;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10003B424;
  v7[3] = &unk_100567050;
  uint64_t v5 = _Block_copy(v7);
  swift_retain();
  id v6 = v3;
  swift_release();
  [v6 performBlock:v5];
  _Block_release(v5);
}

void sub_1003ABFA8(uint64_t a1, uint64_t a2, void *a3)
{
  type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8)
  {
    uint64_t v9 = v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess();
    sub_1001AC690(v9, (uint64_t)v7);
    uint64_t v10 = (void *)sub_100241558();
    sub_1002E60C4((uint64_t)v7, type metadata accessor for PodcastContextActionDataType);
    if (v10)
    {
      [v10 setHidesPlayedEpisodes:a2];
      [a3 saveInCurrentBlock];
    }
  }
}

uint64_t sub_1003AC0AC()
{
  sub_10004D2D8(v0 + 16);
  swift_release();
  swift_release();
  sub_1001DE9EC(v0 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_contextActionType);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1003AC188()
{
  return type metadata accessor for HidePlayedEpisodesPodcastContextAction();
}

uint64_t type metadata accessor for HidePlayedEpisodesPodcastContextAction()
{
  uint64_t result = qword_100606EE8;
  if (!qword_100606EE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003AC1DC()
{
  sub_1001DE3EC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for MetricsLabel();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1003AC2E0()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001004E14B0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000014;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1003AC380()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_systemImageName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1003AC3BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1003AC430@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_contextActionType, a1);
}

uint64_t sub_1003AC450()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t sub_1003AC458(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

void *sub_1003AC4B8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1003AC518(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1003AC578(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1003AC5D8(uint64_t a1)
{
  uint64_t result = sub_1003AC660(&qword_100607038);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003AC61C(uint64_t a1)
{
  uint64_t result = sub_1003AC660(&qword_100607040);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003AC660(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HidePlayedEpisodesPodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003AC6A4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003AC6E4()
{
  sub_1003ABFA8(*(void *)(v0 + 16), *(unsigned int *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003AC6F4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003AC72C()
{
  sub_1003ABA50(*(void *)(v0 + 16), *(unsigned char **)(v0 + 24), *(unsigned __int8 **)(v0 + 32));
}

uint64_t sub_1003AC738()
{
  return swift_deallocObject();
}

void sub_1003AC750()
{
  uint64_t v1 = v0;
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  Swift::String v2 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10046D010;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input];
  if (v0[OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input + 8]) {
    goto LABEL_16;
  }
  Swift::String v5 = (void *)v3;
  uint64_t v6 = *(void *)v4;
  if (*(void *)v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    sub_10004B094(v6, 0);
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v5[7] = &type metadata for Int;
  v5[8] = &protocol witness table for Int;
  v5[4] = v7;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  if (v4[8])
  {
LABEL_16:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    unint64_t v8 = *(void *)v4;
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10004B0B0(v8, 0);
    uint64_t v10 = sub_1003AD204(v8, v9);
    sub_10004B094(v8, 0);
    swift_release();
    uint64_t v11 = (void *)static OS_os_log.default.getter();
    id v12 = objc_allocWithZone((Class)type metadata accessor for GroupOperation());
    uint64_t v13 = (char *)sub_1003FF024((unint64_t)v10, 1, v11);
    swift_bridgeObjectRelease();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v1;
    id v15 = (objc_class *)sub_100054B78((uint64_t *)&unk_1005FF010);
    char v16 = (char *)objc_allocWithZone(v15);
    uint64_t v17 = &v16[*(void *)((swift_isaMask & *(void *)v16) + 0x180)];
    *(void *)uint64_t v17 = 0;
    v17[8] = 2;
    char v18 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v16[*(void *)((swift_isaMask & *(void *)v16) + 0x188)];
    *char v18 = sub_1003AD438;
    v18[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
    v42.receiver = v16;
    v42.super_class = v15;
    uint64_t v19 = v1;
    id v20 = [super init];
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = (uint64_t (**)(uint64_t))&v13[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
    uint64_t v23 = *(void *)&v13[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
    *uint64_t v22 = sub_10018A578;
    v22[1] = (uint64_t (*)(uint64_t))v21;
    sub_1000536BC(v23);
    self;
    uint64_t v24 = swift_dynamicCastObjCClass();
    if (v24)
    {
      uint64_t v25 = v24;
      swift_getObjectType();
      uint64_t v26 = swift_conformsToProtocol2();
      if (v26) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v26) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 0;
      }
      if (v28)
      {
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 24) = v27;
        swift_unknownObjectWeakInit();
        uint64_t v30 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = v30;
        *(void *)(v31 + 24) = v29;
        uint64_t v32 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v27 + 72);
        swift_unknownObjectRetain();
        uint64_t v38 = v13;
        swift_retain();
        swift_retain();
        v32(sub_10004A488, v31, ObjectType, v27);
        swift_release();
        swift_release();
        swift_release();
        v40.receiver = v20;
        v40.super_class = (Class)type metadata accessor for BaseOperation();
        [super addDependency:v25];
      }
    }
    uint64_t v33 = *(void **)&v19[OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_serialQueue];
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_100470E80;
    *(void *)(v34 + 32) = v13;
    *(void *)(v34 + 40) = v20;
    uint64_t v41 = v34;
    specialized Array._endMutation()();
    sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
    uint64_t v35 = v13;
    id v36 = v20;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v33 addOperations:isa waitUntilFinished:0];
  }
}

uint64_t sub_1003ACCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v9 = (void *)Strong;
  if (!Strong)
  {
    swift_retain();
LABEL_6:
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    uint64_t v16 = 0;
    goto LABEL_7;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t))(Strong + OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_beforeTakeOff);
  swift_retain();
  sub_10004ACDC((uint64_t)v10);

  if (!v10)
  {
    uint64_t v9 = 0;
    goto LABEL_6;
  }
  uint64_t v9 = (void *)v10(a4 + OBJC_IVAR____TtC8Podcasts11JobPipeline_metadata);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_1000536BC((uint64_t)v10);
LABEL_7:
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_10005CAE4;
  *(void *)(v17 + 24) = v7;
  sub_1001763A0((uint64_t)v9, v12, v14, v16, (uint64_t)sub_1003AD4D4, v17);
  swift_release();
  return sub_10018D3A4((uint64_t)v9);
}

uint64_t sub_1003ACE70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v4 = (void *)static OS_os_log.downloads.getter();
  os_log(_:dso:log:_:_:)();

  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input + 8))
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input);
    uint64_t v6 = *(void (**)(uint64_t *))(a1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
    if (v6)
    {
      uint64_t v10 = sub_100054B78((uint64_t *)&unk_100607F80);
      uint64_t v8 = v5;
      char v9 = 0;
      sub_10004B0B0(v5, 0);
      sub_10004B0B0(v5, 0);
      sub_10004ACDC((uint64_t)v6);
      v6(&v8);
      sub_1000536BC((uint64_t)v6);
      sub_10004D2D8((uint64_t)&v8);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_100049E74();
    uint64_t result = sub_10004B094(v5, 0);
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t sub_1003AD090()
{
  sub_1000536BC(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_beforeTakeOff));
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input);
  char v2 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input + 8);

  return sub_10004B094(v1, v2);
}

id sub_1003AD0EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StartJobPipelinesOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for StartJobPipelinesOperation()
{
  return self;
}

uint64_t sub_1003AD1AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input);
  *(void *)a1 = v3;
  char v4 = *(unsigned char *)(v2 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  return sub_10004B0B0(v3, v4);
}

uint64_t sub_1003AD1CC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void *sub_1003AD204(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v4) {
      break;
    }
    uint64_t v14 = _swiftEmptyArrayStorage;
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        swift_retain();
      }
      ++v6;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      *(void *)(v8 + 24) = a2;
      char v9 = (objc_class *)sub_100054B78(&qword_1005F7AB0);
      uint64_t v10 = (char *)objc_allocWithZone(v9);
      uint64_t v11 = &v10[*(void *)((swift_isaMask & *(void *)v10) + 0x180)];
      *(void *)uint64_t v11 = 0;
      v11[8] = 2;
      uint64_t v12 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v10[*(void *)((swift_isaMask & *(void *)v10)
                                                                               + 0x188)];
      void *v12 = sub_1003AD494;
      v12[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v8;
      v13.receiver = v10;
      v13.super_class = v9;
      swift_retain();
      [super init];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v4 == v6) {
        return v14;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003AD400()
{
  return swift_deallocObject();
}

uint64_t sub_1003AD438@<X0>(uint64_t a1@<X8>)
{
  return sub_1003ACE70(*(void *)(v1 + 16), a1);
}

uint64_t sub_1003AD454()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003AD494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003ACCDC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1003AD49C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003AD4D4()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(0, 0);
}

uint64_t sub_1003AD510(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void))
{
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return a5(0);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      sub_1003AD614(v13, a2, a3, a4);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003AD614(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [a1 identifierPath];
  uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v14 = *(void *)(v13 + 16);
  swift_bridgeObjectRelease();
  if (v14 > 2)
  {
    sub_1001C0DD4();
    static OS_os_log.classKit.getter();
    id v19 = a1;
    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v32 = v29;
      *(_DWORD *)uint64_t v22 = 136315138;
      v28[1] = v22 + 4;
      id v23 = [v19 identifierPath];
      uint64_t v30 = v9;
      id v24 = v23;
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v25 = Array.description.getter();
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v31 = sub_10004B974(v25, v27, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Invalid show context - %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else
  {
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = a2;
    v15[3] = a3;
    v15[4] = a4;
    v15[5] = a1;
    swift_bridgeObjectRetain();
    id v16 = a4;
    id v17 = a1;
    sub_1003B7A94((uint64_t)sub_1003AEF34, (uint64_t)v15);
    return swift_release();
  }
}

uint64_t sub_1003AD960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v20[0] - 8);
  __chkstk_darwin(v20[0]);
  id v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a3;
  v17[3] = a4;
  void v17[4] = a5;
  v17[5] = a1;
  v17[6] = a2;
  aBlock[4] = sub_1003ADCCC;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100567280;
  char v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  a5;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v20[1] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, void))(v14 + 8))(v16, v20[0]);
  return swift_release();
}

uint64_t sub_1003ADBEC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v10 = [self shared];
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  v11[6] = a5;
  swift_bridgeObjectRetain();
  id v12 = a3;
  swift_retain();
  sub_1001D62A4((uint64_t)sub_1003AE250, (uint64_t)v11);

  return swift_release();
}

uint64_t sub_1003ADCCC()
{
  return sub_1003ADBEC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1003ADCDC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a6;
  uint64_t v46 = a7;
  uint64_t v47 = a1;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = __chkstk_darwin(v16);
  id v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  id v23 = (char *)&v41 - v22;
  if (a2)
  {
    uint64_t v46 = v21;
    uint64_t v47 = v20;
    sub_1001C0DD4();
    swift_errorRetain();
    static OS_os_log.classKit.getter();
    swift_errorRetain();
    swift_errorRetain();
    id v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      unint64_t v48 = a2;
      aBlock[0] = v27;
      *(_DWORD *)unint64_t v26 = 136315138;
      swift_errorRetain();
      sub_100054B78(&qword_100603F70);
      uint64_t v28 = String.init<A>(describing:)();
      unint64_t v48 = (void *)sub_10004B974(v28, v29, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Error finding all show contexts - %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v23, v47);
  }
  else
  {
    uint64_t v31 = v45;
    uint64_t v30 = v46;
    uint64_t v42 = v12;
    uint64_t v43 = v13;
    uint64_t v44 = v9;
    uint64_t v32 = v47;
    if (v47)
    {
      uint64_t v33 = (void *)swift_allocObject();
      v33[2] = v31;
      v33[3] = v30;
      v33[4] = v32;
      aBlock[4] = (uint64_t)sub_1003AEEBC;
      aBlock[5] = (uint64_t)v33;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10003B424;
      uint64_t aBlock[3] = (uint64_t)&unk_1005672F8;
      uint64_t v34 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      unint64_t v48 = _swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v34);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v8);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v42);
      return swift_release();
    }
    else
    {
      uint64_t v36 = v21;
      uint64_t v37 = v20;
      sub_1001C0DD4();
      static OS_os_log.classKit.getter();
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v38, v39))
      {
        objc_super v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)objc_super v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Unable to load all show contexts", v40, 2u);
        swift_slowDealloc();
      }

      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v19, v37);
    }
  }
}

uint64_t sub_1003AE250(uint64_t a1, void *a2)
{
  return sub_1003ADCDC(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1003AE260(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v95 = a5;
  uint64_t v106 = type metadata accessor for Logger();
  long long v104 = *(void (***)(uint64_t, uint64_t))(v106 - 8);
  uint64_t v6 = __chkstk_darwin(v106);
  uint64_t v8 = (char *)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v90 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t)v90 - v12;
  if (a1 >> 62) {
    goto LABEL_95;
  }
  uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  uint64_t v97 = v13;
  uint64_t v96 = v11;
  uint64_t v102 = v8;
  unint64_t v103 = a1;
  long long v107 = (char *)v14;
  if (v14)
  {
    uint64_t v8 = 0;
    uint64_t v11 = 0;
    unint64_t v15 = a1 & 0xC000000000000001;
    uint64_t v16 = (char *)(a1 + 32);
    uint64_t v101 = (char *)&aBlock + 2;
    long long v105 = (char *)&aBlock + 3;
    uint64_t v17 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v15) {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v18 = *(id *)&v16[8 * (void)v8];
      }
      a1 = (unint64_t)v18;
      if (__OFADD__(v8++, 1))
      {
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        swift_bridgeObjectRetain();
        uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
        goto LABEL_3;
      }
      id v20 = [v18 identifier];
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      uint64_t v23 = HIBYTE(v22) & 0xF;
      uint64_t v24 = v13 & 0xFFFFFFFFFFFFLL;
      if ((v22 & 0x2000000000000000) != 0 ? HIBYTE(v22) & 0xF : v13 & 0xFFFFFFFFFFFFLL) {
        break;
      }

      swift_bridgeObjectRelease();
LABEL_7:
      if (v8 == v107)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = (uint64_t)v107;
        goto LABEL_70;
      }
    }
    if ((v22 & 0x1000000000000000) != 0)
    {
      uint64_t v27 = sub_10035C284(v13, v22, 10);
      char v29 = v44;
      goto LABEL_45;
    }
    if ((v22 & 0x2000000000000000) == 0)
    {
      if ((v13 & 0x1000000000000000) != 0) {
        unint64_t v26 = (unsigned __int8 *)((v22 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unint64_t v26 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v27 = (uint64_t)sub_10035C26C(v26, v24, 10);
      char v29 = v28 & 1;
LABEL_45:

      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = sub_1002EF374(0, v17[2] + 1, 1, v17);
        }
        unint64_t v35 = v17[2];
        unint64_t v34 = v17[3];
        if (v35 >= v34 >> 1) {
          uint64_t v17 = sub_1002EF374((void *)(v34 > 1), v35 + 1, 1, v17);
        }
        _OWORD v17[2] = v35 + 1;
        v17[v35 + 4] = v27;
      }
      goto LABEL_7;
    }
    id aBlock = v13;
    uint64_t v110 = v22 & 0xFFFFFFFFFFFFFFLL;
    if (v13 == 43)
    {
      if (!v23) {
        goto LABEL_94;
      }
      if (v23 == 1 || (BYTE1(v13) - 48) > 9u) {
        goto LABEL_42;
      }
      uint64_t v27 = (BYTE1(v13) - 48);
      if (v23 == 2) {
        goto LABEL_44;
      }
      if ((BYTE2(v13) - 48) <= 9u)
      {
        uint64_t v27 = 10 * (BYTE1(v13) - 48) + (BYTE2(v13) - 48);
        uint64_t v30 = v23 - 3;
        if (v30)
        {
          uint64_t v31 = (unsigned __int8 *)v105;
          while (1)
          {
            unsigned int v32 = *v31 - 48;
            if (v32 > 9) {
              goto LABEL_42;
            }
            uint64_t v33 = 10 * v27;
            if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
              goto LABEL_42;
            }
            uint64_t v27 = v33 + v32;
            if (__OFADD__(v33, v32)) {
              goto LABEL_42;
            }
            char v29 = 0;
            ++v31;
            if (!--v30) {
              goto LABEL_45;
            }
          }
        }
        goto LABEL_44;
      }
    }
    else
    {
      if (v13 == 45)
      {
        if (!v23) {
          goto LABEL_93;
        }
        if (v23 == 1 || (BYTE1(v13) - 48) > 9u) {
          goto LABEL_42;
        }
        if (v23 == 2)
        {
          char v29 = 0;
          uint64_t v27 = -(uint64_t)(BYTE1(v13) - 48);
          goto LABEL_45;
        }
        if ((BYTE2(v13) - 48) > 9u) {
          goto LABEL_42;
        }
        uint64_t v27 = -10 * (BYTE1(v13) - 48) - (BYTE2(v13) - 48);
        uint64_t v40 = v23 - 3;
        if (v40)
        {
          uint64_t v41 = (unsigned __int8 *)v105;
          while (1)
          {
            unsigned int v42 = *v41 - 48;
            if (v42 > 9) {
              goto LABEL_42;
            }
            uint64_t v43 = 10 * v27;
            if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
              goto LABEL_42;
            }
            uint64_t v27 = v43 - v42;
            if (__OFSUB__(v43, v42)) {
              goto LABEL_42;
            }
            char v29 = 0;
            ++v41;
            if (!--v40) {
              goto LABEL_45;
            }
          }
        }
LABEL_44:
        char v29 = 0;
        goto LABEL_45;
      }
      if (v23 && (v13 - 48) <= 9u)
      {
        uint64_t v27 = (v13 - 48);
        if (v23 == 1) {
          goto LABEL_44;
        }
        if ((BYTE1(v13) - 48) <= 9u)
        {
          uint64_t v27 = 10 * (v13 - 48) + (BYTE1(v13) - 48);
          uint64_t v36 = v23 - 2;
          if (v36)
          {
            uint64_t v37 = (unsigned __int8 *)v101;
            while (1)
            {
              unsigned int v38 = *v37 - 48;
              if (v38 > 9) {
                goto LABEL_42;
              }
              uint64_t v39 = 10 * v27;
              if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
                goto LABEL_42;
              }
              uint64_t v27 = v39 + v38;
              if (__OFADD__(v39, v38)) {
                goto LABEL_42;
              }
              char v29 = 0;
              ++v37;
              if (!--v36) {
                goto LABEL_45;
              }
            }
          }
          goto LABEL_44;
        }
      }
    }
LABEL_42:
    uint64_t v27 = 0;
    char v29 = 1;
    goto LABEL_45;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = _swiftEmptyArrayStorage;
LABEL_70:
  uint64_t v45 = sub_1004048BC((uint64_t)v17);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v14) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v47 = v102;
  if (v14 >= 1)
  {
    unint64_t v48 = v103;
    ++v104;
    long long v105 = (char *)(v103 & 0xC000000000000001);
    p_id aBlock = &aBlock;
    uint64_t v101 = (char *)v111;
    swift_bridgeObjectRetain();
    uint64_t v49 = 0;
    *(void *)&long long v50 = 136315138;
    long long v99 = v50;
    uint64_t v94 = (char *)&type metadata for Any + 8;
    uint64_t v100 = v45;
    do
    {
      if (v105) {
        id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v53 = *(id *)(v48 + 8 * v49 + 32);
      }
      id v51 = v53;
      id v54 = [v53 identifier];
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v57 = v56;

      id v58 = sub_1003AEF40(v55, v57);
      LOBYTE(v54) = v59;
      swift_bridgeObjectRelease();
      if ((v54 & 1) == 0)
      {
        if (!sub_10030AC24((uint64_t)v58, v45))
        {
          unint64_t v60 = sub_1001C0DD4();
          uint64_t v61 = v97;
          uint64_t v98 = (void (*)(void, void))v60;
          static OS_os_log.classKit.getter();
          id v62 = v51;
          uint64_t v63 = Logger.logObject.getter();
          os_log_type_t v64 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v65 = (uint8_t *)swift_slowAlloc();
            uint64_t v92 = swift_slowAlloc();
            id aBlock = v92;
            unint64_t v91 = v65;
            *(_DWORD *)uint64_t v65 = v99;
            v90[1] = v65 + 4;
            id v66 = [v62 identifier];
            uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v69 = v68;

            uint64_t v108 = sub_10004B974(v67, v69, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v63, v64, "Creating copy of episode context - %s", v91, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v70 = *v104;
            (*v104)(v97, v106);
          }
          else
          {

            uint64_t v70 = *v104;
            (*v104)(v61, v106);
          }
          int v71 = v96;
          id aBlock = (uint64_t)v58;
          dispatch thunk of CustomStringConvertible.description.getter();
          id v72 = sub_1003B7750();
          swift_bridgeObjectRelease();
          static OS_os_log.classKit.getter();
          id v73 = v72;
          int v74 = Logger.logObject.getter();
          os_log_type_t v75 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v74, v75))
          {
            uint64_t v76 = (uint8_t *)swift_slowAlloc();
            uint64_t v92 = swift_slowAlloc();
            id aBlock = v92;
            *(_DWORD *)uint64_t v76 = v99;
            unint64_t v91 = v76 + 4;
            id v77 = [v73 identifier];
            uint64_t v98 = v70;
            id v78 = v77;
            uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v81 = v80;

            uint64_t v108 = sub_10004B974(v79, v81, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v74, v75, "Adding migrated episode context - %s", v76, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v98(v96, v106);
          }
          else
          {

            v70((uint64_t)v71, v106);
          }
          uint64_t v47 = v102;
          unint64_t v48 = v103;
          [v95 addChildContext:v73];

          uint64_t v14 = (uint64_t)v107;
          uint64_t v45 = v100;
        }
        sub_1001C0DD4();
        static OS_os_log.classKit.getter();
        id v82 = v51;
        uint64_t v83 = Logger.logObject.getter();
        os_log_type_t v84 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v83, v84))
        {
          uint64_t v85 = swift_slowAlloc();
          id aBlock = swift_slowAlloc();
          *(_DWORD *)uint64_t v85 = v99;
          id v86 = [v82 identifier];
          uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v89 = v88;

          *(void *)(v85 + 4) = sub_10004B974(v87, v89, &aBlock);
          uint64_t v14 = (uint64_t)v107;
          uint64_t v47 = v102;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v83, v84, "Removing old episode context - %s", (uint8_t *)v85, 0xCu);
          swift_arrayDestroy();
          uint64_t v45 = v100;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        (*v104)((uint64_t)v47, v106);
        [v82 removeFromParent];
        id v51 = [self shared];
        v111[2] = sub_1003064D4;
        v111[3] = 0;
        id aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v110 = 1107296256;
        v111[0] = sub_10034BD38;
        v111[1] = &unk_100567348;
        uint64_t v52 = _Block_copy(&aBlock);
        [v51 saveWithCompletion:v52];
        _Block_release(v52);
      }
      ++v49;
    }
    while (v14 != v49);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003AEE7C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003AEEBC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1003AEEEC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003AEF34(unint64_t a1)
{
  return sub_1003AE260(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

id sub_1003AEF40(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)__chkstk_darwin(v6);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v12 = HIBYTE(a2) & 0xF;
  uint64_t v13 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v14 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v14 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14) {
    goto LABEL_58;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_10035C284(a1, a2, 10);
    char v35 = v34;
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_58;
    }
    goto LABEL_36;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      unint64_t v15 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unint64_t v15 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v16 = sub_10035C26C(v15, v13, 10);
    if ((v17 & 1) == 0)
    {
      uint64_t v18 = (uint64_t)v16;
      goto LABEL_36;
    }
LABEL_58:
    sub_1001C0DD4();
    static OS_os_log.classKit.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      unsigned int v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v41 = v4;
      v42[0] = v39;
      *(_DWORD *)unsigned int v38 = 136315138;
      swift_bridgeObjectRetain();
      long long v42[2] = sub_10004B974(a1, a2, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Unable to convert episode context identifier to Int64 - %s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v41);
      return 0;
    }

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return 0;
  }
  v42[0] = a1;
  v42[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v12)
    {
LABEL_65:
      __break(1u);
      return result;
    }
    if (v12 == 1) {
      goto LABEL_63;
    }
    if ((BYTE1(a1) - 48) <= 9u)
    {
      uint64_t v18 = (BYTE1(a1) - 48);
      if (v12 == 2) {
        goto LABEL_34;
      }
      if ((BYTE2(a1) - 48) <= 9u)
      {
        uint64_t v18 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
        uint64_t v19 = v12 - 3;
        if (v12 != 3)
        {
          id v20 = (unsigned __int8 *)v42 + 3;
          while (1)
          {
            unsigned int v21 = *v20 - 48;
            if (v21 > 9) {
              goto LABEL_32;
            }
            uint64_t v22 = 10 * v18;
            if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
              goto LABEL_32;
            }
            uint64_t v18 = v22 + v21;
            if (__OFADD__(v22, v21)) {
              goto LABEL_32;
            }
            LOBYTE(v12) = 0;
            ++v20;
            if (!--v19) {
              goto LABEL_35;
            }
          }
        }
        goto LABEL_34;
      }
    }
LABEL_32:
    uint64_t v18 = 0;
    LOBYTE(v12) = 1;
    goto LABEL_35;
  }
  if (a1 != 45)
  {
    if (!v12 || (a1 - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v18 = (a1 - 48);
    if (v12 == 1)
    {
LABEL_34:
      LOBYTE(v12) = 0;
      goto LABEL_35;
    }
    if ((BYTE1(a1) - 48) <= 9u)
    {
      uint64_t v18 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      uint64_t v26 = v12 - 2;
      if (v12 != 2)
      {
        uint64_t v27 = (unsigned __int8 *)v42 + 2;
        while (1)
        {
          unsigned int v28 = *v27 - 48;
          if (v28 > 9) {
            goto LABEL_32;
          }
          uint64_t v29 = 10 * v18;
          if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
            goto LABEL_32;
          }
          uint64_t v18 = v29 + v28;
          if (__OFADD__(v29, v28)) {
            goto LABEL_32;
          }
          LOBYTE(v12) = 0;
          ++v27;
          if (!--v26) {
            goto LABEL_35;
          }
        }
      }
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (!v12)
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v12 != 1)
  {
    if ((BYTE1(a1) - 48) > 9u) {
      goto LABEL_32;
    }
    if (v12 == 2)
    {
      LOBYTE(v12) = 0;
      uint64_t v18 = -(uint64_t)(BYTE1(a1) - 48);
      goto LABEL_35;
    }
    if ((BYTE2(a1) - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v18 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
    uint64_t v30 = v12 - 3;
    if (v12 != 3)
    {
      uint64_t v31 = (unsigned __int8 *)v42 + 3;
      while (1)
      {
        unsigned int v32 = *v31 - 48;
        if (v32 > 9) {
          goto LABEL_32;
        }
        uint64_t v33 = 10 * v18;
        if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
          goto LABEL_32;
        }
        uint64_t v18 = v33 - v32;
        if (__OFSUB__(v33, v32)) {
          goto LABEL_32;
        }
        LOBYTE(v12) = 0;
        ++v31;
        if (!--v30) {
          goto LABEL_35;
        }
      }
    }
    goto LABEL_34;
  }
LABEL_63:
  uint64_t v18 = 0;
LABEL_35:
  if (v12) {
    goto LABEL_58;
  }
LABEL_36:
  id result = [self serpentIdFromAdamId:v18];
  if ((id)v18 == result)
  {
    sub_1001C0DD4();
    static OS_os_log.classKit.getter();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v25 = 134217984;
      v42[0] = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Episode context already has migrated identifier - %lld", v25, 0xCu);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    return 0;
  }
  return result;
}

void destroy for OldEpisodeContextMigration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s8Podcasts26OldEpisodeContextMigrationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for OldEpisodeContextMigration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for OldEpisodeContextMigration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for OldEpisodeContextMigration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OldEpisodeContextMigration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OldEpisodeContextMigration()
{
  return &type metadata for OldEpisodeContextMigration;
}

uint64_t sub_1003AF6EC()
{
  uint64_t v1 = v0;
  unint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!v3
    || (v13[0] = v3,
        type metadata accessor for ContextActionsConfiguration(),
        swift_retain(),
        sub_100054B78(&qword_100601AF8),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    return sub_100054B1C((uint64_t)&v10, &qword_100601AF0);
  }
  if (!*((void *)&v11 + 1)) {
    return sub_100054B1C((uint64_t)&v10, &qword_100601AF0);
  }
  sub_100042FC4(&v10, (uint64_t)v13);
  uint64_t v4 = v14;
  sub_100041A98(v13, v14);
  id v5 = sub_100210150(v4);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_adamID;
    *(void *)uint64_t v7 = v5;
    *(unsigned char *)(v7 + 8) = 0;
    InterestStateController.stateMachine(for:)();
    char v8 = InterestStateMachine.currentState.getter();
    swift_release();
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_interestState) = v8;
  }
  return sub_10004D2D8((uint64_t)v13);
}

uint64_t sub_1003AF82C()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_adamID + 8) & 1) != 0
    || *(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_interestState) == 4
    || (uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration),
        swift_beginAccess(),
        *v1)
    && (type metadata accessor for PodcastContextActionConfiguration(0), swift_dynamicCastClass()))
  {
    char v2 = 0;
  }
  else
  {
    uint64_t v4 = InterestState.rawValue.getter();
    uint64_t v6 = v5;
    if (v4 == InterestState.rawValue.getter() && v6 == v7) {
      char v2 = 1;
    }
    else {
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t sub_1003AF92C()
{
  uint64_t v1 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsFieldInclusionRequest();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for MetricsData();
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for UnfavoriteInterestAction();
  uint64_t v37 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  char v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration);
  uint64_t result = swift_beginAccess();
  if (*v18)
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_adamID + 8) & 1) == 0)
    {
      uint64_t v20 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_adamID);
      uint64_t v34 = v20;
      sub_100054B78((uint64_t *)&unk_1006027F0);
      unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v22 = swift_allocObject();
      uint64_t v33 = v22;
      *(_OWORD *)(v22 + 16) = xmmword_10046D010;
      unint64_t v32 = v22 + v21;
      v41[0] = v20;
      sub_1001A5874();
      swift_retain();
      v29[3] = BinaryInteger.description.getter();
      uint64_t v23 = static MetricsTargetType.button.getter();
      uint64_t v31 = v3;
      v29[2] = v23;
      v29[1] = static MetricsActionType.unfavorite.getter();
      uint64_t v30 = v6;
      static MetricsActionContext.contextual.getter();
      v29[4] = v15;
      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
      static MetricsDataConfiguration.default.getter();
      static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
      sub_1002DFF70((uint64_t)v41, (uint64_t)v44);
      sub_100053884((uint64_t)v44);
      uint64_t v43 = v41[2];
      sub_1000537F4((uint64_t)&v43);
      uint64_t v42 = v41[3];
      sub_1000537F4((uint64_t)&v42);
      sub_1000536BC(v41[4]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
      os_log_type_t v25 = v30;
      static MetricsFieldInclusionRequest.impressionsSnapshot.getter();
      MetricsData.removingIncludedField(_:)();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v39);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v36);
      ScalarDictionary.init()();
      ActionMetrics.init(data:custom:)();
      UnfavoriteInterestAction.init(adamID:actionMetrics:)();
      uint64_t v26 = v35;
      v40[3] = v35;
      v40[4] = sub_1003B045C(&qword_1006071C8, (void (*)(uint64_t))&type metadata accessor for UnfavoriteInterestAction);
      uint64_t v27 = sub_10004A244(v40);
      uint64_t v28 = v37;
      (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 16))(v27, v17, v26);
      ContextActionsConfiguration.perform(_:)();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v26);
      return sub_10004D2D8((uint64_t)v40);
    }
  }
  return result;
}

uint64_t sub_1003AFEF4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_contextActionType, &qword_1005F9A58);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1003AFFE4()
{
  return type metadata accessor for UndoFavoriteContextAction();
}

uint64_t type metadata accessor for UndoFavoriteContextAction()
{
  uint64_t result = qword_1006070F8;
  if (!qword_1006070F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003B0038()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1003B0144()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0xED0000657469726FLL;
  v1._object = (void *)0x80000001004D6950;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x766146206F646E55;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1003B01FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1003B0270@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_contextActionType, a1);
}

uint64_t sub_1003B0290(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  return sub_1003AF6EC();
}

uint64_t sub_1003B02FC()
{
  return swift_retain();
}

uint64_t sub_1003B0348(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1003B039C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1003B0404(uint64_t a1)
{
  uint64_t result = sub_1003B045C(&qword_1006071C0, (void (*)(uint64_t))type metadata accessor for UndoFavoriteContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003B045C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B04A4()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 24);
  if (v2
    && (v9[0] = v2,
        type metadata accessor for ContextActionsConfiguration(),
        swift_retain(),
        sub_100054B78(&qword_100607378),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v7 + 1))
    {
      sub_100042FC4(&v6, (uint64_t)v9);
      sub_100041A98(v9, v10);
      *(void *)(v1 + 72) = dispatch thunk of TimestampContextActionsConfiguration.referenceTime.getter();
      *(unsigned char *)(v1 + 80) = v3 & 1;
      sub_100041A98(v9, v10);
      *(void *)(v1 + 88) = dispatch thunk of TimestampContextActionsConfiguration.playerTime.getter();
      *(unsigned char *)(v1 + 96) = v4 & 1;
      return sub_10004D2D8((uint64_t)v9);
    }
  }
  else
  {
    uint64_t v8 = 0;
    long long v6 = 0u;
    long long v7 = 0u;
  }
  return sub_100054B1C((uint64_t)&v6, &qword_100607370);
}

uint64_t sub_1003B05C4()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 24);
  if (v2
    && (v9[0] = v2,
        type metadata accessor for ContextActionsConfiguration(),
        swift_retain(),
        sub_100054B78(&qword_100607378),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v7 + 1))
    {
      sub_100042FC4(&v6, (uint64_t)v9);
      sub_100041A98(v9, v10);
      *(void *)(v1 + 32) = dispatch thunk of TimestampContextActionsConfiguration.referenceTime.getter();
      *(unsigned char *)(v1 + 40) = v3 & 1;
      sub_100041A98(v9, v10);
      *(void *)(v1 + 48) = dispatch thunk of TimestampContextActionsConfiguration.playerTime.getter();
      *(unsigned char *)(v1 + 56) = v4 & 1;
      return sub_10004D2D8((uint64_t)v9);
    }
  }
  else
  {
    uint64_t v8 = 0;
    long long v6 = 0u;
    long long v7 = 0u;
  }
  return sub_100054B1C((uint64_t)&v6, &qword_100607370);
}

uint64_t sub_1003B06E4()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 24);
  if (v2
    && (v13[0] = v2,
        type metadata accessor for ContextActionsConfiguration(),
        swift_retain(),
        sub_100054B78(&qword_100607378),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v11 + 1))
    {
      sub_100042FC4(&v10, (uint64_t)v13);
      sub_100041A98(v13, v14);
      uint64_t v3 = dispatch thunk of TimestampContextActionsConfiguration.referenceTime.getter();
      uint64_t v4 = v1 + OBJC_IVAR____TtC8Podcasts36CopyTranscriptSelectionContextAction_referenceTime;
      *(void *)uint64_t v4 = v3;
      *(unsigned char *)(v4 + 8) = v5 & 1;
      sub_100041A98(v13, v14);
      uint64_t v6 = dispatch thunk of TimestampContextActionsConfiguration.playerTime.getter();
      uint64_t v7 = v1 + OBJC_IVAR____TtC8Podcasts36CopyTranscriptSelectionContextAction_playerTime;
      *(void *)uint64_t v7 = v6;
      *(unsigned char *)(v7 + 8) = v8 & 1;
      return sub_10004D2D8((uint64_t)v13);
    }
  }
  else
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
  }
  return sub_100054B1C((uint64_t)&v10, &qword_100607370);
}

id sub_1003B0824()
{
  id v0 = [objc_allocWithZone((Class)AVTimeFormatter) init];
  id result = [v0 setStyle:1];
  qword_1006071D0 = (uint64_t)v0;
  return result;
}

id sub_1003B0874(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  swift_retain();
  sub_1004025F4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  uint64_t v43 = v5;
  sub_1001AB688();
  if ((Collection.isNotEmpty.getter() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v42 = static AdamID.empty.getter();
  sub_1001A5874();
  if (v3 == BinaryInteger.description.getter() && v5 == v6)
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return 0;
  }
  unint64_t v12 = *(void *)(v10 + 16);
  uint64_t v11 = *(void *)(v10 + 24);
  id v7 = 0;
  switch(*(unsigned char *)(v10 + 32))
  {
    case 1:
      return v7;
    case 2:
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        id v7 = (id)_CocoaArrayWrapper.endIndex.getter();
        if (v7) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v20 = v12;
        uint64_t v21 = v11;
        unsigned __int8 v22 = 2;
        goto LABEL_46;
      }
      id v7 = *(id *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v7) {
        goto LABEL_33;
      }
LABEL_23:
      if ((v12 & 0xC000000000000001) != 0)
      {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_26;
      }
      if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v23 = *(id *)(v12 + 32);
LABEL_26:
        uint64_t v24 = v23;
        type metadata accessor for ShareEpisodeContextAction();
        sub_1003B21E0((unint64_t *)&unk_100608B80);
        id v25 = v24;
        ShareAction.applicationActivities.getter();
        sub_100376160();
        v26.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(a1 + 80)) {
          double v27 = 0.0;
        }
        else {
          double v27 = *(double *)(a1 + 72);
        }
        if (*(unsigned char *)(a1 + 96)) {
          double v28 = 0.0;
        }
        else {
          double v28 = *(double *)(a1 + 88);
        }
        uint64_t v29 = self;
        [v25 playhead:v42, v43];
        id v7 = [v29 shareViewControllerWithPlayerItem:v25 applicationActivities:v26.super.isa selectedReferenceTime:v27 selectedPlayerTime:v28 currentPlayerTime:v30];

        goto LABEL_33;
      }
      __break(1u);
LABEL_53:
      id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_39:
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      type metadata accessor for ShareEpisodeContextAction();
      sub_1003B21E0((unint64_t *)&unk_100608B80);
      id v36 = v35;
      ShareAction.applicationActivities.getter();
      sub_100376160();
      v37.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(a1 + 80)) {
        double v38 = 0.0;
      }
      else {
        double v38 = *(double *)(a1 + 72);
      }
      if (*(unsigned char *)(a1 + 96)) {
        double v39 = 0.0;
      }
      else {
        double v39 = *(double *)(a1 + 88);
      }
      uint64_t v40 = self;
      [v36 playhead:v42, v43];
      id v7 = [v40 shareViewControllerWithPlayerItem:v36 applicationActivities:v37.super.isa selectedReferenceTime:v38 selectedPlayerTime:v39 currentPlayerTime:v41];

      uint64_t v20 = v12;
      uint64_t v21 = v11;
      unsigned __int8 v22 = 3;
LABEL_46:
      sub_1001DCDF8(v20, v21, v22);
      return v7;
    case 3:
      unint64_t v31 = swift_bridgeObjectRetain();
      unint64_t v32 = (unint64_t)sub_100401778(v31);
      unint64_t v33 = v32;
      if (v32 >> 62)
      {
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_36;
        }
      }
      else if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_36:
        if ((v33 & 0xC000000000000001) != 0) {
          goto LABEL_53;
        }
        if (!*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x1003B0DF0);
        }
        id v34 = *(id *)(v33 + 32);
        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
      sub_1001DCDF8(v12, v11, 3u);
      return 0;
    default:
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)swift_bridgeObjectRetain();
      id v7 = (id)sub_10040241C(v13, v11, 0);
      if (v7)
      {
        type metadata accessor for ShareEpisodeContextAction();
        sub_1003B21E0((unint64_t *)&unk_100608B80);
        id v14 = v7;
        ShareAction.applicationActivities.getter();
        sub_100376160();
        v15.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(a1 + 80)) {
          double v16 = 0.0;
        }
        else {
          double v16 = *(double *)(a1 + 72);
        }
        if (*(unsigned char *)(a1 + 96)) {
          double v17 = 0.0;
        }
        else {
          double v17 = *(double *)(a1 + 88);
        }
        uint64_t v18 = self;
        [v14 playhead:v42, v43];
        id v7 = [v18 shareViewControllerWithEpisode:v14 applicationActivities:v15.super.isa selectedReferenceTime:v16 selectedPlayerTime:v17 currentPlayerTime:v19];
      }
      uint64_t v20 = v12;
      uint64_t v21 = v11;
      unsigned __int8 v22 = 0;
      goto LABEL_46;
  }
}

id sub_1003B0E00()
{
  id v1 = *(id *)(v0 + 16);
  if (v1)
  {
    swift_retain();
    sub_1004025F4();
    uint64_t v3 = v2;
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    uint64_t v40 = v5;
    sub_1001AB688();
    if ((Collection.isNotEmpty.getter() & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v39 = static AdamID.empty.getter();
    sub_1001A5874();
    if (v3 == BinaryInteger.description.getter() && v5 == v6)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      return 0;
    }
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8) {
      return 0;
    }
    uint64_t v9 = *(void *)(v0 + 16);
    if (!v9) {
      return 0;
    }
    unint64_t v11 = *(void *)(v9 + 16);
    uint64_t v10 = *(void *)(v9 + 24);
    id v1 = 0;
    switch(*(unsigned char *)(v9 + 32))
    {
      case 1:
        return v1;
      case 2:
        if (v11 >> 62)
        {
          swift_bridgeObjectRetain();
          if (_CocoaArrayWrapper.endIndex.getter()) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v17 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v17)
          {
LABEL_17:
            if ((v11 & 0xC000000000000001) != 0)
            {
              id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              goto LABEL_20;
            }
            if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v18 = *(id *)(v11 + 32);
LABEL_20:
              float v19 = v18;
              id v20 = [self shareActivityItemsWithPlayerItem:v18, v39, v40];
              if (v20)
              {
                uint64_t v21 = v20;
                static Array._unconditionallyBridgeFromObjectiveC(_:)();
              }
              NSArray v37 = self;
              v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              id v1 = [v37 mt_configurationWithActivityItems:v33.super.isa];

              uint64_t v34 = v11;
              uint64_t v35 = v10;
              unsigned __int8 v36 = 2;
LABEL_33:
              sub_1001DCDF8(v34, v35, v36);

              return v1;
            }
            __break(1u);
LABEL_41:
            id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_27:
            NSArray v26 = v25;
            swift_bridgeObjectRelease();
            id v27 = [self shareActivityItemsWithPlayerItem:v26, v39, v40];
            if (v27)
            {
              double v28 = v27;
              static Array._unconditionallyBridgeFromObjectiveC(_:)();
            }
            double v38 = self;
            v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v1 = [v38 mt_configurationWithActivityItems:v33.super.isa];

            uint64_t v34 = v11;
            uint64_t v35 = v10;
            unsigned __int8 v36 = 3;
            goto LABEL_33;
          }
        }
        uint64_t v29 = v11;
        uint64_t v30 = v10;
        unsigned __int8 v31 = 2;
        goto LABEL_38;
      case 3:
        unint64_t v22 = swift_bridgeObjectRetain();
        unint64_t v23 = (unint64_t)sub_100401778(v22);
        unint64_t v24 = v23;
        if (v23 >> 62)
        {
          if (_CocoaArrayWrapper.endIndex.getter()) {
            goto LABEL_24;
          }
        }
        else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_24:
          if ((v24 & 0xC000000000000001) != 0) {
            goto LABEL_41;
          }
          if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x1003B12ACLL);
          }
          id v25 = *(id *)(v24 + 32);
          goto LABEL_27;
        }
        swift_bridgeObjectRelease();
        uint64_t v29 = v11;
        uint64_t v30 = v10;
        unsigned __int8 v31 = 3;
        goto LABEL_38;
      default:
        swift_bridgeObjectRetain();
        unint64_t v12 = (void *)swift_bridgeObjectRetain();
        uint64_t v13 = sub_10040241C(v12, v10, 0);
        if (v13)
        {
          id v14 = (void *)v13;
          id v15 = [self shareActivityItemsWithEpisode:v13, v39, v40];
          if (v15)
          {
            double v16 = v15;
            static Array._unconditionallyBridgeFromObjectiveC(_:)();
          }
          unint64_t v32 = self;
          v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v1 = [v32 mt_configurationWithActivityItems:v33.super.isa];

          uint64_t v34 = v11;
          uint64_t v35 = v10;
          unsigned __int8 v36 = 0;
          goto LABEL_33;
        }
        uint64_t v29 = v11;
        uint64_t v30 = v10;
        unsigned __int8 v31 = 0;
LABEL_38:
        sub_1001DCDF8(v29, v30, v31);
        return 0;
    }
  }
  return v1;
}

BOOL sub_1003B12BC()
{
  if (!*(void *)(v0 + 16)) {
    return 0;
  }
  swift_retain();
  sub_1004025F4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_1001AB688();
  if ((Collection.isNotEmpty.getter() & 1) == 0)
  {
    swift_release();
    goto LABEL_7;
  }
  static AdamID.empty.getter();
  sub_1001A5874();
  if (v2 == BinaryInteger.description.getter() && v4 == v5)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v7 & 1) == 0;
}

uint64_t sub_1003B13CC()
{
  sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = sub_1003B0874(v0);
  type metadata accessor for ShareEpisodeContextAction();
  sub_1003B21E0((unint64_t *)&unk_100608B80);
  uint64_t result = ShareAction.prepareShareController(_:sharingStyle:)();
  if (v3)
  {
    swift_beginAccess();
    if (*(void *)(v0 + 24))
    {
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
      swift_release();
      uint64_t v5 = type metadata accessor for PresentationSource();
      uint64_t v6 = *(void *)(v5 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
      {
        PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)();

        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v2, v5);
      }
    }
    else
    {
      uint64_t v7 = type metadata accessor for PresentationSource();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
    }

    return sub_100054B1C((uint64_t)v2, (uint64_t *)&unk_100605DC0);
  }
  return result;
}

uint64_t sub_1003B15C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EpisodeOffer();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v1 + 16);
  if (v11)
  {
    if (*(unsigned char *)(v11 + 32) == 1)
    {
      uint64_t v12 = *(void *)(v11 + 16);
      if (*(void *)(v12 + 16) != 1) {
        return result;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, v12 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
      swift_retain();
      id v13 = sub_1002C5634();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if (v13)
      {
        sub_100054B78((uint64_t *)&unk_1005FA7F0);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_10046D060;
        *(void *)(v14 + 32) = v13;
        uint64_t v22 = v14;
        specialized Array._endMutation()();
        uint64_t v19 = v22;
        uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
        v21(v5, v11 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v2);
        int v20 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron);
        type metadata accessor for EpisodeContextActionData();
        uint64_t v15 = swift_allocObject();
        uint64_t v16 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
        uint64_t v17 = self;
        id v18 = v13;
        *(void *)(v15 + v16) = [v17 sharedInstance];
        *(void *)(v15 + 16) = v19;
        *(void *)(v15 + 24) = 0;
        *(unsigned char *)(v15 + 32) = 2;
        v21((char *)(v15 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint), (uint64_t)v5, v2);
        *(unsigned char *)(v15 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = v20;
        sub_10040315C();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

        *(void *)(v1 + 16) = v15;
        swift_release();
      }
    }
    else
    {
      swift_retain();
    }
    sub_1003B04A4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003B18DC()
{
  swift_beginAccess();
  if (!*(void *)(v0 + 24)) {
    goto LABEL_6;
  }
  type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
    if (!swift_dynamicCastClass()) {
      goto LABEL_6;
    }
  }
  if (*(unsigned char *)(v0 + 96))
  {
    if (*(unsigned char *)(v0 + 80))
    {
LABEL_6:
      id v1 = [self mainBundle];
      v16._object = (void *)0xE000000000000000;
      v2._object = (void *)0x80000001004E1640;
      v2._uint64_t countAndFlagsBits = 0x1000000000000010;
      v3._uint64_t countAndFlagsBits = 0;
      v3._object = (void *)0xE000000000000000;
      v16._uint64_t countAndFlagsBits = 0;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v16)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    uint64_t v5 = (double *)(v0 + 72);
  }
  else
  {
    uint64_t v5 = (double *)(v0 + 88);
  }
  double v6 = *v5;
  if (qword_1005F5BA0 != -1) {
    swift_once();
  }
  id v7 = [(id)qword_1006071D0 stringFromSeconds:v6];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  id v11 = [self mainBundle];
  v17._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000001004E1660;
  v12._uint64_t countAndFlagsBits = 0xD000000000000014;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v17);

  sub_100054B78(&qword_1005F7720);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10046D010;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_10004DA4C();
  *(void *)(v14 + 32) = v8;
  *(void *)(v14 + 40) = v10;
  uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

unint64_t sub_1003B1B30()
{
  unint64_t v1 = 0xD00000000000001FLL;
  swift_beginAccess();
  if (!*(void *)(v0 + 24)) {
    return 0xD000000000000013;
  }
  type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
    if (!swift_dynamicCastClass()) {
      return 0xD000000000000013;
    }
  }
  return v1;
}

uint64_t sub_1003B1BD8()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 32);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts25ShareEpisodeContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1003B1C90()
{
  return type metadata accessor for ShareEpisodeContextAction();
}

uint64_t type metadata accessor for ShareEpisodeContextAction()
{
  uint64_t result = qword_100607200;
  if (!qword_100607200) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003B1CE4()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_1003B1D98()
{
  id v1 = sub_1003B0874(v0);
  type metadata accessor for ShareEpisodeContextAction();
  ShareAction.prepareShareController(_:sharingStyle:)();
  return v1;
}

uint64_t sub_1003B1DF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100056D54(v1 + 32, a1);
}

uint64_t sub_1003B1E08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts25ShareEpisodeContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1003B1E7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.iOSShareSheetEpisode(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_1003B1F60(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

void *sub_1003B1FC0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1003B2020(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1003B2080(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1003B20E0(uint64_t a1)
{
  uint64_t result = sub_1003B21E0(&qword_1006009F8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003B2124(uint64_t a1)
{
  uint64_t result = sub_1003B21E0(&qword_100607360);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003B2168()
{
  return sub_1003B21E0(&qword_1006009F8);
}

uint64_t sub_1003B219C(uint64_t a1)
{
  uint64_t result = sub_1003B21E0(&qword_100607368);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003B21E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ShareEpisodeContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B2224(void *a1, int a2, uint64_t a3)
{
  id v78 = (void *)a3;
  LODWORD(v74) = a2;
  uint64_t v4 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v4 - 8);
  os_log_type_t v75 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v77 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  os_log_type_t v64 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for FlowPresentationContext();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  id v73 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v10 - 8);
  unint64_t v68 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  Swift::String v17 = (char *)&v61 - v16;
  uint64_t v18 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v18 - 8);
  int v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for FlowDestination();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v24 = (uint64_t *)((char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1003B3798(a1);
  sub_1003B3BC4(a1);
  [a1 storeId];
  uint64_t v79 = AdamID.init(rawValue:)();
  type metadata accessor for ChannelDetail();
  id v25 = a1;
  uint64_t v26 = sub_1003A9830(v25);

  uint64_t *v24 = v26;
  (*(void (**)(uint64_t *, void, uint64_t))(v22 + 104))(v24, enum case for FlowDestination.channel(_:), v21);
  id v27 = [v25 name];
  int v71 = v20;
  if (v27)
  {
    double v28 = v27;
    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v66 = v29;
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v66 = 0;
  }
  uint64_t v80 = v79;
  unint64_t v72 = sub_1001A5874();
  BinaryInteger.description.getter();
  static MetricsTargetType.lockup.getter();
  id v76 = v25;
  id v30 = [v25 url];
  if (!v30) {
    goto LABEL_7;
  }
  unsigned __int8 v31 = v30;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v32 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v15, 1, v32) == 1)
  {
    sub_100222D54((uint64_t)v15);
LABEL_7:
    uint64_t v34 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v17, 1, 1, v34);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v17, v15, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v17, 0, 1, v32);
LABEL_9:
  sub_100054B78((uint64_t *)&unk_1006027F0);
  type metadata accessor for MetricsData();
  uint64_t v35 = swift_allocObject();
  long long v65 = xmmword_10046D010;
  *(_OWORD *)(v35 + 16) = xmmword_10046D010;
  static MetricsActionType.navigate.getter();
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
  swift_bridgeObjectRelease();
  ScalarDictionary.init()();
  ActionMetrics.init(data:custom:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100222D54((uint64_t)v17);
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v73, enum case for FlowPresentationContext.infer(_:), v70);
  unsigned __int8 v36 = static Link.Presentation.textFollowsTintColor.getter();
  char v37 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v36) {
    Link.Presentation.init(rawValue:)();
  }
  Link.Presentation.init(rawValue:)();
  char v38 = Link.Presentation.init(rawValue:)();
  id v39 = v76;
  if (v38 != v37) {
    Link.Presentation.init(rawValue:)();
  }
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v64, enum case for FlowDestinationPageHeader.standard(_:), v63);
  uint64_t v40 = type metadata accessor for FlowAction();
  swift_allocObject();
  uint64_t v41 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
  id v42 = [v39 podcasts];
  if (v42)
  {
    uint64_t v43 = v42;
    sub_10025719C();
    sub_1003B4458((unint64_t *)&unk_100607390, (void (*)(uint64_t))sub_10025719C);
    uint64_t v44 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1003B2D58(v44);
    LODWORD(v73) = v45;
    swift_bridgeObjectRelease();
  }
  else
  {
    LODWORD(v73) = 0;
  }
  sub_1003B33C0(v39, v77);
  id v46 = [v39 name];
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v70 = v49;
    int v71 = (char *)v48;
  }
  else
  {
    uint64_t v70 = 0;
    int v71 = 0;
  }
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = v65;
  char v51 = BYTE1(v74);
  *(void *)(v50 + 32) = sub_1003B35C0(v39, v74 & 1);
  *(void *)(v50 + 40) = v52;
  uint64_t v69 = sub_1003B3FB8(v39, v51 & 1);
  unint64_t v68 = v53;
  uint64_t v81 = v40;
  uint64_t v82 = sub_1003B4458((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
  uint64_t v80 = v41;
  v85[0] = v79;
  uint64_t v74 = v41;
  swift_retain();
  unint64_t v72 = BinaryInteger.description.getter();
  uint64_t v67 = static MetricsIDType.itsContentID.getter();
  static MetricsTargetType.lockup.getter();
  static MetricsContentKind.channel.getter();
  id v54 = [v39 name];
  if (v54)
  {
    uint64_t v55 = v54;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  unint64_t v56 = v75;
  static ImpressionMetrics.shelfItem(id:idType:uniqueID:impressionType:kind:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
  uint64_t v58 = dispatch thunk of LegacyChannelLockup.__allocating_init(adamId:icon:title:subtitles:eyebrow:clickAction:isExplicit:impressionMetrics:)();
  char v59 = v78;
  sub_1002DFF70((uint64_t)v78, (uint64_t)v85);
  sub_100053884((uint64_t)v85);
  uint64_t v84 = v59[2];
  sub_1000537F4((uint64_t)&v84);
  uint64_t v83 = v59[3];
  sub_1000537F4((uint64_t)&v83);
  sub_1000536BC(v59[4]);
  swift_release();

  return v58;
}

uint64_t static LegacyChannelLockup.Style.library.getter()
{
  return 256;
}

void sub_1003B2D58(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10025719C();
    sub_1003B4458((unint64_t *)&unk_100607390, (void (*)(uint64_t))sub_10025719C);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v12 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_31;
    }
    sub_10025719C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v10 = v23;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_31;
    }
LABEL_10:
    unsigned int v11 = [v10 isExplicit];

    if (v11) {
      goto LABEL_31;
    }
  }
  if (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v3 << 6);
LABEL_9:
    id v10 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v10) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v16) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    ++v3;
    if (!v14)
    {
      uint64_t v3 = v12 + 2;
      if (v12 + 2 >= v16) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v3);
      if (!v14)
      {
        uint64_t v3 = v12 + 3;
        if (v12 + 3 >= v16) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v17 + 8 * v3);
        if (!v14)
        {
          uint64_t v3 = v12 + 4;
          if (v12 + 4 >= v16) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v17 + 8 * v3);
          if (!v14)
          {
            uint64_t v3 = v12 + 5;
            if (v12 + 5 >= v16) {
              goto LABEL_31;
            }
            unint64_t v14 = *(void *)(v17 + 8 * v3);
            if (!v14)
            {
              uint64_t v15 = v12 + 6;
              while (v16 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v3 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_10004E644();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

BOOL static LegacyChannelLockup.Style.Eyebrow.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void LegacyChannelLockup.Style.Eyebrow.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int _s8ShelfKit19LegacyChannelLockupC8PodcastsE5StyleV8SubtitleO9hashValueSivg_0(char a1)
{
  return Hasher._finalize()();
}

uint64_t LegacyChannelLockup.Style.subtitle.getter(char a1)
{
  return a1 & 1;
}

uint64_t LegacyChannelLockup.Style.eyebrow.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t LegacyChannelLockup.Style.init(subtitle:eyebrow:)(char a1, char a2)
{
  return a1 & 1 | ((a2 & 1) << 8);
}

unint64_t sub_1003B30F8()
{
  unint64_t result = qword_100607380;
  if (!qword_100607380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100607380);
  }
  return result;
}

unint64_t sub_1003B3150()
{
  unint64_t result = qword_100607388;
  if (!qword_100607388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100607388);
  }
  return result;
}

uint64_t _s5StyleVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003B3270);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyChannelLockup.Style()
{
  return &type metadata for LegacyChannelLockup.Style;
}

ValueMetadata *type metadata accessor for LegacyChannelLockup.Style.Subtitle()
{
  return &type metadata for LegacyChannelLockup.Style.Subtitle;
}

unsigned char *_s5StyleV8SubtitleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003B3388);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyChannelLockup.Style.Eyebrow()
{
  return &type metadata for LegacyChannelLockup.Style.Eyebrow;
}

uint64_t sub_1003B33C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ArtworkCrop();
  __chkstk_darwin(v4 - 8);
  id v5 = [a1 artworkURL];
  if (v5)
  {
    unsigned int v6 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    [a1 storeId];
    AdamID.init(rawValue:)();
    static ArtworkCrop.boundingBox.getter();
    static ArtworkFormat.preferredFormat.getter();
    ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)();
    uint64_t v7 = type metadata accessor for ArtworkModel();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 0, 1, v7);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ArtworkModel();
    id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a2, 1, 1, v9);
  }
}

uint64_t sub_1003B35C0(id a1, char a2)
{
  if ((a2 & 1) != 0 || (uint64_t)[a1 followedShowCount] < 1)
  {
    id v8 = [self mainBundle];
    v14._object = (void *)0xE000000000000000;
    v9._object = (void *)0x80000001004E1370;
    v9._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v14._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v14);

    sub_100054B78(&qword_1005F7720);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_10046D010;
    id v7 = [a1 resolvedShowCount];
  }
  else
  {
    id v3 = [self mainBundle];
    v4._uint64_t countAndFlagsBits = 0xD000000000000022;
    v13._object = (void *)0xE000000000000000;
    v4._object = (void *)0x80000001004E16D0;
    v5._uint64_t countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v13._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v13);

    sub_100054B78(&qword_1005F7720);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_10046D010;
    id v7 = [a1 followedShowCount];
  }
  *(void *)(v6 + 56) = &type metadata for Int64;
  *(void *)(v6 + 64) = &protocol witness table for Int64;
  *(void *)(v6 + 32) = v7;
  uint64_t v11 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1003B3798(void *a1)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ArtworkCrop();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for ArtworkModel();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for ArtworkRequest();
  uint64_t v21 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LibraryImageProvider();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 logoImageURL];
  if (result)
  {
    uint64_t v15 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v4;
    uint64_t v20 = v7;

    static LibraryImageProvider.background.getter();
    [a1 logoImageWidth];
    [a1 logoImageHeight];
    long long v25 = xmmword_100479150;
    long long v26 = 0u;
    memset(v27, 0, sizeof(v27));
    static ArtworkCrop.boundingBox.getter();
    static ArtworkFormat.preferredFormat.getter();
    ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)();
    [a1 logoImageWidth];
    [a1 logoImageHeight];
    uint64_t v16 = type metadata accessor for CropCode();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v19, 1, 1, v16);
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    id v17 = [self mainScreen];
    [v17 scale];

    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
    ImageProvider.prefetch(artwork:)();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return result;
}

id sub_1003B3BC4(void *a1)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ArtworkCrop();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for ArtworkModel();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for ArtworkRequest();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LibraryImageProvider();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  Swift::String v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 uberBackgroundImageURL];
  if (result)
  {
    uint64_t v16 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v11;
    uint64_t v21 = v7;

    static LibraryImageProvider.background.getter();
    long long v25 = xmmword_100479150;
    long long v26 = 0u;
    memset(v27, 0, sizeof(v27));
    static ArtworkCrop.sr.getter();
    static ArtworkFormat.preferredFormat.getter();
    ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)();
    uint64_t v17 = type metadata accessor for CropCode();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    id v18 = [self mainScreen];
    [v18 scale];

    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
    uint64_t v19 = v20;
    ImageProvider.prefetch(artwork:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v19);
  }
  return result;
}

uint64_t sub_1003B3FB8(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = 0;
  if (a2)
  {
    if ([a1 subscriptionActive])
    {
      id v9 = [a1 subscriptionName];
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v13 = v12;

        id v14 = [a1 name];
        if (!v14) {
          goto LABEL_31;
        }
        uint64_t v15 = v14;
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v18 = v17;

        if (v11 == v16 && v13 == v18)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_25;
        }
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
LABEL_31:
          if (String.count.getter() <= 16)
          {
            uint64_t v45 = v11;
            v49._uint64_t countAndFlagsBits = v11;
            v49._object = v13;
            static CharacterSet.whitespaces.getter();
            v44[1] = sub_1001AA530();
            uint64_t v20 = StringProtocol.components(separatedBy:)();
            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
            uint64_t v21 = *(void *)(v20 + 16);
            uint64_t v46 = v20;
            uint64_t v47 = v13;
            if (v21)
            {
              sub_1001AB688();
              long long v22 = (void **)(v20 + 40);
              long long v23 = _swiftEmptyArrayStorage;
              do
              {
                uint64_t v24 = (uint64_t)*(v22 - 1);
                long long v25 = *v22;
                v49._uint64_t countAndFlagsBits = v24;
                v49._object = v25;
                swift_bridgeObjectRetain();
                if (Collection.isNotEmpty.getter())
                {
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v48 = v23;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_10005986C(0, v23[2] + 1, 1);
                    long long v23 = v48;
                  }
                  unint64_t v28 = v23[2];
                  unint64_t v27 = v23[3];
                  if (v28 >= v27 >> 1)
                  {
                    sub_10005986C(v27 > 1, v28 + 1, 1);
                    long long v23 = v48;
                  }
                  v23[2] = v28 + 1;
                  uint64_t v29 = &v23[2 * v28];
                  v29[4] = v24;
                  void v29[5] = v25;
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
                v22 += 2;
                --v21;
              }
              while (v21);
            }
            else
            {
              long long v23 = _swiftEmptyArrayStorage;
            }
            swift_bridgeObjectRelease();
            unint64_t v30 = v23[2];
            swift_release();
            if (v30 <= 2)
            {
              id v36 = [self mainBundle];
              v37._uint64_t countAndFlagsBits = 0xD000000000000023;
              v51._object = (void *)0xE000000000000000;
              v37._object = (void *)0x80000001004E16A0;
              v38._uint64_t countAndFlagsBits = 0;
              v38._object = (void *)0xE000000000000000;
              v51._uint64_t countAndFlagsBits = 0;
              NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v51);

              sub_100054B78(&qword_1005F7720);
              uint64_t v39 = swift_allocObject();
              *(_OWORD *)(v39 + 16) = xmmword_10046D010;
              *(void *)(v39 + 56) = &type metadata for String;
              *(void *)(v39 + 64) = sub_10004DA4C();
              uint64_t v40 = v47;
              *(void *)(v39 + 32) = v45;
              *(void *)(v39 + 40) = v40;
              uint64_t v41 = String.init(format:_:)();
              uint64_t v43 = v42;
              swift_bridgeObjectRelease();
              v49._uint64_t countAndFlagsBits = v41;
              v49._object = v43;
              uint64_t v8 = StringProtocol.localizedUppercase.getter();
              goto LABEL_26;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
LABEL_25:
      id v31 = [self mainBundle];
      v50._object = (void *)0xE000000000000000;
      v32._object = (void *)0x80000001004E1680;
      v32._uint64_t countAndFlagsBits = 0xD000000000000018;
      v33._uint64_t countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      v50._uint64_t countAndFlagsBits = 0;
      Swift::String v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v50);

      Swift::String v49 = v34;
      sub_1001AA530();
      uint64_t v8 = StringProtocol.localizedUppercase.getter();
LABEL_26:
      swift_bridgeObjectRelease();
      return v8;
    }
    return 0;
  }
  return v8;
}

uint64_t sub_1003B4458(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B45DC(unint64_t a1)
{
  return sub_1003B462C(a1, (unsigned int *)&enum case for MediaRequest.ContentType.podcast(_:), (uint64_t (*)(uint64_t))sub_1003E5158, "Unable to fetch show from server - %s");
}

uint64_t sub_1003B4604(unint64_t a1)
{
  return sub_1003B462C(a1, (unsigned int *)&enum case for MediaRequest.ContentType.podcastEpisode(_:), (uint64_t (*)(uint64_t))sub_1003E4A70, "Unable to fetch episode from server - %s");
}

uint64_t sub_1003B462C(unint64_t a1, unsigned int *a2, uint64_t (*a3)(uint64_t), const char *a4)
{
  id v53 = a4;
  unint64_t v56 = a3;
  unint64_t v66 = a1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  __chkstk_darwin();
  uint64_t v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1006073E0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v60 = v10;
  sub_100054B78(&qword_1005FB050);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v12;
  sub_100054B78((uint64_t *)&unk_1006073F0);
  __chkstk_darwin();
  id v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v14;
  sub_100054B78(&qword_1005FB058);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v16;
  sub_100054B78((uint64_t *)&unk_100607400);
  __chkstk_darwin();
  id v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MediaRequest.RequestType();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin();
  long long v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v65 = v22;
  uint64_t v23 = type metadata accessor for MediaRequest.Params();
  uint64_t v58 = *(void *)(v23 - 8);
  uint64_t v59 = v23;
  __chkstk_darwin();
  unint64_t v68 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for MediaRequest.RequestType.catalog(_:), v19);
  uint64_t v25 = *a2;
  uint64_t v26 = type metadata accessor for MediaRequest.ContentType();
  uint64_t v27 = *(void *)(v26 - 8);
  unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 104);
  os_log_type_t v64 = v18;
  v28(v18, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v18, 0, 1, v26);
  uint64_t v29 = type metadata accessor for MediaRequest.ViewType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 1, 1, v29);
  uint64_t v30 = type metadata accessor for MediaRequest.Relationship();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v14, 1, 1, v30);
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_10046D010;
  unint64_t v70 = v66;
  *(void *)(v31 + 32) = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(v31 + 40) = v32;
  uint64_t v33 = type metadata accessor for MediaRequest.URLFragment();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 1, 1, v33);
  uint64_t v34 = type metadata accessor for MediaRequest.PageName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v10, 1, 1, v34);
  uint64_t v35 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v8, 1, 1, v35);
  unint64_t v66 = sub_1003B5774((uint64_t)_swiftEmptyArrayStorage, &qword_100607468, &qword_100607470, (uint64_t (*)(char *))sub_1003B5CF8, (uint64_t (*)(void))&type metadata accessor for MediaRequest.Relationship);
  sub_1003B5774((uint64_t)_swiftEmptyArrayStorage, &qword_100607468, &qword_100607470, (uint64_t (*)(char *))sub_1003B5CF8, (uint64_t (*)(void))&type metadata accessor for MediaRequest.Relationship);
  sub_1003B5544((uint64_t)_swiftEmptyArrayStorage);
  sub_1003B5774((uint64_t)_swiftEmptyArrayStorage, &qword_1005F64D8, (uint64_t *)&unk_1005F64E0, (uint64_t (*)(char *))sub_1003B59B0, (uint64_t (*)(void))&type metadata accessor for MediaRequest.ContentType);
  sub_1003B5774((uint64_t)_swiftEmptyArrayStorage, &qword_1005F64D8, (uint64_t *)&unk_1005F64E0, (uint64_t (*)(char *))sub_1003B59B0, (uint64_t (*)(void))&type metadata accessor for MediaRequest.ContentType);
  sub_1003B5774((uint64_t)_swiftEmptyArrayStorage, &qword_100607428, &qword_100607430, (uint64_t (*)(char *))sub_1003B5A84, (uint64_t (*)(void))&type metadata accessor for MediaRequest.Filter);
  sub_1003B5774((uint64_t)_swiftEmptyArrayStorage, &qword_100607418, &qword_100607420, (uint64_t (*)(char *))sub_1003B59B0, (uint64_t (*)(void))&type metadata accessor for MediaRequest.ContentType);
  id v36 = v68;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)();
  id v37 = *(id *)(v67 + OBJC_IVAR____TtC8Podcasts22ClassKitContextBuilder_requestController);
  uint64_t v38 = sub_1003B6D6C();
  LOBYTE(v31) = v39;

  if (v31)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    swift_errorRetain();
    uint64_t v46 = v57;
    static OS_os_log.classKit.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      Swift::String v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v69 = v38;
      unint64_t v70 = v50;
      *(_DWORD *)Swift::String v49 = 136315138;
      swift_errorRetain();
      sub_100054B78(&qword_100603F70);
      uint64_t v51 = String.init<A>(describing:)();
      uint64_t v69 = sub_10004B974(v51, v52, (uint64_t *)&v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002AE1C8(v38, 1);
      sub_1002AE1C8(v38, 1);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, v53, v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1002AE1C8(v38, 1);
      sub_1002AE1C8(v38, 1);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v55);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v68, v59);
      return 0;
    }

    sub_1002AE1C8(v38, 1);
    sub_1002AE1C8(v38, 1);
    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v55);
LABEL_13:
    (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v59);
    return 0;
  }
  unint64_t v40 = v56(v38);
  if (!v40)
  {
    sub_1002AE1C8(v38, 0);
    goto LABEL_13;
  }
  unint64_t v41 = v40;
  uint64_t v42 = v40 & 0xFFFFFFFFFFFFFF8;
  if (!(v40 >> 62))
  {
    uint64_t result = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_5;
    }
LABEL_16:
    sub_1002AE1C8(v38, 0);
    swift_bridgeObjectRelease();
    id v45 = 0;
    goto LABEL_17;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v41 & 0xC000000000000001) != 0)
  {
    id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if (*(void *)(v42 + 16))
  {
    id v44 = *(id *)(v41 + 32);
LABEL_8:
    id v45 = v44;
    sub_1002AE1C8(v38, 0);
    swift_bridgeObjectRelease();
LABEL_17:
    (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v59);
    return (uint64_t)v45;
  }
  __break(1u);
  return result;
}

id sub_1003B50C8(uint64_t a1)
{
  return sub_1003B5170(a1, (uint64_t (*)(uint64_t))sub_1003B695C, (void (*)(void))sub_1003A9AF4, (uint64_t (*)(uint64_t))sub_1003B45DC, (void (*)(void))sub_100359D88);
}

id sub_1003B511C(uint64_t a1)
{
  return sub_1003B5170(a1, (uint64_t (*)(uint64_t))sub_1003B6F80, (void (*)(void))sub_1003D6D28, (uint64_t (*)(uint64_t))sub_1003B4604, (void (*)(void))sub_10035AACC);
}

id sub_1003B5170(uint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(void), uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  sub_100054B78(&qword_1006073D8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = a2(a1);
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    a3();
    uint64_t v16 = type metadata accessor for CLSContextMetadata();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v13, 1, v16) == 1)
    {

      uint64_t v17 = (uint64_t)v13;
LABEL_7:
      sub_1003B7398(v17);
      return 0;
    }
    id v21 = sub_100257914(0);

    uint64_t v22 = (uint64_t)v13;
    goto LABEL_11;
  }
  uint64_t v18 = a4(a1);
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    a5();
    uint64_t v20 = type metadata accessor for CLSContextMetadata();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v11, 1, v20) == 1)
    {

      uint64_t v17 = (uint64_t)v11;
      goto LABEL_7;
    }
    id v21 = sub_100257914(0);

    uint64_t v22 = (uint64_t)v11;
LABEL_11:
    sub_1003B73F8(v22);
    return v21;
  }
  return 0;
}

id sub_1003B5350()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClassKitContextBuilder();
  return [super dealloc];
}

uint64_t type metadata accessor for ClassKitContextBuilder()
{
  return self;
}

Swift::Int sub_1003B53F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a5)
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(a7 + 16);
    *(void *)(a7 + 16) = a5;
    unsigned __int8 v10 = *(unsigned char *)(a7 + 24);
    *(unsigned char *)(a7 + 24) = 1;
    swift_errorRetain();
    uint64_t v11 = v9;
    unsigned __int8 v12 = v10;
  }
  else if (a1)
  {
    swift_beginAccess();
    uint64_t v14 = *(void *)(a7 + 16);
    *(void *)(a7 + 16) = a1;
    unsigned __int8 v15 = *(unsigned char *)(a7 + 24);
    *(unsigned char *)(a7 + 24) = 0;
    swift_bridgeObjectRetain();
    uint64_t v11 = v14;
    unsigned __int8 v12 = v15;
  }
  else
  {
    sub_1003B74F0();
    uint64_t v16 = swift_allocError();
    swift_beginAccess();
    uint64_t v11 = *(void *)(a7 + 16);
    *(void *)(a7 + 16) = v16;
    unsigned __int8 v12 = *(unsigned char *)(a7 + 24);
    *(unsigned char *)(a7 + 24) = 1;
  }
  sub_1003B7544(v11, v12);
  return OS_dispatch_semaphore.signal()();
}

unint64_t sub_1003B5508(uint64_t a1)
{
  return sub_1003B5774(a1, &qword_100607468, &qword_100607470, (uint64_t (*)(char *))sub_1003B5CF8, (uint64_t (*)(void))&type metadata accessor for MediaRequest.Relationship);
}

unint64_t sub_1003B5544(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100607448);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100054B78(&qword_100607450);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100054BBC(v12, (uint64_t)v5, &qword_100607448);
    unint64_t result = sub_1003B5CF8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for MediaRequest.Relationship();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003B5738(uint64_t a1)
{
  return sub_1003B5774(a1, &qword_100607428, &qword_100607430, (uint64_t (*)(char *))sub_1003B5A84, (uint64_t (*)(void))&type metadata accessor for MediaRequest.Filter);
}

unint64_t sub_1003B5774(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(void))
{
  uint64_t v29 = a5;
  uint64_t v30 = a4;
  uint64_t v8 = sub_100054B78(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100054B78(a3);
  uint64_t v12 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = *(int *)(v8 + 48);
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v28[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_100054BBC(v18, (uint64_t)v11, a2);
    unint64_t result = v30(v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = v29(0);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    *(void *)(v13[7] + 8 * v22) = *(void *)&v11[v15];
    uint64_t v25 = v13[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    void v13[2] = v27;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003B5974(uint64_t a1)
{
  return sub_1003B5774(a1, &qword_100607418, &qword_100607420, (uint64_t (*)(char *))sub_1003B59B0, (uint64_t (*)(void))&type metadata accessor for MediaRequest.ContentType);
}

unint64_t sub_1003B59B0(uint64_t a1)
{
  type metadata accessor for MediaRequest.ContentType();
  sub_1003B755C(&qword_1005FB948, (void (*)(uint64_t))&type metadata accessor for MediaRequest.ContentType);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1003B5B58(a1, v2, (uint64_t (*)(void))&type metadata accessor for MediaRequest.ContentType, (unint64_t *)&unk_1005FB950, (void (*)(uint64_t))&type metadata accessor for MediaRequest.ContentType, (uint64_t)&protocol conformance descriptor for MediaRequest.ContentType);
}

unint64_t sub_1003B5A84(uint64_t a1)
{
  type metadata accessor for MediaRequest.Filter();
  sub_1003B755C(&qword_100607438, (void (*)(uint64_t))&type metadata accessor for MediaRequest.Filter);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1003B5B58(a1, v2, (uint64_t (*)(void))&type metadata accessor for MediaRequest.Filter, &qword_100607440, (void (*)(uint64_t))&type metadata accessor for MediaRequest.Filter, (uint64_t)&protocol conformance descriptor for MediaRequest.Filter);
}

unint64_t sub_1003B5B58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    unint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_1003B755C(v23, v24);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1003B5CF8(uint64_t a1)
{
  type metadata accessor for MediaRequest.Relationship();
  sub_1003B755C(&qword_100607458, (void (*)(uint64_t))&type metadata accessor for MediaRequest.Relationship);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1003B5B58(a1, v2, (uint64_t (*)(void))&type metadata accessor for MediaRequest.Relationship, &qword_100607460, (void (*)(uint64_t))&type metadata accessor for MediaRequest.Relationship, (uint64_t)&protocol conformance descriptor for MediaRequest.Relationship);
}

id sub_1003B5DCC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchQoS();
  __chkstk_darwin();
  type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin();
  uint64_t v8 = OBJC_IVAR____TtC8Podcasts22ClassKitContextBuilder_workQueue;
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v9 = v2;
  static OS_dispatch_queue.Attributes.concurrent.getter();
  static DispatchQoS.unspecified.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  uint64_t v10 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v2[v8] = v10;
  *(void *)&v9[OBJC_IVAR____TtC8Podcasts22ClassKitContextBuilder_requestController] = a1;
  id v11 = a1;
  id v12 = v10;
  dispatch thunk of MediaRequestController.responseQueue.setter();

  unint64_t v13 = (objc_class *)type metadata accessor for ClassKitContextBuilder();
  v15.receiver = v9;
  v15.super_class = v13;
  return [super init];
}

uint64_t sub_1003B5FF4(uint64_t a1, unint64_t a2, char *a3)
{
  uint64_t v59 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v59 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v11 = (char *)&v58 - v10;
  __chkstk_darwin();
  unint64_t v13 = (char *)&v58 - v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v58 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    a3 = sub_10004CEAC(0, *((void *)a3 + 2) + 1, 1, a3);
  }
  unint64_t v16 = *((void *)a3 + 2);
  unint64_t v15 = *((void *)a3 + 3);
  if (v16 >= v15 >> 1) {
    a3 = sub_10004CEAC((char *)(v15 > 1), v16 + 1, 1, a3);
  }
  *((void *)a3 + 2) = v16 + 1;
  unint64_t v17 = &a3[16 * v16];
  *((void *)v17 + 4) = a1;
  *((void *)v17 + 5) = a2;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v19 = HIBYTE(a2) & 0xF;
  uint64_t v20 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v21 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v21) {
    goto LABEL_50;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_10035C284(a1);
    char v25 = v57;
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v22 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v22 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v23 = (uint64_t)sub_10035C26C(v22, v20, 10);
    char v25 = v24 & 1;
LABEL_48:
    if ((v25 & 1) == 0 && ([self isEmpty:v23] & 1) == 0)
    {
      uint64_t v40 = *((void *)a3 + 2);
      if (v40 == 2 || v40 == 1)
      {
        swift_bridgeObjectRelease();
        __chkstk_darwin();
        *(&v58 - 2) = v3;
        *(&v58 - 1) = v23;
        sub_100054B78((uint64_t *)&unk_100607478);
        OS_dispatch_queue.sync<A>(execute:)();
        char v39 = (void *)v60[0];
        if (v60[0])
        {
          sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
          id v41 = v39;
          static OS_os_log.classKit.getter();
          uint64_t v42 = v41;
          uint64_t v43 = Logger.logObject.getter();
          os_log_type_t v44 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v43, v44))
          {
            id v45 = (uint8_t *)swift_slowAlloc();
            uint64_t v46 = (void *)swift_slowAlloc();
            *(_DWORD *)id v45 = 138412290;
            v60[0] = (uint64_t)v42;
            uint64_t v42 = v42;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v46 = v39;

            _os_log_impl((void *)&_mh_execute_header, v43, v44, "Built context - %@", v45, 0xCu);
            sub_100054B78((uint64_t *)&unk_1005F9F00);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            uint64_t v43 = v42;
          }
          uint64_t v52 = v58;
          uint64_t v53 = v59;

          (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
        }
        return (uint64_t)v39;
      }
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.classKit.getter();
      swift_bridgeObjectRetain();
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v47, v48))
      {
        Swift::String v49 = (uint8_t *)swift_slowAlloc();
        v60[0] = swift_slowAlloc();
        *(_DWORD *)Swift::String v49 = 136315138;
        uint64_t v50 = Array.description.getter();
        uint64_t v61 = sub_10004B974(v50, v51, v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "Invalid identifier path - %s", v49, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v59);
      return 0;
    }
LABEL_50:
    swift_bridgeObjectRelease();
    uint64_t v35 = v58;
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.classKit.getter();
    swift_bridgeObjectRetain_n();
    id v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_10004B974(a1, a2, v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Invalid store id - %s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v59);
    return 0;
  }
  v60[0] = a1;
  v60[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v19) {
      goto LABEL_76;
    }
    if (v19 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_35;
    }
    uint64_t v23 = (BYTE1(a1) - 48);
    if (v19 != 2)
    {
      if ((BYTE2(a1) - 48) > 9u) {
        goto LABEL_35;
      }
      uint64_t v23 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
      uint64_t v26 = v19 - 3;
      if (v26)
      {
        uint64_t v27 = (unsigned __int8 *)v60 + 3;
        while (1)
        {
          unsigned int v28 = *v27 - 48;
          if (v28 > 9) {
            goto LABEL_35;
          }
          uint64_t v29 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
            goto LABEL_35;
          }
          uint64_t v23 = v29 + v28;
          if (__OFADD__(v29, v28)) {
            goto LABEL_35;
          }
          char v25 = 0;
          ++v27;
          if (!--v26) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_47:
    char v25 = 0;
    goto LABEL_48;
  }
  if (a1 != 45)
  {
    if (!v19 || (a1 - 48) > 9u) {
      goto LABEL_35;
    }
    uint64_t v23 = (a1 - 48);
    if (v19 != 1)
    {
      if ((BYTE1(a1) - 48) > 9u) {
        goto LABEL_35;
      }
      uint64_t v23 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      uint64_t v30 = v19 - 2;
      if (v30)
      {
        uint64_t v31 = (unsigned __int8 *)v60 + 2;
        while (1)
        {
          unsigned int v32 = *v31 - 48;
          if (v32 > 9) {
            goto LABEL_35;
          }
          uint64_t v33 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
            goto LABEL_35;
          }
          uint64_t v23 = v33 + v32;
          if (__OFADD__(v33, v32)) {
            goto LABEL_35;
          }
          char v25 = 0;
          ++v31;
          if (!--v30) {
            goto LABEL_48;
          }
        }
      }
    }
    goto LABEL_47;
  }
  if (v19)
  {
    if (v19 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      if (v19 == 2)
      {
        char v25 = 0;
        uint64_t v23 = -(uint64_t)(BYTE1(a1) - 48);
        goto LABEL_48;
      }
      if ((BYTE2(a1) - 48) <= 9u)
      {
        uint64_t v23 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
        uint64_t v34 = v19 - 3;
        if (!v34) {
          goto LABEL_47;
        }
        uint64_t v54 = (unsigned __int8 *)v60 + 3;
        while (1)
        {
          unsigned int v55 = *v54 - 48;
          if (v55 > 9) {
            break;
          }
          uint64_t v56 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
            break;
          }
          uint64_t v23 = v56 - v55;
          if (__OFSUB__(v56, v55)) {
            break;
          }
          char v25 = 0;
          ++v54;
          if (!--v34) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_35:
    uint64_t v23 = 0;
    char v25 = 1;
    goto LABEL_48;
  }
  __break(1u);
LABEL_76:
  __break(1u);
  return result;
}

unint64_t sub_1003B695C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v27 - v6;
  id v8 = [self sharedInstance];
  uint64_t v9 = [v8 mainOrPrivateContext];

  id v10 = [self predicateForPodcastStoreId:a1];
  type metadata accessor for CoreDataFetcher();
  unint64_t result = static CoreDataFetcher.fetchPodcasts(for:by:with:)();
  if (!result)
  {
LABEL_19:
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.classKit.getter();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      char v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v25 = 134217984;
      uint64_t v28 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to find show in local database - %lld", v25, 0xCu);
      swift_slowDealloc();
      uint64_t v26 = v9;
    }
    else
    {
      uint64_t v26 = v23;
      uint64_t v23 = v9;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  unint64_t v12 = result;
  unint64_t v13 = result >> 62;
  if (!(result >> 62))
  {
    uint64_t v14 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = v14 == 1;
    if (v14 >= 1) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
  BOOL v15 = v22 == 1;
  if (v22 < 1)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_4:
  if (!v15)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.classKit.getter();
    unint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = v2;
      uint64_t v28 = a1;
      uint64_t v19 = v18;
      *(_DWORD *)uint64_t v18 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Found more than one show with store ID - %lld", v19, 0xCu);
      uint64_t v2 = v27;
      swift_slowDealloc();
    }

    unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  }
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (!v20)
    {
LABEL_16:

      swift_bridgeObjectRelease();
      return v20;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v20) {
      goto LABEL_16;
    }
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_15;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v21 = *(id *)(v12 + 32);
LABEL_15:
    uint64_t v20 = (uint64_t)v21;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B6D6C()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (uint64_t *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.notOnQueue(_:), v0);
  char v4 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    dispatch_semaphore_t v6 = dispatch_semaphore_create(0);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = 0;
    *(unsigned char *)(v7 + 24) = -1;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v7;
    uint64_t v9 = v6;
    swift_retain();
    dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:callback:)();
    swift_release();
    OS_dispatch_semaphore.wait()();
    uint64_t result = swift_beginAccess();
    int v10 = *(unsigned __int8 *)(v7 + 24);
    if (v10 != 255)
    {
      uint64_t v11 = *(void *)(v7 + 16);
      sub_1003B74E4(v11, v10 & 1);

      swift_release();
      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1003B6F80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v27 - v6;
  id v8 = [self sharedInstance];
  uint64_t v9 = [v8 mainOrPrivateContext];

  id v10 = [self predicateForEpisodeStoreTrackId:a1];
  type metadata accessor for CoreDataFetcher();
  unint64_t result = static CoreDataFetcher.fetchEpisodes(for:sortDescriptors:fetchLimit:with:)();
  if (!result)
  {
LABEL_19:
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.classKit.getter();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      char v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v25 = 134217984;
      uint64_t v28 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to find episode in local database - %lld", v25, 0xCu);
      swift_slowDealloc();
      uint64_t v26 = v9;
    }
    else
    {
      uint64_t v26 = v23;
      uint64_t v23 = v9;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  unint64_t v12 = result;
  unint64_t v13 = result >> 62;
  if (!(result >> 62))
  {
    uint64_t v14 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = v14 == 1;
    if (v14 >= 1) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
  BOOL v15 = v22 == 1;
  if (v22 < 1)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_4:
  if (!v15)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.classKit.getter();
    unint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = v2;
      uint64_t v28 = a1;
      uint64_t v19 = v18;
      *(_DWORD *)uint64_t v18 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Found more than one episode with store ID - %lld", v19, 0xCu);
      uint64_t v2 = v27;
      swift_slowDealloc();
    }

    unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  }
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (!v20)
    {
LABEL_16:

      swift_bridgeObjectRelease();
      return v20;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v20) {
      goto LABEL_16;
    }
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_15;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v21 = *(id *)(v12 + 32);
LABEL_15:
    uint64_t v20 = (uint64_t)v21;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B7398(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1006073D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003B73F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CLSContextMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003B7454()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 255) {
    sub_1002AE1C8(*(void *)(v0 + 16), v1 & 1);
  }

  return swift_deallocObject();
}

uint64_t sub_1003B749C()
{
  swift_release();

  return swift_deallocObject();
}

Swift::Int sub_1003B74DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003B53F4(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_1003B74E4(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

unint64_t sub_1003B74F0()
{
  unint64_t result = qword_100607410;
  if (!qword_100607410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100607410);
  }
  return result;
}

uint64_t sub_1003B7544(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1002AE1C8(result, a2 & 1);
  }
  return result;
}

uint64_t sub_1003B755C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1003B75A4@<X0>(void *a1@<X8>)
{
  id result = sub_1003B511C(*(void *)(v1 + 24));
  *a1 = result;
  return result;
}

id sub_1003B75E4@<X0>(void *a1@<X8>)
{
  id result = sub_1003B50C8(*(void *)(v1 + 24));
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClassKitError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1003B76C0);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassKitError()
{
  return &type metadata for ClassKitError;
}

unint64_t sub_1003B76FC()
{
  unint64_t result = qword_100607488;
  if (!qword_100607488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100607488);
  }
  return result;
}

id sub_1003B7750()
{
  uint64_t v1 = v0;
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unsigned int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v1 type];
  swift_bridgeObjectRetain();
  id v9 = [v1 title];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v10 = objc_allocWithZone((Class)CLSContext);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithType:v8 identifier:v11 title:v12];

  [v13 setAssignable:[v1 isAssignable]];
  [v13 setDisplayOrder:[v1 displayOrder]];
  id v14 = [v1 universalLinkURL];
  if (v14)
  {
    BOOL v15 = v14;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = v23;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v4, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v16) == 1)
    {
      uint64_t v18 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v17);
      uint64_t v18 = v19;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v16);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v23);
    uint64_t v18 = 0;
  }
  [v13 setUniversalLinkURL:v18];

  id v20 = [v1 thumbnail];
  [v13 setThumbnail:v20];

  return v13;
}

void sub_1003B7A94(uint64_t a1, uint64_t a2)
{
  sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
  sub_100054B78(&qword_1005F7720);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10046D030;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 56) = sub_10004D29C(0, &qword_1005F88B0);
  *(void *)(v5 + 64) = sub_1003B80D4(&qword_100607490, &qword_1005F88B0);
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 96) = sub_10004D29C(0, (unint64_t *)&unk_1005F91D0);
  *(void *)(v5 + 104) = sub_1003B80D4(&qword_100607498, (unint64_t *)&unk_1005F91D0);
  *(void *)(v5 + 72) = v2;
  id v7 = v2;
  id v8 = NSPredicate.init(format:_:)();
  id v9 = [self shared];
  id v10 = (void *)swift_allocObject();
  v10[2] = v8;
  v10[3] = a1;
  v10[4] = a2;
  v13[4] = sub_1003B8164;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_1003B8024;
  void v13[3] = &unk_100567820;
  NSString v11 = _Block_copy(v13);
  id v12 = v8;
  swift_retain();
  swift_release();
  [v9 contextsMatchingPredicate:v12 completion:v11];
  _Block_release(v11);
}

uint64_t sub_1003B7CD0(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v8 = type metadata accessor for Logger();
  __chkstk_darwin(v8);
  NSString v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v33 = v9;
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    swift_errorRetain();
    static OS_os_log.classKit.getter();
    swift_errorRetain();
    id v12 = a3;
    swift_errorRetain();
    id v13 = v12;
    id v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    int v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v31 = a1;
      uint64_t v18 = v17;
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v34 = (uint64_t)v13;
      uint64_t v35 = v29;
      *(_DWORD *)uint64_t v18 = 138412546;
      unsigned int v32 = a4;
      uint64_t v30 = v8;
      int v28 = v16;
      id v20 = v13;
      os_log_t v27 = v14;
      id v21 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v19 = v13;

      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v34 = a2;
      swift_errorRetain();
      sub_100054B78(&qword_100603F70);
      uint64_t v22 = String.init<A>(describing:)();
      uint64_t v34 = sub_10004B974(v22, v23, &v35);
      a4 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v24 = v27;
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v28, "Error loading contexts for predicate %@ - %s", (uint8_t *)v18, 0x16u);
      sub_100054B78((uint64_t *)&unk_1005F9F00);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v31;
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v30);
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v8);
    }
  }
  return a4(a1);
}

void sub_1003B8024(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_10004D29C(0, (unint64_t *)&unk_1005F91D0);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1003B80D4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004D29C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B8124()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003B8164(uint64_t a1, uint64_t a2)
{
  return sub_1003B7CD0(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(void))(v2 + 24));
}

void *sub_1003B8170(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
  if (a3 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v7 = i - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(a3 + 8 * i);
          swift_retain();
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        uint64_t v13 = v8;
        a1(&v12, &v13);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return (void *)swift_bridgeObjectRelease();
        }
        swift_release();
        if (v12)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return (void *)v14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

id sub_1003B8324()
{
  [*(id *)&v0[OBJC_IVAR____TtC8Podcasts19StationListObserver_stationsObserver] setDelegate:0];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StationListObserver();
  [super dealloc];
}

uint64_t sub_1003B8494()
{
  return type metadata accessor for StationListObserver();
}

uint64_t (*sub_1003B852C())(void *)
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8Podcasts19StationListObserver_didChange);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  if (v2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = sub_1001B5718;
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_10004ACDC(v2);
  return v5;
}

void (*sub_1003B85D4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = OBJC_IVAR____TtC8Podcasts19StationListObserver_didChange;
  v3[5] = *v1;
  v3[6] = v5;
  id v6 = (uint64_t *)(v4 + v5);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*v6)
  {
    uint64_t v8 = v6[1];
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v8;
    uint64_t v10 = sub_1001B5588;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  v3[3] = v10;
  v3[4] = v9;
  return sub_1003B86A0;
}

void sub_1003B86A0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    if (v3)
    {
      uint64_t v4 = v2[4];
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v4;
      id v6 = sub_1001B5550;
      goto LABEL_7;
    }
  }
  else if (v3)
  {
    uint64_t v7 = v2[4];
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v7;
    id v6 = sub_1001B572C;
    goto LABEL_7;
  }
  id v6 = 0;
  uint64_t v5 = 0;
LABEL_7:
  uint64_t v8 = (uint64_t (**)(uint64_t))(v2[5] + v2[6]);
  void *v8 = v6;
  v8[1] = (uint64_t (*)(uint64_t))v5;
  swift_endAccess();

  free(v2);
}

uint64_t sub_1003B876C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003B87A4()
{
  uint64_t v1 = type metadata accessor for StationListOptions();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_sync_enter(v0);
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC8Podcasts19StationListObserver_stationsObserver];
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, &v0[OBJC_IVAR____TtC8Podcasts19StationListObserver_options], v1);
  id v6 = v5;
  uint64_t v7 = sub_10001BF34(v6, (uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts19StationListObserver_currentValue] = v7;
  swift_bridgeObjectRelease();
  objc_sync_exit(v0);
  uint64_t v8 = &v0[OBJC_IVAR____TtC8Podcasts19StationListObserver_didChange];
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *(void (**)(uint64_t))v8;
  if (*(void *)v8)
  {
    sub_10004ACDC((uint64_t)v10);
    uint64_t v11 = swift_bridgeObjectRetain();
    v10(v11);
    sub_1000536BC((uint64_t)v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003B893C()
{
  uint64_t v1 = type metadata accessor for StationListOptions();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1003B8A08()
{
  return swift_deallocObject();
}

uint64_t sub_1003B8A18()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003B8A50()
{
  return swift_deallocObject();
}

uint64_t sub_1003B8A70()
{
  sub_100054B78(&qword_100607D60);
  __chkstk_darwin();
  uint64_t v25 = (uint64_t)&v25 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v25 - v1;
  __chkstk_darwin();
  uint64_t v4 = (char *)&v25 - v3;
  uint64_t v5 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  uint64_t v27 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v25 - v8;
  __chkstk_darwin();
  uint64_t v26 = (uint64_t)&v25 - v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v25 - v11;
  sub_100054B78(&qword_100607CB0);
  __chkstk_darwin();
  unint64_t v14 = (NSURL *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = URL.host.getter();
  if (!v16) {
    return 0;
  }
  uint64_t v17 = v15;
  uint64_t v18 = v16;
  if ((v15 != 0x6979616C50776F6ELL || v16 != 0xEA0000000000676ELL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (v17 == 0x6573776F7262 && v18 == 0xE600000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      type metadata accessor for PodcastsURLBrowseCommand();
      return swift_allocObject();
    }
    if (v17 == 1852141679 && v18 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1003B93F0(v14);
      type metadata accessor for PodcastsURLOpenCommand(0);
      uint64_t v19 = swift_allocObject();
      sub_1003BBA70((uint64_t)v14, v19 + OBJC_IVAR____TtC8Podcasts22PodcastsURLOpenCommand_widgetContext);
      return v19;
    }
    if (v17 == 2003789939 && v18 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1003B95BC((uint64_t)v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v5) == 1)
      {
        uint64_t v20 = (uint64_t)v4;
LABEL_20:
        sub_100054B1C(v20, &qword_100607D60);
        return 0;
      }
      sub_10035C1A8((uint64_t)v4, (uint64_t)v12);
      uint64_t v22 = v26;
      sub_10035C1A8((uint64_t)v12, v26);
      type metadata accessor for PodcastsURLShowCommand(0);
    }
    else if (v17 == 2036427888 && v18 == 0xE400000000000000 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      sub_1003B95BC((uint64_t)v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v2, 1, v5) == 1)
      {
        uint64_t v20 = (uint64_t)v2;
        goto LABEL_20;
      }
      sub_10035C1A8((uint64_t)v2, (uint64_t)v9);
      uint64_t v22 = v26;
      sub_10035C1A8((uint64_t)v9, v26);
      type metadata accessor for PodcastsURLPlayCommand(0);
    }
    else
    {
      if (v17 == 0x79616C70776F6873 && v18 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v24 = v25;
      sub_1003B95BC(v25);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v24, 1, v5) == 1)
      {
        uint64_t v20 = v24;
        goto LABEL_20;
      }
      sub_10035C1A8(v24, (uint64_t)v7);
      uint64_t v22 = v26;
      sub_10035C1A8((uint64_t)v7, v26);
      type metadata accessor for PodcastsURLShowAndPlayCommand(0);
    }
    uint64_t v19 = swift_allocObject();
    sub_10035C1A8(v22, v19 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
    return v19;
  }
  swift_bridgeObjectRelease();
  type metadata accessor for PodcastsURLNowPlayingCommand();
  return swift_allocObject();
}

uint64_t type metadata accessor for PodcastsURLCommand()
{
  return self;
}

uint64_t type metadata accessor for PodcastsURLNowPlayingCommand()
{
  return self;
}

uint64_t type metadata accessor for PodcastsURLBrowseCommand()
{
  return self;
}

uint64_t sub_1003B90A0()
{
  return sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts22PodcastsURLOpenCommand_widgetContext, &qword_100607CB0);
}

uint64_t sub_1003B90CC()
{
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts22PodcastsURLOpenCommand_widgetContext, &qword_100607CB0);

  return swift_deallocClassInstance();
}

uint64_t sub_1003B9138()
{
  return type metadata accessor for PodcastsURLOpenCommand(0);
}

uint64_t type metadata accessor for PodcastsURLOpenCommand(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_100607770);
}

uint64_t sub_1003B9160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003B9284(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1003B9178);
}

void sub_1003B9178()
{
  if (!qword_100607780)
  {
    type metadata accessor for MetricsWidgetContext();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100607780);
    }
  }
}

uint64_t sub_1003B91D0()
{
  return sub_10039B954(v0 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
}

uint64_t sub_1003B91E0()
{
  sub_10039B954(v0 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);

  return swift_deallocClassInstance();
}

uint64_t sub_1003B9244()
{
  return type metadata accessor for PodcastsURLEpisodeCommand(0);
}

uint64_t type metadata accessor for PodcastsURLEpisodeCommand(uint64_t a1)
{
  return sub_10004F778(a1, qword_100607830);
}

uint64_t sub_1003B926C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003B9284(a1, a2, a3, type metadata accessor for PodcastsURLEpisodeParameters);
}

uint64_t sub_1003B9284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PodcastsURLEpisodeParameters(uint64_t a1)
{
  return sub_10004F778(a1, qword_100607D10);
}

uint64_t sub_1003B933C()
{
  return type metadata accessor for PodcastsURLShowCommand(0);
}

uint64_t type metadata accessor for PodcastsURLShowCommand(uint64_t a1)
{
  return sub_10004F778(a1, qword_1006078E8);
}

uint64_t sub_1003B9368()
{
  return type metadata accessor for PodcastsURLPlayCommand(0);
}

uint64_t type metadata accessor for PodcastsURLPlayCommand(uint64_t a1)
{
  return sub_10004F778(a1, qword_1006079A0);
}

uint64_t sub_1003B9390()
{
  return type metadata accessor for PodcastsURLShowAndPlayCommand(0);
}

uint64_t type metadata accessor for PodcastsURLShowAndPlayCommand(uint64_t a1)
{
  return sub_10004F778(a1, qword_100607A58);
}

uint64_t sub_1003B93B8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1003B93F0@<X0>(NSURL *a1@<X8>)
{
  URL._bridgeToObjectiveC()(a1);
  uint64_t v3 = v2;
  id v4 = [v2 pf_queryAsDictionary];

  if (v4)
  {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    strcpy((char *)&v12, "widgetContext");
    HIWORD(v12) = -4864;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v5 + 16) && (unint64_t v6 = sub_100226C5C((uint64_t)v11), (v7 & 1) != 0))
    {
      sub_10004D328(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v12);
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_100172F18((uint64_t)v11);
    if (*((void *)&v13 + 1)) {
      swift_dynamicCast();
    }
    else {
      sub_100054B1C((uint64_t)&v12, &qword_1005F5D30);
    }
    static MetricsWidgetContext.decodeFromString(_:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = type metadata accessor for MetricsWidgetContext();
    uint64_t v9 = *(uint64_t (**)(NSURL *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a1, 1, 1, v8);
  }
}

uint64_t sub_1003B95BC@<X0>(uint64_t a1@<X8>)
{
  sub_100054B78(&qword_100607CB0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  uint64_t v50 = *(void *)(v4 - 8);
  __chkstk_darwin();
  unint64_t v6 = (NSURL *)((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = (char *)((char *)&v47 - (char *)v6);
  URL._bridgeToObjectiveC()(v6);
  uint64_t v9 = v8;
  id v10 = [v8 pf_queryAsDictionary];

  if (v10)
  {
    uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    *((void *)v7 + 4) = 0;
    *(_OWORD *)char v7 = 0u;
    *((_OWORD *)v7 + 1) = 0u;
    v7[40] = 1;
    *((void *)v7 + 6) = 0;
    v7[56] = 1;
    *(_WORD *)(v7 + 57) = 514;
    uint64_t v12 = (uint64_t)&v7[*(int *)(v4 + 40)];
    uint64_t v13 = type metadata accessor for MetricsWidgetContext();
    unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v49 = v12;
    v14(v12, 1, 1, v13);
    *(void *)&long long v57 = 0x5574736163646F70;
    *((void *)&v57 + 1) = 0xEB00000000646975;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v11 + 16) && (unint64_t v15 = sub_100226C5C((uint64_t)v56), (v16 & 1) != 0))
    {
      sub_10004D328(*(void *)(v11 + 56) + 32 * v15, (uint64_t)&v57);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    sub_100172F18((uint64_t)v56);
    if (*((void *)&v58 + 1))
    {
      int v17 = swift_dynamicCast();
      if (v17) {
        uint64_t v18 = v53;
      }
      else {
        uint64_t v18 = 0;
      }
      if (v17) {
        uint64_t v19 = v54;
      }
      else {
        uint64_t v19 = 0;
      }
    }
    else
    {
      sub_100054B1C((uint64_t)&v57, &qword_1005F5D30);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)char v7 = v18;
    *((void *)v7 + 1) = v19;
    *(void *)&long long v57 = 0x4974736163646F70;
    *((void *)&v57 + 1) = 0xE900000000000064;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v11 + 16) && (unint64_t v22 = sub_100226C5C((uint64_t)v56), (v23 & 1) != 0))
    {
      sub_10004D328(*(void *)(v11 + 56) + 32 * v22, (uint64_t)&v57);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    sub_100172F18((uint64_t)v56);
    uint64_t v24 = sub_1003BAD1C((uint64_t)&v57);
    int v26 = v25;
    sub_100054B1C((uint64_t)&v57, &qword_1005F5D30);
    *((void *)v7 + 4) = v24;
    int v48 = v26;
    v7[40] = v26 & 1;
    *(void *)&long long v57 = 0x5565646F73697065;
    *((void *)&v57 + 1) = 0xEB00000000646975;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v11 + 16) && (unint64_t v27 = sub_100226C5C((uint64_t)v56), (v28 & 1) != 0))
    {
      sub_10004D328(*(void *)(v11 + 56) + 32 * v27, (uint64_t)&v57);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    sub_100172F18((uint64_t)v56);
    if (*((void *)&v58 + 1))
    {
      int v29 = swift_dynamicCast();
      if (v29) {
        uint64_t v30 = v53;
      }
      else {
        uint64_t v30 = 0;
      }
      if (v29) {
        uint64_t v31 = v54;
      }
      else {
        uint64_t v31 = 0;
      }
    }
    else
    {
      sub_100054B1C((uint64_t)&v57, &qword_1005F5D30);
      uint64_t v30 = 0;
      uint64_t v31 = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v7 + 2) = v30;
    *((void *)v7 + 3) = v31;
    *(void *)&long long v57 = 0x4965646F73697065;
    *((void *)&v57 + 1) = 0xE900000000000064;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v11 + 16) && (unint64_t v32 = sub_100226C5C((uint64_t)v56), (v33 & 1) != 0))
    {
      sub_10004D328(*(void *)(v11 + 56) + 32 * v32, (uint64_t)&v57);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    sub_100172F18((uint64_t)v56);
    uint64_t v34 = sub_1003BAD1C((uint64_t)&v57);
    int v36 = v35;
    sub_100054B1C((uint64_t)&v57, &qword_1005F5D30);
    *((void *)v7 + 6) = v34;
    v7[56] = v36 & 1;
    *(void *)&long long v57 = 0x616C506563726F66;
    *((void *)&v57 + 1) = 0xE900000000000079;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v11 + 16) && (unint64_t v37 = sub_100226C5C((uint64_t)v56), (v38 & 1) != 0))
    {
      sub_10004D328(*(void *)(v11 + 56) + 32 * v37, (uint64_t)&v57);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    sub_100172F18((uint64_t)v56);
    char v39 = sub_1003BB040((uint64_t)&v57);
    sub_100054B1C((uint64_t)&v57, &qword_1005F5D30);
    v7[57] = v39;
    strcpy((char *)&v57, "episodeContext");
    HIBYTE(v57) = -18;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v11 + 16) && (unint64_t v40 = sub_100226C5C((uint64_t)v56), (v41 & 1) != 0))
    {
      sub_10004D328(*(void *)(v11 + 56) + 32 * v40, (uint64_t)&v57);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    sub_100172F18((uint64_t)v56);
    sub_100054BBC((uint64_t)&v57, (uint64_t)&v53, &qword_1005F5D30);
    if (v55)
    {
      if (swift_dynamicCast())
      {
        int v47 = v36;
        uint64_t v43 = v51;
        uint64_t v42 = v52;
        sub_100054B1C((uint64_t)&v57, &qword_1005F5D30);
        if (v43 == 0x6F4E6E657473696CLL && v42 == 0xEF7478654E705577)
        {
          swift_bridgeObjectRelease();
          char v44 = 1;
        }
        else
        {
          char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
        }
        LOBYTE(v36) = v47;
        goto LABEL_54;
      }
    }
    else
    {
      sub_100054B1C((uint64_t)&v53, &qword_1005F5D30);
    }
    sub_100054B1C((uint64_t)&v57, &qword_1005F5D30);
    char v44 = 0;
LABEL_54:
    v7[58] = v44 & 1;
    strcpy((char *)&v57, "widgetContext");
    HIWORD(v57) = -4864;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v11 + 16) && (unint64_t v45 = sub_100226C5C((uint64_t)v56), (v46 & 1) != 0))
    {
      sub_10004D328(*(void *)(v11 + 56) + 32 * v45, (uint64_t)&v57);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_100172F18((uint64_t)v56);
    if (*((void *)&v58 + 1)) {
      swift_dynamicCast();
    }
    else {
      sub_100054B1C((uint64_t)&v57, &qword_1005F5D30);
    }
    static MetricsWidgetContext.decodeFromString(_:)();
    swift_bridgeObjectRelease();
    sub_1003BBAD8((uint64_t)v3, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19 || (v48 & 1) == 0 || v31 || (v36 & 1) == 0)
    {
      sub_10039B8F0((uint64_t)v7, a1);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(a1, 0, 1, v4);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a1, 1, 1, v4);
    }
    return sub_10039B954((uint64_t)v7);
  }
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56);

  return v20(a1, 1, 1, v4);
}

uint64_t sub_1003B9E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v14[1] = a2;
  sub_100054B78(&qword_100607CB0);
  __chkstk_darwin();
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MetricsWidgetContext();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URLComponents();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  sub_100054BBC(a1 + OBJC_IVAR____TtC8Podcasts22PodcastsURLOpenCommand_widgetContext, (uint64_t)v4, &qword_100607CB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100054B1C((uint64_t)v4, &qword_100607CB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if ((unint64_t)MetricsWidgetContext.encodeToString()().value._object)
    {
      sub_100054B78(&qword_1005F9000);
      type metadata accessor for URLQueryItem();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      URLComponents.queryItems.setter();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  URLComponents.url.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t type metadata accessor for PodcastsURLScheme()
{
  return self;
}

uint64_t type metadata accessor for PodcastsURLScheme.Command()
{
  return self;
}

uint64_t type metadata accessor for PodcastsURLScheme.Param()
{
  return self;
}

void *sub_1003BA204(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (char *)a2 + v7;
    uint64_t v9 = (void *)(a1 + v7);
    *(unsigned char *)(a1 + 58) = *((unsigned char *)a2 + 58);
    uint64_t v10 = type metadata accessor for MetricsWidgetContext();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v8, 1, v10))
    {
      uint64_t v13 = sub_100054B78(&qword_100607CB0);
      memcpy(v9, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_1003BA3B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for MetricsWidgetContext();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1003BA490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (const void *)(a2 + v6);
  uint64_t v8 = (void *)(a1 + v6);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v9 = type metadata accessor for MetricsWidgetContext();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v7, 1, v9))
  {
    uint64_t v12 = sub_100054B78(&qword_100607CB0);
    memcpy(v8, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1003BA5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for MetricsWidgetContext();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100054B78(&qword_100607CB0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1003BA7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (const void *)(a2 + v5);
  uint64_t v7 = (void *)(a1 + v5);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v8 = type metadata accessor for MetricsWidgetContext();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    uint64_t v10 = sub_100054B78(&qword_100607CB0);
    memcpy(v7, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1003BA918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  __int16 v8 = *(_WORD *)(a2 + 57);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(_WORD *)(a1 + 57) = v8;
  uint64_t v12 = type metadata accessor for MetricsWidgetContext();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100054B78(&qword_100607CB0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1003BAAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BAAEC);
}

uint64_t sub_1003BAAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100054B78(&qword_100607CB0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1003BABAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BABC0);
}

uint64_t sub_1003BABC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100054B78(&qword_100607CB0);
    __int16 v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1003BAC6C()
{
  sub_1003B9178();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1003BAD1C(uint64_t a1)
{
  sub_100054BBC(a1, (uint64_t)v24, &qword_1005F5D30);
  if (!v24[3])
  {
    sub_100054B1C((uint64_t)v24, &qword_1005F5D30);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t result = v22;
  uint64_t v2 = HIBYTE(v23) & 0xF;
  uint64_t v3 = v22 & 0xFFFFFFFFFFFFLL;
  if ((v23 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(v23) & 0xF;
  }
  else {
    uint64_t v4 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v23 & 0x1000000000000000) == 0)
  {
    if ((v23 & 0x2000000000000000) == 0)
    {
      if ((v22 & 0x1000000000000000) != 0) {
        uint64_t v5 = (unsigned __int8 *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v5 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v6 = (uint64_t)sub_10035C26C(v5, v3, 10);
      char v8 = v7 & 1;
      goto LABEL_48;
    }
    v24[0] = v22;
    v24[1] = v23 & 0xFFFFFFFFFFFFFFLL;
    if (v22 == 43)
    {
      if (!v2) {
        goto LABEL_61;
      }
      if (v2 == 1 || (BYTE1(v22) - 48) > 9u) {
        goto LABEL_35;
      }
      uint64_t v6 = (BYTE1(v22) - 48);
      if (v2 != 2)
      {
        if ((BYTE2(v22) - 48) > 9u) {
          goto LABEL_35;
        }
        uint64_t v6 = 10 * (BYTE1(v22) - 48) + (BYTE2(v22) - 48);
        uint64_t v9 = v2 - 3;
        if (v9)
        {
          uint64_t v10 = (unsigned __int8 *)v24 + 3;
          while (1)
          {
            unsigned int v11 = *v10 - 48;
            if (v11 > 9) {
              goto LABEL_35;
            }
            uint64_t v12 = 10 * v6;
            if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63) {
              goto LABEL_35;
            }
            uint64_t v6 = v12 + v11;
            if (__OFADD__(v12, v11)) {
              goto LABEL_35;
            }
            char v8 = 0;
            ++v10;
            if (!--v9) {
              goto LABEL_48;
            }
          }
        }
      }
    }
    else
    {
      if (v22 == 45)
      {
        if (v2)
        {
          if (v2 != 1 && (BYTE1(v22) - 48) <= 9u)
          {
            if (v2 == 2)
            {
              char v8 = 0;
              uint64_t v6 = -(uint64_t)(BYTE1(v22) - 48);
              goto LABEL_48;
            }
            if ((BYTE2(v22) - 48) <= 9u)
            {
              uint64_t v6 = -10 * (BYTE1(v22) - 48) - (BYTE2(v22) - 48);
              uint64_t v17 = v2 - 3;
              if (!v17) {
                goto LABEL_47;
              }
              uint64_t v18 = (unsigned __int8 *)v24 + 3;
              while (1)
              {
                unsigned int v19 = *v18 - 48;
                if (v19 > 9) {
                  break;
                }
                uint64_t v20 = 10 * v6;
                if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63) {
                  break;
                }
                uint64_t v6 = v20 - v19;
                if (__OFSUB__(v20, v19)) {
                  break;
                }
                char v8 = 0;
                ++v18;
                if (!--v17) {
                  goto LABEL_48;
                }
              }
            }
          }
LABEL_35:
          uint64_t v6 = 0;
          char v8 = 1;
          goto LABEL_48;
        }
        __break(1u);
LABEL_61:
        __break(1u);
        return result;
      }
      if (!v2 || (v22 - 48) > 9u) {
        goto LABEL_35;
      }
      uint64_t v6 = (v22 - 48);
      if (v2 != 1)
      {
        if ((BYTE1(v22) - 48) > 9u) {
          goto LABEL_35;
        }
        uint64_t v6 = 10 * (v22 - 48) + (BYTE1(v22) - 48);
        uint64_t v13 = v2 - 2;
        if (v13)
        {
          int v14 = (unsigned __int8 *)v24 + 2;
          while (1)
          {
            unsigned int v15 = *v14 - 48;
            if (v15 > 9) {
              goto LABEL_35;
            }
            uint64_t v16 = 10 * v6;
            if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63) {
              goto LABEL_35;
            }
            uint64_t v6 = v16 + v15;
            if (__OFADD__(v16, v15)) {
              goto LABEL_35;
            }
            char v8 = 0;
            ++v14;
            if (!--v13) {
              goto LABEL_48;
            }
          }
        }
      }
    }
LABEL_47:
    char v8 = 0;
    goto LABEL_48;
  }
  uint64_t v6 = sub_10035C284(v22);
  char v8 = v21;
LABEL_48:
  swift_bridgeObjectRelease();
  if (v8) {
    return 0;
  }
  else {
    return v6;
  }
}

uint64_t sub_1003BB040(uint64_t a1)
{
  sub_100054BBC(a1, (uint64_t)v5, &qword_1005F5D30);
  if (!v6)
  {
    sub_100054B1C((uint64_t)v5, &qword_1005F5D30);
    return 2;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 2;
  }
  if (v3 == 1702195828 && v4 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v3 == 0x65736C6166 && v4 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((v2 & 1) == 0) {
    return 2;
  }
  return result;
}

char *sub_1003BB178(uint64_t a1)
{
  sub_100054B78(&qword_100607CB0);
  __chkstk_darwin();
  long long v57 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for MetricsWidgetContext();
  uint64_t v3 = *(void (**)(void, void, void))(v58 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URLQueryItem();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v56 = (char *)&v50 - v10;
  __chkstk_darwin();
  uint64_t v55 = (char *)&v50 - v11;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v50 - v12;
  __chkstk_darwin();
  unsigned int v15 = (char *)&v50 - v14;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v50 - v16;
  __chkstk_darwin();
  unsigned int v19 = (char *)&v50 - v18;
  uint64_t v20 = *(void *)(a1 + 8);
  uint64_t v59 = v5;
  uint64_t v60 = a1;
  if (v20)
  {
    unint64_t v53 = (unint64_t)v9;
    uint64_t v54 = v3;
    uint64_t v21 = v7;
    URLQueryItem.init(name:value:)();
    uint64_t v22 = (char *)sub_1002EF4A4(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v24 = *((void *)v22 + 2);
    unint64_t v23 = *((void *)v22 + 3);
    uint64_t v25 = v6;
    if (v24 >= v23 >> 1) {
      uint64_t v22 = (char *)sub_1002EF4A4(v23 > 1, v24 + 1, 1, (unint64_t)v22);
    }
    *((void *)v22 + 2) = v24 + 1;
    int v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    unint64_t v27 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v28 = *(void *)(v21 + 72);
    v26(&v22[v27 + v28 * v24], v19, v25);
    uint64_t v29 = v60;
    if (*(void *)(v60 + 24))
    {
      URLQueryItem.init(name:value:)();
      unint64_t v31 = *((void *)v22 + 2);
      unint64_t v30 = *((void *)v22 + 3);
      if (v31 >= v30 >> 1) {
        uint64_t v22 = (char *)sub_1002EF4A4(v30 > 1, v31 + 1, 1, (unint64_t)v22);
      }
      *((void *)v22 + 2) = v31 + 1;
      unint64_t v32 = &v22[v27 + v31 * v28];
      uint64_t v6 = v25;
      v26(v32, v17, v25);
      uint64_t v33 = v58;
      uint64_t v34 = v59;
      uint64_t v7 = v21;
      uint64_t v9 = (char *)v53;
      uint64_t v3 = v54;
      uint64_t v35 = (uint64_t)v57;
      uint64_t v29 = v60;
    }
    else
    {
      uint64_t v33 = v58;
      uint64_t v34 = v59;
      uint64_t v6 = v25;
      uint64_t v7 = v21;
      uint64_t v9 = (char *)v53;
      uint64_t v3 = v54;
      uint64_t v35 = (uint64_t)v57;
    }
  }
  else
  {
    uint64_t v29 = a1;
    if (*(unsigned char *)(a1 + 40))
    {
      uint64_t v22 = (char *)_swiftEmptyArrayStorage;
      uint64_t v35 = (uint64_t)v57;
      uint64_t v33 = v58;
    }
    else
    {
      uint64_t v61 = *(void *)(a1 + 32);
      dispatch thunk of CustomStringConvertible.description.getter();
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      uint64_t v22 = (char *)sub_1002EF4A4(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      unint64_t v37 = *((void *)v22 + 2);
      unint64_t v36 = *((void *)v22 + 3);
      uint64_t v33 = v58;
      uint64_t v52 = v6;
      if (v37 >= v36 >> 1) {
        uint64_t v22 = (char *)sub_1002EF4A4(v36 > 1, v37 + 1, 1, (unint64_t)v22);
      }
      *((void *)v22 + 2) = v37 + 1;
      char v38 = *(void (**)(void, void, void))(v7 + 32);
      unint64_t v53 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v54 = v38;
      uint64_t v51 = *(void *)(v7 + 72);
      v38(&v22[v53 + v51 * v37], v15, v52);
      uint64_t v29 = v60;
      if (*(unsigned char *)(v60 + 56))
      {
        uint64_t v6 = v52;
        uint64_t v35 = (uint64_t)v57;
      }
      else
      {
        uint64_t v61 = *(void *)(v60 + 48);
        dispatch thunk of CustomStringConvertible.description.getter();
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        unint64_t v40 = *((void *)v22 + 2);
        unint64_t v39 = *((void *)v22 + 3);
        uint64_t v35 = (uint64_t)v57;
        if (v40 >= v39 >> 1) {
          uint64_t v22 = (char *)sub_1002EF4A4(v39 > 1, v40 + 1, 1, (unint64_t)v22);
        }
        *((void *)v22 + 2) = v40 + 1;
        uint64_t v41 = v52;
        v54(&v22[v53 + v40 * v51], v13, v52);
        uint64_t v6 = v41;
        uint64_t v29 = v60;
      }
    }
    uint64_t v34 = v59;
  }
  if (*(unsigned char *)(v29 + 57) != 2)
  {
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v22 = (char *)sub_1002EF4A4(0, *((void *)v22 + 2) + 1, 1, (unint64_t)v22);
    }
    unint64_t v43 = *((void *)v22 + 2);
    unint64_t v42 = *((void *)v22 + 3);
    if (v43 >= v42 >> 1) {
      uint64_t v22 = (char *)sub_1002EF4A4(v42 > 1, v43 + 1, 1, (unint64_t)v22);
    }
    *((void *)v22 + 2) = v43 + 1;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v22[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v43], v55, v6);
    uint64_t v29 = v60;
  }
  if (*(unsigned char *)(v29 + 58))
  {
    URLQueryItem.init(name:value:)();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v22 = (char *)sub_1002EF4A4(0, *((void *)v22 + 2) + 1, 1, (unint64_t)v22);
    }
    unint64_t v45 = *((void *)v22 + 2);
    unint64_t v44 = *((void *)v22 + 3);
    if (v45 >= v44 >> 1) {
      uint64_t v22 = (char *)sub_1002EF4A4(v44 > 1, v45 + 1, 1, (unint64_t)v22);
    }
    *((void *)v22 + 2) = v45 + 1;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v22[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v45], v56, v6);
    uint64_t v29 = v60;
  }
  uint64_t v46 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  sub_100054BBC(v29 + *(int *)(v46 + 40), v35, &qword_100607CB0);
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v3 + 6))(v35, 1, v33) == 1)
  {
    sub_100054B1C(v35, &qword_100607CB0);
  }
  else
  {
    (*((void (**)(char *, uint64_t, uint64_t))v3 + 4))(v34, v35, v33);
    if ((unint64_t)MetricsWidgetContext.encodeToString()().value._object)
    {
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = (char *)sub_1002EF4A4(0, *((void *)v22 + 2) + 1, 1, (unint64_t)v22);
      }
      unint64_t v48 = *((void *)v22 + 2);
      unint64_t v47 = *((void *)v22 + 3);
      if (v48 >= v47 >> 1) {
        uint64_t v22 = (char *)sub_1002EF4A4(v47 > 1, v48 + 1, 1, (unint64_t)v22);
      }
      *((void *)v22 + 2) = v48 + 1;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v22[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v48], v9, v6);
    }
    (*((void (**)(char *, uint64_t))v3 + 1))(v34, v33);
  }
  return v22;
}

uint64_t sub_1003BBA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100607CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BBAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100607CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BBB40()
{
  uint64_t v0 = type metadata accessor for PageMetrics.InvocationPoint();
  uint64_t v20 = *(void *)(v0 - 8);
  uint64_t v21 = v0;
  __chkstk_darwin();
  unsigned int v19 = (char *)v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for ScalarDictionary();
  uint64_t v2 = *(void *)(v16[0] - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)v16 - v5;
  uint64_t v7 = type metadata accessor for MetricsPageFields();
  uint64_t v17 = *(void *)(v7 - 8);
  uint64_t v18 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_100607D98);
  __chkstk_darwin();
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[2] = OBJC_IVAR___MTWelcomeViewControllerMetricsSender_metricsController;
  swift_retain();
  MetricsController.observe(lifecycleEvent:)();
  swift_release();
  swift_retain();
  static MetricsPageID.welcomeSheet.getter();
  static MetricsPageType.welcome.getter();
  MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)();
  ScalarDictionary.init()();
  static MetricsDataConfiguration.default.getter();
  sub_100054B78(&qword_1005F76C8);
  type metadata accessor for PageMetrics.Instruction();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D030;
  static PageMetrics.Instruction.page(fields:configuration:)();
  static PageMetrics.Instruction.impressions(fields:configuration:)();
  MetricsPageFields.metricsFields.getter();
  uint64_t v12 = v16[0];
  (*(void (**)(char *, char *, void))(v2 + 16))(v4, v6, v16[0]);
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)();
  sub_1002DFF70((uint64_t)v22, (uint64_t)v28);
  sub_100053884((uint64_t)v28);
  uint64_t v27 = v23;
  sub_1000537F4((uint64_t)&v27);
  uint64_t v26 = v24;
  sub_1000537F4((uint64_t)&v26);
  sub_1000536BC(v25);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v18);
  uint64_t v13 = type metadata accessor for PageMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 0, 1, v13);
  MetricsController.pageMetrics.setter();
  swift_release();
  swift_retain();
  uint64_t v14 = v19;
  static PageMetrics.InvocationPoint.pageEnter.getter();
  MetricsController.sendEvents(for:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v14, v21);
}

uint64_t sub_1003BC1A8(uint64_t a1)
{
  uint64_t v2 = &_swiftEmptyDictionarySingleton;
  uint64_t v41 = &_swiftEmptyDictionarySingleton;
  uint64_t v31 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  unint64_t v42 = &v35;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v11 >= v30) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v31 + 8 * v11);
    int64_t v13 = v7 + 1;
    if (!v12)
    {
      int64_t v13 = v7 + 2;
      if (v7 + 2 >= v30) {
        goto LABEL_40;
      }
      unint64_t v12 = *(void *)(v31 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v7 + 3;
        if (v7 + 3 >= v30) {
          goto LABEL_40;
        }
        unint64_t v12 = *(void *)(v31 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v7 + 4;
          if (v7 + 4 >= v30) {
            goto LABEL_40;
          }
          unint64_t v12 = *(void *)(v31 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v7 = v13;
LABEL_25:
    unsigned int v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_100054BBC(*(void *)(a1 + 56) + 32 * v10, (uint64_t)v40, &qword_1005F5D30);
    *(void *)&long long v39 = v17;
    *((void *)&v39 + 1) = v16;
    long long v37 = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    sub_100054BBC((uint64_t)v38, (uint64_t)&v32, &qword_1005F5D30);
    if (v33)
    {
      sub_10004D384(&v32, v36);
      long long v18 = v37;
      v34[2] = v37;
      sub_100053820((uint64_t)v38, (uint64_t)v42, &qword_1005F5D30);
      sub_10004D384(v36, v34);
      unint64_t v19 = v2[2];
      if (v2[3] <= v19)
      {
        uint64_t v20 = v19 + 1;
        swift_bridgeObjectRetain();
        sub_100279B60(v20, 1);
        uint64_t v2 = v41;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v21 = (char *)(v2 + 8);
      uint64_t v22 = -1 << *((unsigned char *)v2 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~v2[(v23 >> 6) + 8]) != 0)
      {
        unint64_t v25 = __clz(__rbit64((-1 << v23) & ~v2[(v23 >> 6) + 8])) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)&v21[8 * v24];
        }
        while (v29 == -1);
        unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
      }
      *(void *)&v21[(v25 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v25;
      *(_OWORD *)(v2[6] + 16 * v25) = v18;
      sub_10004D384(v34, (_OWORD *)(v2[7] + 32 * v25));
      ++v2[2];
      uint64_t v8 = (long long *)v42;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_100054B1C((uint64_t)&v37, &qword_1005FF050);
      uint64_t v8 = &v32;
    }
    uint64_t result = sub_100054B1C((uint64_t)v8, &qword_1005F5D30);
  }
  int64_t v14 = v7 + 5;
  if (v7 + 5 >= v30)
  {
LABEL_40:
    sub_10004E644();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v31 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v7 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v30) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v31 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1003BC574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  int64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager__downloaders);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *v7;
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_10004FA6C(a2, a3);
    long long v13 = 0u;
    if (v11)
    {
      long long v13 = *(_OWORD *)(*(void *)(v9 + 56) + 16 * v10);
      swift_unknownObjectRetain();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    long long v12 = v13;
  }
  else
  {
    long long v12 = 0uLL;
  }
  *a4 = v12;
  return result;
}

id sub_1003BC644()
{
  uint64_t v1 = OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager____lazy_storage___preflightURLSession;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager____lazy_storage___preflightURLSession);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager____lazy_storage___preflightURLSession);
  }
  else
  {
    uint64_t v4 = (char *)sub_100041A98((void *)(v0 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_downloaderConfiguration + 120), *(void *)(v0 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_downloaderConfiguration + 144));
    id v5 = sub_10005693C(0, *v4);
    id v6 = [self sessionWithConfiguration:v5];

    int64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t sub_1003BC6FC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_reachability);
    swift_unknownObjectRetain();

    [v2 isReachable];
    swift_unknownObjectRelease();
  }
  return 0;
}

void sub_1003BC7C4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v9 = static OS_os_log.downloads.getter();
  sub_100056D54(a1, (uint64_t)v25);
  sub_100056D54(a1, (uint64_t)v22);
  if (os_log_type_enabled(v9, v8))
  {
    unint64_t v10 = (void *)0xE900000000000064;
    swift_bridgeObjectRetain_n();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446722;
    BOOL v12 = (a4 & 1) == 0;
    if (a4) {
      uint64_t v13 = 1936484398;
    }
    else {
      uint64_t v13 = 0x7261646E6174732ELL;
    }
    if (!v12) {
      unint64_t v10 = (void *)0xE400000000000000;
    }
    swift_bridgeObjectRetain_n();
    v14._uint64_t countAndFlagsBits = v13;
    v14._object = v10;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = a2;
    v15._object = a3;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10004B974(0x496E6F6973736553, 0xEB00000000203A44, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v16 = v26;
    uint64_t v17 = v27;
    sub_100041A98(v25, v26);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
    sub_10004B974(v18, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10004D2D8((uint64_t)v25);
    *(_WORD *)(v11 + 22) = 2080;
    uint64_t v20 = v23;
    uint64_t v21 = v24;
    sub_100041A98(v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    sub_10004B974(0x6E776F6E6B6E75, 0xE700000000000000, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10004D2D8((uint64_t)v22);
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "Restore task from url session: %{public}s task: %{public}s state: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_10004D2D8((uint64_t)v25);
    sub_10004D2D8((uint64_t)v22);
  }
}

uint64_t sub_1003BCBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchTimeInterval();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for URL();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EpisodeMetadata(0);
  __chkstk_darwin(v10 - 8);
  BOOL v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for DownloadJob(0);
  uint64_t v13 = __chkstk_darwin(v61);
  uint64_t v58 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v50 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v18 = (char *)Strong;
  uint64_t v54 = v5;
  uint64_t v55 = v4;
  uint64_t v56 = v7;
  int v19 = static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v20 = static OS_os_log.downloads.getter();
  sub_1003D34F0(a1, (uint64_t)v16, type metadata accessor for DownloadJob);
  sub_100056D54(a2, (uint64_t)v67);
  sub_100056D54(a2, (uint64_t)v64);
  BOOL v21 = os_log_type_enabled(v20, (os_log_type_t)v19);
  long long v57 = v12;
  if (v21)
  {
    int v53 = v19;
    uint64_t v52 = a1;
    uint64_t v51 = a2;
    uint64_t v50 = v9;
    uint64_t v22 = swift_slowAlloc();
    v63[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136446722;
    uint64_t v23 = (uint64_t *)&v16[*(int *)(v61 + 20)];
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    v62[0] = sub_10004B974(v24, v25, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003D3558((uint64_t)v16, type metadata accessor for DownloadJob);
    *(_WORD *)(v22 + 12) = 2082;
    uint64_t v26 = v68;
    uint64_t v27 = v69;
    sub_100041A98(v67, v68);
    uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
    v62[0] = sub_10004B974(v28, v29, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10004D2D8((uint64_t)v67);
    *(_WORD *)(v22 + 22) = 2082;
    uint64_t v30 = v65;
    uint64_t v31 = v66;
    sub_100041A98(v64, v65);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    uint64_t v9 = v50;
    BOOL v12 = v57;
    uint64_t v33 = v58;
    v62[0] = sub_10004B974(0x6E776F6E6B6E75, 0xE700000000000000, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10004D2D8((uint64_t)v64);
    _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v53, "Restoring job: %{public}s, task: %{public}s, state: %{public}s", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v51;
    a1 = v52;
  }
  else
  {

    sub_1003D3558((uint64_t)v16, type metadata accessor for DownloadJob);
    sub_10004D2D8((uint64_t)v67);
    sub_10004D2D8((uint64_t)v64);
    uint64_t v33 = v58;
  }
  uint64_t v34 = (uint64_t *)(a1 + *(int *)(v61 + 20));
  uint64_t v35 = v34[1];
  uint64_t v58 = *v34;
  sub_1003D34F0(a1 + *(int *)(v61 + 36), (uint64_t)v12, type metadata accessor for EpisodeMetadata);
  sub_1003D34F0(a1, v33, type metadata accessor for DownloadJob);
  sub_100056D54(a2, (uint64_t)v67);
  uint64_t v36 = *(void *)&v18[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_systemEpisodeStorage];
  uint64_t v61 = *(void *)&v18[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_systemEpisodeStorage + 8];
  uint64_t v37 = *(void *)&v18[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_jobStorage];
  uint64_t v38 = *(void *)&v18[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_jobStorage + 8];
  sub_100054BBC((uint64_t)&v18[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_mediaLibraryClient], (uint64_t)v64, (uint64_t *)&unk_1005F6FD0);
  sub_100056D54((uint64_t)&v18[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_dsidProvider], (uint64_t)v63);
  sub_100056D54((uint64_t)&v18[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_artworkStorage], (uint64_t)v62);
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v9, &v18[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_assetsFolder], v60);
  uint64_t v39 = (uint64_t)v9;
  uint64_t v40 = qword_1005F59D0;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v41 = v33;
  unint64_t v42 = v18;
  if (v40 != -1) {
    swift_once();
  }
  uint64_t v43 = v55;
  uint64_t v44 = sub_10018A370(v55, (uint64_t)qword_10061A948);
  uint64_t v45 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v56, v44, v43);
  uint64_t v46 = sub_100055EF0((uint64_t)v63, v63[3]);
  __chkstk_darwin(v46);
  (*(void (**)(void))(v47 + 16))();
  *((void *)&v49 + 1) = v37;
  *(void *)&long long v49 = v61;
  uint64_t v32 = sub_1003D1270(v58, v35, (uint64_t)v57, v41, (uint64_t)v67, 0, 0, v36, v49, v38, (uint64_t)v64, (uint64_t)v62, v39, v42, v45, 1u);
  sub_10004D2D8((uint64_t)v63);

  return v32;
}

void sub_1003BD474(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  if (!v11)
  {
LABEL_30:
    uint64_t v44 = 0;
    goto LABEL_31;
  }
  uint64_t v57 = OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage;
  uint64_t v58 = a2;
  uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage);
  uint64_t v55 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  uint64_t v13 = *(void **)(v11 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  swift_retain();
  id v14 = v13;
  swift_retain();
  uint64_t v59 = v11;
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v15 = (uint8_t **)(v10 + *(int *)(v8 + 20));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  swift_bridgeObjectRetain();
  sub_1003D3558(v10, type metadata accessor for DownloadJob);
  [*(id *)(v12 + 16) lock];
  swift_beginAccess();
  uint64_t v56 = v12;
  unint64_t v18 = *(void *)(v12 + 24);
  if (v18 >> 62) {
    goto LABEL_33;
  }
  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
LABEL_4:
  uint64_t v64 = v10;
  uint64_t v60 = a3;
  if (v19)
  {
    uint64_t v65 = v4;
    uint64_t v62 = v17;
    uint64_t v63 = (uint8_t *)(v18 & 0xC000000000000001);
    uint64_t v10 = 4;
    uint64_t v61 = (uint64_t *)v19;
    while (1)
    {
      uint64_t v20 = v10 - 4;
      if (v63)
      {
        uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        a3 = (uint64_t *)(v10 - 3);
        if (__OFADD__(v20, 1)) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v21 = *(void *)(v18 + 8 * v10);
        swift_retain();
        a3 = (uint64_t *)(v10 - 3);
        if (__OFADD__(v20, 1))
        {
LABEL_32:
          __break(1u);
LABEL_33:
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_4;
        }
      }
      id v22 = *(id *)(v21 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      uint64_t v23 = v16;
      uint64_t v24 = v64;
      uint64_t v25 = v65;
      uint64_t v4 = v21;
      OS_dispatch_queue.sync<A>(execute:)();
      uint64_t v65 = v25;

      uint64_t v26 = v8;
      uint64_t v27 = (uint8_t **)(v24 + *(int *)(v8 + 20));
      unint64_t v29 = *v27;
      uint64_t v28 = v27[1];
      swift_bridgeObjectRetain();
      uint64_t v30 = v24;
      uint64_t v16 = v23;
      uint64_t v17 = v62;
      sub_1003D3558(v30, type metadata accessor for DownloadJob);
      if (v29 == v17 && v28 == v16)
      {
        swift_bridgeObjectRelease();
LABEL_21:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v60;
        uint64_t v8 = v26;
        uint64_t v33 = v4;
        goto LABEL_22;
      }
      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v32) {
        goto LABEL_21;
      }
      swift_release();
      ++v10;
      uint64_t v8 = v26;
      if (a3 == v61)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v33 = 0;
        a3 = v60;
        goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  [*(id *)(v56 + 16) unlock];
  swift_release();
  swift_bridgeObjectRelease();
  if (v33)
  {
    os_log_type_t v34 = static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v35 = static OS_os_log.downloads.getter();
    os_log_type_t v36 = v34;
    if (os_log_type_enabled(v35, v34))
    {
      swift_retain();
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v65 = v38;
      *(_DWORD *)uint64_t v37 = 136446210;
      uint64_t v67 = v38;
      uint64_t v62 = v37 + 4;
      uint64_t v63 = v37;
      id v39 = *(id *)(v33 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      uint64_t v40 = v64;
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v41 = (uint64_t *)(v40 + *(int *)(v8 + 20));
      uint64_t v42 = *v41;
      unint64_t v43 = v41[1];
      swift_bridgeObjectRetain();
      sub_1003D3558(v40, type metadata accessor for DownloadJob);
      uint64_t v66 = sub_10004B974(v42, v43, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      a3 = v60;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Existing job pipeline with episode %{public}s", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  swift_retain();
  uint64_t v44 = v59;
  BOOL v45 = sub_1004175C8(v59);
  swift_release();
  if (!v45)
  {
    os_log_type_t v46 = static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v47 = static OS_os_log.downloads.getter();
    if (os_log_type_enabled(v47, v46))
    {
      swift_retain();
      unint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      uint64_t v67 = v65;
      *(_DWORD *)unint64_t v48 = 136446210;
      uint64_t v63 = v48 + 4;
      id v49 = *(id *)(v44 + v55);
      uint64_t v50 = v64;
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v51 = (uint64_t *)(v50 + *(int *)(v8 + 20));
      uint64_t v52 = *v51;
      unint64_t v53 = v51[1];
      swift_bridgeObjectRetain();
      sub_1003D3558(v50, type metadata accessor for DownloadJob);
      uint64_t v66 = sub_10004B974(v52, v53, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      a3 = v60;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v47, v46, "Failed to add restored pipeline to memory storage for episode %{public}s", v48, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    swift_release();

    goto LABEL_30;
  }
LABEL_31:
  *a3 = v44;
}

void sub_1003BDBBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v5);
  int64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  os_log_type_t v9 = static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v10 = static OS_os_log.downloads.getter();
  swift_retain_n();
  if (os_log_type_enabled(v10, v9))
  {
    swift_retain();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v46 = v39;
    *(_DWORD *)uint64_t v11 = 136446722;
    uint64_t v12 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
    uint64_t v13 = *(void **)(v8 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
    uint64_t v35 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
    uint64_t v36 = v11 + 4;
    id v14 = v13;
    os_log_t v38 = v10;
    id v15 = v14;
    OS_dispatch_queue.sync<A>(execute:)();
    int v37 = v9;

    uint64_t v16 = (uint64_t *)&v7[*(int *)(v5 + 20)];
    uint64_t v40 = a2;
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    sub_1003D3558((uint64_t)v7, type metadata accessor for DownloadJob);
    uint64_t v41 = sub_10004B974(v17, v18, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    id v19 = *(id *)(v8 + v12);
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v36 = v2;

    uint64_t v20 = &v7[*(int *)(v5 + 32)];
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = (void *)*((void *)v20 + 1);
    int v23 = v20[16];
    swift_bridgeObjectRetain();
    sub_1003D3558((uint64_t)v7, type metadata accessor for DownloadJob);
    uint64_t v41 = 0x496E6F6973736553;
    unint64_t v42 = 0xEB00000000203A44;
    if (v23) {
      uint64_t v24 = 1936484398;
    }
    else {
      uint64_t v24 = 0x7261646E6174732ELL;
    }
    if (v23) {
      uint64_t v25 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v25 = (void *)0xE900000000000064;
    }
    v45._uint64_t countAndFlagsBits = v22;
    v45._object = v21;
    swift_bridgeObjectRetain();
    v26._uint64_t countAndFlagsBits = v24;
    v26._object = v25;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    String.append(_:)(v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_10004B974(v41, v42, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2050;
    id v27 = *(id *)(v8 + v35);
    sub_100054B78(&qword_1005F8450);
    OS_dispatch_queue.sync<A>(execute:)();

    uint64_t v28 = v43;
    uint64_t v29 = v44;
    sub_100041A98(&v41, v43);
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v28, v29);
    sub_10004D2D8((uint64_t)&v41);
    swift_release();
    uint64_t v41 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    os_log_t v31 = v38;
    _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v37, "Restored job for episode: %{public}s, session: %{public}s, task: %{public}ld", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
  sub_100178A34();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v33 = (void *)Strong;
    sub_1003C4490(v8, (uint64_t)&unk_100568178, (uint64_t)sub_1003D2F6C, (uint64_t)&unk_100568190);
  }
}

uint64_t sub_1003BE080(uint64_t a1)
{
  return sub_1003C4490(a1, (uint64_t)&unk_100568178, (uint64_t)sub_1003D2F6C, (uint64_t)&unk_100568190);
}

void sub_1003BE0A8(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  uint64_t v23 = 0xD000000000000021;
  unint64_t v24 = 0x80000001004E2430;
  swift_getErrorValue();
  v7._uint64_t countAndFlagsBits = Error.localizedDescription.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  sub_1003D19F0();
  swift_bridgeObjectRelease();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  os_log_type_t v9 = static OS_os_log.downloads.getter();
  if (os_log_type_enabled(v9, v8))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v10 = a2;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446722;
    uint64_t v23 = 0x496E6F6973736553;
    unint64_t v24 = 0xEB00000000203A44;
    BOOL v12 = (a4 & 1) == 0;
    if (a4) {
      uint64_t v13 = 1936484398;
    }
    else {
      uint64_t v13 = 0x7261646E6174732ELL;
    }
    if (v12) {
      id v14 = (void *)0xE900000000000064;
    }
    else {
      id v14 = (void *)0xE400000000000000;
    }
    swift_bridgeObjectRetain_n();
    v15._uint64_t countAndFlagsBits = v13;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = v10;
    v16._object = a3;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_10004B974(v23, v24, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_100054B78(&qword_1005F8450);
    uint64_t v17 = Array.description.getter();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_10004B974(v17, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2082;
    swift_getErrorValue();
    uint64_t v20 = Error.localizedDescription.getter();
    uint64_t v23 = sub_10004B974(v20, v21, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "Failed to restore download jobs for session: %{public}s tasks: %{public}s, error: %{public}s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

uint64_t sub_1003BE434(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v62 = a2;
  uint64_t v9 = type metadata accessor for EpisodeMetadata(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_100607FB0);
  __chkstk_darwin();
  uint64_t v13 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([*(id *)&v4[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_reachability] isReachable])
  {
    uint64_t v60 = a4;
    uint64_t v14 = *(unsigned __int8 *)sub_100041A98(&v4[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_downloaderConfiguration], *(void *)&v4[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_downloaderConfiguration+ 24]);
    unint64_t v15 = 0x80000001004D1B10;
    uint64_t v61 = a3;
    switch(v14)
    {
      case 1:
        Swift::String v16 = "com.apple.podcasts.downloads.episodes.restore";
        goto LABEL_10;
      case 2:
        Swift::String v16 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_10:
        unint64_t v15 = (unint64_t)(v16 - 32) | 0x8000000000000000;
        break;
      case 3:
        unint64_t v15 = 0x80000001004D1BB0;
        break;
      default:
        break;
    }
    __chkstk_darwin();
    *(void *)&v56[-8] = v4;
    *(void *)&v56[-6] = v22;
    unint64_t v55 = v15;
    sub_100054B78(&qword_100607FA8);
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = v65;
    if ((void)v65)
    {
      uint64_t v57 = *((void *)&v65 + 1);
      id v24 = [self _applePodcastsFoundationSharedUserDefaults];
      id v58 = [v24 integerForKey:kMTCellularDownloadLimitKey];

      uint64_t v25 = *(void **)&v4[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_limitsHolder];
      id v26 = [v25 audioLimit];
      v63[0] = v26;
      swift_unknownObjectRetain();
      sub_10040C624(a1, v62, (uint64_t)v13);
      swift_unknownObjectRelease();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v59 = v23;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v28 = *(void *)v13;
        uint64_t v29 = *((void *)v13 + 1);
        unsigned __int8 v30 = v13[16];
        v56[3] = static os_log_type_t.error.getter();
        sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
        os_log_t v31 = (void *)static OS_os_log.downloads.getter();
        sub_100054B78(&qword_1005F7720);
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = xmmword_10046D010;
        *(void *)&long long v65 = v28;
        *((void *)&v65 + 1) = v29;
        LOBYTE(v66) = v30;
        sub_1002435BC();
        uint64_t v33 = Error.localizedDescription.getter();
        uint64_t v35 = v34;
        *(void *)(v32 + 56) = &type metadata for String;
        *(void *)(v32 + 64) = sub_10004DA4C();
        *(void *)(v32 + 32) = v33;
        *(void *)(v32 + 40) = v35;
        os_log(_:dso:log:_:_:)();

        swift_bridgeObjectRelease();
        sub_1002433D8(v28, v29, v30);
        uint64_t v36 = (void *)swift_allocObject();
        _OWORD v36[2] = v5;
        v36[3] = a1;
        uint64_t v37 = v62;
        v36[4] = v62;
        v36[5] = 0;
        v36[6] = 0;
        unsigned char v36[7] = v26;
        v36[8] = v58;
      }
      else
      {
        sub_100392970((uint64_t)v13, (uint64_t)v11);
        if (v11[*(int *)(v9 + 48)]) {
          unint64_t v42 = &selRef_videoLimit;
        }
        else {
          unint64_t v42 = &selRef_audioLimit;
        }
        id v43 = [v25 *v42];
        v63[0] = v43;
        uint64_t v44 = &v11[*(int *)(v9 + 52)];
        uint64_t v45 = *(void *)v44;
        char v46 = v44[8];
        uint64_t v48 = *((void *)v11 + 8);
        uint64_t v47 = *((void *)v11 + 9);
        swift_bridgeObjectRetain();
        sub_1003D3558((uint64_t)v11, type metadata accessor for EpisodeMetadata);
        uint64_t v36 = (void *)swift_allocObject();
        _OWORD v36[2] = v5;
        v36[3] = a1;
        uint64_t v49 = v62;
        v36[4] = v62;
        v36[5] = v48;
        v36[6] = v47;
        unsigned char v36[7] = v43;
        id v50 = v58;
        v36[8] = v58;
        uint64_t v37 = v49;
        if ((v46 & 1) == 0)
        {
          swift_beginAccess();
          if (v63[0] < v45)
          {
            uint64_t v51 = v57;
            if (v50)
            {
              char v52 = 0;
LABEL_27:
              sub_100054B78((uint64_t *)&unk_1005F83F0);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_10046D010;
              *(void *)(inited + 32) = a1;
              *(void *)(inited + 40) = v37;
              swift_bridgeObjectRetain_n();
              v5;
              uint64_t v54 = sub_1000505EC(inited);
              swift_setDeallocating();
              swift_arrayDestroy();
              swift_retain();
              sub_1003BF288(v54, v59, v51, 1, v52, (uint64_t)sub_1003D2EA0, (uint64_t)v36, (uint64_t)v61, v60);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              return swift_release_n();
            }
LABEL_26:
            char v52 = 1;
            goto LABEL_27;
          }
        }
      }
      uint64_t v51 = v57;
      goto LABEL_26;
    }
    os_log_t v38 = v61;
    uint64_t v39 = v62;
    if (!v61) {
      return result;
    }
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v40 = swift_initStackObject();
    *(_OWORD *)(v40 + 16) = xmmword_10046D010;
    *(void *)(v40 + 32) = a1;
    *(void *)(v40 + 40) = v39;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1000505EC(v40);
    swift_setDeallocating();
    swift_arrayDestroy();
    v38(v41);
    return swift_bridgeObjectRelease();
  }
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v17 = (void *)static OS_os_log.downloads.getter();
  os_log(_:dso:log:_:_:)();

  sub_100054BBC((uint64_t)v5 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v63, (uint64_t *)&unk_1005F7AA0);
  if (v64)
  {
    sub_100041A98(v63, v64);
    long long v65 = 0u;
    long long v66 = 0u;
    uint64_t v67 = 0;
    char v68 = 2;
    sub_1001F8474(&v65);
    uint64_t result = sub_10004D2D8((uint64_t)v63);
  }
  else
  {
    uint64_t result = sub_100054B1C((uint64_t)v63, (uint64_t *)&unk_1005F7AA0);
  }
  uint64_t v19 = v62;
  if (a3)
  {
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_10046D010;
    *(void *)(v20 + 32) = a1;
    *(void *)(v20 + 40) = v19;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1000505EC(v20);
    swift_setDeallocating();
    swift_arrayDestroy();
    a3(v21);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003BEC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v25 = a5;
  uint64_t v26 = a7;
  uint64_t v24 = a3;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  Swift::String v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v17 = [*(id *)(a2 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_reachability) isReachableViaWifi];
  uint64_t result = 0;
  if ((v17 & 1) == 0)
  {
    if (*(void *)(a2 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_finalCheckBeforStart))
    {
      type metadata accessor for DownloadableURLOptions();
      uint64_t v23 = a8;
      uint64_t v19 = type metadata accessor for EpisodeMetadata(0);
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1 + *(int *)(v19 + 44), v13);
      swift_retain();
      uint64_t v20 = DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v21 = sub_1003BC644();
      type metadata accessor for DownloadPreflightValidator();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v24;
      *(void *)(result + 24) = a4;
      *(void *)(result + 32) = v25;
      *(void *)(result + 40) = a6;
      *(void *)(result + 48) = v21;
      *(void *)(result + 56) = 0;
      uint64_t v22 = v26;
      *(void *)(result + 64) = 0x4024000000000000;
      *(void *)(result + 72) = v22;
      *(unsigned char *)(result + 96) = 1;
      *(void *)(result + 80) = v23;
      *(void *)(result + 88) = v20;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_1003BEE40(uint64_t a1, char a2, void (*a3)(uint64_t), uint64_t a4)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v9 = &v4[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_downloaderConfiguration];
    if (a2) {
      sub_100041A98((void *)v9 + 10, *((void *)v9 + 13));
    }
    else {
      sub_100041A98((void *)v9 + 5, *((void *)v9 + 8));
    }
    __chkstk_darwin();
    sub_100054B78(&qword_100607FA8);
    OS_dispatch_queue.sync<A>(execute:)();
    swift_bridgeObjectRelease();
    if (!v15)
    {
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1003BF268);
    }
    uint64_t v11 = v4;
    sub_1003D2294(a1, (uint64_t)v11);

    if (a2)
    {
      char v12 = 0;
    }
    else
    {
      uint64_t v13 = *(void **)&v11[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_reachability];
      if ([v13 isReachableViaCellular]
        && ([v13 isPodcastsCellularDownloadsEnabled] & 1) == 0)
      {
        static os_log_type_t.error.getter();
        sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
        uint64_t v14 = (void *)static OS_os_log.downloads.getter();
        os_log(_:dso:log:_:_:)();

        if (a3) {
          a3(a1);
        }
        goto LABEL_14;
      }
      char v12 = [v13 isPodcastsCellularDownloadsEnabled];
    }
    sub_1003BF288(a1, v15, v16, 0, v12, 0, 0, (uint64_t)a3, a4);
LABEL_14:
    swift_unknownObjectRelease();
    return;
  }
  static os_log_type_t.error.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v10 = (void *)static OS_os_log.downloads.getter();
  os_log(_:dso:log:_:_:)();

  if (a3) {
    a3(a1);
  }
}

void sub_1003BF288(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  os_log_type_t v14 = static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v15 = static OS_os_log.downloads.getter();
  swift_bridgeObjectRetain();
  char v129 = a5;
  if (os_log_type_enabled(v15, v14))
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v147 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2080;
    if (a5) {
      uint64_t v17 = 7562617;
    }
    else {
      uint64_t v17 = 28526;
    }
    if (a5) {
      unint64_t v18 = 0xE300000000000000;
    }
    else {
      unint64_t v18 = 0xE200000000000000;
    }
    sub_10004B974(v17, v18, &v147);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v19 = Set.description.getter();
    uint64_t v20 = v10;
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    sub_10004B974(v19, v22, &v147);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v10 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v14, "About to start %ld autodownloads, cellular allowed: %s. %{public}s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v23 = &OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userEpisodeStorage;
  if ((a4 & 1) == 0) {
    uint64_t v23 = &OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_systemEpisodeStorage;
  }
  uint64_t v24 = &v10[*v23];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  BatchEpisodeMetadataOperation = (objc_class *)type metadata accessor for FetchBatchEpisodeMetadataOperation();
  uint64_t v28 = (char *)objc_allocWithZone(BatchEpisodeMetadataOperation);
  uint64_t v29 = &v28[OBJC_IVAR____TtC8Podcasts34FetchBatchEpisodeMetadataOperation_episodeStorage];
  *(void *)uint64_t v29 = v26;
  *((void *)v29 + 1) = v25;
  *(void *)&v28[OBJC_IVAR____TtC8Podcasts34FetchBatchEpisodeMetadataOperation_uuids] = a1;
  v152.receiver = v28;
  v152.super_class = BatchEpisodeMetadataOperation;
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v137 = (char *)[super init];
  uint64_t v30 = swift_allocObject();
  char v128 = a4 & 1;
  *(unsigned char *)(v30 + 16) = a4 & 1;
  os_log_t v31 = (objc_class *)sub_100054B78(&qword_100607F50);
  uint64_t v32 = (char *)objc_allocWithZone(v31);
  uint64_t v33 = &v32[*(void *)((swift_isaMask & *(void *)v32) + 0x180)];
  *(void *)uint64_t v33 = 0;
  v33[8] = 2;
  uint64_t v34 = &v32[*(void *)((swift_isaMask & *(void *)v32) + 0x188)];
  *(void *)uint64_t v34 = sub_1003D2B94;
  *((void *)v34 + 1) = v30;
  v151.receiver = v32;
  v151.super_class = v31;
  char v130 = [(char *)[super init]];
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v10;
  *(void *)(v35 + 24) = v26;
  *(void *)(v35 + 32) = v25;
  *(unsigned char *)(v35 + 40) = v129 & 1;
  *(void *)(v35 + 48) = a2;
  *(void *)(v35 + 56) = a3;
  uint64_t v36 = (objc_class *)sub_100054B78(&qword_100607F58);
  uint64_t v37 = (char *)objc_allocWithZone(v36);
  os_log_t v38 = &v37[*(void *)((swift_isaMask & *(void *)v37) + 0x180)];
  *(void *)os_log_t v38 = 0;
  v38[8] = 2;
  uint64_t v39 = (void (**)(uint64_t *@<X0>, uint64_t@<X8>))&v37[*(void *)((swift_isaMask & *(void *)v37) + 0x188)];
  *uint64_t v39 = sub_1003D2BF8;
  v39[1] = (void (*)(uint64_t *@<X0>, uint64_t@<X8>))v35;
  v150.receiver = v37;
  v150.super_class = v36;
  swift_unknownObjectRetain();
  v10;
  swift_unknownObjectRetain();
  id v133 = [super init];
  started = (objc_class *)type metadata accessor for StartJobPipelinesOperation();
  uint64_t v41 = (char *)objc_allocWithZone(started);
  uint64_t v42 = OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_serialQueue;
  id v43 = objc_allocWithZone((Class)NSOperationQueue);
  sub_10004ACDC(a6);
  uint64_t v44 = v41;
  *(void *)&v41[v42] = [v43 init];
  uint64_t v45 = &v44[OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input];
  *(void *)uint64_t v45 = 0;
  v45[8] = 2;
  char v46 = (uint64_t *)&v44[OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_beforeTakeOff];
  *char v46 = a6;
  v46[1] = a7;
  sub_10004ACDC(a6);

  v149.receiver = v44;
  v149.super_class = started;
  id v139 = [super init];
  uint64_t v47 = v130;
  sub_1000536BC(a6);
  uint64_t v48 = (uint64_t (*)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))swift_allocObject();
  *((void *)v48 + 2) = a1;
  *((void *)v48 + 3) = a8;
  *((void *)v48 + 4) = a9;
  uint64_t v49 = (objc_class *)sub_100054B78((uint64_t *)&unk_100607F60);
  id v50 = objc_allocWithZone(v49);
  uint64_t v51 = (char *)v50 + *(void *)((swift_isaMask & *v50) + 0x180);
  *(void *)uint64_t v51 = 0;
  v51[8] = 2;
  char v52 = (uint64_t (**)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))((char *)v50
                                                                   + *(void *)((swift_isaMask & *v50) + 0x188));
  *char v52 = sub_1003D2C68;
  v52[1] = v48;
  swift_bridgeObjectRetain();
  sub_10004ACDC(a8);
  v148.receiver = v50;
  v148.super_class = v49;
  id v142 = [super init];
  uint64_t v53 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v54 = (uint64_t (**)(uint64_t))&v137[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v55 = *(void *)&v137[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  unsigned __int8 *v54 = sub_1003D2C88;
  v54[1] = (uint64_t (*)(uint64_t))v53;
  sub_1000536BC(v55);
  self;
  uint64_t v56 = swift_dynamicCastObjCClass();
  if (v56)
  {
    uint64_t v57 = v56;
    swift_getObjectType();
    uint64_t v58 = swift_conformsToProtocol2();
    uint64_t v59 = v58 ? v58 : 0;
    if (v58 ? v57 : 0)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 24) = v59;
      swift_unknownObjectWeakInit();
      uint64_t v62 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = v62;
      *(void *)(v63 + 24) = v61;
      uint64_t v64 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v59 + 72);
      id v65 = (id)swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      v64(sub_10004AF2C, v63, ObjectType, v59);
      swift_release();
      swift_release();
      uint64_t v47 = v130;
      swift_release();
      v143.receiver = v130;
      v143.super_class = (Class)type metadata accessor for BaseOperation();
      [super addDependency:v57];
    }
  }
  uint64_t v66 = swift_allocObject();
  uint64_t v67 = v133;
  swift_unknownObjectWeakInit();
  char v68 = (uint64_t (**)(uint64_t))&v47[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v69 = *(void *)&v47[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  char *v68 = sub_1003D2C88;
  v68[1] = (uint64_t (*)(uint64_t))v66;
  unint64_t v70 = v47;
  sub_1000536BC(v69);
  self;
  uint64_t v71 = swift_dynamicCastObjCClass();
  uint64_t v131 = v70;
  if (v71)
  {
    uint64_t v72 = v71;
    swift_getObjectType();
    uint64_t v73 = swift_conformsToProtocol2();
    uint64_t v74 = v73 ? v73 : 0;
    if (v73 ? v72 : 0)
    {
      uint64_t v76 = swift_getObjectType();
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 24) = v74;
      swift_unknownObjectWeakInit();
      uint64_t v78 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v79 = swift_allocObject();
      *(void *)(v79 + 16) = v78;
      *(void *)(v79 + 24) = v77;
      uint64_t v80 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v74 + 72);
      swift_unknownObjectRetain();
      uint64_t v81 = v70;
      swift_retain();
      swift_retain();
      v80(sub_10004AF2C, v79, v76, v74);
      uint64_t v67 = v133;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v82 = (objc_class *)type metadata accessor for BaseOperation();
      v144.receiver = v133;
      v144.super_class = v82;
      [super addDependency:v72];

      unint64_t v70 = v131;
    }
  }
  uint64_t v83 = v67;

  uint64_t v84 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v85 = (uint64_t (**)(uint64_t))&v83[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v86 = *(void *)&v83[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *uint64_t v85 = sub_1003D2CD4;
  v85[1] = (uint64_t (*)(uint64_t))v84;
  sub_1000536BC(v86);
  self;
  uint64_t v87 = swift_dynamicCastObjCClass();
  if (v87)
  {
    uint64_t v88 = v87;
    swift_getObjectType();
    uint64_t v89 = swift_conformsToProtocol2();
    uint64_t v90 = v89 ? v89 : 0;
    if (v89 ? v88 : 0)
    {
      uint64_t v134 = swift_getObjectType();
      uint64_t v92 = swift_allocObject();
      *(void *)(v92 + 24) = v90;
      swift_unknownObjectWeakInit();
      uint64_t v93 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v94 = swift_allocObject();
      *(void *)(v94 + 16) = v93;
      *(void *)(v94 + 24) = v92;
      id v95 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v90 + 72);
      swift_unknownObjectRetain();
      uint64_t v96 = v83;
      swift_retain();
      swift_retain();
      v95(sub_10004AF2C, v94, v134, v90);
      swift_release();
      swift_release();
      swift_release();
      uint64_t v97 = (objc_class *)type metadata accessor for BaseOperation();
      v145.receiver = v139;
      v145.super_class = v97;
      [super addDependency:v88];

      unint64_t v70 = v131;
    }
  }
  uint64_t v98 = (char *)v139;

  uint64_t v99 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v100 = (uint64_t (**)(uint64_t))&v98[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v101 = *(void *)&v98[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *uint64_t v100 = sub_1003D2D28;
  v100[1] = (uint64_t (*)(uint64_t))v99;
  sub_1000536BC(v101);
  self;
  uint64_t v102 = swift_dynamicCastObjCClass();
  if (v102)
  {
    uint64_t v103 = v102;
    swift_getObjectType();
    uint64_t v104 = swift_conformsToProtocol2();
    if (v104) {
      uint64_t v105 = v104;
    }
    else {
      uint64_t v105 = 0;
    }
    if (v104) {
      uint64_t v106 = v103;
    }
    else {
      uint64_t v106 = 0;
    }
    if (v106)
    {
      uint64_t v135 = swift_getObjectType();
      uint64_t v107 = swift_allocObject();
      *(void *)(v107 + 24) = v105;
      swift_unknownObjectWeakInit();
      uint64_t v108 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v109 = swift_allocObject();
      *(void *)(v109 + 16) = v108;
      *(void *)(v109 + 24) = v107;
      char v140 = v83;
      uint64_t v110 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v105 + 72);
      swift_unknownObjectRetain();
      long long v111 = v98;
      swift_retain();
      swift_retain();
      v110(sub_10004A488, v109, v135, v105);
      uint64_t v83 = v140;
      swift_release();
      swift_release();
      swift_release();
      long long v112 = (objc_class *)type metadata accessor for BaseOperation();
      v146.receiver = v142;
      v146.super_class = v112;
      [super addDependency:v103];

      unint64_t v70 = v131;
    }
  }
  long long v113 = (char *)v142;

  uint64_t v114 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v115 = swift_allocObject();
  *(void *)(v115 + 16) = a8;
  *(void *)(v115 + 24) = a9;
  *(unsigned char *)(v115 + 32) = v128;
  *(void *)(v115 + 40) = v114;
  long long v116 = (void (**)(uint64_t))&v113[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  uint64_t v117 = *(void *)&v113[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  _OWORD *v116 = sub_1003D2DBC;
  v116[1] = (void (*)(uint64_t))v115;
  sub_10004ACDC(a8);
  sub_1000536BC(v117);

  id v118 = sub_100041274();
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v119 = swift_allocObject();
  *(_OWORD *)(v119 + 16) = xmmword_100472D30;
  *(void *)(v119 + 32) = v137;
  *(void *)(v119 + 40) = v70;
  *(void *)(v119 + 48) = v83;
  *(void *)(v119 + 56) = v98;
  *(void *)(v119 + 64) = v113;
  uint64_t v147 = v119;
  specialized Array._endMutation()();
  sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
  uint64_t v120 = v137;
  uint64_t v121 = v70;
  uint64_t v122 = v83;
  char v123 = v98;
  char v124 = v113;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v118 addOperations:isa waitUntilFinished:0];
  swift_unknownObjectRelease();
}

uint64_t sub_1003C00D8@<X0>(uint64_t *a1@<X0>, int a2@<W1>, void *a3@<X8>)
{
  int v112 = a2;
  uint64_t v88 = a3;
  sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin();
  uint64_t v111 = (uint64_t)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v109 = *(void *)(v5 - 8);
  uint64_t v110 = v5;
  __chkstk_darwin();
  Swift::String v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_100054B78((uint64_t *)&unk_100607F98);
  __chkstk_darwin();
  uint64_t v107 = (uint64_t *)((char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v88 - v9);
  __chkstk_darwin();
  uint64_t v106 = (uint64_t *)((char *)&v88 - v11);
  uint64_t v12 = *a1;
  uint64_t v13 = *(void *)(*a1 + 64);
  uint64_t v95 = *a1 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v96 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v93 = (char *)v118 + 8;
  uint64_t v105 = kPodcastTitle;
  uint64_t v104 = kPodcastStoreCollectionId;
  uint64_t v103 = kPodcastFeedUrl;
  uint64_t v102 = kPodcastUpdatedFeedUrl;
  uint64_t v101 = kEpisodeGuid;
  uint64_t v100 = kEpisodeEnclosureUrl;
  uint64_t v99 = kEpisodeUti;
  CFStringRef v92 = @"adst";
  CFStringRef v91 = @"epdl";
  uint64_t v113 = v12;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  *(void *)&long long v19 = 136446210;
  long long v90 = v19;
  uint64_t v89 = (char *)&type metadata for Any + 8;
  long long v98 = xmmword_100477D50;
  uint64_t v94 = v7;
  uint64_t v97 = v10;
  while (1)
  {
    if (v16)
    {
      uint64_t v114 = (v16 - 1) & v16;
      int64_t v115 = v18;
      unint64_t v23 = __clz(__rbit64(v16)) | (v18 << 6);
      goto LABEL_19;
    }
    BOOL v24 = __OFADD__(v18, 1);
    int64_t v25 = v18 + 1;
    if (v24)
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v25 >= v96) {
      goto LABEL_48;
    }
    unint64_t v26 = *(void *)(v95 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    uint64_t v114 = (v26 - 1) & v26;
    int64_t v115 = v25;
    unint64_t v23 = __clz(__rbit64(v26)) + (v25 << 6);
LABEL_19:
    uint64_t v28 = *(void *)(v113 + 56);
    uint64_t v29 = (uint64_t *)(*(void *)(v113 + 48) + 16 * v23);
    uint64_t v31 = *v29;
    unint64_t v30 = v29[1];
    uint64_t v32 = v106;
    uint64_t *v106 = *v29;
    v32[1] = v30;
    uint64_t v33 = v108;
    uint64_t v34 = (uint64_t)v32 + *(int *)(v108 + 48);
    sub_1003D34F0(v28 + *(void *)(v109 + 72) * v23, v34, type metadata accessor for EpisodeMetadata);
    uint64_t v35 = (uint64_t)v10 + *(int *)(v33 + 48);
    *uint64_t v10 = v31;
    v10[1] = v30;
    sub_100392970(v34, v35);
    uint64_t v36 = *(int *)(v33 + 48);
    uint64_t v37 = v107;
    uint64_t v38 = (uint64_t)v107 + v36;
    *uint64_t v107 = v31;
    v37[1] = v30;
    sub_1003D34F0(v35, (uint64_t)v37 + v36, type metadata accessor for EpisodeMetadata);
    swift_bridgeObjectRetain_n();
    sub_1003D3558(v38, type metadata accessor for EpisodeMetadata);
    uint64_t v39 = (uint64_t)v37 + *(int *)(v33 + 48);
    sub_1003D34F0(v35, v39, type metadata accessor for EpisodeMetadata);
    swift_bridgeObjectRelease();
    sub_100392970(v39, (uint64_t)v7);
    os_log_type_t v40 = static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v41 = static OS_os_log.downloads.getter();
    if (os_log_type_enabled(v41, v40))
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v119 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = v90;
      swift_bridgeObjectRetain();
      *(void *)&v118[0] = sub_10004B974(v31, v30, (uint64_t *)&v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v41, v40, "Reporting metrics for episode uuid %{public}s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      Swift::String v7 = v94;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    sub_100054B78((uint64_t *)&unk_1005FF030);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v98;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v44;
    uint64_t v45 = *((void *)v7 + 9);
    if (v45)
    {
      uint64_t v46 = *((void *)v7 + 8);
      uint64_t v47 = *((void *)v7 + 9);
      uint64_t v48 = &type metadata for String;
    }
    else
    {
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      *(void *)(inited + 64) = 0;
    }
    *(void *)(inited + 48) = v46;
    *(void *)(inited + 56) = v47;
    *(void *)(inited + 72) = v48;
    *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 88) = v49;
    int v50 = v7[56];
    uint64_t v116 = v45;
    if (v50 == 1)
    {
      uint64_t v51 = 0;
      char v52 = 0;
      *(void *)(inited + 104) = 0;
      *(void *)(inited + 112) = 0;
    }
    else
    {
      uint64_t v51 = *((void *)v7 + 6);
      char v52 = &type metadata for Int64;
    }
    *(void *)(inited + 96) = v51;
    *(void *)(inited + 120) = v52;
    *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 136) = v53;
    if (*((void *)v7 + 11))
    {
      uint64_t v54 = *((void *)v7 + 10);
      uint64_t v55 = *((void *)v7 + 11);
      uint64_t v56 = &type metadata for String;
    }
    else
    {
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      uint64_t v56 = 0;
      *(void *)(inited + 160) = 0;
    }
    *(void *)(inited + 144) = v54;
    *(void *)(inited + 152) = v55;
    *(void *)(inited + 168) = v56;
    *(void *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 184) = v57;
    if (*((void *)v7 + 13))
    {
      uint64_t v58 = *((void *)v7 + 12);
      uint64_t v59 = *((void *)v7 + 13);
      uint64_t v60 = &type metadata for String;
    }
    else
    {
      uint64_t v58 = 0;
      uint64_t v59 = 0;
      uint64_t v60 = 0;
      *(void *)(inited + 208) = 0;
    }
    *(void *)(inited + 192) = v58;
    *(void *)(inited + 200) = v59;
    *(void *)(inited + 216) = v60;
    *(void *)(inited + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 232) = v61;
    uint64_t v62 = *((void *)v7 + 3);
    if (v62)
    {
      uint64_t v63 = *((void *)v7 + 2);
      uint64_t v64 = &type metadata for String;
    }
    else
    {
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      *(void *)(inited + 256) = 0;
    }
    id v65 = v7;
    *(void *)(inited + 240) = v63;
    *(void *)(inited + 248) = v62;
    *(void *)(inited + 264) = v64;
    *(void *)(inited + 272) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 280) = v66;
    uint64_t v67 = v110;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v68 = URL.absoluteString.getter();
    *(void *)(inited + 312) = &type metadata for String;
    *(void *)(inited + 288) = v68;
    *(void *)(inited + 296) = v69;
    *(void *)(inited + 320) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 328) = v70;
    if (v65[*(int *)(v67 + 48)]) {
      uint64_t v71 = 0x6F65646976;
    }
    else {
      uint64_t v71 = 0x6F69647561;
    }
    *(void *)(inited + 360) = &type metadata for String;
    *(void *)(inited + 336) = v71;
    *(void *)(inited + 344) = 0xE500000000000000;
    unint64_t v72 = sub_10016F450(inited);
    uint64_t v73 = v117;
    uint64_t v74 = sub_1003BC1A8(v72);
    uint64_t v117 = v73;
    swift_bridgeObjectRelease();
    uint64_t v75 = v111;
    sub_100054BBC((uint64_t)&v65[*(int *)(v67 + 60)], v111, &qword_1005F5D20);
    uint64_t v76 = type metadata accessor for Date();
    int v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 48))(v75, 1, v76);
    sub_100054B1C(v75, &qword_1005F5D20);
    Swift::String v7 = v65;
    if (v77 != 1)
    {
      uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v80 = v79;
      uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v120 = &type metadata for String;
      *(void *)&long long v119 = v81;
      *((void *)&v119 + 1) = v82;
      sub_10004D384(&v119, v118);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v121 = v74;
      sub_10027F010(v118, v78, v80, isUniquelyReferenced_nonNull_native);
      uint64_t v74 = v121;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v97;
    unint64_t v16 = v114;
    sub_10004D29C(0, (unint64_t *)&unk_1005FF040);
    id v84 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
    sub_10027726C(v74);
    swift_bridgeObjectRelease();
    v85.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    if (v112)
    {
      uint64_t v20 = 0;
      Class isa = v85.super.isa;
      CFStringRef v22 = v91;
    }
    else
    {
      uint64_t v20 = 1;
      Class isa = v85.super.isa;
      CFStringRef v22 = v92;
    }
    [v84 reportWithType:v20 userInfo:isa location:v22 reason:0 v88 v89];
    int64_t v18 = v115;

    sub_1003D3558((uint64_t)v7, type metadata accessor for EpisodeMetadata);
    uint64_t result = sub_100054B1C((uint64_t)v10, (uint64_t *)&unk_100607F98);
  }
  int64_t v27 = v25 + 1;
  if (v25 + 1 >= v96) {
    goto LABEL_48;
  }
  unint64_t v26 = *(void *)(v95 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v96) {
    goto LABEL_48;
  }
  unint64_t v26 = *(void *)(v95 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v27 = v25 + 3;
  if (v25 + 3 >= v96)
  {
LABEL_48:
    uint64_t v86 = v113;
    swift_release();
    uint64_t v87 = v88;
    *uint64_t v88 = v86;
    *((unsigned char *)v87 + 8) = 0;
    return swift_bridgeObjectRetain();
  }
  unint64_t v26 = *(void *)(v95 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v96) {
      goto LABEL_48;
    }
    unint64_t v26 = *(void *)(v95 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

void sub_1003C0A80(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13 = *a1;
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v14 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10046D010;
  uint64_t v16 = *(void *)(v13 + 16);
  *(void *)(v15 + 56) = &type metadata for Int;
  *(void *)(v15 + 64) = &protocol witness table for Int;
  *(void *)(v15 + 32) = v16;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v17 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  unint64_t v18 = sub_1003D1AB0(v13, (uint64_t)v17, a3, a4, a5, a6, a7);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  long long v19 = sub_1003D1DD8(v18, v17);

  *(void *)a8 = v19;
  *(unsigned char *)(a8 + 8) = 0;
}

uint64_t sub_1003C0C04(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  swift_retain();
  LODWORD(v7) = sub_1004175C8(v6);
  swift_release();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  uint64_t v9 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v10 = static OS_os_log.downloads.getter();
  swift_retain_n();
  BOOL v11 = os_log_type_enabled(v10, v8);
  uint64_t v50 = v3;
  if (!v11)
  {
    swift_release_n();

    if (v7) {
      return v7 & 1;
    }
LABEL_11:
    sub_100178710();
    static os_log_type_t.error.getter();
    uint64_t v35 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_10046D010;
    id v37 = *(id *)(v6 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
    uint64_t v38 = v50;
    OS_dispatch_queue.sync<A>(execute:)();

    uint64_t v39 = &v5[*(int *)(v38 + 20)];
    uint64_t v41 = *(void *)v39;
    uint64_t v40 = *((void *)v39 + 1);
    swift_bridgeObjectRetain();
    sub_1003D3558((uint64_t)v5, type metadata accessor for DownloadJob);
    *(void *)(v36 + 56) = &type metadata for String;
    *(void *)(v36 + 64) = sub_10004DA4C();
    *(void *)(v36 + 32) = v41;
    *(void *)(v36 + 40) = v40;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    return v7 & 1;
  }
  swift_retain();
  uint64_t v12 = swift_slowAlloc();
  int v47 = v8;
  uint64_t v13 = v12;
  uint64_t v46 = swift_slowAlloc();
  uint64_t v56 = v46;
  *(_DWORD *)uint64_t v13 = 136315650;
  int v49 = v7;
  v43[1] = v13 + 4;
  uint64_t v14 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  id v15 = *(id *)(v6 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v44 = v1;

  uint64_t v16 = (uint64_t *)&v5[*(int *)(v3 + 20)];
  uint64_t v48 = v9;
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  swift_bridgeObjectRetain();
  os_log_t v45 = v10;
  sub_1003D3558((uint64_t)v5, type metadata accessor for DownloadJob);
  uint64_t v51 = sub_10004B974(v17, v18, &v56);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v13 + 12) = 2080;
  uint64_t v19 = v14;
  id v20 = *(id *)(v6 + v14);
  uint64_t v21 = v44;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v44 = v21;

  CFStringRef v22 = &v5[*(int *)(v3 + 32)];
  uint64_t v23 = *(void *)v22;
  BOOL v24 = (void *)*((void *)v22 + 1);
  int v25 = v22[16];
  swift_bridgeObjectRetain();
  sub_1003D3558((uint64_t)v5, type metadata accessor for DownloadJob);
  uint64_t v51 = 0x496E6F6973736553;
  unint64_t v52 = 0xEB00000000203A44;
  if (v25) {
    uint64_t v26 = 1936484398;
  }
  else {
    uint64_t v26 = 0x7261646E6174732ELL;
  }
  if (v25) {
    int64_t v27 = (void *)0xE400000000000000;
  }
  else {
    int64_t v27 = (void *)0xE900000000000064;
  }
  v55._uint64_t countAndFlagsBits = v23;
  v55._object = v24;
  swift_bridgeObjectRetain();
  v28._uint64_t countAndFlagsBits = v26;
  v28._object = v27;
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_10004B974(v51, v52, &v56);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v13 + 22) = 2048;
  id v29 = *(id *)(v6 + v19);
  sub_100054B78(&qword_1005F8450);
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v30 = v53;
  uint64_t v7 = v54;
  sub_100041A98(&v51, v53);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 24);
  uint64_t v32 = v7;
  LOBYTE(v7) = v49;
  uint64_t v33 = v31(v30, v32);
  sub_10004D2D8((uint64_t)&v51);
  swift_release();
  uint64_t v51 = v33;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release();
  os_log_t v34 = v45;
  _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v47, "Adding job pipeline for episode %s for session %s task %ld", (uint8_t *)v13, 0x20u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if ((v7 & 1) == 0) {
    goto LABEL_11;
  }
  return v7 & 1;
}

uint64_t sub_1003C11BC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v10 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v15 = _swiftEmptyArrayStorage;
  uint64_t v54 = (void *)v14;
  uint64_t v55 = v5;
  uint64_t v52 = a4;
  if (!v14) {
    goto LABEL_20;
  }
  uint64_t v57 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10005986C(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v50 = a3;
    uint64_t v51 = a5;
    if ((v13 & 0xC000000000000001) != 0)
    {
      uint64_t v17 = 0;
      do
      {
        id v18 = objc_retain(*(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)()
                                + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue));
        uint64_t v19 = v55;
        OS_dispatch_queue.sync<A>(execute:)();
        uint64_t v55 = v19;

        id v20 = &v12[*(int *)(v10 + 20)];
        uint64_t v22 = *(void *)v20;
        uint64_t v21 = *((void *)v20 + 1);
        swift_bridgeObjectRetain();
        sub_1003D3558((uint64_t)v12, type metadata accessor for DownloadJob);
        swift_unknownObjectRelease();
        id v15 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10005986C(0, v15[2] + 1, 1);
          id v15 = v57;
        }
        unint64_t v24 = v15[2];
        unint64_t v23 = v15[3];
        if (v24 >= v23 >> 1)
        {
          sub_10005986C(v23 > 1, v24 + 1, 1);
          id v15 = v57;
        }
        uint64_t v17 = (void *)((char *)v17 + 1);
        v15[2] = v24 + 1;
        int v25 = &v15[2 * v24];
        v25[4] = v22;
        v25[5] = v21;
      }
      while (v54 != v17);
    }
    else
    {
      uint64_t v26 = (void *)(v13 + 32);
      uint64_t v27 = v14;
      do
      {
        Swift::String v28 = *(void **)(*v26 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
        swift_retain();
        id v29 = v28;
        uint64_t v30 = v55;
        OS_dispatch_queue.sync<A>(execute:)();
        uint64_t v55 = v30;

        uint64_t v31 = &v12[*(int *)(v10 + 20)];
        uint64_t v33 = *(void *)v31;
        uint64_t v32 = *((void *)v31 + 1);
        swift_bridgeObjectRetain();
        sub_1003D3558((uint64_t)v12, type metadata accessor for DownloadJob);
        swift_release();
        id v15 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10005986C(0, v15[2] + 1, 1);
          id v15 = v57;
        }
        unint64_t v35 = v15[2];
        unint64_t v34 = v15[3];
        if (v35 >= v34 >> 1)
        {
          sub_10005986C(v34 > 1, v35 + 1, 1);
          id v15 = v57;
        }
        v15[2] = v35 + 1;
        uint64_t v36 = &v15[2 * v35];
        v36[4] = v33;
        v36[5] = v32;
        ++v26;
        --v27;
      }
      while (v27);
    }
    a3 = v50;
    a5 = v51;
LABEL_20:
    uint64_t v37 = sub_1000505EC((uint64_t)v15);
    swift_bridgeObjectRelease();
    uint64_t v38 = (uint64_t)v53;
    if (*(void *)(v37 + 16) <= v53[2] >> 3)
    {
      uint64_t v57 = v53;
      swift_bridgeObjectRetain();
      sub_100059D00(v37);
      swift_bridgeObjectRelease();
      uint64_t v39 = v57;
      if (v57[2])
      {
LABEL_22:
        os_log_type_t v40 = static os_log_type_t.error.getter();
        sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
        uint64_t v41 = static OS_os_log.downloads.getter();
        swift_bridgeObjectRetain();
        if (os_log_type_enabled(v41, v40))
        {
          swift_bridgeObjectRetain();
          uint64_t v42 = swift_slowAlloc();
          uint64_t v54 = (void *)swift_slowAlloc();
          uint64_t v57 = v54;
          *(_DWORD *)uint64_t v42 = 134349314;
          uint64_t v56 = v39[2];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v42 + 12) = 2082;
          uint64_t v53 = (void *)(v42 + 14);
          swift_bridgeObjectRetain();
          uint64_t v43 = Set.description.getter();
          uint64_t v44 = a3;
          unint64_t v46 = v45;
          swift_bridgeObjectRelease();
          uint64_t v56 = sub_10004B974(v43, v46, (uint64_t *)&v57);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          a3 = v44;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v41, v40, "Skipped adding %{public}ld downloads. %{public}s", (uint8_t *)v42, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          if (!v44) {
            goto LABEL_28;
          }
        }
        else
        {
          swift_bridgeObjectRelease();

          if (!a3) {
            goto LABEL_28;
          }
        }
        goto LABEL_27;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1003CE988(v37, v38);
      swift_bridgeObjectRelease();
      if (v39[2]) {
        goto LABEL_22;
      }
    }
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    int v47 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_10046D010;
    *(void *)(v48 + 56) = &type metadata for Int;
    *(void *)(v48 + 64) = &protocol witness table for Int;
    *(void *)(v48 + 32) = v54;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    if (!a3)
    {
LABEL_28:
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a5 = 0;
      *(unsigned char *)(a5 + 8) = 0;
      return result;
    }
LABEL_27:
    a3(v39);
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

void sub_1003C17E8(uint64_t a1, void (*a2)(void *), uint64_t a3, char a4)
{
  if (a4)
  {
    v27[0] = a1;
    swift_errorRetain();
    sub_100054B78(&qword_100603F70);
    if (swift_dynamicCast())
    {
      uint64_t v5 = v29;
      uint64_t v6 = v30;
      char v7 = BYTE8(v30);
      static os_log_type_t.error.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      os_log_type_t v8 = (void *)static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_10046D010;
      uint64_t v29 = v5;
      *(void *)&long long v30 = v6;
      BYTE8(v30) = v7;
      sub_1002435BC();
      uint64_t v10 = Error.localizedDescription.getter();
      uint64_t v12 = v11;
      *(void *)(v9 + 56) = &type metadata for String;
      *(void *)(v9 + 64) = sub_10004DA4C();
      *(void *)(v9 + 32) = v10;
      *(void *)(v9 + 40) = v12;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v14 = (void *)Strong;
        sub_1003C1BF4(v5, v6, v7);
        sub_1002433D8(v5, v6, v7);
      }
      else
      {
        sub_1002433D8(v5, v6, v7);
      }
    }
    else
    {
      static os_log_type_t.error.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      id v20 = (void *)static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_10046D010;
      swift_getErrorValue();
      uint64_t v22 = Error.localizedDescription.getter();
      uint64_t v24 = v23;
      *(void *)(v21 + 56) = &type metadata for String;
      *(void *)(v21 + 64) = sub_10004DA4C();
      *(void *)(v21 + 32) = v22;
      *(void *)(v21 + 40) = v24;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v25 = swift_unknownObjectWeakLoadStrong();
      if (v25)
      {
        uint64_t v26 = (void *)v25;
        sub_100054BBC(v25 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v27, (uint64_t *)&unk_1005F7AA0);

        if (v28)
        {
          sub_100041A98(v27, v28);
          uint64_t v29 = 1;
          long long v30 = 0u;
          long long v31 = 0u;
          char v32 = 2;
          sub_1001F8474((long long *)&v29);
          sub_10004D2D8((uint64_t)v27);
        }
        else
        {
          sub_100054B1C((uint64_t)v27, (uint64_t *)&unk_1005F7AA0);
        }
      }
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    id v15 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_10046D010;
    swift_getErrorValue();
    uint64_t v17 = Error.localizedDescription.getter();
    uint64_t v19 = v18;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_10004DA4C();
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
  }
  if (a2) {
    a2(&_swiftEmptySetSingleton);
  }
}

void sub_1003C1BF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  switch(a3)
  {
    case 1:
      sub_1003D19F0();
      uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userEpisodeStorage);
      uint64_t v9 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v10 = *(uint64_t (**)(uint64_t))(v8 + 16);
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v11 = swift_retain();
      uint64_t v12 = (void *)v10(v11);
      swift_release();
      uint64_t v13 = (void *)swift_allocObject();
      void v13[2] = v12;
      void v13[3] = a1;
      v13[4] = a2;
      v13[5] = sub_1003D2E14;
      void v13[6] = v9;
      *((void *)&v23 + 1) = sub_1003D2E3C;
      uint64_t v24 = v13;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      *(void *)&long long v22 = 1107296256;
      *((void *)&v22 + 1) = sub_10003B424;
      *(void *)&long long v23 = &unk_100568050;
      uint64_t v14 = _Block_copy(&aBlock);
      id v15 = v12;
      sub_1002433A0(a1, a2, 1u);
      swift_retain();
      swift_release();
      [v15 performBlock:v14];
      _Block_release(v14);
      swift_unknownObjectRelease();
      swift_release_n();

      return;
    case 2:
      if (!a1) {
        goto LABEL_8;
      }
      swift_errorRetain();
      swift_errorRetain();
      static os_log_type_t.error.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v16 = (void *)static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_10046D010;
      swift_getErrorValue();
      uint64_t v18 = Error.localizedDescription.getter();
      uint64_t v20 = v19;
      *(void *)(v17 + 56) = &type metadata for String;
      *(void *)(v17 + 64) = sub_10004DA4C();
      *(void *)(v17 + 32) = v18;
      *(void *)(v17 + 40) = v20;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      sub_100054BBC(v4 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v25, (uint64_t *)&unk_1005F7AA0);
      if (v26)
      {
        sub_100041A98(v25, v26);
        uint64_t aBlock = 1;
        long long v22 = 0u;
        long long v23 = 0u;
        LOBYTE(v24) = 2;
        sub_1001F8474((long long *)&aBlock);
        sub_1002433D8(a1, a2, 2u);
        sub_1002433D8(a1, a2, 2u);
        goto LABEL_11;
      }
      sub_1002433D8(a1, a2, 2u);
      sub_1002433D8(a1, a2, 2u);
      goto LABEL_13;
    case 3:
LABEL_8:
      sub_1003D19F0();
      sub_100054BBC(v3 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v25, (uint64_t *)&unk_1005F7AA0);
      if (!v26) {
        goto LABEL_13;
      }
      sub_100041A98(v25, v26);
      uint64_t aBlock = 1;
      long long v22 = 0u;
      long long v23 = 0u;
      LOBYTE(v24) = 2;
      goto LABEL_10;
    default:
      static os_log_type_t.default.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      char v7 = (void *)static OS_os_log.downloads.getter();
      os_log(_:dso:log:_:_:)();

      sub_100054BBC(v4 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v25, (uint64_t *)&unk_1005F7AA0);
      if (v26)
      {
        sub_100041A98(v25, v26);
        uint64_t aBlock = 2;
        long long v22 = 0u;
        long long v23 = 0u;
        LOBYTE(v24) = 2;
LABEL_10:
        sub_1001F8474((long long *)&aBlock);
LABEL_11:
        sub_10004D2D8((uint64_t)v25);
      }
      else
      {
LABEL_13:
        sub_100054B1C((uint64_t)v25, (uint64_t *)&unk_1005F7AA0);
      }
      return;
  }
}

uint64_t sub_1003C204C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v66 = a8;
  LODWORD(v67) = a6;
  uint64_t v65 = a5;
  uint64_t v74 = a4;
  uint64_t v69 = a2;
  uint64_t v68 = a1;
  uint64_t v63 = type metadata accessor for DispatchTimeInterval();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin();
  uint64_t v64 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v61 = type metadata accessor for URL();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin();
  uint64_t v73 = &v54[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for EpisodeMetadata(0) - 8;
  __chkstk_darwin();
  unint64_t v72 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v59 = type metadata accessor for UUID();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin();
  uint64_t v14 = &v54[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v15 = (int *)type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v71 = &v54[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v18 = &v54[-v17];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = a3 + *(int *)(v11 + 52);
  uint64_t v21 = *(void *)(a3 + 32);
  uint64_t v22 = *(unsigned __int8 *)(a3 + 40);
  uint64_t v23 = sub_100234490();
  (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t))(v66 + 40))(&v82, v81, v20, v21, v22, v67, v23, v24 & 1, ObjectType, v66);
  uint64_t v25 = v82;
  long long v27 = v83;
  uint64_t v26 = v84;
  int v28 = BYTE8(v84);
  sub_100054BBC((uint64_t)v81, (uint64_t)&v79, &qword_1005FC7A8);
  if (v80)
  {
    uint64_t v66 = v25;
    uint64_t v67 = v27;
    sub_100042FC4(&v79, (uint64_t)&v82);
    UUID.init()();
    uint64_t v57 = v26;
    long long v29 = v84;
    sub_100041A98(&v82, v84);
    uint64_t v56 = *((void *)&v27 + 1);
    long long v30 = *(uint64_t (**)(void, void))(*((void *)&v29 + 1) + 24);
    int v55 = v28;
    uint64_t v31 = v69;
    swift_bridgeObjectRetain();
    uint64_t v32 = v30(v29, *((void *)&v29 + 1));
    sub_1003D34F0(a3, (uint64_t)&v18[v15[9]], type metadata accessor for EpisodeMetadata);
    Date.init()();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 32))(v18, v14, v59);
    *(void *)&v18[v15[7]] = v32;
    uint64_t v33 = &v18[v15[8]];
    uint64_t v34 = v57;
    *(void *)uint64_t v33 = v56;
    *((void *)v33 + 1) = v34;
    v33[16] = v55;
    unint64_t v35 = (uint64_t *)&v18[v15[5]];
    uint64_t v36 = v68;
    *unint64_t v35 = v68;
    v35[1] = v31;
    uint64_t v37 = &v18[v15[10]];
    *(void *)uint64_t v37 = 0;
    *((void *)v37 + 1) = 0;
    *((void *)v37 + 2) = 0;
    *((void *)v37 + 3) = 1;
    *((void *)v37 + 4) = 0;
    *((void *)v37 + 5) = 0;
    *((_WORD *)v37 + 24) = 0;
    sub_1003D34F0(a3, (uint64_t)v72, type metadata accessor for EpisodeMetadata);
    sub_1003D34F0((uint64_t)v18, (uint64_t)v71, type metadata accessor for DownloadJob);
    sub_100056D54((uint64_t)&v82, (uint64_t)&v79);
    uint64_t v38 = v70;
    uint64_t v39 = *(void *)&v70[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_jobStorage];
    uint64_t v40 = *(void *)&v70[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_jobStorage + 8];
    sub_100054BBC((uint64_t)&v70[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_mediaLibraryClient], (uint64_t)v78, (uint64_t *)&unk_1005F6FD0);
    sub_100056D54((uint64_t)v38 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_dsidProvider, (uint64_t)v76);
    sub_100056D54((uint64_t)v38 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_artworkStorage, (uint64_t)v75);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v60 + 16))(v73, (uint64_t)v38 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_assetsFolder, v61);
    uint64_t v41 = qword_1005F59D0;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v42 = v31;
    if (v41 != -1) {
      swift_once();
    }
    uint64_t v43 = v63;
    uint64_t v44 = sub_10018A370(v63, (uint64_t)qword_10061A948);
    uint64_t v45 = (uint64_t)v64;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v62 + 16))(v64, v44, v43);
    sub_100055EF0((uint64_t)v76, v77);
    __chkstk_darwin();
    (*(void (**)(void))(v46 + 16))();
    id v47 = v38;
    *((void *)&v53 + 1) = v39;
    *(void *)&long long v53 = v65;
    uint64_t v48 = sub_1003D1270(v36, v42, (uint64_t)v72, (uint64_t)v71, (uint64_t)&v79, v66, v67, v74, v53, v40, (uint64_t)v78, (uint64_t)v75, (uint64_t)v73, v47, v45, 0);
    sub_10004D2D8((uint64_t)v76);
    sub_1003D3558((uint64_t)v18, type metadata accessor for DownloadJob);
    sub_100054B1C((uint64_t)v81, &qword_1005FC7A8);
    sub_10004D2D8((uint64_t)&v82);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100054B1C((uint64_t)&v79, &qword_1005FC7A8);
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v49 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_10046D010;
    *(void *)(v50 + 56) = &type metadata for String;
    *(void *)(v50 + 64) = sub_10004DA4C();
    uint64_t v51 = v69;
    *(void *)(v50 + 32) = v68;
    *(void *)(v50 + 40) = v51;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    sub_100054BBC((uint64_t)&v70[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter], (uint64_t)&v79, (uint64_t *)&unk_1005F7AA0);
    if (v80)
    {
      sub_100041A98(&v79, v80);
      uint64_t v82 = 1;
      long long v83 = 0u;
      long long v84 = 0u;
      char v85 = 2;
      sub_1001F8474((long long *)&v82);
      sub_1000536BC(v25);
      sub_100054B1C((uint64_t)v81, &qword_1005FC7A8);
      sub_10004D2D8((uint64_t)&v79);
    }
    else
    {
      sub_100054B1C((uint64_t)v81, &qword_1005FC7A8);
      sub_1000536BC(v25);
      sub_100054B1C((uint64_t)&v79, (uint64_t *)&unk_1005F7AA0);
    }
    return 0;
  }
  return v48;
}

void EpisodeDownloadsManager.init()()
{
}

id EpisodeDownloadsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeDownloadsManager();
  return [super dealloc];
}

uint64_t sub_1003C2BB0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    char v7 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_10046D010;
    uint64_t v16 = a1;
    sub_10024369C();
    uint64_t v9 = Error.localizedDescription.getter();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_10004DA4C();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return sub_1003D2E54(a1, a2, 1);
    }
    uint64_t v13 = (void *)Strong;
    sub_100054BBC(Strong + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v14, (uint64_t *)&unk_1005F7AA0);

    if (v15)
    {
      sub_100041A98(v14, v15);
      uint64_t v16 = 1;
      long long v17 = 0u;
      long long v18 = 0u;
      char v19 = 2;
      sub_1001F8474((long long *)&v16);
      sub_1003D2E54(a1, a2, 1);
      return sub_10004D2D8((uint64_t)v14);
    }
    sub_1003D2E54(a1, a2, 1);
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    uint64_t v6 = (void *)result;
    sub_100054BBC(result + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v14, (uint64_t *)&unk_1005F7AA0);

    if (v15)
    {
      sub_100041A98(v14, v15);
      uint64_t v16 = a1;
      long long v17 = (unint64_t)a2;
      long long v18 = 0uLL;
      char v19 = 1;
      sub_1001F8474((long long *)&v16);
      return sub_10004D2D8((uint64_t)v14);
    }
  }
  return sub_100054B1C((uint64_t)v14, (uint64_t *)&unk_1005F7AA0);
}

uint64_t EpisodeDownloadsManager.handleEventsForBackgroundURLSession(identifier:handler:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a4;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v43 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v40 - v11;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_100175204();
  if (v14)
  {
    uint64_t v16 = v13;
    long long v17 = v14;
    char v18 = v15;
    uint64_t v41 = v8;
    char v19 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_expectedDownloaderTypes);
    swift_beginAccess();
    uint64_t v20 = *v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v21 = sub_10030ACF0(v16, (uint64_t)v17, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21)
    {
      char v22 = v18 & 1;
      id v23 = sub_100041274();
      sub_100054B78((uint64_t *)&unk_1005FA7F0);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_10046D060;
      uint64_t v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      *(void *)(v26 + 24) = a3;
      *(void *)(v26 + 32) = v42;
      *(void *)(v26 + 40) = v16;
      *(void *)(v26 + 48) = v17;
      *(unsigned char *)(v26 + 56) = v22;
      *(void *)(v26 + 64) = a1;
      *(void *)(v26 + 72) = a2;
      id v47 = sub_1003D18CC;
      uint64_t v48 = v26;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v45 = sub_10003B424;
      uint64_t v46 = &unk_100567A50;
      long long v27 = _Block_copy(&aBlock);
      int v28 = self;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      id v29 = [v28 blockOperationWithBlock:v27];
      _Block_release(v27);
      swift_release();
      swift_release();
      *(void *)(v24 + 32) = v29;
      *(void *)&long long aBlock = v24;
      specialized Array._endMutation()();
      sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v23 addOperations:isa waitUntilFinished:0];

      return 1;
    }
    static Logger.downloads.getter();
    swift_bridgeObjectRetain();
    unint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136446210;
      v49[0] = v38;
      strcpy((char *)&aBlock, "ConfigType: ");
      BYTE13(aBlock) = 0;
      HIWORD(aBlock) = -5120;
      swift_bridgeObjectRetain();
      v39._uint64_t countAndFlagsBits = v16;
      v39._object = v17;
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      *(void *)&long long aBlock = sub_10004B974(aBlock, *((unint64_t *)&aBlock + 1), v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "No downloader of type %{public}s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v41);
  }
  else
  {
    static Logger.downloads.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446210;
      swift_bridgeObjectRetain();
      v49[1] = sub_10004B974(a1, a2, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Unable to handleEventsForBackgroundURLSession for invalid session identifier string: '%{public}s'.", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v8);
  }
  return 0;
}

void sub_1003C3408(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v41 = a7;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v42 = *(void *)(v13 - 8);
  __chkstk_darwin();
  char v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v17 = (char *)&v36 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v19 = (void *)Strong;
    uint64_t v39 = a3;
    uint64_t v40 = v13;
    *(&v36 - 4) = __chkstk_darwin();
    *(&v36 - 3) = a4;
    *(&v36 - 2) = a5;
    sub_100054B78(&qword_100607FA8);
    OS_dispatch_queue.sync<A>(execute:)();
    if (v44[0])
    {
      uint64_t v20 = v44[1];
      static Logger.downloads.getter();
      swift_bridgeObjectRetain_n();
      char v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v37 = v20;
        id v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v38 = (uint64_t)a2;
        v44[0] = v24;
        *(_DWORD *)id v23 = 136446210;
        swift_bridgeObjectRetain();
        v45[0] = sub_10004B974(v41, a8, v44);
        uint64_t v20 = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Setting background URLSession handler for sessionIdentifier: %{public}s", v23, 0xCu);
        swift_arrayDestroy();
        a2 = (void (*)(void))v38;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v40);
      uint64_t ObjectType = swift_getObjectType();
      os_log_type_t v33 = *(void (**)(void (*)(void), uint64_t, uint64_t, uint64_t))(v20 + 56);
      uint64_t v34 = v39;
      swift_retain();
      v33(a2, v34, ObjectType, v20);

      swift_unknownObjectRelease();
    }
    else
    {
      static Logger.downloads.getter();
      swift_bridgeObjectRetain_n();
      id v25 = v19;
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        v45[0] = v38;
        *(_DWORD *)uint64_t v28 = 136446466;
        swift_bridgeObjectRetain();
        v44[0] = sub_10004B974(v41, a8, v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v28 + 12) = 2082;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_100054B78(&qword_100608098);
        sub_1003D3370();
        uint64_t v29 = Dictionary.description.getter();
        unint64_t v31 = v30;
        swift_bridgeObjectRelease();
        uint64_t v43 = sub_10004B974(v29, v31, v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Not handling background URLSession events for unknown sessionIdentifier: %{public}s. Found types: %{public}s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v17, v40);
      ((void (*)(uint64_t))a2)(v35);
    }
  }
  else
  {
    a2();
  }
}

uint64_t sub_1003C3A20(void *a1, uint64_t a2, void **a3, char a4, uint64_t a5)
{
  uint64_t v78 = type metadata accessor for URL();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v11 - 8);
  uint64_t v75 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AssetDownloadStatus();
  uint64_t v14 = __chkstk_darwin(v13);
  long long v84 = (id *)((char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v81 = (uint64_t)&v75 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v83 = (uint64_t)&v75 - v19;
  __chkstk_darwin(v18);
  uint64_t v85 = (uint64_t)&v75 - v20;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v86 = a5;
  if (!Strong) {
    goto LABEL_20;
  }
  os_log_type_t v22 = (void *)Strong;
  uint64_t v80 = v13;
  uint64_t v23 = *(void *)(Strong + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage);
  swift_retain();

  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  sub_100041A98(a1, v24);
  uint64_t v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
  [*(id *)(v23 + 16) lock];
  swift_beginAccess();
  uint64_t v79 = v23;
  swift_bridgeObjectRetain();
  unint64_t v26 = swift_bridgeObjectRetain();
  unint64_t v27 = (unint64_t)sub_1003D1F80(v26, a2, a3, a4 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27 >> 62) {
    goto LABEL_15;
  }
  uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v28; uint64_t v28 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v82 = a1;
    a1 = (void *)(v27 & 0xC000000000000001);
    uint64_t v29 = 4;
    while (1)
    {
      uint64_t v30 = v29 - 4;
      if (!a1) {
        break;
      }
      uint64_t v31 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v32 = v29 - 3;
      if (__OFADD__(v30, 1)) {
        goto LABEL_14;
      }
LABEL_10:
      id v33 = *(id *)(v31 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      sub_100054B78(&qword_1005F8450);
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v35 = v91;
      uint64_t v34 = v92;
      sub_100041A98(v90, v91);
      uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 24))(v35, v34);
      sub_10004D2D8((uint64_t)v90);
      if (v36 == v87)
      {
        swift_bridgeObjectRelease_n();
        a1 = v82;
        goto LABEL_17;
      }
      swift_release();
      ++v29;
      if (v32 == v28)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v31 = 0;
        a1 = v82;
        goto LABEL_17;
      }
    }
    uint64_t v31 = *(void *)(v27 + 8 * v29);
    swift_retain();
    uint64_t v32 = v29 - 3;
    if (!__OFADD__(v30, 1)) {
      goto LABEL_10;
    }
LABEL_14:
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
  uint64_t v31 = 0;
LABEL_17:
  [*(id *)(v79 + 16) unlock];
  swift_release();
  a5 = v86;
  if (v31)
  {
    uint64_t v37 = v83;
    sub_1003D34F0(v86, v83, (uint64_t (*)(void))type metadata accessor for AssetDownloadStatus);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v64 = *(void **)v37;
        sub_1001880A4(*(void **)v37, *(void *)(v37 + 8), *(void *)(v37 + 16), 0);

        goto LABEL_32;
      case 2u:
        uint64_t v65 = (int *)sub_100054B78(&qword_1005FE4C0);
        uint64_t v66 = v37 + v65[12];
        uint64_t v67 = *(void *)v66;
        int v68 = *(unsigned __int8 *)(v66 + 8);
        uint64_t v69 = *(void *)(v37 + v65[16]);
        uint64_t v70 = *(void **)(v37 + v65[20]);
        uint64_t v71 = v77;
        uint64_t v72 = (uint64_t)v76;
        uint64_t v73 = v37;
        uint64_t v74 = v78;
        (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v76, v73, v78);
        sub_10017ACB8(v72, v67, v68, v69, v70, 0, 0);
        swift_release();

        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v72, v74);
        break;
      case 3u:
        sub_100188AD8();
LABEL_32:
        uint64_t result = swift_release();
        break;
      default:
        uint64_t v38 = *(void **)v37;
        uint64_t v39 = (uint64_t)v75;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v75, 1, 1, v78);
        sub_1001860C0((unint64_t)v38, 0, 0, v39);
        sub_100054B1C(v39, (uint64_t *)&unk_1005F7750);
        swift_release();
        uint64_t result = swift_errorRelease();
        break;
    }
  }
  else
  {
LABEL_20:
    os_log_type_t v41 = static os_log_type_t.error.getter();
    uint64_t v87 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v42 = static OS_os_log.downloads.getter();
    uint64_t v43 = v85;
    sub_1003D34F0(a5, v85, (uint64_t (*)(void))type metadata accessor for AssetDownloadStatus);
    sub_100056D54((uint64_t)a1, (uint64_t)v90);
    os_log_type_t v44 = v41;
    if (os_log_type_enabled(v42, v41))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136446466;
      sub_1003D34F0(v43, v81, (uint64_t (*)(void))type metadata accessor for AssetDownloadStatus);
      uint64_t v46 = String.init<A>(reflecting:)();
      uint64_t v88 = sub_10004B974(v46, v47, &v89);
      uint64_t v82 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003D3558(v43, (uint64_t (*)(void))type metadata accessor for AssetDownloadStatus);
      *(_WORD *)(v45 + 12) = 2082;
      uint64_t v48 = v91;
      uint64_t v49 = v92;
      sub_100041A98(v90, v91);
      uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 56))(v48, v49);
      uint64_t v88 = sub_10004B974(v50, v51, &v89);
      a1 = v82;
      a5 = v86;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10004D2D8((uint64_t)v90);
      _os_log_impl((void *)&_mh_execute_header, v42, v44, "URLSession delivered status update for download that does not exist. Status: %{public}s. Task description:%{public}s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_1003D3558(v43, (uint64_t (*)(void))type metadata accessor for AssetDownloadStatus);
      sub_10004D2D8((uint64_t)v90);
    }
    uint64_t v52 = v84;
    sub_1003D34F0(a5, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for AssetDownloadStatus);
    if (swift_getEnumCaseMultiPayload() == 1)
    {

      os_log_type_t v53 = static os_log_type_t.error.getter();
      uint64_t v54 = static OS_os_log.downloads.getter();
      sub_100056D54((uint64_t)a1, (uint64_t)v90);
      if (os_log_type_enabled(v54, v53))
      {
        int v55 = (uint8_t *)swift_slowAlloc();
        uint64_t v89 = swift_slowAlloc();
        *(_DWORD *)int v55 = 136446210;
        uint64_t v56 = a1;
        uint64_t v57 = v91;
        uint64_t v58 = v92;
        sub_100041A98(v90, v91);
        uint64_t v59 = v57;
        a1 = v56;
        uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 56))(v59, v58);
        uint64_t v88 = sub_10004B974(v60, v61, &v89);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10004D2D8((uint64_t)v90);
        _os_log_impl((void *)&_mh_execute_header, v54, v53, "Cancel untracked download. Task description:%{public}s", v55, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10004D2D8((uint64_t)v90);
      }
      uint64_t v62 = a1[3];
      uint64_t v63 = a1[4];
      sub_100041A98(a1, v62);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 120))(v62, v63);
    }
    else
    {
      return sub_1003D3558((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for AssetDownloadStatus);
    }
  }
  return result;
}

uint64_t sub_1003C4468(uint64_t a1)
{
  return sub_1003C4490(a1, (uint64_t)&unk_100568358, (uint64_t)sub_1003D3120, (uint64_t)&unk_100568370);
}

uint64_t sub_1003C4490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)&v4[OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_delegateQueue];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v4;
  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = a4;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v17 = v4;
  static DispatchQoS.unspecified.getter();
  char v21 = _swiftEmptyArrayStorage;
  sub_100055C40((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10005666C((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  return swift_release();
}

uint64_t MTLegacyDownloadProtocol.logDescription.getter(uint64_t a1)
{
  objc_super v2 = v1;
  _StringGuts.grow(_:)(376);
  v4._object = (void *)0x80000001004E1B60;
  v4._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v4);
  id v5 = [v1 podcastUuid];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  sub_100054B78(&qword_1005F93A0);
  v10._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._object = (void *)0x80000001004E1B80;
  v11._uint64_t countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v11);
  id v12 = [v2 episodeUuid:v7, v9];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  v17._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._object = (void *)0x80000001004E1BA0;
  v18._uint64_t countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v18);
  id v19 = [v2 episodeGuid:v14, v16];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  v24._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._object = (void *)0x80000001004E1BC0;
  v25._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v25);
  id v26 = [v2 storeItemId:v21, v23];
  unint64_t v27 = v26;
  if (v26)
  {
    id v28 = [v26 longLongValue];
  }
  else
  {
    id v28 = 0;
  }
  LOBYTE(v74) = v27 == 0;
  sub_100054B78(&qword_100607DB0);
  v29._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 0xD000000000000022;
  v30._object = (void *)0x80000001004E1BE0;
  String.append(_:)(v30);
  id v31 = [v2 storeCollectionIdentifier:v28, v74];
  uint64_t v32 = v31;
  if (v31)
  {
    id v33 = [v31 longLongValue];
  }
  else
  {
    id v33 = 0;
  }
  LOBYTE(v75) = v32 == 0;
  v34._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._object = (void *)0x80000001004E1C10;
  v35._uint64_t countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v35);
  id v72 = [v2 downloadBytes:v33, v75];
  v36._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = 0xD000000000000017;
  v37._object = (void *)0x80000001004E1C30;
  String.append(_:)(v37);
  id v73 = [v2 downloadBytes];
  v38._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  v39._uint64_t countAndFlagsBits = 0xD000000000000018;
  v39._object = (void *)0x80000001004E1C50;
  String.append(_:)(v39);
  [v2 downloadProgress:v73];
  v40._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v41._object = (void *)0x80000001004E1C70;
  v41._uint64_t countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v41);
  [v2 downloadPhase];
  type metadata accessor for MTEpisodeDownloadPhase(0);
  v42._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v43._object = (void *)0x80000001004E1C90;
  String.append(_:)(v43);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = a1;
  *(void *)(v44 + 24) = v2;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_1003D3368;
  *(void *)(v45 + 24) = v44;
  uint64_t v76 = v45;
  swift_unknownObjectRetain();
  sub_100054B78((uint64_t *)&unk_100607DB8);
  v46._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  v47._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v47._object = (void *)0x80000001004E1CB0;
  String.append(_:)(v47);
  [v2 downloadRemainingTime:sub_1003D18E4 v76];
  v48._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v48);
  swift_bridgeObjectRelease();
  v49._uint64_t countAndFlagsBits = 0xD000000000000019;
  v49._object = (void *)0x80000001004E1CD0;
  String.append(_:)(v49);
  id v50 = [v2 downloadDescription];
  if (v50)
  {
    unint64_t v51 = v50;
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;
  }
  else
  {
    uint64_t v54 = (void *)0xE400000000000000;
    uint64_t v52 = 1162760014;
  }
  v55._uint64_t countAndFlagsBits = v52;
  v55._object = v54;
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  v56._object = (void *)0x80000001004E1CF0;
  v56._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v56);
  unsigned int v57 = [v2 isPausable];
  BOOL v58 = v57 == 0;
  if (v57) {
    uint64_t v59 = 5457241;
  }
  else {
    uint64_t v59 = 20302;
  }
  if (v58) {
    unint64_t v60 = 0xE200000000000000;
  }
  else {
    unint64_t v60 = 0xE300000000000000;
  }
  unint64_t v61 = v60;
  String.append(_:)(*(Swift::String *)&v59);
  swift_bridgeObjectRelease();
  v62._uint64_t countAndFlagsBits = 0xD000000000000012;
  v62._object = (void *)0x80000001004E1D10;
  String.append(_:)(v62);
  unsigned int v63 = [v2 isPaused];
  BOOL v64 = v63 == 0;
  if (v63) {
    uint64_t v65 = 5457241;
  }
  else {
    uint64_t v65 = 20302;
  }
  if (v64) {
    unint64_t v66 = 0xE200000000000000;
  }
  else {
    unint64_t v66 = 0xE300000000000000;
  }
  unint64_t v67 = v66;
  String.append(_:)(*(Swift::String *)&v65);
  swift_bridgeObjectRelease();
  v68._object = (void *)0x80000001004E1D30;
  v68._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v68);
  [v2 phase];
  type metadata accessor for LegacyDownloadPhase(0);
  v69._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v69);
  swift_bridgeObjectRelease();
  v70._uint64_t countAndFlagsBits = 32010;
  v70._object = (void *)0xE200000000000000;
  String.append(_:)(v70);
  return 0;
}

uint64_t sub_1003C4E30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), const char *a6)
{
  unint64_t v27 = a6;
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *(id *)(a1 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v17 = sub_100233BCC();
  sub_1003D3558((uint64_t)v15, type metadata accessor for DownloadJob);
  Swift::String v18 = *(void **)(a2 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_notifier);
  if (v18) {
    [v18 _sendDelegateSelector:*a4 withDownload:v17];
  }
  static Logger.downloads.getter();
  swift_unknownObjectRetain_n();
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = a5();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = MTLegacyDownloadProtocol.logDescription.getter(ObjectType);
    uint64_t v29 = sub_10004B974(v23, v24, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v27, v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v28);
}

uint64_t sub_1003C5120(uint64_t a1)
{
  return sub_1003C5554(a1, (uint64_t)sub_1003D19C0, (uint64_t)&unk_100568240, (uint64_t)sub_1003D301C, (uint64_t)&unk_100568258);
}

uint64_t sub_1003C515C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  id v11 = *(id *)(a1 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();

  sub_100233BCC();
  sub_1003D3558((uint64_t)v9, type metadata accessor for DownloadJob);
  id v12 = *(void **)(a2 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_notifier);
  if (v12)
  {
    unint64_t v24 = "downloadManagerDidRemoveDownloads:";
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10046D060;
    id v14 = *(id *)(a1 + v10);
    OS_dispatch_queue.sync<A>(execute:)();

    uint64_t v15 = sub_100233BCC();
    sub_1003D3558((uint64_t)v9, type metadata accessor for DownloadJob);
    *(void *)(v13 + 32) = v15;
    uint64_t v28 = v13;
    specialized Array._endMutation()();
    sub_100054B78((uint64_t *)&unk_1005FB320);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v12 _sendDelegateSelector:v24 withDownloads:isa];
  }
  static Logger.downloads.getter();
  swift_unknownObjectRetain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)id v19 = 136315138;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v21 = MTLegacyDownloadProtocol.logDescription.getter(ObjectType);
    uint64_t v27 = sub_10004B974(v21, v22, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Download pipeline did send notification for pipeline cancel: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v6, v26);
}

uint64_t sub_1003C5518(uint64_t a1)
{
  return sub_1003C5554(a1, (uint64_t)sub_1003D19C0, (uint64_t)&unk_100568308, (uint64_t)sub_1003D3088, (uint64_t)&unk_100568320);
}

uint64_t sub_1003C5554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v26 = a3;
  uint64_t v6 = v5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v14);
  id v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(a1 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  swift_retain();
  id v18 = v17;
  OS_dispatch_queue.sync<A>(execute:)();

  id v19 = (uint64_t *)&v16[*(int *)(v14 + 20)];
  uint64_t v20 = *v19;
  uint64_t v21 = (void *)v19[1];
  swift_bridgeObjectRetain();
  sub_1003D3558((uint64_t)v16, type metadata accessor for DownloadJob);
  sub_1004178BC(v20, v21);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = v6;
  aBlock[4] = v27;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = v28;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  id v24 = v6;
  static DispatchQoS.unspecified.getter();
  uint64_t v32 = _swiftEmptyArrayStorage;
  sub_100055C40((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10005666C((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
  return swift_release();
}

uint64_t sub_1003C58E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::String v36 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(id *)(a1 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v14 = sub_100233BCC();
  sub_1003D3558((uint64_t)v12, type metadata accessor for DownloadJob);
  uint64_t v15 = *(void **)(a2 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_notifier);
  if (v15) {
    [v15 _sendDelegateSelector:"downloadManagerWillRemoveDownload:" withDownload:v14];
  }
  static Logger.downloads.getter();
  swift_unknownObjectRetain_n();
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v35 = v4;
  if (v18)
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)id v19 = 136315138;
    uint64_t v34 = v5;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v21 = MTLegacyDownloadProtocol.logDescription.getter(ObjectType);
    uint64_t v37 = sub_10004B974(v21, v22, v38);
    uint64_t v5 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Download pipeline did send notification for pipeline removal: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v35;
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v9, v4);
  id v24 = v36;
  if (v15) {
    [v15 _sendDelegateSelector:"downloadManagerDidUpdateDownload:" withDownload:v14];
  }
  static Logger.downloads.getter();
  swift_unknownObjectRetain_n();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v28 = swift_getObjectType();
    uint64_t v29 = MTLegacyDownloadProtocol.logDescription.getter(v28);
    uint64_t v37 = sub_10004B974(v29, v30, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Download pipeline did send notification for pipeline update: %s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();

    uint64_t v32 = v35;
    uint64_t v31 = v36;
  }
  else
  {

    swift_unknownObjectRelease_n();
    uint64_t v31 = v24;
    uint64_t v32 = v4;
  }
  return ((uint64_t (*)(char *, uint64_t))v23)(v31, v32);
}

uint64_t sub_1003C5D94(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  int v97 = a4;
  uint64_t v96 = a3;
  uint64_t v98 = a2;
  uint64_t v7 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003C5554(a1, (uint64_t)sub_1003D19C0, (uint64_t)&unk_100568308, (uint64_t)sub_1003D3088, (uint64_t)&unk_100568320);
  uint64_t v10 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  id v11 = *(id *)(a1 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v12 = &v9[*(int *)(v7 + 32)];
  uint64_t v14 = *(void *)v12;
  uint64_t v13 = *((void *)v12 + 1);
  swift_bridgeObjectRetain();
  sub_1003D3558((uint64_t)v9, type metadata accessor for DownloadJob);
  uint64_t v15 = sub_100041A98((void *)(v5 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_downloaderConfiguration), *(void *)(v5 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_downloaderConfiguration + 24));
  unint64_t v16 = 0xD000000000000033;
  unint64_t v17 = 0x80000001004D1B10;
  switch(*(unsigned char *)v15)
  {
    case 1:
      BOOL v18 = "com.apple.podcasts.downloads.episodes.restore";
      goto LABEL_4;
    case 2:
      BOOL v18 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_4:
      unint64_t v17 = (unint64_t)(v18 - 32) | 0x8000000000000000;
      unint64_t v16 = 0xD00000000000002DLL;
      break;
    case 3:
      unint64_t v16 = 0xD00000000000002FLL;
      unint64_t v17 = 0x80000001004D1BB0;
      break;
    default:
      break;
  }
  if (v14 == v16 && v13 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      int v21 = 0;
      unint64_t v22 = &OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_systemEpisodeStorage;
      goto LABEL_14;
    }
  }
  int v21 = 1;
  unint64_t v22 = &OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userEpisodeStorage;
LABEL_14:
  unsigned __int8 v23 = v97;
  uint64_t v24 = *v22;
  uint64_t v95 = v5;
  uint64_t v25 = *(void *)(v5 + v24);
  int v26 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Podcasts11JobPipeline_type);
  if (!(v97 >> 6))
  {
    if (((v26 | v21 ^ 1) & 1) == 0)
    {
      swift_unknownObjectRetain();
      sub_10018AA60(v98, v96, v23);
      int v93 = static os_log_type_t.error.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v92 = static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_10046D030;
      id v44 = *(id *)(a1 + v10);
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v45 = &v9[*(int *)(v7 + 20)];
      uint64_t v47 = *(void *)v45;
      uint64_t v46 = *((void *)v45 + 1);
      swift_bridgeObjectRetain();
      uint64_t v91 = type metadata accessor for DownloadJob;
      sub_1003D3558((uint64_t)v9, type metadata accessor for DownloadJob);
      uint64_t v94 = v25;
      *(void *)(v43 + 56) = &type metadata for String;
      unint64_t v48 = sub_10004DA4C();
      *(void *)(v43 + 64) = v48;
      *(void *)(v43 + 32) = v47;
      *(void *)(v43 + 40) = v46;
      swift_getErrorValue();
      uint64_t v49 = Error.localizedDescription.getter();
      *(void *)(v43 + 96) = &type metadata for String;
      *(void *)(v43 + 104) = v48;
      *(void *)(v43 + 72) = v49;
      *(void *)(v43 + 80) = v50;
      unint64_t v51 = (void *)v92;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      id v52 = *(id *)(a1 + v10);
      OS_dispatch_queue.sync<A>(execute:)();

      os_log_type_t v53 = &v9[*(int *)(v7 + 20)];
      uint64_t v55 = *(void *)v53;
      uint64_t v54 = *((void *)v53 + 1);
      swift_bridgeObjectRetain();
      sub_1003D3558((uint64_t)v9, v91);
      uint64_t v56 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v56;
      *(void *)(v57 + 24) = a1;
      BOOL v58 = *(uint64_t (**)(uint64_t))(v94 + 16);
      swift_retain();
      swift_retain();
      uint64_t v59 = swift_retain();
      unint64_t v60 = (void *)v58(v59);
      swift_release();
      unint64_t v61 = (void *)swift_allocObject();
      v61[2] = v60;
      v61[3] = v55;
      v61[4] = v54;
      v61[5] = sub_1003D3028;
      v61[6] = v57;
      *(void *)&aBlock[32] = sub_1003D3050;
      uint64_t v101 = v61;
      *(void *)long long aBlock = _NSConcreteStackBlock;
      *(void *)&aBlock[8] = 1107296256;
      *(void *)&aBlock[16] = sub_10003B424;
      *(void *)&aBlock[24] = &unk_1005682D0;
      Swift::String v62 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      id v63 = v60;
      swift_retain();
      swift_release();
      [v63 performBlock:v62];
      _Block_release(v62);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      return sub_10018AA14(v98, v96, v97);
    }
    goto LABEL_27;
  }
  if (v97 >> 6 != 1)
  {
    if (((v26 | v21 ^ 1) & 1) == 0)
    {
      swift_unknownObjectRetain();
      uint64_t v75 = v98;
      uint64_t v76 = v96;
      sub_10018AA60(v98, v96, v23);
      static os_log_type_t.error.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      unsigned __int8 v77 = v23;
      uint64_t v78 = (void *)static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_10046D010;
      swift_getErrorValue();
      uint64_t v80 = Error.localizedDescription.getter();
      uint64_t v82 = v81;
      *(void *)(v79 + 56) = &type metadata for String;
      *(void *)(v79 + 64) = sub_10004DA4C();
      *(void *)(v79 + 32) = v80;
      *(void *)(v79 + 40) = v82;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      sub_100054BBC(v95 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v102, (uint64_t *)&unk_1005F7AA0);
      if (v103)
      {
        sub_100041A98(v102, v103);
        *(void *)long long aBlock = 1;
        memset(&aBlock[8], 0, 32);
        LOBYTE(v101) = 2;
        sub_1001F8474((long long *)aBlock);
        sub_10018AA14(v75, v76, v77);
LABEL_39:
        swift_unknownObjectRelease();
        return sub_10004D2D8((uint64_t)v102);
      }
      sub_10018AA14(v75, v76, v77);
      swift_unknownObjectRelease();
      return sub_100054B1C((uint64_t)v102, (uint64_t *)&unk_1005F7AA0);
    }
LABEL_27:
    swift_unknownObjectRetain();
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v65 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_10046D050;
    unint64_t v67 = sub_10004DA4C();
    unint64_t v68 = v67;
    uint64_t v69 = 28526;
    *(void *)(v66 + 56) = &type metadata for String;
    *(void *)(v66 + 64) = v67;
    if (v21) {
      uint64_t v70 = 7562617;
    }
    else {
      uint64_t v70 = 28526;
    }
    if (v21) {
      unint64_t v71 = 0xE300000000000000;
    }
    else {
      unint64_t v71 = 0xE200000000000000;
    }
    *(void *)(v66 + 32) = v70;
    *(void *)(v66 + 40) = v71;
    if (v26)
    {
      uint64_t v69 = 7562617;
      unint64_t v72 = 0xE300000000000000;
    }
    else
    {
      unint64_t v72 = 0xE200000000000000;
    }
    *(void *)(v66 + 96) = &type metadata for String;
    *(void *)(v66 + 104) = v67;
    *(void *)(v66 + 72) = v69;
    *(void *)(v66 + 80) = v72;
    *(void *)long long aBlock = v98;
    *(void *)&aBlock[8] = v96;
    aBlock[16] = v23;
    sub_10018A754();
    uint64_t v73 = Error.localizedDescription.getter();
    *(void *)(v66 + 136) = &type metadata for String;
    *(void *)(v66 + 144) = v68;
    *(void *)(v66 + 112) = v73;
    *(void *)(v66 + 120) = v74;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  if ((v97 & 0x3F) == 0)
  {
    swift_unknownObjectRetain();
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v83 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_10046D010;
    *(void *)(v84 + 56) = &type metadata for Int64;
    *(void *)(v84 + 64) = &protocol witness table for Int64;
    *(void *)(v84 + 32) = v98;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  if ((v97 & 0x3F) != 1)
  {
    if (v98 | v96)
    {
      swift_unknownObjectRetain();
      static os_log_type_t.default.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v85 = (void *)static OS_os_log.downloads.getter();
      os_log(_:dso:log:_:_:)();

      return swift_unknownObjectRelease();
    }
    sub_100054BBC(v95 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v102, (uint64_t *)&unk_1005F7AA0);
    if (v103)
    {
      sub_100041A98(v102, v103);
      memset(aBlock, 0, sizeof(aBlock));
      LOBYTE(v101) = 2;
      swift_unknownObjectRetain();
      sub_1001F8474((long long *)aBlock);
      goto LABEL_39;
    }
    return sub_100054B1C((uint64_t)v102, (uint64_t *)&unk_1005F7AA0);
  }
  uint64_t v27 = v98;
  uint64_t v28 = v96;
  sub_10018AA60(v98, v96, v97);
  swift_unknownObjectRetain();
  sub_10018AA60(v27, v28, v23);
  int v93 = static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v29 = static OS_os_log.downloads.getter();
  uint64_t v94 = v25;
  unint64_t v30 = (void *)v29;
  sub_100054B78(&qword_1005F7720);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_10046D010;
  id v32 = *(id *)(a1 + v10);
  OS_dispatch_queue.sync<A>(execute:)();

  id v33 = &v9[*(int *)(v7 + 20)];
  uint64_t v35 = *(void *)v33;
  uint64_t v34 = *((void *)v33 + 1);
  swift_bridgeObjectRetain();
  sub_1003D3558((uint64_t)v9, type metadata accessor for DownloadJob);
  *(void *)(v31 + 56) = &type metadata for String;
  *(void *)(v31 + 64) = sub_10004DA4C();
  *(void *)(v31 + 32) = v35;
  *(void *)(v31 + 40) = v34;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    uint64_t v86 = v96;
    unsigned __int8 v87 = v97;
    sub_10018AA14(v27, v96, v97);
    sub_10018AA14(v27, v86, v87);
    return swift_unknownObjectRelease();
  }
  Swift::String v36 = (void *)_convertErrorToNSError(_:)();
  id v37 = [v36 ams_underlyingErrorWithDomain:AKAppleIDAuthenticationErrorDomain code:-7003];

  uint64_t v38 = v27;
  uint64_t v39 = v95;
  if (v37) {

  }
  swift_getErrorValue();
  char v40 = sub_1003C6BB8(v99);
  uint64_t v41 = v96;
  if (v40)
  {
    sub_100054BBC(v39 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v102, (uint64_t *)&unk_1005F7AA0);
    if (v103)
    {
      sub_100041A98(v102, v103);
      uint64_t v42 = 3;
LABEL_54:
      *(void *)long long aBlock = v42;
      memset(&aBlock[8], 0, 32);
      LOBYTE(v101) = 2;
      sub_1001F8474((long long *)aBlock);
      swift_unknownObjectRelease();
      unsigned __int8 v89 = v97;
      sub_10018AA14(v38, v41, v97);
      sub_10018AA14(v38, v41, v89);
      return sub_10004D2D8((uint64_t)v102);
    }
LABEL_55:
    swift_unknownObjectRelease();
    unsigned __int8 v90 = v97;
    sub_10018AA14(v38, v41, v97);
    sub_10018AA14(v38, v41, v90);
    return sub_100054B1C((uint64_t)v102, (uint64_t *)&unk_1005F7AA0);
  }
  if (!v37)
  {
    sub_100054BBC(v39 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v102, (uint64_t *)&unk_1005F7AA0);
    if (v103)
    {
      sub_100041A98(v102, v103);
      uint64_t v42 = 1;
      goto LABEL_54;
    }
    goto LABEL_55;
  }
  swift_unknownObjectRelease();
  unsigned __int8 v88 = v97;
  sub_10018AA14(v38, v41, v97);
  return sub_10018AA14(v38, v41, v88);
}

uint64_t sub_1003C6BB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  uint64_t v7 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v8 = [v7 domain];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  type metadata accessor for StandardKeyRequestHandler();
  if (v9 == static StandardKeyRequestHandler.keyRequestLicenseErrorDomain.getter() && v11 == v12) {
    char v14 = 1;
  }
  else {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t sub_1003C6D8C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v41 = a2;
    swift_errorRetain();
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    unint64_t v22 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v23 = swift_allocObject();
    long long v40 = xmmword_10046D010;
    *(_OWORD *)(v23 + 16) = xmmword_10046D010;
    *(void *)&long long v44 = a1;
    sub_10024369C();
    uint64_t v24 = Error.localizedDescription.getter();
    uint64_t v26 = v25;
    *(void *)(v23 + 56) = &type metadata for String;
    *(void *)(v23 + 64) = sub_10004DA4C();
    *(void *)(v23 + 32) = v24;
    *(void *)(v23 + 40) = v26;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return sub_1003D2E54(a1, v41, 1);
    }
    uint64_t v28 = (void *)Strong;
    sub_100054BBC(Strong + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v42, (uint64_t *)&unk_1005F7AA0);

    if (v43)
    {
      sub_100041A98(v42, v43);
      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v40;
      id v30 = *(id *)(a5 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v31 = &v11[*(int *)(v9 + 20)];
      uint64_t v33 = *(void *)v31;
      uint64_t v32 = *((void *)v31 + 1);
      swift_bridgeObjectRetain();
      sub_1003D3558((uint64_t)v11, type metadata accessor for DownloadJob);
      *(void *)(inited + 32) = v33;
      *(void *)(inited + 40) = v32;
      uint64_t v34 = sub_1000505EC(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v35 = swift_allocObject();
      swift_beginAccess();
      Swift::String v36 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      long long v44 = 0uLL;
      uint64_t v45 = v34;
      uint64_t v46 = sub_1003D3068;
      uint64_t v47 = v35;
      char v48 = 0;
      swift_retain();
      sub_1001F8474(&v44);
      sub_1003D2E54(a1, v41, 1);
      goto LABEL_8;
    }
    uint64_t v37 = a1;
    uint64_t v38 = v41;
    char v39 = 1;
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    uint64_t v13 = (void *)result;
    sub_100054BBC(result + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_userAlertsPresenter, (uint64_t)v42, (uint64_t *)&unk_1005F7AA0);
    sub_10018B0F0(a1, a2, 0);

    if (v43)
    {
      sub_100041A98(v42, v43);
      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = xmmword_10046D010;
      id v15 = *(id *)(a5 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v16 = &v11[*(int *)(v9 + 20)];
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *((void *)v16 + 1);
      swift_bridgeObjectRetain();
      sub_1003D3558((uint64_t)v11, type metadata accessor for DownloadJob);
      *(void *)(v14 + 32) = v17;
      *(void *)(v14 + 40) = v18;
      uint64_t v19 = sub_1000505EC(v14);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v20 = swift_allocObject();
      swift_beginAccess();
      int v21 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      *(void *)&long long v44 = a1;
      *((void *)&v44 + 1) = a2;
      uint64_t v45 = v19;
      uint64_t v46 = sub_1003D3068;
      uint64_t v47 = v20;
      char v48 = 0;
      swift_retain();
      sub_1001F8474(&v44);
      sub_1003D2E54(a1, a2, 0);
LABEL_8:
      swift_release_n();
      swift_bridgeObjectRelease();
      return sub_10004D2D8((uint64_t)v42);
    }
    uint64_t v37 = a1;
    uint64_t v38 = a2;
    char v39 = 0;
  }
  sub_1003D2E54(v37, v38, v39);
  return sub_100054B1C((uint64_t)v42, (uint64_t *)&unk_1005F7AA0);
}

uint64_t sub_1003C72FC(uint64_t a1)
{
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v2 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10046D010;
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(v3 + 56) = &type metadata for Int;
  *(void *)(v3 + 64) = &protocol witness table for Int;
  *(void *)(v3 + 32) = v4;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  swift_retain();
  sub_1003D27C8(a1);

  return swift_release();
}

void EpisodeDownloadsManager.restoreDownloadedEpisodes(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  id v8 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10046D010;
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(v9 + 56) = &type metadata for Int;
  *(void *)(v9 + 64) = &protocol witness table for Int;
  *(void *)(v9 + 32) = v10;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  id v11 = sub_100041274();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v4;
  v12[3] = a1;
  void v12[4] = a2;
  v12[5] = a3;
  v15[4] = sub_1003D1918;
  v15[5] = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10003B424;
  v15[3] = &unk_100567AC8;
  uint64_t v13 = _Block_copy(v15);
  id v14 = v4;
  swift_bridgeObjectRetain();
  sub_10004ACDC(a2);
  swift_release();
  [v11 addOperationWithBlock:v13];
  _Block_release(v13);
}

Swift::Void __swiftcall EpisodeDownloadsManager.downloadEpisode(_:isFromSaving:)(Swift::String _, Swift::Bool isFromSaving)
{
  uint64_t v3 = v2;
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v7 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10046D010;
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_10004DA4C();
  *(void *)(v8 + 32) = countAndFlagsBits;
  *(void *)(v8 + 40) = object;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  id v9 = sub_100041274();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v3;
  *(void *)(v10 + 24) = countAndFlagsBits;
  *(void *)(v10 + 32) = object;
  *(unsigned char *)(v10 + 40) = isFromSaving;
  v13[4] = sub_1003D1924;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_10003B424;
  void v13[3] = &unk_100567B18;
  id v11 = _Block_copy(v13);
  swift_bridgeObjectRetain();
  id v12 = v3;
  swift_release();
  [v9 addOperationWithBlock:v11];
  _Block_release(v11);
}

uint64_t sub_1003C7850(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  *(unsigned char *)(v7 + 32) = a4;
  swift_bridgeObjectRetain();
  sub_1003BE434(a2, a3, sub_1003D32D0, v7);

  return swift_release();
}

void sub_1003C78F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((sub_10030A84C(a2, a3, a1) & 1) == 0)
  {
    id v7 = [self sharedInstance];
    id v8 = [v7 mainOrPrivateContext];

    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = a2;
    *(void *)(v9 + 32) = a3;
    *(unsigned char *)(v9 + 40) = a4 & 1;
    void v12[4] = sub_1003D3320;
    v12[5] = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_10003B424;
    v12[3] = &unk_1005684D8;
    uint64_t v10 = _Block_copy(v12);
    id v11 = v8;
    swift_bridgeObjectRetain();
    swift_release();
    [v11 performBlockAndWaitWithSave:v10];
    _Block_release(v10);
  }
}

void sub_1003C7A48(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v8 = [a1 episodeForUuid:v6];

  if (v8)
  {
    if (a4) {
      uint64_t v7 = 4;
    }
    else {
      uint64_t v7 = 2;
    }
    [v8 setDownloadBehavior:v7];
  }
}

void EpisodeDownloadsManager.addEpisodeAutoDownloads(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  os_log_type_t v8 = static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v9 = static OS_os_log.downloads.getter();
  swift_bridgeObjectRetain();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134349314;
    aBlock[0] = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v13 = Set.description.getter();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_10004B974(v13, v15, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Add auto downloads for %{public}ld episodes: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  id v16 = sub_100041274();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v4;
  v17[3] = a1;
  void v17[4] = a2;
  v17[5] = a3;
  aBlock[4] = (uint64_t)sub_1003D1988;
  aBlock[5] = (uint64_t)v17;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003B424;
  uint64_t aBlock[3] = (uint64_t)&unk_100567B68;
  uint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v19 = v4;
  sub_10004ACDC(a2);
  swift_release();
  [v16 addOperationWithBlock:v18];
  _Block_release(v18);
}

Swift::Bool __swiftcall EpisodeDownloadsManager.resumeOrPauseEpisodeDownload(withUuid:)(Swift::String withUuid)
{
  object = withUuid._object;
  uint64_t countAndFlagsBits = withUuid._countAndFlagsBits;
  uint64_t v3 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage);
  uint64_t v7 = *(void **)(v6 + 16);
  swift_retain();
  [v7 lock];
  swift_beginAccess();
  unint64_t v8 = *(void *)(v6 + 24);
  if (v8 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_3:
      uint64_t v19 = v6;
      unint64_t v20 = v8;
      unint64_t v21 = v8 & 0xC000000000000001;
      uint64_t v10 = 4;
      while (1)
      {
        uint64_t v6 = v10 - 4;
        if (v21)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v8 = v10 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v8 + 8 * v10);
          swift_retain();
          unint64_t v8 = v10 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        id v12 = *(id *)(v11 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
        OS_dispatch_queue.sync<A>(execute:)();

        uint64_t v13 = &v5[*(int *)(v3 + 20)];
        uint64_t v14 = *(void *)v13;
        unint64_t v15 = (void *)*((void *)v13 + 1);
        swift_bridgeObjectRetain();
        sub_1003D3558((uint64_t)v5, type metadata accessor for DownloadJob);
        BOOL v16 = v14 == countAndFlagsBits && v15 == object;
        if (v16)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v6 = v19;
          goto LABEL_22;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_18;
        }
        swift_release();
        ++v10;
        BOOL v16 = v8 == v9;
        unint64_t v8 = v20;
        if (v16)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = 0;
          uint64_t v6 = v19;
          goto LABEL_22;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  [*(id *)(v6 + 16) unlock];
  swift_release();
  if (v11)
  {
    sub_10017A354();
    swift_release();
  }
  return v11 != 0;
}

Swift::Void __swiftcall EpisodeDownloadsManager.cancelDownloads(forEpisodeUuid:userInitiated:)(Swift::String forEpisodeUuid, Swift::Bool userInitiated)
{
  object = forEpisodeUuid._object;
  uint64_t countAndFlagsBits = forEpisodeUuid._countAndFlagsBits;
  id v5 = sub_100041274();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = countAndFlagsBits;
  *(void *)(v7 + 32) = object;
  *(unsigned char *)(v7 + 40) = userInitiated;
  v9[4] = sub_1003D19E0;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10003B424;
  void v9[3] = &unk_100567BB8;
  unint64_t v8 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_release();
  [v5 addOperationWithBlock:v8];
  _Block_release(v8);
}

void *EpisodeDownloadsManager.cancelAllDownloads(userInitiated:)(char a1)
{
  uint64_t v2 = v1;
  os_log_type_t v4 = static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  id v5 = static OS_os_log.downloads.getter();
  if (os_log_type_enabled(v5, v4))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v4, "Cancelling all downloads. User Initiated: %{BOOL,public}d", v6, 8u);
    swift_slowDealloc();
  }

  uint64_t v10 = &_swiftEmptySetSingleton;
  id v7 = v2;
  uint64_t v8 = swift_retain();
  sub_100418C3C(v8, (uint64_t)v7, a1 & 1, (uint64_t)&v10);
  swift_release();

  return v10;
}

void sub_1003C8640(uint64_t a1, uint64_t a2, uint8_t *a3, int a4)
{
  LODWORD(v4) = a4;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v52 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_29;
  }
  uint64_t v8 = (void *)Strong;
  uint64_t v9 = *(void *)(Strong + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage);
  swift_retain();

  [*(id *)(v9 + 16) lock];
  swift_beginAccess();
  unint64_t v10 = *(void *)(v9 + 24);
  if (v10 >> 62) {
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  while (v11)
  {
    uint64_t v50 = v9;
    int v51 = v4;
    unint64_t v4 = v10 & 0xC000000000000001;
    uint64_t v12 = 4;
    while (1)
    {
      uint64_t v9 = v12 - 4;
      if (!v4) {
        break;
      }
      uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v14 = v12 - 3;
      if (__OFADD__(v9, 1)) {
        goto LABEL_20;
      }
LABEL_10:
      id v15 = *(id *)(v13 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      uint64_t v16 = v52;
      OS_dispatch_queue.sync<A>(execute:)();

      char v17 = &v6[*(int *)(v16 + 20)];
      uint64_t v19 = *(void *)v17;
      uint64_t v18 = (uint8_t *)*((void *)v17 + 1);
      swift_bridgeObjectRetain();
      sub_1003D3558((uint64_t)v6, type metadata accessor for DownloadJob);
      if (v19 == v53 && v18 == v54)
      {
        swift_bridgeObjectRelease();
LABEL_18:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        LOBYTE(v4) = v51;
        uint64_t v9 = v50;
        goto LABEL_23;
      }
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_18;
      }
      swift_release();
      ++v12;
      if (v14 == v11)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = 0;
        goto LABEL_19;
      }
    }
    uint64_t v13 = *(void *)(v10 + 8 * v12);
    swift_retain();
    uint64_t v14 = v12 - 3;
    if (!__OFADD__(v9, 1)) {
      goto LABEL_10;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  [*(id *)(v9 + 16) unlock];
  swift_release();
  if (v13)
  {
    os_log_type_t v22 = static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v23 = static OS_os_log.downloads.getter();
    BOOL v24 = os_log_type_enabled(v23, v22);
    if (v4)
    {
      if (v24)
      {
        swift_retain();
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136446210;
        uint64_t v54 = v25 + 4;
        aBlock[0] = v26;
        id v27 = *(id *)(v13 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
        uint64_t v28 = v52;
        OS_dispatch_queue.sync<A>(execute:)();

        uint64_t v29 = (uint64_t *)&v6[*(int *)(v28 + 20)];
        uint64_t v30 = *v29;
        unint64_t v31 = v29[1];
        swift_bridgeObjectRetain();
        sub_1003D3558((uint64_t)v6, type metadata accessor for DownloadJob);
        uint64_t v56 = sub_10004B974(v30, v31, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v22, "Cancelling download pipeline for episode uuid %{public}s", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      id v32 = [self sharedInstance];
      id v33 = [v32 mainOrPrivateContext];

      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v33;
      *(void *)(v34 + 24) = v13;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = sub_1003D3280;
      *(void *)(v35 + 24) = v34;
      aBlock[4] = (uint64_t)sub_100018840;
      aBlock[5] = v35;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100018818;
      uint64_t aBlock[3] = (uint64_t)&unk_100568460;
      Swift::String v36 = _Block_copy(aBlock);
      swift_retain();
      id v37 = v33;
      swift_retain();
      swift_release();
      [v37 performBlockAndWait:v36];
      _Block_release(v36);
      LOBYTE(v36) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v36)
      {
        __break(1u);
      }
      else
      {
        sub_100178710();
        swift_release();
        swift_release();
      }
    }
    else
    {
      if (v24)
      {
        swift_retain();
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136446210;
        uint64_t v54 = v43 + 4;
        aBlock[0] = v44;
        id v45 = *(id *)(v13 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
        uint64_t v46 = v52;
        OS_dispatch_queue.sync<A>(execute:)();

        uint64_t v47 = (uint64_t *)&v6[*(int *)(v46 + 20)];
        uint64_t v48 = *v47;
        unint64_t v49 = v47[1];
        swift_bridgeObjectRetain();
        sub_1003D3558((uint64_t)v6, type metadata accessor for DownloadJob);
        uint64_t v56 = sub_10004B974(v48, v49, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v22, "Non-interactive download pipeline cancellation for episode uuid %{public}s", v43, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_100178710();
      swift_release();
    }
  }
  else
  {
LABEL_29:
    os_log_type_t v38 = static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    char v39 = static OS_os_log.downloads.getter();
    os_log_type_t v40 = v38;
    if (os_log_type_enabled(v39, v38))
    {
      unint64_t v41 = (unint64_t)v54;
      swift_bridgeObjectRetain_n();
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_10004B974(v53, v41, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Trying to cancel download but pipeline with episode uuid %{public}s not found, no download in flight.", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

void sub_1003C8EC4(void *a1, uint64_t a2)
{
  type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(id *)(a2 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();

  swift_bridgeObjectRetain();
  sub_1003D3558((uint64_t)v5, type metadata accessor for DownloadJob);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [a1 episodeForUuid:v7];

  if (v8)
  {
    [v8 setDownloadBehavior:3];
    [a1 saveInCurrentBlock];
  }
}

Swift::String_optional __swiftcall EpisodeDownloadsManager.episodeUuidForDownload(withAdamID:)(NSNumber withAdamID)
{
  uint64_t v2 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v5 = sub_100417BB4((uint64_t)[(objc_class *)withAdamID.super.super.isa longLongValue]);
  swift_release();
  if (v5)
  {
    id v6 = *(id *)(v5 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
    OS_dispatch_queue.sync<A>(execute:)();

    NSString v7 = (uint64_t *)&v4[*(int *)(v2 + 20)];
    uint64_t v8 = *v7;
    uint64_t v9 = (void *)v7[1];
    swift_bridgeObjectRetain();
    sub_1003D3558((uint64_t)v4, type metadata accessor for DownloadJob);
    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  result.value._object = v11;
  result.value._uint64_t countAndFlagsBits = v10;
  return result;
}

void EpisodeDownloadsManager.removeDownload(_:shouldAllowAutomaticRedownloads:completion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v12 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10046D010;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_10004DA4C();
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v14 = *(void **)(v6 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_episodeRemover);
  NSString v15 = String._bridgeToObjectiveC()();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(unsigned char *)(v16 + 32) = a3;
  *(void *)(v16 + 40) = a4;
  *(void *)(v16 + 48) = a5;
  v18[4] = sub_1003D29D0;
  v18[5] = v16;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10003B424;
  v18[3] = &unk_100567C08;
  char v17 = _Block_copy(v18);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v14 removeDownloadedEpisodeWithUuid:v15 completion:v17];
  _Block_release(v17);
}

uint64_t sub_1003C93E0(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  id v8 = [self sharedInstance];
  id v9 = [v8 mainOrPrivateContext];

  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 16) = 0;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = a1;
  *(void *)(v11 + 32) = a2;
  *(unsigned char *)(v11 + 40) = a3;
  *(void *)(v11 + 48) = v10;
  void v17[4] = sub_1003D322C;
  v17[5] = v11;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  _OWORD v17[2] = sub_10003B424;
  v17[3] = &unk_1005683E8;
  uint64_t v12 = _Block_copy(v17);
  id v13 = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v13 performBlockAndWaitWithSave:v12];
  _Block_release(v12);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v10 + 16);
  uint64_t v15 = *(void *)(v10 + 24);
  swift_bridgeObjectRetain();
  a4(a1, a2, v14, v15);

  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1003C95B4(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [a1 episodeForUuid:v8];

  if (v9)
  {
    if ((a4 & 1) != 0
      && (uint64_t v10 = type metadata accessor for Podcasts(),
          v18[3] = v10,
          v18[4] = sub_100055C40((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts), uint64_t v11 = sub_10004A244(v18), (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, enum case for Podcasts.serialSortAutoDownloads(_:), v10), LOBYTE(v10) = isFeatureEnabled(_:)(), sub_10004D2D8((uint64_t)v18), (v10 & 1) != 0))
    {
      uint64_t v12 = 1;
    }
    else
    {
      uint64_t v12 = 3;
    }
    [v9 setDownloadBehavior:v12];
    id v13 = [v9 podcastUuid];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;
    }
    else
    {

      uint64_t v15 = 0;
      uint64_t v17 = 0;
    }
    swift_beginAccess();
    *(void *)(a5 + 16) = v15;
    *(void *)(a5 + 24) = v17;
    swift_bridgeObjectRelease();
  }
}

void sub_1003C9818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  if (a4) {
    NSString v8 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v8 = 0;
  }
  id v9 = v8;
  (*(void (**)(uint64_t, NSString))(a5 + 16))(a5, v7);
}

void EpisodeDownloadsManager.removeDownloadedEpisodes(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  NSString v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.downloads.getter();
  swift_bridgeObjectRetain_n();
  NSString v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v19 = v2;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v17 = v10 + 4;
    swift_bridgeObjectRetain();
    uint64_t v11 = Set.description.getter();
    uint64_t v18 = v4;
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_10004B974(v11, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Scheduling work to remove episodes: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  id v14 = sub_100041274();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  aBlock[4] = (uint64_t)sub_1003D2A18;
  aBlock[5] = v15;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003B424;
  uint64_t aBlock[3] = (uint64_t)&unk_100567C58;
  uint64_t v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  [v14 addOperationWithBlock:v16];
  _Block_release(v16);
}

void sub_1003C9BA8()
{
  id v0 = [self sharedInstance];
  if (v0)
  {
    uint64_t v1 = v0;
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    [v1 removeDownloadAssetsForEpisodeUuids:isa];
  }
  else
  {
    __break(1u);
  }
}

Swift::Int __swiftcall EpisodeDownloadsManager.numberOfDownloads(from:)(Swift::String from)
{
  object = from._object;
  uint64_t countAndFlagsBits = from._countAndFlagsBits;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  NSString v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = *(void **)(v1 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage);
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 numberOfDownloadsFrom:v9];
  swift_release();

  static Logger.downloads.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v18 = v4;
    Swift::Int v14 = (Swift::Int)v10;
    uint64_t v15 = v13;
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_10004B974(countAndFlagsBits, (unint64_t)object, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v19 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Data Source reports number of downloads for uuid: %s is: %ld", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
    return v14;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (Swift::Int)v10;
  }
}

Swift::Int __swiftcall EpisodeDownloadsManager.numberOfDownloads()()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage) numberOfDownloads];
  static Logger.downloads.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    NSString v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)NSString v8 = 134217984;
    v10[1] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Data Source reports total number of downloads is: %ld", v8, 0xCu);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (Swift::Int)v5;
}

id EpisodeDownloadsManager.download(at:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [*(id *)(v1 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage) downloadAtIndex:a1];
  static Logger.downloads.getter();
  swift_unknownObjectRetain_n();
  NSString v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v3;
    uint64_t v11 = v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = a1;
    uint64_t v20 = v12;
    *(_DWORD *)uint64_t v11 = 134218242;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = MTLegacyDownloadProtocol.logDescription.getter(ObjectType);
    uint64_t v19 = sub_10004B974(v14, v15, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Data Source reports download at index: %ld is: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

id EpisodeDownloadsManager.index(for:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [*(id *)(v1 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage) indexForDownload:a1];
  static Logger.downloads.getter();
  swift_unknownObjectRetain_n();
  NSString v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = (uint64_t)v7;
    uint64_t v19 = v11;
    *(_DWORD *)uint64_t v10 = 134218242;
    id v17 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v16 = v3;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = MTLegacyDownloadProtocol.logDescription.getter(ObjectType);
    uint64_t v18 = sub_10004B974(v13, v14, &v19);
    id v7 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Data Source reports index (%ld) for download: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

id EpisodeDownloadsManager.downloadForEpisode(withUuid:)(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  NSString v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v9 = *(void **)(v2 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage);
  swift_retain();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 downloadForEpisodeWithUuid:v10];
  swift_release();

  static Logger.downloads.getter();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = v5;
    uint64_t v15 = v14;
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10004B974(a1, a2, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v17 = MTLegacyDownloadProtocol.logDescription.getter(ObjectType);
    uint64_t v22 = sub_10004B974(v17, v18, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Data Source reports download for episode with uuid: %s is: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v11;
}

uint64_t sub_1003CAA10(void *a1)
{
  id v1 = [a1 downloadDescription];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

Swift::Void __swiftcall EpisodeDownloadsManager.invalidateURLSessions()()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager__downloaders);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v7) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(*(void *)(v2 + 56) + 16 * v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    os_log_type_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 72);
    swift_unknownObjectRetain();
    v13(ObjectType, v11);
    swift_unknownObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1003CAC78(uint64_t a1, uint64_t a2)
{
  return sub_1003CAC84(a1, a2, &qword_100608080);
}

uint64_t sub_1003CAC84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100054B78(a3);
  uint64_t v6 = __chkstk_darwin(v5);
  int64_t v8 = v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = v21 - v10 + 16;
  __chkstk_darwin(v9);
  os_log_type_t v13 = v21 - v12 + 16;
  sub_10004D328(a1, (uint64_t)v21);
  swift_dynamicCast();
  sub_100054BBC((uint64_t)v13, (uint64_t)v11, a3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100054B1C((uint64_t)v11, a3);
LABEL_5:
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      int64_t v16 = (void *)Strong;
      sub_100054BBC((uint64_t)v13, (uint64_t)v8, a3);
      uint64_t v17 = (uint64_t)v16 + *(void *)((swift_isaMask & *v16) + 0x180);
      swift_beginAccess();
      sub_100039D84((uint64_t)v8, v17, a3);
      swift_endAccess();
LABEL_9:

      return sub_100054B1C((uint64_t)v13, a3);
    }
    return sub_100054B1C((uint64_t)v13, a3);
  }
  if (EnumCaseMultiPayload == 1)
  {
    swift_errorRelease();
    goto LABEL_5;
  }
  swift_beginAccess();
  unint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v18)
  {
    int64_t v16 = v18;
    [v18 cancel];
    goto LABEL_9;
  }
  return sub_100054B1C((uint64_t)v13, a3);
}

uint64_t sub_1003CAE94(uint64_t a1, uint64_t a2)
{
  return sub_1000501F4(a1, a2, &qword_100607FD0, (void (*)(uint64_t, uint64_t))sub_10005036C, (void (*)(uint64_t, uint64_t))sub_100050358);
}

uint64_t sub_1003CAEC8(uint64_t a1, uint64_t a2)
{
  return sub_10004AF30(a1, a2, &qword_100607FD0, (void (*)(uint64_t, uint64_t))sub_10005036C, (void (*)(uint64_t, uint64_t))sub_100050358);
}

uint64_t sub_1003CAEFC(uint64_t a1)
{
  sub_10004D328(a1, (uint64_t)v14);
  sub_100054B78((uint64_t *)&unk_100608088);
  swift_dynamicCast();
  char v1 = v18;
  if (v18 >= 2u)
  {
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = Strong;
      [Strong cancel];
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v2 = v15;
    uint64_t v3 = v16;
    char v4 = v17;
    swift_beginAccess();
    uint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = (char *)v5 + *(void *)((swift_isaMask & *v5) + 0x180);
      swift_beginAccess();
      uint64_t v8 = *(void *)v7;
      uint64_t v9 = *((void *)v7 + 1);
      *(void *)uint64_t v7 = v2;
      *((void *)v7 + 1) = v3;
      char v10 = v7[16];
      v7[16] = v4;
      char v11 = v7[17];
      v7[17] = v1;
      sub_1003D30E4(v2, v3, v4, v1);
      sub_1003D30C8(v8, v9, v10, v11);
LABEL_6:
    }
  }
  return sub_1003D30C8(v15, v16, v17, v18);
}

uint64_t sub_1003CB074(uint64_t a1, uint64_t a2)
{
  return sub_1003CAC84(a1, a2, &qword_1005F6C80);
}

uint64_t sub_1003CB080(uint64_t a1, uint64_t a2)
{
  return sub_1003CB330(a1, a2, &qword_100607FD0, &OBJC_IVAR____TtC8Podcasts14GroupOperation_input, (void (*)(uint64_t, uint64_t))sub_10005036C, (void (*)(uint64_t, uint64_t))sub_100050358);
}

uint64_t sub_1003CB0BC(uint64_t a1, uint64_t a2)
{
  return sub_1003CAC84(a1, a2, &qword_1005F6C40);
}

uint64_t sub_1003CB0C8(uint64_t a1, uint64_t a2)
{
  return sub_1003CAC84(a1, a2, (uint64_t *)&unk_100608050);
}

uint64_t sub_1003CB0D8(uint64_t a1)
{
  sub_100054B78(&qword_1005F6C20);
  __chkstk_darwin();
  uint64_t v3 = v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin();
  uint64_t v5 = v15 - v4 + 16;
  __chkstk_darwin();
  uint64_t v7 = v15 - v6 + 16;
  sub_10004D328(a1, (uint64_t)v15);
  swift_dynamicCast();
  sub_100054BBC((uint64_t)v7, (uint64_t)v5, &qword_1005F6C20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100054B1C((uint64_t)v5, &qword_1005F6C20);
LABEL_5:
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      char v10 = (void *)Strong;
      sub_100054BBC((uint64_t)v7, (uint64_t)v3, &qword_1005F6C20);
      uint64_t v11 = (uint64_t)v10 + *(void *)((swift_isaMask & *v10) + 0x198);
      swift_beginAccess();
      sub_100039D84((uint64_t)v3, v11, &qword_1005F6C20);
      swift_endAccess();
LABEL_9:

      return sub_100054B1C((uint64_t)v7, &qword_1005F6C20);
    }
    return sub_100054B1C((uint64_t)v7, &qword_1005F6C20);
  }
  if (EnumCaseMultiPayload == 1)
  {
    swift_errorRelease();
    goto LABEL_5;
  }
  swift_beginAccess();
  uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v12)
  {
    char v10 = v12;
    [v12 cancel];
    goto LABEL_9;
  }
  return sub_100054B1C((uint64_t)v7, &qword_1005F6C20);
}

uint64_t sub_1003CB2FC(uint64_t a1, uint64_t a2)
{
  return sub_10004AF30(a1, a2, (uint64_t *)&unk_100608060, (void (*)(uint64_t, uint64_t))sub_1003D30AC, (void (*)(uint64_t, uint64_t))sub_1003D3090);
}

uint64_t sub_1003CB330(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, void (*a5)(uint64_t, uint64_t), void (*a6)(uint64_t, uint64_t))
{
  sub_10004D328(a1, (uint64_t)&v19);
  sub_100054B78(a3);
  swift_dynamicCast();
  uint64_t v10 = v21;
  if (v21 >= 2u)
  {
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      os_log_type_t v13 = Strong;
      [Strong cancel];
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v11 = v20;
    swift_beginAccess();
    uint64_t v12 = swift_unknownObjectWeakLoadStrong();
    if (v12)
    {
      os_log_type_t v13 = (void *)v12;
      uint64_t v14 = v12 + *a4;
      uint64_t v15 = *(void *)v14;
      *(void *)uint64_t v14 = v11;
      uint64_t v16 = *(unsigned __int8 *)(v14 + 8);
      *(unsigned char *)(v14 + 8) = v10;
      a5(v11, v10);
      a6(v15, v16);
LABEL_6:
    }
  }
  return ((uint64_t (*)(uint64_t, void))a6)(v20, v21);
}

uint64_t sub_1003CB464(uint64_t a1, uint64_t a2)
{
  return sub_10004AF30(a1, a2, (uint64_t *)&unk_100608070, (void (*)(uint64_t, uint64_t))sub_10004B0B0, (void (*)(uint64_t, uint64_t))sub_10004B094);
}

uint64_t sub_1003CB498(uint64_t a1, uint64_t a2)
{
  return sub_1003CAC84(a1, a2, &qword_1005F6CD0);
}

uint64_t sub_1003CB4A4(uint64_t a1, uint64_t a2)
{
  return sub_1003CB330(a1, a2, &qword_100607FD0, &OBJC_IVAR____TtC8Podcasts25FetchFairPlayKeyOperation_input, (void (*)(uint64_t, uint64_t))sub_10005036C, (void (*)(uint64_t, uint64_t))sub_100050358);
}

uint64_t sub_1003CB4E0(uint64_t a1, uint64_t a2)
{
  return sub_10004AF30(a1, a2, &qword_100607FF8, (void (*)(uint64_t, uint64_t))sub_10004B0B0, (void (*)(uint64_t, uint64_t))sub_10004B094);
}

uint64_t sub_1003CB514(uint64_t a1, uint64_t a2)
{
  return sub_10004AF30(a1, a2, &qword_100607FE8, (void (*)(uint64_t, uint64_t))sub_10004B0B0, (void (*)(uint64_t, uint64_t))sub_10004B094);
}

uint64_t sub_1003CB548(uint64_t a1, uint64_t a2)
{
  return sub_1003CB330(a1, a2, &qword_100607FF8, &OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input, (void (*)(uint64_t, uint64_t))sub_10004B0B0, (void (*)(uint64_t, uint64_t))sub_10004B094);
}

Swift::Int sub_1003CB584(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100054B78(&qword_100608010);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_10004D29C(0, (unint64_t *)&unk_100608000);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1003F628C(v9 + 1);
          uint64_t v2 = v15;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_1003CB77C(uint64_t a1, uint64_t a2)
{
  return sub_1003CB7B0(a1, a2, &qword_100607FF0, (void (*)(void))type metadata accessor for DownloadingEpisodeStateDataSource, (void (*)(unint64_t))sub_1003F6298);
}

Swift::Int sub_1003CB7B0(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void), void (*a5)(unint64_t))
{
  if (a2)
  {
    sub_100054B78(a3);
    uint64_t v7 = static _SetStorage.convert(_:capacity:)();
    uint64_t v20 = v7;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        uint64_t v7 = v20;
        unint64_t v14 = *(void *)(v20 + 16);
        if (*(void *)(v20 + 24) <= v14)
        {
          a5(v14 + 1);
          uint64_t v7 = v20;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
        uint64_t v9 = v7 + 56;
        uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
        unint64_t v11 = result & ~v10;
        unint64_t v12 = v11 >> 6;
        if (((-1 << v11) & ~*(void *)(v7 + 56 + 8 * (v11 >> 6))) != 0)
        {
          unint64_t v13 = __clz(__rbit64((-1 << v11) & ~*(void *)(v7 + 56 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v15 = 0;
          unint64_t v16 = (unint64_t)(63 - v10) >> 6;
          do
          {
            if (++v12 == v16 && (v15 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v17 = v12 == v16;
            if (v12 == v16) {
              unint64_t v12 = 0;
            }
            v15 |= v17;
            uint64_t v18 = *(void *)(v9 + 8 * v12);
          }
          while (v18 == -1);
          unint64_t v13 = __clz(__rbit64(~v18)) + (v12 << 6);
        }
        *(void *)(v9 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        *(void *)(*(void *)(v7 + 48) + 8 * v13) = v19;
        ++*(void *)(v7 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v7;
}

Swift::Int sub_1003CB9AC(uint64_t a1, uint64_t a2)
{
  return sub_1003CB7B0(a1, a2, &qword_1006080A8, (void (*)(void))&type metadata accessor for MTCategory, (void (*)(unint64_t))sub_1003F62A4);
}

unint64_t sub_1003CB9E4(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_1003CBA68()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  EpisodeStateIdentifier.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v20 = v0;
  uint64_t v5 = *(void *)(v1 + 48) + 24 * v4;
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  char v8 = *(unsigned char *)(v5 + 16);
  sub_1001DD838(*(void *)v5, v7, v8);
  char v9 = static EpisodeStateIdentifier.== infix(_:_:)();
  sub_1001DD848(v6, v7, v8);
  if ((v9 & 1) == 0)
  {
    uint64_t v10 = ~v3;
    do
    {
      unint64_t v4 = (v4 + 1) & v10;
      if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_9;
      }
      uint64_t v11 = *(void *)(v1 + 48) + 24 * v4;
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = *(void *)(v11 + 8);
      char v14 = *(unsigned char *)(v11 + 16);
      sub_1001DD838(*(void *)v11, v13, v14);
      char v15 = static EpisodeStateIdentifier.== infix(_:_:)();
      sub_1001DD848(v12, v13, v14);
    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v20;
  uint64_t v21 = *v20;
  *uint64_t v20 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1003F785C();
    uint64_t v17 = v21;
  }
  uint64_t v18 = *(void *)(*(void *)(v17 + 48) + 24 * v4);
  sub_1003CC7E8(v4);
  *uint64_t v20 = v21;
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1003CBC80(void *a1)
{
  Swift::Int v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_1003CC490();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_10004D29C(0, (unint64_t *)&unk_100608000);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *Swift::Int v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1003F7A1C();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_1003CCA2C(v11);
  *Swift::Int v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1003CBE58(void *a1)
{
  Swift::Int v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_1003CC62C();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for DownloadingEpisodeStateDataSource();
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *Swift::Int v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1003F7A28();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_1003CCA2C(v11);
  *Swift::Int v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1003CC020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ShowInfo();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::Int v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100055C40(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    char v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_100055C40((unint64_t *)&unk_100603F00, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1003F7BD8();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1003CCBD0(v12);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1003CC300(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      char v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *Swift::Int v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1003F76A8();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1003CCEEC(v8);
  *Swift::Int v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1003CC490()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1003CB584(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_10004D29C(0, (unint64_t *)&unk_100608000);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_1003CCA2C(v8);
      if (static NSObject.== infix(_:_:)())
      {
        *uint64_t v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1003CC62C()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1003CB7B0(v3, v2, &qword_100607FF0, (void (*)(void))type metadata accessor for DownloadingEpisodeStateDataSource, (void (*)(unint64_t))sub_1003F6298);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for DownloadingEpisodeStateDataSource();
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_1003CCA2C(v8);
      if (static NSObject.== infix(_:_:)())
      {
        *uint64_t v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1003CC7E8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v29 = v4;
      do
      {
        uint64_t v11 = 24 * v6;
        uint64_t v12 = v3;
        uint64_t v13 = *(void *)(v3 + 48) + 24 * v6;
        uint64_t v14 = *(void *)v13;
        uint64_t v15 = *(void *)(v13 + 8);
        int64_t v16 = v2;
        char v17 = *(unsigned char *)(v13 + 16);
        unint64_t v18 = v9;
        Hasher.init(_seed:)();
        sub_1001DD838(v14, v15, v17);
        EpisodeStateIdentifier.hash(into:)();
        Swift::Int v19 = Hasher._finalize()();
        char v20 = v17;
        int64_t v2 = v16;
        sub_1001DD848(v14, v15, v20);
        unint64_t v9 = v18;
        Swift::Int v21 = v19 & v7;
        if (v16 >= (uint64_t)v18)
        {
          if (v21 < v18)
          {
            uint64_t v4 = v29;
            uint64_t v3 = v12;
          }
          else
          {
            uint64_t v4 = v29;
            uint64_t v3 = v12;
            if (v2 >= v21) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v4 = v29;
          uint64_t v3 = v12;
          if (v21 >= v9 || v2 >= v21)
          {
LABEL_12:
            uint64_t v22 = *(void *)(v3 + 48);
            unint64_t v23 = v22 + 24 * v2;
            BOOL v24 = (long long *)(v22 + v11);
            if (24 * v2 < v11 || v23 >= (unint64_t)v24 + 24 || (v25 = v2 == v6, int64_t v2 = v6, !v25))
            {
              long long v10 = *v24;
              *(void *)(v23 + 16) = *((void *)v24 + 2);
              *(_OWORD *)unint64_t v23 = v10;
              int64_t v2 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v26 = *(void *)(v3 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v28;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1003CCA2C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            char v17 = (void *)(v16 + 8 * v2);
            unint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *char v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1003CCBD0(int64_t a1)
{
  uint64_t v3 = type metadata accessor for ShowInfo();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_100055C40(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_1003CCEEC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            _OWORD *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1003CD0B4(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v18 >= v7) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v3 + 8 * v18);
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v3 + 8 * v8);
      if (!v19)
      {
        int64_t v8 = v18 + 2;
        if (v18 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v3 + 8 * v8);
        if (!v19)
        {
          int64_t v8 = v18 + 3;
          if (v18 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v19 = *(void *)(v3 + 8 * v8);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v19 - 1) & v19;
    unint64_t v10 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(v2 + 48) + 24 * v10;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(void *)(v11 + 8);
    char v14 = *(unsigned char *)(v11 + 16);
    sub_1001DD838(*(void *)v11, v13, v14);
    uint64_t v15 = sub_1003CBA68();
    sub_1001ED414(v15, v16, v17);
    uint64_t result = sub_1001DD848(v12, v13, v14);
  }
  int64_t v20 = v18 + 4;
  if (v20 < v7)
  {
    unint64_t v19 = *(void *)(v3 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v8 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v3 + 8 * v8);
        ++v20;
        if (v19) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v20;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

void sub_1003CD27C(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      sub_10004D29C(0, (unint64_t *)&unk_100608000);
      sub_1002AA518();
      Set.Iterator.init(_cocoa:)();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_10004E644();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        unsigned __int8 v17 = (void *)sub_1003CBC80(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (__CocoaSet.Iterator.next()())
        {
          sub_10004D29C(0, (unint64_t *)&unk_100608000);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

uint64_t sub_1003CD55C(uint64_t a1)
{
  uint64_t v3 = sub_100054B78(&qword_100607FD8);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ShowInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  id v13 = (char *)&v25 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v28 = v7 + 16;
  int64_t v26 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v27 = v7 + 32;
  uint64_t v18 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v25 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v25 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v25 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v13, *(void *)(v18 + 48) + *(void *)(v7 + 72) * v21, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v6);
    sub_1003CC020((uint64_t)v10, (uint64_t)v5);
    sub_100054B1C((uint64_t)v5, &qword_100607FD8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t *sub_1003CD868(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v40 = a1 + 56;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v38 = ~v4;
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  int64_t v39 = (unint64_t)(63 - v4) >> 6;
  uint64_t v44 = (char *)(a2 + 56);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v41 = v7;
  int64_t v42 = 0;
  while (1)
  {
    if (v6)
    {
      uint64_t v43 = (v6 - 1) & v6;
      unint64_t v8 = __clz(__rbit64(v6)) | (v42 << 6);
    }
    else
    {
      int64_t v9 = v42 + 1;
      if (__OFADD__(v42, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v9 >= v39) {
        goto LABEL_37;
      }
      unint64_t v10 = *(void *)(v40 + 8 * v9);
      int64_t v11 = v42 + 1;
      if (!v10)
      {
        int64_t v11 = v42 + 2;
        if (v42 + 2 >= v39) {
          goto LABEL_37;
        }
        unint64_t v10 = *(void *)(v40 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v42 + 3;
          if (v42 + 3 >= v39) {
            goto LABEL_37;
          }
          unint64_t v10 = *(void *)(v40 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v42 + 4;
            if (v42 + 4 >= v39) {
              goto LABEL_37;
            }
            unint64_t v10 = *(void *)(v40 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v42 + 5;
              if (v42 + 5 >= v39)
              {
LABEL_37:
                sub_10004E644();
                return (unint64_t *)v2;
              }
              unint64_t v10 = *(void *)(v40 + 8 * v12);
              if (!v10)
              {
                while (1)
                {
                  int64_t v11 = v12 + 1;
                  if (__OFADD__(v12, 1)) {
                    break;
                  }
                  if (v11 >= v39) {
                    goto LABEL_37;
                  }
                  unint64_t v10 = *(void *)(v40 + 8 * v11);
                  ++v12;
                  if (v10) {
                    goto LABEL_24;
                  }
                }
LABEL_39:
                __break(1u);
              }
              int64_t v11 = v42 + 5;
            }
          }
        }
      }
LABEL_24:
      int64_t v42 = v11;
      uint64_t v43 = (v10 - 1) & v10;
      unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    }
    uint64_t v13 = *(void *)(v7 + 48) + 24 * v8;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    char v16 = *(unsigned char *)(v13 + 16);
    Hasher.init(_seed:)();
    sub_1001DD838(v14, v15, v16);
    EpisodeStateIdentifier.hash(into:)();
    Swift::Int v17 = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)&v44[(v19 >> 3) & 0xFFFFFFFFFFFFFF8] >> v19)) {
      break;
    }
LABEL_6:
    sub_1001DD848(v14, v15, v16);
    uint64_t v7 = v41;
    unint64_t v6 = v43;
  }
  uint64_t v20 = *(void *)(v2 + 48) + 24 * v19;
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *(void *)(v20 + 8);
  char v23 = *(unsigned char *)(v20 + 16);
  sub_1001DD838(*(void *)v20, v21, v23);
  char v24 = static EpisodeStateIdentifier.== infix(_:_:)();
  sub_1001DD848(v22, v21, v23);
  if ((v24 & 1) == 0)
  {
    uint64_t v25 = ~v18;
    do
    {
      unint64_t v19 = (v19 + 1) & v25;
      if (((*(void *)&v44[(v19 >> 3) & 0xFFFFFFFFFFFFFF8] >> v19) & 1) == 0) {
        goto LABEL_6;
      }
      uint64_t v26 = *(void *)(v2 + 48) + 24 * v19;
      uint64_t v27 = *(void *)v26;
      uint64_t v28 = *(void *)(v26 + 8);
      char v29 = *(unsigned char *)(v26 + 16);
      sub_1001DD838(*(void *)v26, v28, v29);
      char v30 = static EpisodeStateIdentifier.== infix(_:_:)();
      sub_1001DD848(v27, v28, v29);
    }
    while ((v30 & 1) == 0);
  }
  uint64_t isStackAllocationSafe = sub_1001DD848(v14, v15, v16);
  v45[0] = v41;
  v45[1] = v40;
  uint64_t v45[2] = v38;
  v45[3] = v42;
  v45[4] = v43;
  char v32 = *(unsigned char *)(v2 + 32);
  unint64_t v33 = (unint64_t)((1 << v32) + 63) >> 6;
  size_t v34 = 8 * v33;
  if ((v32 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v38 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), v44, v34);
    uint64_t v35 = sub_1003CEDF8((unint64_t *)((char *)&v38 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0)), v33, v2, v19, v45);
    swift_release();
    sub_10004E644();
  }
  else
  {
    Swift::String v36 = (void *)swift_slowAlloc();
    memcpy(v36, v44, v34);
    uint64_t v35 = sub_1003CEDF8((unint64_t *)v36, v33, v2, v19, v45);
    swift_release();
    sub_10004E644();
    swift_slowDealloc();
  }
  return v35;
}

void *sub_1003CDD84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10004D29C(0, (unint64_t *)&unk_100608000);
    sub_1002AA518();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v46;
    uint64_t v4 = v47;
    uint64_t v6 = v48;
    int64_t v5 = v49;
    unint64_t v7 = v50;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v43 = v6;
  int64_t v44 = v5;
  unint64_t v45 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        uint64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        uint64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v44 = v5;
          unint64_t v45 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v42 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v42 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v42 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      uint64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = __CocoaSet.Iterator.next()();
    if (!v16
      || (uint64_t v39 = v16,
          sub_10004D29C(0, (unint64_t *)&unk_100608000),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_10004E644();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    sub_10004D29C(0, (unint64_t *)&unk_100608000);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = static NSObject.== infix(_:_:)();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = static NSObject.== infix(_:_:)();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v41;
    uint64_t v6 = v43;
    int64_t v5 = v44;
    unint64_t v7 = v45;
  }
LABEL_47:

  char v31 = *(unsigned char *)(v2 + 32);
  unint64_t v32 = (unint64_t)((1 << v31) + 63) >> 6;
  size_t v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1003CF18C((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    uint64_t v35 = v34;
    swift_release();
    sub_10004E644();
  }
  else
  {
    Swift::String v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1003CF18C((unint64_t *)v36, v32, v2, v19, &v41);
    uint64_t v35 = v37;
    swift_release();
    sub_10004E644();
    swift_slowDealloc();
  }
  return (void *)v35;
}

void *sub_1003CE2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100607FD8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ShowInfo();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  int v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  BOOL v58 = (char *)(a2 + 56);
  unint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  int64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_10004E644();
      sub_100054B1C(v26, &qword_100607FD8);
      return (void *)v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_100055C40(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
    uint64_t v32 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    uint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_100055C40((unint64_t *)&unk_100603F00, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
    char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    unint64_t v45 = sub_1003CF524((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_10004E644();
    return v45;
  }
  else
  {
    uint64_t v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_1003CF524((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_10004E644();
    swift_slowDealloc();
    return v48;
  }
}

unint64_t *sub_1003CE988(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_10004E644();
                  return (unint64_t *)v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v19 = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    int64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1003CFA80((unint64_t *)((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0)), v30, v2, v21, &v38);
      swift_release();
      sub_10004E644();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1003CFA80((unint64_t *)v33, v30, v2, v21, &v38);
      swift_release();
      sub_10004E644();
      swift_slowDealloc();
    }
    return v32;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

unint64_t *sub_1003CEDF8(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v42 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v6 = v5 - 1;
  unint64_t v43 = a5;
  uint64_t v44 = a3 + 56;
  while (2)
  {
    uint64_t v41 = v6;
    do
    {
      while (1)
      {
        int64_t v7 = a5[3];
        unint64_t v8 = a5[4];
        if (v8)
        {
          uint64_t v9 = (v8 - 1) & v8;
          unint64_t v10 = __clz(__rbit64(v8)) | (v7 << 6);
          goto LABEL_16;
        }
        int64_t v11 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
          goto LABEL_38;
        }
        int64_t v12 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v13 = a5[3];
        if (v11 >= v12) {
          goto LABEL_36;
        }
        uint64_t v14 = a5[1];
        unint64_t v15 = *(void *)(v14 + 8 * v11);
        if (!v15)
        {
          int64_t v16 = v7 + 2;
          int64_t v13 = v7 + 1;
          if (v7 + 2 >= v12) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v14 + 8 * v16);
          if (!v15)
          {
            int64_t v13 = v7 + 2;
            if (v7 + 3 >= v12) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v14 + 8 * (v7 + 3));
            if (v15)
            {
              int64_t v11 = v7 + 3;
              goto LABEL_15;
            }
            int64_t v16 = v7 + 4;
            int64_t v13 = v7 + 3;
            if (v7 + 4 >= v12) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v14 + 8 * v16);
            if (!v15)
            {
              int64_t v11 = v7 + 5;
              int64_t v13 = v7 + 4;
              if (v7 + 5 >= v12) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v14 + 8 * v11);
              if (!v15)
              {
                int64_t v13 = v12 - 1;
                int64_t v39 = v7 + 6;
                while (v12 != v39)
                {
                  unint64_t v15 = *(void *)(v14 + 8 * v39++);
                  if (v15)
                  {
                    int64_t v11 = v39 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_36:
                a5[3] = v13;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_1003CFD78(v42, a2, v41, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v11 = v16;
        }
LABEL_15:
        uint64_t v9 = (v15 - 1) & v15;
        unint64_t v10 = __clz(__rbit64(v15)) + (v11 << 6);
        int64_t v7 = v11;
LABEL_16:
        uint64_t v17 = *(void *)(*a5 + 48) + 24 * v10;
        uint64_t v18 = *(void *)v17;
        uint64_t v19 = *(void *)(v17 + 8);
        char v20 = *(unsigned char *)(v17 + 16);
        a5[3] = v7;
        a5[4] = v9;
        Hasher.init(_seed:)();
        sub_1001DD838(v18, v19, v20);
        EpisodeStateIdentifier.hash(into:)();
        Swift::Int v21 = Hasher._finalize()();
        uint64_t v22 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v23 = v21 & ~v22;
        if (((1 << v23) & *(void *)(v44 + 8 * (v23 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v24 = *(void *)(a3 + 48) + 24 * v23;
        uint64_t v25 = *(void *)v24;
        uint64_t v26 = *(void *)(v24 + 8);
        char v27 = *(unsigned char *)(v24 + 16);
        sub_1001DD838(*(void *)v24, v26, v27);
        char v28 = static EpisodeStateIdentifier.== infix(_:_:)();
        sub_1001DD848(v25, v26, v27);
        if (v28) {
          break;
        }
        uint64_t v31 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v31;
          if (((*(void *)(v44 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          uint64_t v32 = *(void *)(a3 + 48) + 24 * v23;
          uint64_t v33 = *(void *)v32;
          uint64_t v34 = *(void *)(v32 + 8);
          char v35 = *(unsigned char *)(v32 + 16);
          sub_1001DD838(*(void *)v32, v34, v35);
          char v36 = static EpisodeStateIdentifier.== infix(_:_:)();
          sub_1001DD848(v33, v34, v35);
          if (v36)
          {
            uint64_t result = (unint64_t *)sub_1001DD848(v18, v19, v20);
            unint64_t v29 = v23 >> 6;
            uint64_t v30 = 1 << v23;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = (unint64_t *)sub_1001DD848(v18, v19, v20);
        a5 = v43;
      }
      uint64_t result = (unint64_t *)sub_1001DD848(v18, v19, v20);
      uint64_t v30 = 1 << v23;
      unint64_t v29 = v23 >> 6;
LABEL_23:
      uint64_t v37 = v29;
      unint64_t v38 = v42[v29];
      v42[v37] = v38 & ~v30;
      a5 = v43;
    }
    while ((v30 & v38) == 0);
    uint64_t v6 = v41 - 1;
    if (__OFSUB__(v41, 1))
    {
LABEL_38:
      __break(1u);
      return result;
    }
    if (v41 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

void sub_1003CF18C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v36 = a3 + 56;
  while (2)
  {
    uint64_t v34 = v7;
    do
    {
      while (1)
      {
        if ((*a5 & 0x8000000000000000) == 0)
        {
          int64_t v9 = a5[3];
          unint64_t v8 = a5[4];
          if (v8)
          {
            uint64_t v10 = (v8 - 1) & v8;
            unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_7:
            int64_t v12 = *(void **)(*(void *)(*a5 + 48) + 8 * v11);
            id v13 = v12;
            goto LABEL_8;
          }
          int64_t v26 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          int64_t v27 = (unint64_t)(a5[2] + 64) >> 6;
          if (v26 >= v27)
          {
            int64_t v12 = 0;
            uint64_t v10 = 0;
            goto LABEL_8;
          }
          uint64_t v28 = a5[1];
          unint64_t v29 = *(void *)(v28 + 8 * v26);
          if (v29)
          {
LABEL_22:
            uint64_t v10 = (v29 - 1) & v29;
            unint64_t v11 = __clz(__rbit64(v29)) + (v26 << 6);
            int64_t v9 = v26;
            goto LABEL_7;
          }
          int64_t v31 = v9 + 2;
          if (v9 + 2 >= v27) {
            goto LABEL_41;
          }
          unint64_t v29 = *(void *)(v28 + 8 * v31);
          if (v29)
          {
LABEL_29:
            int64_t v26 = v31;
            goto LABEL_22;
          }
          if (v9 + 3 < v27)
          {
            unint64_t v29 = *(void *)(v28 + 8 * (v9 + 3));
            if (v29)
            {
              int64_t v26 = v9 + 3;
              goto LABEL_22;
            }
            int64_t v31 = v9 + 4;
            if (v9 + 4 >= v27)
            {
              int64_t v12 = 0;
              uint64_t v10 = 0;
              v9 += 3;
LABEL_8:
              a5[3] = v9;
              a5[4] = v10;
              if (!v12) {
                goto LABEL_47;
              }
              goto LABEL_12;
            }
            unint64_t v29 = *(void *)(v28 + 8 * v31);
            if (v29) {
              goto LABEL_29;
            }
            int64_t v26 = v9 + 5;
            if (v9 + 5 < v27)
            {
              unint64_t v29 = *(void *)(v28 + 8 * v26);
              if (v29) {
                goto LABEL_22;
              }
              int64_t v26 = v27 - 1;
              int64_t v32 = v9 + 6;
              while (v27 != v32)
              {
                unint64_t v29 = *(void *)(v28 + 8 * v32++);
                if (v29)
                {
                  int64_t v26 = v32 - 1;
                  goto LABEL_22;
                }
              }
LABEL_41:
              int64_t v12 = 0;
              uint64_t v10 = 0;
              int64_t v9 = v26;
              goto LABEL_8;
            }
          }
          int64_t v12 = 0;
          uint64_t v10 = 0;
          int64_t v9 = v31;
          goto LABEL_8;
        }
        if (!__CocoaSet.Iterator.next()()
          || (sub_10004D29C(0, (unint64_t *)&unk_100608000),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              int64_t v12 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_47:
          swift_retain();
          sub_1003D0044(a1, a2, v34, a3, &qword_100608010);
          return;
        }
LABEL_12:
        Swift::Int v14 = NSObject._rawHashValue(seed:)(*(void *)(a3 + 40));
        uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v16 = v14 & ~v15;
        unint64_t v17 = v16 >> 6;
        uint64_t v18 = 1 << v16;
        if (((1 << v16) & *(void *)(v36 + 8 * (v16 >> 6))) == 0) {
          goto LABEL_3;
        }
        sub_10004D29C(0, (unint64_t *)&unk_100608000);
        id v19 = *(id *)(*(void *)(a3 + 48) + 8 * v16);
        char v20 = static NSObject.== infix(_:_:)();

        if (v20) {
          break;
        }
        uint64_t v21 = ~v15;
        for (unint64_t i = v16 + 1; ; unint64_t i = v23 + 1)
        {
          unint64_t v23 = i & v21;
          if (((*(void *)(v36 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0) {
            break;
          }
          id v24 = *(id *)(*(void *)(a3 + 48) + 8 * v23);
          char v25 = static NSObject.== infix(_:_:)();

          if (v25)
          {

            unint64_t v17 = v23 >> 6;
            uint64_t v18 = 1 << v23;
            goto LABEL_25;
          }
        }
LABEL_3:
      }
LABEL_25:
      unint64_t v30 = a1[v17];
      a1[v17] = v30 & ~v18;
    }
    while ((v18 & v30) == 0);
    uint64_t v7 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_49:
      __break(1u);
      return;
    }
    if (v34 != 1) {
      continue;
    }
    break;
  }
}

void *sub_1003CF524(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v49 = a2;
  uint64_t v9 = sub_100054B78(&qword_100607FD8);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ShowInfo();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v13);
  uint64_t v63 = (char *)&v48 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  int v51 = a1;
  uint64_t v52 = v21;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v61 = v21 + 16;
  uint64_t v62 = a3;
  uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v54 = a5;
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v60 = a3 + 56;
  id v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v53 = v11;
  while (2)
  {
    uint64_t v50 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v28 = a5[2];
        int64_t v29 = a5[3];
        unint64_t v30 = a5[4];
        uint64_t v59 = v28;
        if (v30)
        {
          uint64_t v58 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v29 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v11, *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31, v12);
          uint64_t v32 = 0;
          goto LABEL_8;
        }
        int64_t v41 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        int64_t v42 = (unint64_t)(v28 + 64) >> 6;
        if (v41 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * v41);
        if (v43) {
          goto LABEL_17;
        }
        if (v29 + 2 >= v42) {
          goto LABEL_34;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 2));
        if (v43)
        {
          int64_t v41 = v29 + 2;
LABEL_17:
          uint64_t v58 = (v43 - 1) & v43;
          unint64_t v31 = __clz(__rbit64(v43)) + (v41 << 6);
          int64_t v29 = v41;
          goto LABEL_7;
        }
        if (v29 + 3 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          v29 += 2;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 3));
        if (v43)
        {
          int64_t v41 = v29 + 3;
          goto LABEL_17;
        }
        int64_t v41 = v29 + 4;
        if (v29 + 4 < v42)
        {
          unint64_t v43 = *(void *)(v27 + 8 * v41);
          if (v43) {
            goto LABEL_17;
          }
          int64_t v41 = v42 - 1;
          int64_t v46 = v29 + 5;
          while (v42 != v46)
          {
            unint64_t v43 = *(void *)(v27 + 8 * v46++);
            if (v43)
            {
              int64_t v41 = v46 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          int64_t v29 = v41;
          goto LABEL_8;
        }
        uint64_t v58 = 0;
        uint64_t v32 = 1;
        v29 += 3;
LABEL_8:
        (*v57)(v11, v32, 1, v12);
        *a5 = v26;
        a5[1] = v27;
        a5[2] = v59;
        a5[3] = v29;
        a5[4] = v58;
        if ((*v56)(v11, 1, v12) == 1)
        {
          sub_100054B1C((uint64_t)v11, &qword_100607FD8);
          uint64_t v47 = v62;
          swift_retain();
          return (void *)sub_1003D02A0(v51, v49, v50, v47);
        }
        (*v55)(v63, v11, v12);
        uint64_t v33 = v62;
        sub_100055C40(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
        uint64_t v34 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v35 = -1 << *(unsigned char *)(v33 + 32);
        unint64_t v36 = v34 & ~v35;
        if ((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36)) {
          break;
        }
        char v25 = *v24;
LABEL_4:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v25)(v63, v12);
      }
      uint64_t v59 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v37 = ~v35;
      uint64_t v38 = *(void *)(v22 + 72);
      int64_t v39 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
      while (1)
      {
        v39(v15, *(void *)(v62 + 48) + v38 * v36, v12);
        sub_100055C40((unint64_t *)&unk_100603F00, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
        char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
        char v25 = *v24;
        (*v24)(v15, v12);
        if (v40) {
          break;
        }
        unint64_t v36 = (v36 + 1) & v37;
        if (((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        {
          unint64_t v11 = v53;
          a5 = v54;
          uint64_t v22 = v52;
          goto LABEL_4;
        }
      }
      uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v25)(v63, v12);
      uint64_t v44 = (v36 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v22 = v52;
      uint64_t v45 = *(unint64_t *)((char *)v51 + v44);
      *(unint64_t *)((char *)v51 + v44) = v45 & ~(1 << v36);
      unint64_t v11 = v53;
      a5 = v54;
    }
    while ((v45 & (1 << v36)) == 0);
    uint64_t v23 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v50 != 1) {
      continue;
    }
    return &_swiftEmptySetSingleton;
  }
}

unint64_t *sub_1003CFA80(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  int64_t v39 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_1003D062C(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v22 = Hasher._finalize()();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_1003CFD78(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100054B78(&qword_100608020);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v31) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v31) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v31) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v4 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    Hasher.init(_seed:)();
    sub_1001DD838(v18, v19, v20);
    EpisodeStateIdentifier.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << v8[32];
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = *((void *)v8 + 6) + 24 * v24;
    *(void *)uint64_t v29 = v18;
    *(void *)(v29 + 8) = v19;
    *(unsigned char *)(v29 + 16) = v20;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v31) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1003D002C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0044(a1, a2, a3, a4, &qword_100608018);
}

uint64_t sub_1003D0038(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0044(a1, a2, a3, a4, &qword_100608010);
}

uint64_t sub_1003D0044(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a4;
  if (!a3)
  {
    uint64_t v10 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v10;
  }
  uint64_t v6 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v5;
  }
  sub_100054B78(a5);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = (void *)result;
  unint64_t v30 = a1;
  if (a2 < 1) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = *a1;
  }
  uint64_t v12 = 0;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    uint64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_39;
    }
    if (v16 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v30[v16];
    ++v12;
    if (!v17)
    {
      uint64_t v12 = v16 + 1;
      if (v16 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v17 = v30[v12];
      if (!v17)
      {
        uint64_t v12 = v16 + 2;
        if (v16 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v12];
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = v10[5];
    id v20 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v21 = -1 << *((unsigned char *)v10 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v13 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v13 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(void *)(v10[6] + 8 * v24) = v20;
    ++v10[2];
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6) {
      goto LABEL_36;
    }
  }
  uint64_t v18 = v16 + 3;
  if (v18 >= a2) {
    goto LABEL_36;
  }
  unint64_t v17 = v30[v18];
  if (v17)
  {
    uint64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v30[v12];
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1003D02A0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for ShowInfo();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_100054B78(&qword_100607FE0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  BOOL v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_100055C40(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1003D062C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100054B78(&qword_100607F90);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1003D08C8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1003D0950(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18)
{
  uint64_t v66 = a8;
  uint64_t v65 = a7;
  uint64_t v75 = a6;
  uint64_t v76 = a5;
  uint64_t v77 = a4;
  id v70 = a16;
  uint64_t v71 = a17;
  uint64_t v72 = a15;
  uint64_t v73 = a14;
  uint64_t v74 = a13;
  uint64_t v64 = a12;
  uint64_t v69 = a11;
  uint64_t v63 = a10;
  uint64_t v68 = a9;
  uint64_t v60 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v59 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v56);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v20 - 8);
  uint64_t v21 = type metadata accessor for DispatchTimeInterval();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  char v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = &type metadata for AccounStoreDsidProvider;
  uint64_t v83 = &off_100567CD0;
  swift_bridgeObjectRelease();
  uint64_t v25 = a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_delegate;
  *(void *)(v25 + 8) = 0;
  uint64_t v61 = v25;
  swift_unknownObjectWeakInit();
  uint64_t v26 = OBJC_IVAR____TtC8Podcasts11JobPipeline_secureDownloadRenewalManager;
  type metadata accessor for SecureDownloadRenewalManager();
  *(void *)(a18 + v26) = SecureDownloadRenewalManager.__allocating_init()();
  uint64_t v27 = OBJC_IVAR____TtC8Podcasts11JobPipeline_throttler;
  if (qword_1005F59D0 != -1) {
    swift_once();
  }
  int v57 = a1 & 1;
  uint64_t v28 = sub_10018A370(v21, (uint64_t)qword_10061A948);
  uint64_t v67 = v21;
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v55(v24, v28, v21);
  type metadata accessor for Throttler();
  swift_allocObject();
  *(void *)(a18 + v27) = sub_1003317FC((uint64_t)v24);
  *(void *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_taskObservation) = 0;
  *(void *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline____lazy_storage___operationQueue) = 0;
  uint64_t v53 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v62 = v22;
  static DispatchQoS.unspecified.getter();
  v78[0] = _swiftEmptyArrayStorage;
  sub_100055C40((unint64_t *)&qword_1005F5BE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v54 = v27;
  sub_100054B78((uint64_t *)&unk_1005F7A60);
  sub_10005666C((unint64_t *)&qword_1005F5BF0, (uint64_t *)&unk_1005F7A60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v59, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v60);
  *(void *)(a18 + v53) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  BOOL v29 = (_OWORD *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_takeOffCheck);
  *BOOL v29 = 0u;
  v29[1] = 0u;
  uint64_t v30 = OBJC_IVAR____TtC8Podcasts11JobPipeline_analyticsChannel;
  *(void *)(a18 + v30) = [objc_allocWithZone((Class)PFCoreAnalyticsChannel) init];
  uint64_t v31 = (void *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_bugReporter);
  id v32 = [self sharedInstance];
  v31[3] = sub_10004D29C(0, (unint64_t *)&qword_100607F40);
  v31[4] = &protocol witness table for PFAutoBugCaptureBugReporter;
  *uint64_t v31 = v32;
  v55(v24, v71, v67);
  swift_allocObject();
  uint64_t v33 = sub_1003317FC((uint64_t)v24);
  *(void *)(a18 + v54) = v33;
  swift_release();
  *(unsigned char *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_type) = v57;
  uint64_t v34 = a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_assetsFolder;
  uint64_t v60 = type metadata accessor for URL();
  uint64_t v35 = *(void *)(v60 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v72, v60);
  uint64_t v36 = (void *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_episodeStorage);
  uint64_t v37 = v69;
  uint64_t v38 = v63;
  *uint64_t v36 = v68;
  v36[1] = v38;
  int64_t v39 = (void *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_jobStorage);
  uint64_t v40 = v64;
  *int64_t v39 = v37;
  v39[1] = v40;
  sub_100054BBC(v74, a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_mediaLibraryClient, (uint64_t *)&unk_1005F6FD0);
  sub_100056D54((uint64_t)v81, a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_dsidProvider);
  sub_100056D54(v73, a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_artworkStorage);
  *(void *)(v61 + 8) = &off_100567C80;
  swift_unknownObjectWeakAssign();
  sub_1003D34F0(v77, a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_metadata, type metadata accessor for EpisodeMetadata);
  sub_1003D34F0(v76, a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline__job, type metadata accessor for DownloadJob);
  sub_100056D54(v75, a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline__task);
  int64_t v41 = (uint64_t *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_assetPrefetchBlock);
  uint64_t v42 = v65;
  uint64_t v43 = v66;
  uint64_t *v41 = v65;
  v41[1] = v43;
  type metadata accessor for FairPlayInvalidationManager();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_10004ACDC(v42);
  *(void *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_fairPlayInvalidationManager) = FairPlayInvalidationManager.__allocating_init()();
  id v44 = *(id *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  sub_100054B78(&qword_1005F8450);
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v45 = v79;
  uint64_t v46 = v80;
  sub_100041A98(v78, v79);
  uint64_t v47 = swift_allocObject();
  swift_weakInit();
  uint64_t v48 = *(uint64_t (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v46 + 136);
  swift_retain();
  uint64_t v49 = v48(sub_1003D2B7C, v47, v45, v46);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  sub_1000536BC(v42);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v71, v67);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v72, v60);
  sub_10004D2D8(v73);
  sub_10004D2D8((uint64_t)v81);
  sub_100054B1C(v74, (uint64_t *)&unk_1005F6FD0);
  sub_10004D2D8(v75);
  sub_1003D3558(v76, type metadata accessor for DownloadJob);
  sub_1003D3558(v77, type metadata accessor for EpisodeMetadata);
  swift_release();
  uint64_t v50 = *(void **)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_taskObservation);
  *(void *)(a18 + OBJC_IVAR____TtC8Podcasts11JobPipeline_taskObservation) = v49;

  sub_10004D2D8((uint64_t)v78);
  return a18;
}

uint64_t sub_1003D1270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, unsigned __int8 a16)
{
  uint64_t v55 = a8;
  uint64_t v57 = a7;
  uint64_t v56 = a6;
  uint64_t v59 = a5;
  uint64_t v47 = a4;
  uint64_t v48 = a3;
  uint64_t v54 = a2;
  uint64_t v53 = a1;
  int v52 = a16;
  long long v51 = a9;
  uint64_t v49 = a14;
  uint64_t v45 = a15;
  uint64_t v44 = a13;
  uint64_t v58 = a12;
  uint64_t v50 = a10;
  uint64_t v46 = a11;
  uint64_t v43 = type metadata accessor for DispatchTimeInterval();
  uint64_t v41 = *(void *)(v43 - 8);
  uint64_t v18 = v41;
  __chkstk_darwin(v43);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v42 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  char v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for EpisodeMetadata(0);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = &type metadata for AccounStoreDsidProvider;
  id v70 = &off_100567CD0;
  sub_1003D34F0(a3, (uint64_t)v30, type metadata accessor for EpisodeMetadata);
  sub_1003D34F0(a4, (uint64_t)v27, type metadata accessor for DownloadJob);
  sub_100056D54(v59, (uint64_t)v67);
  sub_100054BBC(a11, (uint64_t)v66, (uint64_t *)&unk_1005F6FD0);
  sub_100056D54((uint64_t)v68, (uint64_t)v64);
  sub_100056D54(v58, (uint64_t)v63);
  uint64_t v31 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v44, v21);
  uint64_t v32 = v45;
  uint64_t v33 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v45, v43);
  uint64_t v34 = sub_100055EF0((uint64_t)v64, v65);
  __chkstk_darwin(v34);
  (*(void (**)(void))(v35 + 16))();
  uint64_t v61 = &type metadata for AccounStoreDsidProvider;
  uint64_t v62 = &off_100567CD0;
  type metadata accessor for JobPipeline(0);
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = sub_100055EF0((uint64_t)v60, (uint64_t)&type metadata for AccounStoreDsidProvider);
  __chkstk_darwin(v37);
  (*(void (**)(void))(v38 + 16))();
  uint64_t v39 = sub_1003D0950(v52, v53, v54, (uint64_t)v30, (uint64_t)v27, (uint64_t)v67, v56, v57, v55, v51, *((uint64_t *)&v51 + 1), v50, (uint64_t)v66, (uint64_t)v63, (uint64_t)v24, v49, (uint64_t)v20, v36);
  sub_10004D2D8((uint64_t)v60);
  sub_10004D2D8((uint64_t)v64);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v32, v33);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v31, v42);
  sub_10004D2D8(v58);
  sub_10004D2D8((uint64_t)v68);
  sub_100054B1C(v46, (uint64_t *)&unk_1005F6FD0);
  sub_10004D2D8(v59);
  sub_1003D3558(v47, type metadata accessor for DownloadJob);
  sub_1003D3558(v48, type metadata accessor for EpisodeMetadata);
  return v39;
}

uint64_t sub_1003D1844()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003D187C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003D18CC()
{
  sub_1003C3408(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_1003D18E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1003D1918()
{
}

uint64_t sub_1003D1924()
{
  return sub_1003C7850(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1003D1938()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1003D1988()
{
}

void sub_1003D1990(char a1)
{
  sub_1003BEE40(*(void *)(v1 + 24), a1, *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1003D19C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100175C04(v1, a1);
}

void sub_1003D19E0()
{
  sub_1003C8640(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint8_t **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1003D19F0()
{
  id v0 = [self processInfo];
  id v1 = [v0 environment];

  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v2 + 16)) {
    sub_100051E78(0xD00000000000001BLL, 0x80000001004E1FE0);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003D1AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v42 = a6;
  uint64_t v43 = a7;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v39 = a2;
  uint64_t v38 = sub_100054B78((uint64_t *)&unk_100607F98);
  __chkstk_darwin();
  unint64_t v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  unint64_t v12 = (uint64_t *)((char *)&v34 - v11);
  unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v35 = a1 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v36 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  int v37 = a5 & 1;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(a1 + 56);
    uint64_t v25 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v20);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    uint64_t v28 = v24 + *(void *)(*(void *)(type metadata accessor for EpisodeMetadata(0) - 8) + 72) * v20;
    uint64_t v29 = v38;
    sub_1003D34F0(v28, (uint64_t)v12 + *(int *)(v38 + 48), type metadata accessor for EpisodeMetadata);
    void *v12 = v26;
    v12[1] = v27;
    sub_100053820((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_100607F98);
    uint64_t v30 = *v10;
    uint64_t v31 = v10[1];
    uint64_t v32 = (uint64_t)v10 + *(int *)(v29 + 48);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1003C204C(v30, v31, v32, v40, v41, v37, v42, v43);
    uint64_t result = sub_100054B1C((uint64_t)v10, (uint64_t *)&unk_100607F98);
    if (v33)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized Array._endMutation()();
    }
  }
  int64_t v21 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v21 >= v36) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v21);
  ++v18;
  if (v22) {
    goto LABEL_21;
  }
  int64_t v18 = v21 + 1;
  if (v21 + 1 >= v36) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v18);
  if (v22) {
    goto LABEL_21;
  }
  int64_t v18 = v21 + 2;
  if (v21 + 2 >= v36) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v18);
  if (v22) {
    goto LABEL_21;
  }
  int64_t v18 = v21 + 3;
  if (v21 + 3 >= v36) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v18);
  if (v22)
  {
LABEL_21:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v36)
  {
LABEL_26:
    swift_release();
    return v44;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v36) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003D1DD8(unint64_t a1, void *a2)
{
  unint64_t v4 = a1;
  unint64_t v16 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_18:
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      unint64_t v6 = 0;
      unint64_t v7 = v4 & 0xC000000000000001;
      uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
      uint64_t v13 = v5;
      unint64_t v14 = v4;
      while (1)
      {
        if (v7)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v10 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return a2;
          }
        }
        else
        {
          if (v6 >= *(void *)(v8 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v9 = *(void *)(v4 + 8 * v6 + 32);
          swift_retain();
          unint64_t v10 = v6 + 1;
          if (__OFADD__(v6, 1)) {
            goto LABEL_14;
          }
        }
        uint64_t v15 = v9;
        char v11 = sub_1003C0C04(&v15);
        if (v2) {
          goto LABEL_15;
        }
        if (v11)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v5 = v13;
          unint64_t v4 = v14;
        }
        else
        {
          swift_release();
        }
        ++v6;
        if (v10 == v5)
        {
          a2 = v16;
          goto LABEL_20;
        }
      }
    }
  }
  a2 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return a2;
}

void *sub_1003D1F80(unint64_t a1, uint64_t a2, void **a3, char a4)
{
  uint64_t v5 = v4;
  LOBYTE(v6) = a4;
  uint64_t v36 = a2;
  int v37 = a3;
  uint64_t v35 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v35);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_37:
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_3:
      unint64_t v11 = 0;
      unint64_t v12 = 0xE900000000000064;
      uint64_t v13 = 0x7261646E6174732ELL;
      unint64_t v34 = a1 & 0xC000000000000001;
      unint64_t v32 = a1;
      uint64_t v33 = a1 & 0xFFFFFFFFFFFFFF8;
      if (v6) {
        uint64_t v13 = 1936484398;
      }
      uint64_t v30 = v13;
      uint64_t v31 = v10;
      if (v6) {
        unint64_t v12 = 0xE400000000000000;
      }
      unint64_t v29 = v12;
      while (1)
      {
        if (v34)
        {
          uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v15 = v11 + 1;
          if (__OFADD__(v11, 1))
          {
LABEL_34:
            __break(1u);
            return v38;
          }
        }
        else
        {
          if (v11 >= *(void *)(v33 + 16))
          {
            __break(1u);
            goto LABEL_37;
          }
          uint64_t v14 = *(void *)(a1 + 8 * v11 + 32);
          swift_retain();
          unint64_t v15 = v11 + 1;
          if (__OFADD__(v11, 1)) {
            goto LABEL_34;
          }
        }
        id v16 = *(id *)(v14 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
        uint64_t v17 = v35;
        uint64_t v18 = v5;
        OS_dispatch_queue.sync<A>(execute:)();

        unint64_t v19 = &v9[*(int *)(v17 + 32)];
        uint64_t v20 = *(void *)v19;
        unint64_t v6 = (void **)*((void *)v19 + 1);
        int v21 = v19[16];
        swift_bridgeObjectRetain();
        sub_1003D3558((uint64_t)v9, type metadata accessor for DownloadJob);
        BOOL v22 = v20 == v36 && v6 == v37;
        if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          if (v21) {
            uint64_t v23 = 1936484398;
          }
          else {
            uint64_t v23 = 0x7261646E6174732ELL;
          }
          if (v21) {
            unint64_t v24 = 0xE400000000000000;
          }
          else {
            unint64_t v24 = 0xE900000000000064;
          }
          if (v23 == v30 && v24 == v29)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
LABEL_31:
            unint64_t v6 = &v38;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            goto LABEL_9;
          }
          char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v26) {
            goto LABEL_31;
          }
          swift_release();
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
        }
LABEL_9:
        uint64_t v5 = v18;
        ++v11;
        a1 = v32;
        if (v15 == v31) {
          return v38;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1003D2294(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a2;
  uint64_t v52 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  long long v51 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v42 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  int64_t v44 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v45 = OBJC_IVAR____TtC8Podcasts23EpisodeDownloadsManager_inMemoryStorage;
  uint64_t v47 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  long long v43 = xmmword_10046D010;
  while (1)
  {
    if (v7)
    {
      uint64_t v49 = (v7 - 1) & v7;
      int64_t v50 = v9;
      unint64_t v10 = __clz(__rbit64(v7)) | (v9 << 6);
    }
    else
    {
      BOOL v11 = __OFADD__(v9, 1);
      int64_t v12 = v9 + 1;
      if (v11) {
        goto LABEL_47;
      }
      if (v12 >= v44) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v42 + 8 * v12);
      if (!v13)
      {
        int64_t v14 = v12 + 1;
        if (v12 + 1 >= v44) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v42 + 8 * v14);
        if (v13) {
          goto LABEL_16;
        }
        int64_t v14 = v12 + 2;
        if (v12 + 2 >= v44) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v42 + 8 * v14);
        if (v13) {
          goto LABEL_16;
        }
        int64_t v14 = v12 + 3;
        if (v12 + 3 >= v44) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v42 + 8 * v14);
        if (v13)
        {
LABEL_16:
          int64_t v12 = v14;
        }
        else
        {
          int64_t v38 = v12 + 4;
          if (v12 + 4 >= v44) {
            return swift_release();
          }
          unint64_t v13 = *(void *)(v42 + 8 * v38);
          for (v12 += 4; !v13; ++v38)
          {
            int64_t v12 = v38 + 1;
            if (__OFADD__(v38, 1)) {
              goto LABEL_48;
            }
            if (v12 >= v44) {
              return swift_release();
            }
            unint64_t v13 = *(void *)(v42 + 8 * v12);
          }
        }
      }
      uint64_t v49 = (v13 - 1) & v13;
      int64_t v50 = v12;
      unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
    }
    unint64_t v15 = (uint64_t *)(*(void *)(v47 + 48) + 16 * v10);
    uint64_t v16 = v15[1];
    uint64_t v56 = *v15;
    uint64_t v17 = *(void *)(v46 + v45);
    uint64_t v18 = *(void **)(v17 + 16);
    uint64_t v19 = v16;
    swift_bridgeObjectRetain();
    swift_retain();
    [v18 lock];
    swift_beginAccess();
    unint64_t v20 = *(void *)(v17 + 24);
    if (v20 >> 62) {
      break;
    }
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_20;
    }
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = 0;
LABEL_43:
    swift_bridgeObjectRelease();
    [*(id *)(v17 + 16) unlock];
    swift_release();
    if (v28)
    {
      swift_release();
      static os_log_type_t.error.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v39 = (void *)static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = v43;
      *(void *)(v40 + 56) = &type metadata for String;
      *(void *)(v40 + 64) = sub_10004DA4C();
      *(void *)(v40 + 32) = v56;
      *(void *)(v40 + 40) = v19;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    unint64_t v7 = v49;
    int64_t v9 = v50;
    uint64_t result = swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  if (!v21) {
    goto LABEL_42;
  }
LABEL_20:
  uint64_t v48 = v17;
  uint64_t v54 = v19;
  unint64_t v55 = v20 & 0xC000000000000001;
  uint64_t v22 = 4;
  unint64_t v53 = v20;
  while (1)
  {
    uint64_t v23 = v22 - 4;
    if (!v55) {
      break;
    }
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v24 = result;
    uint64_t v25 = v22 - 3;
    if (__OFADD__(v23, 1)) {
      goto LABEL_46;
    }
LABEL_26:
    id v26 = *(id *)(v24 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
    uint64_t v27 = v51;
    uint64_t v28 = v24;
    uint64_t v29 = v52;
    OS_dispatch_queue.sync<A>(execute:)();

    uint64_t v30 = &v27[*(int *)(v29 + 20)];
    uint64_t v32 = *(void *)v30;
    uint64_t v31 = *((void *)v30 + 1);
    swift_bridgeObjectRetain();
    uint64_t v33 = (uint64_t)v27;
    uint64_t v34 = v56;
    uint64_t v35 = v54;
    sub_1003D3558(v33, type metadata accessor for DownloadJob);
    BOOL v36 = v32 == v34;
    uint64_t v19 = v35;
    BOOL v36 = v36 && v31 == v35;
    if (v36)
    {
      swift_bridgeObjectRelease();
LABEL_34:
      uint64_t v17 = v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_43;
    }
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_34;
    }
    swift_release();
    ++v22;
    unint64_t v20 = v53;
    if (v25 == v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = 0;
      uint64_t v17 = v48;
      goto LABEL_43;
    }
  }
  uint64_t v24 = *(void *)(v20 + 8 * v22);
  uint64_t result = swift_retain();
  uint64_t v25 = v22 - 3;
  if (!__OFADD__(v23, 1)) {
    goto LABEL_26;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void sub_1003D27C8(uint64_t a1)
{
  uint64_t v1 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (v4)
  {
    v4 &= v4 - 1;
LABEL_22:
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      BOOL v11 = (void *)Strong;
      swift_bridgeObjectRetain();
      NSString v12 = String._bridgeToObjectiveC()();
      [v11 downloadEpisode:v12 isFromSaving:0];
      swift_bridgeObjectRelease();
    }
  }
  int64_t v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v7 >= v5) {
    goto LABEL_24;
  }
  uint64_t v8 = *(void *)(v1 + 8 * v7);
  ++v6;
  if (v8) {
    goto LABEL_21;
  }
  int64_t v6 = v7 + 1;
  if (v7 + 1 >= v5) {
    goto LABEL_24;
  }
  uint64_t v8 = *(void *)(v1 + 8 * v6);
  if (v8) {
    goto LABEL_21;
  }
  int64_t v6 = v7 + 2;
  if (v7 + 2 >= v5) {
    goto LABEL_24;
  }
  uint64_t v8 = *(void *)(v1 + 8 * v6);
  if (v8) {
    goto LABEL_21;
  }
  int64_t v6 = v7 + 3;
  if (v7 + 3 >= v5) {
    goto LABEL_24;
  }
  uint64_t v8 = *(void *)(v1 + 8 * v6);
  if (v8)
  {
LABEL_21:
    uint64_t v4 = (v8 - 1) & v8;
    goto LABEL_22;
  }
  int64_t v9 = v7 + 4;
  if (v9 >= v5)
  {
LABEL_24:
    swift_release();
    return;
  }
  uint64_t v8 = *(void *)(v1 + 8 * v9);
  if (v8)
  {
    int64_t v6 = v9;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v6 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v6 >= v5) {
      goto LABEL_24;
    }
    uint64_t v8 = *(void *)(v1 + 8 * v6);
    ++v9;
    if (v8) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1003D2990()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003D29D0()
{
  return sub_1003C93E0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 40));
}

uint64_t sub_1003D29E0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003D2A18()
{
}

uint64_t sub_1003D2A20()
{
  return type metadata accessor for EpisodeDownloadsManager();
}

ValueMetadata *type metadata accessor for AccounStoreDsidProvider()
{
  return &type metadata for AccounStoreDsidProvider;
}

void sub_1003D2A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1003C9818(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1003D2A44()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003D2A88()
{
  uint64_t v1 = *(void *)(v0 + 16);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(v1 + 16))(v1, isa);
}

uint64_t sub_1003D2AF0()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1003D2B28@<X0>(uint64_t a1@<X8>)
{
  return sub_100175CD8(v1, a1);
}

uint64_t sub_1003D2B44()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1003D2B7C(uint64_t a1)
{
}

uint64_t sub_1003D2B84()
{
  return swift_deallocObject();
}

uint64_t sub_1003D2B94@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1003C00D8(a1, *(unsigned __int8 *)(v2 + 16), a2);
}

uint64_t sub_1003D2BB0()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_1003D2BF8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003C0A80(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2);
}

uint64_t sub_1003D2C20()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1003D2C68@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003C11BC(a1, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1003D2C88(uint64_t a1)
{
  return sub_10004AF30(a1, v1, &qword_1006064A0, (void (*)(uint64_t, uint64_t))sub_10004B0B0, (void (*)(uint64_t, uint64_t))sub_10004B094);
}

uint64_t sub_1003D2CD4(uint64_t a1)
{
  return sub_1003CB330(a1, v1, (uint64_t *)&unk_100607F80, &OBJC_IVAR____TtC8Podcasts26StartJobPipelinesOperation_input, (void (*)(uint64_t, uint64_t))sub_10004B0B0, (void (*)(uint64_t, uint64_t))sub_10004B094);
}

uint64_t sub_1003D2D28(uint64_t a1)
{
  return sub_10004AF30(a1, v1, (uint64_t *)&unk_100607F80, (void (*)(uint64_t, uint64_t))sub_10004B0B0, (void (*)(uint64_t, uint64_t))sub_10004B094);
}

uint64_t sub_1003D2D74()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

void sub_1003D2DBC(uint64_t a1)
{
  sub_1003C17E8(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1003D2DCC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003D2E14(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003C2BB0(a1, a2, a3 & 1);
}

uint64_t sub_1003D2E20()
{
  return sub_1003D31C8((void (*)(void))&_swift_release);
}

uint64_t sub_1003D2E3C()
{
  return sub_100050148((uint64_t (*)(void, void, void, void, void))sub_10040E5C8);
}

uint64_t sub_1003D2E54(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003D2E64@<X0>(_OWORD *a1@<X8>)
{
  return sub_1003BC574(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1003D2E84()
{
  return sub_1003D31C8((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003D2EA4()
{
  return sub_1003D31C8((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003D2EC0(uint64_t a1)
{
  return sub_1003BEC48(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1003D2ED4()
{
  return swift_deallocObject();
}

uint64_t sub_1003D2F0C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003D2F4C(uint64_t a1)
{
  sub_1003BE0A8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1003D2F60(uint64_t a1, uint64_t a2)
{
  return sub_1003BCBAC(a1, a2);
}

uint64_t sub_1003D2F6C()
{
  return sub_1003C4E30(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)sub_1003D19C0, &selRef_downloadManagerDidUpdateDownload_, (uint64_t (*)(void))&static os_log_type_t.info.getter, "Download pipeline did send notification for pipeline update: %s");
}

uint64_t sub_1003D2FC0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003D3008()
{
  return swift_deallocObject();
}

uint64_t sub_1003D301C()
{
  return sub_1003C515C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003D3028(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003C6D8C(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1003D3034()
{
  return sub_1003D31C8((void (*)(void))&_swift_release);
}

uint64_t sub_1003D3050()
{
  return sub_100050148((uint64_t (*)(void, void, void, void, void))sub_10040E6F8);
}

uint64_t sub_1003D3068(uint64_t a1)
{
  return sub_1003C72FC(a1);
}

uint64_t sub_1003D3088()
{
  return sub_1003C58E4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1003D3090(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_errorRelease();
  }
  else if (!a2)
  {
  }
}

id sub_1003D30AC(id result, char a2)
{
  if (a2 == 1) {
    return (id)swift_errorRetain();
  }
  if (!a2) {
    return result;
  }
  return result;
}

uint64_t sub_1003D30C8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  if (a4 == 1) {
    return swift_errorRelease();
  }
  if (!a4) {
    return sub_10018DB10(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1003D30E4(uint64_t a1, uint64_t a2, char a3, char a4)
{
  if (a4 == 1) {
    return swift_errorRetain();
  }
  if (!a4) {
    return sub_1003D3100(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1003D3100(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 >> 6 == 2) {
    return swift_errorRetain();
  }
  if (!(a3 >> 6)) {
    return sub_100189FF0(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1003D3120()
{
  return sub_1003C4E30(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)sub_1003D19C0, &selRef_downloadManagerDidAddDownload_, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Download pipeline did send notification for pipeline start: %s");
}

uint64_t sub_1003D3174()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003D31AC()
{
  return sub_1003D31C8((void (*)(void))&_swift_release);
}

uint64_t sub_1003D31C8(void (*a1)(void))
{
  swift_bridgeObjectRelease();
  a1(*(void *)(v1 + 48));

  return swift_deallocObject();
}

void sub_1003D322C()
{
  sub_1003C95B4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1003D3240()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003D3280()
{
  sub_1003C8EC4(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003D3288()
{
  return swift_deallocObject();
}

uint64_t sub_1003D3298()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003D32D0(uint64_t a1)
{
  sub_1003C78F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1003D32E0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003D3320()
{
  sub_1003C7A48(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1003D3330()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003D3368()
{
  return sub_1003CAA10(*(void **)(v0 + 24));
}

unint64_t sub_1003D3370()
{
  unint64_t result = qword_1006080A0;
  if (!qword_1006080A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006080A0);
  }
  return result;
}

uint64_t sub_1003D33C4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003D33FC()
{
  swift_release();
  sub_10004D2D8(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_1003D343C(void *a1, uint64_t a2, void **a3, char a4, uint64_t a5)
{
  return sub_1003C3A20(a1, a2, a3, a4 & 1, a5);
}

uint64_t sub_1003D3448()
{
  swift_release();
  sub_10004D2D8(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003D3490()
{
  swift_release();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003D34F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003D3558(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003D3654@<X0>(_OWORD *a1@<X8>)
{
  return sub_1003D2E64(a1);
}

uint64_t sub_1003D366C()
{
  uint64_t v1 = type metadata accessor for StationShowContextActionData();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005FD628);
  __chkstk_darwin();
  int64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_stationShowData;
  swift_beginAccess();
  sub_100316AE8(v7, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1))
  {
    sub_100316B50((uint64_t)v6);
LABEL_3:
    char v8 = 0;
    return v8 & 1;
  }
  sub_10021165C((uint64_t)v6, (uint64_t)v4);
  sub_100316B50((uint64_t)v6);
  unint64_t v10 = (void *)sub_10021F088();
  sub_1002116C0((uint64_t)v4);
  if (!v10) {
    goto LABEL_3;
  }
  __int16 v20 = 0;
  id v11 = [v10 managedObjectContext];
  if (!v11)
  {

    uint64_t v17 = 0;
    goto LABEL_12;
  }
  NSString v12 = v11;
  unint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v10;
  void v13[3] = (char *)&v20 + 1;
  v13[4] = &v20;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1003D4D38;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_100018840;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  uint64_t aBlock[3] = &unk_1005687A0;
  unint64_t v15 = _Block_copy(aBlock);
  id v16 = v10;
  swift_retain();
  swift_release();
  [v12 performBlockAndWait:v15];

  _Block_release(v15);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v16 & 1) == 0)
  {
    if ((v20 & 0x100) != 0)
    {
      sub_1000536BC((uint64_t)sub_1003D4D38);
      goto LABEL_3;
    }
    uint64_t v17 = sub_1003D4D38;
LABEL_12:
    char v18 = v20;
    sub_1000536BC((uint64_t)v17);
    char v8 = v18 ^ 1;
    return v8 & 1;
  }
  __break(1u);
  return result;
}

void sub_1003D3998(void *a1, unsigned __int8 *a2, unsigned char *a3)
{
  uint64_t v6 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  int64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a1 episodes];
  if (v10)
  {
    id v11 = v10;
    uint64_t v16 = v7;
    uint64_t v17 = v6;
    NSOrderedSet.makeIterator()();
    NSFastEnumerationIterator.next()();
    while (v21)
    {
      sub_10004D384(&v20, &v19);
      sub_10004D29C(0, (unint64_t *)&qword_100603220);
      if (swift_dynamicCast())
      {
        NSString v12 = v18;
        type metadata accessor for RestrictionsController();
        unsigned __int8 v13 = (static RestrictionsController.isExplicitContentAllowed.getter() & 1) != 0
            ? 0
            : [v12 isExplicit];
        *a2 = v13;
        unsigned int v14 = [v12 isExternalType];

        *a3 = v14;
        if ((*a2 & 1) != 0 || v14) {
          break;
        }
      }
      NSFastEnumerationIterator.next()();
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v17);
  }
}

uint64_t sub_1003D3B88()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v44 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StationShowContextActionData();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005FD628);
  __chkstk_darwin();
  unsigned __int8 v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v0 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_stationShowData;
  swift_beginAccess();
  sub_100316AE8(v14, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8)) {
    return sub_100316B50((uint64_t)v13);
  }
  uint64_t v42 = v7;
  uint64_t v43 = v1;
  sub_10021165C((uint64_t)v13, (uint64_t)v11);
  sub_100316B50((uint64_t)v13);
  uint64_t v16 = (void *)sub_10021F088();
  uint64_t result = sub_1002116C0((uint64_t)v11);
  if (v16)
  {
    uint64_t v39 = v5;
    uint64_t v40 = v3;
    uint64_t v17 = _swiftEmptyArrayStorage;
    long long v51 = _swiftEmptyArrayStorage;
    char v18 = (void (*)())[v16 managedObjectContext];
    uint64_t v41 = v4;
    if (v18)
    {
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v16;
      *(void *)(v19 + 24) = &v51;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_1003D4CE8;
      *(void *)(v20 + 24) = v19;
      uint64_t v49 = sub_10004A010;
      uint64_t v50 = v20;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v46 = 1107296256;
      uint64_t v47 = sub_100018818;
      uint64_t v48 = &unk_100568728;
      uint64_t v21 = _Block_copy(&aBlock);
      id v22 = v16;
      swift_retain();
      swift_release();
      [v18 performBlockAndWait:v21];

      _Block_release(v21);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
        return result;
      }
      char v18 = sub_1003D4CE8;
      uint64_t v17 = v51;
      uint64_t v24 = v51[2];
      if (v24) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v24 = _swiftEmptyArrayStorage[2];
      if (v24)
      {
LABEL_7:
        BOOL v36 = v18;
        uint64_t v37 = v19;
        id v38 = v16;
        uint64_t v25 = self;
        swift_bridgeObjectRetain();
        v35[1] = v17;
        id v26 = v17 + 5;
        do
        {
          swift_bridgeObjectRetain();
          id v27 = [v25 defaultInstance];
          id v28 = [v27 upNextController];

          NSString v29 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v28 addEpisodeUuidToUpNext:v29];

          v26 += 2;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
        sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
        uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v49 = sub_1003D44A4;
        uint64_t v50 = 0;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v46 = 1107296256;
        uint64_t v47 = sub_10003B424;
        uint64_t v48 = &unk_1005686B0;
        uint64_t v31 = _Block_copy(&aBlock);
        uint64_t v32 = v42;
        static DispatchQoS.unspecified.getter();
        long long aBlock = (void **)_swiftEmptyArrayStorage;
        sub_1003D4C68((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100054B78((uint64_t *)&unk_1005FE4B0);
        sub_10002FBEC();
        uint64_t v33 = v40;
        uint64_t v34 = v43;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v31);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v34);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v41);
        char v18 = v36;
        goto LABEL_12;
      }
    }

LABEL_12:
    swift_bridgeObjectRelease();
    return sub_1000536BC((uint64_t)v18);
  }
  return result;
}

void sub_1003D41D0(void *a1, char **a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 episodes];
  if (v7)
  {
    uint64_t v28 = v4;
    uint64_t v29 = v3;
    id v27 = v7;
    NSOrderedSet.makeIterator()();
    NSFastEnumerationIterator.next()();
    if (v34)
    {
      uint64_t v8 = &selRef_updatedObjectIDs;
      uint64_t v9 = &selRef_indexPathForFirstRow;
      do
      {
        sub_10004D384(&v33, &v32);
        sub_10004D29C(0, (unint64_t *)&qword_100603220);
        if (swift_dynamicCast())
        {
          id v10 = v31;
          id v11 = [v31 v8[42]];
          if (v11)
          {
            uint64_t v12 = v11;
            uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v15 = v14;

            type metadata accessor for RestrictionsController();
            if (static RestrictionsController.isExplicitContentAllowed.getter())
            {
              if (([v10 v9[312]] & 1) == 0) {
                goto LABEL_14;
              }
            }
            else
            {
              unsigned __int8 v16 = [v10 isExplicit];
              unsigned __int8 v17 = [v10 v9[312]];
              if ((v16 & 1) == 0 && (v17 & 1) == 0)
              {
LABEL_14:
                char v18 = v9;
                uint64_t v19 = v8;
                uint64_t v20 = v30;
                uint64_t v21 = *v30;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *uint64_t v20 = v21;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t v21 = sub_10004CEAC(0, *((void *)v21 + 2) + 1, 1, v21);
                  *uint64_t v30 = v21;
                }
                unint64_t v24 = *((void *)v21 + 2);
                unint64_t v23 = *((void *)v21 + 3);
                if (v24 >= v23 >> 1)
                {
                  uint64_t v21 = sub_10004CEAC((char *)(v23 > 1), v24 + 1, 1, v21);
                  *uint64_t v30 = v21;
                }
                *((void *)v21 + 2) = v24 + 1;
                uint64_t v25 = &v21[16 * v24];
                *((void *)v25 + 4) = v13;
                *((void *)v25 + 5) = v15;

                uint64_t v8 = v19;
                uint64_t v9 = v18;
                goto LABEL_6;
              }
            }
            swift_bridgeObjectRelease();
          }
        }
LABEL_6:
        NSFastEnumerationIterator.next()();
      }
      while (v34);
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  }
}

void sub_1003D44A4()
{
  type metadata accessor for HUDViewController.HUDType();
  __chkstk_darwin();
  (*(void (**)(char *, void))(v1 + 104))((char *)&v4 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for HUDViewController.HUDType.addToQueue(_:));
  id v2 = objc_allocWithZone((Class)type metadata accessor for HUDViewController());
  uint64_t v3 = (void *)HUDViewController.init(type:)();
  dispatch thunk of HUDViewController.present()();
}

uint64_t sub_1003D4580()
{
  sub_100316B50(v0 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_stationShowData);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1003D4640()
{
  return type metadata accessor for AddToQueueStationShowContextAction();
}

uint64_t type metadata accessor for AddToQueueStationShowContextAction()
{
  uint64_t result = qword_1006081A0;
  if (!qword_1006081A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003D4694()
{
  sub_10031652C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for MetricsLabel();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1003D4768(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_stationShowData;
  swift_beginAccess();
  sub_100316A80(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1003D47C4()
{
  return 0x6461622E74786574;
}

uint64_t sub_1003D47E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1003D485C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.addStationShowToQueue(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_1003D493C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_10026882C(a1, a2, WitnessTable);
}

uint64_t sub_1003D499C()
{
  return swift_retain();
}

uint64_t sub_1003D49E8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1003D4A3C())()
{
  return j__swift_endAccess;
}

void *sub_1003D4A98(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1003D4AF8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1003D4B58(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1003D4BB8(uint64_t a1)
{
  uint64_t result = sub_1003D4C68(&qword_100608298, (void (*)(uint64_t))type metadata accessor for AddToQueueStationShowContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003D4C10(uint64_t a1)
{
  uint64_t result = sub_1003D4C68(&qword_1006082A0, (void (*)(uint64_t))type metadata accessor for AddToQueueStationShowContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003D4C68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003D4CB0()
{
  return swift_deallocObject();
}

void sub_1003D4CE8()
{
  sub_1003D41D0(*(void **)(v0 + 16), *(char ***)(v0 + 24));
}

uint64_t sub_1003D4CF0()
{
  return swift_deallocObject();
}

uint64_t sub_1003D4D00()
{
  return swift_deallocObject();
}

void sub_1003D4D38()
{
  sub_1003D3998(*(void **)(v0 + 16), *(unsigned __int8 **)(v0 + 24), *(unsigned char **)(v0 + 32));
}

uint64_t sub_1003D4D44()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for DummyCategoryIngester()
{
  return self;
}

uint64_t sub_1003D4D9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setDateFormat:v10];

  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v9 dateFromString:v11];

  if (v12)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v13(v8, v5, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v8, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  Date.init(timeIntervalSinceNow:)();

  return sub_1001B6BC4((uint64_t)v8);
}

uint64_t static MTNotificationTestActionFactory.runDefaultAction()()
{
  sub_1003D6168();
  sub_1002FD3C4(0xD00000000000001ELL, 0x80000001004E2880);

  return swift_bridgeObjectRelease();
}

id static MTNotificationTestActionFactory.notificationTestActionsViewController()()
{
  uint64_t v0 = sub_1003D6168();
  id v1 = objc_allocWithZone((Class)type metadata accessor for MTTestActionListViewController());
  return MTTestActionListViewController.init(title:tests:)(0x6163696669746F4ELL, 0xED0000736E6F6974, (unint64_t)v0);
}

uint64_t static MTNotificationTestActionFactory.runOldestNotificationAction()()
{
  return sub_1003D6A20((uint64_t (*)(void))_s22PostOldestNotificationCMa, (uint64_t)&off_100563D60, (void (*)(void *, uint64_t))sub_1002FB728);
}

uint64_t static MTNotificationTestActionFactory.runRandomNotificationAction()()
{
  return sub_1003D6A20((uint64_t (*)(void))_s22PostRandomNotificationCMa, (uint64_t)&off_100563D40, (void (*)(void *, uint64_t))sub_1002FBD44);
}

id MTNotificationTestActionFactory.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTNotificationTestActionFactory();
  return [super init];
}

id MTNotificationTestActionFactory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTNotificationTestActionFactory();
  [super dealloc];
}

uint64_t sub_1003D5350(void (*a1)(void))
{
  uint64_t v23 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  NSString v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v12 = (char *)&v21 - v11;
  char v13 = byte_10061A9D8;
  byte_10061A9D8 = 1;
  if (qword_1005F5AA8 != -1) {
    swift_once();
  }
  id v14 = (id)qword_10061ABA0;
  MTNotificationSettingsPresentationController.presentModal(highlightedPodcastUuid:)((Swift::String_optional)0);

  a1();
  sub_1000566BC();
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v10, v7);
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = v13;
  aBlock[4] = sub_1003D6D18;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100568880;
  unsigned __int8 v17 = _Block_copy(aBlock);
  swift_release();
  char v18 = v6;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  uint64_t v19 = v23;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v25);
  return ((uint64_t (*)(char *, uint64_t))v22)(v12, v7);
}

void sub_1003D5728()
{
  qword_10061AE80 = 3670016;
}

uint64_t sub_1003D5738(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (!a3)
  {
LABEL_39:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x1003D5994);
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6) {
    goto LABEL_35;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  while ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v9 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
    BOOL v11 = __OFADD__(v8, v9);
    v8 += v9;
    if (v11) {
      goto LABEL_34;
    }
LABEL_8:
    v7 += v10;
    if (v7 >= v6) {
      goto LABEL_36;
    }
  }
  if ((a3 & 0x2000000000000000) != 0)
  {
    v21[0] = a2;
    v21[1] = a3 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v13 = *((unsigned __int8 *)v21 + v7);
    if (*((char *)v21 + v7) < 0)
    {
      switch(__clz(v13 ^ 0xFF))
      {
        case 0x1Au:
          id v14 = (char *)v21 + v7;
LABEL_22:
          unsigned int v15 = v14[1] & 0x3F | ((v13 & 0x1F) << 6);
          uint64_t v10 = 2;
          BOOL v11 = __OFADD__(v8, v15);
          v8 += v15;
          if (!v11) {
            goto LABEL_8;
          }
          goto LABEL_34;
        case 0x1Bu:
          uint64_t v16 = (char *)v21 + v7;
LABEL_27:
          unsigned int v17 = ((v13 & 0xF) << 12) | ((v16[1] & 0x3F) << 6) | v16[2] & 0x3F;
          uint64_t v10 = 3;
          BOOL v11 = __OFADD__(v8, v17);
          v8 += v17;
          if (!v11) {
            goto LABEL_8;
          }
          goto LABEL_34;
        case 0x1Cu:
          char v18 = (char *)v21 + v7;
LABEL_32:
          unsigned int v19 = ((v13 & 0xF) << 18) | ((v18[1] & 0x3F) << 12) | ((v18[2] & 0x3F) << 6) | v18[3] & 0x3F;
          uint64_t v10 = 4;
          BOOL v11 = __OFADD__(v8, v19);
          v8 += v19;
          if (!v11) {
            goto LABEL_8;
          }
          goto LABEL_34;
        default:
          break;
      }
    }
  }
  else
  {
    uint64_t v12 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
    if ((a2 & 0x1000000000000000) == 0) {
      uint64_t v12 = _StringObject.sharedUTF8.getter();
    }
    unsigned int v13 = *(unsigned __int8 *)(v12 + v7);
    if (*(char *)(v12 + v7) < 0)
    {
      switch(__clz(v13 ^ 0xFF))
      {
        case 0x1Au:
          id v14 = (char *)(v7 + v12);
          goto LABEL_22;
        case 0x1Bu:
          uint64_t v16 = (char *)(v7 + v12);
          goto LABEL_27;
        case 0x1Cu:
          char v18 = (char *)(v7 + v12);
          goto LABEL_32;
        default:
          break;
      }
    }
  }
  uint64_t v10 = 1;
  BOOL v11 = __OFADD__(v8, v13);
  v8 += v13;
  if (!v11) {
    goto LABEL_8;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t v8 = 0;
LABEL_36:
  uint64_t result = a1 + v8;
  if (__OFADD__(a1, v8))
  {
    __break(1u);
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_1003D59B4()
{
  for (uint64_t i = 1; i != 1001; ++i)
  {
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    v1._uint64_t countAndFlagsBits = 0xD000000000000015;
    v1._object = (void *)0x80000001004E2B80;
    String.append(_:)(v1);
    v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v2);
    swift_bridgeObjectRelease();
    v3._uint64_t countAndFlagsBits = 3026478;
    v3._object = (void *)0xE300000000000000;
    String.append(_:)(v3);
  }
  return 0;
}

unint64_t sub_1003D5AA4(uint64_t a1, void *a2, unint64_t a3, unint64_t a4)
{
  if (!a2) {
    a1 = sub_100246D7C(a3, a4);
  }
  uint64_t v5 = a2;
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

uint64_t sub_1003D5B54(uint64_t a1, void *a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v57 = a5;
  uint64_t v9 = a6;
  uint64_t v10 = _swiftEmptyArrayStorage;
  uint64_t v60 = *(void *)(a5 + 16);
  if (v60)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0x7FFFFFFFFFFFFFE0;
    if (a6 > 0x7FFFFFFFFFFFFFE0) {
      uint64_t v12 = a6;
    }
    uint64_t v13 = v12 - a6;
    id v14 = _swiftEmptyArrayStorage;
    uint64_t v10 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v15 = v9 + v11;
      if (__OFADD__(v9, v11))
      {
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if (v13 == v11) {
        goto LABEL_38;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v14 = sub_1002F00AC(0, v14[2] + 1, 1, v14);
      }
      unint64_t v17 = v14[2];
      unint64_t v16 = v14[3];
      if (v17 >= v16 >> 1) {
        id v14 = sub_1002F00AC((void *)(v16 > 1), v17 + 1, 1, v14);
      }
      void v14[2] = v17 + 1;
      *(double *)&v14[v17 + 4] = (double)(v15 + 32) * 25.0 + 2520.0;
      if (qword_1005F5BA8 != -1) {
        swift_once();
      }
      uint64_t v18 = qword_10061AE80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1002EF374(0, v10[2] + 1, 1, v10);
      }
      unint64_t v20 = v10[2];
      unint64_t v19 = v10[3];
      if (v20 >= v19 >> 1) {
        uint64_t v10 = sub_1002EF374((void *)(v19 > 1), v20 + 1, 1, v10);
      }
      ++v11;
      void v10[2] = v20 + 1;
      v10[v20 + 4] = v18;
      uint64_t v9 = a6;
    }
    while (v60 != v11);
  }
  else
  {
    id v14 = _swiftEmptyArrayStorage;
  }
  uint64_t v11 = a7;
  if (a7 >> 62) {
    goto LABEL_42;
  }
  uint64_t v21 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v22 = (char *)v57;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  if (v21)
  {
    while (v21 >= 1)
    {
      uint64_t v24 = 0;
      unint64_t v25 = v11 & 0xC000000000000001;
      uint64_t v57 = v21;
      while (1)
      {
        if (v25)
        {
          uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v26 = *(void *)(v11 + 8 * v24 + 32);
          swift_retain();
        }
        uint64_t v27 = *(void *)(v26 + 16);
        unint64_t v28 = v27 - v9;
        if (__OFSUB__(v27, v9)) {
          break;
        }
        if ((v28 & 0x8000000000000000) != 0 || (uint64_t)v28 >= v60)
        {
          swift_release();
        }
        else
        {
          _StringGuts.grow(_:)(20);
          if (v28 >= *((void *)v22 + 2)) {
            goto LABEL_40;
          }
          uint64_t v29 = &v22[16 * v28];
          uint64_t v11 = (uint64_t)v22;
          uint64_t v31 = *((void *)v29 + 4);
          uint64_t v30 = *((void *)v29 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v61 = v31;
          uint64_t v62 = v30;
          v32._uint64_t countAndFlagsBits = 0x6574656C65442820;
          v32._object = (void *)0xEB00000000202C64;
          String.append(_:)(v32);
          uint64_t v33 = *(void *)(v26 + 24);
          uint64_t v34 = *(void *)(v33 + 16);
          uint64_t v35 = *(void **)(v33 + 24);
          swift_bridgeObjectRetain();
          v36._uint64_t countAndFlagsBits = v34;
          v36._object = v35;
          String.append(_:)(v36);
          swift_bridgeObjectRelease();
          v37._uint64_t countAndFlagsBits = 8236;
          v37._object = (void *)0xE200000000000000;
          String.append(_:)(v37);
          uint64_t v38 = *(void *)(v26 + 24);
          uint64_t v39 = *(void *)(v38 + 32);
          uint64_t v40 = *(void **)(v38 + 40);
          swift_bridgeObjectRetain();
          v41._uint64_t countAndFlagsBits = v39;
          v41._object = v40;
          String.append(_:)(v41);
          swift_bridgeObjectRelease();
          v42._uint64_t countAndFlagsBits = 41;
          v42._object = (void *)0xE100000000000000;
          String.append(_:)(v42);
          uint64_t v43 = (char *)v11;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v43 = sub_1004187DC(v11);
          }
          if (v28 >= *((void *)v43 + 2)) {
            goto LABEL_41;
          }
          uint64_t v44 = &v43[16 * v28];
          *((void *)v44 + 4) = v61;
          *((void *)v44 + 5) = v62;
          swift_release();
          swift_bridgeObjectRelease();
          id v22 = v43;
          uint64_t v11 = a7;
          uint64_t v9 = a6;
          uint64_t v21 = v57;
        }
        if (v21 == ++v24) {
          goto LABEL_43;
        }
      }
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      id v22 = (char *)v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = a6;
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v21 = result;
      if (!result) {
        goto LABEL_43;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v45 = v11;
    uint64_t v46 = v22;
    unint64_t v47 = sub_1003D5AA4(a1, a2, a3, a4);
    uint64_t v49 = v48;
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_10046D060;
    type metadata accessor for MTNotificationTestAction.PostFakeContentStep();
    long long v51 = (void *)swift_allocObject();
    v51[13] = _swiftEmptyArrayStorage;
    v51[14] = _swiftEmptyArrayStorage;
    v51[2] = v47;
    v51[3] = v49;
    v51[4] = a3;
    v51[5] = a4;
    v51[6] = a6;
    v51[7] = v46;
    v51[8] = v14;
    v51[9] = v10;
    v51[10] = v45;
    v51[11] = a8;
    v51[12] = a9;
    *(void *)(v50 + 32) = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    specialized Array._endMutation()();
    swift_bridgeObjectRelease();
    return v50;
  }
  return result;
}

uint64_t sub_1003D6034(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MTNotificationTestAction();
  sub_100054B78(&qword_1005F8130);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D010;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1003D59B4();
  unint64_t v7 = sub_1003D5B54(0xD00000000000001BLL, (void *)0x80000001004E2B20, 0xD00000000000001FLL, 0x80000001004E2B40, (uint64_t)&off_100554818, 0, (unint64_t)_swiftEmptyArrayStorage, v5, v6);
  uint64_t v8 = sub_1001B83FC(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_100054B78(&qword_1005F8360);
  *(void *)(inited + 32) = v8;
  return sub_1002B0A3C(0xD00000000000001FLL, 0x80000001004E2B00, a1, a2, inited);
}

void *sub_1003D6168()
{
  type metadata accessor for MTToggleUserDefaultTestAction();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 72) = 0xD00000000000002DLL;
  *(void *)(v0 + 80) = 0x80000001004E29F0;
  *(unsigned char *)(v0 + 64) = 0;
  *(void *)(v0 + 16) = 0xD000000000000023;
  *(void *)(v0 + 24) = 0x80000001004E29C0;
  strcpy((char *)(v0 + 32), "Debug Options");
  *(_WORD *)(v0 + 46) = -4864;
  *(void *)(v0 + 48) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
  id v1 = [self _applePodcastsFoundationSharedUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  swift_retain();
  unsigned __int8 v3 = [v1 BOOLForKey:v2];

  *(unsigned char *)(v0 + 64) = v3;
  swift_release();
  type metadata accessor for MTNotificationTestAction();
  sub_100054B78(&qword_1005F8130);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D010;
  sub_100054B78((uint64_t *)&unk_1005F8340);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10046D010;
  uint64_t v6 = type metadata accessor for MTNotificationTestAction.ClearAllHistoryStep();
  uint64_t v7 = swift_allocObject();
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = &off_100557960;
  *(void *)(v5 + 32) = v7;
  *(void *)(inited + 56) = sub_100054B78(&qword_1005F8360);
  *(void *)(inited + 32) = v5;
  sub_1002B0A3C(0xD000000000000010, 0x80000001004E2A20, 0x6974552074736554, 0xEE0073656974696CLL, inited);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10046D010;
  uint64_t v9 = _s37PickEpisodesThenPostNotificationsStepCMa();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100479FB0;
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = &off_100563D30;
  *(void *)(v8 + 32) = v10;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0x100000000000001ELL;
  *(void *)(v11 + 24) = 0x80000001004E2A40;
  strcpy((char *)(v11 + 32), "Test Utilities");
  *(unsigned char *)(v11 + 47) = -18;
  *(void *)(v11 + 48) = v8;
  *(void *)(v11 + 56) = v8;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10046D010;
  uint64_t v13 = _s34PostOneNotificationForEveryPodcastCMa();
  uint64_t v14 = swift_allocObject();
  *(void *)(v12 + 56) = v13;
  *(void *)(v12 + 64) = &off_100563D70;
  *(void *)(v12 + 32) = v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0xD000000000000025;
  *(void *)(v15 + 24) = 0x80000001004E2A60;
  strcpy((char *)(v15 + 32), "Test Utilities");
  *(unsigned char *)(v15 + 47) = -18;
  *(void *)(v15 + 48) = v12;
  *(void *)(v15 + 56) = v12;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10046D010;
  uint64_t v17 = _s24PickShowThenGoToSettingsCMa();
  uint64_t v18 = swift_allocObject();
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 64) = &off_10055C990;
  *(void *)(v16 + 32) = v18;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0x1000000000000013;
  *(void *)(v19 + 24) = 0x80000001004E2A90;
  strcpy((char *)(v19 + 32), "Test Utilities");
  *(unsigned char *)(v19 + 47) = -18;
  *(void *)(v19 + 48) = v16;
  *(void *)(v19 + 56) = v16;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10046D010;
  uint64_t v21 = type metadata accessor for MTTestActionBlockStep();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1003D5350;
  *(void *)(v22 + 24) = 0;
  *(void *)(v20 + 56) = v21;
  *(void *)(v20 + 64) = &off_10055C750;
  *(void *)(v20 + 32) = v22;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0x1000000000000020;
  *(void *)(v23 + 24) = 0x80000001004E2AB0;
  strcpy((char *)(v23 + 32), "Test Utilities");
  *(unsigned char *)(v23 + 47) = -18;
  *(void *)(v23 + 48) = v20;
  *(void *)(v23 + 56) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && __OFADD__(_CocoaArrayWrapper.endIndex.getter(), 6))
  {
    __break(1u);
  }
  else
  {
    sub_100288D90();
    specialized Array._endMutation()();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_3;
    }
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_3:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1003D6034(0xD000000000000013, 0x80000001004E2AE0);
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_release();
  return _swiftEmptyArrayStorage;
}

uint64_t _s8Podcasts31MTNotificationTestActionFactoryC025runMostRecentNotificationD0yyFZ_0()
{
  type metadata accessor for MTTestActionRunner();
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 0;
  sub_100054B78((uint64_t *)&unk_1005F8340);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10046D010;
  uint64_t v2 = _s26PostMostRecentNotificationCMa();
  uint64_t v3 = swift_allocObject();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = &off_100563D50;
  *(void *)(v1 + 32) = v3;
  type metadata accessor for MTNotificationTestAction();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0x6365522074736F4DLL;
  v4[3] = 0xEB00000000746E65;
  v4[4] = 0x654D206775626544;
  v4[5] = 0xEA0000000000756ELL;
  v4[6] = v1;
  v4[7] = v1;
  swift_bridgeObjectRetain();
  sub_1002FB10C((uint64_t)v4, v0);
  swift_release();

  return swift_release();
}

uint64_t sub_1003D6A20(uint64_t (*a1)(void), uint64_t a2, void (*a3)(void *, uint64_t))
{
  type metadata accessor for MTTestActionRunner();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 0;
  sub_100054B78((uint64_t *)&unk_1005F8340);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10046D010;
  uint64_t v8 = a1(0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = a2;
  *(void *)(v7 + 32) = v9;
  type metadata accessor for MTNotificationTestAction();
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0x747365646C4FLL;
  v10[3] = 0xE600000000000000;
  v10[4] = 0x654D206775626544;
  v10[5] = 0xEA0000000000756ELL;
  v10[6] = v7;
  v10[7] = v7;
  swift_bridgeObjectRetain();
  a3(v10, v6);
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for MTNotificationTestActionFactory()
{
  return self;
}

uint64_t _s8DefaultsCMa()
{
  return self;
}

uint64_t _s15RealContentPoolCMa()
{
  return self;
}

unsigned char *_s15RealContentPoolC4NameOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003D6C78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15RealContentPoolC4NameOMa()
{
  return &_s15RealContentPoolC4NameON;
}

unint64_t sub_1003D6CB4()
{
  unint64_t result = qword_1006084C0;
  if (!qword_1006084C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006084C0);
  }
  return result;
}

uint64_t sub_1003D6D08()
{
  return swift_deallocObject();
}

void sub_1003D6D18()
{
  byte_10061A9D8 = *(unsigned char *)(v0 + 16);
}

uint64_t sub_1003D6D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = (int *)type metadata accessor for CLSContextMetadata();
  uint64_t v39 = *((void *)v6 - 1);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(self, "isEmpty:", objc_msgSend(v1, "storeTrackId")) & 1) != 0
    || (id v9 = [v1 title]) == 0)
  {
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v39 + 56);
    return v18(a1, 1, 1, v6);
  }
  else
  {
    uint64_t v10 = v9;
    uint64_t v38 = a1;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v12;

    *(void *)&long long v43 = [v2 storeTrackId];
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v15 = v14;
    id v16 = [v2 podcast];
    if (v16)
    {
      id v17 = v16;
      *((void *)&v44 + 1) = sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
      uint64_t v45 = &off_100566DD8;
      *(void *)&long long v43 = v17;
    }
    else
    {
      uint64_t v45 = 0;
      long long v43 = 0u;
      long long v44 = 0u;
    }
    v8[40] = 1;
    *((void *)v8 + 6) = 0;
    uint64_t v20 = (uint64_t)&v8[v6[9]];
    uint64_t v21 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    uint64_t v22 = (uint64_t (**)())&v8[v6[10]];
    *uint64_t v22 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
    v22[1] = 0;
    uint64_t v37 = v6[11];
    *(void *)&v8[v37] = 0;
    uint64_t v23 = v6[12];
    *(void *)&v8[v23] = 0;
    *(void *)uint64_t v8 = 14;
    *((void *)v8 + 1) = v13;
    *((void *)v8 + 2) = v15;
    *((void *)v8 + 3) = v11;
    *((void *)v8 + 4) = v36;
    sub_10035C0D8((uint64_t)&v43, (uint64_t)v40);
    uint64_t v24 = v41;
    if (v41)
    {
      uint64_t v25 = v42;
      sub_100041A98(v40, v41);
      uint64_t v24 = sub_1002577B4(v24, v25);
      sub_1002578B4((uint64_t)&v43);
      sub_10004D2D8((uint64_t)v40);
    }
    else
    {
      sub_1002578B4((uint64_t)&v43);
      sub_1002578B4((uint64_t)v40);
    }
    swift_bridgeObjectRelease();
    *(void *)&v8[v23] = v24;
    *((void *)v8 + 6) = [v2 episodeNumber];
    sub_1003D71B4((uint64_t)v5);
    sub_100222E1C((uint64_t)v5, v20);
    id v26 = [v2 uuid];
    uint64_t v27 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
    if (v26)
    {
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      double v31 = (double)CLSContextThumbnailMaximumAllowedDimension;
      id v26 = (id)swift_allocObject();
      *((void *)v26 + 2) = v28;
      *((void *)v26 + 3) = v30;
      *((double *)v26 + 4) = v31;
      *((double *)v26 + 5) = v31;
      uint64_t v27 = (uint64_t (*)())sub_1003D79CC;
    }
    Swift::String v32 = v27;
    swift_release();
    *uint64_t v22 = v32;
    v22[1] = (uint64_t (*)())v26;
    [v2 pubDate];
    uint64_t v33 = v38;
    *(void *)&v8[v37] = v34;
    sub_10035C140((uint64_t)v8, v33, (uint64_t (*)(void))type metadata accessor for CLSContextMetadata);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v39 + 56))(v33, 0, 1, v6);
    return sub_10035C20C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CLSContextMetadata);
  }
}

uint64_t sub_1003D71B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v34 = a1;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for URLComponents();
  uint64_t v7 = *(void *)(v33 - 8);
  __chkstk_darwin();
  id v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v32 - v13;
  id v15 = [v2 podcast];
  if (v15)
  {
    id v16 = v15;
    id v17 = [v15 storeCollectionId];

    *(_OWORD *)uint64_t v14 = 0u;
    *((_OWORD *)v14 + 1) = 0u;
    *(_WORD *)(v14 + 57) = 514;
    uint64_t v18 = &v14[*(int *)(v10 + 40)];
    uint64_t v19 = type metadata accessor for MetricsWidgetContext();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    *((void *)v14 + 4) = v17;
    v14[40] = 0;
    *((void *)v14 + 6) = [v2 storeTrackId];
    v14[56] = 0;
    type metadata accessor for PodcastsURLScheme();
    sub_10035C140((uint64_t)v14, (uint64_t)v12, type metadata accessor for PodcastsURLEpisodeParameters);
    type metadata accessor for PodcastsURLShowCommand(0);
    uint64_t v20 = swift_allocObject();
    sub_10035C1A8((uint64_t)v12, v20 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
    type metadata accessor for PodcastsURLNowPlayingCommand();
    if (swift_dynamicCastClass() || (type metadata accessor for PodcastsURLBrowseCommand(), swift_dynamicCastClass()))
    {
      swift_retain();
      URLComponents.init()();
      URLComponents.scheme.setter();
      URLComponents.host.setter();
    }
    else
    {
      type metadata accessor for PodcastsURLOpenCommand(0);
      uint64_t v27 = swift_dynamicCastClass();
      if (v27)
      {
        uint64_t v28 = v27;
        swift_retain();
        sub_1003B9E50(v28, v34);
        goto LABEL_9;
      }
      uint64_t v29 = swift_dynamicCastClass();
      if (!v29)
      {
        type metadata accessor for PodcastsURLPlayCommand(0);
        uint64_t v29 = swift_dynamicCastClass();
        if (!v29)
        {
          type metadata accessor for PodcastsURLShowAndPlayCommand(0);
          uint64_t v29 = swift_dynamicCastClass();
          if (!v29)
          {
            uint64_t v31 = type metadata accessor for URL();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v34, 1, 1, v31);
            goto LABEL_10;
          }
        }
      }
      uint64_t v30 = v29;
      swift_retain();
      URLComponents.init()();
      URLComponents.scheme.setter();
      URLComponents.host.setter();
      sub_1003BB178(v30 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
      URLComponents.queryItems.setter();
    }
    URLComponents.url.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v33);
LABEL_9:
    swift_release();
LABEL_10:
    swift_release();
    return sub_10035C20C((uint64_t)v14, type metadata accessor for PodcastsURLEpisodeParameters);
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.classKit.getter();
  uint64_t v21 = v2;
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 134217984;
    id v35 = [v21 storeTrackId];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unable to build share URL, unknown show for episode - %lld", v24, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    uint64_t v22 = v21;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v26 = type metadata accessor for URL();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v34, 1, 1, v26);
}

id sub_1003D781C(double a1, double a2)
{
  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 artworkForEpisodeUuid:v5 size:0 triggerDownload:a1 a2];

  id v7 = [v6 CGImage];
  return v7;
}

uint64_t sub_1003D78CC()
{
  [*v0 storeTrackId];
  return dispatch thunk of CustomStringConvertible.description.getter();
}

double sub_1003D791C@<D0>(uint64_t a1@<X8>)
{
  id v3 = [*v1 podcast];
  if (v3)
  {
    id v4 = v3;
    *(void *)(a1 + 24) = sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
    *(void *)(a1 + 32) = &off_100566DD8;
    *(void *)a1 = v4;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1003D7994()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1003D79CC()
{
  return sub_1003D781C(*(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1003D79D8()
{
  type metadata accessor for AssetDownloadStatus();
  __chkstk_darwin();
  uint64_t v2 = (id *)((char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1003D955C(v0, (uint64_t)v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0x64656C65636E6143;
  switch(EnumCaseMultiPayload)
  {
    case 1:

      uint64_t result = 0x73736572676F7250;
      break;
    case 2:

      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(id *, uint64_t))(*(void *)(v6 - 8) + 8))(v2, v6);
      uint64_t result = 0x64616F6C6E776F44;
      break;
    case 3:
      return result;
    default:
      uint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      uint64_t v8 = 0x202C64656C696146;
      unint64_t v9 = 0xEF3A20726F727265;
      swift_getErrorValue();
      v5._uint64_t countAndFlagsBits = Error.localizedDescription.getter();
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t result = v8;
      break;
  }
  return result;
}

uint64_t sub_1003D7BC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  Swift::String v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 0xD000000000000033;
  uint64_t v7 = (void *)0x80000001004D1B10;
  switch(*(unsigned char *)sub_100041A98((void *)(v0 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config), *(void *)(v0 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config + 24)))
  {
    case 1:
      uint64_t v8 = "com.apple.podcasts.downloads.episodes.restore";
      goto LABEL_4;
    case 2:
      uint64_t v8 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_4:
      uint64_t v7 = (void *)((unint64_t)(v8 - 32) | 0x8000000000000000);
      uint64_t v6 = 0xD00000000000002DLL;
      break;
    case 3:
      uint64_t v6 = 0xD00000000000002FLL;
      uint64_t v7 = (void *)0x80000001004D1BB0;
      break;
    default:
      break;
  }
  static Logger.downloads.getter();
  swift_bridgeObjectRetain();
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = v0;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = v3;
    uint64_t v19 = v2;
    *(_DWORD *)uint64_t v12 = 136446210;
    strcpy((char *)v22, "ConfigType: ");
    BYTE5(v22[1]) = 0;
    HIWORD(v22[1]) = -5120;
    uint64_t v23 = v13;
    swift_bridgeObjectRetain();
    v14._uint64_t countAndFlagsBits = v6;
    v14._object = v7;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v22[0] = sub_10004B974(v22[0], v22[1], &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Invalidating downloader for %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v21;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v15 = *(void **)(v1 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_urlSession);
  if (!v15)
  {
    __break(1u);
    JUMPOUT(0x1003D7F08);
  }
  [v15 invalidateAndCancel];
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_fairPlayAssetsDownloader + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v16 + 8) + 72))(ObjectType);
}

uint64_t sub_1003D7F18@<X0>(uint64_t a1@<X0>, int a2@<W2>, int64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  int v41 = a4;
  int64_t v42 = a3;
  int v43 = a2;
  uint64_t v47 = a1;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  __chkstk_darwin();
  unint64_t v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  id v15 = &v40[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = v5;
  unint64_t v16 = 0xD000000000000033;
  unint64_t v17 = 0x80000001004D1B10;
  switch(*(unsigned char *)sub_100041A98((void *)(v5 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config), *(void *)(v5 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config + 24)))
  {
    case 1:
      uint64_t v18 = "com.apple.podcasts.downloads.episodes.restore";
      goto LABEL_4;
    case 2:
      uint64_t v18 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_4:
      unint64_t v17 = (unint64_t)(v18 - 32) | 0x8000000000000000;
      unint64_t v16 = 0xD00000000000002DLL;
      break;
    case 3:
      unint64_t v16 = 0xD00000000000002FLL;
      unint64_t v17 = 0x80000001004D1BB0;
      break;
    default:
      break;
  }
  DownloadableURLOptions.url.getter();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100222D54((uint64_t)v11);
    static Logger.downloads.getter();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unable to download because no url was provided.", v21, 2u);
      swift_slowDealloc();
    }

    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v44 + 8))(v9, v45);
    uint64_t v23 = (_OWORD *)v47;
    *(void *)(v47 + 32) = 0;
    *uint64_t v23 = 0u;
    v23[1] = 0u;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v15, v11, v12);
    id v24 = objc_allocWithZone((Class)NSMutableURLRequest);
    URL._bridgeToObjectiveC()(v25);
    uint64_t v27 = v26;
    id v28 = [v24 initWithURL:v26];

    [v28 setAllowsCellularAccess:v43 & 1];
    [v28 setNonAppInitiated:DownloadableURLOptions.nonAppInitiated.getter() & 1];
    uint64_t v29 = *(void **)(v46 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_urlSession);
    if (!v29)
    {
      __break(1u);
      JUMPOUT(0x1003D8414);
    }
    id v30 = [v29 downloadTaskWithRequest:v28];
    uint64_t v31 = v30;
    if (v41) {
      int64_t v32 = NSURLSessionTransferSizeUnknown;
    }
    else {
      int64_t v32 = v42;
    }
    [v30 setCountOfBytesClientExpectsToReceive:v32];
    unint64_t v49 = v16;
    unint64_t v50 = v17;
    id v33 = v31;
    swift_bridgeObjectRetain();
    v34._uint64_t countAndFlagsBits = 0x7261646E6174732ELL;
    v34._object = (void *)0xE900000000000064;
    String.append(_:)(v34);
    v35._uint64_t countAndFlagsBits = 46;
    v35._object = (void *)0xE100000000000000;
    String.append(_:)(v35);
    id v48 = [v33 taskIdentifier];
    v36._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v36);
    swift_bridgeObjectRelease();
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v33 setTaskDescription:v37];

    uint64_t v38 = sub_10004D29C(0, &qword_100608698);
    uint64_t v39 = (void *)v47;
    *(void *)(v47 + 24) = v38;
    v39[4] = &off_10055AB50;
    *uint64_t v39 = v33;

    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  }
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  *(void *)(a5 + 16) = v16;
  *(void *)(a5 + 24) = v17;
  *(unsigned char *)(a5 + 32) = 0;
  return result;
}

void sub_1003D8484()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Logger.downloads.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Calling Background URLSession completion handler.", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    unint64_t v9 = *(void (**)(void))(Strong + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_backgroundCompletionHandler);
    sub_10004ACDC((uint64_t)v9);

    if (v9)
    {
      v9();
      sub_1000536BC((uint64_t)v9);
    }
  }
  swift_beginAccess();
  uint64_t v10 = swift_unknownObjectWeakLoadStrong();
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    uint64_t v12 = (uint64_t *)(v10 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_backgroundCompletionHandler);
    uint64_t v13 = *(void *)(v10 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_backgroundCompletionHandler);
    uint64_t *v12 = 0;
    v12[1] = 0;
    sub_1000536BC(v13);
    uint64_t v14 = *(void *)&v11[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_fairPlayAssetsDownloader + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = *v12;
    uint64_t v17 = v12[1];
    uint64_t v18 = *(void *)(v14 + 8);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    sub_10004ACDC(v16);
    v19(v16, v17, ObjectType, v18);
  }
}

id sub_1003D8918()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetsDownloader();
  return [super dealloc];
}

char *sub_1003D89D0(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v9 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = (int *)sub_100054B78(&qword_1005FE4C0);
      uint64_t v12 = v11[12];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      *(void *)uint64_t v13 = *(void *)v14;
      v13[8] = v14[8];
      *(void *)&a1[v11[16]] = *(void *)&a2[v11[16]];
      uint64_t v15 = v11[20];
      uint64_t v16 = *(void **)&a2[v15];
      *(void *)&a1[v15] = v16;
      id v17 = v16;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = *(char **)a2;
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v19 = v18;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = *(char **)a2;
      swift_errorRetain();
      *(void *)a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1003D8B68(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v3 = type metadata accessor for URL();
    (*(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = *(void **)((char *)a1 + *(int *)(sub_100054B78(&qword_1005FE4C0) + 80));
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        swift_errorRelease();
      }
      return;
    }
    uint64_t v4 = *a1;
  }
}

char *sub_1003D8C30(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    unint64_t v9 = (int *)sub_100054B78(&qword_1005FE4C0);
    uint64_t v10 = v9[12];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    *(void *)uint64_t v11 = *(void *)v12;
    v11[8] = v12[8];
    *(void *)&a1[v9[16]] = *(void *)&a2[v9[16]];
    uint64_t v13 = v9[20];
    uint64_t v14 = *(void **)&a2[v13];
    *(void *)&a1[v13] = v14;
    id v15 = v14;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v16 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    id v17 = v16;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = *(void **)a2;
    swift_errorRetain();
    *(void *)a1 = v7;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void **sub_1003D8D84(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100290C3C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for URL();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      unint64_t v9 = (int *)sub_100054B78(&qword_1005FE4C0);
      uint64_t v10 = v9[12];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      char v13 = v12[8];
      *(void *)uint64_t v11 = *(void *)v12;
      v11[8] = v13;
      *(void **)((char *)a1 + v9[16]) = *(void **)((char *)a2 + v9[16]);
      uint64_t v14 = v9[20];
      id v15 = *(void **)((char *)a2 + v14);
      *(void **)((char *)a1 + v14) = v15;
      id v16 = v15;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      id v17 = *a2;
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      id v18 = v17;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = *a2;
      swift_errorRetain();
      *a1 = v7;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for AssetDownloadStatus()
{
  uint64_t result = qword_100608658;
  if (!qword_100608658) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_1003D8F3C(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)sub_100054B78(&qword_1005FE4C0);
    uint64_t v8 = v7[12];
    unint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    *(void *)unint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    *(void *)&a1[v7[16]] = *(void *)&a2[v7[16]];
    *(void *)&a1[v7[20]] = *(void *)&a2[v7[20]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1003D9034(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100290C3C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)sub_100054B78(&qword_1005FE4C0);
      uint64_t v8 = v7[12];
      unint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      *(void *)unint64_t v9 = *(void *)v10;
      v9[8] = v10[8];
      *(void *)&a1[v7[16]] = *(void *)&a2[v7[16]];
      *(void *)&a1[v7[20]] = *(void *)&a2[v7[20]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003D913C()
{
  uint64_t v3 = "\b";
  uint64_t v4 = &unk_10047A130;
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    int v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1003D9214(uint64_t a1, uint64_t a2)
{
  int v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_statusUpdateHandler);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_statusUpdateHandler);
  *int v5 = a1;
  v5[1] = a2;
  sub_10004ACDC(a1);
  sub_1000536BC(v6);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_fairPlayAssetsDownloader + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + 16))(a1, a2, ObjectType);
}

void sub_1003D92A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v9 = v8;
  *(void *)&long long v29 = a6;
  uint64_t v15 = a4 & 1;
  unsigned int v28 = a7 & 1;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (URL.isHLSPlaylist()())
  {
    uint64_t v20 = *(void *)(v9 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_fairPlayAssetsDownloader + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, void))(*(void *)(v20 + 8) + 40))(&v30, a1, a2, a3, v15, a5 & 1, v29, v28, ObjectType, *(void *)(v20 + 8));
    long long v22 = v30;
    uint64_t v23 = v31;
    uint64_t v24 = v32;
    char v25 = v33;
  }
  else
  {
    type metadata accessor for DownloadableURLOptions();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, v16);
    uint64_t v26 = (void *)DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)();
    sub_1003D7F18(a1, a5 & 1, v29, v28, (uint64_t)&v30);
    long long v29 = v30;
    uint64_t v23 = v31;
    uint64_t v24 = v32;
    char v25 = v33;

    long long v22 = v29;
  }
  *(_OWORD *)a8 = v22;
  *(void *)(a8 + 16) = v23;
  *(void *)(a8 + 24) = v24;
  *(unsigned char *)(a8 + 32) = v25;
}

uint64_t sub_1003D9484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_backgroundCompletionHandler);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_backgroundCompletionHandler);
  *uint64_t v4 = a1;
  v4[1] = a2;
  sub_10004ACDC(a1);
  sub_1000536BC(v5);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_fairPlayAssetsDownloader + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *v4;
  uint64_t v9 = v4[1];
  uint64_t v10 = *(void *)(v6 + 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  sub_10004ACDC(v8);
  v11(v8, v9, ObjectType, v10);

  return sub_1000536BC(a1);
}

uint64_t sub_1003D955C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetDownloadStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003D95C0()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.downloads.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    char v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = v5;
    *(_WORD *)char v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Downloader finished processing URLSession events.", v13, 2u);
    uint64_t v5 = v20;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1003DB980;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100568990;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  uint64_t v17 = v21;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v17, v4);
}

uint64_t sub_1003D9984(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  int v97 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v96 - 8);
  __chkstk_darwin();
  uint64_t v98 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for AssetDownloadStatus();
  __chkstk_darwin();
  uint64_t v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Logger();
  __chkstk_darwin();
  os_log_type_t v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v89 - v13;
  uint64_t v15 = __chkstk_darwin();
  uint64_t v17 = (char *)&v89 - v16;
  uint64_t v99 = v7;
  uint64_t v95 = v18;
  uint64_t v94 = v15;
  if (!a2)
  {
    static Logger.downloads.getter();
    id v26 = a1;
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v93 = v5;
      long long v29 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)long long v29 = 136446210;
      id v30 = v26;
      id v31 = [v30 taskDescription];
      if (v31)
      {
        uint64_t v32 = v31;
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v35 = v34;
      }
      else
      {
        uint64_t v33 = 0x6E776F6E6B6E755BLL;

        unint64_t v35 = 0xEC0000005D646920;
      }
      uint64_t v101 = sub_10004B974(v33, v35, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Download task completed successfully. Nothing to call at this point. Task: %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v95 + 8))(v12, v94);
      uint64_t v5 = v93;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v95 + 8))(v12, v94);
    }
    uint64_t v67 = v96;
    uint64_t v66 = v97;
LABEL_42:
    uint64_t v75 = v98;
    goto LABEL_43;
  }
  uint64_t v91 = v10;
  swift_errorRetain();
  uint64_t v19 = (void *)_convertErrorToNSError(_:)();
  id v20 = [v19 domain];

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v93 = v5;
  if (v21 == v24 && v23 == v25)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {
LABEL_13:
      static Logger.downloads.getter();
      swift_errorRetain();
      id v53 = a1;
      swift_errorRetain();
      id v54 = v53;
      unint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v90 = v4;
        uint64_t v57 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 136446466;
        swift_getErrorValue();
        uint64_t v58 = Error.localizedDescription.getter();
        uint64_t v101 = sub_10004B974(v58, v59, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        *(_WORD *)(v57 + 12) = 2082;
        id v89 = v54;
        id v60 = v54;
        id v61 = [v60 taskDescription];
        if (v61)
        {
          uint64_t v62 = v61;
          uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v65 = v64;
        }
        else
        {
          uint64_t v63 = 0x6E776F6E6B6E755BLL;

          unint64_t v65 = 0xEC0000005D646920;
        }
        uint64_t v101 = sub_10004B974(v63, v65, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Download failed with generic error %{public}s for task %{public}s", (uint8_t *)v57, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v95 + 8))(v14, v94);
        uint64_t v4 = v90;
        uint64_t v67 = v96;
        uint64_t v66 = v97;
        uint64_t v68 = v100;
        id v54 = v89;
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();

        (*(void (**)(char *, uint64_t))(v95 + 8))(v14, v94);
        uint64_t v67 = v96;
        uint64_t v66 = v97;
        uint64_t v68 = v100;
      }
      id v70 = *(void (**)(uint64_t *, unint64_t, unint64_t, void, uint64_t))(v68
                                                                                                  + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_statusUpdateHandler);
      if (v70)
      {
        uint64_t v103 = (void *)sub_10004D29C(0, &qword_1005F8440);
        uint64_t v104 = (void (*)())&off_10055AB50;
        aBlock[0] = (uint64_t)v54;
        uint64_t v71 = sub_100041A98((void *)(v68 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config), *(void *)(v68 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config + 24));
        unint64_t v72 = 0xD000000000000033;
        unint64_t v73 = 0x80000001004D1B10;
        switch(*(unsigned char *)v71)
        {
          case 1:
            uint64_t v74 = "com.apple.podcasts.downloads.episodes.restore";
            goto LABEL_29;
          case 2:
            uint64_t v74 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_29:
            unint64_t v73 = (unint64_t)(v74 - 32) | 0x8000000000000000;
            unint64_t v72 = 0xD00000000000002DLL;
            break;
          case 3:
            unint64_t v72 = 0xD00000000000002FLL;
            unint64_t v73 = 0x80000001004D1BB0;
            break;
          default:
            break;
        }
        uint64_t v76 = (uint64_t)v91;
        *uint64_t v91 = a2;
        swift_storeEnumTagMultiPayload();
        swift_errorRetain();
        id v77 = v54;
        sub_10004ACDC((uint64_t)v70);
        v70(aBlock, v72, v73, 0, v76);
        swift_bridgeObjectRelease();
        sub_1000536BC((uint64_t)v70);
        swift_errorRelease();
        sub_100290C3C(v76);
        sub_10004D2D8((uint64_t)aBlock);
        uint64_t v5 = v93;
        goto LABEL_42;
      }
      swift_errorRelease();
      uint64_t v5 = v93;
      uint64_t v75 = v98;
      goto LABEL_43;
    }
  }
  NSString v37 = (void *)_convertErrorToNSError(_:)();
  id v38 = [v37 code];

  if (v38 != (id)-999) {
    goto LABEL_13;
  }
  static Logger.downloads.getter();
  swift_errorRetain();
  id v39 = a1;
  swift_errorRetain();
  id v40 = v39;
  int v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.error.getter();
  BOOL v43 = os_log_type_enabled(v41, v42);
  id v89 = v40;
  if (v43)
  {
    uint64_t v90 = v4;
    uint64_t v44 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136446466;
    swift_getErrorValue();
    uint64_t v45 = Error.localizedDescription.getter();
    uint64_t v101 = sub_10004B974(v45, v46, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v44 + 12) = 2082;
    id v47 = v40;
    id v48 = [v47 taskDescription];
    if (v48)
    {
      unint64_t v49 = v48;
      uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v52 = v51;
    }
    else
    {
      uint64_t v50 = 0x6E776F6E6B6E755BLL;

      unint64_t v52 = 0xEC0000005D646920;
    }
    uint64_t v101 = sub_10004B974(v50, v52, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Download failed with error cancelled. %{public}s for task %{public}s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v95 + 8))(v17, v94);
    uint64_t v4 = v90;
    uint64_t v5 = v93;
    uint64_t v67 = v96;
    uint64_t v66 = v97;
    uint64_t v69 = v100;
    id v40 = v89;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v95 + 8))(v17, v94);
    uint64_t v5 = v93;
    uint64_t v67 = v96;
    uint64_t v66 = v97;
    uint64_t v69 = v100;
  }
  uint64_t v78 = *(void (**)(uint64_t *, unint64_t, unint64_t, void, uint64_t))(v69
                                                                                              + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_statusUpdateHandler);
  if (v78)
  {
    uint64_t v103 = (void *)sub_10004D29C(0, &qword_1005F8440);
    uint64_t v104 = (void (*)())&off_10055AB50;
    aBlock[0] = (uint64_t)v40;
    uint64_t v79 = sub_100041A98((void *)(v69 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config), *(void *)(v69 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config + 24));
    unint64_t v80 = 0xD000000000000033;
    unint64_t v81 = 0x80000001004D1B10;
    switch(*(unsigned char *)v79)
    {
      case 1:
        uint64_t v82 = "com.apple.podcasts.downloads.episodes.restore";
        goto LABEL_39;
      case 2:
        uint64_t v82 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_39:
        unint64_t v81 = (unint64_t)(v82 - 32) | 0x8000000000000000;
        unint64_t v80 = 0xD00000000000002DLL;
        break;
      case 3:
        unint64_t v80 = 0xD00000000000002FLL;
        unint64_t v81 = 0x80000001004D1BB0;
        break;
      default:
        break;
    }
    uint64_t v83 = (uint64_t)v91;
    swift_storeEnumTagMultiPayload();
    id v84 = v89;
    sub_10004ACDC((uint64_t)v78);
    v78(aBlock, v80, v81, 0, v83);
    swift_bridgeObjectRelease();
    sub_1000536BC((uint64_t)v78);
    swift_errorRelease();
    sub_100290C3C(v83);
    sub_10004D2D8((uint64_t)aBlock);
    goto LABEL_42;
  }
  swift_errorRelease();
  uint64_t v75 = v98;
LABEL_43:
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v85 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v86 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v104 = sub_1003DB980;
  uint64_t v105 = v86;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003B424;
  uint64_t v103 = &unk_100568968;
  unsigned __int8 v87 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v87);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v66, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v75, v67);
}

void sub_1003DA7D4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void (***)(void, void))(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v96 - v10;
  uint64_t v12 = type metadata accessor for AssetDownloadStatus();
  __chkstk_darwin();
  uint64_t v14 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (char *)[a1 response];
  uint64_t v102 = v12;
  uint64_t v103 = v14;
  if (v15)
  {
    uint64_t v104 = v15;
    self;
    uint64_t v16 = (void *)swift_dynamicCastObjCClass();
    if (v16)
    {
      id v100 = v16;
      if ((char *)[v16 statusCode] - 300 < (char *)0xFFFFFFFFFFFFFF9CLL)
      {
        static Logger.downloads.getter();
        id v17 = a1;
        uint64_t v18 = v104;
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.error.getter();
        BOOL v21 = os_log_type_enabled(v19, v20);
        id v98 = v18;
        id v99 = v17;
        if (v21)
        {
          unint64_t v101 = v6;
          uint64_t v104 = v3;
          uint64_t v22 = swift_slowAlloc();
          uint64_t v97 = swift_slowAlloc();
          v108[0] = v97;
          *(_DWORD *)uint64_t v22 = 134349314;
          id v106 = [v100 statusCode];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          *(_WORD *)(v22 + 12) = 2082;
          id v23 = v17;
          id v24 = [v23 taskDescription];
          if (v24)
          {
            uint64_t v25 = v24;
            uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v28 = v27;
          }
          else
          {
            uint64_t v26 = 0x6E776F6E6B6E755BLL;

            unint64_t v28 = 0xEC0000005D646920;
          }
          id v106 = (id)sub_10004B974(v26, v28, v108);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "Download failed. Server response statusCode: %{public}ld. Task: %{public}s", (uint8_t *)v22, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          ((void (**)(char *, unint64_t))v7)[1](v11, v101);
          uint64_t v3 = v104;
        }
        else
        {

          ((void (**)(char *, uint64_t))v7)[1](v11, v6);
        }
        uint64_t v66 = *(void (**)(uint64_t *, char *, unint64_t, void, void *))&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_statusUpdateHandler];
        if (!v66)
        {

          return;
        }
        uint64_t v109 = sub_10004D29C(0, &qword_100608698);
        uint64_t v110 = &off_10055AB50;
        v108[0] = (uint64_t)v99;
        uint64_t v67 = sub_100041A98(&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config], *(void *)&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config + 24]);
        uint64_t v68 = (char *)0xD000000000000033;
        unint64_t v69 = 0x80000001004D1B10;
        switch(*(unsigned char *)v67)
        {
          case 1:
            id v70 = "com.apple.podcasts.downloads.episodes.restore";
            goto LABEL_40;
          case 2:
            id v70 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_40:
            unint64_t v69 = (unint64_t)(v70 - 32) | 0x8000000000000000;
            uint64_t v68 = (char *)0xD00000000000002DLL;
            break;
          case 3:
            uint64_t v68 = (char *)0xD00000000000002FLL;
            unint64_t v69 = 0x80000001004D1BB0;
            break;
          default:
            break;
        }
        uint64_t v104 = v68;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100054B78(&qword_1006086A0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10046D010;
        *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(inited + 40) = v72;
        id v106 = 0;
        unint64_t v107 = 0xE000000000000000;
        id v73 = v99;
        sub_10004ACDC((uint64_t)v66);
        _StringGuts.grow(_:)(47);
        swift_bridgeObjectRelease();
        id v106 = (id)0xD00000000000002DLL;
        unint64_t v107 = 0x80000001004E2CD0;
        id v105 = [v100 statusCode];
        v74._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v74);
        swift_bridgeObjectRelease();
        id v75 = v106;
        unint64_t v76 = v107;
        *(void *)(inited + 72) = &type metadata for String;
        *(void *)(inited + 48) = v75;
        *(void *)(inited + 56) = v76;
        sub_10016E9D8(inited);
        id v77 = objc_allocWithZone((Class)NSError);
        NSString v78 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v80 = [v77 initWithDomain:v78 code:-1011 userInfo:isa];

        unint64_t v81 = v103;
        *uint64_t v103 = v80;
        swift_storeEnumTagMultiPayload();
        v66(v108, v104, v69, 0, v81);
        swift_bridgeObjectRelease();
        sub_1000536BC((uint64_t)v66);

        goto LABEL_51;
      }
      id v40 = [self standardUserDefaults];
      char v41 = NSUserDefaults.episodeDownloadErrorEnabled.getter();

      os_log_type_t v42 = *(void (**)(uint64_t *, unint64_t, unint64_t, void, void *))&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_statusUpdateHandler];
      if (v41)
      {
        if (v42)
        {
          uint64_t v109 = sub_10004D29C(0, &qword_100608698);
          uint64_t v110 = &off_10055AB50;
          v108[0] = (uint64_t)a1;
          BOOL v43 = sub_100041A98(&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config], *(void *)&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config + 24]);
          unint64_t v44 = 0xD000000000000033;
          unint64_t v45 = 0x80000001004D1B10;
          switch(*(unsigned char *)v43)
          {
            case 1:
              unint64_t v46 = "com.apple.podcasts.downloads.episodes.restore";
              goto LABEL_44;
            case 2:
              unint64_t v46 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_44:
              unint64_t v45 = (unint64_t)(v46 - 32) | 0x8000000000000000;
              unint64_t v44 = 0xD00000000000002DLL;
              break;
            case 3:
              unint64_t v44 = 0xD00000000000002FLL;
              unint64_t v45 = 0x80000001004D1BB0;
              break;
            default:
              break;
          }
          unint64_t v101 = v44;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          sub_100054B78(&qword_1006086A0);
          uint64_t v82 = swift_initStackObject();
          *(_OWORD *)(v82 + 16) = xmmword_10046D010;
          *(void *)(v82 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(void *)(v82 + 40) = v83;
          *(void *)(v82 + 72) = &type metadata for String;
          *(void *)(v82 + 48) = 0xD00000000000004DLL;
          *(void *)(v82 + 56) = 0x80000001004E2C80;
          sub_10004ACDC((uint64_t)v42);
          id v84 = a1;
          sub_10016E9D8(v82);
          id v85 = objc_allocWithZone((Class)NSError);
          NSString v86 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          Class v87 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v88 = [v85 initWithDomain:v86 code:-1011 userInfo:v87];

          uint64_t v63 = v103;
          *uint64_t v103 = v88;
          swift_storeEnumTagMultiPayload();
          v42(v108, v101, v45, 0, v63);
          swift_bridgeObjectRelease();
          sub_1000536BC((uint64_t)v42);

LABEL_29:
          uint64_t v64 = (uint64_t)v63;
LABEL_52:
          sub_100290C3C(v64);
          sub_10004D2D8((uint64_t)v108);
          return;
        }
      }
      else if (v42)
      {
        uint64_t v109 = sub_10004D29C(0, &qword_100608698);
        uint64_t v110 = &off_10055AB50;
        v108[0] = (uint64_t)a1;
        unint64_t v52 = sub_100041A98(&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config], *(void *)&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config + 24]);
        unint64_t v53 = 0xD000000000000033;
        unint64_t v54 = 0x80000001004D1B10;
        switch(*(unsigned char *)v52)
        {
          case 1:
            unint64_t v55 = "com.apple.podcasts.downloads.episodes.restore";
            goto LABEL_48;
          case 2:
            unint64_t v55 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_48:
            unint64_t v54 = (unint64_t)(v55 - 32) | 0x8000000000000000;
            unint64_t v53 = 0xD00000000000002DLL;
            break;
          case 3:
            unint64_t v53 = 0xD00000000000002FLL;
            unint64_t v54 = 0x80000001004D1BB0;
            break;
          default:
            break;
        }
        unint64_t v101 = v53;
        id v89 = (int *)sub_100054B78(&qword_1005FE4C0);
        unint64_t v81 = v103;
        uint64_t v90 = (char *)v103 + v89[12];
        uint64_t v91 = v89[16];
        uint64_t v92 = v89[20];
        uint64_t v93 = type metadata accessor for URL();
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(v81, a2, v93);
        *(void *)uint64_t v90 = 0;
        v90[8] = 1;
        id v94 = a1;
        sub_10004ACDC((uint64_t)v42);
        *(void *)((char *)v81 + v91) = [v94 countOfBytesReceived];
        *(void *)((char *)v81 + v92) = v100;
        swift_storeEnumTagMultiPayload();
        uint64_t v95 = v104;
        v42(v108, v101, v54, 0, v81);
        swift_bridgeObjectRelease();
        sub_1000536BC((uint64_t)v42);

LABEL_51:
        uint64_t v64 = (uint64_t)v81;
        goto LABEL_52;
      }
      id v65 = v104;

      return;
    }
  }
  static Logger.downloads.getter();
  id v29 = a1;
  id v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    id v100 = v7;
    unint64_t v101 = v6;
    uint64_t v104 = v3;
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    id v98 = (id)swift_slowAlloc();
    v108[0] = (uint64_t)v98;
    *(_DWORD *)uint64_t v32 = 136446210;
    id v99 = v29;
    id v33 = v29;
    id v34 = [v33 taskDescription];
    if (v34)
    {
      unint64_t v35 = v34;
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;
    }
    else
    {
      uint64_t v36 = 0x6E776F6E6B6E755BLL;

      unint64_t v38 = 0xEC0000005D646920;
    }
    id v106 = (id)sub_10004B974(v36, v38, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Invalid response. Can't get HTTPURLResponse from URLSessionDownloadTask.response task: %{public}s.", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, unint64_t))v100 + 1))(v9, v101);
    uint64_t v3 = v104;
    id v39 = v99;
  }
  else
  {

    ((void (**)(char *, uint64_t))v7)[1](v9, v6);
    id v39 = v29;
  }
  id v47 = *(void (**)(uint64_t *, char *, unint64_t, void, void *))&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_statusUpdateHandler];
  if (v47)
  {
    uint64_t v109 = sub_10004D29C(0, &qword_100608698);
    uint64_t v110 = &off_10055AB50;
    v108[0] = (uint64_t)v39;
    id v48 = sub_100041A98(&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config], *(void *)&v3[OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config + 24]);
    unint64_t v49 = (char *)0xD000000000000033;
    unint64_t v50 = 0x80000001004D1B10;
    switch(*(unsigned char *)v48)
    {
      case 1:
        unint64_t v51 = "com.apple.podcasts.downloads.episodes.restore";
        goto LABEL_26;
      case 2:
        unint64_t v51 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_26:
        unint64_t v50 = (unint64_t)(v51 - 32) | 0x8000000000000000;
        unint64_t v49 = (char *)0xD00000000000002DLL;
        break;
      case 3:
        unint64_t v49 = (char *)0xD00000000000002FLL;
        unint64_t v50 = 0x80000001004D1BB0;
        break;
      default:
        break;
    }
    uint64_t v104 = v49;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100054B78(&qword_1006086A0);
    uint64_t v56 = swift_initStackObject();
    *(_OWORD *)(v56 + 16) = xmmword_10046D010;
    *(void *)(v56 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v56 + 40) = v57;
    *(void *)(v56 + 72) = &type metadata for String;
    *(void *)(v56 + 48) = 0xD000000000000050;
    *(void *)(v56 + 56) = 0x80000001004E2C20;
    id v58 = v39;
    sub_10004ACDC((uint64_t)v47);
    sub_10016E9D8(v56);
    id v59 = objc_allocWithZone((Class)NSError);
    NSString v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v61 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v62 = [v59 initWithDomain:v60 code:-1011 userInfo:v61];

    uint64_t v63 = v103;
    *uint64_t v103 = v62;
    swift_storeEnumTagMultiPayload();
    v47(v108, v104, v50, 0, v63);
    swift_bridgeObjectRelease();
    sub_1000536BC((uint64_t)v47);
    goto LABEL_29;
  }
}

void sub_1003DB6A4(void *a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for AssetDownloadStatus();
  __chkstk_darwin();
  uint64_t v8 = (void *)((char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = 0xD000000000000033;
  unint64_t v10 = 0x80000001004D1B10;
  switch(*(unsigned char *)sub_100041A98((void *)(v3 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config), *(void *)(v3 + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_config + 24)))
  {
    case 1:
      uint64_t v11 = "com.apple.podcasts.downloads.episodes.restore";
      goto LABEL_4;
    case 2:
      uint64_t v11 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_4:
      unint64_t v10 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      unint64_t v9 = 0xD00000000000002DLL;
      break;
    case 3:
      unint64_t v9 = 0xD00000000000002FLL;
      unint64_t v10 = 0x80000001004D1BB0;
      break;
    default:
      break;
  }
  id v18 = [a1 progress];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  [v18 setUserInfoObject:v12 forKey:v13];

  uint64_t v14 = *(void (**)(void *, unint64_t, unint64_t, void, void *))(v3
                                                                                              + OBJC_IVAR____TtC8Podcasts16AssetsDownloader_statusUpdateHandler);
  if (v14)
  {
    v19[3] = sub_10004D29C(0, &qword_100608698);
    v19[4] = &off_10055AB50;
    v19[0] = a1;
    void *v8 = v18;
    v8[1] = a3;
    v8[2] = a2;
    swift_storeEnumTagMultiPayload();
    sub_10004ACDC((uint64_t)v14);
    id v15 = a1;
    id v16 = v18;
    v14(v19, v9, v10, 0, v8);
    sub_1000536BC((uint64_t)v14);

    swift_bridgeObjectRelease();
    sub_100290C3C((uint64_t)v8);
    sub_10004D2D8((uint64_t)v19);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v17 = v18;
  }
}

uint64_t sub_1003DB948()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1003DB980()
{
}

uint64_t sub_1003DB99C()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003DB9F4()
{
  swift_release();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for FetchShowLatestEpisodesIntentImplementation()
{
  return &type metadata for FetchShowLatestEpisodesIntentImplementation;
}

uint64_t sub_1003DBA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006086B8 + dword_1006086B8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  void *v6 = v3;
  v6[1] = sub_1001D3FD4;
  return v8(a2, a3);
}

uint64_t sub_1003DBB24(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  uint64_t v3 = type metadata accessor for EpisodeEntity();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ShowEntity();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  uint64_t ShowLatestCatalogEpisodesIntent = type metadata accessor for FetchShowLatestCatalogEpisodesIntent();
  v2[17] = ShowLatestCatalogEpisodesIntent;
  v2[18] = *(void *)(ShowLatestCatalogEpisodesIntent - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for FetchShowLatestLocalEpisodesIntent();
  v2[21] = swift_task_alloc();
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100609320);
  uint64_t v7 = (void *)swift_task_alloc();
  v2[22] = v7;
  void *v7 = v2;
  v7[1] = sub_1003DBD30;
  return BaseObjectGraph.inject<A>(_:)(v2 + 2, v6, v6);
}

uint64_t sub_1003DBD30()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003DC624;
  }
  else {
    uint64_t v2 = sub_1003DBE44;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003DBE44()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  sub_100041A98(v0 + 2, v3);
  FetchShowLatestEpisodesIntent.show.getter();
  *(void *)(v1 + *(int *)(v2 + 20)) = FetchShowLatestEpisodesIntent.limit.getter();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[24] = v5;
  uint64_t v6 = sub_10005E390((unint64_t *)&qword_1005FFC50, (void (*)(uint64_t))type metadata accessor for FetchShowLatestLocalEpisodesIntent);
  *uint64_t v5 = v0;
  v5[1] = sub_1003DBF74;
  uint64_t v8 = v0[20];
  uint64_t v7 = v0[21];
  uint64_t v9 = v0[10];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 7, v7, v9, v8, v6, v3, v4);
}

uint64_t sub_1003DBF74()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 168);
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  sub_1003DC7E4(v2);
  if (v0) {
    uint64_t v3 = sub_1003DC6B4;
  }
  else {
    uint64_t v3 = sub_1003DC0A4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003DC0A4()
{
  uint64_t v1 = v0[7];
  if (*(void *)(v1 + 16))
  {
    sub_10004D2D8((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v1);
  }
  else
  {
    uint64_t v4 = v0[15];
    uint64_t v5 = v0[16];
    uint64_t v6 = v0[14];
    swift_bridgeObjectRelease();
    uint64_t v7 = v0[5];
    uint64_t v13 = v0[6];
    sub_100041A98(v0 + 2, v7);
    FetchShowLatestEpisodesIntent.show.getter();
    ShowEntity.adamID.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
    FetchShowLatestEpisodesIntent.limit.getter();
    FetchShowLatestCatalogEpisodesIntent.init(adamID:limit:extendedTypes:)();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[26] = v8;
    uint64_t v9 = sub_10005E390(&qword_1006086C0, (void (*)(uint64_t))&type metadata accessor for FetchShowLatestCatalogEpisodesIntent);
    void *v8 = v0;
    v8[1] = sub_1003DC2C0;
    uint64_t v10 = v0[19];
    uint64_t v11 = v0[17];
    uint64_t v12 = v0[10];
    return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 8, v10, v12, v11, v9, v7, v13);
  }
}

uint64_t sub_1003DC2C0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 152);
  uint64_t v3 = *(void *)(*(void *)v1 + 144);
  uint64_t v4 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_1003DC74C;
  }
  else {
    uint64_t v5 = sub_1003DC430;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003DC430()
{
  unint64_t v1 = v0[8];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_13;
    }
  }
  uint64_t result = sub_1001BA910(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v0[12];
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v1 + 8 * v4 + 32);
    }
    EpisodeEntity.init(mediaObject:)();
    unint64_t v8 = _swiftEmptyArrayStorage[2];
    unint64_t v7 = _swiftEmptyArrayStorage[3];
    if (v8 >= v7 >> 1) {
      sub_1001BA910(v7 > 1, v8 + 1, 1);
    }
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[11];
    ++v4;
    _swiftEmptyArrayStorage[2] = v8 + 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v8, v9, v10);
  }
  while (v2 != v4);
LABEL_13:
  swift_bridgeObjectRelease();
  sub_10004D2D8((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void *))v0[1];
  return v11(_swiftEmptyArrayStorage);
}

uint64_t sub_1003DC624()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003DC6B4()
{
  sub_10004D2D8(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003DC74C()
{
  sub_10004D2D8(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003DC7E4(uint64_t a1)
{
  uint64_t ShowLatestLocalEpisodesIntent = type metadata accessor for FetchShowLatestLocalEpisodesIntent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ShowLatestLocalEpisodesIntent - 8) + 8))(a1, ShowLatestLocalEpisodesIntent);
  return a1;
}

void *sub_1003DC840()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v38 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type;
  swift_beginAccess();
  sub_10039F100(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1003DE9F4((uint64_t)v3);
  }
  else
  {
    sub_1001BF8D0((uint64_t)v3, (uint64_t)v10);
    sub_1003DEA54((uint64_t)v10, (uint64_t)v8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = *(void *)v8;
        uint64_t v13 = *((void *)v8 + 1);
        uint64_t v14 = *((void *)v8 + 2);
        uint64_t v15 = *((void *)v8 + 3);
        uint64_t v16 = *((void *)v8 + 4);
        uint64_t v17 = *((void *)v8 + 5);
        uint64_t v18 = *((void *)v8 + 6);
        uint64_t v19 = *((void *)v8 + 7);
        if (v8[64] == 9 && v12 == 3 && (v14 | v13 | v15 | v16 | v17 | v18 | v19) == 0)
        {
          uint64_t v22 = (objc_class *)[self mainBundle];
          unint64_t v24 = 0xD00000000000002ALL;
          unint64_t v23 = 0xD000000000000034;
          unint64_t v37 = 0x80000001004E2EF0;
          uint64_t v25 = "CARPLAY_LIBRARY_LATEST_EPISODES_EMPTY_STATE_SUBTITLE";
          goto LABEL_21;
        }
        sub_100053720(v12, v13, v14, v15, v16, v17, v18, v19, v8[64]);
        sub_1001ED088((uint64_t)v10);
        return _swiftEmptyArrayStorage;
      case 6u:
        swift_release();
        uint64_t v22 = (objc_class *)[self mainBundle];
        unint64_t v23 = 0xD00000000000002ALL;
        unint64_t v24 = 0xD000000000000030;
        unint64_t v37 = 0x80000001004E2D60;
        uint64_t v25 = "CARPLAY_EMPTY_STATION_EMPTY_STATE_SUBTITLE";
        goto LABEL_21;
      case 8u:
        uint64_t v22 = (objc_class *)[self mainBundle];
        unint64_t v23 = 0xD000000000000024;
        unint64_t v24 = 0xD00000000000004ALL;
        unint64_t v37 = 0x80000001004E2E60;
        uint64_t v25 = "CARPLAY_LIBRARY_EMPTY_STATE_SUBTITLE";
LABEL_21:
        unint64_t v30 = (unint64_t)(v25 - 32) | 0x8000000000000000;
        v31.super.Class isa = v22;
        uint64_t v32 = 0;
        unint64_t v33 = 0xE000000000000000;
        goto LABEL_22;
      case 9u:
        uint64_t v26 = type metadata accessor for Podcasts();
        v38[3] = v26;
        v38[4] = sub_10023E1AC();
        unint64_t v27 = sub_10004A244(v38);
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, enum case for Podcasts.homeTab(_:), v26);
        char v28 = isFeatureEnabled(_:)();
        sub_10004D2D8((uint64_t)v38);
        uint64_t v22 = (objc_class *)[self mainBundle];
        if (v28)
        {
          unint64_t v23 = 0xD000000000000021;
          unint64_t v37 = 0x80000001004E2DD0;
          id v29 = "CARPLAY_HOME_EMPTY_STATE_SUBTITLE";
        }
        else
        {
          unint64_t v23 = 0xD000000000000027;
          unint64_t v37 = 0x80000001004E2DD0;
          id v29 = "CARPLAY_LISTEN_NOW_EMPTY_STATE_SUBTITLE";
        }
        unint64_t v30 = (unint64_t)(v29 - 32) | 0x8000000000000000;
        v31.super.Class isa = v22;
        uint64_t v32 = 0;
        unint64_t v33 = 0xE000000000000000;
        unint64_t v24 = 0xD000000000000023;
LABEL_22:
        Swift::String v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v23, (Swift::String_optional)0, v31, *(Swift::String *)&v32, *(Swift::String *)&v24);

        sub_100054B78((uint64_t *)&unk_1005F83F0);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_10046D010;
        *(Swift::String *)(v35 + 32) = v34;
        sub_1001ED088((uint64_t)v10);
        break;
      default:
        sub_1001ED088((uint64_t)v10);
        sub_1001ED088((uint64_t)v8);
        break;
    }
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1003DCD10(char a1)
{
  unint64_t result = 0x6669636570736E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6573776F7262;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
    case 6:
      unint64_t result = 0x537972617262696CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0x6F4E6E657473696CLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0x4E676E6979616C70;
      break;
    case 10:
      unint64_t result = 0x736E6F6974617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003DCE88(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1003DCD10(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1003DCD10(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1003DCF14()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1003DCD10(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1003DCF78()
{
  sub_1003DCD10(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003DCFCC()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1003DCD10(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_1003DD02C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1003DE9A8(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1003DD05C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1003DCD10(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1003DD13C()
{
  return type metadata accessor for CarPlayTemplateInfo(0);
}

uint64_t type metadata accessor for CarPlayTemplateInfo(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1006086F0);
}

void sub_1003DD164()
{
  sub_1003DE768(319, &qword_100608700, (void (*)(uint64_t))type metadata accessor for CarPlayTemplateInfo.TemplateType);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for CarPlayTemplateInfo.TemplateType(uint64_t a1)
{
  return sub_10004F778(a1, qword_100608778);
}

uint64_t *sub_1003DD238(uint64_t *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(void *)a2;
        uint64_t v8 = *((void *)a2 + 1);
        uint64_t v9 = *((void *)a2 + 2);
        uint64_t v10 = *((void *)a2 + 3);
        uint64_t v11 = *((void *)a2 + 4);
        uint64_t v12 = *((void *)a2 + 5);
        uint64_t v14 = *((void *)a2 + 6);
        uint64_t v13 = *((void *)a2 + 7);
        uint64_t v32 = v13;
        char v15 = a2[64];
        sub_1001A5920(v7, v8, v9, v10, v11, v12, v14, v13, v15);
        *a1 = v7;
        a1[1] = v8;
        a1[2] = v9;
        a1[3] = v10;
        a1[4] = v11;
        a1[5] = v12;
        a1[6] = v14;
        a1[7] = v32;
        *((unsigned char *)a1 + 64) = v15;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v18 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v18;
        *((unsigned char *)a1 + 16) = a2[16];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v19 = *(void **)a2;
        char v20 = a2[8];
        sub_10032BA24(v19, v20);
        *a1 = (uint64_t)v19;
        *((unsigned char *)a1 + 8) = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v21 = type metadata accessor for URL();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(a2, 1, v21))
        {
          uint64_t v23 = sub_100054B78((uint64_t *)&unk_1005F7750);
          memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 16))(a1, a2, v21);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v22 + 56))(a1, 0, 1, v21);
        }
        uint64_t v27 = sub_100054B78((uint64_t *)&unk_1005F88C0);
        *(uint64_t *)((char *)a1 + *(int *)(v27 + 48)) = *(void *)&a2[*(int *)(v27 + 48)];
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *a1 = *(void *)a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v24 = type metadata accessor for URL();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(a2, 1, v24))
        {
          uint64_t v26 = sub_100054B78((uint64_t *)&unk_1005F7750);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 16))(a1, a2, v24);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
        }
        uint64_t v28 = sub_100054B78(&qword_1005F9E90);
        *(uint64_t *)((char *)a1 + *(int *)(v28 + 48)) = *(void *)&a2[*(int *)(v28 + 48)];
        uint64_t v29 = *(int *)(v28 + 64);
        unint64_t v30 = (char *)a1 + v29;
        NSBundle v31 = &a2[v29];
        v30[8] = v31[8];
        *(void *)unint64_t v30 = *(void *)v31;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_1003DD688(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_100053720(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
      return;
    case 1u:
    case 4u:
      swift_bridgeObjectRelease();
      return;
    case 2u:
      char v2 = *(void **)a1;
      char v3 = *(unsigned char *)(a1 + 8);
      sub_1001ED3B4(v2, v3);
      return;
    case 3u:
      uint64_t v4 = type metadata accessor for URL();
      uint64_t v5 = *(void *)(v4 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      }
      uint64_t v6 = (uint64_t *)&unk_1005F88C0;
      goto LABEL_15;
    case 6u:
      goto LABEL_16;
    case 7u:
      uint64_t v7 = type metadata accessor for URL();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
      }
      uint64_t v6 = &qword_1005F9E90;
LABEL_15:
      sub_100054B78(v6);
LABEL_16:
      swift_release();
      break;
    default:
      return;
  }
}

uint64_t *sub_1003DD8DC(uint64_t *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = *((void *)a2 + 1);
      uint64_t v8 = *((void *)a2 + 2);
      uint64_t v9 = *((void *)a2 + 3);
      uint64_t v10 = *((void *)a2 + 4);
      uint64_t v11 = *((void *)a2 + 5);
      uint64_t v13 = *((void *)a2 + 6);
      uint64_t v12 = *((void *)a2 + 7);
      uint64_t v30 = v12;
      char v14 = a2[64];
      sub_1001A5920(v6, v7, v8, v9, v10, v11, v13, v12, v14);
      *a1 = v6;
      a1[1] = v7;
      a1[2] = v8;
      a1[3] = v9;
      a1[4] = v10;
      a1[5] = v11;
      a1[6] = v13;
      a1[7] = v30;
      *((unsigned char *)a1 + 64) = v14;
      goto LABEL_16;
    case 1u:
      uint64_t v15 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v15;
      *((unsigned char *)a1 + 16) = a2[16];
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 2u:
      uint64_t v16 = *(void **)a2;
      char v17 = a2[8];
      sub_10032BA24(v16, v17);
      *a1 = (uint64_t)v16;
      *((unsigned char *)a1 + 8) = v17;
      goto LABEL_16;
    case 3u:
      uint64_t v18 = type metadata accessor for URL();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
      {
        uint64_t v20 = sub_100054B78((uint64_t *)&unk_1005F7750);
        memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 16))(a1, a2, v18);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
      }
      uint64_t v24 = sub_100054B78((uint64_t *)&unk_1005F88C0);
      *(uint64_t *)((char *)a1 + *(int *)(v24 + 48)) = *(void *)&a2[*(int *)(v24 + 48)];
      swift_retain();
      goto LABEL_16;
    case 4u:
      *a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 6u:
      *a1 = *(void *)a2;
      swift_retain();
      goto LABEL_16;
    case 7u:
      uint64_t v21 = type metadata accessor for URL();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(a2, 1, v21))
      {
        uint64_t v23 = sub_100054B78((uint64_t *)&unk_1005F7750);
        memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 16))(a1, a2, v21);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v22 + 56))(a1, 0, 1, v21);
      }
      uint64_t v25 = sub_100054B78(&qword_1005F9E90);
      *(uint64_t *)((char *)a1 + *(int *)(v25 + 48)) = *(void *)&a2[*(int *)(v25 + 48)];
      uint64_t v26 = *(int *)(v25 + 64);
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = &a2[v26];
      v27[8] = v28[8];
      *(void *)uint64_t v27 = *(void *)v28;
      swift_retain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_1003DDCD0(uint64_t *a1, char *a2, uint64_t a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_1001ED088((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *(void *)a2;
        uint64_t v7 = *((void *)a2 + 1);
        uint64_t v8 = *((void *)a2 + 2);
        uint64_t v9 = *((void *)a2 + 3);
        uint64_t v10 = *((void *)a2 + 4);
        uint64_t v11 = *((void *)a2 + 5);
        uint64_t v13 = *((void *)a2 + 6);
        uint64_t v12 = *((void *)a2 + 7);
        uint64_t v30 = v12;
        char v14 = a2[64];
        sub_1001A5920(v6, v7, v8, v9, v10, v11, v13, v12, v14);
        *a1 = v6;
        a1[1] = v7;
        a1[2] = v8;
        a1[3] = v9;
        a1[4] = v10;
        a1[5] = v11;
        a1[6] = v13;
        a1[7] = v30;
        *((unsigned char *)a1 + 64) = v14;
        goto LABEL_17;
      case 1u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        *((unsigned char *)a1 + 16) = a2[16];
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        uint64_t v15 = *(void **)a2;
        char v16 = a2[8];
        sub_10032BA24(v15, v16);
        *a1 = (uint64_t)v15;
        *((unsigned char *)a1 + 8) = v16;
        goto LABEL_17;
      case 3u:
        uint64_t v17 = type metadata accessor for URL();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = sub_100054B78((uint64_t *)&unk_1005F7750);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, char *, uint64_t))(v18 + 16))(a1, a2, v17);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v23 = sub_100054B78((uint64_t *)&unk_1005F88C0);
        *(uint64_t *)((char *)a1 + *(int *)(v23 + 48)) = *(void *)&a2[*(int *)(v23 + 48)];
        swift_retain();
        goto LABEL_17;
      case 4u:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 6u:
        *a1 = *(void *)a2;
        swift_retain();
        goto LABEL_17;
      case 7u:
        uint64_t v20 = type metadata accessor for URL();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
        {
          uint64_t v22 = sub_100054B78((uint64_t *)&unk_1005F7750);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 16))(a1, a2, v20);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
        }
        uint64_t v24 = sub_100054B78(&qword_1005F9E90);
        *(uint64_t *)((char *)a1 + *(int *)(v24 + 48)) = *(void *)&a2[*(int *)(v24 + 48)];
        uint64_t v25 = *(int *)(v24 + 64);
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = &a2[v25];
        char v28 = v27[8];
        *(void *)uint64_t v26 = *(void *)v27;
        v26[8] = v28;
        swift_retain();
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1003DE0DC(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
    {
      uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005F7750);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
    }
    uint64_t v14 = sub_100054B78(&qword_1005F9E90);
    *(void *)&a1[*(int *)(v14 + 48)] = *(void *)&a2[*(int *)(v14 + 48)];
    uint64_t v15 = *(int *)(v14 + 64);
    char v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    v16[8] = v17[8];
    *(void *)char v16 = *(void *)v17;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005F7750);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v13 = sub_100054B78((uint64_t *)&unk_1005F88C0);
    *(void *)&a1[*(int *)(v13 + 48)] = *(void *)&a2[*(int *)(v13 + 48)];
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1003DE384(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001ED088((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 7)
    {
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005F7750);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v14 = sub_100054B78(&qword_1005F9E90);
      *(void *)&a1[*(int *)(v14 + 48)] = *(void *)&a2[*(int *)(v14 + 48)];
      uint64_t v15 = *(int *)(v14 + 64);
      char v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      v16[8] = v17[8];
      *(void *)char v16 = *(void *)v17;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v7 = type metadata accessor for URL();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005F7750);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v13 = sub_100054B78((uint64_t *)&unk_1005F88C0);
      *(void *)&a1[*(int *)(v13 + 48)] = *(void *)&a2[*(int *)(v13 + 48)];
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1003DE63C()
{
  char v3 = "A";
  uint64_t v4 = &unk_10047A2C8;
  uint64_t v5 = &unk_10047A2E0;
  sub_1003DE768(319, (unint64_t *)&qword_1005F6DC8, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v2;
    uint64_t v7 = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v8 = &unk_10047A310;
    uint64_t v9 = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_getTupleTypeLayout3();
    uint64_t v10 = &v1;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1003DE768(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for CarPlayTemplateInfo.PlaybackSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CarPlayTemplateInfo.PlaybackSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003DE918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CarPlayTemplateInfo.PlaybackSource()
{
  return &type metadata for CarPlayTemplateInfo.PlaybackSource;
}

unint64_t sub_1003DE954()
{
  unint64_t result = qword_1006087B0;
  if (!qword_1006087B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006087B0);
  }
  return result;
}

unint64_t sub_1003DE9A8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100554848, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xB) {
    return 11;
  }
  else {
    return v3;
  }
}

uint64_t sub_1003DE9F4(uint64_t a1)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003DEA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1003DEAB8()
{
}

void sub_1003DEB14()
{
}

void sub_1003DEB70()
{
}

uint64_t sub_1003DEBCC()
{
  swift_release();
  sub_10004D2D8(v0 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10004D2D8(v0 + 160);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1003DEC24()
{
  sub_1003DEBCC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CarPlayStationDetailProvider()
{
  return self;
}

uint64_t sub_1003DEC7C()
{
  uint64_t v1 = type metadata accessor for ObserverQueue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100054B78(&qword_100608950);
  uint64_t v5 = *(void *)(v22 - 8);
  __chkstk_darwin();
  BOOL v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100054B78(&qword_100608958);
  uint64_t v25 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100054B78(&qword_100608960);
  uint64_t v26 = *(void *)(v24 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  dispatch thunk of LibraryDataProviderProtocol.fetchStationDetailObserver(with:)();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for ObserverQueue.main(_:), v1);
  sub_100044200(&qword_100608968, &qword_100608970);
  uint64_t v12 = Promise<A>.observerPublisher(receiveOn:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v28 = v12;
  sub_100054B78(&qword_100608978);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10046D010;
  *(void *)(v13 + 32) = *(void *)(v0 + 16);
  uint64_t v27 = v13;
  specialized Array._endMutation()();
  swift_retain();
  sub_100054B78(&qword_100608980);
  sub_100044200((unint64_t *)&unk_100608988, &qword_100608980);
  Publisher.prepend(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v0 + 208);
  sub_100054B78((uint64_t *)&unk_1005F8B00);
  sub_100044200(&qword_100608998, &qword_100608950);
  sub_100044200(&qword_1005F9F40, (uint64_t *)&unk_1005F8B00);
  uint64_t v14 = v22;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1003DFB28;
  *(void *)(v16 + 24) = v15;
  static Subscribers.Demand.unlimited.getter();
  sub_100054B78((uint64_t *)&unk_1005F9EB0);
  sub_100044200((unint64_t *)&unk_1006089A0, &qword_100608958);
  sub_100044200(&qword_1005F8B98, (uint64_t *)&unk_1005F9EB0);
  uint64_t v17 = v23;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v17);
  sub_100044200((unint64_t *)&unk_1006089B0, &qword_100608960);
  uint64_t v18 = v24;
  uint64_t v19 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v18);
  return v19;
}

uint64_t sub_1003DF214(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F8BC8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1006089C0);
  uint64_t v27 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1006089C8);
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1006089D0);
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  __chkstk_darwin();
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  uint64_t v16 = Strong;
  if (!a1)
  {
    swift_release();
LABEL_5:
    *(void *)&v32[0] = _swiftEmptyArrayStorage;
    sub_100054B78((uint64_t *)&unk_1005F8BD0);
    Just.init(_:)();
    sub_100044200(&qword_1006089E0, &qword_1005F8BC8);
    uint64_t v24 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v24;
  }
  v26[0] = v9;
  uint64_t v17 = *(void *)(Strong + 136);
  long long v18 = *(_OWORD *)(Strong + 40);
  v32[0] = *(_OWORD *)(Strong + 24);
  v32[1] = v18;
  v32[2] = *(_OWORD *)(Strong + 56);
  uint64_t v33 = *(void *)(Strong + 72);
  uint64_t v19 = a1;
  uint64_t v20 = *(void *)(v16 + 200);
  v26[1] = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v21 = sub_100410F7C(v16 + 80, v17, (uint64_t)v32, v16 + 160, (uint64_t)sub_1001C0E14, v20);
  swift_release();
  swift_release();
  NSBundle v31 = (void *)v21;
  sub_100054B78((uint64_t *)&unk_1006089E8);
  sub_100054B78((uint64_t *)&unk_1005F7E10);
  sub_100044200(&qword_1006089F8, (uint64_t *)&unk_1006089E8);
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005F8BD0);
  Publishers.CompactMap.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
  NSBundle v31 = _swiftEmptyArrayStorage;
  sub_100044200(&qword_100608A00, &qword_1006089C8);
  uint64_t v22 = v26[0];
  Publisher.replaceEmpty(with:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v22);
  sub_100044200(&qword_100608A08, (uint64_t *)&unk_1006089D0);
  uint64_t v23 = v30;
  uint64_t v24 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v23);
  return v24;
}

uint64_t sub_1003DF740@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  sub_1001C0DD4();
  static OS_os_log.carPlay.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  unint64_t v11 = v8 >> 62;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134217984;
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "CarPlayStationDetailProvider: section total items count is %ld.", v12, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10046D060;
  swift_bridgeObjectRetain();
  if (v11)
  {
    sub_100054B78(&qword_1005F7E20);
    uint64_t v19 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v8 = v19;
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  id v15 = objc_allocWithZone((Class)CPListSection);
  sub_1001C04A0(v8);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [v15 initWithItems:isa];

  *(void *)(v14 + 32) = v17;
  uint64_t v21 = v14;
  uint64_t result = specialized Array._endMutation()();
  *a2 = v21;
  return result;
}

uint64_t sub_1003DFA24()
{
  return sub_1003DEC7C();
}

uint64_t sub_1003DFA48()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_1003DFAC8()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t sub_1003DFAF0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003DFB28(uint64_t a1)
{
  return sub_1003DF214(a1);
}

uint64_t sub_1003DFB30()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003DFB68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003DFB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100054B78((uint64_t *)&unk_1005F8AE0);
  swift_allocObject();
  *(void *)(v3 + 200) = PassthroughSubject.init()();
  sub_100054B78((uint64_t *)&unk_1005F8B00);
  swift_allocObject();
  *(void *)(v3 + 208) = CurrentValueSubject.init(_:)();
  *(void *)(v3 + 16) = a2;
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a3;
  *(_OWORD *)(v3 + 40) = v6;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a3 + 32);
  *(void *)(v3 + 72) = *(void *)(a3 + 48);
  sub_100054B78((uint64_t *)&unk_1005F8B10);
  swift_retain();
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v9, v3 + 80);
  sub_100054B78(&qword_1005FD620);
  BaseObjectGraph.inject<A>(_:)();
  *(_OWORD *)(v3 + 120) = v9[0];
  sub_100054B78(&qword_1005F7050);
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(v3 + 136) = *(void *)&v9[0];
  sub_100054B78((uint64_t *)&unk_1005FBBF0);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v9, v3 + 160);
  *(void *)(v3 + 144) = StationDetail.uuid.getter();
  *(void *)(v3 + 152) = v7;
  return v3;
}

void *sub_1003DFCF4()
{
  uint64_t v176 = *v0;
  sub_100054B78((uint64_t *)&unk_100608B20);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10047A4D0;
  uint64_t v178 = (uint64_t)(v0 + 15);
  sub_100056D54((uint64_t)(v0 + 15), (uint64_t)&v195);
  uint64_t v2 = v0[21];
  uint64_t v192 = v2;
  type metadata accessor for PlayEpisodeContextAction();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = 0;
  v3[3] = 0;
  uint64_t v4 = (char *)v3 + OBJC_IVAR____TtC8Podcasts24PlayEpisodeContextAction_state;
  uint64_t v5 = type metadata accessor for EpisodePlayState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_100042FC4(&v195, (uint64_t)(v3 + 4));
  v3[9] = v2;
  uint64_t v6 = sub_1003E3DD0(&qword_100600230, 255, (void (*)(uint64_t))type metadata accessor for PlayEpisodeContextAction);
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v6;
  type metadata accessor for OpenEpisodeContextAction();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  uint64_t v8 = v7 + OBJC_IVAR____TtC8Podcasts24OpenEpisodeContextAction_metricsLabel;
  uint64_t v9 = enum case for MetricsLabel.select(_:);
  unsigned int v181 = enum case for MetricsLabel.select(_:);
  uint64_t v10 = type metadata accessor for MetricsLabel();
  unint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);
  uint64_t v12 = v9;
  uint64_t v13 = v10;
  v11(v8, v12);
  uint64_t v14 = (void (*)(void))v11;
  uint64_t v15 = sub_1003E3DD0((unint64_t *)&unk_100608BA0, 255, (void (*)(uint64_t))type metadata accessor for OpenEpisodeContextAction);
  *(void *)(v1 + 48) = v7;
  *(void *)(v1 + 56) = v15;
  uint64_t v16 = v0;
  uint64_t v17 = (uint64_t)(v0 + 4);
  uint64_t v188 = (uint64_t)(v0 + 4);
  sub_100056D54((uint64_t)(v0 + 4), (uint64_t)&v195);
  uint64_t v18 = v0[3];
  uint64_t v19 = (uint64_t)(v0 + 23);
  uint64_t v20 = v16;
  sub_100056D54(v19, (uint64_t)v194);
  type metadata accessor for DownloadEpisodeContextAction();
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 128) = 0;
  *(void *)(v21 + 32) = 0;
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  ((void (*)(uint64_t, void, uint64_t))v14)(v21 + OBJC_IVAR____TtC8Podcasts28DownloadEpisodeContextAction_metricsLabel, enum case for MetricsLabel.downloadEpisode(_:), v13);
  sub_100042FC4(&v195, v21 + 40);
  *(void *)(v21 + 80) = v18;
  uint64_t v182 = v18;
  sub_1003E3D68((uint64_t)v194, v21 + 88);
  uint64_t v22 = sub_1003E3DD0((unint64_t *)&unk_100608B40, 255, (void (*)(uint64_t))type metadata accessor for DownloadEpisodeContextAction);
  *(void *)(v1 + 64) = v21;
  *(void *)(v1 + 72) = v22;
  uint64_t v23 = v20[22];
  uint64_t v185 = v20;
  uint64_t v187 = v23;
  sub_100056D54(v17, (uint64_t)&v195);
  type metadata accessor for RemoveDownloadContextAction();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 72) = 0u;
  *(_OWORD *)(v24 + 88) = 0u;
  ((void (*)(uint64_t, void, uint64_t))v14)(v24 + OBJC_IVAR____TtC8Podcasts27RemoveDownloadContextAction_metricsLabel, enum case for MetricsLabel.removeDownload(_:), v13);
  *(void *)(v24 + 64) = v23;
  *(void *)(v24 + 16) = v18;
  sub_100042FC4(&v195, v24 + 24);
  uint64_t v25 = sub_1003E3DD0(&qword_1006000B0, 255, (void (*)(uint64_t))type metadata accessor for RemoveDownloadContextAction);
  *(void *)(v1 + 80) = v24;
  *(void *)(v1 + 88) = v25;
  uint64_t v26 = v20[28];
  type metadata accessor for PlayNextEpisodeContextAction();
  uint64_t v27 = (void *)swift_allocObject();
  void v27[3] = 0;
  v27[4] = 0;
  ((void (*)(char *, void, uint64_t))v14)((char *)v27 + OBJC_IVAR____TtC8Podcasts28PlayNextEpisodeContextAction_metricsLabel, enum case for MetricsLabel.playEpisodeNext(_:), v13);
  void v27[2] = v26;
  uint64_t v28 = sub_1003E3DD0(&qword_1005F9198, 255, (void (*)(uint64_t))type metadata accessor for PlayNextEpisodeContextAction);
  *(void *)(v1 + 96) = v27;
  *(void *)(v1 + 104) = v28;
  type metadata accessor for AddToQueueEpisodeContextAction();
  uint64_t v29 = (void *)swift_allocObject();
  v29[3] = 0;
  v29[4] = 0;
  ((void (*)(char *, void, uint64_t))v14)((char *)v29 + OBJC_IVAR____TtC8Podcasts30AddToQueueEpisodeContextAction_metricsLabel, enum case for MetricsLabel.addToQueueEpisode(_:), v13);
  v29[2] = v26;
  uint64_t v30 = sub_1003E3DD0(&qword_100608B70, 255, (void (*)(uint64_t))type metadata accessor for AddToQueueEpisodeContextAction);
  *(void *)(v1 + 112) = v29;
  *(void *)(v1 + 120) = v30;
  type metadata accessor for RemoveFromQueueContextAction();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = 0;
  *(void *)(v31 + 24) = 0;
  *(_OWORD *)(v31 + 48) = xmmword_10046F4B0;
  *(void *)(v31 + 64) = 0;
  *(unsigned char *)(v31 + 32) = 0;
  *(void *)(v31 + 40) = v26;
  uint64_t v32 = v26;
  uint64_t v33 = sub_1003E3DD0(&qword_100601180, 255, (void (*)(uint64_t))type metadata accessor for RemoveFromQueueContextAction);
  *(void *)(v1 + 128) = v31;
  *(void *)(v1 + 136) = v33;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0;
  *(void *)(v34 + 24) = 0;
  *(_OWORD *)(v34 + 48) = xmmword_10046F4B0;
  *(void *)(v34 + 64) = 0;
  *(unsigned char *)(v34 + 32) = 1;
  *(void *)(v34 + 40) = v32;
  *(void *)(v1 + 144) = v34;
  *(void *)(v1 + 152) = v33;
  sub_100056D54(v188, (uint64_t)&v195);
  sub_100056D54(v19, (uint64_t)v194);
  type metadata accessor for MarkEpisodeContextAction();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = 0;
  *(void *)(v35 + 24) = 0;
  *(void *)(v35 + 136) = 1;
  *(unsigned char *)(v35 + 32) = 0;
  *(void *)(v35 + 40) = v192;
  sub_100042FC4(&v195, v35 + 48);
  sub_100042FC4(v194, v35 + 88);
  *(void *)(v35 + 128) = v32;
  uint64_t v36 = sub_1003E3DD0((unint64_t *)&unk_100608B60, 255, (void (*)(uint64_t))type metadata accessor for MarkEpisodeContextAction);
  *(void *)(v1 + 160) = v35;
  *(void *)(v1 + 168) = v36;
  sub_100056D54(v188, (uint64_t)&v195);
  sub_100056D54(v19, (uint64_t)v194);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = 0;
  *(void *)(v37 + 24) = 0;
  *(void *)(v37 + 136) = 1;
  *(unsigned char *)(v37 + 32) = 1;
  *(void *)(v37 + 40) = v192;
  sub_100042FC4(&v195, v37 + 48);
  sub_100042FC4(v194, v37 + 88);
  *(void *)(v37 + 128) = v32;
  uint64_t v179 = v32;
  *(void *)(v1 + 176) = v37;
  *(void *)(v1 + 184) = v36;
  type metadata accessor for CopyLinkEpisodeContextAction();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 24) = 0;
  *(void *)(v38 + 32) = 0;
  *(void *)(v38 + 16) = 0;
  *(unsigned char *)(v38 + 40) = 1;
  *(void *)(v38 + 48) = 0;
  *(unsigned char *)(v38 + 56) = 1;
  *(_OWORD *)(v38 + 64) = xmmword_10047A4E0;
  *(void *)(v38 + 80) = 0xE400000000000000;
  unsigned int v180 = enum case for MetricsLabel.copy(_:);
  v14(v38 + OBJC_IVAR____TtC8Podcasts28CopyLinkEpisodeContextAction_metricsLabel);
  uint64_t v39 = v38 + OBJC_IVAR____TtC8Podcasts28CopyLinkEpisodeContextAction_shareLink;
  uint64_t v184 = type metadata accessor for URL();
  uint64_t v183 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 56);
  v183(v39, 1, 1, v184);
  uint64_t v40 = sub_1003E3DD0((unint64_t *)&unk_100608BB0, 255, (void (*)(uint64_t))type metadata accessor for CopyLinkEpisodeContextAction);
  *(void *)(v1 + 192) = v38;
  *(void *)(v1 + 200) = v40;
  sub_100056D54(v178, (uint64_t)&v195);
  type metadata accessor for GoToEpisodeContextAction();
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 56) = 0;
  *(void *)(v41 + 64) = 0;
  uint64_t v186 = self;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  id v42 = [v186 mainBundle];
  v198._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v198._object = (void *)0x80000001004E3110;
  v43._uint64_t countAndFlagsBits = 0x50455F4F545F4F47;
  v43._object = (void *)0xED000045444F5349;
  v44._uint64_t countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  Swift::String v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v198);

  *(Swift::String *)(v41 + 72) = v45;
  *(_OWORD *)(v41 + 88) = xmmword_10047A4F0;
  *(void *)(v41 + 104) = 0xEB00000000657261;
  unsigned int v177 = enum case for MetricsLabel.navigate(_:);
  v14(v41 + OBJC_IVAR____TtC8Podcasts24GoToEpisodeContextAction_metricsLabel);
  uint64_t v46 = v41 + OBJC_IVAR____TtC8Podcasts24GoToEpisodeContextAction_contextActionType;
  uint64_t v47 = enum case for ContextActionType.goToEpisode(_:);
  uint64_t v48 = type metadata accessor for ContextActionType();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v193 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 104);
  uint64_t v190 = v48;
  v193(v46, v47, v48);
  uint64_t v191 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56);
  v191(v46, 0, 1, v48);
  sub_100042FC4(&v195, v41 + 16);
  uint64_t v50 = sub_1003E3DD0(&qword_100600328, 255, (void (*)(uint64_t))type metadata accessor for GoToEpisodeContextAction);
  *(void *)(v1 + 208) = v41;
  *(void *)(v1 + 216) = v50;
  sub_100056D54(v178, (uint64_t)&v195);
  type metadata accessor for EpisodePresentPodcastContextAction();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0;
  *(void *)(v51 + 24) = 0;
  ((void (*)(uint64_t, void, uint64_t))v14)(v51 + OBJC_IVAR____TtC8Podcasts34EpisodePresentPodcastContextAction_metricsLabel, v181, v13);
  sub_100042FC4(&v195, v51 + 32);
  uint64_t v52 = sub_1003E3DD0((unint64_t *)&unk_100608BC0, 255, (void (*)(uint64_t))type metadata accessor for EpisodePresentPodcastContextAction);
  *(void *)(v1 + 224) = v51;
  *(void *)(v1 + 232) = v52;
  type metadata accessor for ViewTranscriptContextAction();
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = 0;
  *(void *)(v53 + 24) = 0;
  uint64_t v54 = v53 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
  uint64_t v55 = type metadata accessor for TranscriptRequestInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 1, 1, v55);
  uint64_t v56 = sub_1003E3DD0(&qword_100600A00, 255, (void (*)(uint64_t))type metadata accessor for ViewTranscriptContextAction);
  *(void *)(v1 + 240) = v53;
  *(void *)(v1 + 248) = v56;
  sub_100056D54(v188, (uint64_t)&v195);
  uint64_t v57 = v185[14];
  type metadata accessor for SubscribeEpisodeContextAction();
  id v58 = (void *)swift_allocObject();
  v58[8] = 0;
  v58[9] = 0;
  sub_100042FC4(&v195, (uint64_t)(v58 + 2));
  v58[7] = v57;
  uint64_t v59 = sub_1003E3DD0((unint64_t *)&unk_100608BD0, 255, (void (*)(uint64_t))type metadata accessor for SubscribeEpisodeContextAction);
  *(void *)(v1 + 256) = v58;
  *(void *)(v1 + 264) = v59;
  sub_100056D54(v188, (uint64_t)&v195);
  type metadata accessor for SubscribePodcastContextAction();
  NSString v60 = (void *)swift_allocObject();
  v60[2] = 0;
  uint64_t v60[3] = 0;
  ((void (*)(char *, void, uint64_t))v14)((char *)v60 + OBJC_IVAR____TtC8Podcasts29SubscribePodcastContextAction_metricsLabel, enum case for MetricsLabel.subscribe(_:), v13);
  sub_100042FC4(&v195, (uint64_t)(v60 + 4));
  v60[9] = v57;
  uint64_t v61 = sub_1003E3DD0(&qword_100600C80, 255, (void (*)(uint64_t))type metadata accessor for SubscribePodcastContextAction);
  *(void *)(v1 + 272) = v60;
  *(void *)(v1 + 280) = v61;
  sub_100056D54(v188, (uint64_t)&v195);
  sub_100056D54((uint64_t)(v185 + 9), (uint64_t)v194);
  type metadata accessor for UnsubscribePodcastContextAction();
  id v62 = (void *)swift_allocObject();
  void v62[2] = 0;
  v62[3] = 0;
  ((void (*)(char *, void, uint64_t))v14)((char *)v62 + OBJC_IVAR____TtC8Podcasts31UnsubscribePodcastContextAction_metricsLabel, enum case for MetricsLabel.unsubscribe(_:), v13);
  sub_100042FC4(&v195, (uint64_t)(v62 + 4));
  v62[9] = v57;
  sub_100042FC4(v194, (uint64_t)(v62 + 10));
  uint64_t v63 = sub_1003E3DD0((unint64_t *)&unk_100608BE0, 255, (void (*)(uint64_t))type metadata accessor for UnsubscribePodcastContextAction);
  *(void *)(v1 + 288) = v62;
  *(void *)(v1 + 296) = v63;
  sub_100056D54(v188, (uint64_t)&v195);
  type metadata accessor for RefollowPodcastContextAction();
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = 0;
  *(void *)(v64 + 24) = 0;
  ((void (*)(uint64_t, void, uint64_t))v14)(v64 + OBJC_IVAR____TtC8Podcasts28RefollowPodcastContextAction_metricsLabel, enum case for MetricsLabel.refollow(_:), v13);
  sub_100042FC4(&v195, v64 + 32);
  uint64_t v65 = sub_1003E3DD0(&qword_1005F8090, 255, (void (*)(uint64_t))type metadata accessor for RefollowPodcastContextAction);
  *(void *)(v1 + 304) = v64;
  *(void *)(v1 + 312) = v65;
  sub_100056D54(v188, (uint64_t)&v195);
  type metadata accessor for DeleteRecentlyUnfollowedPodcastContextAction();
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 56) = 0;
  *(void *)(v66 + 64) = 0;
  *(_OWORD *)(v66 + 72) = xmmword_10047A500;
  *(void *)(v66 + 88) = 0xE500000000000000;
  ((void (*)(uint64_t, void, uint64_t))v14)(v66 + OBJC_IVAR____TtC8Podcasts44DeleteRecentlyUnfollowedPodcastContextAction_metricsLabel, enum case for MetricsLabel.deleteShow(_:), v13);
  uint64_t v67 = v66 + OBJC_IVAR____TtC8Podcasts44DeleteRecentlyUnfollowedPodcastContextAction_contextActionType;
  v193(v66 + OBJC_IVAR____TtC8Podcasts44DeleteRecentlyUnfollowedPodcastContextAction_contextActionType, enum case for ContextActionType.deleteRecentlyUnfollowedShow(_:), v48);
  v191(v67, 0, 1, v48);
  sub_100042FC4(&v195, v66 + 16);
  uint64_t v68 = sub_1003E3DD0((unint64_t *)&unk_100608BF0, 255, (void (*)(uint64_t))type metadata accessor for DeleteRecentlyUnfollowedPodcastContextAction);
  *(void *)(v1 + 320) = v66;
  *(void *)(v1 + 328) = v68;
  sub_100056D54(v178, (uint64_t)&v195);
  type metadata accessor for GoToShowPodcastContextAction();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = 0;
  *(void *)(v69 + 24) = 0;
  ((void (*)(uint64_t, void, uint64_t))v14)(v69 + OBJC_IVAR____TtC8Podcasts28GoToShowPodcastContextAction_metricsLabel, v177, v13);
  sub_100042FC4(&v195, v69 + 32);
  uint64_t v70 = sub_1003E3DD0(&qword_1005FB490, 255, (void (*)(uint64_t))type metadata accessor for GoToShowPodcastContextAction);
  *(void *)(v1 + 336) = v69;
  *(void *)(v1 + 344) = v70;
  type metadata accessor for SettingsPodcastContextAction();
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = 0;
  *(void *)(v71 + 24) = 0;
  ((void (*)(uint64_t, void, uint64_t))v14)(v71 + OBJC_IVAR____TtC8Podcasts28SettingsPodcastContextAction_metricsLabel, enum case for MetricsLabel.settingsPodcast(_:), v13);
  uint64_t v72 = sub_1003E3DD0((unint64_t *)&unk_100608C00, 255, (void (*)(uint64_t))type metadata accessor for SettingsPodcastContextAction);
  *(void *)(v1 + 352) = v71;
  *(void *)(v1 + 360) = v72;
  type metadata accessor for PlayNextPodcastContextAction();
  id v73 = (void *)swift_allocObject();
  v73[3] = 0;
  v73[4] = 0;
  ((void (*)(char *, void, uint64_t))v14)((char *)v73 + OBJC_IVAR____TtC8Podcasts28PlayNextPodcastContextAction_metricsLabel, enum case for MetricsLabel.playPodcastNext(_:), v13);
  v73[2] = v179;
  uint64_t v74 = sub_1003E3DD0(&qword_1006041E0, 255, (void (*)(uint64_t))type metadata accessor for PlayNextPodcastContextAction);
  *(void *)(v1 + 368) = v73;
  *(void *)(v1 + 376) = v74;
  type metadata accessor for AddToQueuePodcastContextAction();
  id v75 = (void *)swift_allocObject();
  v75[3] = 0;
  v75[4] = 0;
  ((void (*)(char *, void, uint64_t))v14)((char *)v75 + OBJC_IVAR____TtC8Podcasts30AddToQueuePodcastContextAction_metricsLabel, enum case for MetricsLabel.addToQueuePodcast(_:), v13);
  v75[2] = v179;
  uint64_t v76 = sub_1003E3DD0((unint64_t *)&unk_100608C10, 255, (void (*)(uint64_t))type metadata accessor for AddToQueuePodcastContextAction);
  *(void *)(v1 + 384) = v75;
  *(void *)(v1 + 392) = v76;
  type metadata accessor for CopyLinkPodcastContextAction();
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = 0;
  *(void *)(v77 + 24) = 0;
  *(void *)(v77 + 32) = 0;
  *(_OWORD *)(v77 + 40) = xmmword_10047A510;
  ((void (*)(uint64_t, void, uint64_t))v14)(v77 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_metricsLabel, v180, v13);
  v183(v77 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_shareLink, 1, 1, v184);
  uint64_t v78 = sub_1003E3DD0(&qword_100605AD8, 255, (void (*)(uint64_t))type metadata accessor for CopyLinkPodcastContextAction);
  *(void *)(v1 + 400) = v77;
  *(void *)(v1 + 408) = v78;
  type metadata accessor for ReportConcernContextAction();
  uint64_t v79 = swift_allocObject();
  *(void *)(v79 + 16) = 0;
  *(void *)(v79 + 24) = 0;
  *(void *)(v79 + 32) = 0;
  *(unsigned char *)(v79 + 40) = -1;
  *(void *)(v79 + 48) = 0;
  *(void *)(v79 + 56) = 0;
  *(void *)(v79 + 64) = 0xD000000000000016;
  *(void *)(v79 + 72) = 0x80000001004DC0D0;
  ((void (*)(uint64_t, void, uint64_t))v14)(v79 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_metricsLabel, enum case for MetricsLabel.reportPodcast(_:), v13);
  uint64_t v80 = v79 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_contextActionType;
  v193(v79 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_contextActionType, enum case for ContextActionType.report(_:), v190);
  v191(v80, 0, 1, v190);
  uint64_t v81 = sub_1003E3DD0((unint64_t *)&qword_100608C20, 255, (void (*)(uint64_t))type metadata accessor for ReportConcernContextAction);
  *(void *)(v1 + 416) = v79;
  *(void *)(v1 + 424) = v81;
  sub_100056D54(v188, (uint64_t)&v195);
  type metadata accessor for MarkAllAsPlayedContextAction();
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + 56) = 0;
  *(void *)(v82 + 64) = 0;
  *(unsigned char *)(v82 + 72) = 0;
  swift_retain_n();
  swift_retain_n();
  id v83 = [v186 mainBundle];
  v84._uint64_t countAndFlagsBits = 0xD000000000000012;
  v199._object = (void *)0xE000000000000000;
  v84._object = (void *)0x80000001004E3130;
  v85._uint64_t countAndFlagsBits = 0;
  v85._object = (void *)0xE000000000000000;
  v199._uint64_t countAndFlagsBits = 0;
  Swift::String v86 = NSLocalizedString(_:tableName:bundle:value:comment:)(v84, (Swift::String_optional)0, (NSBundle)v83, v85, v199);

  *(Swift::String *)(v82 + 80) = v86;
  *(_OWORD *)(v82 + 96) = xmmword_10047A520;
  *(void *)(v82 + 112) = 0x80000001004D5430;
  ((void (*)(uint64_t, void, uint64_t))v14)(v82 + OBJC_IVAR____TtC8Podcasts28MarkAllAsPlayedContextAction_metricsLabel, enum case for MetricsLabel.markAllEpisodesAsPlayed(_:), v13);
  uint64_t v87 = v82 + OBJC_IVAR____TtC8Podcasts28MarkAllAsPlayedContextAction_contextActionType;
  v193(v82 + OBJC_IVAR____TtC8Podcasts28MarkAllAsPlayedContextAction_contextActionType, enum case for ContextActionType.markAllEpisodesAsPlayed(_:), v190);
  v191(v87, 0, 1, v190);
  sub_100042FC4(&v195, v82 + 16);
  uint64_t v88 = sub_1003E3DD0(&qword_100606EB0, 255, (void (*)(uint64_t))type metadata accessor for MarkAllAsPlayedContextAction);
  *(void *)(v1 + 432) = v82;
  *(void *)(v1 + 440) = v88;
  uint64_t v89 = v185[20];
  type metadata accessor for BookmarkEpisodeContextAction();
  uint64_t v90 = swift_allocObject();
  *(void *)(v90 + 16) = 0;
  *(void *)(v90 + 24) = 0;
  *(void *)(v90 + 32) = 0;
  *(_OWORD *)(v90 + 40) = xmmword_10046E8E0;
  ((void (*)(uint64_t, void, uint64_t))v14)(v90 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_metricsLabel, enum case for MetricsLabel.bookmarkEpisode(_:), v13);
  uint64_t v91 = v90 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_contextActionType;
  v193(v90 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_contextActionType, enum case for ContextActionType.bookmarkEpisode(_:), v190);
  v191(v91, 0, 1, v190);
  *(void *)(v90 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_bookmarksController) = v89;
  uint64_t v92 = sub_1003E3DD0((unint64_t *)&unk_100608B50, 255, (void (*)(uint64_t))type metadata accessor for BookmarkEpisodeContextAction);
  *(void *)(v1 + 448) = v90;
  *(void *)(v1 + 456) = v92;
  type metadata accessor for RemoveEpisodeFromBookmarksContextAction();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = 0;
  *(void *)(v93 + 24) = 0;
  swift_retain_n();
  id v94 = [v186 mainBundle];
  v200._object = (void *)0xEE0065646F736970;
  v95._uint64_t countAndFlagsBits = 0x455F455641534E55;
  v95._object = (void *)0xEE0045444F534950;
  v96._uint64_t countAndFlagsBits = 0;
  v96._object = (void *)0xE000000000000000;
  v200._uint64_t countAndFlagsBits = 0x4520657661736E55;
  Swift::String v97 = NSLocalizedString(_:tableName:bundle:value:comment:)(v95, (Swift::String_optional)0, (NSBundle)v94, v96, v200);

  *(Swift::String *)(v93 + 32) = v97;
  *(_OWORD *)(v93 + 48) = xmmword_10047A530;
  *(void *)(v93 + 64) = 0xEE006873616C732ELL;
  ((void (*)(uint64_t, void, uint64_t))v14)(v93 + OBJC_IVAR____TtC8Podcasts39RemoveEpisodeFromBookmarksContextAction_metricsLabel, enum case for MetricsLabel.removeEpisodeFromBookmarks(_:), v13);
  uint64_t v98 = v93 + OBJC_IVAR____TtC8Podcasts39RemoveEpisodeFromBookmarksContextAction_contextActionType;
  v193(v93 + OBJC_IVAR____TtC8Podcasts39RemoveEpisodeFromBookmarksContextAction_contextActionType, enum case for ContextActionType.removeEpisodeFromBookmarks(_:), v190);
  v191(v98, 0, 1, v190);
  *(void *)(v93 + OBJC_IVAR____TtC8Podcasts39RemoveEpisodeFromBookmarksContextAction_bookmarksController) = v89;
  uint64_t v99 = sub_1003E3DD0(&qword_1005FFC20, 255, (void (*)(uint64_t))type metadata accessor for RemoveEpisodeFromBookmarksContextAction);
  *(void *)(v1 + 464) = v93;
  *(void *)(v1 + 472) = v99;
  type metadata accessor for DeleteStationShowContextAction();
  uint64_t v100 = swift_allocObject();
  uint64_t v101 = v100 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData;
  uint64_t v102 = type metadata accessor for StationShowContextActionData();
  uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56);
  v103(v101, 1, 1, v102);
  *(void *)(v100 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_configuration) = 0;
  ((void (*)(uint64_t, void, uint64_t))v14)(v100 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_metricsLabel, enum case for MetricsLabel.deleteStationShow(_:), v13);
  uint64_t v104 = sub_1003E3DD0((unint64_t *)&unk_100608C30, 255, (void (*)(uint64_t))type metadata accessor for DeleteStationShowContextAction);
  *(void *)(v1 + 480) = v100;
  *(void *)(v1 + 488) = v104;
  type metadata accessor for AddToQueueStationShowContextAction();
  uint64_t v105 = swift_allocObject();
  v103(v105 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_stationShowData, 1, 1, v102);
  *(void *)(v105 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_configuration) = 0;
  ((void (*)(uint64_t, void, uint64_t))v14)(v105 + OBJC_IVAR____TtC8Podcasts34AddToQueueStationShowContextAction_metricsLabel, enum case for MetricsLabel.addToQueueStationShow(_:), v13);
  uint64_t v106 = sub_1003E3DD0(&qword_100608298, 255, (void (*)(uint64_t))type metadata accessor for AddToQueueStationShowContextAction);
  *(void *)(v1 + 496) = v105;
  *(void *)(v1 + 504) = v106;
  type metadata accessor for CopyLinkOtherContextAction();
  uint64_t v107 = swift_allocObject();
  *(void *)(v107 + 16) = 0;
  v183(v107 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_link, 1, 1, v184);
  *(void *)(v107 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_attributes) = 0;
  *(_OWORD *)(v107 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_systemImageName) = xmmword_10047A510;
  ((void (*)(uint64_t, void, uint64_t))v14)(v107 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_metricsLabel, enum case for MetricsLabel.copyLinkOther(_:), v13);
  uint64_t v108 = v107 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_contextActionType;
  v193(v107 + OBJC_IVAR____TtC8Podcasts26CopyLinkOtherContextAction_contextActionType, enum case for ContextActionType.copyOtherLink(_:), v190);
  v191(v108, 0, 1, v190);
  uint64_t v109 = sub_1003E3DD0((unint64_t *)&qword_100608C40, 255, (void (*)(uint64_t))type metadata accessor for CopyLinkOtherContextAction);
  *(void *)(v1 + 512) = v107;
  *(void *)(v1 + 520) = v109;
  sub_100056D54(v188, (uint64_t)&v195);
  sub_100056D54((uint64_t)(v185 + 9), (uint64_t)v194);
  type metadata accessor for RemoveAllDownloadsFromShowContextAction();
  uint64_t v110 = swift_allocObject();
  *(void *)(v110 + 104) = 0;
  *(void *)(v110 + 112) = 0;
  swift_retain();
  id v111 = [v186 mainBundle];
  v201._object = (void *)0x80000001004E3170;
  v112._object = (void *)0x80000001004E3150;
  v112._uint64_t countAndFlagsBits = 0xD000000000000010;
  v113._uint64_t countAndFlagsBits = 0;
  v113._object = (void *)0xE000000000000000;
  v201._uint64_t countAndFlagsBits = 0xD000000000000010;
  Swift::String v114 = NSLocalizedString(_:tableName:bundle:value:comment:)(v112, (Swift::String_optional)0, (NSBundle)v111, v113, v201);

  *(Swift::String *)(v110 + 120) = v114;
  *(_OWORD *)(v110 + 136) = xmmword_10047A500;
  *(void *)(v110 + 152) = 0xE500000000000000;
  ((void (*)(uint64_t, void, uint64_t))v14)(v110 + OBJC_IVAR____TtC8Podcasts39RemoveAllDownloadsFromShowContextAction_metricsLabel, enum case for MetricsLabel.removeAllDownloadsFromShow(_:), v13);
  uint64_t v115 = v110 + OBJC_IVAR____TtC8Podcasts39RemoveAllDownloadsFromShowContextAction_contextActionType;
  v193(v110 + OBJC_IVAR____TtC8Podcasts39RemoveAllDownloadsFromShowContextAction_contextActionType, enum case for ContextActionType.removeAllDownloadsFromShow(_:), v190);
  v191(v115, 0, 1, v190);
  sub_100042FC4(&v195, v110 + 16);
  sub_100042FC4(v194, v110 + 56);
  *(void *)(v110 + 96) = v57;
  uint64_t v116 = sub_1003E3DD0(&qword_1005F9C88, 255, (void (*)(uint64_t))type metadata accessor for RemoveAllDownloadsFromShowContextAction);
  *(void *)(v1 + 528) = v110;
  *(void *)(v1 + 536) = v116;
  sub_100056D54((uint64_t)(v185 + 9), (uint64_t)&v195);
  sub_100056D54(v188, (uint64_t)v194);
  type metadata accessor for RemovePodcastContextAction();
  uint64_t v117 = swift_allocObject();
  *(void *)(v117 + 96) = 0;
  *(void *)(v117 + 104) = 0;
  *(_OWORD *)(v117 + 112) = xmmword_10047A500;
  *(void *)(v117 + 128) = 0xE500000000000000;
  ((void (*)(uint64_t, void, uint64_t))v14)(v117 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_metricsLabel, enum case for MetricsLabel.removeShowFromLibrary(_:), v13);
  uint64_t v118 = v117 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_contextActionType;
  v193(v117 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_contextActionType, enum case for ContextActionType.removeShowFromLibrary(_:), v190);
  v191(v118, 0, 1, v190);
  sub_100042FC4(&v195, v117 + 16);
  sub_100042FC4(v194, v117 + 56);
  uint64_t v119 = sub_1003E3DD0((unint64_t *)&unk_100608C50, 255, (void (*)(uint64_t))type metadata accessor for RemovePodcastContextAction);
  *(void *)(v1 + 544) = v117;
  *(void *)(v1 + 552) = v119;
  sub_100056D54(v188, (uint64_t)&v195);
  type metadata accessor for HidePlayedEpisodesPodcastContextAction();
  uint64_t v120 = swift_allocObject();
  *(void *)(v120 + 56) = 0;
  *(void *)(v120 + 64) = 0;
  *(_WORD *)(v120 + 72) = 0;
  uint64_t v121 = v120 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_contextActionType;
  v193(v120 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_contextActionType, enum case for ContextActionType.hidePlayedEpisodes(_:), v190);
  v191(v121, 0, 1, v190);
  *(void *)(v120 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_attributes) = 0;
  *(_OWORD *)(v120 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_systemImageName) = xmmword_10047A540;
  ((void (*)(uint64_t, void, uint64_t))v14)(v120 + OBJC_IVAR____TtC8Podcasts38HidePlayedEpisodesPodcastContextAction_metricsLabel, enum case for MetricsLabel.hidePlayedEpisodes(_:), v13);
  sub_100042FC4(&v195, v120 + 16);
  uint64_t v122 = sub_1003E3DD0(&qword_100607038, 255, (void (*)(uint64_t))type metadata accessor for HidePlayedEpisodesPodcastContextAction);
  *(void *)(v1 + 560) = v120;
  *(void *)(v1 + 568) = v122;
  sub_100056D54(v188, (uint64_t)&v195);
  type metadata accessor for RemoveFromLibraryEpisodeContextAction();
  swift_allocObject();
  uint64_t v123 = sub_100343000(&v195);
  uint64_t v124 = sub_1003E3DD0((unint64_t *)&unk_100608C60, 255, (void (*)(uint64_t))type metadata accessor for RemoveFromLibraryEpisodeContextAction);
  *(void *)(v1 + 576) = v123;
  *(void *)(v1 + 584) = v124;
  sub_100056D54(v188, (uint64_t)&v195);
  type metadata accessor for RemoveFromUpNextEpisodeContextAction();
  swift_allocObject();
  uint64_t v125 = sub_1002B104C(&v195);
  uint64_t v126 = sub_1003E3DD0((unint64_t *)&unk_100608B30, 255, (void (*)(uint64_t))type metadata accessor for RemoveFromUpNextEpisodeContextAction);
  *(void *)(v1 + 592) = v125;
  *(void *)(v1 + 600) = v126;
  sub_100056D54(v188, (uint64_t)&v195);
  type metadata accessor for RemoveFromStationContextAction();
  uint64_t v127 = (void *)swift_allocObject();
  v127[10] = 0;
  v127[11] = 0;
  v127[9] = v187;
  v127[2] = 0;
  v127[3] = v182;
  sub_100042FC4(&v195, (uint64_t)(v127 + 4));
  uint64_t v128 = sub_1003E3DD0(&qword_1005FAAA8, 255, (void (*)(uint64_t))type metadata accessor for RemoveFromStationContextAction);
  *(void *)(v1 + 608) = v127;
  uint64_t v189 = (void *)v1;
  *(void *)(v1 + 616) = v128;
  uint64_t v129 = type metadata accessor for Podcasts();
  uint64_t v196 = v129;
  uint64_t v197 = sub_1003E3DD0((unint64_t *)&qword_1005F79D0, 255, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  char v130 = sub_10004A244((uint64_t *)&v195);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v129 - 8) + 104))(v130, enum case for Podcasts.ponderosa(_:), v129);
  swift_retain();
  swift_retain();
  LOBYTE(v129) = isFeatureEnabled(_:)();
  sub_10004D2D8((uint64_t)&v195);
  if (v129)
  {
    type metadata accessor for FavoriteContextAction();
    uint64_t v131 = swift_allocObject();
    *(_OWORD *)(v131 + 16) = xmmword_10047A550;
    *(void *)(v131 + 32) = 0xE400000000000000;
    ((void (*)(uint64_t, void, uint64_t))v14)(v131 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_metricsLabel, enum case for MetricsLabel.favorite(_:), v13);
    uint64_t v132 = v131 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_contextActionType;
    v193(v131 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_contextActionType, enum case for ContextActionType.favorite(_:), v190);
    v191(v132, 0, 1, v190);
    uint64_t v133 = v131 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID;
    *(void *)uint64_t v133 = 0;
    *(unsigned char *)(v133 + 8) = 1;
    *(unsigned char *)(v131 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestState) = 4;
    *(void *)(v131 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration) = 0;
    *(unsigned char *)(v131 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestContentKind) = 5;
    type metadata accessor for InterestRepository();
    swift_retain();
    BaseObjectGraph.inject<A>(_:)();
    *(void *)(v131 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestRepository) = v195;
    type metadata accessor for InterestStateController();
    BaseObjectGraph.inject<A>(_:)();
    swift_release();
    *(void *)(v131 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestStateController) = v195;
    unint64_t v135 = *(void *)(v1 + 16);
    unint64_t v134 = *(void *)(v1 + 24);
    if (v135 >= v134 >> 1) {
      uint64_t v189 = sub_1002F0008((void *)(v134 > 1), v135 + 1, 1, (void *)v1);
    }
    uint64_t v136 = sub_1003E3DD0((unint64_t *)&unk_100608C70, 255, (void (*)(uint64_t))type metadata accessor for FavoriteContextAction);
    v189[2] = v135 + 1;
    uint64_t v137 = &v189[2 * v135];
    v137[4] = v131;
    v137[5] = v136;
    type metadata accessor for UndoFavoriteContextAction();
    uint64_t v138 = swift_allocObject();
    *(_OWORD *)(v138 + 16) = xmmword_10047A560;
    *(void *)(v138 + 32) = 0xEA00000000006873;
    ((void (*)(uint64_t, void, uint64_t))v14)(v138 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_metricsLabel, enum case for MetricsLabel.undoFavorite(_:), v13);
    uint64_t v139 = v138 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_contextActionType;
    v193(v138 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_contextActionType, enum case for ContextActionType.undoFavorite(_:), v190);
    v191(v139, 0, 1, v190);
    uint64_t v140 = v138 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_adamID;
    *(void *)uint64_t v140 = 0;
    *(unsigned char *)(v140 + 8) = 1;
    *(unsigned char *)(v138 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_interestState) = 4;
    *(void *)(v138 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration) = 0;
    swift_retain();
    BaseObjectGraph.inject<A>(_:)();
    *(void *)(v138 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_interestRepository) = v195;
    BaseObjectGraph.inject<A>(_:)();
    swift_release();
    *(void *)(v138 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_interestStateController) = v195;
    unint64_t v142 = v189[2];
    unint64_t v141 = v189[3];
    if (v142 >= v141 >> 1) {
      uint64_t v189 = sub_1002F0008((void *)(v141 > 1), v142 + 1, 1, v189);
    }
    uint64_t v143 = sub_1003E3DD0(&qword_1006071C0, 255, (void (*)(uint64_t))type metadata accessor for UndoFavoriteContextAction);
    v189[2] = v142 + 1;
    objc_super v144 = &v189[2 * v142];
    v144[4] = v138;
    v144[5] = v143;
    type metadata accessor for ManageFavoriteCategoriesContextAction();
    uint64_t v145 = swift_allocObject();
    *(_OWORD *)(v145 + 16) = xmmword_10047A570;
    *(void *)(v145 + 32) = 0xEB0000000074656CLL;
    ((void (*)(uint64_t, void, uint64_t))v14)(v145 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_metricsLabel, enum case for MetricsLabel.favoriteCategories(_:), v13);
    uint64_t v146 = v145 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_contextActionType;
    v193(v145 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_contextActionType, enum case for ContextActionType.favoriteCategories(_:), v190);
    v191(v146, 0, 1, v190);
    *(void *)(v145 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration) = 0;
    unint64_t v148 = v189[2];
    unint64_t v147 = v189[3];
    if (v148 >= v147 >> 1) {
      uint64_t v189 = sub_1002F0008((void *)(v147 > 1), v148 + 1, 1, v189);
    }
    uint64_t v149 = sub_1003E3DD0(&qword_100608C80, 255, (void (*)(uint64_t))type metadata accessor for ManageFavoriteCategoriesContextAction);
    v189[2] = v148 + 1;
    objc_super v150 = &v189[2 * v148];
    v150[4] = v145;
    v150[5] = v149;
    uint64_t v196 = v176;
    uint64_t v197 = sub_1003E3DD0(&qword_1005FF7F0, v151, (void (*)(uint64_t))type metadata accessor for PodcastsContextActionProvider);
    *(void *)&long long v195 = v185;
    type metadata accessor for ShareCategoryContextAction();
    uint64_t v152 = swift_allocObject();
    uint64_t v153 = v152 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_categoryAdamID;
    *(void *)uint64_t v153 = 0;
    *(unsigned char *)(v153 + 8) = 1;
    sub_100054B78((uint64_t *)&unk_1005FEBE0);
    swift_retain();
    swift_retain();
    BaseObjectGraph.inject<A>(_:)();
    *(void *)(v152 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_managedContextProvider) = *(void *)&v194[0];
    sub_100056D54((uint64_t)&v195, (uint64_t)v194);
    *(void *)(v152 + 16) = 0;
    v183(v152 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link, 1, 1, v184);
    uint64_t v154 = (void *)(v152 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle);
    *uint64_t v154 = 0;
    v154[1] = 0;
    *(void *)(v152 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_attributes) = 0;
    double v155 = (void *)(v152 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_systemImageName);
    *double v155 = 0xD000000000000013;
    v155[1] = 0x80000001004D9820;
    ((void (*)(uint64_t, void, uint64_t))v14)(v152 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_metricsLabel, enum case for MetricsLabel.shareOther(_:), v13);
    uint64_t v156 = v152 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_contextActionType;
    v193(v152 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_contextActionType, enum case for ContextActionType.shareSheetURL(_:), v190);
    v191(v156, 0, 1, v190);
    sub_100042FC4(v194, v152 + 24);
    swift_release();
    sub_10004D2D8((uint64_t)&v195);
    unint64_t v158 = v189[2];
    unint64_t v157 = v189[3];
    if (v158 >= v157 >> 1) {
      uint64_t v189 = sub_1002F0008((void *)(v157 > 1), v158 + 1, 1, v189);
    }
    uint64_t v159 = sub_1003E3DD0(&qword_100608C88, 255, (void (*)(uint64_t))type metadata accessor for ShareCategoryContextAction);
    v189[2] = v158 + 1;
    long long v160 = &v189[2 * v158];
    v160[4] = v152;
    v160[5] = v159;
    type metadata accessor for SuggestLessContextAction();
    uint64_t v161 = swift_allocObject();
    *(_OWORD *)(v161 + 16) = xmmword_10047A580;
    *(void *)(v161 + 32) = 0xEF6E776F6473626DLL;
    ((void (*)(uint64_t, void, uint64_t))v14)(v161 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_metricsLabel, enum case for MetricsLabel.suggestLess(_:), v13);
    uint64_t v162 = v161 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_contextActionType;
    v193(v161 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_contextActionType, enum case for ContextActionType.suggestLess(_:), v190);
    v191(v162, 0, 1, v190);
    uint64_t v163 = v161 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_adamID;
    *(void *)uint64_t v163 = 0;
    *(unsigned char *)(v163 + 8) = 1;
    *(unsigned char *)(v161 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestState) = 4;
    *(void *)(v161 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration) = 0;
    swift_retain();
    BaseObjectGraph.inject<A>(_:)();
    *(void *)(v161 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestRepository) = v195;
    BaseObjectGraph.inject<A>(_:)();
    swift_release();
    *(void *)(v161 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestStateController) = v195;
    unint64_t v165 = v189[2];
    unint64_t v164 = v189[3];
    if (v165 >= v164 >> 1) {
      uint64_t v189 = sub_1002F0008((void *)(v164 > 1), v165 + 1, 1, v189);
    }
    uint64_t v166 = sub_1003E3DD0(&qword_100608C90, 255, (void (*)(uint64_t))type metadata accessor for SuggestLessContextAction);
    v189[2] = v165 + 1;
    long long v167 = &v189[2 * v165];
    v167[4] = v161;
    v167[5] = v166;
    type metadata accessor for UndoSuggestLessContextAction();
    uint64_t v168 = swift_allocObject();
    *(_OWORD *)(v168 + 16) = xmmword_10047A580;
    *(void *)(v168 + 32) = 0xEF6E776F6473626DLL;
    ((void (*)(uint64_t, void, uint64_t))v14)(v168 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_metricsLabel, enum case for MetricsLabel.undoSuggestLess(_:), v13);
    uint64_t v169 = v168 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_contextActionType;
    v193(v168 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_contextActionType, enum case for ContextActionType.undoSuggestLess(_:), v190);
    v191(v169, 0, 1, v190);
    uint64_t v170 = v168 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID;
    *(void *)uint64_t v170 = 0;
    *(unsigned char *)(v170 + 8) = 1;
    *(unsigned char *)(v168 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestState) = 4;
    *(void *)(v168 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration) = 0;
    swift_retain();
    BaseObjectGraph.inject<A>(_:)();
    *(void *)(v168 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestRepository) = v195;
    BaseObjectGraph.inject<A>(_:)();
    swift_release();
    *(void *)(v168 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestStateController) = v195;
    unint64_t v172 = v189[2];
    unint64_t v171 = v189[3];
    if (v172 >= v171 >> 1) {
      uint64_t v189 = sub_1002F0008((void *)(v171 > 1), v172 + 1, 1, v189);
    }
    uint64_t v173 = sub_1003E3DD0(&qword_100604FF0, 255, (void (*)(uint64_t))type metadata accessor for UndoSuggestLessContextAction);
    v189[2] = v172 + 1;
    long long v174 = &v189[2 * v172];
    v174[4] = v168;
    v174[5] = v173;
  }
  return v189;
}

uint64_t sub_1003E27CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100054B78(&qword_100608B78);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10046E5C0;
  uint64_t v40 = v2;
  uint64_t v5 = sub_1003E3DD0(&qword_1005FF7F0, v4, (void (*)(uint64_t))type metadata accessor for PodcastsContextActionProvider);
  uint64_t v41 = v5;
  *(void *)&long long v39 = v0;
  type metadata accessor for ShareEpisodeContextAction();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 72) = 0;
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 80) = 1;
  *(void *)(v6 + 88) = 0;
  *(unsigned char *)(v6 + 96) = 1;
  uint64_t v7 = v6 + OBJC_IVAR____TtC8Podcasts25ShareEpisodeContextAction_metricsLabel;
  uint64_t v8 = enum case for MetricsLabel.share(_:);
  uint64_t v9 = type metadata accessor for MetricsLabel();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);
  v10(v7, v8, v9);
  sub_100042FC4(&v39, v6 + 32);
  uint64_t v11 = sub_1003E3DD0((unint64_t *)&unk_100608B80, 255, (void (*)(uint64_t))type metadata accessor for ShareEpisodeContextAction);
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = v11;
  uint64_t v40 = v2;
  uint64_t v41 = v5;
  uint64_t v31 = v2;
  *(void *)&long long v39 = v1;
  type metadata accessor for SharePodcastContextAction();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  uint64_t v35 = v9;
  v10(v12 + OBJC_IVAR____TtC8Podcasts25SharePodcastContextAction_metricsLabel, v8, v9);
  sub_100042FC4(&v39, v12 + 32);
  uint64_t v13 = sub_1003E3DD0(&qword_1005FDD78, 255, (void (*)(uint64_t))type metadata accessor for SharePodcastContextAction);
  *(void *)(v3 + 48) = v12;
  *(void *)(v3 + 56) = v13;
  uint64_t v40 = v2;
  uint64_t v41 = v5;
  *(void *)&long long v39 = v1;
  type metadata accessor for ShareOtherContextAction(0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  uint64_t v15 = v14 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
  uint64_t v37 = type metadata accessor for URL();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
  v36(v15, 1, 1, v37);
  uint64_t v16 = (void *)(v14 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle);
  *uint64_t v16 = 0;
  v16[1] = 0;
  *(void *)(v14 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_attributes) = 0;
  uint64_t v17 = (void *)(v14 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_systemImageName);
  *uint64_t v17 = 0xD000000000000013;
  v17[1] = 0x80000001004D9820;
  unsigned int v34 = enum case for MetricsLabel.shareOther(_:);
  ((void (*)(uint64_t))v10)(v14 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_metricsLabel);
  uint64_t v18 = v14 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_contextActionType;
  uint64_t v19 = enum case for ContextActionType.shareSheetURL(_:);
  unsigned int v33 = enum case for ContextActionType.shareSheetURL(_:);
  uint64_t v20 = type metadata accessor for ContextActionType();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104);
  v32(v18, v19, v20);
  uint64_t v22 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56);
  v22(v18, 0, 1, v20);
  sub_100042FC4(&v39, v14 + 24);
  uint64_t v23 = sub_1003E3DD0(&qword_100605DD0, 255, (void (*)(uint64_t))type metadata accessor for ShareOtherContextAction);
  *(void *)(v3 + 64) = v14;
  *(void *)(v3 + 72) = v23;
  uint64_t v40 = v31;
  uint64_t v41 = v5;
  *(void *)&long long v39 = v1;
  type metadata accessor for ShareCategoryContextAction();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v24 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_categoryAdamID;
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  sub_100054B78((uint64_t *)&unk_1005FEBE0);
  swift_retain_n();
  swift_retain();
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(v24 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_managedContextProvider) = *(void *)&v38[0];
  sub_100056D54((uint64_t)&v39, (uint64_t)v38);
  *(void *)(v24 + 16) = 0;
  v36(v24 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link, 1, 1, v37);
  uint64_t v26 = (void *)(v24 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle);
  *uint64_t v26 = 0;
  v26[1] = 0;
  *(void *)(v24 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_attributes) = 0;
  uint64_t v27 = (void *)(v24 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_systemImageName);
  void *v27 = 0xD000000000000013;
  v27[1] = 0x80000001004D9820;
  v10(v24 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_metricsLabel, v34, v35);
  uint64_t v28 = v24 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_contextActionType;
  v32(v24 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_contextActionType, v33, v20);
  v22(v28, 0, 1, v20);
  sub_100042FC4(v38, v24 + 24);
  swift_release();
  sub_10004D2D8((uint64_t)&v39);
  uint64_t v29 = sub_1003E3DD0((unint64_t *)&unk_100608B90, 255, (void (*)(uint64_t))type metadata accessor for ShareCategoryContextAction);
  *(void *)(v3 + 80) = v24;
  *(void *)(v3 + 88) = v29;
  return v3;
}

uint64_t sub_1003E2DD0()
{
  sub_100054B78((uint64_t *)&unk_100608B20);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10046E5C0;
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = v0 + 32;
  sub_100056D54(v0 + 32, (uint64_t)v19);
  uint64_t v4 = v0 + 184;
  sub_100056D54(v0 + 184, (uint64_t)v18);
  uint64_t v5 = *(void *)(v0 + 224);
  type metadata accessor for MarkEpisodeContextAction();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  *(void *)(v6 + 136) = 1;
  *(unsigned char *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = v2;
  sub_100042FC4(v19, v6 + 48);
  sub_100042FC4(v18, v6 + 88);
  *(void *)(v6 + 128) = v5;
  uint64_t v7 = sub_1003E3DD0((unint64_t *)&unk_100608B60, 255, (void (*)(uint64_t))type metadata accessor for MarkEpisodeContextAction);
  *(void *)(v1 + 32) = v6;
  *(void *)(v1 + 40) = v7;
  sub_100056D54(v3, (uint64_t)v19);
  sub_100056D54(v4, (uint64_t)v18);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 136) = 1;
  *(unsigned char *)(v8 + 32) = 1;
  *(void *)(v8 + 40) = v2;
  sub_100042FC4(v19, v8 + 48);
  sub_100042FC4(v18, v8 + 88);
  *(void *)(v8 + 128) = v5;
  *(void *)(v1 + 48) = v8;
  *(void *)(v1 + 56) = v7;
  type metadata accessor for PlayNextEpisodeContextAction();
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[3] = 0;
  v9[4] = 0;
  uint64_t v10 = (char *)v9 + OBJC_IVAR____TtC8Podcasts28PlayNextEpisodeContextAction_metricsLabel;
  uint64_t v11 = enum case for MetricsLabel.playEpisodeNext(_:);
  uint64_t v12 = type metadata accessor for MetricsLabel();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);
  v13(v10, v11, v12);
  v9[2] = v5;
  uint64_t v14 = sub_1003E3DD0(&qword_1005F9198, 255, (void (*)(uint64_t))type metadata accessor for PlayNextEpisodeContextAction);
  *(void *)(v1 + 64) = v9;
  *(void *)(v1 + 72) = v14;
  type metadata accessor for AddToQueueEpisodeContextAction();
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 3) = 0;
  *((void *)v15 + 4) = 0;
  v13(&v15[OBJC_IVAR____TtC8Podcasts30AddToQueueEpisodeContextAction_metricsLabel], enum case for MetricsLabel.addToQueueEpisode(_:), v12);
  *((void *)v15 + 2) = v5;
  uint64_t v16 = sub_1003E3DD0(&qword_100608B70, 255, (void (*)(uint64_t))type metadata accessor for AddToQueueEpisodeContextAction);
  *(void *)(v1 + 80) = v15;
  *(void *)(v1 + 88) = v16;
  swift_retain_n();
  swift_retain_n();
  return v1;
}

uint64_t sub_1003E30A8()
{
  uint64_t v1 = v0;
  sub_100054B78((uint64_t *)&unk_100608B20);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10046DD10;
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = v0 + 32;
  sub_100056D54(v0 + 32, (uint64_t)v38);
  type metadata accessor for RemoveFromStationContextAction();
  uint64_t v6 = (void *)swift_allocObject();
  v6[10] = 0;
  v6[11] = 0;
  v6[9] = v3;
  v6[2] = 0;
  v6[3] = v4;
  sub_100042FC4(v38, (uint64_t)(v6 + 4));
  uint64_t v7 = sub_1003E3DD0(&qword_1005FAAA8, 255, (void (*)(uint64_t))type metadata accessor for RemoveFromStationContextAction);
  *(void *)(v2 + 32) = v6;
  *(void *)(v2 + 40) = v7;
  sub_100056D54(v5, (uint64_t)v38);
  type metadata accessor for RemoveFromUpNextEpisodeContextAction();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v8 = sub_1002B104C(v38);
  uint64_t v9 = sub_1003E3DD0((unint64_t *)&unk_100608B30, 255, (void (*)(uint64_t))type metadata accessor for RemoveFromUpNextEpisodeContextAction);
  *(void *)(v2 + 48) = v8;
  *(void *)(v2 + 56) = v9;
  sub_100056D54(v5, (uint64_t)v38);
  sub_100056D54(v1 + 184, (uint64_t)v37);
  type metadata accessor for DownloadEpisodeContextAction();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 128) = 0;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  uint64_t v11 = v10 + OBJC_IVAR____TtC8Podcasts28DownloadEpisodeContextAction_metricsLabel;
  uint64_t v12 = enum case for MetricsLabel.downloadEpisode(_:);
  uint64_t v13 = type metadata accessor for MetricsLabel();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  v14(v11, v12, v13);
  sub_100042FC4(v38, v10 + 40);
  *(void *)(v10 + 80) = v4;
  sub_1003E3D68((uint64_t)v37, v10 + 88);
  uint64_t v15 = sub_1003E3DD0((unint64_t *)&unk_100608B40, 255, (void (*)(uint64_t))type metadata accessor for DownloadEpisodeContextAction);
  *(void *)(v2 + 64) = v10;
  *(void *)(v2 + 72) = v15;
  sub_100056D54(v5, (uint64_t)v38);
  type metadata accessor for RemoveDownloadContextAction();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 72) = 0u;
  *(_OWORD *)(v16 + 88) = 0u;
  v14(v16 + OBJC_IVAR____TtC8Podcasts27RemoveDownloadContextAction_metricsLabel, enum case for MetricsLabel.removeDownload(_:), v13);
  uint64_t v36 = v14;
  *(void *)(v16 + 64) = v3;
  *(void *)(v16 + 16) = v4;
  sub_100042FC4(v38, v16 + 24);
  uint64_t v17 = sub_1003E3DD0(&qword_1006000B0, 255, (void (*)(uint64_t))type metadata accessor for RemoveDownloadContextAction);
  *(void *)(v2 + 80) = v16;
  *(void *)(v2 + 88) = v17;
  uint64_t v18 = *(void *)(v1 + 160);
  type metadata accessor for BookmarkEpisodeContextAction();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 24) = 0;
  *(void *)(v19 + 32) = 0;
  *(void *)(v19 + 16) = 0;
  *(_OWORD *)(v19 + 40) = xmmword_10046E8E0;
  v14(v19 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_metricsLabel, enum case for MetricsLabel.bookmarkEpisode(_:), v13);
  uint64_t v20 = v19 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_contextActionType;
  uint64_t v21 = enum case for ContextActionType.bookmarkEpisode(_:);
  uint64_t v22 = type metadata accessor for ContextActionType();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104);
  v35(v20, v21, v22);
  uint64_t v24 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56);
  v24(v20, 0, 1, v22);
  *(void *)(v19 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_bookmarksController) = v18;
  uint64_t v25 = sub_1003E3DD0((unint64_t *)&unk_100608B50, 255, (void (*)(uint64_t))type metadata accessor for BookmarkEpisodeContextAction);
  *(void *)(v2 + 96) = v19;
  *(void *)(v2 + 104) = v25;
  type metadata accessor for RemoveEpisodeFromBookmarksContextAction();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = 0;
  *(void *)(v26 + 24) = 0;
  uint64_t v27 = self;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  id v28 = [v27 mainBundle];
  v39._object = (void *)0xEE0065646F736970;
  v29._uint64_t countAndFlagsBits = 0x455F455641534E55;
  v29._object = (void *)0xEE0045444F534950;
  v30._uint64_t countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v39._uint64_t countAndFlagsBits = 0x4520657661736E55;
  Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v39);

  *(Swift::String *)(v26 + 32) = v31;
  *(_OWORD *)(v26 + 48) = xmmword_10047A530;
  *(void *)(v26 + 64) = 0xEE006873616C732ELL;
  v36(v26 + OBJC_IVAR____TtC8Podcasts39RemoveEpisodeFromBookmarksContextAction_metricsLabel, enum case for MetricsLabel.removeEpisodeFromBookmarks(_:), v13);
  uint64_t v32 = v26 + OBJC_IVAR____TtC8Podcasts39RemoveEpisodeFromBookmarksContextAction_contextActionType;
  v35(v26 + OBJC_IVAR____TtC8Podcasts39RemoveEpisodeFromBookmarksContextAction_contextActionType, enum case for ContextActionType.removeEpisodeFromBookmarks(_:), v22);
  v24(v32, 0, 1, v22);
  *(void *)(v26 + OBJC_IVAR____TtC8Podcasts39RemoveEpisodeFromBookmarksContextAction_bookmarksController) = v18;
  uint64_t v33 = sub_1003E3DD0(&qword_1005FFC20, 255, (void (*)(uint64_t))type metadata accessor for RemoveEpisodeFromBookmarksContextAction);
  *(void *)(v2 + 112) = v26;
  *(void *)(v2 + 120) = v33;
  return v2;
}

uint64_t sub_1003E36D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for PerformableContextActions();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for PerformableContextActions.share(_:))
  {
    uint64_t v24 = v5;
    uint64_t v25 = sub_1003E3DD0(&qword_1005FF7F0, v11, (void (*)(uint64_t))type metadata accessor for PodcastsContextActionProvider);
    *(void *)&long long v23 = v2;
    type metadata accessor for ShareEpisodeContextAction();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 72) = 0;
    *(void *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = 0;
    *(unsigned char *)(v12 + 80) = 1;
    *(void *)(v12 + 88) = 0;
    *(unsigned char *)(v12 + 96) = 1;
    uint64_t v13 = v12 + OBJC_IVAR____TtC8Podcasts25ShareEpisodeContextAction_metricsLabel;
    uint64_t v14 = enum case for MetricsLabel.share(_:);
    uint64_t v15 = type metadata accessor for MetricsLabel();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
    sub_100042FC4(&v23, v12 + 32);
    swift_retain();
    sub_1002044D8(a2);
    sub_1003B13CC();
    return swift_release();
  }
  else if (v10 == enum case for PerformableContextActions.presentPodcast(_:))
  {
    sub_100056D54((uint64_t)(v2 + 15), (uint64_t)&v23);
    type metadata accessor for EpisodePresentPodcastContextAction();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = 0;
    *(void *)(v17 + 24) = 0;
    uint64_t v18 = v17 + OBJC_IVAR____TtC8Podcasts34EpisodePresentPodcastContextAction_metricsLabel;
    uint64_t v19 = enum case for MetricsLabel.select(_:);
    uint64_t v20 = type metadata accessor for MetricsLabel();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104))(v18, v19, v20);
    sub_100042FC4(&v23, v17 + 32);
    sub_1002041C8(a2);
    sub_10041C21C();
    swift_setDeallocating();
    swift_release();
    swift_release();
    sub_10004D2D8(v17 + 32);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v17 + OBJC_IVAR____TtC8Podcasts34EpisodePresentPodcastContextAction_metricsLabel, v20);
    return swift_deallocClassInstance();
  }
  else
  {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1003E3A54()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 32);
  sub_10004D2D8(v0 + 72);
  swift_release();
  sub_10004D2D8(v0 + 120);
  swift_release();
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 184);
  swift_release();
  sub_1000536BC(*(void *)(v0 + 232));
  return v0;
}

uint64_t sub_1003E3ACC()
{
  sub_1003E3A54();

  return swift_deallocClassInstance();
}

void *sub_1003E3B00()
{
  return sub_1003DFCF4();
}

uint64_t sub_1003E3B24()
{
  return sub_1003E27CC();
}

uint64_t sub_1003E3B48()
{
  return sub_1003E2DD0();
}

uint64_t sub_1003E3B6C()
{
  return sub_1003E30A8();
}

uint64_t sub_1003E3B90()
{
  sub_100054B78(&qword_100608B10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10046D010;
  uint64_t v1 = type metadata accessor for ContextMenuLockupPreviewProvider();
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = sub_1003E3DD0(&qword_100608B18, 255, (void (*)(uint64_t))type metadata accessor for ContextMenuLockupPreviewProvider);
  *(void *)(v0 + 32) = v2;
  return v0;
}

uint64_t sub_1003E3C40(uint64_t a1, uint64_t a2)
{
  return sub_1003E36D0(a1, a2);
}

uint64_t sub_1003E3C64()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 232);
  sub_10004ACDC(v2);
  return v2;
}

uint64_t sub_1003E3CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 232);
  *(void *)(v5 + 232) = a1;
  *(void *)(v5 + 240) = a2;
  return sub_1000536BC(v6);
}

uint64_t (*sub_1003E3D10())()
{
  return j__swift_endAccess;
}

uint64_t sub_1003E3D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005FB890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E3DD0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchShowEntitiesIntentImplementation()
{
  return &type metadata for FetchShowEntitiesIntentImplementation;
}

void *sub_1003E3E28(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1001BA94C(0, v2, 0);
    uint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v5 = v6;
      uint64_t v9 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_1001BA94C(v7 > 1, v8 + 1, 1);
        uint64_t result = v9;
      }
      result[2] = v8 + 1;
      result[v8 + 4] = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1003E3EE8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_100608CA8 + dword_100608CA8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1001D3FD4;
  return v6(a2);
}

uint64_t sub_1003E3F94(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = type metadata accessor for ShowEntity.ShowEntityQuery();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return _swift_task_switch(sub_1003E4054, 0, 0);
}

uint64_t sub_1003E4054()
{
  ShowEntity.ShowEntityQuery.init()();
  FetchShowEntitiesIntent.contentIDs.getter();
  uint64_t v1 = Array<A>.group()();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  v0[7] = v1;
  v0[8] = v3;
  v0[9] = v5;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1003E3E28(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_10040493C((uint64_t)v7);
  v0[10] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1000505EC(v9);
  v0[11] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[12] = v11;
  uint64_t v12 = sub_10005E420((unint64_t *)&unk_100608CB0, (void (*)(uint64_t))&type metadata accessor for ShowEntity.ShowEntityQuery);
  *uint64_t v11 = v0;
  v11[1] = sub_1003E41D8;
  uint64_t v13 = v0[4];
  return LibraryEntityQuery.findAndPrepareEntities(for:adamIDs:uuids:)(v3, v8, v10, v13, v12);
}

uint64_t sub_1003E41D8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1003E43EC;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_1003E4364;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003E4364()
{
  uint64_t v1 = v0[14];
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1003E43EC()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void *sub_1003E4498(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = _swiftEmptyArrayStorage;
  sub_1001BA678(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_10004D328(i, (uint64_t)v10);
      sub_100054B78(&qword_1005F7670);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_100042FC4(v8, (uint64_t)v11);
      sub_100042FC4(v11, (uint64_t)v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA678(0, v3[2] + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_1001BA678(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      v3[2] = v6 + 1;
      sub_100042FC4(v8, (uint64_t)&v3[5 * v6 + 4]);
      if (!--v2) {
        return v3;
      }
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    swift_release();
    sub_100054B1C((uint64_t)v8, &qword_100609258);
    return 0;
  }
  return v3;
}

void *sub_1003E4610(unint64_t a1)
{
  return sub_10003CCDC(a1);
}

void *sub_1003E461C(uint64_t a1)
{
  return sub_1003E4AA0(a1, (void (*)(void))&type metadata accessor for LibraryEpisodeLockup);
}

void *sub_1003E4634(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v4 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        self;
        uint64_t v7 = swift_dynamicCastObjCClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        swift_unknownObjectRetain();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v6 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1003E4820(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    sub_1001BA754(0, v3 & ~(v3 >> 63), 0);
    uint64_t v4 = _swiftEmptyArrayStorage;
    if (v2) {
      break;
    }
    unint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return v4;
    }
LABEL_7:
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        uint64_t v8 = v6;
        swift_getObjectType();
        uint64_t v9 = swift_conformsToProtocol2();
        if (v9) {
          uint64_t v10 = v9;
        }
        else {
          uint64_t v10 = 0;
        }
        if (v9) {
          uint64_t v11 = v8;
        }
        else {
          uint64_t v11 = 0;
        }
        if (!v11)
        {
          swift_release();
          swift_unknownObjectRelease();
          return 0;
        }
        unint64_t v13 = _swiftEmptyArrayStorage[2];
        unint64_t v12 = _swiftEmptyArrayStorage[3];
        if (v13 >= v12 >> 1) {
          sub_1001BA754(v12 > 1, v13 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v13 + 1;
        uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
        v14[4] = v11;
        v14[5] = v10;
        if (v7 == v2) {
          return v4;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v15 = 0;
      unint64_t v25 = v1 + 32;
      while (1)
      {
        uint64_t v16 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        uint64_t v17 = *(void *)(v25 + 8 * v15);
        swift_getObjectType();
        uint64_t v18 = swift_conformsToProtocol2();
        if (v18) {
          uint64_t v19 = v18;
        }
        else {
          uint64_t v19 = 0;
        }
        if (v18) {
          uint64_t v20 = v17;
        }
        else {
          uint64_t v20 = 0;
        }
        if (!v20)
        {
          swift_release();
          return 0;
        }
        unint64_t v22 = _swiftEmptyArrayStorage[2];
        unint64_t v21 = _swiftEmptyArrayStorage[3];
        unint64_t v1 = v22 + 1;
        swift_unknownObjectRetain();
        if (v22 >= v21 >> 1) {
          sub_1001BA754(v21 > 1, v22 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v1;
        long long v23 = &_swiftEmptyArrayStorage[2 * v22];
        v23[4] = v20;
        void v23[5] = v19;
        ++v15;
        if (v16 == v2) {
          return v4;
        }
      }
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_7;
  }
  return v4;
}

void *sub_1003E4A70(unint64_t a1)
{
  return sub_1003E5170(a1, (void (*)(void))&type metadata accessor for ServerPodcastEpisode);
}

void *sub_1003E4A88(uint64_t a1)
{
  return sub_1003E4AA0(a1, (void (*)(void))&type metadata accessor for ShowHeader);
}

void *sub_1003E4AA0(uint64_t a1, void (*a2)(void))
{
  uint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v4) {
    return v8;
  }
  for (uint64_t i = a1 + 32; ; i += 40)
  {
    sub_100056D54(i, (uint64_t)v7);
    sub_100054B78(&qword_1005F8430);
    a2(0);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v4) {
      return v8;
    }
  }
  swift_release();
  swift_release();
  return 0;
}

void *sub_1003E4BB4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  sub_1001BA6A8(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_10004D328(i, (uint64_t)v9);
      sub_100054B78(&qword_1005F8378);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA6A8(0, v3[2] + 1, 1);
        uint64_t v3 = v10;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_1001BA6A8(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v10;
      }
      v3[2] = v6 + 1;
      v3[v6 + 4] = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void *sub_1003E4CFC(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        type metadata accessor for MTInterest();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v4 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v8 = *(void **)(v6 + 8 * v5);
        type metadata accessor for MTInterest();
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        ++v5;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1003E4EDC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1001BA6A8(0, v3 & ~(v3 >> 63), 0);
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v6) {
      return v4;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return v4;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
    swift_unknownObjectRelease();
  }
  else
  {
    id v7 = *(id *)(a1 + 32);
    static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  swift_release();
  return 0;
}

void *sub_1003E5128(uint64_t a1)
{
  return sub_1003E4AA0(a1, (void (*)(void))&type metadata accessor for Showcase);
}

void *sub_1003E5140(uint64_t a1)
{
  return sub_1003E4AA0(a1, (void (*)(void))&type metadata accessor for LegacyLockup);
}

void *sub_1003E5158(unint64_t a1)
{
  return sub_1003E5170(a1, (void (*)(void))&type metadata accessor for ServerPodcast);
}

void *sub_1003E5170(unint64_t a1, void (*a2)(void))
{
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v6 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        a2(0);
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v6 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v8 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        a2(0);
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v3 = v9;
        swift_unknownObjectRetain();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v8 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1003E5360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100054B1C(a1, (uint64_t *)&unk_100603370);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_100054B78(&qword_100606428);
  return swift_task_create();
}

uint64_t sub_1003E54E8()
{
  uint64_t v1 = type metadata accessor for ShowOffer();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EpisodeOffer();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (EpisodeOffer.contentRating.getter() == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  }
  else
  {
    uint64_t v10 = ContentRating.rawValue.getter();
    uint64_t v12 = v11;
    if (v10 == ContentRating.rawValue.getter() && v12 == v13)
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
      goto LABEL_17;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
    if (v20) {
      goto LABEL_17;
    }
  }
  EpisodeOffer.showOffer.getter();
  if (ShowOffer.contentRating.getter() != 2)
  {
    uint64_t v14 = ContentRating.rawValue.getter();
    uint64_t v16 = v15;
    if (v14 != ContentRating.rawValue.getter() || v16 != v17)
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      char v9 = 0;
      if ((v19 & 1) == 0) {
        return v9 & 1;
      }
      goto LABEL_18;
    }
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_18:
    type metadata accessor for RestrictionsController();
    char v9 = static RestrictionsController.isExplicitContentAllowed.getter() ^ 1;
    return v9 & 1;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v9 = 0;
  return v9 & 1;
}

uint64_t sub_1003E5834()
{
  uint64_t v0 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter();
  uint64_t result = DeviceCapacityMonitor.CapacityLevel.rawValue.getter();
  if (v0 != result)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100041A98((void *)(result + 144), *(void *)(result + 168));
      dispatch thunk of PodcastsStateCoordinatorProtocol.cancelAllDownloads(userInitiated:from:)();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1003E58D4()
{
  uint64_t v1 = v0;
  if ((*(unsigned char *)(v0 + 272) & 1) == 0)
  {
    Swift::Int64 v2 = *(void *)(v0 + 264);
    type metadata accessor for DeviceCapacityMonitor();
    uint64_t v3 = (void *)static DeviceCapacityMonitor.shared.getter();
    DeviceCapacityMonitor.removeCapacityChangeObserver(with:)(v2);
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_10004D2D8(v1 + 144);
  sub_10004D2D8(v1 + 184);
  sub_10004D2D8(v1 + 224);
  swift_release();
  sub_10004D2D8(v1 + 288);
  swift_release();
  return v1;
}

uint64_t sub_1003E59A4()
{
  sub_1003E58D4();

  return swift_deallocClassInstance();
}

uint64_t sub_1003E59D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_1003E59F8, 0, 0);
}

uint64_t sub_1003E59F8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 328);
  *(void *)(v0 + 32) = v1;
  if (v1)
  {
    swift_retain();
    Swift::Int64 v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v2;
    *Swift::Int64 v2 = v0;
    v2[1] = sub_1003E5AE0;
    return PlaybackController.pause()();
  }
  else
  {
    **(unsigned char **)(v0 + 16) = 1;
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1003E5AE0()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_release();
    Swift::Int64 v2 = sub_1003FDC48;
  }
  else
  {
    swift_release();
    Swift::Int64 v2 = sub_1003E5C28;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003E5C28()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 48) != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E5C50()
{
  return sub_1003E6D44();
}

uint64_t sub_1003E5C70(void *a1)
{
  if (!swift_weakLoadStrong()) {
    return Promise.resolve(_:)();
  }
  sub_1003F9EC0(a1);
  return swift_release();
}

id sub_1003E5CF0(void *a1, unsigned char *a2, void *a3)
{
  if ([a1 isAuthenticatedDark]) {
    [a1 setAuthenticatedDark:0];
  }
  [a1 resetGoDarkWithReason:3];
  if (a3) {
    id result = [a3 saveInCurrentBlock];
  }
  else {
    id result = 0;
  }
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1003E5D78(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  uint64_t v37 = a2;
  uint64_t v33 = a4;
  int v35 = a3;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F98F8();
  sub_100054B78((uint64_t *)&unk_100609200);
  uint64_t v17 = Promise.__allocating_init()();
  if (a6)
  {
    type metadata accessor for RestrictionsController();
    if ((static RestrictionsController.isExplicitContentAllowed.getter() & 1) == 0)
    {
      Swift::String v31 = (void *)static RestrictionsController.shared.getter();
      swift_retain();
      RestrictionsController.presentAlertIfNeeded(_:presentationCompletion:actionCompletion:)();
      swift_release();

      return v17;
    }
  }
  int v34 = a7;
  sub_10004D29C(0, (unint64_t *)&qword_1006092E0);
  id v18 = [swift_getObjCClassFromMetadata() sharedInstance:v33];
  id v19 = [objc_allocWithZone((Class)MTAddPodcastParams) init];
  sub_100054BBC(a1, (uint64_t)v12, (uint64_t *)&unk_1005F7750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100054B1C((uint64_t)v12, (uint64_t *)&unk_1005F7750);
    if (a5)
    {
LABEL_5:
      NSString v20 = String._bridgeToObjectiveC()();
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    URL.absoluteString.getter();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v19 setUrl:v21];

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (a5) {
      goto LABEL_5;
    }
  }
  NSString v20 = 0;
LABEL_8:
  uint64_t v22 = v36;
  uint64_t v23 = v37;
  char v24 = v35;
  [v19 setLocation:v20];

  if ((v24 & 1) != 0
    || (id v25 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:v23]) == 0)
  {
    id v27 = 0;
  }
  else
  {
    uint64_t v26 = v25;
    id v27 = [v25 longLongValue];
  }
  [v19 setStoreCollectionId:v27];
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v17;
  *(void *)(v29 + 24) = v28;
  *(unsigned char *)(v29 + 32) = v34 & 1;
  aBlock[4] = sub_1003FD8D0;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100226350;
  uint64_t aBlock[3] = &unk_100569A20;
  Swift::String v30 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v19 setCompletion:v30];
  _Block_release(v30);
  [v18 subscribeToPodcastWithParams:v19];
  if ((v24 & 1) == 0)
  {
    sub_100041A98((void *)(v22 + 224), *(void *)(v22 + 248));
    dispatch thunk of InterestRepositoryProtocol.undoSuggestLess(forAdamID:)();
  }

  return v17;
}

uint64_t sub_1003E61DC(char a1, uint64_t a2, uint64_t a3, char a4)
{
  Promise.resolve(_:)();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003E6864(a1 & 1, a4 & 1);
    return swift_release();
  }
  return result;
}

void sub_1003E625C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    if (a1)
    {
      type metadata accessor for RestrictionsController();
      id v12 = a1;
      if ((static RestrictionsController.isExplicitContentAllowed.getter() & 1) != 0
        || ([v12 isExplicit] & 1) == 0)
      {
        id v14 = [v12 managedObjectContext];
        if (v14)
        {
          uint64_t v15 = v14;
          sub_100041A98(v11 + 18, v11[21]);
          dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeEnableSubscription(onPodcastUUID:from:context:)();
          Promise.resolve(_:)();
          sub_100041A98(v11 + 28, v11[31]);
          [v12 storeCollectionId];
          AdamID.init(rawValue:)();
          dispatch thunk of InterestRepositoryProtocol.undoSuggestLess(forAdamID:)();
          sub_10004D29C(0, (unint64_t *)&qword_100603DE0);
          if ((static UITraitCollection.interfaceIdiomIsMac.getter() & 1) != 0
            || (swift_getObjectType(),
                (dispatch thunk of MTNotificationManagerProtocol.canPromptForNotificationPermissionsWithPreWarmSheet()() & 1) == 0))
          {
            if (a6) {
              sub_1003E6904();
            }
          }
          swift_getObjectType();
          dispatch thunk of MTNotificationManagerProtocol.requestNotificationPermissionsWithPreWarmSheetIfNeeded()();
          swift_release();
        }
        else
        {
          sub_100054B78(&qword_1006086A0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10046D010;
          *(void *)(inited + 32) = 1684632949;
          *(void *)(inited + 40) = 0xE400000000000000;
          *(void *)(inited + 72) = &type metadata for String;
          *(void *)(inited + 48) = a4;
          *(void *)(inited + 56) = a5;
          swift_bridgeObjectRetain();
          sub_10016E9D8(inited);
          id v21 = objc_allocWithZone((Class)NSError);
          NSString v22 = String._bridgeToObjectiveC()();
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v24 = [v21 initWithDomain:v22 code:42 userInfo:isa];

          id v25 = v24;
          Promise.reject(_:)();
          swift_release();
        }
      }
      else
      {
        uint64_t v13 = (void *)static RestrictionsController.shared.getter();
        swift_retain();
        RestrictionsController.presentAlertIfNeeded(_:presentationCompletion:actionCompletion:)();
        swift_release();

        swift_release();
      }
    }
    else
    {
      id v16 = objc_allocWithZone((Class)NSError);
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [v16 initWithDomain:v17 code:42 userInfo:0];

      id v19 = v18;
      Promise.reject(_:)();
      swift_release();
    }
  }
}

void sub_1003E65F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    id v8 = a1;
    id v9 = [v8 managedObjectContext];
    if (v9)
    {
      uint64_t v10 = v9;
      sub_100041A98((void *)(a5 + 144), *(void *)(a5 + 168));
      dispatch thunk of PodcastsStateCoordinatorProtocol.disableSubscription(onPodcastUUID:from:context:)();
      Promise.resolve(_:)();
    }
    else
    {
      sub_100054B78(&qword_1006086A0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10046D010;
      *(void *)(inited + 32) = 1684632949;
      *(void *)(inited + 40) = 0xE400000000000000;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = a3;
      *(void *)(inited + 56) = a4;
      swift_bridgeObjectRetain();
      sub_10016E9D8(inited);
      id v15 = objc_allocWithZone((Class)NSError);
      NSString v16 = String._bridgeToObjectiveC()();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v18 = [v15 initWithDomain:v16 code:42 userInfo:isa];

      id v19 = v18;
      Promise.reject(_:)();
    }
  }
  else
  {
    id v11 = objc_allocWithZone((Class)NSError);
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v11 initWithDomain:v12 code:42 userInfo:0];

    id v20 = v13;
    Promise.reject(_:)();
  }
}

uint64_t sub_1003E6864(char a1, char a2)
{
  sub_10004D29C(0, (unint64_t *)&qword_100603DE0);
  uint64_t result = static UITraitCollection.interfaceIdiomIsMac.getter();
  if ((result & 1) != 0
    || (swift_getObjectType(),
        uint64_t result = dispatch thunk of MTNotificationManagerProtocol.canPromptForNotificationPermissionsWithPreWarmSheet()(),
        (result & 1) == 0))
  {
    if ((a1 & 1) == 0) {
      return result;
    }
    if (a2) {
      sub_1003E6904();
    }
    goto LABEL_8;
  }
  if (a1)
  {
LABEL_8:
    swift_getObjectType();
    return dispatch thunk of MTNotificationManagerProtocol.requestNotificationPermissionsWithPreWarmSheetIfNeeded()();
  }
  return result;
}

uint64_t sub_1003E6904()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1003FD8AC;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_1005699D0;
  id v9 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003FD990((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
}

void sub_1003E6BE8()
{
  uint64_t v0 = type metadata accessor for HUDViewController.HUDType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_unknownObjectRetain();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for HUDViewController.HUDType.following(_:), v0);
    id v4 = objc_allocWithZone((Class)type metadata accessor for HUDViewController());
    uint64_t v5 = (void *)HUDViewController.init(type:)();
    dispatch thunk of HUDViewController.present()();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1003E6D24()
{
  return sub_1003E6D44();
}

uint64_t sub_1003E6D44()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v8 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_100609200);
  uint64_t v2 = Promise.__allocating_init()();
  uint64_t result = ShowOffer.adamId.getter();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    ShowOffer.feedUrl.getter();
    uint64_t v4 = type metadata accessor for URL();
    uint64_t v5 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4) == 1)
    {
      sub_100054B1C((uint64_t)v1, (uint64_t *)&unk_1005F7750);
    }
    else
    {
      URL.absoluteString.getter();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v1, v4);
    }
    type metadata accessor for CoreDataFetcher();
    uint64_t v6 = swift_allocObject();
    swift_weakInit();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    *(void *)(v7 + 24) = v2;
    swift_retain();
    swift_retain();
    static CoreDataFetcher.fetchPodcast(adamId:feedUrl:completion:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

uint64_t sub_1003E6F48(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003FA144(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1003E6FB8()
{
  return sub_1003E6D44();
}

void sub_1003E6FD8(void *a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a1)
    {
      id v2 = a1;
      id v3 = [v2 managedObjectContext];
      [v2 setEpisodeLimit:&_mh_execute_header];
      if (v3) {
        [v3 saveInCurrentBlock];
      }
      Promise.resolve(_:)();
      swift_release();
    }
    else
    {
      id v4 = objc_allocWithZone((Class)NSError);
      NSString v5 = String._bridgeToObjectiveC()();
      id v6 = [v4 initWithDomain:v5 code:42 userInfo:0];

      id v2 = v6;
      Promise.reject(_:)();
      swift_release();
    }
  }
}

uint64_t sub_1003E711C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003E72EC(a1, a2, a3, (uint64_t)&unk_100569940, (uint64_t)sub_1003FD80C, (uint64_t)&unk_100569958);
}

void sub_1003E7144(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [a1 podcastForUuid:v2];

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (v3)
    {
      id v3 = v3;
      id v4 = [v3 managedObjectContext];
      [v3 setEpisodeLimit:&_mh_execute_header];
      if (v4) {
        [v4 saveInCurrentBlock];
      }
      Promise.resolve(_:)();
      swift_release();
    }
    else
    {
      id v5 = objc_allocWithZone((Class)NSError);
      NSString v6 = String._bridgeToObjectiveC()();
      id v7 = [v5 initWithDomain:v6 code:42 userInfo:0];

      id v3 = v7;
      Promise.reject(_:)();
      swift_release();
    }
  }
}

uint64_t sub_1003E72C4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003E72EC(a1, a2, a3, (uint64_t)&unk_1005698F0, (uint64_t)sub_1003FD7A0, (uint64_t)&unk_100569908);
}

uint64_t sub_1003E72EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100054B78((uint64_t *)&unk_100609200);
  uint64_t v11 = Promise.__allocating_init()();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  id v13 = (void *)swift_allocObject();
  void v13[2] = a1;
  void v13[3] = a2;
  v13[4] = a3;
  v13[5] = v12;
  void v13[6] = v11;
  void v17[4] = a5;
  v17[5] = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  _OWORD v17[2] = sub_10003B424;
  v17[3] = a6;
  id v14 = _Block_copy(v17);
  id v15 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v15 performBlock:v14];
  _Block_release(v14);
  return v11;
}

void sub_1003E7434(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [a1 podcastForUuid:v2];

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1003FA144(v3);
    swift_release();
  }
}

uint64_t sub_1003E74DC(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  type metadata accessor for FeedUpdateResult();
  __chkstk_darwin();
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v10 = result;
      swift_retain();
      id v11 = a1;
      sub_1003FA2DC(v11, a4, v10, a2);
      swift_release();

      return swift_release();
    }
  }
  else
  {
    uint64_t v12 = enum case for FeedUpdateError.missingPodcast(_:);
    uint64_t updated = type metadata accessor for FeedUpdateError();
    uint64_t v14 = *(void *)(updated - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v8, v12, updated);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 2, updated);
    Promise.resolve(_:)();
    return sub_1003FC5E4((uint64_t)v8);
  }
  return result;
}

uint64_t sub_1003E7670(uint64_t a1, uint64_t a2, char a3)
{
  sub_100054B78((uint64_t *)&unk_100609210);
  uint64_t v4 = Promise.__allocating_init()();
  type metadata accessor for CoreDataFetcher();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  *(unsigned char *)(v6 + 32) = a3;
  swift_retain();
  swift_retain();
  static CoreDataFetcher.fetchPodcast(with:completion:)();
  swift_release();
  swift_release();
  long long v9[3] = type metadata accessor for SyncTaskScheduler();
  v9[4] = (uint64_t)&protocol witness table for SyncTaskScheduler;
  sub_10004A244(v9);
  SyncTaskScheduler.init()();
  sub_100054B78((uint64_t *)&unk_100609200);
  sub_100044200(&qword_1006092D8, (uint64_t *)&unk_100609200);
  uint64_t v7 = Promise.flatMap<A>(on:_:)();
  swift_release();
  sub_10004D2D8((uint64_t)v9);
  return v7;
}

uint64_t sub_1003E7808(uint64_t a1)
{
  type metadata accessor for FeedUpdateResult();
  __chkstk_darwin();
  id v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1003FD738(a1, (uint64_t)v3);
  uint64_t updated = type metadata accessor for FeedUpdateError();
  int v5 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(updated - 8) + 48))(v3, 2, updated);
  if (!v5)
  {
    sub_1003FC5E4((uint64_t)v3);
    goto LABEL_5;
  }
  if (v5 == 1)
  {
LABEL_5:
    sub_100054B78((uint64_t *)&unk_100609200);
    v7[15] = 0;
    return Promise.__allocating_init(value:)();
  }
  sub_100054B78((uint64_t *)&unk_100609200);
  v7[14] = 1;
  return Promise.__allocating_init(value:)();
}

void sub_1003E790C(void *a1, uint64_t a2)
{
  type metadata accessor for FeedUpdateResult();
  __chkstk_darwin();
  int v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v9 = enum case for FeedUpdateError.missingPodcast(_:);
    uint64_t updated = type metadata accessor for FeedUpdateError();
    uint64_t v11 = *(void *)(updated - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v5, v9, updated);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 2, updated);
    Promise.resolve(_:)();
LABEL_7:
    sub_1003FC5E4((uint64_t)v5);
    return;
  }
  id v6 = a1;
  if (([v6 isImplicitlyFollowed] & 1) == 0)
  {
    uint64_t v12 = enum case for FeedUpdateError.notImplicitlyFollowed(_:);
    uint64_t v13 = type metadata accessor for FeedUpdateError();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v5, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v5, 0, 2, v13);
    Promise.resolve(_:)();

    goto LABEL_7;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    swift_retain();
    sub_1003FAAD4(v6, 0x41u, v8, a2);
    swift_release();

    swift_release();
  }
  else
  {
  }
}

uint64_t sub_1003E7B60(uint64_t a1, char a2, void (*a3)(void *))
{
  type metadata accessor for FeedUpdateResult();
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    void *v7 = a1;
    uint64_t v9 = enum case for FeedUpdateError.feedUpdaterInternalError(_:);
    uint64_t updated = type metadata accessor for FeedUpdateError();
    uint64_t v11 = *(void *)(updated - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v11 + 104))(v7, v9, updated);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 2, updated);
    swift_errorRetain();
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeedUpdateError();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 2, 2, v8);
  }
  a3(v7);
  return sub_1003FC5E4((uint64_t)v7);
}

uint64_t sub_1003E7CEC(void *a1, uint64_t a2, void (*a3)(unsigned char *), uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t v74 = a8;
  id v75 = a3;
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  id v20 = &v63[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  NSString v22 = &v63[-v21];
  type metadata accessor for FeedUpdateResult();
  __chkstk_darwin();
  if (!a2)
  {
    uint64_t v67 = v22;
    uint64_t v68 = a6;
    uint64_t v69 = v20;
    uint64_t v70 = &v63[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v72 = v18;
    uint64_t v73 = a4;
    uint64_t v71 = v17;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      uint64_t updated = type metadata accessor for FeedUpdateError();
      Swift::String v43 = v70;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v70, 1, 2, updated);
      v75(v43);
LABEL_20:
      uint64_t v28 = (uint64_t)v43;
      return sub_1003FC5E4(v28);
    }
    uint64_t v30 = Strong;
    uint64_t v31 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v32 = v67;
    uint64_t v66 = v31;
    static OS_os_log.feedUpdate.getter();
    int v33 = static os_log_type_t.default.getter();
    int v34 = a1;
    id v35 = a1;
    uint64_t v36 = Logger.logObject.getter();
    if (os_log_type_enabled(v36, (os_log_type_t)v33))
    {
      int v64 = v33;
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      double v77 = COERCE_DOUBLE(swift_slowAlloc());
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v65 = v30;
      if (v34)
      {
        id v38 = [v35 description];
        uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v41 = v40;
      }
      else
      {
        unint64_t v41 = 0xE500000000000000;
        uint64_t v39 = 0x3E6C696E3CLL;
      }
      uint64_t v76 = sub_10004B974(v39, v41, (uint64_t *)&v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v64, "Bag time threshold loaded with value of %s seconds", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      Swift::String v44 = *(void (**)(unsigned char *, uint64_t))(v72 + 8);
      uint64_t v50 = v32;
      uint64_t v46 = v71;
      v44(v50, v71);
      uint64_t v30 = v65;
      uint64_t v47 = a7;
      uint64_t v48 = v68;
      uint64_t v49 = v69;
      if (!v34) {
        goto LABEL_13;
      }
    }
    else
    {

      Swift::String v44 = *(void (**)(unsigned char *, uint64_t))(v72 + 8);
      Swift::String v45 = v32;
      uint64_t v46 = v71;
      v44(v45, v71);
      uint64_t v47 = a7;
      uint64_t v48 = v68;
      uint64_t v49 = v69;
      if (!v34) {
        goto LABEL_13;
      }
    }
    double v77 = 0.0;
    char v78 = 1;
    static Double._conditionallyBridgeFromObjectiveC(_:result:)();
    if (v78 != 1)
    {
      *(double *)&uint64_t v52 = v77;
      goto LABEL_15;
    }
LABEL_13:
    [v48 libraryShowFetchThresholdDefaultValue];
    uint64_t v52 = v51;
LABEL_15:
    [v47 timeIntervalSinceNow];
    double v54 = fabs(v53);
    if (*(double *)&v52 < v54)
    {
      uint64_t v55 = *(void *)(v30 + 24);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v57 = *(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 24);
      swift_unknownObjectRetain();
      v57(v74, a9, a10 & 1, 1, 8, a11, a12, ObjectType, v55);
      swift_release();
      return swift_unknownObjectRelease();
    }
    static OS_os_log.feedUpdate.getter();
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v61 = 134218240;
      double v77 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v61 + 12) = 2048;
      double v77 = *(double *)&v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Skipping feed update because last one happened %f seconds ago, which is less than the min interval provided by MAPI %f seconds", (uint8_t *)v61, 0x16u);
      uint64_t v46 = v71;
      swift_slowDealloc();
    }

    v44(v49, v46);
    uint64_t v62 = type metadata accessor for FeedUpdateError();
    Swift::String v43 = v70;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v70, 1, 2, v62);
    v75(v43);
    swift_release();
    goto LABEL_20;
  }
  *(void *)&v63[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)] = a2;
  uint64_t v24 = enum case for FeedUpdateError.bagIntervalFetchFailure(_:);
  id v25 = &v63[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = type metadata accessor for FeedUpdateError();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v27 + 104))(v25, v24, v26);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v25, 0, 2, v26);
  swift_errorRetain();
  v75(v25);
  uint64_t v28 = (uint64_t)v25;
  return sub_1003FC5E4(v28);
}

uint64_t sub_1003E83B0()
{
  sub_100054B78((uint64_t *)&unk_100609200);
  uint64_t v1 = Promise.__allocating_init()();
  id v2 = [self defaultCenter];
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  int v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  swift_retain();
  NSNotificationCenter.weakObserver(for:using:)();

  swift_release();
  uint64_t v6 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  swift_retain();
  long long v9[3] = v6;
  v9[4] = &protocol witness table for OS_dispatch_queue;
  v9[0] = static OS_dispatch_queue.main.getter();
  Promise.always(on:perform:)();
  swift_release();
  sub_10004D2D8((uint64_t)v9);
  uint64_t v7 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v3 + 40);
  swift_retain();
  v7(sub_1003FC5A4, v1, ObjectType, v3);
  swift_release();
  swift_release();
  return v1;
}

void sub_1003E855C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v49 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)v45 - v12;
  if (a1)
  {
    v45[1] = (id)(a5 + 16);
    uint64_t v55 = &_swiftEmptySetSingleton;
    id v14 = a1;
    id v15 = [v14 podcasts];
    uint64_t v47 = a4;
    id v46 = v14;
    if (v15)
    {
      v45[0] = v15;
      NSOrderedSet.makeIterator()();
      NSFastEnumerationIterator.next()();
      while (v53)
      {
        sub_10004D384(&v52, v51);
        sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
        if (swift_dynamicCast())
        {
          id v20 = v50;
          id v21 = [v50 uuid];
          if (v21)
          {
            NSString v16 = v21;
            Swift::Int v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            Swift::Int v19 = v18;

            sub_100050684((Swift::Int *)v51, v17, v19);
            swift_bridgeObjectRelease();
          }
          else
          {
          }
        }
        NSFastEnumerationIterator.next()();
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v49);

      a4 = v47;
      id v14 = v46;
    }
    id v22 = [v14 settings];
    if (v22)
    {
      v45[0] = v22;
      NSOrderedSet.makeIterator()();
      NSFastEnumerationIterator.next()();
      while (v53)
      {
        sub_10004D384(&v52, v51);
        sub_10004D29C(0, &qword_1005F7738);
        if (swift_dynamicCast())
        {
          id v23 = v50;
          id v24 = [v50 podcast];
          if (v24
            && (id v25 = v24, v26 = [v24 uuid], v25, v26))
          {
            Swift::Int v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            Swift::Int v29 = v28;

            [v23 setNeedsUpdate:1];
            sub_100050684((Swift::Int *)v51, v27, v29);

            swift_bridgeObjectRelease();
          }
          else
          {
          }
        }
        NSFastEnumerationIterator.next()();
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v49);

      a4 = v47;
      id v14 = v46;
    }
    id v30 = [self defaultCenter];
    uint64_t v31 = @"MTFeedUpdateDidEndUpdatingAllFeeds";
    swift_retain();
    NSNotificationCenter.weakObserver(for:using:)();

    swift_release();
    uint64_t v32 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    swift_retain();
    uint64_t v33 = static OS_dispatch_queue.main.getter();
    uint64_t v53 = v32;
    double v54 = &protocol witness table for OS_dispatch_queue;
    *(void *)&long long v52 = v33;
    Promise.always(on:perform:)();
    swift_release();
    sub_10004D2D8((uint64_t)&v52);
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v35 = *(void *)(Strong + 24);
      swift_unknownObjectRetain();
      swift_release();
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v37 = v55;
      id v38 = *(void (**)(void *, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v35 + 32);
      swift_retain();
      v38(v37, 1, 9, sub_1003FC5A4, a4, ObjectType, v35);
      swift_bridgeObjectRelease();
      swift_release();

      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_100054B78(&qword_1006086A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D010;
    *(void *)(inited + 32) = 0x556E6F6974617473;
    *(void *)(inited + 40) = 0xEB00000000646975;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = a2;
    *(void *)(inited + 56) = a3;
    swift_bridgeObjectRetain();
    sub_10016E9D8(inited);
    id v40 = objc_allocWithZone((Class)NSError);
    NSString v41 = String._bridgeToObjectiveC()();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v43 = [v40 initWithDomain:v41 code:42 userInfo:isa];

    id v44 = v43;
    Promise.reject(_:)();
  }
}

uint64_t sub_1003E8C20()
{
  uint64_t result = Promise.isResolved.getter();
  if ((result & 1) == 0) {
    return Promise.resolve(_:)();
  }
  return result;
}

uint64_t sub_1003E8C60(uint64_t result)
{
  if (!result)
  {
    uint64_t result = Promise.isResolved.getter();
    if ((result & 1) == 0) {
      return Promise.resolve(_:)();
    }
  }
  return result;
}

void sub_1003E8CA8(void *a1, uint64_t updated, char a3)
{
  if (a1)
  {
    id v12 = a1;
    uint64_t v5 = MTPodcast.episodeUserFilter.getter();
    if (v6 == -1
      || (uint64_t v7 = v5,
          char v8 = v6,
          sub_1001A5A18(updated, a3),
          char v9 = static EpisodeUserFilter.== infix(_:_:)(),
          sub_1001A5A58(updated, a3),
          sub_1003FC444(v7, v8),
          (v9 & 1) == 0))
    {
      sub_1001A5A18(updated, a3);
    }
    else
    {
      uint64_t updated = EpisodeUserFilter.flipUpdateState.getter();
      a3 = v10;
    }
    sub_1001A5A18(updated, a3);
    MTPodcast.episodeUserFilter.setter();
    id v11 = [v12 managedObjectContext];
    [v11 saveInCurrentBlock];
    sub_1001A5A58(updated, a3);
  }
}

void sub_1003E8DDC(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v4 = a1;
    [v4 setShowTypeSetting:a2];
    id v3 = [v4 managedObjectContext];
    [v3 saveInCurrentBlock];
  }
}

void sub_1003E8E64()
{
  id v1 = [self sharedInstance];
  id v2 = [v1 privateQueueContext];

  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0;
  v6[4] = sub_1003FD714;
  v6[5] = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10003B424;
  v6[3] = &unk_100569890;
  id v4 = _Block_copy(v6);
  id v5 = v2;
  swift_retain();
  swift_release();
  [v5 performBlock:v4];
  _Block_release(v4);
}

uint64_t sub_1003E8F88(void *a1, uint64_t a2)
{
  uint64_t v63 = a2;
  uint64_t v68 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v68 - 8);
  __chkstk_darwin();
  id v5 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v67 = (char *)v57 - v6;
  __chkstk_darwin();
  int v64 = (char *)v57 - v7;
  __chkstk_darwin();
  char v9 = (char *)v57 - v8;
  __chkstk_darwin();
  id v11 = (char *)v57 - v10;
  id v12 = (void *)kMTPodcastEntityName;
  uint64_t v13 = self;
  id v14 = v12;
  id v15 = [v13 predicateForRecentlyUnfollowed];
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v62 = a1;
  id v17 = [a1 objectsInEntity:v14 predicate:v15 sortDescriptors:isa];

  if (!v17
    || (sub_10004D29C(0, (unint64_t *)&qword_1005F7130),
        unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v17,
        unint64_t v19 = (unint64_t)sub_10003CCDC(v18),
        swift_bridgeObjectRelease(),
        !v19))
  {
    static Logger.podcastsStatesCoordination.getter();
    Swift::Int v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      Swift::Int v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Int v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to fetch recently unfollowed shows", v29, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v11, v68);
  }
  unint64_t v20 = v19 >> 62;
  unint64_t v21 = v19;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22 >= 1) {
      goto LABEL_5;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    static Logger.podcastsStatesCoordination.getter();
    double v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "No recently unfollowed shows to follow.", v56, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v68);
  }
  uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v22 < 1) {
    goto LABEL_36;
  }
LABEL_5:
  static Logger.podcastsStatesCoordination.getter();
  swift_bridgeObjectRetain();
  id v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  unint64_t v61 = v21;
  if (v25)
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v26 = 134217984;
    unint64_t v21 = v61;
    uint64_t v69 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Refollowing %ld recently unfollowed shows.", v26, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v65 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v66 = v3 + 8;
  v65(v9, v68);
  if (v20)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v31) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v31 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v31) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = type metadata accessor for RestrictionsController();
  if (v31 >= 1)
  {
    uint64_t v33 = result;
    uint64_t v34 = 0;
    uint64_t v59 = (void *)(v63 + 144);
    unint64_t v35 = v21 & 0xC000000000000001;
    *(void *)&long long v32 = 136315138;
    long long v58 = v32;
    v57[1] = (char *)&type metadata for Any + 8;
    unint64_t v60 = v21 & 0xC000000000000001;
    do
    {
      if (v35) {
        id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v36 = *(id *)(v21 + 8 * v34 + 32);
      }
      uint64_t v37 = v36;
      if ((static RestrictionsController.isExplicitContentAllowed.getter() & 1) != 0
        || ([v37 isExplicit] & 1) == 0)
      {
        id v39 = [v37 uuid];
        if (v39)
        {
          id v40 = v39;
          uint64_t v41 = v33;
          uint64_t v42 = v31;
          uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v45 = v44;

          sub_100041A98(v59, *(void *)(v63 + 168));
          dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeEnableSubscription(onPodcastUUID:from:context:)();
          sub_10004D29C(0, (unint64_t *)&qword_100603DE0);
          if ((static UITraitCollection.interfaceIdiomIsMac.getter() & 1) == 0)
          {
            swift_getObjectType();
            dispatch thunk of MTNotificationManagerProtocol.canPromptForNotificationPermissionsWithPreWarmSheet()();
          }
          swift_getObjectType();
          dispatch thunk of MTNotificationManagerProtocol.requestNotificationPermissionsWithPreWarmSheetIfNeeded()();
          id v46 = v67;
          static Logger.podcastsStatesCoordination.getter();
          swift_bridgeObjectRetain();
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            uint64_t v69 = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = v58;
            swift_bridgeObjectRetain();
            *(void *)(v49 + 4) = sub_10004B974(v43, v45, &v69);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Followed show with uuid %s.", (uint8_t *)v49, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            id v50 = v67;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            id v50 = v46;
          }
          v65(v50, v68);
          uint64_t v31 = v42;
          uint64_t v33 = v41;
          unint64_t v35 = v60;
          unint64_t v21 = v61;
        }
        else
        {
          static Logger.podcastsStatesCoordination.getter();
          uint64_t v51 = Logger.logObject.getter();
          os_log_type_t v52 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v51, v52))
          {
            uint64_t v53 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v53 = 0;
            _os_log_impl((void *)&_mh_execute_header, v51, v52, "Missing UUID when re-following show.", v53, 2u);
            swift_slowDealloc();
          }

          v65(v64, v68);
        }
      }
      else
      {
        id v38 = (void *)static RestrictionsController.shared.getter();
        RestrictionsController.presentAlertIfNeeded(_:presentationCompletion:actionCompletion:)();
      }
      ++v34;
    }
    while (v31 != v34);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_1003E978C(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)v33 - v6;
  __chkstk_darwin();
  char v9 = (char *)v33 - v8;
  uint64_t v10 = (void *)kMTPodcastEntityName;
  id v11 = self;
  id v12 = v10;
  id v13 = [v11 predicateForRecentlyUnfollowed];
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v15 = [a1 objectsInEntity:v12 predicate:v13 sortDescriptors:isa];

  if (!v15
    || (sub_10004D29C(0, (unint64_t *)&qword_1005F7130),
        unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v15,
        unint64_t v17 = (unint64_t)sub_10003CCDC(v16),
        swift_bridgeObjectRelease(),
        !v17))
  {
    static Logger.podcastsStatesCoordination.getter();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to fetch recently unfollowed shows", v24, 2u);
      swift_slowDealloc();
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 >= 1) {
      goto LABEL_5;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    static Logger.podcastsStatesCoordination.getter();
    id v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      long long v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "No recently unfollowed shows to delete.", v32, 2u);
      swift_slowDealloc();
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v18 < 1) {
    goto LABEL_23;
  }
LABEL_5:
  static Logger.podcastsStatesCoordination.getter();
  swift_bridgeObjectRetain();
  unint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    unint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v21 = 134217984;
    v33[1] = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Deleting %ld recently unfollowed shows.", v21, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    id result = (id)swift_bridgeObjectRelease();
    if (!v26)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return [a1 saveInCurrentBlock];
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v26) {
      goto LABEL_21;
    }
  }
  if (v26 >= 1)
  {
    for (uint64_t i = 0; i != v26; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0) {
        id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v28 = *(id *)(v17 + 8 * i + 32);
      }
      Swift::Int v29 = v28;
      [v28 setLastUnfollowedDate:0.0];
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_1003E9C54(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  uint64_t v35 = v7;
  __chkstk_darwin();
  char v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v11 = (char *)&v32 - v10;
  __chkstk_darwin();
  id v13 = (char *)&v32 - v12;
  id v14 = (void *)kMTPodcastEntityName;
  id v15 = self;
  id v16 = v14;
  uint64_t v33 = a2;
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 predicateForPodcastUUID:v17];

  id v32 = a1;
  id v19 = [a1 objectInEntity:v16 predicate:v18];

  if (v19)
  {
    self;
    os_log_type_t v20 = (void *)swift_dynamicCastObjCClass();
    if (v20)
    {
      unint64_t v21 = v20;
      [v20 lastUnfollowedDate];
      if (v22 <= 0.0)
      {
        static Logger.podcastsStatesCoordination.getter();
        swift_bridgeObjectRetain_n();
        Swift::Int v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v29, v30))
        {
          os_log_type_t v31 = (uint8_t *)swift_slowAlloc();
          uint64_t v37 = swift_slowAlloc();
          *(_DWORD *)os_log_type_t v31 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v36 = sub_10004B974(v33, a3, &v37);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Show %s is not recently unfollowed. Not deleting.", v31, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v34);
      }
      else
      {
        static Logger.podcastsStatesCoordination.getter();
        swift_bridgeObjectRetain_n();
        os_log_type_t v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v23, v24))
        {
          BOOL v25 = (uint8_t *)swift_slowAlloc();
          uint64_t v37 = swift_slowAlloc();
          *(_DWORD *)BOOL v25 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v36 = sub_10004B974(v33, a3, &v37);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "Deleting recently unfollowed show: %s", v25, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v34);
        [v21 setLastUnfollowedDate:0.0];
        [v32 saveInCurrentBlock];
      }
      return;
    }
  }
  static Logger.podcastsStatesCoordination.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    id v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)id v28 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_10004B974(v33, a3, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Failed to fetch recently unfollowed show: %s", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v34);
}

uint64_t sub_1003EA204(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for StationSortOrder();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [a1 playlistForUuid:v12];

  if (!v13)
  {
    char v16 = 0;
LABEL_16:
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(a4 + 16) = v16;
    return result;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a5, v8);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v14 == enum case for StationSortOrder.library(_:))
  {
    uint64_t v15 = 0;
LABEL_15:
    [v13 setContainerOrder:v15];
    char v16 = 1;
    [v13 setNeedsUpdate:1];

    goto LABEL_16;
  }
  if (v14 == enum case for StationSortOrder.mostRecent(_:))
  {
    uint64_t v15 = 1;
    goto LABEL_15;
  }
  if (v14 == enum case for StationSortOrder.manual(_:))
  {
    uint64_t v15 = 2;
    goto LABEL_15;
  }
  if (v14 == enum case for StationSortOrder.oldest(_:))
  {
    uint64_t v15 = 3;
    goto LABEL_15;
  }
  if (v14 == enum case for StationSortOrder.showTitle(_:))
  {
    uint64_t v15 = 4;
    goto LABEL_15;
  }
  if (v14 == enum case for StationSortOrder.showTitleAscending(_:))
  {
    uint64_t v15 = 5;
    goto LABEL_15;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1003EA484(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v33 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v9 - 8);
  __chkstk_darwin();
  os_log_type_t v30 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v29 = *(void *)(v11 - 8);
  __chkstk_darwin();
  id v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v14 = String._bridgeToObjectiveC()();
  id v31 = a1;
  id v34 = [a1 playlistForUuid:v14];

  if (v34)
  {
    id v15 = [v34 defaultSettings];
    if (v15)
    {
      char v16 = v15;
      uint64_t v27 = v9;
      uint64_t v28 = v7;
      [v15 setShowPlayedEpisodes:(a4 & 1) == 0];
      [v34 setNeedsUpdate:1];
      id v17 = [v34 settings];
      if (v17)
      {
        uint64_t v18 = v17;
        uint64_t v26 = v6;
        NSOrderedSet.makeIterator()();
        NSFastEnumerationIterator.next()();
        while (v39)
        {
          sub_10004D384(&aBlock, &v36);
          sub_10004D29C(0, &qword_1005F7738);
          if (swift_dynamicCast())
          {
            id v19 = v35;
            [v35 takeValuesFromDefaultSettings:v16];
          }
          NSFastEnumerationIterator.next()();
        }
        (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v11);

        uint64_t v6 = v26;
      }
      [v31 saveInCurrentBlock];
      sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      unint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
      id v40 = sub_1003EA9A4;
      uint64_t v41 = 0;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      id v38 = sub_10003B424;
      id v39 = &unk_100568D78;
      double v22 = _Block_copy(&aBlock);
      os_log_type_t v23 = v30;
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_1003FD990((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
      os_log_type_t v24 = v33;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();

      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v6);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v27);
    }
    else
    {
      id v20 = v34;
    }
  }
}

void sub_1003EA9A4()
{
  type metadata accessor for SyncKeysRepository();
  id v0 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.isPlaylistSyncDirty.setter();
}

uint64_t sub_1003EAA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 0;
  id v9 = [self sharedInstance];
  id v10 = [v9 mainOrPrivateContext];

  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v10;
  v12[3] = a3;
  void v12[4] = a4;
  v12[5] = a1;
  void v12[6] = a2;
  v12[7] = v8;
  v12[8] = v11;
  void v17[4] = sub_1003FD6C0;
  v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  _OWORD v17[2] = sub_10003B424;
  v17[3] = &unk_100569840;
  id v13 = _Block_copy(v17);
  id v14 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v14 performBlockAndWaitWithSave:v13];

  _Block_release(v13);
  swift_beginAccess();
  uint64_t v15 = *(unsigned __int8 *)(v8 + 16);
  swift_release();
  return v15;
}

uint64_t sub_1003EABD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [a1 playlistForUuid:v10];

  if (!v11) {
    goto LABEL_6;
  }
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [a1 episodeForUuid:v12];

  if (!v13)
  {

LABEL_6:
    char v17 = 0;
    goto LABEL_9;
  }
  [v11 removeEpisode:v13];
  [v11 setNeedsUpdate:1];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = *(void *)(Strong + 96);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(v15 + 8))(a2, a3, a1, ObjectType, v15);

    swift_unknownObjectRelease();
  }
  else
  {
  }
  char v17 = 1;
LABEL_9:
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a6 + 16) = v17;
  return result;
}

void sub_1003EAD80(void *a1)
{
  if (a1)
  {
    id v8 = a1;
    MTPodcast.adamId.getter();
    if ((v1 & 1) == 0)
    {
      sub_1001A5874();
      BinaryInteger.description.getter();
      Promise.resolve(_:)();
      swift_bridgeObjectRelease();

      return;
    }
    id v5 = objc_allocWithZone((Class)NSError);
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 initWithDomain:v6 code:42 userInfo:0];

    Promise.reject(_:)();
  }
  else
  {
    id v2 = objc_allocWithZone((Class)NSError);
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v2 initWithDomain:v3 code:42 userInfo:0];

    id v8 = v4;
    Promise.reject(_:)();
  }
}

void sub_1003EAF0C(void *a1)
{
  if (a1)
  {
    id v11 = a1;
    id v1 = [v11 podcast];
    if (v1)
    {
      id v2 = v1;
      MTPodcast.adamId.getter();
      char v4 = v3;

      if ((v4 & 1) == 0)
      {
        sub_1001A5874();
        BinaryInteger.description.getter();
        Promise.resolve(_:)();
        swift_bridgeObjectRelease();

        return;
      }
    }
    id v5 = objc_allocWithZone((Class)NSError);
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 initWithDomain:v6 code:42 userInfo:0];

    Promise.reject(_:)();
  }
  else
  {
    id v8 = objc_allocWithZone((Class)NSError);
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v8 initWithDomain:v9 code:42 userInfo:0];

    id v11 = v10;
    Promise.reject(_:)();
  }
}

void sub_1003EB0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v30 = a3;
  uint64_t v31 = a7;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v37 = a10;
  uint64_t v14 = type metadata accessor for MetricsData();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  char v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MetricsActivity();
  uint64_t v18 = (void *)static MetricsActivity.shared.getter();
  uint64_t v19 = MetricsActivity.currentPageFields.getter();

  uint64_t v28 = v15;
  uint64_t v29 = v14;
  if (!v19)
  {
    long long v39 = 0u;
    long long v40 = 0u;
LABEL_9:
    uint64_t v23 = a8;
    uint64_t v21 = v37;
LABEL_11:
    uint64_t v24 = v11;
    goto LABEL_12;
  }
  if (!*(void *)(v19 + 16))
  {
    long long v39 = 0u;
    long long v40 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  unint64_t v20 = sub_100051E78(0x6F43646572616873, 0xED0000746E65746ELL);
  uint64_t v21 = v37;
  if ((v22 & 1) == 0)
  {
    long long v39 = 0u;
    long long v40 = 0u;
    swift_bridgeObjectRelease();
    uint64_t v23 = a8;
    goto LABEL_11;
  }
  sub_10004D328(*(void *)(v19 + 56) + 32 * v20, (uint64_t)&v39);
  swift_bridgeObjectRelease();
  uint64_t v23 = a8;
  uint64_t v24 = v11;
  if (!*((void *)&v40 + 1))
  {
LABEL_12:
    sub_100054B1C((uint64_t)&v39, &qword_1005F5D30);
    goto LABEL_13;
  }
  if (swift_dynamicCast())
  {
    int v32 = v38;
    goto LABEL_14;
  }
LABEL_13:
  int v32 = 0;
LABEL_14:
  uint64_t v27 = v17;
  uint64_t v33 = a4;
  uint64_t v34 = v24;
  if (!v21) {
    static MetricsTargetType.button.getter();
  }
  if (!v23) {
    swift_bridgeObjectRetain();
  }
  type metadata accessor for ClickMetricsEvent();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static ClickMetricsEvent.makeClickEvent(targetId:actionType:targetType:channelAdamId:pageId:pageType:sharedPage:location:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v34 + 136))
  {
    swift_retain();
    uint64_t v25 = v27;
    dispatch thunk of MetricsEvent.metricsData.getter();
    MetricsController.process(_:)();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v29);
  }
  else
  {
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v26 = (void *)static OS_os_log.metrics.getter();
    os_log(_:dso:log:_:_:)();
    swift_release();
  }
}

uint64_t sub_1003EB434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a7;
  uint64_t v33 = a8;
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a9;
  uint64_t v11 = *(void *)(sub_100054B78(&qword_1006092C8) - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin();
  id v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1006092D0);
  Promise.__allocating_init()();
  type metadata accessor for CoreDataFetcher();
  swift_retain();
  static CoreDataFetcher.fetchEpisode(with:completion:)();
  swift_release();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_100054BBC(a11, (uint64_t)v13, &qword_1006092C8);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = v27;
  uint64_t v18 = v28;
  v16[2] = v14;
  void v16[3] = v17;
  uint64_t v19 = v30;
  uint64_t v20 = v31;
  v16[4] = v18;
  v16[5] = v19;
  uint64_t v21 = v32;
  uint64_t v22 = v33;
  v16[6] = v20;
  v16[7] = v21;
  uint64_t v23 = v29;
  v16[8] = v22;
  v16[9] = v23;
  v16[10] = a10;
  sub_100053820((uint64_t)v13, (uint64_t)v16 + v15, &qword_1006092C8);
  uint64_t v24 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = static OS_dispatch_queue.main.getter();
  _OWORD v34[3] = v24;
  v34[4] = &protocol witness table for OS_dispatch_queue;
  v34[0] = v25;
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  return sub_10004D2D8((uint64_t)v34);
}

uint64_t sub_1003EB6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a7;
  uint64_t v33 = a8;
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a9;
  uint64_t v11 = *(void *)(sub_100054B78(&qword_1006092C8) - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin();
  id v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1006092D0);
  Promise.__allocating_init()();
  type metadata accessor for CoreDataFetcher();
  swift_retain();
  static CoreDataFetcher.fetchPodcast(with:completion:)();
  swift_release();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_100054BBC(a11, (uint64_t)v13, &qword_1006092C8);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = v27;
  uint64_t v18 = v28;
  v16[2] = v14;
  void v16[3] = v17;
  uint64_t v19 = v30;
  uint64_t v20 = v31;
  v16[4] = v18;
  v16[5] = v19;
  uint64_t v21 = v32;
  uint64_t v22 = v33;
  v16[6] = v20;
  v16[7] = v21;
  uint64_t v23 = v29;
  v16[8] = v22;
  v16[9] = v23;
  v16[10] = a10;
  sub_100053820((uint64_t)v13, (uint64_t)v16 + v15, &qword_1006092C8);
  uint64_t v24 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = static OS_dispatch_queue.main.getter();
  _OWORD v34[3] = v24;
  v34[4] = &protocol witness table for OS_dispatch_queue;
  v34[0] = v25;
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  return sub_10004D2D8((uint64_t)v34);
}

uint64_t sub_1003EB910(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003EB0BC(v16, v17, a3, a4, a5, a6, a7, a8, a9, a10);
    return swift_release();
  }
  return result;
}

void sub_1003EB9D8()
{
  os_log_type_t v0 = static os_log_type_t.error.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  log = static OS_os_log.metrics.getter();
  if (os_log_type_enabled(log, v0))
  {
    swift_errorRetain();
    swift_errorRetain();
    id v1 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)id v1 = 136315138;
    swift_getErrorValue();
    uint64_t v2 = Error.localizedDescription.getter();
    sub_10004B974(v2, v3, &v5);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v0, "%s", v1, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1003EBB90(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = result;
    char v4 = self;
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      id v6 = [v4 sharedInstance];
      id v7 = [v6 mainOrPrivateContext];

      sub_100041A98((void *)(v1 + 144), *(void *)(v1 + 168));
      dispatch thunk of PodcastsStateCoordinatorProtocol.downloadEpisode(withUUID:isFromSaving:from:in:)();
      swift_bridgeObjectRelease();

      v5 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1003EBCD0(uint64_t a1)
{
  id v2 = [self sharedInstance];
  id v3 = [v2 importContext];

  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = v3;
  v8[4] = sub_1003FD46C;
  v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  long long v8[2] = sub_10003B424;
  v8[3] = &unk_1005697A0;
  id v6 = _Block_copy(v8);
  swift_bridgeObjectRetain();
  id v7 = v3;
  swift_release();
  [v7 performBlock:v6];
  _Block_release(v6);
}

uint64_t sub_1003EBE24(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    id v7 = a3;
    id v8 = sub_1003F9548(a2);

    uint64_t v9 = *((void *)v8 + 2);
    if (v9)
    {
      uint64_t v10 = v8 + 40;
      do
      {
        sub_100041A98((void *)(v6 + 144), *(void *)(v6 + 168));
        swift_bridgeObjectRetain();
        dispatch thunk of PodcastsStateCoordinatorProtocol.downloadEpisode(withUUID:isFromSaving:from:in:)();
        swift_bridgeObjectRelease();
        v10 += 16;
        --v9;
      }
      while (v9);
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1003EBF38(uint64_t a1)
{
  id result = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:a1];
  if (result)
  {
    id v3 = result;
    id v4 = objc_msgSend(objc_msgSend(*(id *)(v1 + 48), "downloadManager"), "episodeUuidForDownloadWithAdamID:", result);
    swift_unknownObjectRelease();
    if (v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100041A98((void *)(v1 + 144), *(void *)(v1 + 168));
      dispatch thunk of PodcastsStateCoordinatorProtocol.cancelDownload(forEpisodeWithUUID:userInitiated:from:)();
    }
    else
    {
      static os_log_type_t.error.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v5 = static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_10046D010;
      id v7 = [v3 description];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      *(void *)(v6 + 56) = &type metadata for String;
      *(void *)(v6 + 64) = sub_10004DA4C();
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 40) = v10;
      os_log(_:dso:log:_:_:)();

      id v3 = (void *)v5;
    }

    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003EC118(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v2 = result;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  id v3 = [self sharedInstance];
  id v4 = [v3 mainOrPrivateContext];

  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  v5[3] = v4;
  v5[4] = &v15;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1003FD408;
  *(void *)(v6 + 24) = v5;
  v14[4] = sub_100018840;
  v14[5] = v6;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  void v14[2] = sub_100018818;
  void v14[3] = &unk_100569750;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  swift_retain();
  swift_release();
  [v8 performBlockAndWait:v7];
  _Block_release(v7);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  id result = swift_release();
  if (v7)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (v16)
  {
    sub_100041A98((void *)(v1 + 144), *(void *)(v1 + 168));
    swift_bridgeObjectRetain();
    dispatch thunk of PodcastsStateCoordinatorProtocol.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:)();
  }
  else
  {
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v9 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10046D010;
    v14[0] = v2;
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v13 = v12;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_10004DA4C();
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    os_log(_:dso:log:_:_:)();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003EC3F0(uint64_t a1, void *a2, uint64_t *a3)
{
  id v5 = [self predicateForEpisodeStoreTrackId:a1];
  id v6 = [a2 objectInEntity:kMTEpisodeEntityName predicate:v5];
  if (!v6)
  {
LABEL_7:

    goto LABEL_8;
  }
  id v7 = v6;
  self;
  id v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    id v9 = [v8 uuid];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      goto LABEL_9;
    }

    goto LABEL_7;
  }

LABEL_8:
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_9:
  *a3 = v11;
  a3[1] = v13;

  return swift_bridgeObjectRelease();
}

void sub_1003EC504(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a1 episodeForUuid:v6];

  if (v7)
  {
    unsigned __int8 v8 = [v7 isBookmarked];

    *a4 = v8;
  }
}

uint64_t sub_1003EC584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 32) = a7;
  *(void *)(v8 + 40) = a8;
  *(unsigned char *)(v8 + 96) = a6;
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  uint64_t v9 = type metadata accessor for BookmarkEpisodeIntent();
  *(void *)(v8 + 48) = v9;
  *(void *)(v8 + 56) = *(void *)(v9 - 8);
  *(void *)(v8 + 64) = swift_task_alloc();
  return _swift_task_switch(sub_1003EC64C, 0, 0);
}

uint64_t sub_1003EC64C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v20 = v0;
    sub_1001BA838(0, v3, 0);
    unint64_t v4 = _swiftEmptyArrayStorage[2];
    uint64_t v5 = 24 * v4 + 48;
    NSString v6 = (uint64_t *)(v2 + 40);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v4 >= v9 >> 1) {
        sub_1001BA838(v9 > 1, v4 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v4 + 1;
      uint64_t v10 = (char *)_swiftEmptyArrayStorage + v5;
      *((void *)v10 - 2) = v8;
      *((void *)v10 - 1) = v7;
      *uint64_t v10 = 2;
      v5 += 24;
      v6 += 2;
      ++v4;
      --v3;
    }
    while (v3);
    uint64_t v1 = v20;
  }
  v1[9] = _swiftEmptyArrayStorage;
  uint64_t v11 = (void *)v1[2];
  swift_bridgeObjectRetain();
  BookmarkEpisodeIntent.init(episodeIdentifiers:)();
  uint64_t v12 = v11[39];
  uint64_t v13 = v11[40];
  sub_100041A98(v11 + 36, v12);
  uint64_t v14 = v11[35];
  uint64_t v15 = (void *)swift_task_alloc();
  v1[10] = v15;
  uint64_t v16 = sub_1003FD990(&qword_1006091E0, (void (*)(uint64_t))&type metadata accessor for BookmarkEpisodeIntent);
  *uint64_t v15 = v1;
  v15[1] = sub_1003EC838;
  uint64_t v17 = v1[8];
  uint64_t v18 = v1[6];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v16, v17, v14, v18, v16, v12, v13);
}

uint64_t sub_1003EC838()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003FDB48;
  }
  else {
    uint64_t v2 = sub_1003EC94C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003EC94C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  int v3 = *(unsigned __int8 *)(v0 + 96);
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  sub_1003EF354(1, v3, v1, v2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1003ECA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = a8;
  *(unsigned char *)(v8 + 152) = a6;
  *(void *)(v8 + 24) = a4;
  *(void *)(v8 + 32) = a5;
  uint64_t v9 = type metadata accessor for BookmarkEpisodeIntent();
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = *(void *)(v9 - 8);
  *(void *)(v8 + 72) = swift_task_alloc();
  uint64_t EpisodeOfferContentIDsIntent = type metadata accessor for FindOrCreateEpisodeOfferContentIDsIntent();
  *(void *)(v8 + 80) = EpisodeOfferContentIDsIntent;
  *(void *)(v8 + 88) = *(void *)(EpisodeOfferContentIDsIntent - 8);
  *(void *)(v8 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_1003ECB28, 0, 0);
}

uint64_t sub_1003ECB28()
{
  uint64_t v1 = (void *)v0[4];
  swift_bridgeObjectRetain();
  FindOrCreateEpisodeOfferContentIDsIntent.init(episodeOffers:)();
  uint64_t v2 = v1[39];
  uint64_t v3 = v1[40];
  sub_100041A98(v1 + 36, v2);
  uint64_t v4 = v1[35];
  v0[13] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  uint64_t v6 = sub_1003FD990(&qword_1006091D8, (void (*)(uint64_t))&type metadata accessor for FindOrCreateEpisodeOfferContentIDsIntent);
  *uint64_t v5 = v0;
  v5[1] = sub_1003ECC54;
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[10];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v7, v4, v8, v6, v2, v3);
}

uint64_t sub_1003ECC54()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003FDC50;
  }
  else {
    uint64_t v2 = sub_1003ECD68;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003ECD68()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1 + 36;
  v0[16] = v0[2];
  swift_bridgeObjectRetain();
  BookmarkEpisodeIntent.init(episodeIdentifiers:)();
  uint64_t v3 = v1[39];
  uint64_t v4 = v1[40];
  sub_100041A98(v2, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  uint64_t v6 = sub_1003FD990(&qword_1006091E0, (void (*)(uint64_t))&type metadata accessor for BookmarkEpisodeIntent);
  *uint64_t v5 = v0;
  v5[1] = sub_1003ECE84;
  uint64_t v7 = v0[13];
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[7];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v6, v8, v7, v9, v6, v3, v4);
}

uint64_t sub_1003ECE84()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003FDC6C;
  }
  else {
    uint64_t v2 = sub_1003ECF98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003ECF98()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  int v6 = *(unsigned __int8 *)(v0 + 152);
  (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
  sub_1003EF354(1, v6, v4, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003ED088(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1003EE11C(a1, a2, a3, a4, (uint64_t)&type metadata for String, "LibraryActionController.removeEpisodesFromBookmarks() - for episodes UUID %s", (uint64_t)&unk_1005696E8, (uint64_t)&unk_1006092C0);
}

uint64_t sub_1003ED0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 32) = a7;
  *(void *)(v8 + 40) = a8;
  *(unsigned char *)(v8 + 96) = a6;
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  uint64_t v9 = type metadata accessor for UnbookmarkEpisodeIntent();
  *(void *)(v8 + 48) = v9;
  *(void *)(v8 + 56) = *(void *)(v9 - 8);
  *(void *)(v8 + 64) = swift_task_alloc();
  return _swift_task_switch(sub_1003ED180, 0, 0);
}

uint64_t sub_1003ED180()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v20 = v0;
    sub_1001BA838(0, v3, 0);
    unint64_t v4 = _swiftEmptyArrayStorage[2];
    uint64_t v5 = 24 * v4 + 48;
    int v6 = (uint64_t *)(v2 + 40);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v4 >= v9 >> 1) {
        sub_1001BA838(v9 > 1, v4 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v4 + 1;
      uint64_t v10 = (char *)_swiftEmptyArrayStorage + v5;
      *((void *)v10 - 2) = v8;
      *((void *)v10 - 1) = v7;
      *uint64_t v10 = 2;
      v5 += 24;
      v6 += 2;
      ++v4;
      --v3;
    }
    while (v3);
    uint64_t v1 = v20;
  }
  v1[9] = _swiftEmptyArrayStorage;
  uint64_t v11 = (void *)v1[2];
  swift_bridgeObjectRetain();
  UnbookmarkEpisodeIntent.init(episodeIdentifiers:)();
  uint64_t v12 = v11[39];
  uint64_t v13 = v11[40];
  sub_100041A98(v11 + 36, v12);
  uint64_t v14 = v11[35];
  uint64_t v15 = (void *)swift_task_alloc();
  v1[10] = v15;
  uint64_t v16 = sub_1003FD990(&qword_100609290, (void (*)(uint64_t))&type metadata accessor for UnbookmarkEpisodeIntent);
  *uint64_t v15 = v1;
  v15[1] = sub_1003ED36C;
  uint64_t v17 = v1[8];
  uint64_t v18 = v1[6];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v16, v17, v14, v18, v16, v12, v13);
}

uint64_t sub_1003ED36C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003ED538;
  }
  else {
    uint64_t v2 = sub_1003ED480;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003ED480()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  int v3 = *(unsigned __int8 *)(v0 + 96);
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  sub_1003EF354(0, v3, v1, v2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1003ED538()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1003ED5C0(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  int v33 = a2;
  sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin();
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v31 = a3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v32 = a4;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v35 = v28;
    uint64_t v30 = v10;
    *(_DWORD *)uint64_t v18 = 136315138;
    v27[1] = v18 + 4;
    type metadata accessor for EpisodeOffer();
    swift_bridgeObjectRetain();
    uint64_t v19 = Array.description.getter();
    uint64_t v29 = v11;
    uint64_t v20 = v5;
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v23 = v19;
    a3 = v31;
    uint64_t v34 = sub_10004B974(v23, v22, &v35);
    uint64_t v10 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v5 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "LibraryActionController.removeEpisodesFromBookmarks() - for episode offers %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v32;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v29);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v24 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  *(void *)(v25 + 32) = a1;
  *(void *)(v25 + 40) = v5;
  *(unsigned char *)(v25 + 48) = v33 & 1;
  *(void *)(v25 + 56) = a3;
  *(void *)(v25 + 64) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004ACDC(a3);
  sub_10000D90C((uint64_t)v10, (uint64_t)&unk_1006092B0, v25);
  return swift_release();
}

uint64_t sub_1003ED928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = a8;
  *(unsigned char *)(v8 + 152) = a6;
  *(void *)(v8 + 24) = a4;
  *(void *)(v8 + 32) = a5;
  uint64_t v9 = type metadata accessor for UnbookmarkEpisodeIntent();
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = *(void *)(v9 - 8);
  *(void *)(v8 + 72) = swift_task_alloc();
  uint64_t EpisodeOfferContentIDsIntent = type metadata accessor for FindOrCreateEpisodeOfferContentIDsIntent();
  *(void *)(v8 + 80) = EpisodeOfferContentIDsIntent;
  *(void *)(v8 + 88) = *(void *)(EpisodeOfferContentIDsIntent - 8);
  *(void *)(v8 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_1003EDA4C, 0, 0);
}

uint64_t sub_1003EDA4C()
{
  uint64_t v1 = (void *)v0[4];
  swift_bridgeObjectRetain();
  FindOrCreateEpisodeOfferContentIDsIntent.init(episodeOffers:)();
  uint64_t v2 = v1[39];
  uint64_t v3 = v1[40];
  sub_100041A98(v1 + 36, v2);
  uint64_t v4 = v1[35];
  v0[13] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  uint64_t v6 = sub_1003FD990(&qword_1006091D8, (void (*)(uint64_t))&type metadata accessor for FindOrCreateEpisodeOfferContentIDsIntent);
  *uint64_t v5 = v0;
  v5[1] = sub_1003EDB78;
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[10];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v7, v4, v8, v6, v2, v3);
}

uint64_t sub_1003EDB78()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003EE064;
  }
  else {
    uint64_t v2 = sub_1003EDC8C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003EDC8C()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1 + 36;
  v0[16] = v0[2];
  swift_bridgeObjectRetain();
  UnbookmarkEpisodeIntent.init(episodeIdentifiers:)();
  uint64_t v3 = v1[39];
  uint64_t v4 = v1[40];
  sub_100041A98(v2, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  uint64_t v6 = sub_1003FD990(&qword_100609290, (void (*)(uint64_t))&type metadata accessor for UnbookmarkEpisodeIntent);
  *uint64_t v5 = v0;
  v5[1] = sub_1003EDDA8;
  uint64_t v7 = v0[13];
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[7];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v6, v8, v7, v9, v6, v3, v4);
}

uint64_t sub_1003EDDA8()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003EDFAC;
  }
  else {
    uint64_t v2 = sub_1003EDEBC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003EDEBC()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  int v6 = *(unsigned __int8 *)(v0 + 152);
  (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
  sub_1003EF354(0, v6, v4, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003EDFAC()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1003EE064()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1003EE0EC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1003EE11C(a1, a2, a3, a4, (uint64_t)&type metadata for Int64, "LibraryActionController.removeEpisodesFromBookmarks() - for storeIds %s", (uint64_t)&unk_100569698, (uint64_t)&unk_1006092A0);
}

uint64_t sub_1003EE11C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v11 = v8;
  int v39 = a2;
  sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin();
  long long v40 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v38 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v33 = a3;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v34 = a4;
    unint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v35 = a8;
    uint64_t v42 = v23;
    v32[1] = a7;
    *(_DWORD *)unint64_t v22 = 136315138;
    v32[0] = v22 + 4;
    swift_bridgeObjectRetain();
    uint64_t v24 = Array.description.getter();
    uint64_t v36 = v11;
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = v24;
    a3 = v33;
    uint64_t v41 = sub_10004B974(v27, v26, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v11 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v37, v22, 0xCu);
    swift_arrayDestroy();
    a8 = v35;
    swift_slowDealloc();
    a4 = v34;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v38);
  uint64_t v28 = type metadata accessor for TaskPriority();
  uint64_t v29 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v40, 1, 1, v28);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  *(void *)(v30 + 32) = v11;
  *(void *)(v30 + 40) = a1;
  *(unsigned char *)(v30 + 48) = v39 & 1;
  *(void *)(v30 + 56) = a3;
  *(void *)(v30 + 64) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004ACDC(a3);
  sub_10000D90C(v29, a8, v30);
  return swift_release();
}

uint64_t sub_1003EE460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 32) = a7;
  *(void *)(v8 + 40) = a8;
  *(unsigned char *)(v8 + 96) = a6;
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  uint64_t v9 = type metadata accessor for UnbookmarkEpisodeIntent();
  *(void *)(v8 + 48) = v9;
  *(void *)(v8 + 56) = *(void *)(v9 - 8);
  *(void *)(v8 + 64) = swift_task_alloc();
  return _swift_task_switch(sub_1003EE528, 0, 0);
}

uint64_t sub_1003EE528()
{
  uint64_t v1 = v0[3];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_1001BA838(0, v2, 0);
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 8;
      uint64_t v4 = AdamID.init(rawValue:)();
      unint64_t v6 = _swiftEmptyArrayStorage[2];
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v6 >= v5 >> 1) {
        sub_1001BA838(v5 > 1, v6 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v6 + 1;
      uint64_t v7 = &_swiftEmptyArrayStorage[3 * v6];
      v7[4] = v4;
      v7[5] = 0;
      *((unsigned char *)v7 + 48) = 0;
      --v2;
    }
    while (v2);
  }
  v0[9] = _swiftEmptyArrayStorage;
  uint64_t v8 = (void *)v0[2];
  swift_bridgeObjectRetain();
  UnbookmarkEpisodeIntent.init(episodeIdentifiers:)();
  uint64_t v9 = v8[39];
  uint64_t v10 = v8[40];
  sub_100041A98(v8 + 36, v9);
  uint64_t v11 = v8[35];
  uint64_t v12 = (void *)swift_task_alloc();
  v0[10] = v12;
  uint64_t v13 = sub_1003FD990(&qword_100609290, (void (*)(uint64_t))&type metadata accessor for UnbookmarkEpisodeIntent);
  void *v12 = v0;
  v12[1] = sub_1003EE6EC;
  uint64_t v14 = v0[8];
  uint64_t v15 = v0[6];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v13, v14, v11, v15, v13, v9, v10);
}

uint64_t sub_1003EE6EC()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    int64_t v2 = sub_1003FDB48;
  }
  else {
    int64_t v2 = sub_1003FDC44;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003EE800(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a1;
  sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v26 = a3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = a4;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v24 = v11;
    uint64_t v30 = v19;
    unint64_t v25 = v10;
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10004B974(v28, a2, &v30);
    uint64_t v10 = v25;
    a3 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "LibraryActionController.removeEpisodesFromBookmarks() - for podcast UUID %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v27;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v20 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = 0;
  v21[3] = 0;
  v21[4] = v28;
  v21[5] = a2;
  v21[6] = v5;
  v21[7] = a3;
  v21[8] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004ACDC(a3);
  sub_10000D90C((uint64_t)v10, (uint64_t)&unk_100609280, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_1003EEB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  uint64_t v9 = type metadata accessor for UnbookmarkEpisodeIntent();
  v8[8] = v9;
  v8[9] = *(void *)(v9 - 8);
  v8[10] = swift_task_alloc();
  uint64_t ShowEpisodesIntent = type metadata accessor for FindShowEpisodesIntent();
  v8[11] = ShowEpisodesIntent;
  v8[12] = *(void *)(ShowEpisodesIntent - 8);
  v8[13] = swift_task_alloc();
  return _swift_task_switch(sub_1003EEC50, 0, 0);
}

uint64_t sub_1003EEC50()
{
  uint64_t v1 = (void *)v0[5];
  int64_t v2 = self;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 predicateForBookmarkedEpisodesOnPodcastUuid:v3];

  swift_bridgeObjectRetain();
  FindShowEpisodesIntent.init(showIdentifier:predicate:limit:sortDescriptors:)();
  uint64_t v5 = v1[39];
  uint64_t v6 = v1[40];
  sub_100041A98(v1 + 36, v5);
  uint64_t v7 = v1[35];
  v0[14] = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  uint64_t v9 = sub_1003FD990(&qword_100609288, (void (*)(uint64_t))&type metadata accessor for FindShowEpisodesIntent);
  void *v8 = v0;
  v8[1] = sub_1003EEDEC;
  uint64_t v10 = v0[13];
  uint64_t v11 = v0[11];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v10, v7, v11, v9, v5, v6);
}

uint64_t sub_1003EEDEC()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    int64_t v2 = sub_1003EF2CC;
  }
  else {
    int64_t v2 = sub_1003EEF00;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003EEF00()
{
  uint64_t v1 = (void *)v0[5];
  int64_t v2 = v1 + 36;
  v0[17] = v0[2];
  swift_bridgeObjectRetain();
  UnbookmarkEpisodeIntent.init(episodeIdentifiers:)();
  uint64_t v3 = v1[39];
  uint64_t v4 = v1[40];
  sub_100041A98(v2, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[18] = v5;
  uint64_t v6 = sub_1003FD990(&qword_100609290, (void (*)(uint64_t))&type metadata accessor for UnbookmarkEpisodeIntent);
  *uint64_t v5 = v0;
  v5[1] = sub_1003EF01C;
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[8];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v6, v8, v7, v9, v6, v3, v4);
}

uint64_t sub_1003EF01C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    int64_t v2 = sub_1003EF214;
  }
  else {
    int64_t v2 = sub_1003EF130;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003EF130()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  sub_1003EF354(0, 0, v4, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1003EF214()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1003EF2CC()
{
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1003EF354(int a1, int a2, uint64_t a3, uint64_t a4)
{
  int v18 = a2;
  int v19 = a1;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v18;
  *(unsigned char *)(v15 + 17) = v19;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = a4;
  aBlock[4] = sub_1003FCEF8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100569638;
  os_log_type_t v16 = _Block_copy(aBlock);
  sub_10004ACDC(a3);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003FD990((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
}

void sub_1003EF680(char a1, char a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = type metadata accessor for HUDViewController.HUDType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0) {
    goto LABEL_8;
  }
  if (a2)
  {
    swift_beginAccess();
    if (!swift_weakLoadStrong()) {
      goto LABEL_8;
    }
    uint64_t v11 = (unsigned int *)&enum case for HUDViewController.HUDType.addedToBookmarks(_:);
  }
  else
  {
    swift_beginAccess();
    if (!swift_weakLoadStrong()) {
      goto LABEL_8;
    }
    uint64_t v11 = (unsigned int *)&enum case for HUDViewController.HUDType.removedFromBookmarks(_:);
  }
  swift_unknownObjectRetain();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *v11, v7);
  id v12 = objc_allocWithZone((Class)type metadata accessor for HUDViewController());
  uint64_t v13 = (void *)HUDViewController.init(type:)();
  dispatch thunk of HUDViewController.present()();
  swift_unknownObjectRelease();

LABEL_8:
  if (a4) {
    a4(1);
  }
}

void sub_1003EF814(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithEntityName:v9];

  if ((a2 & 1) == 0) {
    [v10 setFetchLimit:a1];
  }
  [v10 setPredicate:a3];
  sub_10004D29C(0, (unint64_t *)&unk_1005F9460);
  uint64_t v11 = NSManagedObjectContext.count<A>(for:)();

  *a4 = v11;
}

void sub_1003EF93C(void *a1)
{
  id v2 = [self sharedInstance];
  id v3 = [v2 mainOrPrivateContext];

  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = a1;
  v9[4] = sub_1003FCEA4;
  void v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10003B424;
  long long v9[3] = &unk_1005695E8;
  uint64_t v6 = _Block_copy(v9);
  id v7 = v3;
  id v8 = a1;
  swift_release();
  [v7 performBlock:v6];
  _Block_release(v6);
}

void sub_1003EFA8C(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    id v7 = kMTEpisodeEntityName;
    unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v10 = [a2 objectsInEntity:v7 predicate:a3 sortDescriptors:isa];

    if (v10)
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F7130);
      unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v12 = sub_10003CCDC(v11);
      swift_bridgeObjectRelease();
      if (v12) {
        unint64_t v8 = (unint64_t)v12;
      }
    }
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v13)
      {
LABEL_7:
        if (v13 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v14 = 0;
        do
        {
          if ((v8 & 0xC000000000000001) != 0) {
            id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v15 = *(id *)(v8 + 8 * v14 + 32);
          }
          os_log_type_t v16 = v15;
          ++v14;
          sub_100041A98((void *)(v6 + 144), *(void *)(v6 + 168));
          dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveFromRecoveredEpisodesIfNeeded(episode:)();
        }
        while (v13 != v14);
      }
    }
    swift_bridgeObjectRelease();
    [a2 saveInCurrentBlock];
    swift_release();
  }
}

void sub_1003EFC90(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithEntityName:v5];

  [v6 setPredicate:a1];
  sub_10004D29C(0, (unint64_t *)&unk_1005F9460);
  uint64_t v7 = NSManagedObjectContext.count<A>(for:)();

  *a2 = v7;
}

void sub_1003EFD90(uint64_t a1, void *a2)
{
  id v3 = self;
  id v4 = [v3 mainBundle];
  v5._uint64_t countAndFlagsBits = 0xD000000000000034;
  v25._object = (void *)0xE000000000000000;
  v5._object = (void *)0x80000001004E3350;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v25);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [self alertControllerWithTitle:v7 message:0 preferredStyle:0];

  id v9 = [v3 mainBundle];
  v26._object = (void *)0xE000000000000000;
  v10._object = (void *)0x80000001004E3390;
  v10._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v26);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a2;
  swift_retain();
  id v14 = a2;
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1003FCE54;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001F2B1C;
  uint64_t aBlock[3] = &unk_100569598;
  os_log_type_t v16 = _Block_copy(aBlock);
  swift_release();
  uint64_t v17 = self;
  id v18 = [v17 actionWithTitle:v15 style:0 handler:v16];
  _Block_release(v16);

  swift_release();
  [v8 addAction:v18];

  id v19 = [v3 mainBundle];
  v27._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v20._object = (void *)0xE600000000000000;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v27);

  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [v17 actionWithTitle:v22 style:1 handler:0];

  [v8 addAction:v23];
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)();
}

uint64_t sub_1003F00F8(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003F0514(a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1003F0158(void *a1)
{
  uint64_t v2 = type metadata accessor for SheetActionStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  Swift::String v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  Swift::String v6 = self;
  id v7 = [v6 mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD000000000000034;
  v21._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001004E3350;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v21);
  v20[1] = v10._object;
  void v20[2] = v10._countAndFlagsBits;

  id v11 = [v6 mainBundle];
  v22._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000001004E3390;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v22);

  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a1;
  swift_retain();
  id v16 = a1;
  LOBYTE(v11) = static Link.Presentation.textFollowsTintColor.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v11) {
    Link.Presentation.init(rawValue:)();
  }
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for ClosureAction();
  swift_allocObject();
  uint64_t v17 = ClosureAction.init(title:presentationStyle:actionMetrics:closure:)();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10046D060;
  *(void *)(v18 + 32) = v17;
  v20[3] = v18;
  specialized Array._endMutation()();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for SheetActionStyle.defaultStyle(_:), v2);
  type metadata accessor for SheetAction();
  swift_allocObject();
  return SheetAction.init(title:sheetTitle:message:actions:cancellable:style:)();
}

uint64_t sub_1003F04B4(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003F0514(a2);
    return swift_release();
  }
  return result;
}

void sub_1003F0514(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [self predicateForVisuallyPlayed:0];
  id v5 = [a1 AND:v4];

  if (static Podcasts.isBlueMoonEnabled()())
  {
    uint64_t v6 = *(void *)(v2 + 328);
    if (v6)
    {
      swift_retain();
      id v7 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter();
      swift_release();
      if (v7)
      {
        uint64_t v6 = MPModelObject.uuid.getter();
        unint64_t v9 = v8;

        goto LABEL_13;
      }
      uint64_t v6 = 0;
    }
    unint64_t v9 = 0;
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)(v2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
  if (v13) {
    uint64_t v6 = v12;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v13) {
    unint64_t v9 = v13;
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
LABEL_13:
  id v14 = [self sharedInstance];
  id v15 = [v14 privateQueueContext];

  id v16 = (void *)swift_allocObject();
  v16[2] = v5;
  void v16[3] = v15;
  v16[4] = v6;
  v16[5] = v9;
  v16[6] = v2;
  void v20[4] = sub_1003FCD2C;
  void v20[5] = v16;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  void v20[2] = sub_10003B424;
  v20[3] = &unk_1005694D0;
  uint64_t v17 = _Block_copy(v20);
  id v18 = v5;
  id v19 = v15;
  swift_retain();
  swift_release();
  [v19 performBlock:v17];
  _Block_release(v17);
}

void sub_1003F072C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a5;
  uint64_t v55 = a3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v48 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v47 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin();
  id v46 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v51 = *(void *)(v15 - 8);
  uint64_t v52 = v15;
  __chkstk_darwin();
  uint64_t v56 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v17 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithEntityName:v18];

  [v19 setPredicate:a1];
  [v19 setReturnsObjectsAsFaults:0];
  [v19 setFetchBatchSize:50];
  sub_10004D29C(0, (unint64_t *)&qword_100603220);
  id v53 = v19;
  id v54 = a2;
  NSManagedObjectContext.fetch<A>(_:)();
  v20.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Swift::String v21 = v56;
  NSArray.makeIterator()();
  NSFastEnumerationIterator.next()();
  if (v61)
  {
    Class isa = v20.super.isa;
    uint64_t v42 = v12;
    uint64_t v43 = v10;
    uint64_t v44 = v11;
    uint64_t v45 = v8;
    uint64_t v22 = 0;
    int v23 = 0;
    do
    {
      sub_10004D384(&aBlock, &v58);
      swift_dynamicCast();
      uint64_t v24 = v57;
      id v25 = [self sharedInstance];
      if (!v25) {
        goto LABEL_25;
      }
      Swift::String v26 = v25;
      [v25 setPlayState:0 fromContextActions:1 manually:1 forUserActionOnEpisode:v24 saveChanges:0];

      id v27 = [v24 uuid];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;

        if (a4)
        {
          if (v29 == v55 && v31 == a4)
          {
            swift_bridgeObjectRelease();
            int v23 = 1;
          }
          else
          {
            int v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            v23 |= v32;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        Swift::String v21 = v56;
      }
      else
      {
        v23 |= a4 == 0;
      }
      if (__OFADD__(v22, 1))
      {
        __break(1u);
LABEL_25:
        __break(1u);
        return;
      }
      if (__ROR8__(0x51EB851EB851EB8 - 0x70A3D70A3D70A3D7 * (v22 + 1), 1) <= 0x51EB851EB851EB8uLL) {
        [v54 saveInCurrentBlock];
      }

      NSFastEnumerationIterator.next()();
      ++v22;
    }
    while (v61);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v52);
    [v54 saveInCurrentBlock];
    v20.super.Class isa = isa;
    if ((v23 & 1) == 0) {
      goto LABEL_21;
    }
    if (static Podcasts.isBlueMoonEnabled()())
    {
      uint64_t v33 = type metadata accessor for TaskPriority();
      uint64_t v34 = (uint64_t)v46;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v46, 1, 1, v33);
      uint64_t v35 = (void *)swift_allocObject();
      void v35[2] = 0;
      void v35[3] = 0;
      v35[4] = v50;
      swift_retain();
      sub_1003E5360(v34, (uint64_t)&unk_100609270, (uint64_t)v35);
      swift_release();
      goto LABEL_21;
    }
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    uint64_t v36 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v62 = sub_1003FCD44;
    uint64_t v63 = v50;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v60 = sub_10003B424;
    unint64_t v61 = &unk_1005694F8;
    uint64_t v37 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v38 = v47;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_1003FD990((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    Class v39 = v20.super.isa;
    sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
    long long v40 = v43;
    uint64_t v41 = v45;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();

    _Block_release(v37);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v40, v41);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v44);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v52);
    [v54 saveInCurrentBlock];
LABEL_21:
  }
}

uint64_t sub_1003F0F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_1003F0F2C, 0, 0);
}

uint64_t sub_1003F0F2C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 328);
  *(void *)(v0 + 32) = v1;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1003F1014;
    return PlaybackController.pause()();
  }
  else
  {
    **(unsigned char **)(v0 + 16) = 1;
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1003F1014()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003F115C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003F1130;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003F1130()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003F115C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1003F11C0(void *a1, char a2)
{
  id v5 = [self sharedInstance];
  id v6 = [v5 privateQueueContext];

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = v6;
  *(void *)(v7 + 32) = v2;
  *(unsigned char *)(v7 + 40) = a2;
  v11[4] = sub_1003FCCA4;
  v11[5] = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  long long v11[2] = sub_10003B424;
  v11[3] = &unk_100569430;
  uint64_t v8 = _Block_copy(v11);
  id v9 = a1;
  id v10 = v6;
  swift_retain();
  swift_release();
  [v10 performBlock:v8];
  _Block_release(v8);
}

uint64_t sub_1003F1300(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v37 = a4;
  uint64_t v38 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin();
  uint64_t v41 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin();
  Class v39 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v33 = *(void *)(v34 - 8);
  __chkstk_darwin();
  id v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithEntityName:v11];

  [v12 setPredicate:a1];
  [v12 setReturnsObjectsAsFaults:0];
  sub_10004D29C(0, (unint64_t *)&qword_100603220);
  id v36 = v12;
  NSManagedObjectContext.fetch<A>(_:)();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v35 = isa;
  NSArray.makeIterator()();
  NSFastEnumerationIterator.next()();
  if (v49)
  {
    uint64_t v32 = 0;
    uint64_t v14 = (char *)_swiftEmptyArrayStorage;
    do
    {
      while (1)
      {
        sub_10004D384(&aBlock, &v46);
        swift_dynamicCast();
        id v15 = v45;
        id v16 = [v45 uuid:v32];
        if (v16) {
          break;
        }

        NSFastEnumerationIterator.next()();
        if (!v49) {
          goto LABEL_13;
        }
      }
      id v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_10004CEAC(0, *((void *)v14 + 2) + 1, 1, v14);
      }
      unint64_t v22 = *((void *)v14 + 2);
      unint64_t v21 = *((void *)v14 + 3);
      if (v22 >= v21 >> 1) {
        uint64_t v14 = sub_10004CEAC((char *)(v21 > 1), v22 + 1, 1, v14);
      }
      *((void *)v14 + 2) = v22 + 1;
      int v23 = &v14[16 * v22];
      *((void *)v23 + 4) = v18;
      *((void *)v23 + 5) = v20;

      NSFastEnumerationIterator.next()();
    }
    while (v49);
  }
  else
  {
    uint64_t v14 = (char *)_swiftEmptyArrayStorage;
  }
LABEL_13:
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v38;
  *(void *)(v25 + 16) = v14;
  *(void *)(v25 + 24) = v26;
  *(unsigned char *)(v25 + 32) = v37 & 1;
  uint64_t v50 = sub_1003FCCD0;
  uint64_t v51 = v25;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v48 = sub_10003B424;
  uint64_t v49 = &unk_100569480;
  id v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v28 = v39;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_1003FD990((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  uint64_t v29 = v41;
  uint64_t v30 = v44;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v28, v42);
}

uint64_t sub_1003F1914(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = (void *)(a2 + 144);
    uint64_t v5 = swift_bridgeObjectRetain() + 40;
    do
    {
      sub_100041A98(v4, *(void *)(a2 + 168));
      swift_bridgeObjectRetain();
      dispatch thunk of PodcastsStateCoordinatorProtocol.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:)();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1003F1A04(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1 && (id v3 = [a1 title]) != 0)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_1003F1A6C(uint64_t a1, uint64_t a2)
{
  id v5 = [self sharedInstance];
  id v6 = [v5 mainOrPrivateContext];

  char v15 = 2;
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = &v15;
  v7[5] = v2;
  void v7[6] = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1003FCC3C;
  *(void *)(v8 + 24) = v7;
  aBlock[4] = sub_100018840;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  uint64_t aBlock[3] = &unk_1005693E0;
  id v9 = _Block_copy(aBlock);
  id v10 = v6;
  swift_retain();
  swift_retain();
  swift_release();
  [v10 performBlockAndWait:v9];

  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    char v13 = v15;
    swift_release();
    return v13 & 1;
  }
  return result;
}

void sub_1003F1C30(void *a1, uint64_t a2, BOOL *a3, uint64_t a4, uint64_t a5)
{
  id v7 = [a1 podcastForStoreId:a2];
  if (v7)
  {
    id v14 = v7;
    id v8 = [v7 uuid];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      BOOL v13 = sub_1003FBD78(v10, v12, a5);
      swift_bridgeObjectRelease();

      *a3 = v13;
    }
    else
    {
    }
  }
}

id sub_1003F1D10(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 episodeForStoreTrackID:a2];
  if (v8)
  {
    id v9 = v8;
    id v10 = [v8 podcast];
    if (v10)
    {
      uint64_t v11 = v10;
      Date.init()();
      Date.timeIntervalSinceReferenceDate.getter();
      double v13 = v12;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      [v11 setLastDismissedEpisodeUpsellBannerDate:v13];
    }
    else
    {
    }
  }
  return [a1 saveInCurrentBlock];
}

uint64_t sub_1003F1E64(uint64_t a1, unint64_t a2, char a3, char a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin();
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  double v12 = (char *)&v25 - v11;
  double v13 = self;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 predicateForDownloadedEpisodesOnPodcastUuid:v14];

  sub_1003F11C0(v15, a4);
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v13 predicateForBookmarksMigrationRecoveredEpisodesOnPodcastUuid:v16];

  sub_1003EF93C(v17);
  if (a3)
  {
    static Logger.podcastsStatesCoordination.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_10004B974(a1, a2, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "removeShowFromLibrary and all bookmarks for podcasts %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v26);
    return sub_1003EE800(a1, a2, 0, 0);
  }
  else
  {
    static Logger.podcastsStatesCoordination.getter();
    swift_bridgeObjectRetain_n();
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      int v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)int v23 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_10004B974(a1, a2, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "removeShowFromLibrary wihtout removing bookmarks for podcasts %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v26);
  }
}

uint64_t sub_1003F2280()
{
  type metadata accessor for StoreReviewPromptController();
  static StoreReviewPromptController.shared.getter();
  dispatch thunk of StoreReviewPromptController.didFollowShow()();

  return swift_release();
}

void sub_1003F22C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1003F22F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(id), uint64_t a6)
{
  uint64_t v6 = a5;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v19 = a6;
    uint64_t v20 = a5;
    uint64_t v11 = (void *)(a3 + 144);
    swift_bridgeObjectRetain_n();
    id v12 = a2;
    uint64_t v13 = a1 + 40;
    uint64_t v14 = 1 - v9;
    do
    {
      swift_bridgeObjectRetain();
      NSString v15 = String._bridgeToObjectiveC()();
      id v16 = [v12 episodeForUuid:v15];
      swift_bridgeObjectRelease();

      if (v16)
      {
        sub_100041A98(v11, *(void *)(a3 + 168));
        dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeMark(_:as:in:from:)();

        if (!v14)
        {
LABEL_7:
          swift_bridgeObjectRelease();
          uint64_t v6 = v20;
          goto LABEL_9;
        }
      }
      else if (!v14)
      {
        goto LABEL_7;
      }
      v13 += 16;
      ++v14;
    }
    while (v14 != 1);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    id v17 = a2;
LABEL_9:
    id v18 = [a2 saveInCurrentBlock:v19, v20];
    if (v6) {
      v6(v18);
    }

    swift_bridgeObjectRelease();
  }
}

void sub_1003F247C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1003F24A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = v7;
  id v15 = [self sharedInstance];
  id v16 = [v15 mainOrPrivateContext];

  id v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = v16;
  void v17[4] = v10;
  v17[5] = a2;
  void v17[6] = a3;
  v17[7] = a4;
  void v20[4] = a6;
  void v20[5] = v17;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  void v20[2] = sub_10003B424;
  v20[3] = a7;
  id v18 = _Block_copy(v20);
  swift_bridgeObjectRetain();
  id v19 = v16;
  swift_retain();
  sub_10004ACDC(a3);
  swift_release();
  [v19 performBlock:v18];
  _Block_release(v18);
}

id sub_1003F2600(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(id))
{
  uint64_t v5 = a5;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    type metadata accessor for CoreDataFetcher();
    uint64_t v10 = *(void *)(type metadata accessor for EpisodeOffer() - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v13 = (void *)static CoreDataFetcher.unsafeFindOrCreateStoreEpisode(for:in:)();
      sub_100041A98((void *)(a3 + 144), *(void *)(a3 + 168));
      dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeMark(_:as:in:from:)();

      v11 += v12;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v5 = a5;
  }
  id result = [a2 saveInCurrentBlock];
  if (v5) {
    return (id)v5(result);
  }
  return result;
}

void sub_1003F2758(void *a1, uint64_t a2)
{
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = kMTEpisodeEntityName;
  unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v10 = [a1 objectsInEntity:v7 predicate:a2 sortDescriptors:isa];

  if (v10)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F7130);
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v12 = sub_10003CCDC(v11);
    swift_bridgeObjectRelease();
    if (v12) {
      unint64_t v8 = (unint64_t)v12;
    }
  }
  if (!(v8 >> 62))
  {
    uint64_t v13 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
LABEL_17:
    [a1 saveInCurrentBlock];
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_16;
  }
LABEL_6:
  if (v13 >= 1)
  {
    os_log_type_t v22 = a1;
    uint64_t v14 = 0;
    id v15 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v16 = *(id *)(v8 + 8 * v14 + 32);
      }
      id v17 = v16;
      [v16 setListenNowEpisode:0 v22];
      id v18 = [v17 podcast];
      if (v18)
      {
        id v19 = v18;
        Date.init()();
        Date.timeIntervalSinceReferenceDate.getter();
        double v21 = v20;
        (*v15)(v6, v23);
        [v19 setLastRemovedFromUpNextDate:v21];

        id v17 = v19;
      }
      ++v14;
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
    a1 = v22;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1003F2A10(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = [self sharedInstance];
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  unint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = v7;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a1;
  v11[4] = sub_1003FCAF4;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  long long v11[2] = sub_10026924C;
  v11[3] = &unk_1005692C8;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  id v10 = a1;
  swift_release();
  [v6 reportAConcernURLWithCompletion:v9];
  _Block_release(v9);
}

uint64_t sub_1003F2B54(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, void *a5)
{
  uint64_t v56 = a1;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78(&qword_1005F6D08);
  __chkstk_darwin();
  id v15 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1003FCB00();
    uint64_t v21 = swift_allocError();
    *os_log_type_t v22 = 0;
    *id v15 = v21;
    swift_storeEnumTagMultiPayload();
    a3(v15);
    return sub_100054B1C((uint64_t)v15, &qword_1005F6D08);
  }
  uint64_t v17 = Strong;
  uint64_t v54 = a4;
  id v18 = [a5 title];
  if (v18)
  {
    id v19 = v18;
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v20;
  }
  else
  {
    uint64_t v47 = 0;
    uint64_t v50 = 0;
  }
  uint64_t v51 = v11;
  uint64_t v52 = v10;
  uint64_t v23 = MPModelObject.adamID.getter();
  uint64_t v49 = a3;
  uint64_t v53 = v13;
  if (v24)
  {
    uint64_t v48 = 0;
    uint64_t v26 = 0;
  }
  else
  {
    v57[0] = v23;
    sub_1001A5874();
    uint64_t v48 = BinaryInteger.description.getter();
    uint64_t v26 = v25;
  }
  id v27 = [a5 podcast:v47];
  if (v27 && (v28 = v27, id v29 = [v27 title], v28, v29))
  {
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
  }
  id v33 = [a5 podcast];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = MPModelObject.adamID.getter();
    char v37 = v36;

    if ((v37 & 1) == 0)
    {
      v57[0] = v35;
      sub_1001A5874();
      id v33 = (id)BinaryInteger.description.getter();
      uint64_t v39 = v38;
      goto LABEL_18;
    }
    id v33 = 0;
  }
  uint64_t v39 = 0;
LABEL_18:
  uint64_t v40 = v49;
  v57[0] = v47;
  v57[1] = v50;
  void v57[2] = v48;
  v57[3] = v26;
  v57[4] = v30;
  v57[5] = v32;
  v57[6] = v33;
  v57[7] = v39;
  long long v58 = 0u;
  long long v59 = 0u;
  uint64_t v60 = 0;
  char v61 = 1;
  sub_100041A98((void *)(v17 + 184), *(void *)(v17 + 208));
  sub_100269ACC((uint64_t)v57, v56, (uint64_t)v9);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = v51;
  uint64_t v42 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v9, 1, v52) == 1)
  {
    sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
    sub_1003FCB00();
    uint64_t v43 = swift_allocError();
    *uint64_t v44 = 1;
    *id v15 = v43;
    swift_storeEnumTagMultiPayload();
    v40(v15);
    swift_release();
    return sub_100054B1C((uint64_t)v15, &qword_1005F6D08);
  }
  long long v46 = v55;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v55, v9, v42);
  (*(void (**)(uint64_t *, char *, uint64_t))(v41 + 16))(v15, v46, v42);
  swift_storeEnumTagMultiPayload();
  v40(v15);
  swift_release();
  sub_100054B1C((uint64_t)v15, &qword_1005F6D08);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v46, v42);
}

uint64_t sub_1003F3068()
{
  sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = *v0;
  if (static Podcasts.isBlueMoonEnabled()())
  {
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
    uint64_t v5 = (void *)swift_allocObject();
    v5[2] = 0;
    v5[3] = 0;
    v5[4] = v3;
    swift_retain();
    sub_10038E470((uint64_t)v2, (uint64_t)&unk_100609248, (uint64_t)v5);
    return swift_release();
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 40);
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  }
}

uint64_t sub_1003F319C(uint64_t a1)
{
  id v2 = [self _applePodcastsFoundationSharedUserDefaults];
  uint64_t v3 = swift_allocObject();
  sub_1001A5FC8(a1, v3 + 16);
  sub_1001C69A8(a1);
  type metadata accessor for MTEpisodePubDateLimit(0);
  sub_1003FD990(&qword_100609238, type metadata accessor for MTEpisodePubDateLimit);
  uint64_t v4 = NSUserDefaults.queryPublisher<A>(_:)();

  swift_release();
  return v4;
}

uint64_t sub_1003F328C(uint64_t a1)
{
  id v2 = [self _applePodcastsFoundationSharedUserDefaults];
  uint64_t v3 = swift_allocObject();
  sub_1001A5FC8(a1, v3 + 16);
  sub_1001C69A8(a1);
  sub_1003FC920();
  uint64_t v4 = NSUserDefaults.queryPublisher<A>(_:)();

  swift_release();
  return v4;
}

uint64_t sub_1003F3344(uint64_t a1)
{
  id v2 = [self _applePodcastsFoundationSharedUserDefaults];
  uint64_t v3 = swift_allocObject();
  sub_1001A5FC8(a1, v3 + 16);
  sub_1001C69A8(a1);
  uint64_t v4 = NSUserDefaults.queryPublisher<A>(_:)();

  swift_release();
  return v4;
}

uint64_t sub_1003F33FC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  return sub_1003E5D78(a1, a2, a3 & 1, a4, a5, a6, a7);
}

uint64_t sub_1003F3424(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_100054B78((uint64_t *)&unk_100609200);
  uint64_t v6 = Promise.__allocating_init()();
  type metadata accessor for CoreDataFetcher();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  v7[5] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  static CoreDataFetcher.fetchPodcast(with:completion:)();
  swift_release();
  return v6;
}

uint64_t sub_1003F34E8(uint64_t a1, uint64_t a2, char a3)
{
  sub_1003F98F8();
  sub_100054B78((uint64_t *)&unk_100609200);
  uint64_t v6 = Promise.__allocating_init()();
  type metadata accessor for CoreDataFetcher();
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  *(unsigned char *)(v8 + 48) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  static CoreDataFetcher.fetchPodcast(with:completion:)();
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1003F35EC()
{
  return sub_1003F36DC();
}

uint64_t sub_1003F360C()
{
  return sub_1003E6D24();
}

uint64_t sub_1003F3630()
{
  return sub_1003F36DC();
}

uint64_t sub_1003F3650()
{
  return sub_1003E6FB8();
}

uint64_t sub_1003F3674(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003E711C(a1, a2, a3);
}

uint64_t sub_1003F3698(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003E72C4(a1, a2, a3);
}

uint64_t sub_1003F36BC()
{
  return sub_1003F36DC();
}

uint64_t sub_1003F36DC()
{
  sub_100054B78((uint64_t *)&unk_100609200);
  uint64_t v0 = Promise.__allocating_init()();
  type metadata accessor for CoreDataFetcher();
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  swift_retain();
  swift_retain();
  static CoreDataFetcher.fetchPodcast(with:completion:)();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1003F37BC()
{
  return sub_1003E5C50();
}

uint64_t sub_1003F37E0(uint64_t a1, uint64_t a2, char a3)
{
  sub_100054B78((uint64_t *)&unk_100609210);
  uint64_t v4 = Promise.__allocating_init()();
  type metadata accessor for CoreDataFetcher();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  *(unsigned char *)(v6 + 32) = a3;
  swift_retain();
  swift_retain();
  static CoreDataFetcher.fetchPodcast(with:completion:)();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1003F38D4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003E7670(a1, a2, a3);
}

uint64_t sub_1003F38F8()
{
  sub_100054B78((uint64_t *)&unk_100609210);
  uint64_t v0 = Promise.__allocating_init()();
  type metadata accessor for CoreDataFetcher();
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  swift_retain();
  static CoreDataFetcher.fetchPodcast(adamId:feedUrl:completion:)();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1003F39DC()
{
  return sub_1003E83B0();
}

uint64_t sub_1003F3A00(uint64_t a1, uint64_t a2)
{
  sub_100054B78((uint64_t *)&unk_100609200);
  uint64_t v4 = Promise.__allocating_init()();
  type metadata accessor for CoreDataFetcher();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v4;
  v6[5] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  static CoreDataFetcher.fetchStation(with:completion:)();
  swift_release();
  swift_release();
  return v4;
}

void sub_1003F3AF0()
{
}

void sub_1003F3B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1003F3B28()
{
  id v0 = [self _applePodcastsFoundationSharedUserDefaults];
  uint64_t v1 = NSUserDefaults.showListSortType.getter();

  return v1;
}

void sub_1003F3B78()
{
  id v0 = [self _applePodcastsFoundationSharedUserDefaults];
  NSUserDefaults.showListSortType.setter();
}

uint64_t sub_1003F3BE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  type metadata accessor for CoreDataFetcher();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(unsigned char *)(v6 + 24) = a4;
  sub_1001A5A18(a3, a4);
  static CoreDataFetcher.fetchPodcast(with:completion:)();

  return swift_release();
}

uint64_t sub_1003F3C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CoreDataFetcher();
  *(void *)(swift_allocObject() + 16) = a3;
  static CoreDataFetcher.fetchPodcast(with:completion:)();

  return swift_release();
}

void sub_1003F3D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1003F3D40(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v5 = [self sharedInstance];
  if (v5)
  {
    uint64_t v6 = v5;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v6 *a4];
  }
  else
  {
    __break(1u);
  }
}

id sub_1003F3DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003F3DF4(a1, a2, a3, a4, a5, (SEL *)&selRef_setEpisodesOrder_forStation_);
}

id sub_1003F3DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003F3DF4(a1, a2, a3, a4, a5, (SEL *)&selRef_setStationShowGroupOrder_forStation_);
}

id sub_1003F3DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v8 = result;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v8 *a6 isa:v10];

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003F3EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, a2, ObjectType, v5);
  type metadata accessor for StationDetail();
  sub_10004BE90(v7, 0, 0, 0);
}

BOOL sub_1003F3F2C()
{
  id v0 = [self sharedInstance];
  if (v0)
  {
    NSString v1 = String._bridgeToObjectiveC()();
    [v0 deleteStationWithUuid:v1];
  }
  return v0 != 0;
}

uint64_t sub_1003F3FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003EAA00(a1, a2, a3, a4) & 1;
}

__n128 sub_1003F3FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1003EB0BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return result;
}

uint64_t sub_1003F4020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1003EB434(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1003F405C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1003EB6A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1003F4098(uint64_t a1)
{
  *(void *)(*(void *)v1 + 136) = a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_1003F40D8()
{
  return swift_retain();
}

void sub_1003F40E4()
{
  uint64_t v1 = *v0;
  id v2 = [self sharedInstance];
  id v3 = [v2 mainOrPrivateContext];

  sub_100041A98((void *)(v1 + 144), *(void *)(v1 + 168));
  dispatch thunk of PodcastsStateCoordinatorProtocol.downloadEpisode(withUUID:isFromSaving:from:in:)();
}

uint64_t sub_1003F41B0(uint64_t a1)
{
  return sub_1003EBB90(a1);
}

void sub_1003F41D4(uint64_t a1)
{
}

uint64_t sub_1003F41F8()
{
  sub_100041A98((void *)(*(void *)v0 + 144), *(void *)(*(void *)v0 + 168));
  return dispatch thunk of PodcastsStateCoordinatorProtocol.cancelAllDownloads(userInitiated:from:)();
}

uint64_t sub_1003F424C()
{
  sub_100041A98((void *)(*(void *)v0 + 144), *(void *)(*(void *)v0 + 168));
  return dispatch thunk of PodcastsStateCoordinatorProtocol.cancelDownload(forEpisodeWithUUID:userInitiated:from:)();
}

id sub_1003F42B4(uint64_t a1)
{
  return sub_1003EBF38(a1);
}

void sub_1003F42D8()
{
  id v1 = [*(id *)(*(void *)v0 + 48) downloadManager];
  id v2 = String._bridgeToObjectiveC()();
  [v1 resumeOrPauseEpisodeDownloadWithUuid:v2];
  swift_unknownObjectRelease();
}

uint64_t sub_1003F436C()
{
  sub_100041A98((void *)(*(void *)v0 + 144), *(void *)(*(void *)v0 + 168));
  return dispatch thunk of PodcastsStateCoordinatorProtocol.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:)();
}

uint64_t sub_1003F43D8(uint64_t a1)
{
  return sub_1003EC118(a1);
}

uint64_t sub_1003F43FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 112);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, a2, ObjectType, v5);
}

uint64_t sub_1003F4460(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin();
  NSString v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v4;
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = v11;
  *(void *)(v13 + 40) = a1;
  *(unsigned char *)(v13 + 48) = a2;
  *(void *)(v13 + 56) = a3;
  *(void *)(v13 + 64) = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10004ACDC(a3);
  sub_10000D90C((uint64_t)v10, (uint64_t)&unk_1006091F0, v13);
  return swift_release();
}

uint64_t sub_1003F459C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin();
  NSString v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v4;
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = v11;
  *(unsigned char *)(v13 + 48) = a2;
  *(void *)(v13 + 56) = a3;
  *(void *)(v13 + 64) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004ACDC(a3);
  sub_10000D90C((uint64_t)v10, (uint64_t)&unk_1006091D0, v13);
  return swift_release();
}

uint64_t sub_1003F46D8(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1003ED088(a1, a2, a3, a4);
}

uint64_t sub_1003F46FC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1003ED5C0(a1, a2, a3, a4);
}

uint64_t sub_1003F4720(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1003EE0EC(a1, a2, a3, a4);
}

uint64_t sub_1003F4744(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003EE800(a1, a2, a3, a4);
}

void sub_1003F4768()
{
  uint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 predicateForBookmarksMigrationRecoveredEpisodesOnPodcastUuid:v1];

  sub_1003EF93C(v2);
}

void sub_1003F4800()
{
  uint64_t v0 = self;
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1000505EC(v1);
  swift_bridgeObjectRelease();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v0 predicateForEpisodeUuids:isa];

  sub_1003EF93C(v3);
}

void sub_1003F48C4(uint64_t a1, void *a2)
{
}

uint64_t sub_1003F48E8(void *a1)
{
  return sub_1003F0158(a1);
}

void sub_1003F490C(void *a1)
{
}

void sub_1003F4938(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 predicateForDownloadedEpisodesOnPodcastUuid:v5];

  sub_1003F11C0(v6, a3);
}

void sub_1003F49E0()
{
  id v0 = [self predicateForDownloaded:1 excludeHidden:0];
  sub_1003F11C0(v0, 0);
}

uint64_t sub_1003F4A50(uint64_t a1, uint64_t a2)
{
  return sub_1003FBB74(a1, a2, (SEL *)&selRef_predicateForDownloadedEpisodesOnPodcastUuid_);
}

uint64_t sub_1003F4A84()
{
  id v0 = [self predicateForDownloaded:1 excludeHidden:0];
  id v1 = [self sharedInstance];
  id v2 = [v1 mainOrPrivateContext];

  NSManagedObjectContext.performAndWait<A>(_:)();
  return v4;
}

uint64_t sub_1003F4B68(uint64_t a1, uint64_t a2)
{
  return sub_1003FBB74(a1, a2, (SEL *)&selRef_predicateForBookmarkedEpisodesOnPodcastUuid_);
}

uint64_t sub_1003F4BA4(uint64_t a1, uint64_t a2)
{
  return sub_1003F1A6C(a1, a2) & 1;
}

uint64_t sub_1003F4BD0(uint64_t a1, unint64_t a2, char a3, char a4)
{
  return sub_1003F1E64(a1, a2, a3, a4);
}

uint64_t sub_1003F4BF4()
{
  id v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 predicateForPodcastUUID:v1];

  type metadata accessor for CoreDataFetcher();
  static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)();

  return v4;
}

void sub_1003F4CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1003F4CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1003F4CF8(void *a1, uint64_t a2, uint64_t a3)
{
}

void sub_1003F4D1C(uint64_t a1, uint64_t a2)
{
}

void sub_1003F4D28(uint64_t a1, uint64_t a2)
{
}

void sub_1003F4D34(uint64_t a1, uint64_t a2)
{
}

void sub_1003F4D40(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  type metadata accessor for HUDViewController.HUDType();
  __chkstk_darwin();
  (*(void (**)(char *, void))(v5 + 104))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *a3);
  id v6 = objc_allocWithZone((Class)type metadata accessor for HUDViewController());
  uint64_t v7 = (void *)HUDViewController.init(type:)();
  dispatch thunk of HUDViewController.present()();
}

uint64_t sub_1003F4E1C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1003F4E44(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v5;
  return result;
}

uint64_t sub_1003F4E9C(uint64_t a1, char *a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for PlaybackIntent.Option();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1003FD990(&qword_1005F6418, (void (*)(uint64_t))&type metadata accessor for PlaybackIntent.Option);
  swift_bridgeObjectRetain();
  id v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    id v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1003FD990(&qword_1005F6420, (void (*)(uint64_t))&type metadata accessor for PlaybackIntent.Option);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      os_log_type_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        id v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *id v3 = 0x8000000000000000;
    sub_1003F6BC8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *id v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1003F51C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v7 = a4 & 1;
  uint64_t v8 = *v4;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  EpisodeStateIdentifier.hash(into:)();
  unint64_t v9 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v8 + 32));
  uint64_t v10 = v8 + 56;
  if (((*(void *)(v8 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    uint64_t v36 = a2;
    uint64_t v37 = a3;
    goto LABEL_9;
  }
  uint64_t v33 = -1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = 24 * v9;
  uint64_t v12 = *(void *)(v8 + 48) + 24 * v9;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  int v15 = v7;
  char v16 = *(unsigned char *)(v12 + 16);
  sub_1001DD838(*(void *)v12, v14, v16);
  char v17 = static EpisodeStateIdentifier.== infix(_:_:)();
  uint64_t v18 = a3;
  char v19 = v17;
  uint64_t v20 = v13;
  uint64_t v21 = v18;
  sub_1001DD848(v20, v14, v16);
  if ((v19 & 1) == 0)
  {
    uint64_t v36 = a2;
    uint64_t v37 = v21;
    unint64_t v9 = (v9 + 1) & ~v33;
    if ((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      while (1)
      {
        uint64_t v11 = 24 * v9;
        uint64_t v22 = *(void *)(v8 + 48) + 24 * v9;
        uint64_t v23 = *(void *)v22;
        uint64_t v24 = *(void *)(v22 + 8);
        char v25 = *(unsigned char *)(v22 + 16);
        sub_1001DD838(*(void *)v22, v24, v25);
        char v26 = static EpisodeStateIdentifier.== infix(_:_:)();
        sub_1001DD848(v23, v24, v25);
        if (v26) {
          break;
        }
        unint64_t v9 = (v9 + 1) & ~v33;
        int v7 = v15;
        if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_9;
        }
      }
      uint64_t v21 = v37;
      goto LABEL_11;
    }
    int v7 = v15;
LABEL_9:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v34;
    uint64_t *v34 = 0x8000000000000000;
    sub_1001DD838(v36, v37, v7);
    sub_1003F6E84(v36, v37, v7, v9, isUniquelyReferenced_nonNull_native);
    uint64_t *v34 = v38;
    swift_bridgeObjectRelease();
    *(void *)a1 = v36;
    *(void *)(a1 + 8) = v37;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 16) = v7 != 0;
    return result;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  sub_1001DD848(a2, v21, v15);
  uint64_t v29 = *(void *)(*v34 + 48) + v11;
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  char v32 = *(unsigned char *)(v29 + 16);
  *(void *)a1 = *(void *)v29;
  *(void *)(a1 + 8) = v31;
  *(unsigned char *)(a1 + 16) = v32;
  sub_1001DD838(v30, v31, v32);
  return 0;
}

uint64_t sub_1003F546C(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for MTCategory();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v29;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1003CB9AC(v7, result + 1);
    Swift::Int v30 = v22;
    unint64_t v23 = *(void *)(v22 + 16);
    if (*(void *)(v22 + 24) <= v23)
    {
      uint64_t v27 = v23 + 1;
      id v28 = v8;
      sub_1003F62B0(v27, &qword_1006080A8);
      Swift::Int v24 = v30;
    }
    else
    {
      Swift::Int v24 = v22;
      id v25 = v8;
    }
    sub_1003CB9E0(v8, v24);
    *id v3 = v24;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      type metadata accessor for MTCategory();
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v3;
    *id v3 = 0x8000000000000000;
    id v8 = a2;
    sub_10005990C((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native, &qword_1006080A8, (void (*)(void))&type metadata accessor for MTCategory);
    *id v3 = v31;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1003F5710(uint64_t a1, char *a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for ShowInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1003FD990(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1003FD990((unint64_t *)&unk_100603F00, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      Swift::Int v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        id v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *id v3 = 0x8000000000000000;
    sub_1003F7100((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *id v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1003F5A34(uint64_t *a1, uint64_t a2)
{
  return sub_1003F5A5C(a1, a2, &qword_1006092E8);
}

uint64_t sub_1003F5A48(uint64_t *a1, uint64_t a2)
{
  return sub_1003F5A5C(a1, a2, (uint64_t *)&unk_100609340);
}

uint64_t sub_1003F5A5C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = static Hasher._hash(seed:_:)();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_1003F73BC(a2, v11, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v5 = v16;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v12 = *(void *)(v8 + 48);
  if (*(void *)(v12 + 8 * v11) != a2)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v13;
      if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v12 + 8 * v11) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1003F5B70()
{
  NSString v1 = v0;
  uint64_t v42 = type metadata accessor for PlaybackIntent.Option();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100054B78(&qword_1005F6410);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                NSString v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1003FD990(&qword_1005F6418, (void (*)(uint64_t))&type metadata accessor for PlaybackIntent.Option);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *NSString v1 = v6;
  return result;
}

uint64_t sub_1003F5F6C()
{
  NSString v1 = v0;
  uint64_t v2 = *v0;
  sub_100054B78(&qword_100608020);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                NSString v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      char v22 = *(unsigned char *)(v19 + 16);
      Hasher.init(_seed:)();
      EpisodeStateIdentifier.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(unsigned char *)(v12 + 16) = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *NSString v1 = v4;
  return result;
}

uint64_t sub_1003F6280(uint64_t a1)
{
  return sub_1003F62B0(a1, &qword_100608018);
}

uint64_t sub_1003F628C(uint64_t a1)
{
  return sub_1003F62B0(a1, &qword_100608010);
}

uint64_t sub_1003F6298(uint64_t a1)
{
  return sub_1003F62B0(a1, &qword_100607FF0);
}

uint64_t sub_1003F62A4(uint64_t a1)
{
  return sub_1003F62B0(a1, &qword_1006080A8);
}

uint64_t sub_1003F62B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100054B78(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1003F654C()
{
  NSString v1 = v0;
  uint64_t v42 = type metadata accessor for ShowInfo();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100054B78(&qword_100607FE0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                NSString v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1003FD990(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *NSString v1 = v6;
  return result;
}

uint64_t sub_1003F6948(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100054B78(a2);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (uint64_t *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v28 = -1 << v9;
    unint64_t v29 = v3;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    uint64_t v30 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                if (v30 >= 64) {
                  bzero((void *)(v4 + 56), 8 * v12);
                }
                else {
                  uint64_t *v8 = v28;
                }
                uint64_t v3 = v29;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v4 + 48) + 8 * v16);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1003F6BC8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for PlaybackIntent.Option();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1003F5B70();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1003F7BF8((uint64_t (*)(void))&type metadata accessor for PlaybackIntent.Option, &qword_1005F6410);
      goto LABEL_12;
    }
    sub_1003F8038();
  }
  uint64_t v12 = *v3;
  sub_1003FD990(&qword_1005F6418, (void (*)(uint64_t))&type metadata accessor for PlaybackIntent.Option);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    int64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1003FD990(&qword_1005F6420, (void (*)(uint64_t))&type metadata accessor for PlaybackIntent.Option);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1003F6E84(Swift::Int result, uint64_t a2, char a3, unint64_t a4, char a5)
{
  Swift::Int v8 = result;
  int v9 = a3 & 1;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
  {
    Swift::Int v12 = result;
  }
  else
  {
    if (a5)
    {
      sub_1003F5F6C();
    }
    else
    {
      if (v11 > v10)
      {
        Swift::Int v12 = result;
        uint64_t result = (Swift::Int)sub_1003F785C();
        goto LABEL_17;
      }
      sub_1003F83E8();
    }
    uint64_t v13 = *v5;
    Hasher.init(_seed:)();
    EpisodeStateIdentifier.hash(into:)();
    uint64_t result = Hasher._finalize()();
    a4 = result & ~(-1 << *(unsigned char *)(v13 + 32));
    uint64_t v14 = v13 + 56;
    if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
    {
      uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
      uint64_t v33 = v13;
      uint64_t v15 = *(void *)(v13 + 48) + 24 * a4;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      char v18 = *(unsigned char *)(v15 + 16);
      sub_1001DD838(*(void *)v15, v17, v18);
      Swift::Int v12 = v8;
      uint64_t v19 = a2;
      char v20 = static EpisodeStateIdentifier.== infix(_:_:)();
      uint64_t result = sub_1001DD848(v16, v17, v18);
      if (v20) {
        goto LABEL_20;
      }
      a4 = (a4 + 1) & ~v31;
      if ((*(void *)(v14 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
      {
        while (1)
        {
          uint64_t v21 = *(void *)(v33 + 48) + 24 * a4;
          uint64_t v22 = *(void *)v21;
          uint64_t v23 = *(void *)(v21 + 8);
          char v24 = *(unsigned char *)(v21 + 16);
          sub_1001DD838(*(void *)v21, v23, v24);
          char v25 = static EpisodeStateIdentifier.== infix(_:_:)();
          uint64_t result = sub_1001DD848(v22, v23, v24);
          if (v25) {
            goto LABEL_20;
          }
          a4 = (a4 + 1) & ~v31;
          a2 = v19;
          if (((*(void *)(v14 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) == 0) {
            goto LABEL_17;
          }
        }
      }
      a2 = v19;
    }
    else
    {
      Swift::Int v12 = v8;
    }
  }
LABEL_17:
  uint64_t v26 = *v32;
  *(void *)(*v32 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v27 = *(void *)(v26 + 48) + 24 * a4;
  *(void *)uint64_t v27 = v12;
  *(void *)(v27 + 8) = a2;
  *(unsigned char *)(v27 + 16) = v9 != 0;
  uint64_t v28 = *(void *)(v26 + 16);
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (!v29)
  {
    *(void *)(v26 + 16) = v30;
    return result;
  }
  __break(1u);
LABEL_20:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003F7100(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for ShowInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1003F654C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1003F7BF8((uint64_t (*)(void))&type metadata accessor for ShowInfo, &qword_100607FE0);
      goto LABEL_12;
    }
    sub_1003F86CC();
  }
  uint64_t v12 = *v3;
  sub_1003FD990(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1003FD990((unint64_t *)&unk_100603F00, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003F73BC(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_1003F6948(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_1003F7EA8(a4);
      goto LABEL_14;
    }
    sub_1003F8A7C(v9, a4);
  }
  uint64_t v10 = *v4;
  uint64_t result = static Hasher._hash(seed:_:)();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(void *)(v12 + 8 * a2) == v6)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v12 + 8 * a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

void *sub_1003F74F4()
{
  NSString v1 = v0;
  sub_100054B78(&qword_100609330);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *NSString v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1003F76A8()
{
  NSString v1 = v0;
  sub_100054B78(&qword_100607F90);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *NSString v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1003F785C()
{
  NSString v1 = v0;
  sub_100054B78(&qword_100608020);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *NSString v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = *(void *)v17;
    *(void *)(v21 + 8) = v19;
    *(unsigned char *)(v21 + 16) = v20;
    uint64_t result = (void *)sub_1001DD838(v18, v19, v20);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1003F7A1C()
{
  return sub_1003F7A34(&qword_100608010);
}

id sub_1003F7A28()
{
  return sub_1003F7A34(&qword_100607FF0);
}

id sub_1003F7A34(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100054B78(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1003F7BD8()
{
  return sub_1003F7BF8((uint64_t (*)(void))&type metadata accessor for ShowInfo, &qword_100607FE0);
}

void *sub_1003F7BF8(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v25 - v7;
  sub_100054B78(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = static _SetStorage.copy(original:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  BOOL v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1003F7EA8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100054B78(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1003F8038()
{
  NSString v1 = v0;
  uint64_t v2 = type metadata accessor for PlaybackIntent.Option();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100054B78(&qword_1005F6410);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *NSString v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1003FD990(&qword_1005F6418, (void (*)(uint64_t))&type metadata accessor for PlaybackIntent.Option);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    NSString v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1003F83E8()
{
  uint64_t v1 = *v0;
  sub_100054B78(&qword_100608020);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v28 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v9);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v1 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    Hasher.init(_seed:)();
    sub_1001DD838(v18, v19, v20);
    EpisodeStateIdentifier.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v3 + 48) + 24 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 16) = v20;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1003F86CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ShowInfo();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100054B78(&qword_100607FE0);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1003FD990(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1003F8A7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100054B78(a2);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  unint64_t v28 = v3;
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    uint64_t v20 = *(void *)(*(void *)(v4 + 48) + 8 * v16);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v28;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t (*sub_1003F8CDC(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003F8F98(v6, a2, a3);
  return sub_1003F8D44;
}

uint64_t (*sub_1003F8D48(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003F9018(v6, a2, a3);
  return sub_1003F8D44;
}

uint64_t (*sub_1003F8DB0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003F9098(v6, a2, a3);
  return sub_1003F8D44;
}

uint64_t (*sub_1003F8E18(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003F9118(v6, a2, a3);
  return sub_1003F8D44;
}

uint64_t (*sub_1003F8E80(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003F9198(v6, a2, a3);
  return sub_1003F8D44;
}

uint64_t (*sub_1003F8EE8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003F9220(v6, a2, a3);
  return sub_1003F8D44;
}

void sub_1003F8F50(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1003F8F98(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1003FDC54;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1003F9018(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_100340C10;
  }
  __break(1u);
  return result;
}

void (*sub_1003F9098(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_100340C7C;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1003F9118(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1003FDC58;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1003F9198(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1003F9218;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003F9218()
{
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1003F9220(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1003FDC5C;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003F92A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  v33[3] = type metadata accessor for InterestRepository();
  v33[4] = &protocol witness table for InterestRepository;
  v33[0] = a18;
  _OWORD v32[3] = type metadata accessor for TranscriptReportConcernURLBuilder();
  v32[4] = &off_10055C678;
  v32[0] = a17;
  *(void *)(a21 + 136) = 0;
  *(void *)(a21 + 264) = 0;
  *(unsigned char *)(a21 + 272) = 1;
  *(void *)(a21 + 328) = 0;
  *(void *)(a21 + 280) = a20;
  sub_100056D54(a19, a21 + 288);
  *(void *)(a21 + 16) = a1;
  *(void *)(a21 + 24) = a2;
  *(void *)(a21 + 32) = a3;
  *(void *)(a21 + 40) = a4;
  *(void *)(a21 + 48) = a5;
  *(void *)(a21 + 56) = a6;
  *(void *)(a21 + 64) = a7;
  *(void *)(a21 + 72) = a8;
  *(void *)(a21 + 80) = a9;
  *(void *)(a21 + 88) = a10;
  *(void *)(a21 + 96) = a11;
  *(void *)(a21 + 104) = a12;
  *(void *)(a21 + 112) = a13;
  *(void *)(a21 + 120) = a14;
  *(void *)(a21 + 128) = a15;
  sub_100056D54(a16, a21 + 144);
  sub_100056D54((uint64_t)v32, a21 + 184);
  sub_100056D54((uint64_t)v33, a21 + 224);
  type metadata accessor for DeviceCapacityMonitor();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  unint64_t v25 = (void *)static DeviceCapacityMonitor.shared.getter();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v26 = DeviceCapacityMonitor.addCapacityChangeObserver(options:callback:)();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  sub_10004D2D8(a19);
  sub_10004D2D8((uint64_t)v33);
  sub_10004D2D8((uint64_t)v32);
  sub_10004D2D8(a16);
  swift_release();
  *(void *)(a21 + 264) = v26;
  *(unsigned char *)(a21 + 272) = 0;
  return a21;
}

char *sub_1003F9548(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v3 = *(void *)(type metadata accessor for EpisodeOffer() - 8);
  uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  type metadata accessor for CoreDataFetcher();
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  uint64_t v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    int64_t v7 = (void *)static CoreDataFetcher.unsafeFindOrCreateStoreEpisode(for:in:)();
    id v8 = [v7 uuid];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_10004CEAC(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v14 = *((void *)v6 + 2);
      unint64_t v13 = *((void *)v6 + 3);
      if (v14 >= v13 >> 1) {
        uint64_t v6 = sub_10004CEAC((char *)(v13 > 1), v14 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v14 + 1;
      unint64_t v15 = &v6[16 * v14];
      *((void *)v15 + 4) = v10;
      *((void *)v15 + 5) = v12;
    }
    else
    {
    }
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v6;
}

BOOL sub_1003F96F0(void *a1)
{
  id v2 = [self predicateForVisuallyPlayed:0];
  id v3 = [a1 AND:v2];

  id v4 = [self sharedInstance];
  id v5 = [v4 mainOrPrivateContext];

  NSManagedObjectContext.performAndWait<A>(_:)();
  return v7 > 0;
}

BOOL sub_1003F97F0()
{
  id v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 predicateForDownloadedEpisodesOnPodcastUuid:v1];

  id v3 = [self sharedInstance];
  id v4 = [v3 mainOrPrivateContext];

  NSManagedObjectContext.performAndWait<A>(_:)();
  return v6 > 0;
}

uint64_t sub_1003F98F8()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1003F2280;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_1005691B0;
  id v8 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003FD990((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v11);
}

void sub_1003F9BAC()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 privateQueueContext];

  uint64_t v2 = self;
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_1000505EC(v3);
  swift_bridgeObjectRelease();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v2 predicateForEpisodeUuids:isa];

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_1003F9D88;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_10003B424;
  v10[3] = &unk_100568BE8;
  uint64_t v7 = _Block_copy(v10);
  id v8 = v1;
  id v9 = v5;
  swift_release();
  [v8 performBlock:v7];
  _Block_release(v7);
}

uint64_t sub_1003F9D48()
{
  return swift_deallocObject();
}

void sub_1003F9D88()
{
  sub_1003F2758(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1003F9D90(uint64_t a1, uint64_t a2)
{
  id v4 = [self sharedInstance];
  id v5 = [v4 privateQueueContext];

  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  v9[4] = sub_1003FC4AC;
  void v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10003B424;
  long long v9[3] = &unk_100568E90;
  uint64_t v7 = _Block_copy(v9);
  id v8 = v5;
  swift_bridgeObjectRetain();
  swift_release();
  [v8 performBlock:v7];
  _Block_release(v7);
}

void sub_1003F9EC0(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = [v1 managedObjectContext];
    char v16 = 0;
    if (!v2)
    {
      char v10 = 0;
      id v9 = 0;
      goto LABEL_9;
    }
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = v1;
    v3[3] = &v16;
    v3[4] = v2;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_1003FC7BC;
    *(void *)(v4 + 24) = v3;
    aBlock[4] = sub_100018840;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018818;
    uint64_t aBlock[3] = &unk_100569110;
    id v5 = _Block_copy(aBlock);
    id v6 = v2;
    id v7 = v1;
    id v8 = v6;
    swift_retain();
    swift_release();
    [v8 performBlockAndWait:v5];

    _Block_release(v5);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v5 & 1) == 0)
    {
      id v9 = sub_1003FC7BC;
      char v10 = v16;
LABEL_9:
      LOBYTE(aBlock[0]) = v10;
      Promise.resolve(_:)();

      sub_1000536BC((uint64_t)v9);
      return;
    }
    __break(1u);
  }
  else
  {
    id v11 = objc_allocWithZone((Class)NSError);
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v11 initWithDomain:v12 code:42 userInfo:0];

    id v14 = v13;
    Promise.reject(_:)();
  }
}

void sub_1003FA144(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = [v1 managedObjectContext];
    id v3 = [self _applePodcastsFoundationSettingsUserDefaults];
    uint64_t v4 = (const mach_header_64 *)[v3 episodeLimitForKey:kMTPodcastEpisodeLimitDefaultKey];

    if (v4 == &_mh_execute_header) {
      uint64_t v5 = static MTPodcastEpisodeLimit.defaultOption.getter();
    }
    else {
      uint64_t v5 = 0x100000001;
    }
    [v1 setEpisodeLimit:v5];
    if (v2) {
      [v2 saveInCurrentBlock];
    }
    Promise.resolve(_:)();
  }
  else
  {
    id v6 = objc_allocWithZone((Class)NSError);
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 initWithDomain:v7 code:42 userInfo:0];

    id v9 = v8;
    Promise.reject(_:)();
  }
}

uint64_t sub_1003FA2DC(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  __chkstk_darwin();
  char v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin();
  type metadata accessor for DispatchQoS();
  __chkstk_darwin();
  type metadata accessor for FeedUpdateResult();
  __chkstk_darwin();
  NSString v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v13 = [a1 uuid];
  if (v13)
  {
    id v14 = v13;
    unsigned int v15 = a2;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v17;

    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = j___s9JetEngine7PromiseC7resolveyyxF;
    *(void *)(v18 + 24) = a4;
    if (v15 >> 6)
    {
      if (v15 >> 6 == 1)
      {
        uint64_t v50 = v18;
        uint64_t v19 = v15 & 1;
        uint64_t v20 = kPodcastUpdatedDate;
        swift_retain();
        if ([a1 valueForKey:v20])
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v59, 0, sizeof(v59));
        }
        uint64_t v33 = v19;
        sub_100053820((uint64_t)v59, (uint64_t)aBlock, &qword_1005F5D30);
        if (v55)
        {
          sub_10004D29C(0, (unint64_t *)&unk_100609220);
          if (swift_dynamicCast())
          {
            uint64_t v49 = v58;
            v48[1] = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
            static DispatchQoS.userInitiated.getter();
            aBlock[0] = _swiftEmptyArrayStorage;
            v48[0] = sub_1003FD990((unint64_t *)&qword_1005F5BE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
            sub_100054B78((uint64_t *)&unk_1005F7A60);
            sub_100044200((unint64_t *)&qword_1005F5BF0, (uint64_t *)&unk_1005F7A60);
            dispatch thunk of SetAlgebra.init<A>(_:)();
            (*(void (**)(char *, void, uint64_t))(v51 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v52);
            uint64_t v34 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
            id v35 = [self sharedInstance];
            id v36 = [v35 doubleForKey:kLibraryShowFetchThreshold];
            id v37 = [v36 asyncValuePromiseOnQueue:v34];

            uint64_t v38 = swift_allocObject();
            swift_weakInit();
            uint64_t v39 = swift_allocObject();
            *(void *)(v39 + 16) = j___s9JetEngine7PromiseC7resolveyyxF;
            *(void *)(v39 + 24) = a4;
            *(void *)(v39 + 32) = v38;
            *(void *)(v39 + 40) = v35;
            int64_t v40 = v49;
            *(void *)(v39 + 48) = v49;
            *(void *)(v39 + 56) = v16;
            *(void *)(v39 + 64) = v53;
            *(unsigned char *)(v39 + 72) = v19;
            uint64_t v41 = v50;
            *(void *)(v39 + 80) = sub_1003FDC4C;
            *(void *)(v39 + 88) = v41;
            uint64_t v56 = sub_1003FC688;
            uint64_t v57 = v39;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10038B6FC;
            uint64_t v55 = &unk_100569070;
            uint64_t v42 = _Block_copy(aBlock);
            swift_retain();
            id v43 = v35;
            id v44 = v40;
            swift_retain();
            swift_release();
            [v37 addFinishBlock:v42];
            swift_release();
            _Block_release(v42);

            return swift_release();
          }
        }
        else
        {
          sub_100054B1C((uint64_t)aBlock, &qword_1005F5D30);
        }
        uint64_t v45 = *(void *)(a3 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v45 + 24))(v16, v53, v33, 1, 8, sub_1003FDC4C, v50, ObjectType, v45);
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      uint64_t v29 = *(void *)(a3 + 24);
      uint64_t v30 = v18;
      uint64_t v31 = swift_getObjectType();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v29 + 16);
      swift_retain();
      v32(v16, v53, 0, 8, sub_1003FDC4C, v30, v31, v29);
      swift_release();
    }
    else
    {
      if (v15) {
        uint64_t v24 = 23;
      }
      else {
        uint64_t v24 = 3;
      }
      uint64_t v25 = *(void *)(a3 + 24);
      uint64_t v26 = v18;
      uint64_t v27 = swift_getObjectType();
      unint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v25 + 16);
      swift_retain();
      v28(v16, v53, 1, v24, sub_1003FDC4C, v26, v27, v25);
      swift_release();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = enum case for FeedUpdateError.missingPodcastUUID(_:);
    uint64_t updated = type metadata accessor for FeedUpdateError();
    uint64_t v23 = *(void *)(updated - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v12, v21, updated);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v12, 0, 2, updated);
    Promise.resolve(_:)();
    sub_1003FC5E4((uint64_t)v12);
  }
  return swift_release();
}

void sub_1003FAAD4(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  __chkstk_darwin();
  char v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin();
  type metadata accessor for DispatchQoS();
  __chkstk_darwin();
  type metadata accessor for FeedUpdateResult();
  __chkstk_darwin();
  NSString v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v13 = [a1 uuid];
  if (!v13)
  {
    uint64_t v21 = enum case for FeedUpdateError.missingPodcastUUID(_:);
    uint64_t updated = type metadata accessor for FeedUpdateError();
    uint64_t v23 = *(void *)(updated - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v12, v21, updated);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v12, 0, 2, updated);
    Promise.resolve(_:)();
    sub_1003FC5E4((uint64_t)v12);
    goto LABEL_21;
  }
  id v14 = v13;
  unsigned int v15 = a2;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v17;

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = j_j___s9JetEngine7PromiseC7resolveyyxF;
  *(void *)(v18 + 24) = a4;
  if (!(v15 >> 6))
  {
    if (v15) {
      uint64_t v24 = 23;
    }
    else {
      uint64_t v24 = 3;
    }
    uint64_t v25 = *(void *)(a3 + 24);
    uint64_t v26 = v18;
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(v25 + 16);
    swift_retain();
    v28(v16, v52, 1, v24, sub_1003FC678, v26, ObjectType, v25);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_12:
    goto LABEL_21;
  }
  if (v15 >> 6 != 1)
  {
    uint64_t v29 = *(void *)(a3 + 24);
    uint64_t v30 = v18;
    uint64_t v31 = swift_getObjectType();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(v29 + 16);
    swift_retain();
    v32(v16, v52, 0, 8, sub_1003FC678, v30, v31, v29);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v49 = v18;
  uint64_t v19 = v15 & 1;
  uint64_t v20 = kPodcastUpdatedDate;
  swift_retain();
  if ([a1 valueForKey:v20])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v58, 0, sizeof(v58));
  }
  uint64_t v33 = v19;
  sub_100053820((uint64_t)v58, (uint64_t)aBlock, &qword_1005F5D30);
  if (v54)
  {
    sub_10004D29C(0, (unint64_t *)&unk_100609220);
    if (swift_dynamicCast())
    {
      uint64_t v48 = v57;
      v47[1] = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      static DispatchQoS.userInitiated.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      v47[0] = sub_1003FD990((unint64_t *)&qword_1005F5BE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      sub_100054B78((uint64_t *)&unk_1005F7A60);
      sub_100044200((unint64_t *)&qword_1005F5BF0, (uint64_t *)&unk_1005F7A60);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      (*(void (**)(char *, void, uint64_t))(v50 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v51);
      uint64_t v34 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
      id v35 = [self sharedInstance];
      id v36 = [v35 doubleForKey:kLibraryShowFetchThreshold];
      id v37 = [v36 asyncValuePromiseOnQueue:v34];

      uint64_t v38 = swift_allocObject();
      swift_weakInit();
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = j_j___s9JetEngine7PromiseC7resolveyyxF;
      *(void *)(v39 + 24) = a4;
      *(void *)(v39 + 32) = v38;
      *(void *)(v39 + 40) = v35;
      int64_t v40 = v48;
      *(void *)(v39 + 48) = v48;
      *(void *)(v39 + 56) = v16;
      *(void *)(v39 + 64) = v52;
      *(unsigned char *)(v39 + 72) = v19;
      uint64_t v41 = v49;
      *(void *)(v39 + 80) = sub_1003FC678;
      *(void *)(v39 + 88) = v41;
      uint64_t v55 = sub_1003FC688;
      uint64_t v56 = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10038B6FC;
      uint64_t v54 = &unk_100568FD0;
      uint64_t v42 = _Block_copy(aBlock);
      swift_retain();
      id v43 = v35;
      id v44 = v40;
      swift_retain();
      swift_release();
      [v37 addFinishBlock:v42];
      swift_release();
      _Block_release(v42);
      swift_release();

      return;
    }
  }
  else
  {
    sub_100054B1C((uint64_t)aBlock, &qword_1005F5D30);
  }
  uint64_t v45 = *(void *)(a3 + 24);
  uint64_t v46 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(v45 + 24))(v16, v52, v33, 1, 8, sub_1003FC678, v49, v46, v45);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_21:
  swift_release();
}

void sub_1003FB2E0()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 privateQueueContext];

  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  v5[4] = sub_1003FC4F0;
  v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_10003B424;
  v5[3] = &unk_100568EE0;
  id v3 = _Block_copy(v5);
  id v4 = v1;
  swift_release();
  [v4 performBlock:v3];
  _Block_release(v3);
}

uint64_t sub_1003FB3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a1;
  uint64_t v5 = type metadata accessor for StationSortOrder();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin();
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 0;
  id v9 = [self sharedInstance];
  id v10 = [v9 mainOrPrivateContext];

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  NSString v12 = (char *)swift_allocObject();
  uint64_t v13 = v20;
  *((void *)v12 + 2) = v10;
  *((void *)v12 + 3) = v13;
  *((void *)v12 + 4) = a2;
  *((void *)v12 + 5) = v8;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v12[v11], (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_1003FC37C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100568DF0;
  id v14 = _Block_copy(aBlock);
  id v15 = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v15 performBlockAndWaitWithSave:v14];
  _Block_release(v14);
  swift_beginAccess();
  if (*(unsigned char *)(v8 + 16) == 1)
  {
    type metadata accessor for SyncKeysRepository();
    uint64_t v16 = (void *)static SyncKeysRepository.shared.getter();
    SyncKeysRepository.isPlaylistSyncDirty.setter();
  }
  uint64_t v17 = *(unsigned __int8 *)(v8 + 16);
  swift_release();
  return v17;
}

void sub_1003FB688(uint64_t a1, uint64_t a2, char a3)
{
  id v6 = [self sharedInstance];
  id v7 = [v6 mainOrPrivateContext];

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a1;
  *(void *)(v8 + 32) = a2;
  *(unsigned char *)(v8 + 40) = a3;
  v11[4] = sub_1003FC280;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  long long v11[2] = sub_10003B424;
  v11[3] = &unk_100568D50;
  id v9 = _Block_copy(v11);
  id v10 = v7;
  swift_bridgeObjectRetain();
  swift_release();
  [v10 performBlock:v9];
  _Block_release(v9);
}

uint64_t sub_1003FB7C8(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v13 = 0;
  id v4 = [self sharedInstance];
  id v5 = [v4 mainOrPrivateContext];

  id v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = &v13;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003FC25C;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_10004A010;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  void aBlock[3] = &unk_100568D00;
  uint64_t v8 = _Block_copy(aBlock);
  id v9 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v8];

  _Block_release(v8);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13;
    swift_release();
    return v11;
  }
  return result;
}

BOOL sub_1003FB984()
{
  id v0 = [self predicateForDownloaded:1 excludeHidden:0];
  id v1 = [self sharedInstance];
  id v2 = [v1 mainOrPrivateContext];

  NSManagedObjectContext.performAndWait<A>(_:)();
  return v4 > 0;
}

BOOL sub_1003FBA6C()
{
  id v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 predicateForBookmarkedEpisodesOnPodcastUuid:v1];

  id v3 = [self sharedInstance];
  id v4 = [v3 mainOrPrivateContext];

  NSManagedObjectContext.performAndWait<A>(_:)();
  return v6 > 0;
}

uint64_t sub_1003FBB74(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 *a3:v5];

  id v7 = [self sharedInstance];
  id v8 = [v7 mainOrPrivateContext];

  NSManagedObjectContext.performAndWait<A>(_:)();
  return v10;
}

BOOL sub_1003FBC70()
{
  id v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 predicateForLibraryEpisodesOnPodcastUuid:v1];

  id v3 = [self sharedInstance];
  id v4 = [v3 mainOrPrivateContext];

  NSManagedObjectContext.performAndWait<A>(_:)();
  return v6 > 0;
}

BOOL sub_1003FBD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = self;
  id v5 = [v4 predicateForPartiallyPlayedInLastTwoMonths];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 predicateForAllEpisodesOnPodcastUuid:v6];

  id v8 = [v5 AND:v7];
  id v9 = [self sharedInstance];
  id v10 = [v9 mainOrPrivateContext];

  NSManagedObjectContext.performAndWait<A>(_:)();
  return v12 >= a3;
}

void sub_1003FBEC8(uint64_t a1)
{
  id v2 = [self sharedInstance];
  id v3 = [v2 mainOrPrivateContext];

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  v7[4] = sub_1003FC020;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10003B424;
  v7[3] = &unk_100568C38;
  id v5 = _Block_copy(v7);
  id v6 = v3;
  swift_release();
  [v6 performBlock:v5];
  _Block_release(v5);
}

uint64_t sub_1003FBFE8()
{
  return swift_deallocObject();
}

id sub_1003FC020()
{
  return sub_1003F1D10(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1003FC02C(uint64_t *a1@<X8>)
{
  sub_1003EF814(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_1003FC03C(uint64_t *a1@<X8>)
{
  sub_1003EFC90(*(void *)(v1 + 16), a1);
}

uint64_t sub_1003FC044()
{
  return sub_1003FD27C((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1003FC070(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10005B794;
  return sub_1003ECA04(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_1003FC14C()
{
  return sub_1003FD27C((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003FC178(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10005B794;
  return sub_1003EC584(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_1003FC254()
{
  return sub_1003FC460();
}

void sub_1003FC25C()
{
  sub_1003EC504(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 **)(v0 + 40));
}

uint64_t sub_1003FC268()
{
  return swift_deallocObject();
}

uint64_t sub_1003FC278()
{
  return sub_1003FC460();
}

void sub_1003FC280()
{
  sub_1003EA484(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1003FC290()
{
  return swift_deallocObject();
}

uint64_t sub_1003FC2A0()
{
  uint64_t v1 = type metadata accessor for StationSortOrder();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1003FC37C()
{
  uint64_t v1 = *(void *)(type metadata accessor for StationSortOrder() - 8);
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1003EA204(v2, v3, v4, v5, v6);
}

uint64_t sub_1003FC3E4()
{
  return swift_deallocObject();
}

void sub_1003FC3F4(void *a1)
{
  sub_1003E8DDC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003FC3FC()
{
  sub_1001A5A58(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));

  return swift_deallocObject();
}

void sub_1003FC438(void *a1)
{
  sub_1003E8CA8(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1003FC444(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return sub_1001A5A58(a1, a2);
  }
  return a1;
}

uint64_t sub_1003FC458()
{
  return sub_1003FC460();
}

uint64_t sub_1003FC460()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003FC4AC()
{
  sub_1003E9C54(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003FC4B8()
{
  return swift_deallocObject();
}

id sub_1003FC4F0()
{
  return sub_1003E978C(*(void **)(v0 + 16));
}

uint64_t sub_1003FC4F8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003FC530()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1003FC578(void *a1)
{
  sub_1003E855C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1003FC584()
{
  return sub_1003E8C20();
}

uint64_t sub_1003FC5A4(uint64_t a1)
{
  return sub_1003E8C60(a1);
}

uint64_t sub_1003FC5C0()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

void sub_1003FC5DC(void *a1)
{
  sub_1003E790C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003FC5E4(uint64_t a1)
{
  uint64_t updated = type metadata accessor for FeedUpdateResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t sub_1003FC640()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FC678(uint64_t a1, char a2)
{
  return sub_1003E7B60(a1, a2 & 1, *(void (**)(void *))(v2 + 16));
}

uint64_t sub_1003FC68C()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

uint64_t sub_1003FC6A8(void *a1)
{
  return sub_1003E74DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1003FC6BC()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FC71C(void *a1, uint64_t a2)
{
  return sub_1003E7CEC(a1, a2, *(void (**)(unsigned char *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(unsigned char *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88));
}

uint64_t sub_1003FC760()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

uint64_t sub_1003FC77C()
{
  return swift_deallocObject();
}

id sub_1003FC7BC()
{
  return sub_1003E5CF0(*(void **)(v0 + 16), *(unsigned char **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003FC7C8()
{
  return swift_deallocObject();
}

uint64_t sub_1003FC7D8()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

uint64_t sub_1003FC7F4()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

uint64_t sub_1003FC810()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1003FC858(void *a1)
{
  sub_1003E625C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
}

uint64_t sub_1003FC868()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1003FC8B0(void *a1)
{
  sub_1003E65F8(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1003FC8C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EpisodeListType.hidePlayedEpisodes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1003FC8F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EpisodeListType.sortTypeFromUserDefaults.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1003FC920()
{
  unint64_t result = qword_100609230;
  if (!qword_100609230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100609230);
  }
  return result;
}

uint64_t sub_1003FC978()
{
  sub_100053720(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));

  return swift_deallocObject();
}

uint64_t sub_1003FC9CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EpisodeListType.pubDateLimit.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003FC9FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_10000B8F0;
  return _swift_task_switch(sub_1003E59F8, 0, 0);
}

uint64_t sub_1003FCAAC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FCAF4(uint64_t a1)
{
  return sub_1003F2B54(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

unint64_t sub_1003FCB00()
{
  unint64_t result = qword_100609260;
  if (!qword_100609260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100609260);
  }
  return result;
}

uint64_t sub_1003FCB58()
{
  return sub_1003FCBE4((uint64_t (*)(void, void, void, void, void, void))sub_1003F2600);
}

uint64_t sub_1003FCB74()
{
  swift_bridgeObjectRelease();

  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1003FCBCC()
{
  return sub_1003FCBE4((uint64_t (*)(void, void, void, void, void, void))sub_1003F22F0);
}

uint64_t sub_1003FCBE4(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1003FCBFC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003FCC3C()
{
  sub_1003F1C30(*(void **)(v0 + 16), *(void *)(v0 + 24), *(BOOL **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1003FCC4C()
{
  return swift_deallocObject();
}

uint64_t sub_1003FCC5C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FCCA4()
{
  return sub_1003F1300(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1003FCCB4()
{
  return sub_1003FD920((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003FCCD0()
{
  return sub_1003F1914(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003FCCDC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FCD2C()
{
  return sub_1003FD824((uint64_t (*)(void, void, void, void, void))sub_1003F072C);
}

uint64_t sub_1003FCD44()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t sub_1003FCD94(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_10000B8F0;
  return _swift_task_switch(sub_1003F0F2C, 0, 0);
}

uint64_t sub_1003FCE48()
{
  return sub_1003F04B4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003FCE54(uint64_t a1)
{
  return sub_1003F00F8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003FCE5C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003FCEA4()
{
  sub_1003EFA8C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003FCEB0()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1003FCEF8()
{
  sub_1003EF680(*(unsigned char *)(v0 + 16), *(unsigned char *)(v0 + 17), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_1003FCF0C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1003FCF64(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10005B794;
  return sub_1003EEB2C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1003FD040()
{
  return sub_1003FD27C((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003FD06C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10005B794;
  return sub_1003EE460(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_1003FD148()
{
  return sub_1003FD27C((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1003FD174(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10005B794;
  return sub_1003ED928(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_1003FD250()
{
  return sub_1003FD27C((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003FD27C(void (*a1)(void), void (*a2)(void))
{
  swift_unknownObjectRelease();
  a1(v2[4]);
  a2(v2[5]);
  if (v2[7]) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1003FD2F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10005B794;
  return sub_1003ED0B8(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_1003FD3D0()
{
  return swift_deallocObject();
}

uint64_t sub_1003FD408()
{
  return sub_1003EC3F0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1003FD414()
{
  return swift_deallocObject();
}

uint64_t sub_1003FD424()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003FD46C()
{
  return sub_1003EBE24(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1003FD478(void *a1)
{
}

void sub_1003FD488(void *a1)
{
}

uint64_t sub_1003FD494()
{
  uint64_t v1 = *(void *)(sub_100054B78(&qword_1006092C8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for ChildAndParentLocation();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

uint64_t sub_1003FD5DC(uint64_t *a1)
{
  sub_100054B78(&qword_1006092C8);
  return sub_1003EB910(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10]);
}

uint64_t sub_1003FD668()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FD6C0()
{
  return sub_1003EABD4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1003FD6D4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FD714()
{
  return sub_1003E8F88(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003FD71C()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

uint64_t sub_1003FD738(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for FeedUpdateResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_1003FD7A0()
{
  return sub_1003FD824((uint64_t (*)(void, void, void, void, void))sub_1003E7434);
}

uint64_t sub_1003FD7BC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FD80C()
{
  return sub_1003FD824((uint64_t (*)(void, void, void, void, void))sub_1003E7144);
}

uint64_t sub_1003FD824(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1003FD83C()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

void sub_1003FD858(void *a1)
{
}

uint64_t sub_1003FD874()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

uint64_t sub_1003FD890(void *a1)
{
  return sub_1003E6F48(a1);
}

void sub_1003FD8AC()
{
}

uint64_t sub_1003FD8B4()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

uint64_t sub_1003FD8D0(char a1)
{
  return sub_1003E61DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1003FD8DC()
{
  return Promise.resolve(_:)();
}

uint64_t sub_1003FD904()
{
  return sub_1003FD920((void (*)(void))&_swift_release);
}

uint64_t sub_1003FD920(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FD974(void *a1)
{
  return sub_1003E5C70(a1);
}

uint64_t sub_1003FD990(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003FD9D8()
{
  return sub_1003E5834();
}

unsigned char *storeEnumTagSinglePayload for TranscriptError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FDAACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptError()
{
  return &type metadata for TranscriptError;
}

unint64_t sub_1003FDAE8()
{
  unint64_t result = qword_100609338;
  if (!qword_100609338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100609338);
  }
  return result;
}

void sub_1003FDD04(void *a1)
{
  unint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    unsigned int v6 = a1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 24) = v5;
    swift_unknownObjectWeakInit();
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = v7;
    uint64_t v10 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v5 + 72);
    id v11 = a1;
    swift_retain();
    swift_retain();
    v10(sub_10004A488, v9, ObjectType, v5);
    swift_release();
    swift_release();
    swift_release();
    v13.receiver = v2;
    v13.super_class = (Class)type metadata accessor for BaseOperation();
    [super addDependency:v11];
  }
}

id sub_1003FDEE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseOperation();
  return [super dealloc];
}

unsigned char *storeEnumTagSinglePayload for BaseOperation.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FDFE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BaseOperation.State()
{
  return &type metadata for BaseOperation.State;
}

unsigned __int8 *sub_1003FE054(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      swift_errorRelease();
    }
    else if (!v8)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *(void *)__src;
      swift_errorRetain();
      *(void *)__dst = v18;
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_1003FE290(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1003FE3DC(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      swift_errorRelease();
    }
    else if (!v8)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t sub_1003FE610(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1003FE744(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1003FE90CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1003FE934(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1003FE9EC(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

unint64_t sub_1003FEAC8()
{
  unint64_t result = qword_100609428;
  if (!qword_100609428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100609428);
  }
  return result;
}

uint64_t sub_1003FEB1C(uint64_t a1)
{
  sub_1003FEB54(a1);

  return swift_errorRelease();
}

id sub_1003FEB54(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Podcasts13BaseOperation_lock;
  [*(id *)(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_lock) lock];
  *(void *)(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation__error) = a1;
  swift_errorRetain();
  swift_errorRelease();
  size_t v4 = *(void **)(v1 + v3);

  return [v4 unlock];
}

uint64_t sub_1003FEBD0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003FEC08()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003FEC40()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FEC80()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FECB8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100049E74();
  }
  static os_log_type_t.debug.getter();
  return os_log(_:dso:log:_:_:)();
}

id sub_1003FED3C()
{
  static os_log_type_t.debug.getter();
  os_log(_:dso:log:_:_:)();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts14GroupOperation_queue);

  return [v1 setSuspended:0];
}

void sub_1003FEDDC()
{
  sub_100050358(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts14GroupOperation_input), *(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts14GroupOperation_input + 8));

  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts14GroupOperation_log);
}

id sub_1003FEE34(uint64_t a1)
{
  return sub_1003FEFB4(a1, type metadata accessor for GroupOperation);
}

uint64_t type metadata accessor for GroupOperation()
{
  return self;
}

uint64_t sub_1003FEED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Podcasts14GroupOperation_input;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts14GroupOperation_input);
  *(void *)a1 = v3;
  char v4 = *(unsigned char *)(v2 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  return sub_10005036C(v3, v4);
}

void sub_1003FEEF4()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0
                                      + OBJC_IVAR____TtC8PodcastsP33_176443A13D08CABECD6433E0302173B315FinishOperation_block);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();

  sub_100049E74();
}

uint64_t sub_1003FEF84()
{
  return swift_release();
}

id sub_1003FEF98()
{
  return sub_1003FEFB4(0, type metadata accessor for FinishOperation);
}

id sub_1003FEFB4(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for FinishOperation()
{
  return self;
}

uint64_t sub_1003FF024(unint64_t a1, char a2, void *a3)
{
  int v7 = &v3[OBJC_IVAR____TtC8Podcasts14GroupOperation_input];
  *(void *)int v7 = 0;
  v7[8] = 2;
  id v8 = objc_allocWithZone((Class)NSOperationQueue);
  int v9 = v3;
  id v10 = [v8 init];
  int v11 = v10;
  *(void *)&v9[OBJC_IVAR____TtC8Podcasts14GroupOperation_queue] = v10;
  if (a2) {
    [v10 setMaxConcurrentOperationCount:1];
  }
  [v11 setSuspended:1];
  *(void *)&v9[OBJC_IVAR____TtC8Podcasts14GroupOperation_log] = a3;
  id v12 = a3;

  v49.receiver = v9;
  v49.super_class = (Class)type metadata accessor for GroupOperation();
  id v13 = [super init];
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v12;
  int v16 = (objc_class *)type metadata accessor for FinishOperation();
  int v17 = (char *)objc_allocWithZone(v16);
  uint64_t v18 = (uint64_t (**)())&v17[OBJC_IVAR____TtC8PodcastsP33_176443A13D08CABECD6433E0302173B315FinishOperation_block];
  *uint64_t v18 = sub_1003FF488;
  v18[1] = (uint64_t (*)())v15;
  v48.receiver = v17;
  v48.super_class = v16;
  id v38 = v12;
  uint64_t v19 = (char *)v13;
  id v20 = [super init];
  uint64_t v21 = OBJC_IVAR____TtC8Podcasts14GroupOperation_queue;
  unint64_t v22 = &selRef__reportUpNextChangeType_forPlayerItems_withData_;
  uint64_t v45 = v20;
  [*(id *)&v19[OBJC_IVAR____TtC8Podcasts14GroupOperation_queue] addOperation:];
  if (!(a1 >> 62))
  {
    uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v23) {
      goto LABEL_5;
    }
LABEL_21:

    swift_bridgeObjectRelease();
    return (uint64_t)v19;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v23 = result;
  if (!result) {
    goto LABEL_21;
  }
LABEL_5:
  if (v23 >= 1)
  {
    uint64_t v25 = 0;
    unint64_t v46 = a1 & 0xC000000000000001;
    uint64_t v41 = v19;
    unint64_t v42 = a1;
    uint64_t v39 = v23;
    uint64_t v40 = v21;
    do
    {
      if (v46) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(a1 + 8 * v25 + 32);
      }
      uint64_t v27 = v26;
      self;
      uint64_t v28 = swift_dynamicCastObjCClass();
      if (v28)
      {
        uint64_t v29 = v28;
        swift_getObjectType();
        uint64_t v30 = swift_conformsToProtocol2();
        if (v30) {
          uint64_t v31 = v30;
        }
        else {
          uint64_t v31 = 0;
        }
        if (v30) {
          uint64_t v32 = v29;
        }
        else {
          uint64_t v32 = 0;
        }
        if (v32)
        {
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 24) = v31;
          swift_unknownObjectWeakInit();
          uint64_t v34 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v35 = swift_allocObject();
          *(void *)(v35 + 16) = v34;
          *(void *)(v35 + 24) = v33;
          id v43 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v31 + 72);
          swift_unknownObjectRetain();
          id v36 = v27;
          swift_retain();
          swift_retain();
          v43(sub_10004A488, v35, ObjectType, v31);
          a1 = v42;
          uint64_t v23 = v39;
          swift_release();
          uint64_t v21 = v40;
          swift_release();
          uint64_t v19 = v41;
          swift_release();
          id v37 = (objc_class *)type metadata accessor for BaseOperation();
          v47.receiver = v45;
          v47.super_class = v37;
          [super addDependency:v29];

          unint64_t v22 = &selRef__reportUpNextChangeType_forPlayerItems_withData_;
        }
      }
      ++v25;
      [v19[v21] v22[250] v27];
    }
    while (v23 != v25);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003FF410()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003FF448()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FF488()
{
  return sub_1003FECB8();
}

uint64_t sub_1003FF490()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003FF4C8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

id sub_1003FF50C()
{
  uint64_t v40 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t v1 = __chkstk_darwin(v40);
  uint64_t v37 = (uint64_t)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v39 = (uint64_t)&v37 - v3;
  uint64_t v4 = type metadata accessor for InteractionContext.Origin();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v38 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1006095A8);
  __chkstk_darwin(v7);
  int v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for InteractionContext();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78(&qword_1006095B0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v41 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v37 - v20;
  swift_beginAccess();
  uint64_t v42 = v0;
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    dispatch thunk of ContextActionsConfiguration.context.getter();
    swift_release();
    InteractionContext.origin.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v21, 0, 1, v4);
  }
  else
  {
    unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v21, 1, 1, v4);
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v19, enum case for InteractionContext.Origin.store(_:), v4);
  v22(v19, 0, 1, v4);
  uint64_t v23 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100054BBC((uint64_t)v21, (uint64_t)v9, &qword_1006095B0);
  sub_100054BBC((uint64_t)v19, v23, &qword_1006095B0);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v9, 1, v4) == 1)
  {
    sub_100054B1C((uint64_t)v19, &qword_1006095B0);
    sub_100054B1C((uint64_t)v21, &qword_1006095B0);
    if (v24(v23, 1, v4) == 1)
    {
      sub_100054B1C((uint64_t)v9, &qword_1006095B0);
      return 0;
    }
    goto LABEL_9;
  }
  uint64_t v25 = v41;
  sub_100054BBC((uint64_t)v9, v41, &qword_1006095B0);
  if (v24(v23, 1, v4) == 1)
  {
    sub_100054B1C((uint64_t)v19, &qword_1006095B0);
    sub_100054B1C((uint64_t)v21, &qword_1006095B0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v25, v4);
LABEL_9:
    sub_100054B1C((uint64_t)v9, &qword_1006095A8);
    goto LABEL_11;
  }
  id v26 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v38, v23, v4);
  sub_100400E38(&qword_1006095B8, (void (*)(uint64_t))&type metadata accessor for InteractionContext.Origin);
  char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v26, v4);
  sub_100054B1C((uint64_t)v19, &qword_1006095B0);
  sub_100054B1C((uint64_t)v21, &qword_1006095B0);
  v28((char *)v25, v4);
  sub_100054B1C((uint64_t)v9, &qword_1006095B0);
  if (v27) {
    return 0;
  }
LABEL_11:
  uint64_t v29 = *(void *)(v42 + 16);
  if (!v29) {
    return 0;
  }
  uint64_t v30 = v29 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  uint64_t v31 = v39;
  sub_1001AC690(v30, v39);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1001AC758(v31);
    return 0;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v32 = v30;
  uint64_t v33 = v37;
  sub_1001AC690(v32, v37);
  uint64_t v34 = (void *)sub_100241558();
  sub_1001AC758(v33);
  if (!v34)
  {
    swift_release();
    return 0;
  }
  id v35 = [v34 subscribed];

  swift_release();
  return v35;
}

uint64_t sub_1003FFB38()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  uint64_t v81 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for OSLogger();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  char v78 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v5 - 8);
  id v75 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v74 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for FlowPresentationContext();
  uint64_t v87 = *(void *)(v88 - 8);
  uint64_t v8 = __chkstk_darwin(v88);
  double v77 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v69 - v10;
  uint64_t v12 = type metadata accessor for FlowPresentationHints();
  id v85 = *(id *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FlowDestination();
  uint64_t v86 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v76 = (uint64_t *)((char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v69 - v18);
  uint64_t v20 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v20 - 8);
  unint64_t v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for PresentationSource();
  uint64_t v23 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v89 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t result = __chkstk_darwin(v25);
  uint64_t v28 = (uint64_t *)((char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = *(void *)(v0 + 16);
  if (v29)
  {
    uint64_t v71 = v23;
    uint64_t v30 = v29 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess();
    sub_1001AC690(v30, (uint64_t)v28);
    if (swift_getEnumCaseMultiPayload() == 1) {
      return sub_1001AC758((uint64_t)v28);
    }
    uint64_t v31 = *v28;
    uint64_t v32 = v28[1];
    uint64_t v33 = (void *)(v0 + 24);
    swift_beginAccess();
    if (*(void *)(v0 + 24))
    {
      uint64_t v70 = v31;
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
      swift_release();
      uint64_t v34 = v71;
      uint64_t v35 = v90;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v22, 1, v90) != 1)
      {
        uint64_t v69 = v32;
        id v36 = v89;
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v89, v22, v35);
        uint64_t v37 = (void *)PresentationSource.viewController.getter();
        if (!v37)
        {
          (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
          return swift_bridgeObjectRelease();
        }
        id v38 = v37;
        id v39 = [v37 traitCollection];
        char v40 = UITraitCollection.interfaceIdiomIsMac.getter();

        if ((v40 & 1) == 0)
        {
          unint64_t v46 = v38;
          objc_super v47 = v89;
          uint64_t v48 = v69;
          if (*v33)
          {
            swift_retain();
            ContextActionsConfiguration.objectGraph.getter();
            swift_release();
            id v49 = v46;
            uint64_t v50 = UIResponder.nearestActionRunner.getter();
            uint64_t v52 = v51;

            if (v50)
            {
              uint64_t v84 = v52;
              uint64_t v53 = v76;
              void *v76 = v70;
              v53[1] = v48;
              (*(void (**)(void *, void, uint64_t))(v86 + 104))(v53, enum case for FlowDestination.podcastSettings(_:), v15);
              (*(void (**)(char *, void, uint64_t))(v87 + 104))(v77, enum case for FlowPresentationContext.presentPopover(_:), v88);
              unsigned __int8 v54 = static Link.Presentation.textFollowsTintColor.getter();
              char v55 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
              Link.Presentation.init(rawValue:)();
              Link.Presentation.init(rawValue:)();
              if (Link.Presentation.init(rawValue:)() != v54) {
                Link.Presentation.init(rawValue:)();
              }
              Link.Presentation.init(rawValue:)();
              char v56 = Link.Presentation.init(rawValue:)();
              id v85 = v49;
              if (v56 != v55) {
                Link.Presentation.init(rawValue:)();
              }
              (*(void (**)(char *, void, uint64_t))(v72 + 104))(v74, enum case for FlowDestinationPageHeader.standard(_:), v73);
              static ActionMetrics.notInstrumented.getter();
              type metadata accessor for FlowAction();
              swift_allocObject();
              FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
              unsigned __int8 v57 = static Link.Presentation.textFollowsTintColor.getter();
              Link.Presentation.init(rawValue:)();
              Link.Presentation.init(rawValue:)();
              if (Link.Presentation.init(rawValue:)() != v57) {
                Link.Presentation.init(rawValue:)();
              }
              long long v58 = (void *)type metadata accessor for PopoverAction();
              swift_allocObject();
              uint64_t v59 = PopoverAction.init(title:presentationStyle:flowAction:)();
              PresentationSource.popoverSource.getter();
              type metadata accessor for ActionRunnerOptions();
              swift_retain();
              BaseObjectGraph.__allocating_init(_:)();
              sub_100054BBC((uint64_t)v95, (uint64_t)v92, &qword_1005F5D30);
              if (v93)
              {
                sub_100400DF8();
                if (swift_dynamicCast()) {
                  uint64_t v60 = v91;
                }
                else {
                  uint64_t v60 = 0;
                }
              }
              else
              {
                sub_100054B1C((uint64_t)v92, &qword_1005F5D30);
                uint64_t v60 = 0;
              }
              sub_100054BBC((uint64_t)v95, (uint64_t)&v91, &qword_1005F5D30);
              id v65 = v60;
              ActionOrigin.init(sender:view:)();
              ActionRunnerOptions.withActionOrigin(_:)();
              sub_100054B1C((uint64_t)v92, (uint64_t *)&unk_100600670);
              swift_release();

              swift_getObjectType();
              uint64_t v93 = v58;
              uint64_t v94 = sub_100400E38(&qword_100609598, (void (*)(uint64_t))&type metadata accessor for PopoverAction);
              v92[0] = v59;
              uint64_t v66 = v79;
              uint64_t v67 = v78;
              uint64_t v68 = v80;
              (*(void (**)(char *, void, uint64_t))(v79 + 104))(v78, enum case for ActionMetricsBehavior.notProcessed(_:), v80);
              swift_retain();
              ActionRunner.perform(_:withMetrics:asPartOf:)();

              swift_release();
              swift_release();
              swift_unknownObjectRelease();
              swift_release();
              swift_release();
              (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
              sub_100054B1C((uint64_t)v95, &qword_1005F5D30);
              (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v90);
              return sub_10004D2D8((uint64_t)v92);
            }
            swift_release();
          }
          char v61 = v82;
          static OSLogger.actions.getter();
          sub_100054B78((uint64_t *)&unk_100603DC0);
          type metadata accessor for LogMessage();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v62._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
          v62._object = (void *)0x80000001004E3670;
          LogMessage.StringInterpolation.appendLiteral(_:)(v62);
          uint64_t v93 = &type metadata for String;
          v92[0] = v70;
          v92[1] = v48;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_100054B1C((uint64_t)v92, &qword_1005F5D30);
          v63._object = (void *)0x80000001004DBE80;
          v63._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v63);
          LogMessage.init(stringInterpolation:)();
          uint64_t v64 = v84;
          Logger.error(_:)();

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v83 + 8))(v61, v64);
          return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v47, v90);
        }
        id v41 = v38;
        UIResponder.nearestFlowController.getter();

        if (v93)
        {
          sub_100041A98(v92, (uint64_t)v93);
          uint64_t v42 = v69;
          *uint64_t v19 = v70;
          v19[1] = v42;
          uint64_t v43 = v86;
          (*(void (**)(void *, void, uint64_t))(v86 + 104))(v19, enum case for FlowDestination.podcastSettings(_:), v15);
          (*(void (**)(char *, void, uint64_t))(v87 + 104))(v11, enum case for FlowPresentationContext.presentModalPageSheet(_:), v88);
          FlowPresentationHints.init(context:animate:)();
          dispatch thunk of FlowController.show(destination:hints:referrer:)();

          (*((void (**)(char *, uint64_t))v85 + 1))(v14, v12);
          (*(void (**)(void *, uint64_t))(v43 + 8))(v19, v15);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v89, v90);
          return sub_10004D2D8((uint64_t)v92);
        }
        (*(void (**)(char *, uint64_t))(v71 + 8))(v89, v90);
        swift_bridgeObjectRelease();

        id v44 = &qword_100604710;
        uint64_t v45 = (char *)v92;
        return sub_100054B1C((uint64_t)v45, v44);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v22, 1, 1, v90);
    }
    swift_bridgeObjectRelease();
    id v44 = (uint64_t *)&unk_100605DC0;
    uint64_t v45 = v22;
    return sub_100054B1C((uint64_t)v45, v44);
  }
  return result;
}

uint64_t sub_100400998()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28SettingsPodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100400A48()
{
  return type metadata accessor for SettingsPodcastContextAction();
}

uint64_t type metadata accessor for SettingsPodcastContextAction()
{
  uint64_t result = qword_100609500;
  if (!qword_100609500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100400A9C()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100400B38()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0xE000000000000000;
  v1._uint64_t countAndFlagsBits = 0x73676E6974746553;
  v1._object = (void *)0xE800000000000000;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100400BD4()
{
  return 1918985575;
}

uint64_t sub_100400BE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28SettingsPodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100400C58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.settings(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_100400D48(uint64_t a1)
{
  uint64_t result = sub_100400E38((unint64_t *)&unk_100608C00, (void (*)(uint64_t))type metadata accessor for SettingsPodcastContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100400DA0(uint64_t a1)
{
  uint64_t result = sub_100400E38(&qword_1005FAB38, (void (*)(uint64_t))type metadata accessor for SettingsPodcastContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100400DF8()
{
  unint64_t result = qword_1006095A0;
  if (!qword_1006095A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006095A0);
  }
  return result;
}

uint64_t sub_100400E38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100400E80()
{
  uint64_t v1 = type metadata accessor for EpisodeOffer();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v15 = *(void *)(v6 + 16);
    if (!v15) {
      return 1;
    }
    uint64_t v16 = *(void *)(v0 + 16);
    unint64_t v17 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v33 = v5;
    sub_1001DCD9C(v16, v5, 1u);
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    uint64_t v18 = v2 + 16;
    uint64_t v20 = (void (**)(char *, uint64_t))(v18 - 8);
    uint64_t v34 = *(void *)(v18 + 56);
    uint64_t v35 = v19;
    uint64_t v32 = v16;
    swift_bridgeObjectRetain();
    while (1)
    {
      v35(v4, v17, v1);
      if (EpisodeOffer.mediaType.getter() == 3) {
        break;
      }
      uint64_t v22 = EpisodeMediaType.rawValue.getter();
      uint64_t v24 = v23;
      if (v22 == EpisodeMediaType.rawValue.getter() && v24 == v25)
      {
        swift_bridgeObjectRelease_n();
        (*v20)(v4, v1);
      }
      else
      {
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*v20)(v4, v1);
        if ((v21 & 1) == 0) {
          goto LABEL_22;
        }
      }
      v17 += v34;
      if (!--v15)
      {
        uint64_t v7 = 1;
        uint64_t v26 = v32;
        uint64_t v27 = v33;
        sub_1001DCDF8(v32, v33, 1u);
        sub_1001DCDF8(v26, v27, 1u);
        return v7;
      }
    }
    (*v20)(v4, v1);
LABEL_22:
    uint64_t v28 = v32;
    uint64_t v29 = v33;
    sub_1001DCDF8(v32, v33, 1u);
    sub_1001DCDF8(v28, v29, 1u);
    return 0;
  }
  if (*(unsigned char *)(v0 + 32)) {
    return 0;
  }
  uint64_t v7 = 1;
  unsigned __int8 v36 = 1;
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8)
  {
    uint64_t v9 = v5;
    type metadata accessor for CoreDataFetcher();
    uint64_t v33 = v9;
    sub_1001DCD9C(v6, v9, 0);
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = v8 - 1;
    uint64_t v12 = v6 + 40;
    do
    {
      __chkstk_darwin(v10);
      *(&v31 - 2) = (uint64_t)&v36;
      swift_bridgeObjectRetain();
      static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
      uint64_t v10 = swift_bridgeObjectRelease();
      uint64_t v7 = v36;
      BOOL v14 = v11-- != 0;
      if (v36 != 1) {
        break;
      }
      v12 += 16;
    }
    while (v14);
    sub_1001DCDF8(v6, v33, 0);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1004011E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(id **)(v1 + 24);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      *a1 = v2;
      uint64_t v11 = enum case for BookmarksControllerEpisodeData.episodeOffers(_:);
      uint64_t v12 = type metadata accessor for BookmarksControllerEpisodeData();
      (*(void (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a1, v11, v12);
      return swift_bridgeObjectRetain();
    case 2:
      id v49 = a1;
      if (v2 >> 62) {
        goto LABEL_48;
      }
      uint64_t v14 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1001DCD9C(v2, (uint64_t)v3, 2u);
      swift_bridgeObjectRetain();
      uint64_t v47 = (uint64_t)v3;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_49;
    case 3:
      if (v2 >> 62)
      {
        sub_1001DCD9C(v2, (uint64_t)v3, 3u);
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v48 = (uint64_t)v3;
        id v49 = a1;
        if (v25) {
          goto LABEL_22;
        }
LABEL_52:
        uint64_t v27 = _swiftEmptyArrayStorage;
LABEL_53:
        sub_1001DCDF8(v2, v48, 3u);
        sub_1001DCDF8(v2, v48, 3u);
        uint64_t v43 = v49;
        *id v49 = (unint64_t)v27;
        goto LABEL_54;
      }
      uint64_t v25 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1001DCD9C(*(void *)(v1 + 16), *(void *)(v1 + 24), 3u);
      swift_bridgeObjectRetain();
      uint64_t v48 = (uint64_t)v3;
      id v49 = a1;
      if (!v25) {
        goto LABEL_52;
      }
LABEL_22:
      if (v25 < 1)
      {
LABEL_59:
        __break(1u);
        JUMPOUT(0x100401768);
      }
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v26 = 0;
        uint64_t v27 = _swiftEmptyArrayStorage;
        while (1)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v28 = MPCPlayerResponseItem.podcastEpisode.getter();
          if (v28)
          {
            uint64_t v29 = (void *)v28;
            uint64_t v30 = MPModelObject.adamID.getter();
            char v32 = v31;
            swift_unknownObjectRelease();

            if ((v32 & 1) == 0)
            {
              if (v30 < 0)
              {
                __break(1u);
                goto LABEL_47;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v27 = sub_1002EF374(0, v27[2] + 1, 1, v27);
              }
              unint64_t v34 = v27[2];
              unint64_t v33 = v27[3];
              if (v34 >= v33 >> 1) {
                uint64_t v27 = sub_1002EF374((void *)(v33 > 1), v34 + 1, 1, v27);
              }
              void v27[2] = v34 + 1;
              v27[v34 + 4] = v30;
            }
          }
          else
          {
            swift_unknownObjectRelease();
          }
          if (v25 == ++v26) {
            goto LABEL_53;
          }
        }
      }
      uint64_t v3 = (id *)(v2 + 32);
      uint64_t v27 = _swiftEmptyArrayStorage;
      while (1)
      {
        id v35 = *v3;
        uint64_t v36 = MPCPlayerResponseItem.podcastEpisode.getter();
        if (v36) {
          break;
        }

LABEL_37:
        ++v3;
        if (!--v25) {
          goto LABEL_53;
        }
      }
      uint64_t v37 = (void *)v36;
      uint64_t v38 = MPModelObject.adamID.getter();
      char v40 = v39;

      if (v40) {
        goto LABEL_37;
      }
      if ((v38 & 0x8000000000000000) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v27 = sub_1002EF374(0, v27[2] + 1, 1, v27);
        }
        unint64_t v42 = v27[2];
        unint64_t v41 = v27[3];
        if (v42 >= v41 >> 1) {
          uint64_t v27 = sub_1002EF374((void *)(v41 > 1), v42 + 1, 1, v27);
        }
        void v27[2] = v42 + 1;
        v27[v42 + 4] = v38;
        goto LABEL_37;
      }
LABEL_47:
      __break(1u);
LABEL_48:
      sub_1001DCD9C(v2, (uint64_t)v3, 2u);
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v47 = (uint64_t)v3;
      if (!v14)
      {
LABEL_49:
        uint64_t v18 = _swiftEmptyArrayStorage;
        goto LABEL_50;
      }
LABEL_8:
      uint64_t v15 = self;
      if (v14 < 1)
      {
        __break(1u);
        goto LABEL_59;
      }
      uint64_t v16 = (void *)v15;
      uint64_t v17 = 0;
      uint64_t v18 = _swiftEmptyArrayStorage;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v19 = *(id *)(v2 + 8 * v17 + 32);
        }
        uint64_t v20 = v19;
        id v21 = [v19 episodeStoreId];
        unsigned int v22 = [v16 isNotEmpty:v21];

        if (v22)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v18 = sub_1002EF374(0, v18[2] + 1, 1, v18);
          }
          unint64_t v24 = v18[2];
          unint64_t v23 = v18[3];
          if (v24 >= v23 >> 1) {
            uint64_t v18 = sub_1002EF374((void *)(v23 > 1), v24 + 1, 1, v18);
          }
          long long v18[2] = v24 + 1;
          v18[v24 + 4] = v21;
        }
        ++v17;
      }
      while (v14 != v17);
LABEL_50:
      sub_1001DCDF8(v2, v47, 2u);
      sub_1001DCDF8(v2, v47, 2u);
      uint64_t v43 = v49;
      *id v49 = (unint64_t)v18;
LABEL_54:
      uint64_t v44 = enum case for BookmarksControllerEpisodeData.storeIds(_:);
      uint64_t v45 = type metadata accessor for BookmarksControllerEpisodeData();
      uint64_t v10 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 104);
      uint64_t v9 = v45;
      uint64_t v7 = v43;
      uint64_t v8 = v44;
LABEL_55:
      return v10(v7, v8, v9);
    default:
      *a1 = v2;
      uint64_t v5 = enum case for BookmarksControllerEpisodeData.localEpisodes(_:);
      uint64_t v6 = type metadata accessor for BookmarksControllerEpisodeData();
      unint64_t v46 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);
      swift_bridgeObjectRetain();
      uint64_t v7 = a1;
      uint64_t v8 = v5;
      uint64_t v9 = v6;
      uint64_t v10 = v46;
      goto LABEL_55;
  }
}

void *sub_100401778(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = (uint64_t)result;
    if (!result) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_18;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v5 = MPCPlayerResponseItem.podcastEpisode.getter();
      swift_unknownObjectRelease();
      if (v5)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v2; ++j)
    {
      id v7 = *(id *)(a1 + 8 * j + 32);
      uint64_t v8 = MPCPlayerResponseItem.podcastEpisode.getter();

      if (v8)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    uint64_t v9 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_20;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_28;
  }
LABEL_20:
  uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
  if ((v9 & 0x8000000000000000) == 0)
  {
    sub_1001C6F20();
    uint64_t v10 = 0;
    do
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = (id)_swiftEmptyArrayStorage[v10 + 4];
      }
      ++v10;
      IMPlayerItem.init(modelObject:includeArtworkCatalog:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v9 != v10);
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

BOOL sub_100401A34()
{
  unint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      uint64_t v3 = sub_100401E68(1);
      goto LABEL_4;
    case 2:
      if (!(v2 >> 62))
      {
        uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v5) {
          goto LABEL_7;
        }
LABEL_31:
        sub_1001DCDF8(v2, v1, 2u);
        if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
          goto LABEL_32;
        }
        goto LABEL_27;
      }
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5) {
        goto LABEL_31;
      }
LABEL_7:
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v6 = 0;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(v2 + 8 * v6 + 32);
        }
        if ([v7 isExplicit])
        {
          type metadata accessor for RestrictionsController();
          static RestrictionsController.isExplicitContentAllowed.getter();
        }
        ++v6;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v5 != v6);
      uint64_t v10 = v2;
      uint64_t v11 = v1;
      unsigned __int8 v12 = 2;
LABEL_26:
      sub_1001DCDF8(v10, v11, v12);
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      {
LABEL_32:
        swift_bridgeObjectRetain();
        uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
        swift_release_n();
        return v4 != 0;
      }
LABEL_27:
      if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0) {
        goto LABEL_32;
      }
      uint64_t v4 = _swiftEmptyArrayStorage[2];
      swift_release();
      return v4 != 0;
    case 3:
      if (v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        if (!v8) {
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v8) {
          goto LABEL_25;
        }
      }
      if (v8 < 1)
      {
LABEL_36:
        __break(1u);
        JUMPOUT(0x100401D28);
      }
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = 0;
        do
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          ++v9;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        while (v8 != v9);
      }
      else
      {
        uint64_t v13 = (void **)(v2 + 32);
        do
        {
          uint64_t v14 = *v13++;
          id v15 = v14;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          --v8;
        }
        while (v8);
      }
LABEL_25:
      uint64_t v10 = v2;
      uint64_t v11 = v1;
      unsigned __int8 v12 = 3;
      goto LABEL_26;
    default:
      uint64_t v3 = (uint64_t)sub_100401D38();
LABEL_4:
      uint64_t v4 = *(void *)(v3 + 16);
      swift_bridgeObjectRelease();
      return v4 != 0;
  }
}

void *sub_100401D38()
{
  if (!*(unsigned char *)(v0 + 32))
  {
    uint64_t v1 = *(void *)(v0 + 16);
    swift_bridgeObjectRetain();
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = type metadata accessor for CoreDataFetcher();
      uint64_t v4 = v1 + 40;
      do
      {
        __chkstk_darwin(v3);
        swift_bridgeObjectRetain();
        static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
        uint64_t v3 = swift_bridgeObjectRelease();
        v4 += 16;
        --v2;
      }
      while (v2);
    }
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100401E68(int a1)
{
  int v48 = a1;
  uint64_t v50 = type metadata accessor for ShowOffer();
  uint64_t v2 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EpisodeOffer();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v52 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v60 = (char *)&v46 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v46 - v13;
  id v15 = (char *)_swiftEmptyArrayStorage;
  if (*(unsigned char *)(v1 + 32) != 1) {
    return (uint64_t)v15;
  }
  uint64_t v16 = *(void *)(v1 + 16);
  uint64_t v17 = *(void *)(v1 + 24);
  char v61 = (char *)_swiftEmptyArrayStorage;
  uint64_t v18 = *(void *)(v16 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v56 = v18;
  if (!v18)
  {
LABEL_32:
    sub_1001DCDF8(result, v17, 1u);
    return (uint64_t)v15;
  }
  uint64_t v47 = v17;
  uint64_t v53 = v4;
  unsigned __int8 v54 = v10;
  unint64_t v20 = 0;
  id v21 = (void (**)(char *, uint64_t))(v57 + 8);
  id v49 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v51 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v55 = result;
  while (v20 < *(void *)(result + 16))
  {
    unint64_t v22 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v23 = *(void *)(v57 + 72);
    unint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
    v24(v14, result + v22 + v23 * v20, v5);
    char v25 = EpisodeOffer.contentRating.getter();
    uint64_t v58 = v23;
    unint64_t v59 = v22;
    if (v25 == 2)
    {
      uint64_t v26 = v60;
      v24(v60, (unint64_t)v14, v5);
    }
    else
    {
      uint64_t v29 = ContentRating.rawValue.getter();
      uint64_t v31 = v30;
      if (v29 == ContentRating.rawValue.getter() && v31 == v32)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v26 = v60;
        v24(v60, (unint64_t)v14, v5);
LABEL_19:
        uint64_t v28 = *v21;
        (*v21)(v26, v5);
        goto LABEL_20;
      }
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v60;
      v24(v60, (unint64_t)v14, v5);
      if (v37) {
        goto LABEL_19;
      }
    }
    uint64_t v27 = v53;
    EpisodeOffer.showOffer.getter();
    if (ShowOffer.contentRating.getter() == 2)
    {
      (*v49)(v27, v50);
      uint64_t v28 = *v21;
      (*v21)(v26, v5);
LABEL_24:
      char v39 = v54;
      v24(v54, (unint64_t)v14, v5);
      goto LABEL_25;
    }
    uint64_t v33 = ContentRating.rawValue.getter();
    uint64_t v35 = v34;
    if (v33 == ContentRating.rawValue.getter() && v35 == v36)
    {
      swift_bridgeObjectRelease_n();
      (*v49)(v53, v50);
      uint64_t v26 = v60;
      goto LABEL_19;
    }
    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v49)(v53, v50);
    uint64_t v28 = *v21;
    (*v21)(v60, v5);
    if ((v40 & 1) == 0) {
      goto LABEL_24;
    }
LABEL_20:
    type metadata accessor for RestrictionsController();
    char v38 = static RestrictionsController.isExplicitContentAllowed.getter();
    char v39 = v54;
    v24(v54, (unint64_t)v14, v5);
    if ((v38 & 1) == 0 && (v48 & 1) == 0)
    {
      v28(v39, v5);
      goto LABEL_5;
    }
LABEL_25:
    char v41 = EpisodeOffer.isEntitledOffer.getter();
    v28(v39, v5);
    if (v41)
    {
      unint64_t v42 = *v51;
      (*v51)(v52, v14, v5);
      uint64_t v43 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA580(0, *((void *)v43 + 2) + 1, 1);
        uint64_t v43 = v61;
      }
      unint64_t v45 = *((void *)v43 + 2);
      unint64_t v44 = *((void *)v43 + 3);
      if (v45 >= v44 >> 1)
      {
        sub_1001BA580(v44 > 1, v45 + 1, 1);
        uint64_t v43 = v61;
      }
      *((void *)v43 + 2) = v45 + 1;
      v42(&v43[v59 + v45 * v58], v52, v5);
      char v61 = v43;
      goto LABEL_6;
    }
LABEL_5:
    v28(v14, v5);
LABEL_6:
    uint64_t result = v55;
    if (v56 == ++v20)
    {
      id v15 = v61;
      uint64_t v17 = v47;
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10040241C(void *a1, uint64_t a2, unsigned __int8 a3)
{
  int v4 = a3;
  id v5 = [self sharedInstance];
  id v6 = [v5 mainOrPrivateContext];

  if (v4 || !a1[2])
  {

    return 0;
  }
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v16 = 0;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = &v16;
  v10[3] = v6;
  v10[4] = v8;
  v10[5] = v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_10040459C;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_10004A010;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  void aBlock[3] = &unk_100569F70;
  uint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v13 = v6;
  swift_retain();
  swift_release();
  [v13 performBlockAndWait:v12];

  _Block_release(v12);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v13 & 1) == 0)
  {
    uint64_t v7 = v16;
    swift_release();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004025F4()
{
  uint64_t v78 = type metadata accessor for ShowOffer();
  uint64_t v1 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v3 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for EpisodeOffer();
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81[0] = 0;
  v81[1] = 0xE000000000000000;
  v80[0] = 0;
  v80[1] = 0xE000000000000000;
  unint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      uint64_t v17 = *(void *)(v8 + 16);
      if (v17)
      {
        uint64_t v18 = v5;
        unint64_t v19 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        uint64_t v72 = v9;
        sub_1001DCD9C(v8, v9, 1u);
        unint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
        v18 += 16;
        uint64_t v74 = *(void *)(v18 + 56);
        id v75 = v20;
        uint64_t v73 = (void (**)(char *, uint64_t))(v1 + 8);
        uint64_t v21 = v8;
        uint64_t v77 = v18;
        unint64_t v22 = (void (**)(char *, uint64_t))(v18 - 8);
        uint64_t v71 = v21;
        swift_bridgeObjectRetain();
        uint64_t v76 = v17;
        uint64_t v23 = v17;
        do
        {
          v75(v7, v19, v4);
          EpisodeOffer.showOffer.getter();
          uint64_t v24 = ShowOffer.adamId.getter();
          (*v73)(v3, v78);
          id v79 = (id)v24;
          sub_1001A5874();
          v25._uint64_t countAndFlagsBits = BinaryInteger.description.getter();
          String.append(_:)(v25);
          swift_bridgeObjectRelease();
          id v79 = (id)EpisodeOffer.contentId.getter();
          v26._uint64_t countAndFlagsBits = BinaryInteger.description.getter();
          String.append(_:)(v26);
          swift_bridgeObjectRelease();
          if (v76 != 1)
          {
            v27._uint64_t countAndFlagsBits = 44;
            v27._object = (void *)0xE100000000000000;
            String.append(_:)(v27);
            v28._uint64_t countAndFlagsBits = 44;
            v28._object = (void *)0xE100000000000000;
            String.append(_:)(v28);
          }
          (*v22)(v7, v4);
          v19 += v74;
          --v23;
        }
        while (v23);
        uint64_t v61 = v71;
        uint64_t v62 = v72;
        sub_1001DCDF8(v71, v72, 1u);
        uint64_t v63 = v61;
        uint64_t v64 = v62;
        unsigned __int8 v65 = 1;
        goto LABEL_53;
      }
      return v81[0];
    case 2:
      unint64_t v29 = *(void *)(v0 + 16);
      uint64_t v30 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v29 >> 62)
      {
        sub_1001DCD9C(v29, v9, 2u);
        swift_bridgeObjectRetain_n();
        uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
        sub_1001DCDF8(v29, v9, 2u);
        if (v31)
        {
          swift_bridgeObjectRetain();
          uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v68 = v9;
          uint64_t v9 = v29;
          uint64_t v72 = v68;
          sub_1001DCDF8(v29, v68, 2u);
          BOOL v32 = v67 > 1;
          if (v31 >= 1)
          {
LABEL_15:
            for (uint64_t i = 0; i != v31; ++i)
            {
              if ((v9 & 0xC000000000000001) != 0) {
                id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v34 = *(id *)(v9 + 8 * i + 32);
              }
              uint64_t v35 = v34;
              id v79 = [v34 podcastStoreId];
              v36._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
              String.append(_:)(v36);
              swift_bridgeObjectRelease();
              id v79 = [v35 episodeStoreId];
              v37._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
              String.append(_:)(v37);
              swift_bridgeObjectRelease();
              if (v32)
              {
                v38._uint64_t countAndFlagsBits = 44;
                v38._object = (void *)0xE100000000000000;
                String.append(_:)(v38);
                v39._uint64_t countAndFlagsBits = 44;
                v39._object = (void *)0xE100000000000000;
                String.append(_:)(v39);
              }
            }
            uint64_t v66 = v72;
            sub_1001DCDF8(v9, v72, 2u);
            uint64_t v63 = v9;
            uint64_t v64 = v66;
            unsigned __int8 v65 = 2;
            goto LABEL_53;
          }
          __break(1u);
        }
      }
      else
      {
        uint64_t v31 = *(void *)(v30 + 16);
        sub_1001DCD9C(*(void *)(v0 + 16), *(void *)(v0 + 24), 2u);
        swift_bridgeObjectRetain();
        if (v31)
        {
          uint64_t v72 = v9;
          uint64_t v9 = v29;
          BOOL v32 = *(void *)(v30 + 16) > 1uLL;
          goto LABEL_15;
        }
      }
      sub_1001DCDF8(v29, v9, 2u);
      uint64_t v63 = v29;
      uint64_t v64 = v9;
      unsigned __int8 v65 = 2;
      goto LABEL_53;
    case 3:
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        if (v40) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v40 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v40)
        {
LABEL_24:
          uint64_t v72 = v9;
          if (v40 < 1)
          {
            __break(1u);
            JUMPOUT(0x100402D98);
          }
          uint64_t v41 = 0;
          while (1)
          {
            if ((v8 & 0xC000000000000001) != 0) {
              id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v45 = *(id *)(v8 + 8 * v41 + 32);
            }
            uint64_t v46 = v45;
            uint64_t v47 = (void *)MPCPlayerResponseItem.podcastEpisode.getter();
            if (v47)
            {
              int v48 = v47;
              id v49 = [v47 podcast];

              if (v49)
              {
                uint64_t v50 = MPModelObject.adamID.getter();
                char v52 = v51;

                if ((v52 & 1) == 0)
                {
                  id v79 = (id)v50;
                  sub_1001A5874();
                  uint64_t v47 = (void *)BinaryInteger.description.getter();
                  unint64_t v54 = v53;
                  goto LABEL_38;
                }
              }
              uint64_t v47 = 0;
            }
            unint64_t v54 = 0xE000000000000000;
LABEL_38:
            unint64_t v55 = v54;
            String.append(_:)(*(Swift::String *)&v47);
            swift_bridgeObjectRelease();
            uint64_t v42 = MPCPlayerResponseItem.podcastEpisode.getter();
            if (v42)
            {
              uint64_t v56 = (void *)v42;
              uint64_t v57 = MPModelObject.adamID.getter();
              char v59 = v58;

              if ((v59 & 1) == 0)
              {
                id v79 = (id)v57;
                sub_1001A5874();
                uint64_t v42 = BinaryInteger.description.getter();
                unint64_t v43 = v60;
                goto LABEL_28;
              }
              uint64_t v42 = 0;
            }
            unint64_t v43 = 0xE000000000000000;
LABEL_28:
            ++v41;
            unint64_t v44 = v43;
            String.append(_:)(*(Swift::String *)&v42);
            swift_bridgeObjectRelease();

            if (v40 == v41)
            {
              uint64_t v63 = v8;
              uint64_t v64 = v72;
              goto LABEL_52;
            }
          }
        }
      }
      uint64_t v63 = v8;
      uint64_t v64 = v9;
LABEL_52:
      unsigned __int8 v65 = 3;
LABEL_53:
      sub_1001DCDF8(v63, v64, v65);
      return v81[0];
    default:
      uint64_t v10 = *(void *)(v0 + 16);
      uint64_t v11 = *(void *)(v8 + 16);
      swift_bridgeObjectRetain();
      if (v11)
      {
        type metadata accessor for CoreDataFetcher();
        uint64_t v12 = swift_bridgeObjectRetain();
        uint64_t v71 = v10;
        uint64_t v13 = v10 + 40;
        uint64_t v14 = v11;
        do
        {
          __chkstk_darwin(v12);
          *(&v70 - 2) = (uint64_t)v81;
          *(&v70 - 1) = (uint64_t)v80;
          swift_bridgeObjectRetain();
          static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
          uint64_t v12 = swift_bridgeObjectRelease();
          if (v11 != 1)
          {
            v15._uint64_t countAndFlagsBits = 44;
            v15._object = (void *)0xE100000000000000;
            String.append(_:)(v15);
            v16._uint64_t countAndFlagsBits = 44;
            v16._object = (void *)0xE100000000000000;
            String.append(_:)(v16);
          }
          v13 += 16;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return v81[0];
  }
}

uint64_t sub_100402DA8()
{
  uint64_t v1 = type metadata accessor for EpisodeOffer();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      if (!*(void *)(v5 + 16)) {
        return 0;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), v1);
      uint64_t v8 = EpisodeOffer.contentId.getter();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v8;
    case 2:
      if (v5 >> 62)
      {
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_8;
        }
LABEL_21:
        uint64_t v16 = v5;
        uint64_t v17 = v6;
        unsigned __int8 v18 = 2;
        goto LABEL_24;
      }
      uint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_21;
      }
LABEL_8:
      if ((v5 & 0xC000000000000001) != 0)
      {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_11;
      }
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v10 = *(id *)(v5 + 32);
LABEL_11:
        uint64_t v11 = v10;
        sub_1001DCDF8(v5, v6, 2u);
        uint64_t v8 = IMPlayerItem.adamID.getter();

        return v8;
      }
      __break(1u);
LABEL_29:
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_17:
      uint64_t v14 = v13;
      sub_1001DCDF8(v5, v6, 3u);
      Swift::String v15 = (void *)MPCPlayerResponseItem.podcastEpisode.getter();

      if (!v15) {
        return 0;
      }
      uint64_t v8 = MPModelObject.adamID.getter();

      return v8;
    case 3:
      if (v5 >> 62)
      {
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v12)
        {
LABEL_14:
          if ((v5 & 0xC000000000000001) != 0) {
            goto LABEL_29;
          }
          if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x1004030D4);
          }
          id v13 = *(id *)(v5 + 32);
          goto LABEL_17;
        }
      }
      uint64_t v16 = v5;
      uint64_t v17 = v6;
      unsigned __int8 v18 = 3;
LABEL_24:
      sub_1001DCDF8(v16, v17, v18);
      return 0;
    default:
      uint64_t v7 = *(void *)(v5 + 16);
      swift_bridgeObjectRetain();
      if (v7)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        type metadata accessor for CoreDataFetcher();
        sub_100054B78(&qword_1005FCD70);
        static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
        swift_bridgeObjectRelease();
        return v20;
      }
      swift_bridgeObjectRelease();
      return 0;
  }
}

void sub_1004030E4(void **a1, void *a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a2 episodeForUuid:v4];

  uint64_t v6 = *a1;
  *a1 = v5;
}

uint64_t sub_10040315C()
{
  uint64_t v1 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v4 = (char *)type metadata accessor for EpisodeOffer();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  int v11 = *(unsigned __int8 *)(v0 + 32);
  unint64_t v75 = v10;
  if (v11 == 2)
  {
    if (v10 >> 62)
    {
      sub_1001DCD9C(v10, v9, 2u);
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      if (v25)
      {
LABEL_14:
        uint64_t v68 = v9;
        uint64_t v69 = v0;
        id v74 = self;
        uint64_t result = type metadata accessor for CoreDataFetcher();
        uint64_t v73 = result;
        if (v25 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v26 = 0;
        Swift::String v27 = *(void **)(v69 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider);
        unint64_t v70 = v10 & 0xC000000000000001;
        id v71 = v27;
        uint64_t v76 = (char *)_swiftEmptyArrayStorage;
        Swift::String v28 = &selRef_dismissActionSheetsAndPopovers;
        id v79 = v3;
        uint64_t v72 = v25;
        do
        {
          if (v70) {
            id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v30 = *(id *)(v10 + 8 * v26 + 32);
          }
          uint64_t v31 = v30;
          id v78 = [v71 mainOrPrivateContext];
          id v32 = [v31 v28[160]];
          if ([v74 isNotEmpty:v32]) {
            id v77 = [v31 v28[160]];
          }
          else {
            id v77 = 0;
          }
          id v33 = [v31 episodeGuid];
          if (v33)
          {
            id v34 = v33;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          id v35 = [v31 title];
          if (v35)
          {
            Swift::String v36 = v35;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          id v37 = [v31 pubDate];
          if (v37)
          {
            Swift::String v38 = v37;
            Swift::String v39 = v79;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v40 = type metadata accessor for Date();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
          }
          else
          {
            uint64_t v41 = type metadata accessor for Date();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v79, 1, 1, v41);
          }
          id v42 = [v31 podcastUuid];
          if (v42)
          {
            unint64_t v43 = v42;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          unint64_t v44 = v78;
          uint64_t v45 = (uint64_t)v79;
          uint64_t v46 = (void *)static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:with:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1001B6BC4(v45);
          if (v46)
          {
            id v47 = [v46 uuid];
            if (v47)
            {
              int v48 = v47;
              uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v51 = v50;

              char v52 = v76;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v52 = sub_10004CEAC(0, *((void *)v52 + 2) + 1, 1, v52);
              }
              unint64_t v54 = *((void *)v52 + 2);
              unint64_t v53 = *((void *)v52 + 3);
              uint64_t v76 = v52;
              if (v54 >= v53 >> 1) {
                uint64_t v76 = sub_10004CEAC((char *)(v53 > 1), v54 + 1, 1, v76);
              }
              unint64_t v55 = v76;
              *((void *)v76 + 2) = v54 + 1;
              uint64_t v56 = &v55[16 * v54];
              *((void *)v56 + 4) = v49;
              *((void *)v56 + 5) = v51;
              uint64_t v57 = v44;
              unint64_t v44 = v46;
            }
            else
            {
              uint64_t v57 = v46;
            }
            uint64_t v29 = v72;

            unint64_t v10 = v75;
          }
          else
          {
            unint64_t v10 = v75;
            uint64_t v29 = v72;
          }
          Swift::String v28 = &selRef_dismissActionSheetsAndPopovers;
          ++v26;
        }
        while (v29 != v26);
        uint64_t v9 = v68;
        sub_1001DCDF8(v10, v68, 2u);
        uint64_t v0 = v69;
        char v58 = v76;
        if (*((void *)v76 + 2))
        {
LABEL_43:
          uint64_t v59 = *(void *)(v0 + 16);
          uint64_t v60 = *(void *)(v0 + 24);
          *(void *)(v0 + 16) = v58;
          *(void *)(v0 + 24) = 0;
          unsigned __int8 v61 = *(unsigned char *)(v0 + 32);
          *(unsigned char *)(v0 + 32) = 0;
          uint64_t v62 = sub_1001DCDF8(v59, v60, v61);
          sub_10040315C(v62);
          return sub_1001DCDF8(v10, v9, 2u);
        }
LABEL_50:
        sub_1001DCDF8(v10, v9, 2u);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v25 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1001DCD9C(v10, v9, 2u);
      swift_bridgeObjectRetain();
      if (v25) {
        goto LABEL_14;
      }
    }
    sub_1001DCDF8(v10, v9, 2u);
    char v58 = (char *)_swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_43;
    }
    goto LABEL_50;
  }
  if (v11 != 1) {
    return result;
  }
  uint64_t v68 = v9;
  uint64_t v69 = v0;
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    type metadata accessor for CoreDataFetcher();
    uint64_t v14 = *(void **)(v5 + 16);
    id v13 = (char *)(v5 + 16);
    unint64_t v15 = v10 + ((v13[64] + 32) & ~(unint64_t)v13[64]);
    id v77 = (id)*((void *)v13 + 7);
    id v78 = v14;
    id v79 = v13;
    uint64_t v16 = (void (**)(char *, char *))(v13 - 8);
    swift_bridgeObjectRetain();
    uint64_t v17 = (char *)_swiftEmptyArrayStorage;
    uint64_t v76 = v4;
    do
    {
      ((void (*)(char *, unint64_t, char *))v78)(v8, v15, v4);
      uint64_t v19 = static CoreDataFetcher.episodeUuid(for:)();
      if (v20)
      {
        uint64_t v21 = v19;
        uint64_t v22 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = sub_10004CEAC(0, *((void *)v17 + 2) + 1, 1, v17);
        }
        unint64_t v24 = *((void *)v17 + 2);
        unint64_t v23 = *((void *)v17 + 3);
        if (v24 >= v23 >> 1) {
          uint64_t v17 = sub_10004CEAC((char *)(v23 > 1), v24 + 1, 1, v17);
        }
        *((void *)v17 + 2) = v24 + 1;
        unsigned __int8 v18 = &v17[16 * v24];
        *((void *)v18 + 4) = v21;
        *((void *)v18 + 5) = v22;
        NSString v4 = v76;
      }
      (*v16)(v8, v4);
      v15 += (unint64_t)v77;
      --v12;
    }
    while (v12);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = (char *)_swiftEmptyArrayStorage;
  }
  if (*((void *)v17 + 2))
  {
    uint64_t v63 = v69;
    uint64_t v64 = *(void *)(v69 + 16);
    uint64_t v65 = *(void *)(v69 + 24);
    *(void *)(v69 + 16) = v17;
    *(void *)(v63 + 24) = 0;
    unsigned __int8 v66 = *(unsigned char *)(v63 + 32);
    *(unsigned char *)(v63 + 32) = 0;
    uint64_t v67 = sub_1001DCDF8(v64, v65, v66);
    sub_10040315C(v67);
    return sub_1001DCDF8(v75, v68, 1u);
  }
  sub_1001DCDF8(v75, v68, 1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100403858()
{
  sub_1001DCDF8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint;
  uint64_t v2 = type metadata accessor for PreviewingPresentationHint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100403914()
{
  return type metadata accessor for EpisodeContextActionData();
}

uint64_t type metadata accessor for EpisodeContextActionData()
{
  uint64_t result = qword_1006095F0;
  if (!qword_1006095F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100403968()
{
  uint64_t result = type metadata accessor for PreviewingPresentationHint();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for EpisodeContextActionDataType(uint64_t a1)
{
  return sub_1001DCDF8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8Podcasts28EpisodeContextActionDataTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1001DCD9C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for EpisodeContextActionDataType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1001DCD9C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1001DCDF8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EpisodeContextActionDataType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1001DCDF8(v4, v5, v6);
  return a1;
}

uint64_t sub_100403B18(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100403B20(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeContextActionDataType()
{
  return &type metadata for EpisodeContextActionDataType;
}

uint64_t sub_100403B38@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result)
  {
    uint64_t result = MTEpisode.contentId.getter();
    char v4 = v3 & 1;
  }
  else
  {
    char v4 = 1;
  }
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

void *sub_100403B78()
{
  uint64_t result = _swiftEmptyArrayStorage;
  if (!*(unsigned char *)(v0 + 32))
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v4 = *(void *)(v2 + 16);
    if (v4)
    {
      type metadata accessor for CoreDataFetcher();
      sub_1001DCD9C(v2, v3, 0);
      uint64_t v5 = swift_bridgeObjectRetain();
      uint64_t v6 = v2 + 40;
      do
      {
        __chkstk_darwin(v5);
        swift_bridgeObjectRetain();
        static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
        uint64_t v5 = swift_bridgeObjectRelease();
        v6 += 16;
        --v4;
      }
      while (v4);
      sub_1001DCDF8(v2, v3, 0);
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

void sub_100403CAC(void *a1, char **a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    id v12 = a1;
    if (([v12 isRestricted] & 1) == 0)
    {
      uint64_t v7 = *a2;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v7 = sub_10004CEAC(0, *((void *)v7 + 2) + 1, 1, v7);
        *a2 = v7;
      }
      unint64_t v10 = *((void *)v7 + 2);
      unint64_t v9 = *((void *)v7 + 3);
      if (v10 >= v9 >> 1)
      {
        uint64_t v7 = sub_10004CEAC((char *)(v9 > 1), v10 + 1, 1, v7);
        *a2 = v7;
      }
      *((void *)v7 + 2) = v10 + 1;
      int v11 = &v7[16 * v10];
      *((void *)v11 + 4) = a3;
      *((void *)v11 + 5) = a4;
    }
  }
}

uint64_t sub_100403DA0()
{
  uint64_t v1 = type metadata accessor for ShowOffer();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EpisodeOffer();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  __chkstk_darwin(v10);
  id v13 = (char *)&v39 - v12;
  uint64_t v14 = (char *)_swiftEmptyArrayStorage;
  if (*(unsigned char *)(v0 + 32) != 1) {
    return (uint64_t)v14;
  }
  uint64_t v49 = v11;
  uint64_t v50 = (char *)_swiftEmptyArrayStorage;
  id v42 = v4;
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v39 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v44 = v16;
  if (!v16)
  {
LABEL_28:
    sub_1001DCDF8(result, v39, 1u);
    return (uint64_t)v14;
  }
  id v47 = v9;
  uint64_t v41 = v1;
  unint64_t v18 = 0;
  uint64_t v40 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v45 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v46 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v19 = v49;
  uint64_t v48 = v6 + 16;
  uint64_t v43 = result;
  while (v18 < *(void *)(result + 16))
  {
    unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v21 = *(void *)(v6 + 72);
    uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    v22(v13, result + v20 + v21 * v18, v5);
    if (EpisodeOffer.contentRating.getter() == 2)
    {
      v22(v19, (unint64_t)v13, v5);
    }
    else
    {
      uint64_t v24 = ContentRating.rawValue.getter();
      uint64_t v26 = v25;
      if (v24 == ContentRating.rawValue.getter() && v26 == v27)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v19 = v49;
        v22(v49, (unint64_t)v13, v5);
LABEL_18:
        id v33 = *v45;
        (*v45)((uint64_t)v19, v5);
        goto LABEL_19;
      }
      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v49;
      v22(v49, (unint64_t)v13, v5);
      if (v32) {
        goto LABEL_18;
      }
    }
    unint64_t v23 = v42;
    EpisodeOffer.showOffer.getter();
    if (ShowOffer.contentRating.getter() == 2)
    {
      (*v40)(v23, v41);
      (*v45)((uint64_t)v19, v5);
LABEL_22:
      id v35 = *v46;
      (*v46)(v47, v13, v5);
      Swift::String v36 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA580(0, *((void *)v36 + 2) + 1, 1);
        Swift::String v36 = v50;
      }
      unint64_t v38 = *((void *)v36 + 2);
      unint64_t v37 = *((void *)v36 + 3);
      if (v38 >= v37 >> 1)
      {
        sub_1001BA580(v37 > 1, v38 + 1, 1);
        Swift::String v36 = v50;
      }
      *((void *)v36 + 2) = v38 + 1;
      v35(&v36[v20 + v38 * v21], v47, v5);
      uint64_t v50 = v36;
      uint64_t v19 = v49;
      goto LABEL_5;
    }
    uint64_t v28 = ContentRating.rawValue.getter();
    uint64_t v30 = v29;
    if (v28 == ContentRating.rawValue.getter() && v30 == v31)
    {
      swift_bridgeObjectRelease_n();
      (*v40)(v42, v41);
      uint64_t v19 = v49;
      goto LABEL_18;
    }
    char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v40)(v42, v41);
    id v33 = *v45;
    uint64_t v19 = v49;
    (*v45)((uint64_t)v49, v5);
    if ((v34 & 1) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    type metadata accessor for RestrictionsController();
    if (static RestrictionsController.isExplicitContentAllowed.getter()) {
      goto LABEL_22;
    }
    v33((uint64_t)v13, v5);
LABEL_5:
    ++v18;
    uint64_t result = v43;
    if (v44 == v18)
    {
      uint64_t v14 = v50;
      goto LABEL_28;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004042C0(void *a1)
{
  if (!a1)
  {
    unint64_t v7 = 0xE000000000000000;
    unint64_t v8 = 0xE000000000000000;
    String.append(_:)(*(Swift::String *)&a1);
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    goto LABEL_11;
  }
  id v1 = [a1 podcast];
  if (v1)
  {
    uint64_t v2 = v1;
    MTPodcast.adamId.getter();
    char v4 = v3;

    if ((v4 & 1) == 0)
    {
      sub_1001A5874();
      id v1 = (id)BinaryInteger.description.getter();
      unint64_t v6 = v5;
      goto LABEL_8;
    }
    id v1 = 0;
  }
  unint64_t v6 = 0xE000000000000000;
LABEL_8:
  unint64_t v10 = v6;
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease();
  MTEpisode.contentId.getter();
  if (v11)
  {
    uint64_t v9 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  else
  {
    sub_1001A5874();
    uint64_t v9 = BinaryInteger.description.getter();
    unint64_t v7 = v12;
  }
LABEL_11:
  unint64_t v13 = v7;
  String.append(_:)(*(Swift::String *)&v9);
  return swift_bridgeObjectRelease();
}

void *sub_1004043E0(void *result, char a2, char **a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    id v9 = result;
    unint64_t v10 = v9;
    id v22 = v9;
    if ((a2 & 1) != 0 || (v11 = [v9 isRestricted], unint64_t v10 = v22, (v11 & 1) == 0))
    {
      if ([v10 isEntitled])
      {
        unint64_t v12 = *a3;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a3 = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v12 = sub_10004CEAC(0, *((void *)v12 + 2) + 1, 1, v12);
          *a3 = v12;
        }
        unint64_t v14 = *((void *)v12 + 2);
        unint64_t v15 = *((void *)v12 + 3);
        unint64_t v16 = v14 + 1;
        if (v14 >= v15 >> 1)
        {
          unint64_t v21 = v14 + 1;
          unint64_t v18 = v12;
          unint64_t v19 = *((void *)v12 + 2);
          unint64_t v20 = sub_10004CEAC((char *)(v15 > 1), v14 + 1, 1, v18);
          unint64_t v14 = v19;
          unint64_t v16 = v21;
          unint64_t v12 = v20;
          *a3 = v20;
        }
        *((void *)v12 + 2) = v16;
        uint64_t v17 = &v12[16 * v14];
        *((void *)v17 + 4) = a4;
        *((void *)v17 + 5) = a5;
      }
    }
    return (void *)_objc_release_x2();
  }
  return result;
}

uint64_t sub_100404508(void *a1)
{
  return sub_1004042C0(a1);
}

id sub_100404510(id result)
{
  if (result)
  {
    uint64_t v2 = *(unsigned char **)(v1 + 16);
    uint64_t result = [result isDownloadable];
    if (result) {
      *uint64_t v2 = 0;
    }
  }
  return result;
}

void *sub_10040454C(void *a1)
{
  return sub_1004043E0(a1, *(unsigned char *)(v1 + 16), *(char ***)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10040455C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10040459C()
{
  sub_1004030E4(*(void ***)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1004045A8()
{
  return swift_deallocObject();
}

void sub_1004045B8(void *a1)
{
  sub_100403CAC(a1, *(char ***)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

Swift::Void __swiftcall MTLibrary.removeEpisodes(with:)(Swift::OpaquePointer with)
{
  uint64_t v2 = v1;
  int64_t v3 = *((void *)with._rawValue + 2);
  if (v3)
  {
    sub_10005986C(0, v3, 0);
    unint64_t v5 = (char *)with._rawValue + 32;
    do
    {
      v5 += 8;
      uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10005986C(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      unsigned __int8 v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      --v3;
    }
    while (v3);
    uint64_t v2 = v1;
  }
  sub_1000505EC((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 removeDownloadAssetsForEpisodeUuids:isa];
}

uint64_t sub_100404778(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for MTCategory();
  sub_1004048E4();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1003F546C(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1003F546C(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004048BC(uint64_t a1)
{
  return sub_100404964(a1, (uint64_t)&type metadata for Int64, (uint64_t)&protocol witness table for Int64, (void (*)(uint64_t *, uint64_t))sub_1003F5A34);
}

unint64_t sub_1004048E4()
{
  unint64_t result = qword_100602358;
  if (!qword_100602358)
  {
    type metadata accessor for MTCategory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100602358);
  }
  return result;
}

uint64_t sub_10040493C(uint64_t a1)
{
  return sub_100404964(a1, (uint64_t)&type metadata for UInt64, (uint64_t)&protocol witness table for UInt64, (void (*)(uint64_t *, uint64_t))sub_1003F5A48);
}

uint64_t sub_100404964(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t))
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

id InterestSyncStorage.importContext.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8Podcasts19InterestSyncStorage_importContext);
}

id InterestSyncStorage.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InterestSyncStorage();
  return [super dealloc];
}

uint64_t type metadata accessor for InterestSyncStorage()
{
  return self;
}

id sub_100404B08()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8Podcasts19InterestSyncStorage_importContext);
}

uint64_t InterestSyncStorage.isInterestSyncDirty.getter()
{
  type metadata accessor for SyncKeysRepository();
  uint64_t v0 = (void *)static SyncKeysRepository.shared.getter();
  char v1 = SyncKeysRepository.isInterestSyncDirty.getter();

  return v1 & 1;
}

void InterestSyncStorage.isInterestSyncDirty.setter()
{
  type metadata accessor for SyncKeysRepository();
  id v0 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.isInterestSyncDirty.setter();
}

void (*InterestSyncStorage.isInterestSyncDirty.modify(uint64_t a1))()
{
  *(void *)a1 = type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  char v3 = SyncKeysRepository.isInterestSyncDirty.getter();

  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_100404C2C;
}

void sub_100404C2C()
{
  id v0 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.isInterestSyncDirty.setter();
}

uint64_t InterestSyncStorage.interestLastSyncTimestamp.getter()
{
  type metadata accessor for SyncKeysRepository();
  id v0 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t Sync = SyncKeysRepository.interestLastSyncTimestamp.getter();

  return Sync;
}

void InterestSyncStorage.interestLastSyncTimestamp.setter()
{
  type metadata accessor for SyncKeysRepository();
  id v0 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.interestLastSyncTimestamp.setter();
}

uint64_t (*sub_100404D48(void *a1))()
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = InterestSyncStorage.interestLastSyncTimestamp.modify((uint64_t)v2);
  return sub_1001B8C14;
}

void (*InterestSyncStorage.interestLastSyncTimestamp.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t Sync = SyncKeysRepository.interestLastSyncTimestamp.getter();
  char v5 = v4;

  *(void *)a1 = Sync;
  *(unsigned char *)(a1 + 8) = v5 & 1;
  return sub_100404E10;
}

void sub_100404E10()
{
  id v0 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.interestLastSyncTimestamp.setter();
}

uint64_t sub_100404E7C(uint64_t a1, uint64_t a2)
{
  return sub_100404FCC(a1, a2, (uint64_t (*)(void))&SyncKeysRepository.interestSyncVersion.getter);
}

uint64_t InterestSyncStorage.syncVersion.getter()
{
  return sub_10040503C((uint64_t (*)(void))&SyncKeysRepository.interestSyncVersion.getter);
}

void sub_100404EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void InterestSyncStorage.syncVersion.setter(uint64_t a1, uint64_t a2)
{
}

uint64_t (*sub_100404EDC(uint64_t **a1))()
{
  objc_super v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)InterestSyncStorage.syncVersion.modify(v2);
  return sub_1001B8C14;
}

void (*InterestSyncStorage.syncVersion.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t v3 = SyncKeysRepository.interestSyncVersion.getter();
  uint64_t v5 = v4;

  *a1 = v3;
  a1[1] = v5;
  return sub_100404F9C;
}

void sub_100404F9C(uint64_t *a1, char a2)
{
}

uint64_t sub_100404FB4(uint64_t a1, uint64_t a2)
{
  return sub_100404FCC(a1, a2, (uint64_t (*)(void))&SyncKeysRepository.podcastsDomainVersion.getter);
}

uint64_t sub_100404FCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  type metadata accessor for SyncKeysRepository();
  uint64_t v4 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t v5 = a3();

  return v5;
}

uint64_t InterestSyncStorage.podcastsDomainVersion.getter()
{
  return sub_10040503C((uint64_t (*)(void))&SyncKeysRepository.podcastsDomainVersion.getter);
}

uint64_t sub_10040503C(uint64_t (*a1)(void))
{
  type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t v3 = a1();

  return v3;
}

void sub_100405094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1004050AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  type metadata accessor for SyncKeysRepository();
  id v8 = (id)static SyncKeysRepository.shared.getter();
  a5(a1, a2);
}

void InterestSyncStorage.podcastsDomainVersion.setter(uint64_t a1, uint64_t a2)
{
}

void sub_10040513C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  type metadata accessor for SyncKeysRepository();
  id v6 = (id)static SyncKeysRepository.shared.getter();
  a3(a1, a2);
}

uint64_t (*sub_1004051B4(uint64_t **a1))()
{
  objc_super v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)InterestSyncStorage.podcastsDomainVersion.modify(v2);
  return sub_1001B8C14;
}

void (*InterestSyncStorage.podcastsDomainVersion.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t v3 = SyncKeysRepository.podcastsDomainVersion.getter();
  uint64_t v5 = v4;

  *a1 = v3;
  a1[1] = v5;
  return sub_100405274;
}

void sub_100405274(uint64_t *a1, char a2)
{
}

void sub_10040528C(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v6 = (id)static SyncKeysRepository.shared.getter();
    a3(v5, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = (id)static SyncKeysRepository.shared.getter();
    a3(v5, v4);
  }
}

uint64_t sub_100405330()
{
  return InterestSyncStorage.fetchAllInterests()();
}

uint64_t InterestSyncStorage.fetchAllInterests()()
{
  sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin();
  uint64_t v103 = (char *)v95 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v108 = (char *)v95 - v2;
  uint64_t v113 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v113 - 8);
  __chkstk_darwin();
  uint64_t v102 = (char *)v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v106 = (void (**)(char *, uint64_t, uint64_t))((char *)v95 - v5);
  kMTInterestEntityName.getter();
  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithEntityName:v7];

  id v9 = [self truePredicate];
  [v8 setPredicate:v9];

  sub_100054B78(&qword_1005F8130);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046E5C0;
  uint64_t v11 = kInterestAdamID.getter();
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v12;
  uint64_t v13 = kInterestInterestValue.getter();
  *(void *)(v10 + 88) = &type metadata for String;
  *(void *)(v10 + 64) = v13;
  *(void *)(v10 + 72) = v14;
  uint64_t Updated = kInterestLastUpdatedDate.getter();
  *(void *)(v10 + 120) = &type metadata for String;
  *(void *)(v10 + 96) = Updated;
  *(void *)(v10 + 104) = v16;
  uint64_t v17 = kInterestUnknownSyncProperties.getter();
  *(void *)(v10 + 152) = &type metadata for String;
  *(void *)(v10 + 128) = v17;
  *(void *)(v10 + 136) = v18;
  Swift::String v112 = (char *)&type metadata for Any + 8;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 setPropertiesToFetch:isa];

  [v8 setResultType:2];
  uint64_t v114 = v0;
  id v115 = v8;
  id v97 = v8;
  sub_100054B78((uint64_t *)&unk_1005F8210);
  NSManagedObjectContext.performAndWait<A>(_:)();
  uint64_t v20 = v118[0];
  int64_t v21 = *(void *)(v118[0] + 16);
  id v22 = _swiftEmptyArrayStorage;
  if (!v21)
  {
    swift_bridgeObjectRelease();
    unint64_t v53 = _swiftEmptyArrayStorage;
    int64_t v57 = _swiftEmptyArrayStorage[2];
    if (!v57) {
      goto LABEL_72;
    }
    goto LABEL_37;
  }
  uint64_t v119 = _swiftEmptyArrayStorage;
  sub_1001BA6A8(0, v21, 0);
  uint64_t v100 = sub_100054B78(&qword_1005F6388);
  uint64_t v23 = 0;
  v95[1] = v20;
  uint64_t v99 = (void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t))(v20 + 32);
  uint64_t v107 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  uint64_t v105 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v96 = v3;
  uint64_t v104 = (void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t))(v3 + 8);
  uint64_t v98 = (void *)v21;
  id v111 = (char *)(v3 + 56);
LABEL_3:
  uint64_t v24 = v99[v23];
  uint64_t v101 = v23 + 1;
  uint64_t v25 = static _DictionaryStorage.copy(original:)();
  uint64_t v26 = (void *)v25;
  uint64_t v27 = 1 << *((unsigned char *)v24 + 32);
  uint64_t v28 = *((void *)v24 + 8);
  uint64_t v109 = (char *)v24 + 64;
  if (v27 < 64) {
    uint64_t v29 = ~(-1 << v27);
  }
  else {
    uint64_t v29 = -1;
  }
  unint64_t v30 = v29 & v28;
  int64_t v110 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v31 = v25 + 64;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v33 = 0;
  uint64_t v34 = v113;
  uint64_t v35 = (uint64_t)v108;
  if (v30)
  {
LABEL_7:
    unint64_t v36 = __clz(__rbit64(v30));
    v30 &= v30 - 1;
    unint64_t v37 = v36 | (v33 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v38 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v38 >= v110) {
      goto LABEL_30;
    }
    unint64_t v39 = *(void *)&v109[8 * v38];
    ++v33;
    if (!v39)
    {
      int64_t v33 = v38 + 1;
      if (v38 + 1 >= v110) {
        goto LABEL_30;
      }
      unint64_t v39 = *(void *)&v109[8 * v33];
      if (!v39)
      {
        int64_t v33 = v38 + 2;
        if (v38 + 2 >= v110) {
          goto LABEL_30;
        }
        unint64_t v39 = *(void *)&v109[8 * v33];
        if (!v39)
        {
          int64_t v40 = v38 + 3;
          if (v40 < v110)
          {
            unint64_t v39 = *(void *)&v109[8 * v40];
            if (v39)
            {
              int64_t v33 = v40;
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v33 = v40 + 1;
              if (__OFADD__(v40, 1)) {
                break;
              }
              if (v33 >= v110) {
                goto LABEL_30;
              }
              unint64_t v39 = *(void *)&v109[8 * v33];
              ++v40;
              if (v39) {
                goto LABEL_21;
              }
            }
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
            return result;
          }
LABEL_30:
          swift_bridgeObjectRelease();
          unint64_t v53 = v119;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001BA6A8(0, v53[2] + 1, 1);
            unint64_t v53 = v119;
          }
          unint64_t v54 = v98;
          unint64_t v56 = v53[2];
          unint64_t v55 = v53[3];
          if (v56 >= v55 >> 1)
          {
            sub_1001BA6A8(v55 > 1, v56 + 1, 1);
            unint64_t v53 = v119;
          }
          void v53[2] = v56 + 1;
          v53[v56 + 4] = v26;
          uint64_t v23 = v101;
          if ((void *)v101 == v54)
          {
            swift_bridgeObjectRelease();
            id v22 = _swiftEmptyArrayStorage;
            uint64_t v3 = v96;
            int64_t v57 = v53[2];
            if (!v57)
            {
LABEL_72:
              swift_bridgeObjectRelease();
              int64_t v90 = _swiftEmptyArrayStorage[2];
              if (v90) {
                goto LABEL_76;
              }
              goto LABEL_80;
            }
LABEL_37:
            uint64_t v119 = _swiftEmptyArrayStorage;
            sub_1001BA6A8(0, v57, 0);
            uint64_t v101 = sub_100054B78(&qword_1005F6388);
            char v58 = 0;
            uint64_t v98 = v53;
            uint64_t v100 = (uint64_t)(v53 + 4);
            uint64_t v108 = (char *)(v3 + 48);
            uint64_t v106 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
            uint64_t v105 = (void (**)(char *, char *, uint64_t))(v3 + 8);
            id v111 = (char *)&type metadata for Any + 8;
            uint64_t v99 = (void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t))v57;
            uint64_t v107 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 56);
            while (2)
            {
              uint64_t v59 = *(char **)(v100 + 8 * (void)v58);
              uint64_t v104 = (void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t))((char *)v58 + 1);
              uint64_t v60 = static _DictionaryStorage.copy(original:)();
              unsigned __int8 v61 = v107;
              uint64_t v62 = (void *)v60;
              uint64_t v63 = 1 << v59[32];
              uint64_t v64 = *((void *)v59 + 8);
              uint64_t v109 = v59 + 64;
              if (v63 < 64) {
                uint64_t v65 = ~(-1 << v63);
              }
              else {
                uint64_t v65 = -1;
              }
              unint64_t v66 = v65 & v64;
              int64_t v110 = (unint64_t)(v63 + 63) >> 6;
              uint64_t v67 = v60 + 64;
              Swift::String v112 = v59;
              uint64_t result = swift_bridgeObjectRetain();
              int64_t v68 = 0;
              uint64_t v69 = (uint64_t)v103;
              if (v66)
              {
LABEL_42:
                unint64_t v70 = __clz(__rbit64(v66));
                v66 &= v66 - 1;
                unint64_t v71 = v70 | (v68 << 6);
                goto LABEL_57;
              }
LABEL_43:
              int64_t v72 = v68 + 1;
              if (__OFADD__(v68, 1)) {
                goto LABEL_83;
              }
              if (v72 >= v110) {
                goto LABEL_65;
              }
              unint64_t v73 = *(void *)&v109[8 * v72];
              ++v68;
              if (!v73)
              {
                int64_t v68 = v72 + 1;
                if (v72 + 1 >= v110) {
                  goto LABEL_65;
                }
                unint64_t v73 = *(void *)&v109[8 * v68];
                if (!v73)
                {
                  int64_t v68 = v72 + 2;
                  if (v72 + 2 >= v110) {
                    goto LABEL_65;
                  }
                  unint64_t v73 = *(void *)&v109[8 * v68];
                  if (!v73)
                  {
                    int64_t v74 = v72 + 3;
                    if (v74 >= v110)
                    {
LABEL_65:
                      swift_bridgeObjectRelease();
                      unint64_t v30 = (unint64_t)v119;
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      {
                        sub_1001BA6A8(0, *(void *)(v30 + 16) + 1, 1);
                        unint64_t v30 = (unint64_t)v119;
                      }
                      unint64_t v89 = *(void *)(v30 + 16);
                      unint64_t v88 = *(void *)(v30 + 24);
                      if (v89 >= v88 >> 1)
                      {
                        sub_1001BA6A8(v88 > 1, v89 + 1, 1);
                        unint64_t v30 = (unint64_t)v119;
                      }
                      *(void *)(v30 + 16) = v89 + 1;
                      *(void *)(v30 + 8 * v89 + 32) = v62;
                      char v58 = v104;
                      if (v104 != v99) {
                        continue;
                      }
                      goto LABEL_75;
                    }
                    unint64_t v73 = *(void *)&v109[8 * v74];
                    if (!v73)
                    {
                      while (1)
                      {
                        int64_t v68 = v74 + 1;
                        if (__OFADD__(v74, 1)) {
                          goto LABEL_85;
                        }
                        if (v68 >= v110) {
                          goto LABEL_65;
                        }
                        unint64_t v73 = *(void *)&v109[8 * v68];
                        ++v74;
                        if (v73) {
                          goto LABEL_56;
                        }
                      }
                    }
                    int64_t v68 = v74;
                  }
                }
              }
              break;
            }
LABEL_56:
            unint64_t v66 = (v73 - 1) & v73;
            unint64_t v71 = __clz(__rbit64(v73)) + (v68 << 6);
LABEL_57:
            unint64_t v75 = (uint64_t *)(*((void *)v112 + 6) + 16 * v71);
            uint64_t v77 = *v75;
            uint64_t v76 = v75[1];
            sub_10004D328(*((void *)v112 + 7) + 32 * v71, (uint64_t)v118);
            sub_10004D328((uint64_t)v118, (uint64_t)&v116);
            swift_bridgeObjectRetain();
            uint64_t v78 = v113;
            int v79 = swift_dynamicCast();
            uint64_t v80 = *v61;
            if (v79)
            {
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v80)(v69, 0, 1, v78);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v108)(v69, 1, v78) != 1)
              {
                uint64_t v81 = v102;
                uint64_t v82 = v113;
                (*v106)(v102, v69, v113);
                Date.timeIntervalSinceReferenceDate.getter();
                uint64_t v69 = (uint64_t)v103;
                uint64_t v117 = &type metadata for Double;
                *(void *)&long long v116 = v83;
                uint64_t v84 = v81;
                unsigned __int8 v61 = v107;
                ((void (*)(char *, uint64_t))*v105)(v84, v82);
LABEL_62:
                sub_10004D2D8((uint64_t)v118);
                *(void *)(v67 + ((v71 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v71;
                id v85 = (void *)(v62[6] + 16 * v71);
                *id v85 = v77;
                v85[1] = v76;
                uint64_t result = (uint64_t)sub_10004D384(&v116, (_OWORD *)(v62[7] + 32 * v71));
                uint64_t v86 = v62[2];
                BOOL v51 = __OFADD__(v86, 1);
                uint64_t v87 = v86 + 1;
                if (v51)
                {
                  __break(1u);
                  goto LABEL_82;
                }
                void v62[2] = v87;
                if (v66) {
                  goto LABEL_42;
                }
                goto LABEL_43;
              }
            }
            else
            {
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v80)(v69, 1, 1, v78);
            }
            sub_1001B6BC4(v69);
            sub_10004D328((uint64_t)v118, (uint64_t)&v116);
            goto LABEL_62;
          }
          goto LABEL_3;
        }
      }
    }
LABEL_21:
    unint64_t v30 = (v39 - 1) & v39;
    unint64_t v37 = __clz(__rbit64(v39)) + (v33 << 6);
LABEL_22:
    uint64_t v41 = (uint64_t *)(*((void *)v24 + 6) + 16 * v37);
    uint64_t v42 = *v41;
    uint64_t v43 = v41[1];
    sub_10004D328(*((void *)v24 + 7) + 32 * v37, (uint64_t)v118);
    sub_10004D328((uint64_t)v118, (uint64_t)&v116);
    swift_bridgeObjectRetain();
    int v44 = swift_dynamicCast();
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v111;
    if (v44)
    {
      v45(v35, 0, 1, v34);
      if ((*v107)(v35, 1, v34) != 1)
      {
        uint64_t v46 = v106;
        (*v105)((char *)v106, v108, v34);
        Date.timeIntervalSinceReferenceDate.getter();
        uint64_t v34 = v113;
        uint64_t v117 = &type metadata for Double;
        *(void *)&long long v116 = v47;
        uint64_t v48 = v46;
        uint64_t v35 = (uint64_t)v108;
        (*v104)(v48, v113);
        goto LABEL_27;
      }
    }
    else
    {
      v45(v35, 1, 1, v34);
    }
    sub_1001B6BC4(v35);
    sub_10004D328((uint64_t)v118, (uint64_t)&v116);
LABEL_27:
    sub_10004D2D8((uint64_t)v118);
    *(void *)(v31 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    uint64_t v49 = (void *)(v26[6] + 16 * v37);
    *uint64_t v49 = v42;
    v49[1] = v43;
    uint64_t result = (uint64_t)sub_10004D384(&v116, (_OWORD *)(v26[7] + 32 * v37));
    uint64_t v50 = v26[2];
    BOOL v51 = __OFADD__(v50, 1);
    uint64_t v52 = v50 + 1;
    if (v51) {
      break;
    }
    void v26[2] = v52;
    if (v30) {
      goto LABEL_7;
    }
  }
  __break(1u);
LABEL_75:
  swift_bridgeObjectRelease();
  id v22 = _swiftEmptyArrayStorage;
  int64_t v90 = *(void *)(v30 + 16);
  if (v90)
  {
LABEL_76:
    v118[0] = _swiftEmptyArrayStorage;
    sub_1001BA6A8(0, v90, 0);
    type metadata accessor for RemoteInterest();
    uint64_t v91 = 0;
    id v22 = (void *)v118[0];
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v92 = Dictionary<>.flatteningUnknownSyncProperties<A>(for:)();
      swift_bridgeObjectRelease();
      v118[0] = v22;
      unint64_t v94 = v22[2];
      unint64_t v93 = v22[3];
      if (v94 >= v93 >> 1)
      {
        sub_1001BA6A8(v93 > 1, v94 + 1, 1);
        id v22 = (void *)v118[0];
      }
      ++v91;
      uint64_t v22[2] = v94 + 1;
      v22[v94 + 4] = v92;
    }
    while (v90 != v91);
  }
LABEL_80:
  swift_bridgeObjectRelease();

  return (uint64_t)v22;
}

uint64_t InterestSyncStorage.unsafeInterest(for:in:)()
{
  return NSManagedObjectContext.unsafeInterest(forAdamID:)();
}

void static InterestSyncStorage.resetInterestSync()()
{
  type metadata accessor for SyncKeysRepository();
  uint64_t v0 = (void *)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.interestLastSyncTimestamp.setter();

  uint64_t v1 = (void *)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.interestSyncVersion.setter();

  id v2 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.isInterestSyncDirty.setter();
}

uint64_t sub_1004060E4@<X0>(void *a1@<X8>)
{
  sub_10004D29C(0, (unint64_t *)&qword_1005F88D0);
  unint64_t v2 = NSManagedObjectContext.fetch<A>(_:)();
  uint64_t v3 = sub_1003E4EDC(v2);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (v3) {
    uint64_t v5 = v3;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_10040618C@<X0>(void *a1@<X8>)
{
  return sub_1004060E4(a1);
}

void sub_100406194(void *a1, void *a2)
{
  [a1 adamID];
  AdamID.init(rawValue:)();
  uint64_t v4 = NSManagedObjectContext.unsafeCategory(forAdamID:)();
  if (v4)
  {
    id v5 = (id)v4;
    id v6 = &selRef_setCategory_;
    goto LABEL_9;
  }
  unint64_t v7 = (unint64_t)[a1 adamID];
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v8 = [a2 channelForStoreId:v7];
  if (v8)
  {
    id v5 = v8;
    id v6 = &selRef_setChannel_;
    goto LABEL_9;
  }
  unint64_t v9 = (unint64_t)[a1 adamID];
  if ((v9 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
    return;
  }
  id v10 = [a2 podcastForStoreId:v9];
  if (!v10) {
    return;
  }
  id v5 = v10;
  id v6 = &selRef_setPodcast_;
LABEL_9:
  id v11 = v5;
  [a1 *v6];
  [v11 setInterest:a1];
}

void _s8Podcasts19InterestSyncStorageC017unsafeUpdateLocalB8IfNeeded3for06remoteB02iny0A10Foundation10MTInterestC_AH06RemoteB0VSo22NSManagedObjectContextCtF_0(id a1, uint64_t a2, void *a3)
{
  unint64_t v66 = a3;
  uint64_t v5 = type metadata accessor for RemoteInterest();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v64 = (char *)v57 - v9;
  __chkstk_darwin();
  id v11 = (char *)v57 - v10;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v68 = v12;
  __chkstk_darwin();
  uint64_t v14 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v65 = (char *)v57 - v15;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  unint64_t v19 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&uint64_t v20 = COERCE_DOUBLE(RemoteInterest.interestValueUpdatedDate.getter());
  if (v21)
  {
    static Logger.cloudSync.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 134217984;
      uint64_t v51 = RemoteInterest.adamID.getter();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v69 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "[Interests] Remote interest doesn't have an interestValueUpdatedDate. We cannot determine which interestValue to use. Not syncing this interest: %lld", v50, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v53 = v67;
    uint64_t v52 = v68;

    (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v52);
  }
  else
  {
    uint64_t v63 = a2;
    double v22 = *(double *)&v20;
    id v23 = [a1 lastUpdatedDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    Date.timeIntervalSinceReferenceDate.getter();
    double v25 = v24;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v17 + 8);
    v26(v19, v16);
    if (v25 < v22)
    {
      RemoteInterest.interestValue.getter();
      double v28 = v27;
      [a1 interestValue];
      if (v28 != v29)
      {
        uint64_t v60 = v26;
        static Logger.cloudSync.getter();
        id v62 = a1;
        unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
        uint64_t v31 = v63;
        v30(v11, v63, v5);
        v30(v64, v31, v5);
        a1 = v62;
        id v32 = v62;
        int64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.default.getter();
        int v35 = v34;
        BOOL v36 = os_log_type_enabled(v33, v34);
        id v61 = v32;
        os_log_t v59 = v33;
        if (v36)
        {
          unint64_t v37 = v32;
          uint64_t v38 = swift_slowAlloc();
          *(_DWORD *)uint64_t v38 = 134218496;
          v57[1] = v38 + 4;
          int v58 = v35;
          uint64_t v39 = RemoteInterest.adamID.getter();
          int64_t v40 = *(void (**)(char *, uint64_t))(v6 + 8);
          v40(v11, v5);
          uint64_t v69 = v39;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v38 + 12) = 2048;
          [v37 interestValue];
          uint64_t v69 = v41;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          *(_WORD *)(v38 + 22) = 2048;
          uint64_t v42 = v64;
          RemoteInterest.interestValue.getter();
          uint64_t v69 = v43;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v40(v42, v5);
          os_log_t v44 = v59;
          _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v58, "[Interests] Remote interestValue is more recent than the local version, and the value is different. Updating the interestValue for %lld from %f to %f", (uint8_t *)v38, 0x20u);
          a1 = v62;
          swift_slowDealloc();
          uint64_t v46 = v67;
          uint64_t v45 = v68;
        }
        else
        {
          unint64_t v54 = *(void (**)(char *, uint64_t))(v6 + 8);
          v54(v11, v5);

          v54(v64, v5);
          uint64_t v46 = v67;
          uint64_t v45 = v68;
          os_log_t v44 = v59;
        }
        uint64_t v47 = v60;

        (*(void (**)(char *, uint64_t))(v46 + 8))(v65, v45);
        RemoteInterest.interestValue.getter();
        id v55 = v61;
        [v61 setInterestValue:];
        static Date.now.getter();
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        v47(v19, v16);
        [v55 setLastUpdatedDate:isa];
      }
    }
    sub_100406194(a1, v66);
  }
}

uint64_t _s8Podcasts19InterestSyncStorageC015unsafeInsertNewB03for2in0A10Foundation10MTInterestCSgAG06RemoteB0V_So22NSManagedObjectContextCtF_0(uint64_t a1, void *a2)
{
  uint64_t v37 = a1;
  uint64_t v3 = type metadata accessor for RemoteInterest();
  uint64_t v36 = *(void *)(v3 - 8);
  __chkstk_darwin();
  int v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v33 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = self;
  kMTInterestEntityName.getter();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  os_log_type_t v34 = a2;
  id v14 = [v12 insertNewObjectForEntityForName:v13 inManagedObjectContext:a2];

  type metadata accessor for MTInterest();
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {
    uint64_t v22 = v5;

    static Logger.cloudSync.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v37, v3);
    id v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      double v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)double v25 = 134217984;
      uint64_t v26 = v35;
      uint64_t v27 = RemoteInterest.adamID.getter();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v3);
      uint64_t v38 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Cannot create MTInterest for adamID: %lld. Unable to favorite interest.", v25, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v3);
    }
    uint64_t v28 = v22;
    uint64_t v29 = v33;

    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
    return 0;
  }
  uint64_t v16 = (void *)v15;
  uint64_t v17 = RemoteInterest.adamID.getter();
  if ((v17 & 0x8000000000000000) == 0)
  {
    [v16 setAdamID:v17];
    RemoteInterest.interestValue.getter();
    [v16 setInterestValue:];
    static Date.now.getter();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    [v16 setLastUpdatedDate:isa];

    uint64_t v38 = RemoteInterest.unknownSyncProperties.getter();
    sub_100054B78(&qword_100603950);
    sub_1004072C8();
    LOBYTE(isa) = Collection.isNotEmpty.getter();
    swift_bridgeObjectRelease();
    if (isa)
    {
      uint64_t v19 = RemoteSyncTypeWithUnknownSyncProperties.encodeUnknownSyncProperties()();
      if (v20 >> 60 == 15)
      {
        Class v21 = 0;
      }
      else
      {
        uint64_t v30 = v19;
        unint64_t v31 = v20;
        Class v21 = Data._bridgeToObjectiveC()().super.isa;
        sub_10021A3FC(v30, v31);
      }
      [v16 setUnknownSyncProperties:v21];
    }
    else
    {
      [v16 setUnknownSyncProperties:0];
    }
    sub_100406194(v16, v34);
    return (uint64_t)v16;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100406E04()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SyncKeysRepository();
  uint64_t v8 = (void *)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.interestLastSyncTimestamp.getter();
  char v10 = v9;

  if (v10)
  {
    static Logger.cloudSync.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    uint64_t v18 = Logger.logObject.getter();
    if (os_log_type_enabled(v18, v17))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "[NonFollowedShows] We never synced before, so there are no old Implicit Follows to clean up.", v19, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v20 = [self falsePredicate];
    return v20;
  }
  else
  {
    Date.init(timeIntervalSinceReferenceDate:)();
    kInterestLastUpdatedDate.getter();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v13 = [self predicateForDateKey:v11 isLessThanDate:isa];

    type metadata accessor for MTInterest();
    id v14 = (void *)static MTInterest.predicateForInterests(excludingAdamIDs:)();
    id v15 = [v14 AND:v13];

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
}

void *_s8Podcasts19InterestSyncStorageC039unsafeInterestsOnlyInLocalAndBeforeLastC016excludingAdamIDs2inSay0A10Foundation10MTInterestCGSgSays5Int64VG_So22NSManagedObjectContextCtF_0(uint64_t a1, void *a2)
{
  id v3 = sub_100406E04();
  kMTInterestEntityName.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = v3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v7 = [a2 objectsInEntity:v4 predicate:v5 sortDescriptors:isa];

  if (v7)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F7130);
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = sub_1003E4CFC(v8);
    swift_bridgeObjectRelease();
  }

  return v7;
}

uint64_t _s8Podcasts19InterestSyncStorageC29unsafeRemoveInterestsIfNeeded3forySay0A10Foundation10MTInterestCG_tF_0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    [v5 setInterestValue:0.0];
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

unint64_t sub_1004072C8()
{
  unint64_t result = qword_100603958;
  if (!qword_100603958)
  {
    sub_100044244(&qword_100603950);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100603958);
  }
  return result;
}

uint64_t sub_100407324()
{
  uint64_t v0 = sub_100054B78((uint64_t *)&unk_1006098E0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ShowLockupStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  char v15 = -1;
  ShowLockupStyle.init(includesOfferButton:defaultSubtitle:unfollowedSubtitle:groupedEpisodesListType:)();
  uint64_t v8 = dispatch thunk of LibraryDataProviderProtocol.showsPaginatedPublisher(listType:sortBy:lockupStyle:pageSize:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10[1] = v8;
  sub_100054B78(&qword_1005F7828);
  sub_100044200(&qword_1006098F0, &qword_1005F7828);
  Publisher.removeDuplicates(by:)();
  swift_allocObject();
  swift_weakInit();
  sub_100044200(&qword_1006098F8, (uint64_t *)&unk_1006098E0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_beginAccess();
  sub_100054B78((uint64_t *)&unk_1005F9ED0);
  sub_100044200(qword_1005F8BB0, (uint64_t *)&unk_1005F9ED0);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_100407654()
{
  sub_100054B78((uint64_t *)&unk_100609900);
  FRPOutput.content.getter();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v0 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v0)
  {
    uint64_t result = sub_1001BA628(0, v0 & ~(v0 >> 63), 0);
    if (v0 < 0)
    {
      __break(1u);
      goto LABEL_27;
    }
    for (uint64_t i = 0; i != v0; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v3 = LegacyLockup.adamId.getter();
      swift_release();
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_1001BA628(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      _swiftEmptyArrayStorage[v5 + 4] = v3;
    }
  }
  swift_bridgeObjectRelease();
  FRPOutput.content.getter();
  if (!(v12 >> 62))
  {
    uint64_t v6 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_14;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    BOOL v11 = sub_10019F684(_swiftEmptyArrayStorage, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_25;
  }
LABEL_14:
  uint64_t result = sub_1001BA628(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    for (uint64_t j = 0; j != v6; ++j)
    {
      if ((v12 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v8 = LegacyLockup.adamId.getter();
      swift_release();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1001BA628(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
    }
    goto LABEL_25;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10040792C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    sub_100054B78((uint64_t *)&unk_100609900);
    FRPOutput.content.getter();
    uint64_t v9 = *(void *)&v10[0];
    sub_100054B78((uint64_t *)&unk_1005FD1A0);
    sub_100044200((unint64_t *)&unk_100609910, (uint64_t *)&unk_1005FD1A0);
    char v2 = Collection.isNotEmpty.getter();
    swift_bridgeObjectRelease();
    if (v2)
    {
      uint64_t v3 = self;
      swift_retain_n();
      id v4 = [v3 mainBundle];
      v12._object = (void *)0x80000001004E37E0;
      v5._object = (void *)0x80000001004E37C0;
      v5._uint64_t countAndFlagsBits = 0xD000000000000010;
      v6._uint64_t countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      v12._uint64_t countAndFlagsBits = 0xD000000000000010;
      Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v12);

      FRPOutput.content.getter();
      long long v8 = *(_OWORD *)(v1 + 40);
      v10[0] = *(_OWORD *)(v1 + 24);
      v10[1] = v8;
      void v10[2] = *(_OWORD *)(v1 + 56);
      uint64_t v11 = *(void *)(v1 + 72);
      swift_retain();
      sub_100384840(v7._countAndFlagsBits, (uint64_t)v7._object, 2, (uint64_t)v10, v1 + 96, (uint64_t)sub_100409D70, v1, (uint64_t)sub_100409DA4, v1, (uint64_t)sub_100409DAC, v1, v9);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_100054B78((uint64_t *)&unk_1005F9ED0);
      sub_100044200(qword_1005F8BB0, (uint64_t *)&unk_1005F9ED0);
      AnyCancellable.store<A>(in:)();
      swift_endAccess();
      swift_release_n();
    }
    else
    {
      *(void *)&v10[0] = 0;
      PassthroughSubject.send(_:)();
    }
    return swift_release();
  }
  return result;
}

void sub_100407BE4(void *a1)
{
  id v1 = a1;
  PassthroughSubject.send(_:)();
}

void sub_100407C24(void *a1)
{
  id v1 = a1;
  PassthroughSubject.send(_:)();
}

uint64_t sub_100407C64()
{
  uint64_t v56 = sub_100054B78(&qword_100609878);
  uint64_t v57 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v53 = (char *)v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100054B78(&qword_100609880);
  uint64_t v60 = *(void *)(v59 - 8);
  __chkstk_darwin();
  unint64_t v54 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100054B78(&qword_100609888);
  uint64_t v61 = *(void *)(v58 - 8);
  __chkstk_darwin();
  id v55 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ObserverQueue();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  Swift::String v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100054B78(&qword_100609890);
  uint64_t v65 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v51 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v50 = (char *)v41 - v9;
  __chkstk_darwin();
  os_log_type_t v49 = (char *)v41 - v10;
  __chkstk_darwin();
  uint64_t v47 = (char *)v41 - v11;
  __chkstk_darwin();
  uint64_t v64 = (char *)v41 - v12;
  __chkstk_darwin();
  unint64_t v66 = (char *)v41 - v13;
  type metadata accessor for TabMenuProvider();
  long long v14 = self;
  swift_retain();
  id v15 = [v14 standardUserDefaults];
  TabMenuProvider.__allocating_init(asPartOf:userDefaults:interfaceMode:)();
  uint64_t v46 = dispatch thunk of TabMenuProvider.libraryPublisher.getter();
  swift_release();
  uint64_t v48 = v0;
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t ObjectType = swift_getObjectType();
  v41[3] = v16;
  v41[4] = ObjectType;
  dispatch thunk of LibraryDataProviderProtocol.fetchShowCountObserver(listType:)();
  unsigned int v44 = enum case for ObserverQueue.main(_:);
  uint64_t v43 = *(void (**)(char *))(v5 + 104);
  v43(v7);
  v41[1] = v5 + 104;
  v41[2] = sub_100044200(&qword_100609808, &qword_100609810);
  uint64_t v18 = Promise<A>.observerPublisher(receiveOn:)();
  swift_release();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  void v41[5] = v5 + 8;
  uint64_t v42 = v19;
  v19(v7, v4);
  uint64_t v73 = v18;
  uint64_t v63 = sub_100054B78(&qword_100609818);
  uint64_t v45 = &protocol conformance descriptor for AnyPublisher<A, B>;
  uint64_t v62 = sub_100044200(&qword_100609820, &qword_100609818);
  Publisher<>.removeDuplicates()();
  swift_release();
  uint64_t v73 = 4;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  uint64_t v77 = 0;
  char v78 = 9;
  dispatch thunk of LibraryDataProviderProtocol.fetchEpisodeCountObserver(for:)();
  uint64_t v20 = v44;
  uint64_t v21 = (void (*)(char *, uint64_t, uint64_t))v43;
  ((void (*)(char *, void, uint64_t))v43)(v7, v44, v4);
  uint64_t v22 = Promise<A>.observerPublisher(receiveOn:)();
  swift_release();
  id v23 = v42;
  v42(v7, v4);
  *(void *)&long long v68 = v22;
  os_log_type_t v24 = v64;
  Publisher<>.removeDuplicates()();
  swift_release();
  long long v68 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  char v72 = 9;
  dispatch thunk of LibraryDataProviderProtocol.fetchEpisodeCountObserver(for:)();
  v21(v7, v20, v4);
  uint64_t v25 = Promise<A>.observerPublisher(receiveOn:)();
  swift_release();
  v23(v7, v4);
  uint64_t v67 = v25;
  uint64_t v26 = v47;
  Publisher<>.removeDuplicates()();
  swift_release();
  uint64_t v67 = v46;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  uint64_t v28 = v52;
  v27(v49, v66, v52);
  v27(v50, v24, v28);
  v27(v51, v26, v28);
  swift_retain();
  sub_100054B78(&qword_100609898);
  sub_100044200(&qword_1006098A0, &qword_100609898);
  sub_100044200((unint64_t *)&unk_1006098A8, &qword_100609890);
  uint64_t v29 = v53;
  uint64_t v30 = v28;
  Publishers.CombineLatest4.init(_:_:_:_:)();
  uint64_t v31 = *(void *)(v48 + 152);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_100409B78;
  *(void *)(v32 + 24) = v31;
  swift_retain();
  sub_100054B78((uint64_t *)&unk_1005F7E10);
  sub_100044200(&qword_1006098B8, &qword_100609878);
  uint64_t v33 = v54;
  uint64_t v34 = v56;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v29, v34);
  sub_100044200(&qword_1006098C0, &qword_100609880);
  int v35 = v55;
  uint64_t v36 = v59;
  Publisher.removeDuplicates(by:)();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v36);
  sub_100044200(&qword_1006098C8, &qword_100609888);
  uint64_t v37 = v58;
  uint64_t v38 = Publisher.eraseToAnyPublisher()();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v37);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v65 + 8);
  v39(v26, v30);
  v39(v64, v30);
  v39(v66, v30);
  return v38;
}

void *sub_1004086D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v42 = a4;
  uint64_t v44 = a3;
  uint64_t v45 = a2;
  sub_100054B78(&qword_1006098D8);
  __chkstk_darwin();
  Swift::String v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TabMenu.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v47 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = TabMenu.Section.items.getter();
  long long v14 = _swiftEmptyArrayStorage;
  unint64_t v51 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(v13 + 16);
  if (v15)
  {
    uint64_t v40 = a5;
    uint64_t v41 = v7;
    uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    os_log_type_t v17 = v18;
    unint64_t v19 = v13 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v20 = *(void *)(v16 + 56);
    uint64_t v21 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v39 = v13;
    swift_bridgeObjectRetain();
    uint64_t v43 = (v16 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v46 = v20;
    while (1)
    {
      v17(v12, v19, v8);
      if (TabMenu.Item.enabled.getter()) {
        break;
      }
      (*v21)(v12, v8);
LABEL_4:
      v19 += v20;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        long long v14 = (void *)v51;
        goto LABEL_27;
      }
    }
    uint64_t v22 = TabMenu.Item.navigationTab.getter();
    char v23 = static NavigationTab.== infix(_:_:)();
    sub_10003649C(v22);
    os_log_type_t v24 = v47;
    v17(v47, (unint64_t)v12, v8);
    if (v23)
    {
      uint64_t v25 = *v21;
      (*v21)(v24, v8);
    }
    else
    {
      uint64_t v26 = TabMenu.Item.navigationTab.getter();
      char v27 = static NavigationTab.== infix(_:_:)();
      sub_10003649C(v26);
      uint64_t v25 = *v21;
      (*v21)(v47, v8);
      if ((v27 & 1) == 0) {
        goto LABEL_11;
      }
    }
    if (!v45)
    {
LABEL_10:
      v25(v12, v8);
      uint64_t v20 = v46;
      goto LABEL_4;
    }
LABEL_11:
    uint64_t v28 = TabMenu.Item.navigationTab.getter();
    char v29 = static NavigationTab.== infix(_:_:)();
    sub_10003649C(v28);
    if ((v29 & 1) == 0 || v44)
    {
      uint64_t v30 = TabMenu.Item.navigationTab.getter();
      char v31 = static NavigationTab.== infix(_:_:)();
      sub_10003649C(v30);
      if ((v31 & 1) == 0 || v42)
      {
        uint64_t v32 = (uint64_t)v41;
        static Link.libraryLink(from:)();
        uint64_t v33 = type metadata accessor for Link();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33) == 1)
        {
          sub_100054B1C(v32, &qword_1006098D8);
        }
        else
        {
          sub_1001C0E3C(v32 + *(int *)(v33 + 36), (uint64_t)v49);
          if (v50)
          {
            uint64_t v34 = v40;
            swift_retain();
            sub_100054B78(&qword_1005F82A0);
            type metadata accessor for FlowAction();
            if (swift_dynamicCast())
            {
              id v38 = v48;
              id v35 = sub_1001BEDF8(*((void *)v41 + 2), *((void *)v41 + 3), 0, 0, 0, (uint64_t)sub_1001C0E14, v34);
              swift_release();
              swift_release();
              sub_1001C0F04((uint64_t)v41);
              v25(v12, v8);
              uint64_t v20 = v46;
              id v38 = v35;
              if (v35)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              goto LABEL_4;
            }
          }
          else
          {
            swift_retain();
            sub_100054B1C((uint64_t)v49, (uint64_t *)&unk_1005F89E0);
          }
          swift_release();
          sub_1001C0F04((uint64_t)v41);
        }
      }
    }
    goto LABEL_10;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_100408BA0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4)
  {
    uint64_t result = sub_1001BA7D0(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v31 = v3;
    uint64_t v6 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 text:v31];
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v13 = v12;
      }
      else
      {

        uint64_t v11 = 0;
        uint64_t v13 = 0;
      }
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1) {
        sub_1001BA7D0(v14 > 1, v15 + 1, 1);
      }
      ++v6;
      _swiftEmptyArrayStorage[2] = v15 + 1;
      uint64_t v16 = &_swiftEmptyArrayStorage[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
    }
    while (v4 != v6);
    unint64_t v3 = v31;
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v17)
  {
LABEL_30:
    char v30 = sub_10019F6F8((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v30 & 1;
  }
  uint64_t result = sub_1001BA7D0(0, v17 & ~(v17 >> 63), 0);
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = 0;
    unint64_t v32 = v3 & 0xC000000000000001;
    do
    {
      if (v32) {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v19 = *(id *)(v3 + 8 * v18 + 32);
      }
      uint64_t v20 = v19;
      unint64_t v21 = v3;
      id v22 = [v19 text:v32];
      if (v22)
      {
        char v23 = v22;
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;
      }
      else
      {

        uint64_t v24 = 0;
        uint64_t v26 = 0;
      }
      unint64_t v28 = _swiftEmptyArrayStorage[2];
      unint64_t v27 = _swiftEmptyArrayStorage[3];
      if (v28 >= v27 >> 1) {
        sub_1001BA7D0(v27 > 1, v28 + 1, 1);
      }
      ++v18;
      _swiftEmptyArrayStorage[2] = v28 + 1;
      char v29 = &_swiftEmptyArrayStorage[2 * v28];
      v29[4] = v24;
      void v29[5] = v26;
      unint64_t v3 = v21;
    }
    while (v17 != v18);
    goto LABEL_30;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100408E78()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + 96);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CarPlayLibraryProvider()
{
  return self;
}

uint64_t sub_100408EFC()
{
  uint64_t v31 = sub_100054B78(&qword_1006097E8);
  uint64_t v33 = *(void *)(v31 - 8);
  __chkstk_darwin();
  char v29 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100054B78(&qword_1006097F0);
  uint64_t v34 = *(void *)(v32 - 8);
  __chkstk_darwin();
  char v30 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ObserverQueue();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1006097F8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78(&qword_100609800);
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v35 = (char *)&v26 - v14;
  swift_getObjectType();
  LibraryDataProviderProtocol.fetchShowCountObserver()();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ObserverQueue.main(_:), v3);
  sub_100044200(&qword_100609808, &qword_100609810);
  uint64_t v15 = Promise<A>.observerPublisher(receiveOn:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v37 = v15;
  sub_100054B78(&qword_100609818);
  sub_100044200(&qword_100609820, &qword_100609818);
  Publisher.map<A>(_:)();
  swift_release();
  uint64_t v26 = &protocol conformance descriptor for Publishers.Map<A, B>;
  sub_100044200(&qword_100609828, &qword_1006097F8);
  uint64_t v16 = v35;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v37 = *(void *)(v0 + 144);
  sub_100054B78(&qword_100609830);
  sub_100044200(&qword_100609838, &qword_100609830);
  uint64_t v17 = Publisher.eraseToAnyPublisher()();
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v13, v16, v28);
  uint64_t v37 = v17;
  swift_retain();
  uint64_t v36 = sub_100407C64();
  sub_100054B78((uint64_t *)&unk_100609840);
  sub_100054B78(&qword_1005FD1B0);
  sub_100044200(&qword_100609850, &qword_100609800);
  sub_100044200(&qword_100609858, (uint64_t *)&unk_100609840);
  sub_100044200((unint64_t *)&unk_1005FD1C0, &qword_1005FD1B0);
  uint64_t v20 = v29;
  Publishers.CombineLatest3.init(_:_:_:)();
  sub_100054B78((uint64_t *)&unk_1005F8BD0);
  sub_100044200(&qword_100609860, &qword_1006097E8);
  id v22 = v30;
  uint64_t v21 = v31;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v21);
  sub_100044200((unint64_t *)&unk_100609868, &qword_1006097F0);
  uint64_t v23 = v32;
  uint64_t v24 = Publisher.eraseToAnyPublisher()();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v35, v19);
  return v24;
}

void *sub_10040958C@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 0;
  return result;
}

void *sub_1004095A0(char a1, void *a2, unint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)v32 - v10;
  if (a1)
  {
    sub_1001C0DD4();
    static OS_os_log.carPlay.getter();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "CarPlayLibraryProvider: No shows. Returning empty sections.", v14, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    unint64_t v33 = (unint64_t)_swiftEmptyArrayStorage;
    if (a2)
    {
      id v16 = a2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    swift_bridgeObjectRetain();
    if (a3 >> 62)
    {
      sub_100054B78(&qword_1005F9F90);
      uint64_t v30 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      a3 = v30;
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    sub_1001B23F8(a3);
    sub_1001C0DD4();
    static OS_os_log.carPlay.getter();
    unint64_t v17 = v33;
    swift_bridgeObjectRetain_n();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134217984;
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v21 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      void v32[2] = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "CarPlayLibraryProvider: section total items count is %ld.", v20, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10046D060;
    swift_beginAccess();
    unint64_t v23 = v33;
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_100054B78(&qword_1005F7E20);
      uint64_t v31 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease_n();
      unint64_t v23 = v31;
    }
    else
    {
      uint64_t v24 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_100054B78(&qword_1005F7E20);
      if (swift_dynamicCastMetatype() || (uint64_t v28 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
      {
LABEL_18:
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = v24 + 32;
        while (1)
        {
          v32[1] = &OBJC_PROTOCOL___CPListTemplateItem;
          if (!swift_dynamicCastObjCProtocolConditional()) {
            break;
          }
          v29 += 8;
          if (!--v28) {
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v23 = v24 | 1;
      }
    }
    id v25 = objc_allocWithZone((Class)CPListSection);
    sub_1001C04A0(v23);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v27 = [v25 initWithItems:isa];

    *(void *)(v22 + 32) = v27;
    v32[0] = v22;
    specialized Array._endMutation()();
    return (void *)v32[0];
  }
}

void *sub_100409AA0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1004095A0(*(unsigned char *)a1, *(void **)(a1 + 8), *(void *)(a1 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_100409AD4()
{
  return sub_100408EFC();
}

uint64_t sub_100409AF8()
{
  return Publisher.eraseToAnyPublisher()();
}

void *sub_100409B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004086D0(a1, a2, a3, a4, v4);
}

uint64_t sub_100409B80()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100409BB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, void, void))(v2 + 16);
  uint64_t v6 = (int *)sub_100054B78(&qword_1006098D0);
  uint64_t result = v5(a1, *(void *)(a1 + v6[12]), *(void *)(a1 + v6[16]), *(void *)(a1 + v6[20]));
  *a2 = result;
  return result;
}

uint64_t sub_100409C1C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = 12;
  sub_100054B78(&qword_100609830);
  swift_allocObject();
  *(void *)(v2 + 144) = PassthroughSubject.init()();
  sub_100054B78((uint64_t *)&unk_1005F8AE0);
  swift_allocObject();
  *(void *)(v2 + 152) = PassthroughSubject.init()();
  *(void *)(v2 + 160) = _swiftEmptyArrayStorage;
  *(void *)(v2 + 16) = a1;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v2 + 40) = v5;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(a2 + 32);
  *(void *)(v2 + 72) = *(void *)(a2 + 48);
  sub_100054B78(&qword_1005FD620);
  swift_retain();
  BaseObjectGraph.inject<A>(_:)();
  *(_OWORD *)(v2 + 80) = v7[0];
  sub_100054B78((uint64_t *)&unk_1005FBBF0);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v7, v2 + 96);
  sub_100407324();
  return v2;
}

uint64_t sub_100409D30()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100409D68()
{
  return sub_10040792C();
}

uint64_t sub_100409D70()
{
  return PassthroughSubject.send(_:)();
}

void sub_100409DA4(void *a1)
{
}

void sub_100409DAC(void *a1)
{
}

uint64_t *sub_100409DB4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for OpenTranscriptIntent();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    long long v12 = *(_OWORD *)((char *)a2 + v9 + 24);
    *(_OWORD *)((char *)v4 + v9 + 24) = v12;
    uint64_t v13 = v12;
    uint64_t v14 = **(void (***)(char *, char *, uint64_t))(v12 - 8);
    swift_retain();
    swift_retain();
    v14(v10, v11, v13);
    uint64_t v15 = a3[9];
    *(_OWORD *)((char *)v4 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_unknownObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100409F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OpenTranscriptIntent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_release();
  sub_10004D2D8(a1 + *(int *)(a2 + 28));
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t sub_100409FD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for OpenTranscriptIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(a2 + v8 + 24);
  *(_OWORD *)(a1 + v8 + 24) = v11;
  uint64_t v12 = v11;
  uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_retain();
  swift_retain();
  v13(v9, v10, v12);
  uint64_t v14 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10040A0FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for OpenTranscriptIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  sub_100173CCC((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v8[1] = v10;
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10040A200(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for OpenTranscriptIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v8;
  long long v11 = (long long *)(a2 + v8);
  long long v12 = *v11;
  long long v13 = v11[1];
  *(void *)(v10 + 32) = *((void *)v11 + 4);
  *(_OWORD *)uint64_t v10 = v12;
  *(_OWORD *)(v10 + 16) = v13;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10040A2B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for OpenTranscriptIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_10004D2D8(a1 + v7);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[8];
  long long v12 = (void *)(a1 + v11);
  long long v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  swift_unknownObjectRelease();
  v12[1] = v14;
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_10040A3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040A3C0);
}

uint64_t sub_10040A3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OpenTranscriptIntent();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10040A480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040A494);
}

uint64_t sub_10040A494(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for OpenTranscriptIntent();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

double sub_10040A550@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for OpenTranscriptIntent();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a3, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for OpenTranscriptIntentImplementation();
  *(void *)(a3 + v8[9]) = a1;
  type metadata accessor for PlaybackController();
  swift_retain();
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(a3 + v8[5]) = v10;
  type metadata accessor for NowPlayingBootstrap();
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(a3 + v8[6]) = v10;
  sub_100054B78((uint64_t *)&unk_100609320);
  BaseObjectGraph.inject<A>(_:)();
  sub_100054B78(&qword_1005F7E60);
  BaseObjectGraph.inject<A>(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  double result = *(double *)&v10;
  *(_OWORD *)(a3 + v8[8]) = v10;
  return result;
}

uint64_t sub_10040A6C8()
{
  v1[5] = v0;
  sub_100054B78(&qword_100605E00);
  v1[6] = swift_task_alloc();
  sub_100054B78((uint64_t *)&unk_100600580);
  v1[7] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for EpisodeEntity();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TranscriptRequestInformation();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[14] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[15] = v5;
  v1[16] = v4;
  return _swift_task_switch(sub_10040A878, v5, v4);
}

uint64_t sub_10040A878()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  OpenTranscriptIntent.episode.getter();
  EpisodeEntity.transcriptRequestInformation.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    uint64_t v7 = v0[7];
    swift_release();
    sub_100054B1C(v7, (uint64_t *)&unk_100600580);
    sub_10040C290();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[12] + 32))(v0[13], v0[7], v0[11]);
    sub_10040B100();
    if (v10)
    {
      uint64_t v11 = (void *)swift_task_alloc();
      v0[17] = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_10040AACC;
      return sub_10040B330();
    }
    else
    {
      long long v12 = (void *)swift_task_alloc();
      v0[19] = v12;
      void *v12 = v0;
      v12[1] = sub_10040ADB4;
      uint64_t v13 = v0[13];
      return sub_10040B8A8(v13);
    }
  }
}

uint64_t sub_10040AACC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_10040AFA0;
  }
  else {
    uint64_t v5 = sub_10040AC08;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10040AC08()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[6];
  swift_release();
  type metadata accessor for OpenTranscriptIntentImplementation();
  uint64_t v5 = NowPlayingHostedContentID.transcript.unsafeMutableAddressor();
  swift_beginAccess();
  uint64_t v6 = type metadata accessor for NowPlayingHostedContentID();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  sub_100012998();
  swift_retain();
  swift_release();
  dispatch thunk of NowPlayingViewModel.updateContentSelection(_:animated:)();
  swift_release();
  sub_100054B1C(v4, &qword_100605E00);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10040ADB4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_10040B050;
  }
  else {
    uint64_t v5 = sub_10040AEF0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10040AEF0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10040AFA0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10040B050()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_10040B100()
{
  uint64_t v0 = type metadata accessor for EpisodeEntity();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v21 - v4;
  type metadata accessor for OpenTranscriptIntentImplementation();
  uint64_t v6 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter();
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = MPModelObject.uuid.getter();
    uint64_t v10 = v9;

    if (v10)
    {
      OpenTranscriptIntent.episode.getter();
      uint64_t v11 = EpisodeEntity.uuid.getter();
      uint64_t v13 = v12;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
      if (v13)
      {
        if (v8 == v11 && v10 == v13)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v15)
        {

          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    id v16 = v7;
    uint64_t v17 = MPModelObject.adamID.getter();
    char v19 = v18;

    if ((v19 & 1) == 0)
    {
      if (v17 < 0)
      {
        __break(1u);
      }
      else
      {
        OpenTranscriptIntent.episode.getter();
        uint64_t v20 = EpisodeEntity.adamID.getter();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);

        if ((v20 & 0x8000000000000000) == 0) {
          return;
        }
      }
      __break(1u);
      return;
    }
  }
}

uint64_t sub_10040B330()
{
  v1[7] = v0;
  uint64_t v2 = type metadata accessor for ActionMetricsBehavior();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ActionOutcome();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[14] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[15] = v5;
  v1[16] = v4;
  return _swift_task_switch(sub_10040B480, v5, v4);
}

uint64_t sub_10040B480()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = type metadata accessor for PresentNowPlayingAction();
  swift_allocObject();
  uint64_t v5 = PresentNowPlayingAction.init()();
  v0[17] = v5;
  type metadata accessor for OpenTranscriptIntentImplementation();
  swift_getObjectType();
  v0[5] = v4;
  v0[6] = sub_10005E468(&qword_1006099F0, (void (*)(uint64_t))&type metadata accessor for PresentNowPlayingAction);
  v0[2] = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ActionMetricsBehavior.notProcessed(_:), v3);
  swift_retain();
  v0[18] = ActionRunner.perform(_:withMetrics:asPartOf:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10004D2D8((uint64_t)(v0 + 2));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[19] = v6;
  void *v6 = v0;
  v6[1] = sub_10040B650;
  uint64_t v7 = v0[13];
  return Promise.then()(v7);
}

uint64_t sub_10040B650()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[15];
    uint64_t v4 = v2[16];
    uint64_t v5 = sub_10040B814;
  }
  else
  {
    (*(void (**)(void, void))(v2[12] + 8))(v2[13], v2[11]);
    swift_release();
    uint64_t v3 = v2[15];
    uint64_t v4 = v2[16];
    uint64_t v5 = sub_10040B788;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10040B788()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10040B814()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10040B8A8(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = type metadata accessor for ActionMetricsBehavior();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ActionOutcome();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  type metadata accessor for ActionMetrics();
  v2[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FlowDestinationPageHeader();
  v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FlowPresentationContext();
  v2[19] = v6;
  v2[20] = *(void *)(v6 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FlowDestination();
  v2[22] = v7;
  v2[23] = *(void *)(v7 - 8);
  v2[24] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[25] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[26] = v9;
  v2[27] = v8;
  return _swift_task_switch(sub_10040BB38, v9, v8);
}

uint64_t sub_10040BB38()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[20];
  uint64_t v7 = v0[7];
  sub_100054B78(&qword_100603DD0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10046D010;
  uint64_t v9 = type metadata accessor for TranscriptRequestInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v1, v7, v9);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for FlowDestination.episodeDetailTranscript(_:), v3);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, enum case for FlowPresentationContext.pushDetail(_:), v5);
  LOBYTE(v4) = static Link.Presentation.textFollowsTintColor.getter();
  unsigned __int8 v10 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v4) {
    Link.Presentation.init(rawValue:)();
  }
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v10) {
    Link.Presentation.init(rawValue:)();
  }
  uint64_t v11 = v0[10];
  uint64_t v19 = v0[11];
  uint64_t v20 = v0[9];
  (*(void (**)(void, void, void))(v0[17] + 104))(v0[18], enum case for FlowDestinationPageHeader.standard(_:), v0[16]);
  static ActionMetrics.notInstrumented.getter();
  uint64_t v12 = type metadata accessor for FlowAction();
  swift_allocObject();
  uint64_t v13 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
  *(void *)(v8 + 56) = v12;
  *(void *)(v8 + 64) = sub_10005E468((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
  *(void *)(v8 + 32) = v13;
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  uint64_t v14 = type metadata accessor for TabChangeAction();
  swift_allocObject();
  uint64_t v15 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
  v0[28] = v15;
  type metadata accessor for OpenTranscriptIntentImplementation();
  swift_getObjectType();
  v0[5] = v14;
  v0[6] = sub_10005E468((unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
  v0[2] = v15;
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v19, enum case for ActionMetricsBehavior.notProcessed(_:), v20);
  swift_retain();
  v0[29] = ActionRunner.perform(_:withMetrics:asPartOf:)();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v19, v20);
  sub_10004D2D8((uint64_t)(v0 + 2));
  id v16 = (void *)swift_task_alloc();
  v0[30] = v16;
  *id v16 = v0;
  v16[1] = sub_10040BF30;
  uint64_t v17 = v0[14];
  return Promise.then()(v17);
}

uint64_t sub_10040BF30()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[26];
    uint64_t v4 = v2[27];
    uint64_t v5 = sub_10040C130;
  }
  else
  {
    (*(void (**)(void, void))(v2[13] + 8))(v2[14], v2[12]);
    swift_release();
    uint64_t v3 = v2[26];
    uint64_t v4 = v2[27];
    uint64_t v5 = sub_10040C068;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10040C068()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10040C130()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10040C204()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000B8F0;
  return sub_10040A6C8();
}

unint64_t sub_10040C290()
{
  unint64_t result = qword_1006099D8;
  if (!qword_1006099D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1006099D8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OpenTranscriptError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10040C380);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenTranscriptError()
{
  return &type metadata for OpenTranscriptError;
}

uint64_t sub_10040C3B8()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

unint64_t sub_10040C3D8()
{
  unint64_t result = qword_1006099F8[0];
  if (!qword_1006099F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1006099F8);
  }
  return result;
}

void sub_10040C42C()
{
}

void sub_10040C470()
{
}

id sub_10040C4A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundTaskManager();
  return [super dealloc];
}

uint64_t sub_10040C4D4()
{
  return swift_deallocObject();
}

void sub_10040C50C()
{
}

id MTFeedUpdateManager.statusManager.getter()
{
  id result = [v0 feedManager];
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10040C56C(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v8 = sub_10016F594((uint64_t)_swiftEmptyArrayStorage);
  id v9 = a2;
  swift_retain();
  sub_10040FBA0(v8, a1, v9, a3);
  uint64_t v11 = v10;

  swift_release();
  a4(v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10040C624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v21 = a3;
  sub_100054B78(&qword_100609CA8);
  __chkstk_darwin();
  uint64_t v22 = (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v9 = (char *)&v21 - v8;
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v3 + 16);
  uint64_t v11 = swift_retain();
  uint64_t v12 = (void *)v10(v11);
  swift_release();
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_100607FB0);
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v12;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = v9;
  void v15[6] = v4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10040FAB0;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_10004A010;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  void aBlock[3] = &unk_10056A310;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  [v18 performBlockAndWait:v17];
  _Block_release(v17);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v22;
    sub_10040FAD0((uint64_t)v9, v22);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13);
    if (result != 1)
    {

      sub_100053820(v20, v21, (uint64_t *)&unk_100607FB0);
      sub_100054B1C((uint64_t)v9, &qword_100609CA8);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10040C8FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100054B78(&qword_100609CA8);
  __chkstk_darwin();
  id v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [a1 episodeForUuid:v10];

  if (v11)
  {
    sub_10040CCFC(a2, a3, v11, a1, (uint64_t)v9);

    uint64_t v14 = sub_100054B78((uint64_t *)&unk_100607FB0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
    return sub_10040FB38((uint64_t)v9, a4);
  }
  else
  {
    sub_100054B1C(a4, &qword_100609CA8);
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(unsigned char *)(a4 + 16) = 2;
    uint64_t v12 = sub_100054B78((uint64_t *)&unk_100607FB0);
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a4, 0, 1, v12);
  }
}

void sub_10040CCFC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v112 = a5;
  id v126 = a4;
  uint64_t v128 = a1;
  sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin();
  id v111 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  id v115 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v116 = v9;
  uint64_t v117 = v10;
  __chkstk_darwin();
  uint64_t v113 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v114 = (char *)&v107 - v12;
  uint64_t v13 = type metadata accessor for BugReportFrequency();
  uint64_t v124 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v127 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for BugReport.Domain();
  uint64_t v121 = *(void (***)(char *, void, uint64_t))(v15 - 8);
  uint64_t v122 = v15;
  __chkstk_darwin();
  uint64_t v123 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for BugReport.ErrorKind();
  uint64_t v17 = *(void *)(v120 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PodcastsSystem();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin();
  unint64_t v23 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a3 isDownloaded])
  {
    static os_log_type_t.error.getter();
    uint64_t v118 = a2;
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v119 = v13;
    uint64_t v24 = (void *)static OS_os_log.downloads.getter();
    os_log(_:dso:log:_:_:)();

    sub_100056D54(v125 + 32, (uint64_t)v130);
    uint64_t v110 = v132;
    uint64_t v125 = v131;
    uint64_t v109 = sub_100041A98(v130, v131);
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for PodcastsSystem.downloads(_:), v20);
    (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for BugReport.ErrorKind.duplicateDownloads(_:), v120);
    v121[13](v123, enum case for BugReport.Domain.podcasts(_:), v122);
    id v25 = objc_allocWithZone((Class)type metadata accessor for BugReport());
    uint64_t v26 = (void *)BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)();
    uint64_t v27 = v124;
    (*(void (**)(char *, void, uint64_t))(v124 + 104))(v127, enum case for BugReportFrequency.daily(_:), v119);
    sub_100054B78(&qword_1005F6CB8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D020;
    v129[0] = 0xD000000000000013;
    v129[1] = 0x80000001004E38F0;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 96) = &type metadata for String;
    uint64_t v29 = v118;
    *(void *)(inited + 72) = v128;
    *(void *)(inited + 80) = v29;
    strcpy((char *)v129, "PodcastAdamID");
    HIWORD(v129[1]) = -4864;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    id v30 = [a3 podcast];
    if (v30)
    {
      uint64_t v31 = v30;
      [v30 storeCollectionId];
      v129[0] = AdamID.init(rawValue:)();
      sub_1001A5874();
      uint64_t v32 = BinaryInteger.description.getter();
      unint64_t v34 = v33;

      id v35 = (uint64_t *)(inited + 144);
      *(void *)(inited + 168) = &type metadata for String;
      if (v34)
      {
        *id v35 = v32;
        goto LABEL_7;
      }
    }
    else
    {
      id v35 = (uint64_t *)(inited + 144);
      *(void *)(inited + 168) = &type metadata for String;
    }
    *id v35 = 0x49434550534E553CLL;
    unint64_t v34 = 0xED00003E44454946;
LABEL_7:
    *(void *)(inited + 152) = v34;
    strcpy((char *)v129, "PodcastsUUID");
    BYTE5(v129[1]) = 0;
    HIWORD(v129[1]) = -5120;
    AnyHashable.init<A>(_:)();
    id v36 = [a3 podcastUuid];
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v39;

      uint64_t v41 = (uint64_t *)(inited + 216);
      *(void *)(inited + 240) = &type metadata for String;
      if (v40)
      {
        uint64_t *v41 = v38;
        uint64_t v42 = v27;
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v41 = (uint64_t *)(inited + 216);
      *(void *)(inited + 240) = &type metadata for String;
    }
    uint64_t v42 = v27;
    uint64_t *v41 = 0x49434550534E553CLL;
    unint64_t v40 = 0xED00003E44454946;
LABEL_12:
    *(void *)(inited + 224) = v40;
    strcpy((char *)v129, "EpisodeAdamID");
    HIWORD(v129[1]) = -4864;
    AnyHashable.init<A>(_:)();
    id v43 = [a3 storeTrackId];
    *(void *)(inited + 312) = &type metadata for Int64;
    *(void *)(inited + 288) = v43;
    v129[0] = 0xD000000000000013;
    v129[1] = 0x80000001004E3910;
    AnyHashable.init<A>(_:)();
    id v44 = [v126 name];
    if (v44)
    {
      uint64_t v45 = v44;
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v48 = v47;

      os_log_type_t v49 = (uint64_t *)(inited + 360);
      *(void *)(inited + 384) = &type metadata for String;
      if (v48)
      {
        *os_log_type_t v49 = v46;
        unint64_t v50 = v48;
        uint64_t v42 = v27;
        unint64_t v51 = v127;
LABEL_18:
        *(void *)(inited + 368) = v50;
        sub_10016E860(inited);
        dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v51, v119);
        sub_10004D2D8((uint64_t)v130);
        a2 = v118;
        goto LABEL_19;
      }
      uint64_t v42 = v27;
    }
    else
    {
      os_log_type_t v49 = (uint64_t *)(inited + 360);
      *(void *)(inited + 384) = &type metadata for String;
    }
    *os_log_type_t v49 = 0x49434550534E553CLL;
    unint64_t v51 = v127;
    unint64_t v50 = 0xED00003E44454946;
    goto LABEL_18;
  }
LABEL_19:
  if ([a3 feedDeleted])
  {
    sub_1002435BC();
    swift_allocError();
    *(void *)uint64_t v52 = v128;
    *(void *)(v52 + 8) = a2;
    *(unsigned char *)(v52 + 16) = 1;
LABEL_23:
    swift_bridgeObjectRetain();
LABEL_36:
    swift_willThrow();
    return;
  }
  if ([a3 isRestricted])
  {
    sub_1002435BC();
    swift_allocError();
    *(void *)uint64_t v53 = v128;
    *(void *)(v53 + 8) = a2;
    *(unsigned char *)(v53 + 16) = 0;
    goto LABEL_23;
  }
  if (([a3 isExternalType] & 1) != 0
    || ([a3 isMedia] & 1) == 0)
  {
    sub_1002435BC();
    swift_allocError();
    *(_OWORD *)uint64_t v63 = xmmword_10047B1D0;
LABEL_35:
    *(unsigned char *)(v63 + 16) = 3;
    goto LABEL_36;
  }
  id v54 = [a3 enclosureURL];
  if (!v54)
  {
LABEL_34:
    sub_1002435BC();
    swift_allocError();
    *(void *)uint64_t v63 = 0;
    *(void *)(v63 + 8) = 0;
    goto LABEL_35;
  }
  id v55 = v54;
  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v58 = v57;

  uint64_t v59 = HIBYTE(v58) & 0xF;
  if ((v58 & 0x2000000000000000) == 0) {
    uint64_t v59 = v56 & 0xFFFFFFFFFFFFLL;
  }
  if (!v59)
  {
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  uint64_t v60 = (uint64_t)v115;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v62 = v116;
  uint64_t v61 = v117;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v60, 1, v116) == 1)
  {
    sub_100054B1C(v60, (uint64_t *)&unk_1005F7750);
    goto LABEL_34;
  }
  uint64_t v64 = v114;
  id v126 = *(id *)(v61 + 32);
  uint64_t v127 = (char *)(v61 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v126)(v114, v60, v62);
  uint64_t v65 = a3;
  id v66 = [a3 podcast];
  if (!v66) {
    goto LABEL_40;
  }
  uint64_t v67 = v66;
  [v66 storeCollectionId];
  AdamID.init(rawValue:)();
  if (AdamID.isEmpty.getter())
  {

LABEL_40:
    uint64_t v68 = 0;
    LODWORD(v124) = 1;
    goto LABEL_43;
  }
  [v67 storeCollectionId];
  uint64_t v68 = AdamID.init(rawValue:)();

  if (v68 < 0)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  LODWORD(v124) = 0;
LABEL_43:
  uint64_t v128 = MTEpisode.contentId.getter();
  uint64_t v125 = v68;
  if (v69 & 1) != 0 || (AdamID.isEmpty.getter())
  {
    uint64_t v128 = 0;
    LODWORD(v123) = 1;
  }
  else
  {
    if (v128 < 0)
    {
LABEL_82:
      __break(1u);
      return;
    }
    LODWORD(v123) = 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v113, v64, v62);
  unsigned int v70 = [a3 isAudio];
  [a3 duration];
  double v72 = v71;
  if (v71 > 0.0)
  {
    [a3 duration];
    if ((~*(void *)&v73 & 0x7FF0000000000000) != 0)
    {
      if (v73 > -9.22337204e18)
      {
        if (v73 < 9.22337204e18)
        {
          uint64_t v122 = (uint64_t)v73;
          goto LABEL_54;
        }
        goto LABEL_80;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  uint64_t v122 = 0;
LABEL_54:
  uint64_t v120 = (uint64_t)[a3 byteSize];
  if (v120 < 1) {
    uint64_t v121 = 0;
  }
  else {
    uint64_t v121 = (void (**)(char *, void, uint64_t))[a3 byteSize];
  }
  id v74 = [a3 guid];
  if (v74)
  {
    long long v75 = v74;
    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v118 = v77;
    uint64_t v119 = v76;
  }
  else
  {
    uint64_t v118 = 0;
    uint64_t v119 = 0;
  }
  id v78 = [a3 podcast];
  if (v78 && (int v79 = v78, v80 = [v78 title], v79, v80))
  {
    id v115 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v110 = v81;
  }
  else
  {
    id v115 = 0;
    uint64_t v110 = 0;
  }
  id v82 = [a3 podcast];
  if (v82
    && (v83 = v82, id v84 = [v82 feedURL], v83, v84))
  {
    uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v108 = v86;
    uint64_t v109 = (void *)v85;
  }
  else
  {
    uint64_t v108 = 0;
    uint64_t v109 = 0;
  }
  uint64_t v87 = (uint64_t)v111;
  uint64_t v88 = v117;
  LODWORD(v117) = v70 ^ 1;
  unint64_t v89 = a3;
  id v90 = [a3 podcast];
  uint64_t v91 = v90;
  if (v90)
  {
    id v92 = [v90 updatedFeedURL];

    if (v92)
    {
      uint64_t v91 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v94 = v93;
    }
    else
    {
      uint64_t v91 = 0;
      uint64_t v94 = 0;
    }
    unint64_t v89 = v65;
  }
  else
  {
    uint64_t v94 = 0;
  }
  id v95 = [v89 lastCacheDeletePurge];
  if (v95)
  {
    uint64_t v96 = v95;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, uint64_t))(v88 + 8))(v114, v62);
    uint64_t v97 = type metadata accessor for Date();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v87, 0, 1, v97);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v88 + 8))(v114, v62);
    uint64_t v98 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v87, 1, 1, v98);
  }
  BOOL v99 = v120 < 1;
  uint64_t v100 = (int *)type metadata accessor for EpisodeMetadata(0);
  uint64_t v101 = v112;
  ((void (*)(uint64_t, char *, uint64_t))v126)(v112 + v100[11], v113, v62);
  *(unsigned char *)(v101 + v100[12]) = v117;
  uint64_t v102 = v101 + v100[13];
  *(void *)uint64_t v102 = v121;
  *(unsigned char *)(v102 + 8) = v99;
  *(void *)uint64_t v101 = 0;
  *(void *)(v101 + 8) = 0;
  uint64_t v103 = v118;
  *(void *)(v101 + 16) = v119;
  *(void *)(v101 + 24) = v103;
  *(void *)(v101 + 32) = v128;
  *(unsigned char *)(v101 + 40) = (_BYTE)v123;
  *(void *)(v101 + 48) = v125;
  *(unsigned char *)(v101 + 56) = v124;
  uint64_t v104 = v110;
  *(void *)(v101 + 64) = v115;
  *(void *)(v101 + 72) = v104;
  uint64_t v105 = v108;
  *(void *)(v101 + 80) = v109;
  *(void *)(v101 + 88) = v105;
  *(void *)(v101 + 96) = v91;
  *(void *)(v101 + 104) = v94;
  uint64_t v106 = v101 + v100[14];
  *(void *)uint64_t v106 = v122;
  *(unsigned char *)(v106 + 8) = v72 <= 0.0;
  sub_100053820(v87, v101 + v100[15], &qword_1005F5D20);
}

void sub_10040DC20(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void, uint64_t), uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v43 = a7;
  uint64_t v45 = a6;
  uint64_t v49 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v49 - 8);
  uint64_t v15 = __chkstk_darwin(v49);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v41 - v18;
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v47 = *(void *)(v20 - 8);
  uint64_t v48 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  unint64_t v23 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  id v25 = (char *)v41 - v24;
  uint64_t v42 = a2;
  NSString v26 = String._bridgeToObjectiveC()();
  id v44 = a1;
  id v27 = [a1 episodeForUuid:v26];

  uint64_t v28 = (void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v46 = a5;
  if (v27)
  {
    static Logger.database.getter();
    (*v28)(v17, a4, v49);
    swift_bridgeObjectRetain_n();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      v41[1] = a4;
      uint64_t v32 = v31;
      v41[0] = swift_slowAlloc();
      uint64_t v51 = v41[0];
      *(_DWORD *)uint64_t v32 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_10004B974(v42, a3, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v33 = URL.absoluteString.getter();
      uint64_t v50 = sub_10004B974(v33, v34, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v49);
      *(_WORD *)(v32 + 22) = 2048;
      uint64_t v50 = *(void *)&a8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Updating episode %s with assetURL %s at downloadDate %f", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v49);
    }

    (*(void (**)(char *, uint64_t))(v47 + 8))(v23, v48);
    URL.absoluteString.getter();
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v27 setAssetURL:v40];

    [v27 setByteSize:v43];
    [v27 setDownloadDate:a8];
    [v44 saveInCurrentBlock];
    v46(0, 0);
  }
  else
  {
    static Logger.database.getter();
    (*v28)(v19, a4, v49);
    swift_bridgeObjectRetain_n();
    id v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_10004B974(v42, a3, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v38 = URL.absoluteString.getter();
      uint64_t v50 = sub_10004B974(v38, v39, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v49);
      *(_WORD *)(v37 + 22) = 2048;
      uint64_t v50 = *(void *)&a8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to locate episode %s to update with assetURL %s at downloadDate %f", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v49);
    }

    (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v48);
    v46(0, 1);
  }
}

void sub_10040E270(void *a1, uint64_t a2, unint64_t a3, void (*a4)(void, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a4;
  uint64_t v11 = type metadata accessor for MediaLibraryPid();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [a1 episodeForUuid:v15];

  if (v16)
  {
    uint64_t v29 = a2;
    os_log_type_t v17 = static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v18 = static OS_os_log.downloads.getter();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v31 = a6;
    v19(v14, a6, v11);
    os_log_type_t v30 = v18;
    if (os_log_type_enabled(v18, v17))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v28 = a5;
      uint64_t v21 = v20;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v21 = 134218242;
      int v26 = v17;
      uint64_t v22 = MediaLibraryPid.value.getter();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v33 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_10004B974(v29, a3, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      unint64_t v23 = v30;
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v26, "Updating MTEpisode with media library persistent id %lld. EpisodeUUID %s.", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
      swift_bridgeObjectRetain_n();
      v24(v14, v11);
      swift_bridgeObjectRelease_n();
    }
    [v16 setPersistentID:MediaLibraryPid.value.getter()];
    [a1 saveInCurrentBlock];
    v32(0, 0);
  }
  else
  {
    v32(0, 1);
  }
}

uint64_t sub_10040E5C8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *, uint64_t))
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a1 episodeForUuid:v6];

  if (!v7) {
    return a4(0, 0, 1);
  }
  id v8 = [v7 podcast];
  uint64_t v9 = v8;
  if (v8)
  {
    id v10 = [v8 title];

    if (v10)
    {
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v9 = 0;
    }
  }
  else
  {
    uint64_t v11 = 0;
  }
  a4(v11, v9, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10040E6F8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a1 episodeForUuid:v6];

  if (!v7) {
    return a4(0, 0, 1);
  }
  id v8 = [v7 title];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  a4(v10, v12, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10040E7F8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v31 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78(&qword_1005F6CF8);
  __chkstk_darwin(v14);
  id v16 = (void *)((char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [a1 episodeForUuid:v17];

  if (!v18)
  {
    *id v16 = 0;
    swift_storeEnumTagMultiPayload();
    a4(v16);
    return sub_100054B1C((uint64_t)v16, &qword_1005F6CF8);
  }
  v29[1] = a5;
  os_log_type_t v30 = a4;
  id v19 = [v18 assetURL];
  if (!v19)
  {
LABEL_5:
    sub_100054B78(&qword_1006086A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D010;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v23;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000018;
    *(void *)(inited + 56) = 0x80000001004E3A80;
    sub_10016E9D8(inited);
    id v24 = objc_allocWithZone((Class)NSError);
    NSString v25 = String._bridgeToObjectiveC()();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v27 = [v24 initWithDomain:v25 code:1 userInfo:isa];

    *id v16 = v27;
    swift_storeEnumTagMultiPayload();
    v30(v16);

    return sub_100054B1C((uint64_t)v16, &qword_1005F6CF8);
  }
  uint64_t v20 = v19;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v10, 1, v11) == 1)
  {
    sub_100054B1C((uint64_t)v10, (uint64_t *)&unk_1005F7750);
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v13, v10, v11);
  (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v16, v13, v11);
  swift_storeEnumTagMultiPayload();
  v30(v16);

  sub_100054B1C((uint64_t)v16, &qword_1005F6CF8);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v11);
}

void sub_10040EC04(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t))
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a1 episodeForUuid:v6];

  if (v7)
  {
    [v7 setAssetURL:0];
    [v7 setByteSize:0];
    [a1 saveInCurrentBlock];
    a4(0, 0);
  }
  else
  {
    a4(0, 1);
  }
}

uint64_t sub_10040ECF4(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  id v5 = a2;
  unint64_t v6 = (unint64_t)sub_1003607B8(a1, v5);

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_10;
    }
  }
  if (v7 < 1) {
    __break(1u);
  }
  uint64_t v8 = 0;
  do
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v6 + 8 * v8 + 32);
    }
    uint64_t v10 = v9;
    ++v8;
    [v9 setAssetURL:0];
    [v10 setByteSize:0];
  }
  while (v7 != v8);
LABEL_10:
  swift_bridgeObjectRelease_n();
  v15[0] = 0;
  if ([v5 save:v15])
  {
    id v11 = v15[0];
    return a3(0, 0);
  }
  else
  {
    id v13 = v15[0];
    uint64_t v14 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    a3(v14, 1);
    swift_errorRelease();
    return swift_errorRelease();
  }
}

void sub_10040EECC(uint64_t a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  uint64_t v87 = a4;
  uint64_t v88 = a3;
  id v89 = a2;
  uint64_t v5 = type metadata accessor for MediaLibraryPid();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v86 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v83 = (char *)&v82 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v82 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)&v82 - v15;
  __chkstk_darwin(v14);
  id v18 = (char *)&v82 - v17;
  unint64_t v96 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v19 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v95 = v5;
  uint64_t v90 = v6;
  if (v19)
  {
    id v84 = v13;
    uint64_t v20 = v6 + 16;
    uint64_t v21 = *(void (**)(void, void, void))(v6 + 16);
    unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v23 = *(void *)(v6 + 72);
    uint64_t v85 = a1;
    unint64_t v92 = v22;
    uint64_t v93 = v21;
    uint64_t v24 = a1 + v22;
    uint64_t v91 = (void (**)(char *, uint64_t))(v20 - 8);
    NSString v25 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    unint64_t v94 = (unint64_t)v16;
    v21(v18, a1 + v22, v5);
    while (1)
    {
      if (MediaLibraryPid.isValid.getter())
      {
        int v26 = *v25;
        (*v25)(v16, v18, v5);
        id v27 = (void *)v96;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001BA868(0, v27[2] + 1, 1);
          id v27 = (void *)v96;
        }
        unint64_t v29 = v27[2];
        unint64_t v28 = v27[3];
        if (v29 >= v28 >> 1)
        {
          sub_1001BA868(v28 > 1, v29 + 1, 1);
          id v27 = (void *)v96;
        }
        void v27[2] = v29 + 1;
        os_log_type_t v30 = (char *)v27 + v92 + v29 * v23;
        id v16 = (char *)v94;
        uint64_t v5 = v95;
        v26(v30, (char *)v94, v95);
        unint64_t v96 = (unint64_t)v27;
        uint64_t v21 = v93;
      }
      else
      {
        (*v91)(v18, v5);
      }
      v24 += v23;
      if (!--v19) {
        break;
      }
      v21(v18, v24, v5);
    }
    uint64_t v31 = (void *)v96;
    uint64_t v6 = v90;
    id v13 = v84;
  }
  else
  {
    uint64_t v31 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  unint64_t v96 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v32 = v31[2];
  if (v32)
  {
    id v35 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v33 = v6 + 16;
    uint64_t v34 = v35;
    os_log_type_t v36 = (char *)v31 + ((*(unsigned __int8 *)(v33 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 64));
    uint64_t v37 = *(void *)(v33 + 56);
    unint64_t v94 = (unint64_t)v31;
    swift_retain();
    do
    {
      uint64_t v38 = v95;
      v34(v13, v36, v95);
      id v39 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:MediaLibraryPid.value.getter()];
      (*(void (**)(char *, uint64_t))(v33 - 8))(v13, v38);
      if (v39)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v36 += v37;
      --v32;
    }
    while (v32);
    swift_release();
  }
  NSString v40 = self;
  swift_release();
  sub_10004D29C(0, (unint64_t *)&unk_1005F9460);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v42 = [v40 predicateForPersistentIds:isa];

  id v43 = [v89 objectsInEntity:kMTEpisodeEntityName predicate:v42 sortDescriptors:0];
  if (!v43
    || (id v44 = v43,
        sub_10004D29C(0, (unint64_t *)&qword_1005F7130),
        unint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v44,
        unint64_t v46 = (unint64_t)sub_100059548(v45),
        swift_bridgeObjectRelease(),
        !v46))
  {
    sub_100054B78(&qword_1006086A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D010;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v77;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000032;
    *(void *)(inited + 56) = 0x80000001004E3A10;
    sub_10016E9D8(inited);
    id v78 = objc_allocWithZone((Class)NSError);
    NSString v79 = String._bridgeToObjectiveC()();
    Class v80 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v81 = [v78 initWithDomain:v79 code:2 userInfo:v80];

    v88(v81, 1);
    return;
  }
  unint64_t v94 = sub_10016F7B8((uint64_t)_swiftEmptyArrayStorage);
  if (v46 >> 62) {
    goto LABEL_54;
  }
  uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v47) {
    goto LABEL_52;
  }
  while (2)
  {
    unint64_t v48 = v46 & 0xC000000000000001;
    uint64_t v49 = (void (**)(char *, uint64_t))(v90 + 32);
    unint64_t v92 = v90 + 40;
    uint64_t v93 = (void (*)(void, void, void))v42;
    id v42 = 0;
    if ((v46 & 0xC000000000000001) == 0)
    {
LABEL_32:
      id v51 = *(id *)(v46 + 8 * (void)v42 + 32);
      goto LABEL_33;
    }
    while (1)
    {
      id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_33:
      uint64_t v52 = v51;
      uint64_t v53 = (char *)v42 + 1;
      if (__OFADD__(v42, 1)) {
        break;
      }
      id v54 = [v51 uuid];
      if (v54)
      {
        id v55 = v54;
        uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v58 = v57;

        if (!sub_100410014((uint64_t)[v52 persistentID]))
        {
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        [v52 persistentID];
        uint64_t v59 = v83;
        MediaLibraryPid.init(_:)();
        uint64_t v60 = v49;
        uint64_t v61 = *v49;
        uint64_t v91 = v60;
        ((void (*)(char *, char *, uint64_t))v61)(v86, v59, v95);
        uint64_t v62 = (void *)v94;
        LODWORD(v89) = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v96 = (unint64_t)v62;
        unint64_t v64 = sub_100051E78(v56, v58);
        uint64_t v65 = v62[2];
        BOOL v66 = (v63 & 1) == 0;
        uint64_t v67 = v65 + v66;
        if (__OFADD__(v65, v66))
        {
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return;
        }
        if (v62[3] >= v67)
        {
          if (v89)
          {
            unsigned int v70 = (void *)v96;
            if ((v63 & 1) == 0) {
              goto LABEL_45;
            }
          }
          else
          {
            LODWORD(v94) = v63;
            sub_100282CB0();
            unsigned int v70 = (void *)v96;
            if ((v94 & 1) == 0) {
              goto LABEL_45;
            }
          }
        }
        else
        {
          LODWORD(v94) = v63;
          sub_10027D198(v67, (int)v89);
          unint64_t v68 = sub_100051E78(v56, v58);
          if ((v94 & 1) != (v69 & 1)) {
            goto LABEL_58;
          }
          unint64_t v64 = v68;
          unsigned int v70 = (void *)v96;
          if ((v94 & 1) == 0)
          {
LABEL_45:
            v70[(v64 >> 6) + 8] |= 1 << v64;
            double v71 = (uint64_t *)(v70[6] + 16 * v64);
            *double v71 = v56;
            v71[1] = v58;
            double v72 = v91;
            ((void (*)(unint64_t, char *, uint64_t))v61)(v70[7] + *(void *)(v90 + 72) * v64, v86, v95);
            uint64_t v73 = v70[2];
            BOOL v74 = __OFADD__(v73, 1);
            uint64_t v75 = v73 + 1;
            if (v74) {
              goto LABEL_57;
            }
            uint64_t v49 = v72;
            v70[2] = v75;
            swift_bridgeObjectRetain();
            id v42 = v93;
            goto LABEL_47;
          }
        }
        (*(void (**)(unint64_t, char *, uint64_t))(v90 + 40))(v70[7] + *(void *)(v90 + 72) * v64, v86, v95);
        id v42 = v93;
        uint64_t v49 = v91;
LABEL_47:
        unint64_t v94 = v96;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v53 == (char *)v47) {
          goto LABEL_52;
        }
        id v42 = v53;
        if (!v48) {
          goto LABEL_32;
        }
      }
      else
      {
LABEL_29:
        static os_log_type_t.error.getter();
        sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
        uint64_t v50 = (void *)static OS_os_log.downloads.getter();
        os_log(_:dso:log:_:_:)();

        id v42 = (char *)v42 + 1;
        if (v53 == (char *)v47)
        {
          id v42 = v93;
          goto LABEL_52;
        }
        if (!v48) {
          goto LABEL_32;
        }
      }
    }
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain_n();
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v47) {
      continue;
    }
    break;
  }
LABEL_52:
  swift_bridgeObjectRelease_n();
  v88((id)v94, 0);

  swift_bridgeObjectRelease();
}

void sub_10040F824(void *a1, uint64_t a2, uint64_t a3, objc_class *a4, void (*a5)(id, uint64_t))
{
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [a1 episodeForUuid:v8];

  if (!v9) {
    goto LABEL_7;
  }
  id v10 = sub_10033F234(a4);
  if (!v10)
  {

LABEL_7:
    a5(0, 1);
    return;
  }
  id v11 = v10;
  a5(v10, 0);
}

void sub_10040F90C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v13 = [a1 episodeForUuid:v6];

  if (v13)
  {
    id v7 = [v13 podcastUuid];
    if (v7)
    {
      NSString v8 = v7;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v12;
    }
    a4(v9, v11, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    a4(0, 0, 1);
  }
}

uint64_t sub_10040FA28()
{
  swift_release();
  sub_10004D2D8(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_10040FA68()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10040FAB0()
{
  return sub_10040C8FC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10040FAC0()
{
  return swift_deallocObject();
}

uint64_t sub_10040FAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100609CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10040FB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100609CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10040FBA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v40 = a4;
  id v43 = a3;
  uint64_t v37 = a1;
  type metadata accessor for EpisodeMetadata(0);
  __chkstk_darwin();
  uint64_t v36 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v42 = (uint64_t)&v36 - v8;
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v39 = a2 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v41 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v44 = a2;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  long long v38 = xmmword_10046D030;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    uint64_t v17 = v43;
LABEL_20:
    uint64_t v21 = (uint64_t *)(*(void *)(v44 + 48) + 16 * v16);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    swift_bridgeObjectRetain();
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v17 episodeForUuid:v24];

    if (v25)
    {
      swift_bridgeObjectRetain();
      sub_10040CCFC(v22, v23, v25, v17, v42);
      if (v5)
      {

        swift_bridgeObjectRelease();
        int v45 = static os_log_type_t.error.getter();
        sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
        int v26 = (void *)static OS_os_log.downloads.getter();
        sub_100054B78(&qword_1005F7720);
        uint64_t v27 = swift_allocObject();
        unint64_t v46 = v12;
        int64_t v28 = v13;
        unint64_t v29 = (void *)v27;
        *(_OWORD *)(v27 + 16) = v38;
        *(void *)(v27 + 56) = &type metadata for String;
        unint64_t v30 = sub_10004DA4C();
        v29[8] = v30;
        v29[4] = v22;
        void v29[5] = v23;
        swift_getErrorValue();
        swift_bridgeObjectRetain();
        uint64_t v31 = Error.localizedDescription.getter();
        v29[12] = &type metadata for String;
        v29[13] = v30;
        v29[9] = v31;
        v29[10] = v32;
        os_log(_:dso:log:_:_:)();

        int64_t v13 = v28;
        unint64_t v12 = v46;
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = 0;
      }
      else
      {
        uint64_t v33 = v36;
        sub_100392970(v42, v36);
        uint64_t v34 = v37;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v47 = v34;
        sub_1002802C8(v33, v22, v23, isUniquelyReferenced_nonNull_native);
        uint64_t v37 = v47;

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      static os_log_type_t.info.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v14 = (void *)static OS_os_log.downloads.getter();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v13++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v13 >= v41) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v39 + 8 * v13);
  uint64_t v17 = v43;
  if (v19)
  {
LABEL_19:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
    goto LABEL_20;
  }
  int64_t v20 = v13 + 1;
  if (v13 + 1 >= v41) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v39 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v13 + 2;
  if (v13 + 2 >= v41) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v39 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v13 + 3;
  if (v13 + 3 >= v41) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v39 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v13 + 4;
  if (v13 + 4 >= v41)
  {
LABEL_28:
    swift_release();
    return;
  }
  unint64_t v19 = *(void *)(v39 + 8 * v20);
  if (v19)
  {
LABEL_18:
    int64_t v13 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v13 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v13 >= v41) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v39 + 8 * v13);
    ++v20;
    if (v19) {
      goto LABEL_19;
    }
  }
LABEL_30:
  __break(1u);
}

BOOL sub_100410014(uint64_t a1)
{
  return kEpisodePersistentIdNotInMediaLibrary != a1;
}

uint64_t destroy for ValidatorResult(uint64_t a1)
{
  return sub_10018DB10(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8Podcasts15ValidatorResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1003D3100(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ValidatorResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1003D3100(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10018DB10(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ValidatorResult(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10018DB10(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ValidatorResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3D && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 61);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 16) & 0x3C | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0x3F;
  if (v3 >= 0x3C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ValidatorResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 61;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1004101D0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_1004101EC(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 3 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for ValidatorResult()
{
  return &type metadata for ValidatorResult;
}

char *sub_1004102B0(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC8Podcasts36MTNotificationSettingsViewController_contentViewController] = 0;
  char v6 = &v3[OBJC_IVAR____TtC8Podcasts36MTNotificationSettingsViewController_newEpisodeNotifcationGroupInitialHighlightedPodcastUuid];
  uint64_t v7 = (objc_class *)type metadata accessor for MTNotificationSettingsSectionedViewController();
  *(void *)char v6 = 0;
  *((void *)v6 + 1) = 0;
  id v8 = objc_allocWithZone(v7);
  uint64_t v9 = v3;
  id v10 = [v8 init];
  *(void *)&v9[OBJC_IVAR____TtC8Podcasts36MTNotificationSettingsViewController_sectionedContentViewController] = v10;

  if (a2)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v23.receiver = v9;
  v23.super_class = (Class)type metadata accessor for MTNotificationSettingsViewController();
  unint64_t v12 = [(char *)[v23 initWithNibName:v11 bundle:a3]];

  *(void *)(*(void *)&v12[OBJC_IVAR____TtC8Podcasts36MTNotificationSettingsViewController_sectionedContentViewController]
            + OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_delegate
            + 8) = &off_10056A3C8;
  swift_unknownObjectWeakAssign();
  int64_t v13 = v12;
  id v14 = [v13 navigationItem];
  id v15 = [self mainBundle];
  v24._object = (void *)0xED0000736E6F6974;
  v16._object = (void *)0x80000001004E3B20;
  v16._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0x6163696669746F4ELL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v24);

  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setTitle:v18];

  id v19 = [v13 navigationItem];
  [v19 setLargeTitleDisplayMode:2];

  id v20 = [v13 navigationItem];
  id v21 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v13 action:"dismissButtonTappedFrom:"];
  [v20 setRightBarButtonItem:v21];

  return v13;
}

Swift::Void __swiftcall MTNotificationSettingsViewController.viewDidLoad()()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MTNotificationSettingsViewController();
  [super viewDidLoad];
  unsigned int v1 = *(void **)&v0[OBJC_IVAR____TtC8Podcasts36MTNotificationSettingsViewController_sectionedContentViewController];
  id v2 = v1;
  sub_1004109C8(v1);
}

uint64_t type metadata accessor for MTNotificationSettingsViewController()
{
  return self;
}

Swift::Void __swiftcall MTNotificationSettingsViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MTNotificationSettingsViewController();
  [super viewWillAppear:a1];
  sub_1001EE860();
}

Swift::Void __swiftcall MTNotificationSettingsViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MTNotificationSettingsViewController();
  [super viewDidAppear:a1];
  if (qword_1005F5AA8 != -1) {
    swift_once();
  }
  swift_unknownObjectWeakAssign();
}

Swift::Void __swiftcall MTNotificationSettingsViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MTNotificationSettingsViewController();
  [super viewDidDisappear:a1];
  if (qword_1005F5AA8 != -1) {
    swift_once();
  }
  swift_unknownObjectWeakAssign();
}

void sub_1004109C8(void *a1)
{
  id v2 = v1;
  objc_super v3 = a1;
  uint64_t v4 = OBJC_IVAR____TtC8Podcasts36MTNotificationSettingsViewController_contentViewController;
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC8Podcasts36MTNotificationSettingsViewController_contentViewController];
  *(void *)&v2[OBJC_IVAR____TtC8Podcasts36MTNotificationSettingsViewController_contentViewController] = a1;
  id v27 = a1;
  if (!v5)
  {
    if (!v3)
    {
      id v6 = 0;
      goto LABEL_15;
    }
LABEL_8:
    id v6 = v3;
    [v6 willMoveToParentViewController:v2];
    id v9 = [v6 view];
    if (v9)
    {
      id v10 = v9;
      id v11 = [v2 view];
      if (v11)
      {
        unint64_t v12 = v11;
        [v11 bounds];
        double v14 = v13;
        double v16 = v15;
        double v18 = v17;
        double v20 = v19;

        [v10 setFrame:v14, v16, v18, v20];
        id v21 = [v6 view];
        if (v21)
        {
          uint64_t v22 = v21;
          [v21 setAutoresizingMask:18];

          [v2 addChildViewController:v6];
          id v23 = [v2 view];
          if (v23)
          {
            Swift::String v24 = v23;
            id v25 = [v6 view];
            if (v25)
            {
              int v26 = v25;
              [v24 addSubview:v25];

              [v6 didMoveToParentViewController:v2];
              [v2 addChildViewController:v6];

              id v27 = v6;
              goto LABEL_15;
            }
LABEL_22:
            __break(1u);
            return;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  if (!v3
    || (sub_100410D98(),
        id v6 = v5,
        id v7 = v27,
        char v8 = static NSObject.== infix(_:_:)(),
        v6,
        v7,
        (v8 & 1) == 0))
  {
    id v6 = v5;
    [v6 willMoveToParentViewController:0];
    [v6 removeFromParentViewController];
    [v6 didMoveToParentViewController:0];

    objc_super v3 = *(void **)&v2[v4];
    if (!v3) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  id v27 = v7;
LABEL_15:
}

id MTNotificationSettingsViewController.dismissButtonTapped(from:)()
{
  return [v0 dismissViewControllerAnimated:1 completion:0];
}

id MTNotificationSettingsViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTNotificationSettingsViewController();
  return [super dealloc];
}

unint64_t sub_100410D98()
{
  unint64_t result = qword_1005F7EB0;
  if (!qword_1005F7EB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005F7EB0);
  }
  return result;
}

char *sub_100410DD8(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      objc_super v3 = (char *)_swiftEmptyArrayStorage;
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v6 = v4 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          swift_retain();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        swift_retain();
        dispatch thunk of StationShow.modernLockup.getter();
        uint64_t v8 = LegacyLockup.title.getter();
        uint64_t v10 = v9;
        swift_release_n();
        swift_release();
        if (v10)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            objc_super v3 = sub_10004CEAC(0, *((void *)v3 + 2) + 1, 1, v3);
          }
          unint64_t v12 = *((void *)v3 + 2);
          unint64_t v11 = *((void *)v3 + 3);
          if (v12 >= v11 >> 1) {
            objc_super v3 = sub_10004CEAC((char *)(v11 > 1), v12 + 1, 1, v3);
          }
          *((void *)v3 + 2) = v12 + 1;
          uint64_t v5 = &v3[16 * v12];
          *((void *)v5 + 4) = v8;
          *((void *)v5 + 5) = v10;
        }
        ++v4;
        if (v7 == v2) {
          goto LABEL_19;
        }
      }
    }
  }
  objc_super v3 = (char *)_swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100410F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v101 = a3;
  uint64_t v102 = a6;
  uint64_t v105 = a5;
  uint64_t v100 = a4;
  uint64_t v85 = a2;
  uint64_t v99 = a1;
  uint64_t v6 = sub_100054B78(&qword_100609CF0);
  uint64_t v107 = *(void *)(v6 - 8);
  uint64_t v108 = v6;
  __chkstk_darwin();
  uint64_t v106 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100054B78(&qword_100609CF8);
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin();
  uint64_t v86 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100054B78(&qword_100609D00);
  uint64_t v91 = *(void *)(v104 - 8);
  __chkstk_darwin();
  uint64_t v88 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100054B78(&qword_100609D08);
  uint64_t v92 = *(void *)(v103 - 8);
  __chkstk_darwin();
  uint64_t v90 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100054B78(&qword_100609D10);
  uint64_t v96 = *(void *)(v93 - 8);
  __chkstk_darwin();
  unint64_t v94 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100054B78(&qword_100609D18);
  uint64_t v98 = *(void *)(v97 - 8);
  __chkstk_darwin();
  uint64_t v95 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100054B78(&qword_100609D20);
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin();
  NSString v79 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100054B78(&qword_100609D28);
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin();
  double v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78(&qword_100609D30);
  uint64_t v83 = *(void *)(v16 - 8);
  __chkstk_darwin();
  double v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100054B78(&qword_100609D38);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100054B78(&qword_100609D40);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin();
  int v26 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((StationDetail.grouped.getter() & 1) == 0)
  {
    uint64_t v49 = v103;
    uint64_t v48 = v104;
    uint64_t v50 = v105;
    uint64_t v51 = dispatch thunk of StationDetail.episodes.getter();
    if (v51)
    {
      unint64_t v52 = v51;
      uint64_t v53 = v102;
      *(void *)&long long v110 = v51;
      sub_100054B78(&qword_100609D58);
      sub_100044200(&qword_100609D60, &qword_100609D58);
      if (Collection.isNotEmpty.getter())
      {
        uint64_t v54 = v101;
        uint64_t v55 = sub_1004126BC(*(void *)(v101 + 48), v52, (void (*)(void))&type metadata accessor for Episode);
        uint64_t v57 = v56;
        uint64_t v107 = v58;
        uint64_t v108 = v56;
        uint64_t v59 = v58;
        uint64_t v61 = v60;
        uint64_t v106 = v60;
        swift_bridgeObjectRelease();
        *(void *)&long long v110 = v55;
        *((void *)&v110 + 1) = v57;
        uint64_t v111 = v59;
        uint64_t v112 = v61;
        sub_100054B78(&qword_100609D68);
        sub_100044200((unint64_t *)&unk_100609D70, &qword_100609D68);
        uint64_t v62 = v86;
        Sequence.publisher.getter();
        sub_100056D54(v99, (uint64_t)&v110);
        sub_100056D54(v100, (uint64_t)&v109);
        uint64_t v63 = swift_allocObject();
        sub_100042FC4(&v110, v63 + 16);
        *(void *)(v63 + 56) = v85;
        long long v64 = *(_OWORD *)(v54 + 16);
        *(_OWORD *)(v63 + 64) = *(_OWORD *)v54;
        *(_OWORD *)(v63 + 80) = v64;
        *(_OWORD *)(v63 + 96) = *(_OWORD *)(v54 + 32);
        *(void *)(v63 + 112) = *(void *)(v54 + 48);
        sub_100042FC4(&v109, v63 + 120);
        *(void *)(v63 + 160) = v50;
        *(void *)(v63 + 168) = v53;
        swift_retain();
        swift_retain();
        static Subscribers.Demand.unlimited.getter();
        sub_100054B78(&qword_1005F8CA0);
        sub_100044200(&qword_100609D80, &qword_100609CF8);
        sub_100044200((unint64_t *)&unk_1005F8CB0, &qword_1005F8CA0);
        uint64_t v65 = v88;
        uint64_t v66 = v89;
        Publisher<>.flatMap<A>(maxPublishers:_:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v62, v66);
        sub_1004128C4();
        sub_100044200(&qword_100609D88, &qword_100609D00);
        uint64_t v67 = v90;
        Publisher.compactMap<A>(_:)();
        (*(void (**)(char *, uint64_t))(v91 + 8))(v65, v48);
        sub_100044200(&qword_100609D90, &qword_100609D08);
        unint64_t v68 = v94;
        Publisher.collect()();
        (*(void (**)(char *, uint64_t))(v92 + 8))(v67, v49);
        char v69 = (void *)swift_allocObject();
        uint64_t v70 = v108;
        v69[2] = v55;
        v69[3] = v70;
        double v71 = v106;
        v69[4] = v107;
        v69[5] = v71;
        swift_unknownObjectRetain();
        sub_100054B78(&qword_100609D48);
        sub_100044200(&qword_100609D98, &qword_100609D10);
        double v72 = v95;
        uint64_t v73 = v93;
        Publisher.map<A>(_:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v96 + 8))(v68, v73);
        sub_100044200(&qword_100609DA0, &qword_100609D18);
        uint64_t v74 = v97;
        uint64_t v47 = Publisher.eraseToAnyPublisher()();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v98 + 8))(v72, v74);
        return v47;
      }
      goto LABEL_8;
    }
LABEL_9:
    *(void *)&long long v110 = 0;
    sub_100054B78(&qword_100609D48);
    uint64_t v75 = v106;
    Just.init(_:)();
    sub_100044200(&qword_100609D50, &qword_100609CF0);
    uint64_t v76 = v108;
    uint64_t v47 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v75, v76);
    return v47;
  }
  uint64_t v95 = v15;
  uint64_t v97 = (uint64_t)v18;
  uint64_t v98 = v16;
  uint64_t v103 = v20;
  unint64_t v94 = (char *)v19;
  uint64_t v104 = v24;
  uint64_t v96 = v23;
  uint64_t v27 = dispatch thunk of StationDetail.visibleShows.getter();
  if (!v27) {
    goto LABEL_9;
  }
  uint64_t v28 = v27;
  *(void *)&long long v110 = v27;
  sub_100054B78(&qword_100609DA8);
  sub_100044200(&qword_100609DB0, &qword_100609DA8);
  if ((Collection.isNotEmpty.getter() & 1) == 0)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  *(void *)&long long v110 = v28;
  sub_100044200(&qword_100609DB8, &qword_100609DA8);
  unint64_t v29 = v79;
  Sequence.publisher.getter();
  uint64_t v30 = StationDetail.title.getter();
  uint64_t v32 = v31;
  uint64_t v33 = StationDetail.uuid.getter();
  uint64_t v35 = v34;
  sub_100056D54(v99, (uint64_t)&v110);
  sub_100056D54(v100, (uint64_t)&v109);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v33;
  *(void *)(v36 + 24) = v35;
  *(void *)(v36 + 32) = v30;
  *(void *)(v36 + 40) = v32;
  sub_100042FC4(&v110, v36 + 48);
  uint64_t v37 = v101;
  long long v38 = *(_OWORD *)(v101 + 16);
  *(_OWORD *)(v36 + 88) = *(_OWORD *)v101;
  *(_OWORD *)(v36 + 104) = v38;
  *(_OWORD *)(v36 + 120) = *(_OWORD *)(v37 + 32);
  *(void *)(v36 + 136) = *(void *)(v37 + 48);
  sub_100042FC4(&v109, v36 + 144);
  uint64_t v39 = v102;
  *(void *)(v36 + 184) = v105;
  *(void *)(v36 + 192) = v39;
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_100054B78(&qword_1005F8CA0);
  sub_100044200(&qword_100609DC0, &qword_100609D20);
  sub_100044200((unint64_t *)&unk_1005F8CB0, &qword_1005F8CA0);
  uint64_t v40 = v95;
  uint64_t v41 = v81;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v29, v41);
  sub_1004128C4();
  sub_100044200(&qword_100609DC8, &qword_100609D28);
  uint64_t v42 = v97;
  uint64_t v43 = v84;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v40, v43);
  sub_100044200(&qword_100609DD0, &qword_100609D30);
  uint64_t v44 = v98;
  Publisher.collect()();
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v42, v44);
  *(void *)(swift_allocObject() + 16) = v28;
  sub_100054B78(&qword_100609D48);
  sub_100044200(&qword_100609DD8, &qword_100609D38);
  int v45 = v94;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, char *))(v103 + 8))(v22, v45);
  sub_100044200((unint64_t *)&unk_100609DE0, &qword_100609D40);
  uint64_t v46 = v96;
  uint64_t v47 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v26, v46);
  return v47;
}

uint64_t sub_100411EF8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10)
{
  swift_bridgeObjectRetain();
  uint64_t v14 = StationShow.uuid.getter();
  uint64_t v16 = v15;
  StationShow.podcast.getter();
  uint64_t v17 = Podcast.uuid.getter();
  uint64_t v19 = v18;
  swift_release();
  swift_bridgeObjectRetain();
  dispatch thunk of StationShow.modernLockup.getter();
  v26[0] = a1;
  v26[1] = a2;
  void v26[2] = v14;
  v26[3] = v16;
  v26[4] = a3;
  v26[5] = a4;
  v26[6] = v17;
  v26[7] = v19;
  char v27 = 4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1003820B8(a5, (uint64_t)v26, 0, a6, a7, a9, a10);
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  *a8 = v20;
  return result;
}

uint64_t sub_100412048@<X0>(unint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  objc_super v3 = sub_100410DD8(a1);
  sub_1001B8638((uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_100054B78((uint64_t *)&unk_1005F7E10);
  sub_100054B78(&qword_100609DF0);
  sub_100044200(&qword_100609DF8, (uint64_t *)&unk_1005F7E10);
  sub_100044200(&qword_100609E00, &qword_100609DF0);
  sub_10022B5A4();
  uint64_t v4 = Sequence.sorted<A, B>(by:using:)();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_100412170(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 text];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_1004121D8@<X0>(unint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v22 = a7;
  sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for EpisodeListSettings();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = type metadata accessor for SectionContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 1, 1, v18);
  static MetricsDataConfiguration.default.getter();
  dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
  sub_1002DFF70((uint64_t)v23, (uint64_t)v29);
  sub_100053884((uint64_t)v29);
  uint64_t v28 = v24;
  sub_1000537F4((uint64_t)&v28);
  uint64_t v27 = v25;
  sub_1000537F4((uint64_t)&v27);
  sub_1000536BC(v26);
  sub_100054B1C((uint64_t)v14, (uint64_t *)&unk_1005F7770);
  sub_100054B1C((uint64_t)v16, (uint64_t *)&unk_1005FEA40);
  uint64_t v19 = sub_100380CA0(a1, a2, 1, 0, 10, a3, a4, a5, a6);
  uint64_t result = swift_release();
  *uint64_t v22 = v19;
  return result;
}

uint64_t sub_100412408@<X0>(uint64_t a1@<X3>, unint64_t a2@<X4>, uint64_t *a3@<X8>)
{
  int64_t v15 = a2 >> 1;
  uint64_t v4 = (a2 >> 1) - a1;
  if (__OFSUB__(a2 >> 1, a1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!v4)
  {
LABEL_11:
    swift_getKeyPath();
    sub_100054B78((uint64_t *)&unk_1005F7E10);
    sub_100054B78(&qword_100609DF0);
    sub_100044200(&qword_100609DF8, (uint64_t *)&unk_1005F7E10);
    sub_100044200(&qword_100609E00, &qword_100609DF0);
    sub_10022B5A4();
    uint64_t v14 = Sequence.sorted<A, B>(by:using:)();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v14;
    return result;
  }
  uint64_t result = sub_1001BA7D0(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      if (a1 + v6 >= v15 || v6 >= v4) {
        goto LABEL_13;
      }
      swift_retain();
      uint64_t v8 = Episode.title.getter();
      uint64_t v10 = v9;
      uint64_t result = swift_release();
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        uint64_t result = sub_1001BA7D0(v11 > 1, v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      ++v6;
      if (v7 == v4) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_100412608(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

uint64_t sub_1004126A4(uint64_t a1, unint64_t a2)
{
  return sub_1004126BC(a1, a2, (void (*)(void))&type metadata accessor for LibraryEpisodeLockup);
}

uint64_t sub_1004126BC(uint64_t result, unint64_t a2, void (*a3)(void))
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = a3;
    unint64_t v3 = a2;
    uint64_t v4 = result;
    unint64_t v6 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v7 >= v4) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = v7;
  }
  if (v7 < 0) {
    uint64_t v8 = v4;
  }
  if (v4) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v9)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v3 & 0xC000000000000001) != 0 && v9)
  {
    v5(0);
    Swift::Int v12 = 0;
    do
    {
      Swift::Int v13 = v12 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v12);
      Swift::Int v12 = v13;
    }
    while (v9 != v13);
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_10041285C()
{
  sub_10004D2D8(v0 + 16);
  swift_release();
  sub_10004D2D8(v0 + 120);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1004128AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1004121D8(v1 + 16, *(void *)(v1 + 56), (_OWORD *)(v1 + 64), v1 + 120, *(void *)(v1 + 160), *(void *)(v1 + 168), a1);
}

unint64_t sub_1004128C4()
{
  unint64_t result = qword_1005FD240;
  if (!qword_1005FD240)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005FD240);
  }
  return result;
}

uint64_t sub_100412904()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10041293C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100412408(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_100412948()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004D2D8(v0 + 48);
  sub_10004D2D8(v0 + 144);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1004129A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100411EF8(v1[2], v1[3], v1[4], v1[5], (uint64_t)(v1 + 6), (uint64_t)(v1 + 11), (uint64_t)(v1 + 18), a1, v1[23], v1[24]);
}

uint64_t sub_1004129DC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100412A14@<X0>(uint64_t *a1@<X8>)
{
  return sub_100412048(*(void *)(v1 + 16), a1);
}

uint64_t sub_100412A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = type metadata accessor for Logger();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  unint64_t v6 = (void *)swift_task_alloc();
  v4[9] = v6;
  void *v6 = v4;
  v6[1] = sub_100412B10;
  return sub_100412F5C();
}

uint64_t sub_100412B10()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100412C4C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100412C4C()
{
  uint64_t v18 = v0;
  static Logger.modernPlayback.getter();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v14 = v0[7];
    unint64_t v3 = (void *)v0[5];
    uint64_t v15 = v0[6];
    uint64_t v16 = v0[8];
    uint64_t v4 = swift_slowAlloc();
    Swift::Int v13 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    v0[2] = *v3;
    sub_100054B78(&qword_100609EE8);
    uint64_t v5 = String.init<A>(describing:)();
    v0[3] = sub_10004B974(v5, v6, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v13 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%s] Error migrating old player queue: %@", (uint8_t *)v4, 0x16u);
    sub_100054B78((uint64_t *)&unk_1005F9F00);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  }
  else
  {
    uint64_t v9 = v0[7];
    uint64_t v8 = v0[8];
    uint64_t v10 = v0[6];
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100412F5C()
{
  v1[36] = v0;
  uint64_t v2 = type metadata accessor for MediaIdentifier();
  v1[37] = v2;
  v1[38] = *(void *)(v2 - 8);
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for PlaybackController.QueueCommand();
  v1[42] = v3;
  v1[43] = *(void *)(v3 - 8);
  v1[44] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v1[45] = v4;
  v1[46] = *(void *)(v4 - 8);
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  sub_100054B78(&qword_1005FDA68);
  v1[51] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for PlaybackIntent();
  v1[52] = v5;
  v1[53] = *(void *)(v5 - 8);
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  return _swift_task_switch(sub_1004131CC, 0, 0);
}

uint64_t sub_1004131CC()
{
  id v1 = [self _applePodcastsFoundationSharedUserDefaults];
  [v1 setBool:1 forKey:kMTSuccessfullyMigratedLegacyPlaybackQueue];

  id v2 = [self _loadActivityForRestoration];
  v0[58] = v2;
  if (v2)
  {
    id v3 = v2;
    sub_10004D29C(0, &qword_100609F10);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v0[2] = v0;
    v0[7] = v0 + 28;
    v0[3] = sub_100413470;
    uint64_t v5 = swift_continuation_init();
    v0[15] = _NSConcreteStackBlock;
    v0[16] = 0x40000000;
    v0[17] = sub_100415788;
    v0[18] = &unk_10056A478;
    v0[19] = v5;
    [ObjCClassFromMetadata restoreActivity:v3 completion:v0 + 15];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    sub_100416AC4();
    swift_allocError();
    unsigned char *v6 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_100413470()
{
  return _swift_task_switch(sub_100413550, 0, 0);
}

uint64_t sub_100413550()
{
  uint64_t v1 = (void *)v0[28];
  v0[59] = v1;
  if (v1)
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    v0[60] = v2;
    if (v2)
    {
      id v3 = (void *)swift_task_alloc();
      v0[61] = v3;
      *id v3 = v0;
      v3[1] = sub_100413748;
      uint64_t v4 = v0[51];
      return sub_100340020(v4);
    }
  }
  unint64_t v6 = (void *)v0[58];
  sub_100416AC4();
  swift_allocError();
  unsigned char *v7 = 1;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100413748()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100413844, 0, 0);
}

uint64_t sub_100413844()
{
  uint64_t v73 = v0;
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[51];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  uint64_t v5 = (void *)v0[59];
  if (v4 == 1)
  {
    unint64_t v6 = (void *)v0[58];
    sub_100054B1C(v3, &qword_1005FDA68);
    sub_100416AC4();
    swift_allocError();
    unsigned char *v7 = 2;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[57], v3, v1);
    static Logger.modernPlayback.getter();
    swift_retain_n();
    id v10 = v5;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      id v59 = (id)v0[60];
      uint64_t v62 = (void *)v0[59];
      uint64_t v65 = v0[46];
      uint64_t v67 = v0[45];
      uint64_t v69 = v0[50];
      Swift::Int v13 = (void *)v0[36];
      uint64_t v14 = swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      v0[33] = *v13;
      sub_100054B78(&qword_100609EE8);
      uint64_t v15 = String.init<A>(describing:)();
      v0[34] = sub_10004B974(v15, v16, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2048;
      id v17 = [v59 count];

      v0[35] = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%s] Loaded manifest with %ld items", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v18(v69, v67);
    }
    else
    {
      uint64_t v19 = (void *)v0[59];
      uint64_t v20 = v0[50];
      uint64_t v21 = v0[45];
      uint64_t v22 = v0[46];

      swift_release_n();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v18(v20, v21);
    }
    uint64_t v70 = v18;
    v0[62] = v18;
    uint64_t v23 = v0[56];
    uint64_t v24 = v0[53];
    uint64_t v26 = v0[43];
    uint64_t v25 = v0[44];
    id v60 = (id)v0[52];
    uint64_t v63 = v0[42];
    uint64_t v68 = v0[55];
    sub_100054B78(&qword_1005FEA50);
    uint64_t v27 = type metadata accessor for PlaybackIntent.Option();
    uint64_t v28 = *(void *)(v27 - 8);
    unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_10046D010;
    (*(void (**)(unint64_t, void, uint64_t))(v28 + 104))(v30 + v29, enum case for PlaybackIntent.Option.ignoreContinuousPlaybackSetting(_:), v27);
    sub_100172B6C(v30);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    PlaybackIntent.withOptions(_:)();
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void (**)(uint64_t, uint64_t, id))(v24 + 16);
    v31(v25, v23, v60);
    uint64_t v32 = enum case for PlaybackController.QueueCommand.replace(_:);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 104);
    v0[63] = v33;
    v0[64] = (v26 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v33(v25, v32, v63);
    static Logger.modernPlayback.getter();
    v31(v68, v23, v60);
    swift_retain_n();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v37 = v0[55];
    if (v36)
    {
      uint64_t v57 = v0[54];
      uint64_t v58 = (void *)v0[52];
      uint64_t v61 = (void *)v0[53];
      uint64_t v64 = v0[45];
      uint64_t v66 = v0[49];
      long long v38 = (void *)v0[36];
      uint64_t v39 = swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315394;
      v0[30] = *v38;
      sub_100054B78(&qword_100609EE8);
      uint64_t v40 = String.init<A>(describing:)();
      v0[31] = sub_10004B974(v40, v41, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      v31(v57, v37, v58);
      uint64_t v42 = String.init<A>(describing:)();
      v0[32] = sub_10004B974(v42, v43, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v44 = (void (*)(uint64_t, void *))v61[1];
      v44(v37, v58);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%s] Created intent from legacy queue with %s Sending to engine when available.", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v45 = v64;
      uint64_t v46 = v66;
    }
    else
    {
      uint64_t v47 = (void *)v0[52];
      uint64_t v48 = v0[53];
      uint64_t v49 = v0[49];
      uint64_t v50 = v0[45];
      swift_release_n();
      uint64_t v44 = *(void (**)(uint64_t, void *))(v48 + 8);
      v44(v37, v47);

      uint64_t v46 = v49;
      uint64_t v45 = v50;
    }
    v70(v46, v45);
    v0[65] = v44;
    uint64_t v52 = v0[43];
    uint64_t v51 = v0[44];
    uint64_t v53 = v0[42];
    v0[66] = *(void *)(v0[36] + 16);
    v0[23] = v53;
    v0[24] = &protocol witness table for PlaybackController.QueueCommand;
    uint64_t v54 = sub_10004A244(v0 + 20);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v52 + 16))(v54, v51, v53);
    double v71 = (char *)&async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:)
        + async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:);
    uint64_t v55 = (void *)swift_task_alloc();
    v0[67] = v55;
    *uint64_t v55 = v0;
    v55[1] = sub_1004140F8;
    v56.n128_u64[0] = 5.0;
    return ((uint64_t (*)(void *, void, __n128))v71)(v0 + 20, 0, v56);
  }
}

uint64_t sub_1004140F8(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 544) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100414EB8;
  }
  else
  {

    sub_10004D2D8(v4 + 160);
    uint64_t v5 = sub_100414228;
  }
  return _swift_task_switch(v5, 0, 0);
}

char *sub_100414228()
{
  uint64_t v55 = v0;
  unint64_t result = (char *)sub_100415E6C();
  *(void *)(v0 + 552) = result;
  unint64_t v2 = *((void *)result + 2);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 304);
    int v4 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 600) = v4;
    *(_DWORD *)(v0 + 604) = enum case for PlaybackController.QueueCommand.Location.queueHead(_:);
    *(_DWORD *)(v0 + 608) = enum case for PlaybackController.QueueCommand.addItemToQueue(_:);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    *(void *)(v0 + 560) = v2;
    if (v2 > *((void *)result + 2))
    {
      __break(1u);
    }
    else
    {
      unint64_t v6 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 16);
      uint64_t v8 = *(void *)(v0 + 320);
      uint64_t v7 = *(char **)(v0 + 328);
      uint64_t v9 = *(void *)(v0 + 296);
      v6((uint64_t)v7, &result[((v4 + 32) & ~(unint64_t)v4)+ *(void *)(v3 + 72) * (v2 - 1)], v9);
      static Logger.modernPlayback.getter();
      uint64_t v51 = (void (*)(uint64_t, uint64_t, uint64_t))v6;
      v6(v8, v7, v9);
      swift_retain_n();
      id v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v49 = *(void *)(v0 + 384);
        uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
        uint64_t v12 = *(void *)(v0 + 312);
        uint64_t v47 = *(void *)(v0 + 320);
        uint64_t v13 = *(void *)(v0 + 296);
        uint64_t v14 = *(void *)(v0 + 304);
        uint64_t v15 = *(void **)(v0 + 288);
        uint64_t v48 = *(void *)(v0 + 360);
        uint64_t v16 = swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 136315394;
        *(void *)(v0 + 232) = *v15;
        sub_100054B78(&qword_100609EE8);
        uint64_t v17 = String.init<A>(describing:)();
        *(void *)(v16 + 4) = sub_10004B974(v17, v18, &v54);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2080;
        v51(v12, v47, v13);
        uint64_t v19 = String.init<A>(describing:)();
        *(void *)(v16 + 14) = sub_10004B974(v19, v20, &v54);
        swift_bridgeObjectRelease();
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
        v21(v47, v13);
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "[%s] Appending %s to hard queue", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v50(v49, v48);
        uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
      }
      else
      {
        uint64_t v22 = *(void *)(v0 + 384);
        uint64_t v23 = *(void *)(v0 + 360);
        uint64_t v24 = *(void *)(v0 + 320);
        uint64_t v25 = *(void *)(v0 + 296);
        uint64_t v26 = *(void *)(v0 + 304);
        swift_release_n();
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
        v21(v24, v25);

        v5(v22, v23);
      }
      *(void *)(v0 + 576) = v5;
      *(void *)(v0 + 568) = v21;
      uint64_t v27 = *(unsigned int *)(v0 + 608);
      uint64_t v28 = *(unsigned int *)(v0 + 604);
      unint64_t v29 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v0 + 504);
      uint64_t v31 = *(void *)(v0 + 328);
      uint64_t v30 = *(void *)(v0 + 336);
      uint64_t v32 = *(void *)(v0 + 296);
      *(void *)(v0 + 104) = v30;
      *(void *)(v0 + 112) = &protocol witness table for PlaybackController.QueueCommand;
      uint64_t v33 = sub_10004A244((uint64_t *)(v0 + 80));
      uint64_t v34 = (char *)v33 + *(int *)(sub_100054B78(&qword_100609F18) + 48);
      v51((uint64_t)v33, v31, v32);
      uint64_t v35 = type metadata accessor for PlaybackController.QueueCommand.Location();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v34, v28, v35);
      v29(v33, v27, v30);
      uint64_t v52 = (char *)&async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:)
          + async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:);
      BOOL v36 = (void *)swift_task_alloc();
      *(void *)(v0 + 584) = v36;
      *BOOL v36 = v0;
      v36[1] = sub_1004147DC;
      v37.n128_u64[0] = 5.0;
      return (char *)((uint64_t (*)(uint64_t, void, __n128))v52)(v0 + 80, 0, v37);
    }
  }
  else
  {
    long long v38 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v40 = *(void **)(v0 + 464);
    uint64_t v39 = *(void **)(v0 + 472);
    uint64_t v41 = *(void *)(v0 + 448);
    uint64_t v53 = *(void *)(v0 + 456);
    uint64_t v42 = *(void *)(v0 + 416);
    uint64_t v43 = *(void *)(v0 + 344);
    uint64_t v44 = *(void *)(v0 + 352);
    uint64_t v45 = *(void *)(v0 + 336);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v45);
    v38(v41, v42);
    v38(v53, v42);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
    return (char *)v46();
  }
  return result;
}

uint64_t sub_1004147DC(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 592) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100415310;
  }
  else
  {

    sub_10004D2D8(v4 + 80);
    uint64_t v5 = sub_100414914;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100414914()
{
  uint64_t v56 = v0;
  uint64_t v1 = *(void *)(v0 + 560);
  uint64_t result = (*(uint64_t (**)(void, void))(v0 + 568))(*(void *)(v0 + 328), *(void *)(v0 + 296));
  if (v1 == 1)
  {
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v41 = *(void **)(v0 + 464);
    uint64_t v40 = *(void **)(v0 + 472);
    uint64_t v42 = *(void *)(v0 + 448);
    uint64_t v54 = *(void *)(v0 + 456);
    uint64_t v43 = *(void *)(v0 + 416);
    uint64_t v44 = *(void *)(v0 + 344);
    uint64_t v45 = *(void *)(v0 + 352);
    uint64_t v46 = *(void *)(v0 + 336);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
    v39(v42, v43);
    v39(v54, v43);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v47 = *(uint64_t (**)(void))(v0 + 8);
    return v47();
  }
  else
  {
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 560);
    *(void *)(v0 + 560) = v4 - 1;
    uint64_t v5 = *(void *)(v0 + 552);
    if (v4 - 1 > *(void *)(v5 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = *(void *)(v0 + 320);
      unint64_t v6 = *(void *)(v0 + 328);
      uint64_t v8 = *(void *)(v0 + 296);
      uint64_t v9 = *(void *)(v0 + 304);
      id v10 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
      v10(v6, v5+ ((*(unsigned __int8 *)(v0 + 600) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 600))+ *(void *)(v9 + 72) * (v4 - 2), v8);
      static Logger.modernPlayback.getter();
      uint64_t v52 = (void (*)(uint64_t, uint64_t, uint64_t))v10;
      v10(v7, v6, v8);
      swift_retain_n();
      os_log_type_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v50 = *(void *)(v0 + 384);
        uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
        uint64_t v13 = *(void *)(v0 + 312);
        uint64_t v48 = *(void *)(v0 + 320);
        uint64_t v14 = *(void *)(v0 + 296);
        uint64_t v15 = *(void *)(v0 + 304);
        uint64_t v16 = *(void **)(v0 + 288);
        uint64_t v49 = *(void *)(v0 + 360);
        uint64_t v17 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315394;
        *(void *)(v0 + 232) = *v16;
        sub_100054B78(&qword_100609EE8);
        uint64_t v18 = String.init<A>(describing:)();
        *(void *)(v17 + 4) = sub_10004B974(v18, v19, &v55);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        v52(v13, v48, v14);
        uint64_t v20 = String.init<A>(describing:)();
        *(void *)(v17 + 14) = sub_10004B974(v20, v21, &v55);
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        v22(v48, v14);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%s] Appending %s to hard queue", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v51(v50, v49);
        uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
      }
      else
      {
        uint64_t v23 = *(void *)(v0 + 384);
        uint64_t v24 = *(void *)(v0 + 360);
        uint64_t v25 = *(void *)(v0 + 320);
        uint64_t v26 = *(void *)(v0 + 296);
        uint64_t v27 = *(void *)(v0 + 304);
        swift_release_n();
        uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v22(v25, v26);

        v3(v23, v24);
      }
      *(void *)(v0 + 576) = v3;
      *(void *)(v0 + 568) = v22;
      uint64_t v28 = *(unsigned int *)(v0 + 608);
      uint64_t v29 = *(unsigned int *)(v0 + 604);
      uint64_t v30 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v0 + 504);
      uint64_t v32 = *(void *)(v0 + 328);
      uint64_t v31 = *(void *)(v0 + 336);
      uint64_t v33 = *(void *)(v0 + 296);
      *(void *)(v0 + 104) = v31;
      *(void *)(v0 + 112) = &protocol witness table for PlaybackController.QueueCommand;
      uint64_t v34 = sub_10004A244((uint64_t *)(v0 + 80));
      uint64_t v35 = (char *)v34 + *(int *)(sub_100054B78(&qword_100609F18) + 48);
      v52((uint64_t)v34, v32, v33);
      uint64_t v36 = type metadata accessor for PlaybackController.QueueCommand.Location();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v35, v29, v36);
      v30(v34, v28, v31);
      uint64_t v53 = (char *)&async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:)
          + async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:);
      __n128 v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 584) = v37;
      *__n128 v37 = v0;
      v37[1] = sub_1004147DC;
      v38.n128_u64[0] = 5.0;
      return ((uint64_t (*)(uint64_t, void, __n128))v53)(v0 + 80, 0, v38);
    }
  }
  return result;
}

uint64_t sub_100414EB8()
{
  uint64_t v28 = v0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[65];
  uint64_t v2 = v0[56];
  uint64_t v3 = v0[52];
  (*(void (**)(void, void))(v0[43] + 8))(v0[44], v0[42]);
  v1(v2, v3);
  sub_10004D2D8((uint64_t)(v0 + 20));
  static Logger.modernPlayback.getter();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v18 = (void *)v0[58];
    uint64_t v25 = v0[57];
    uint64_t v26 = (void (*)(uint64_t, uint64_t))v0[65];
    unint64_t v21 = (void *)v0[59];
    uint64_t v22 = v0[52];
    uint64_t v23 = (void (*)(uint64_t, uint64_t))v0[62];
    uint64_t v19 = v0[45];
    uint64_t v20 = v0[47];
    unint64_t v6 = (void *)v0[36];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    v0[25] = *v6;
    sub_100054B78(&qword_100609EE8);
    uint64_t v9 = String.init<A>(describing:)();
    v0[26] = sub_10004B974(v9, v10, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[27] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%s] Failed to set playback intent from legacy queue %@", (uint8_t *)v7, 0x16u);
    sub_100054B78((uint64_t *)&unk_1005F9F00);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v23(v20, v19);
  }
  else
  {
    os_log_type_t v12 = (void *)v0[58];
    uint64_t v13 = (void *)v0[59];
    uint64_t v25 = v0[57];
    uint64_t v26 = (void (*)(uint64_t, uint64_t))v0[65];
    uint64_t v22 = v0[52];
    uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[62];
    uint64_t v14 = v0[47];
    uint64_t v15 = v0[45];

    swift_errorRelease();
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();

    v24(v14, v15);
  }
  v26(v25, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_100415310()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v6 = *(void *)(v0 + 336);
  (*(void (**)(void, void))(v0 + 568))(*(void *)(v0 + 328), *(void *)(v0 + 296));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_10004D2D8(v0 + 80);
  static Logger.modernPlayback.getter();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v21 = *(void **)(v0 + 464);
    uint64_t v28 = *(void *)(v0 + 456);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v24 = *(void **)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 416);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    uint64_t v22 = *(void *)(v0 + 360);
    uint64_t v23 = *(void *)(v0 + 376);
    uint64_t v9 = *(void **)(v0 + 288);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    *(void *)(v0 + 200) = *v9;
    sub_100054B78(&qword_100609EE8);
    uint64_t v12 = String.init<A>(describing:)();
    *(void *)(v0 + 208) = sub_10004B974(v12, v13, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    swift_errorRetain();
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 216) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v14;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%s] Failed to set playback intent from legacy queue %@", (uint8_t *)v10, 0x16u);
    sub_100054B78((uint64_t *)&unk_1005F9F00);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v26(v23, v22);
  }
  else
  {
    uint64_t v15 = *(void **)(v0 + 464);
    uint64_t v16 = *(void **)(v0 + 472);
    uint64_t v28 = *(void *)(v0 + 456);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v25 = *(void *)(v0 + 416);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    uint64_t v17 = *(void *)(v0 + 376);
    uint64_t v18 = *(void *)(v0 + 360);

    swift_errorRelease();
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();

    v27(v17, v18);
  }
  v29(v28, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_100415788(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_100416B18((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

void *sub_1004157E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_100609F00);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URLTrackIdentifier();
  uint64_t v49 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v41 - v10;
  id v11 = [self unarchivedIdentifiers];
  if (!v11) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v11;
  uint64_t v44 = v3;
  uint64_t v45 = v2;
  uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v43 = v1;
    uint64_t v46 = v5;
    uint64_t v50 = v49 + 56;
    uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(v49 + 32);
    swift_bridgeObjectRetain();
    uint64_t v42 = v13;
    uint64_t v17 = v13 + 40;
    uint64_t v18 = _swiftEmptyArrayStorage;
    uint64_t v47 = v8;
    do
    {
      swift_bridgeObjectRetain_n();
      URLTrackIdentifier.init(string:)();
      swift_bridgeObjectRelease();
      if ((*v15)(v7, 1, v8) == 1)
      {
        sub_100054B1C((uint64_t)v7, &qword_100609F00);
      }
      else
      {
        uint64_t v19 = *v16;
        uint64_t v20 = v48;
        (*v16)(v48, v7, v8);
        v19(v51, v20, v8);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v21 = (unint64_t)v18;
        }
        else {
          unint64_t v21 = sub_1002F01BC(0, v18[2] + 1, 1, (unint64_t)v18);
        }
        unint64_t v23 = *(void *)(v21 + 16);
        unint64_t v22 = *(void *)(v21 + 24);
        if (v23 >= v22 >> 1) {
          unint64_t v21 = sub_1002F01BC(v22 > 1, v23 + 1, 1, v21);
        }
        *(void *)(v21 + 16) = v23 + 1;
        uint64_t v18 = (void *)v21;
        unint64_t v24 = v21
            + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))
            + *(void *)(v49 + 72) * v23;
        uint64_t v8 = v47;
        v19((char *)v24, v51, v47);
      }
      v17 += 16;
      --v14;
    }
    while (v14);
    uint64_t v25 = v42;
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v25 + 16);
    uint64_t v5 = v46;
    uint64_t v27 = v18;
    uint64_t v1 = v43;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v27 = _swiftEmptyArrayStorage;
  }
  if (v26 == v27[2])
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    static Logger.modernPlayback.getter();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v51 = (char *)v32;
      *(_DWORD *)uint64_t v31 = 136315650;
      uint64_t v52 = *v1;
      v53[0] = v32;
      sub_100054B78(&qword_100609EE8);
      uint64_t v46 = v5;
      uint64_t v33 = String.init<A>(describing:)();
      uint64_t v52 = sub_10004B974(v33, v34, v53);
      uint64_t v47 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v35 = Array.description.getter();
      unint64_t v37 = v36;
      swift_bridgeObjectRelease();
      uint64_t v52 = sub_10004B974(v35, v37, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v38 = Array.description.getter();
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      uint64_t v52 = sub_10004B974(v38, v40, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%s] Not all track identifiers were converted. \nBefore: %s. \nAfter: %s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v45);
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v45);
    }
  }
  return v27;
}

void *sub_100415E6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v98 = *(void *)(v2 - 8);
  uint64_t v99 = v2;
  __chkstk_darwin();
  uint64_t v4 = (char *)v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for MediaIdentifier();
  uint64_t v82 = *(void *)(v94 - 8);
  __chkstk_darwin();
  uint64_t v75 = (char **)((char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v7 = (char *)v72 - v6;
  __chkstk_darwin();
  uint64_t v76 = (char **)((char *)v72 - v8);
  __chkstk_darwin();
  uint64_t v83 = (void *)((char *)v72 - v9);
  uint64_t v10 = type metadata accessor for URLTrackIdentifier.ArgumentKey();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for URLTrackIdentifier();
  uint64_t v14 = *(void *)(v95 - 8);
  __chkstk_darwin();
  uint64_t v84 = (char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1004157E4();
  uint64_t v101 = v16;
  sub_100054B78(&qword_100609ED8);
  sub_1001B4074(&qword_100609EE0, &qword_100609ED8);
  if (Collection.isNotEmpty.getter())
  {
    uint64_t v73 = v7;
    uint64_t v17 = v16[2];
    if (v17)
    {
      uint64_t v92 = v13;
      uint64_t v93 = v10;
      uint64_t v81 = 0;
      uint64_t v18 = v14 + 16;
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v72[1] = v16;
      uint64_t v20 = (char *)v16 + v19;
      uint64_t v89 = *(void *)(v18 + 56);
      unsigned int v88 = enum case for URLTrackIdentifier.ArgumentKey.episodeUUID(_:);
      unint64_t v21 = (void (**)(char *, void, uint64_t))(v11 + 104);
      uint64_t v87 = (void (**)(char *, uint64_t))(v11 + 8);
      int v77 = enum case for MediaIdentifier.episodes(_:);
      uint64_t v80 = (void (**)(void))(v82 + 104);
      uint64_t v79 = v82 + 32;
      unsigned int v78 = enum case for URLTrackIdentifier.ArgumentKey.storeTrackID(_:);
      int v74 = enum case for MediaIdentifier.localEpisodes(_:);
      uint64_t v91 = v18;
      uint64_t v85 = (void (**)(char *, void, uint64_t))(v11 + 104);
      uint64_t v86 = (void (**)(char *, uint64_t))(v18 - 8);
      unint64_t v22 = _swiftEmptyArrayStorage;
      unint64_t v23 = (char *)_swiftEmptyArrayStorage;
      uint64_t v96 = _swiftEmptyArrayStorage;
      uint64_t v24 = v95;
      uint64_t v25 = v84;
      do
      {
        uint64_t v98 = v17;
        uint64_t v99 = (uint64_t)v23;
        uint64_t v26 = v22;
        v90(v25, v20, v24);
        uint64_t v27 = *v21;
        uint64_t v29 = v92;
        uint64_t v28 = v93;
        (*v21)(v92, v88, v93);
        os_log_type_t v30 = v25;
        uint64_t v97 = URLTrackIdentifier.valueForArgument(_:)();
        uint64_t v32 = v31;
        uint64_t v33 = *v87;
        (*v87)(v29, v28);
        if (v32)
        {
          unint64_t v22 = v26;
          uint64_t v101 = v26;
          sub_100054B78(&qword_100609EF0);
          sub_1001B4074(&qword_100609EF8, &qword_100609EF0);
          if (Collection.isNotEmpty.getter())
          {
            void *v83 = v26;
            (*v80)();
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v23 = (char *)v99;
            if (isUniquelyReferenced_nonNull_native) {
              unint64_t v35 = (unint64_t)v96;
            }
            else {
              unint64_t v35 = sub_1002F01F0(0, v96[2] + 1, 1, (unint64_t)v96);
            }
            unint64_t v37 = *(void *)(v35 + 16);
            unint64_t v36 = *(void *)(v35 + 24);
            if (v37 >= v36 >> 1) {
              unint64_t v35 = sub_1002F01F0(v36 > 1, v37 + 1, 1, v35);
            }
            *(void *)(v35 + 16) = v37 + 1;
            unint64_t v38 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
            uint64_t v96 = (void *)v35;
            (*(void (**)(unint64_t, void *, uint64_t))(v82 + 32))(v35 + v38 + *(void *)(v82 + 72) * v37, v83, v94);
            swift_bridgeObjectRelease();
            unint64_t v22 = _swiftEmptyArrayStorage;
          }
          else
          {
            unint64_t v23 = (char *)v99;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v23 = sub_10004CEAC(0, *((void *)v23 + 2) + 1, 1, v23);
          }
          unint64_t v45 = *((void *)v23 + 2);
          unint64_t v44 = *((void *)v23 + 3);
          if (v45 >= v44 >> 1) {
            unint64_t v23 = sub_10004CEAC((char *)(v44 > 1), v45 + 1, 1, v23);
          }
          *((void *)v23 + 2) = v45 + 1;
          uint64_t v46 = &v23[16 * v45];
          *((void *)v46 + 4) = v97;
          *((void *)v46 + 5) = v32;
          uint64_t v25 = v84;
          unint64_t v21 = v85;
        }
        else
        {
          v27(v29, v78, v28);
          URLTrackIdentifier.valueForArgument(_:)();
          uint64_t v40 = v39;
          v33(v29, v28);
          uint64_t v25 = v30;
          if (v40)
          {
            uint64_t v41 = v81;
            uint64_t v42 = static AdamID.parse(_:)();
            if (v41)
            {
              swift_bridgeObjectRelease();
              uint64_t v43 = static AdamID.empty.getter();
              swift_errorRelease();
              uint64_t v81 = 0;
            }
            else
            {
              uint64_t v43 = v42;
              uint64_t v81 = 0;
              swift_bridgeObjectRelease();
            }
            unint64_t v22 = v26;
            unint64_t v21 = v85;
            unint64_t v23 = (char *)v99;
            uint64_t v101 = (void *)v99;
            sub_100054B78((uint64_t *)&unk_100603260);
            sub_1001B4074((unint64_t *)&qword_100606CA8, (uint64_t *)&unk_100603260);
            if (Collection.isNotEmpty.getter())
            {
              char *v76 = v23;
              (*v80)();
              swift_bridgeObjectRetain();
              if (swift_isUniquelyReferenced_nonNull_native()) {
                unint64_t v47 = (unint64_t)v96;
              }
              else {
                unint64_t v47 = sub_1002F01F0(0, v96[2] + 1, 1, (unint64_t)v96);
              }
              unint64_t v49 = *(void *)(v47 + 16);
              unint64_t v48 = *(void *)(v47 + 24);
              if (v49 >= v48 >> 1) {
                unint64_t v47 = sub_1002F01F0(v48 > 1, v49 + 1, 1, v47);
              }
              *(void *)(v47 + 16) = v49 + 1;
              unint64_t v50 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
              uint64_t v96 = (void *)v47;
              (*(void (**)(unint64_t, char **, uint64_t))(v82 + 32))(v47 + v50 + *(void *)(v82 + 72) * v49, v76, v94);
              swift_bridgeObjectRelease();
              unint64_t v23 = (char *)_swiftEmptyArrayStorage;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v22 = sub_1002EF380(0, v26[2] + 1, 1, v26);
            }
            unint64_t v52 = v22[2];
            unint64_t v51 = v22[3];
            if (v52 >= v51 >> 1) {
              unint64_t v22 = sub_1002EF380((void *)(v51 > 1), v52 + 1, 1, v22);
            }
            uint64_t v22[2] = v52 + 1;
            v22[v52 + 4] = v43;
          }
          else
          {
            unint64_t v22 = v26;
            unint64_t v23 = (char *)v99;
            unint64_t v21 = v85;
          }
        }
        uint64_t v24 = v95;
        (*v86)(v25, v95);
        v20 += v89;
        uint64_t v17 = v98 - 1;
      }
      while (v98 != 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v22 = _swiftEmptyArrayStorage;
      unint64_t v23 = (char *)_swiftEmptyArrayStorage;
      uint64_t v96 = _swiftEmptyArrayStorage;
    }
    id v60 = v75;
    uint64_t v101 = v22;
    sub_100054B78(&qword_100609EF0);
    sub_1001B4074(&qword_100609EF8, &qword_100609EF0);
    char v61 = Collection.isNotEmpty.getter();
    uint64_t v62 = v73;
    if (v61)
    {
      *uint64_t v73 = v22;
      (*(void (**)(void *, void, uint64_t))(v82 + 104))(v62, enum case for MediaIdentifier.episodes(_:), v94);
      swift_bridgeObjectRetain();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v63 = (unint64_t)v96;
      }
      else {
        unint64_t v63 = sub_1002F01F0(0, v96[2] + 1, 1, (unint64_t)v96);
      }
      unint64_t v65 = *(void *)(v63 + 16);
      unint64_t v64 = *(void *)(v63 + 24);
      if (v65 >= v64 >> 1) {
        unint64_t v63 = sub_1002F01F0(v64 > 1, v65 + 1, 1, v63);
      }
      *(void *)(v63 + 16) = v65 + 1;
      uint64_t v66 = *(void (**)(unint64_t, void *, uint64_t))(v82 + 32);
      unint64_t v67 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
      uint64_t v96 = (void *)v63;
      v66(v63 + v67 + *(void *)(v82 + 72) * v65, v62, v94);
    }
    uint64_t v101 = v23;
    sub_100054B78((uint64_t *)&unk_100603260);
    sub_1001B4074((unint64_t *)&qword_100606CA8, (uint64_t *)&unk_100603260);
    if (Collection.isNotEmpty.getter())
    {
      *id v60 = v23;
      (*(void (**)(char **, void, uint64_t))(v82 + 104))(v60, enum case for MediaIdentifier.localEpisodes(_:), v94);
      swift_bridgeObjectRetain();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v68 = (unint64_t)v96;
      }
      else {
        unint64_t v68 = sub_1002F01F0(0, v96[2] + 1, 1, (unint64_t)v96);
      }
      unint64_t v70 = *(void *)(v68 + 16);
      unint64_t v69 = *(void *)(v68 + 24);
      if (v70 >= v69 >> 1) {
        unint64_t v68 = sub_1002F01F0(v69 > 1, v70 + 1, 1, v68);
      }
      *(void *)(v68 + 16) = v70 + 1;
      unint64_t v71 = v68;
      (*(void (**)(unint64_t, char **, uint64_t))(v82 + 32))(v68+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v70, v60, v94);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)v71;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v96;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    static Logger.modernPlayback.getter();
    swift_retain_n();
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v100 = *v1;
      uint64_t v101 = (void *)v56;
      sub_100054B78(&qword_100609EE8);
      uint64_t v57 = String.init<A>(describing:)();
      uint64_t v100 = sub_10004B974(v57, v58, (uint64_t *)&v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "[%s] Hard queue is empty", v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v98 + 8))(v4, v99);
    return _swiftEmptyArrayStorage;
  }
}

unint64_t sub_100416AC4()
{
  unint64_t result = qword_100609F08;
  if (!qword_100609F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100609F08);
  }
  return result;
}

uint64_t sub_100416B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100609F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100416B80()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100416BC0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10000B8F0;
  return sub_100412A20(a1, v4, v5, v6);
}

unsigned char *storeEnumTagSinglePayload for LegacyPlaybackQueueMigrator.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100416D40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyPlaybackQueueMigrator.Error()
{
  return &type metadata for LegacyPlaybackQueueMigrator.Error;
}

unint64_t sub_100416D7C()
{
  unint64_t result = qword_100609F58;
  if (!qword_100609F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100609F58);
  }
  return result;
}

uint64_t type metadata accessor for ContextMenuLockupPreviewProvider()
{
  return self;
}

unint64_t sub_100416DF8()
{
  sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v12 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin();
  int v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EpisodeContextActionConfiguration(0);
  if (!swift_dynamicCastClass())
  {
LABEL_6:
    type metadata accessor for PodcastContextActionConfiguration(0);
    if (swift_dynamicCastClass())
    {
      dispatch thunk of ContextActionsConfiguration.previewModel.getter();
      if (*((void *)&v13 + 1))
      {
        sub_100054B78(&qword_1005F8418);
        type metadata accessor for LegacyLockup();
        if (swift_dynamicCast()) {
          return v17[0] | 0x4000000000000000;
        }
      }
      else
      {
        sub_100054B1C((uint64_t)&v12, (uint64_t *)&unk_100600590);
      }
    }
    type metadata accessor for ChannelContextActionConfiguration(0);
    if (swift_dynamicCastClass())
    {
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.previewModel.getter();
      swift_release();
      if (*((void *)&v13 + 1))
      {
        sub_100054B78(&qword_1005F8418);
        type metadata accessor for LegacyChannelLockup();
        if (swift_dynamicCast()) {
          return v17[0] | 0x8000000000000000;
        }
      }
      else
      {
        sub_100054B1C((uint64_t)&v12, (uint64_t *)&unk_100600590);
      }
    }
    type metadata accessor for NowPlayingContextActionConfiguration();
    if (swift_dynamicCastClass())
    {
      uint64_t v5 = self;
      swift_retain();
      unsigned int v6 = (void *)dispatch thunk of NowPlayingContextActionConfiguration.modelObject.getter();
      id v7 = [v5 findEpisodeFromModelObject:v6];

      if (v7)
      {
        type metadata accessor for Episode();
        uint64_t v14 = 0;
        long long v12 = 0u;
        long long v13 = 0u;
        id v8 = v7;
        if (Episode.init(from:clickAction:wantsListenNowReason:)(v8, (uint64_t)&v12, 0))
        {
          uint64_t v9 = type metadata accessor for EpisodeListSettings();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
          uint64_t v10 = type metadata accessor for SectionContext();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v1, 1, 1, v10);
          static MetricsDataConfiguration.default.getter();
          uint64_t v4 = dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
          swift_release();
          sub_1002DFF70((uint64_t)&v12, (uint64_t)v17);
          sub_100053884((uint64_t)v17);
          uint64_t v16 = v13;
          sub_1000537F4((uint64_t)&v16);
          uint64_t v15 = *((void *)&v13 + 1);
          sub_1000537F4((uint64_t)&v15);
          sub_1000536BC(v14);

          swift_release();
          sub_100054B1C((uint64_t)v1, (uint64_t *)&unk_1005F7770);
          sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_1005FEA40);
          return v4;
        }
        swift_release();
      }
      else
      {
        swift_release();
      }
    }
    return 0xF000000000000007;
  }
  dispatch thunk of ContextActionsConfiguration.previewModel.getter();
  if (!*((void *)&v13 + 1))
  {
    sub_100054B1C((uint64_t)&v12, (uint64_t *)&unk_100600590);
    goto LABEL_6;
  }
  sub_100054B78(&qword_1005F8418);
  type metadata accessor for LegacyEpisodeLockup();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  return v17[0];
}

uint64_t sub_10041720C()
{
  uint64_t v0 = type metadata accessor for FlowDestination();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  int v3 = (uint64_t *)((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t v6 = type metadata accessor for PresentationSource();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = (void *)PresentationSource.viewController.getter();
    if (v9)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
      id v10 = v9;
      UIResponder.nearestFlowController.getter();

      if (v14)
      {
        sub_100042FC4(&v13, (uint64_t)v15);
        unint64_t v11 = sub_100416DF8();
        if ((~v11 & 0xF000000000000007) != 0)
        {
          uint64_t v12 = v11;
          sub_100041A98(v15, v15[3]);
          *int v3 = v12;
          (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for FlowDestination.contextMenuPreview(_:), v0);
          swift_retain();
          uint64_t v9 = (void *)dispatch thunk of FlowController.viewController(for:referrer:)();
          sub_1004174C8(v12);

          (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
          sub_10004D2D8((uint64_t)v15);
        }
        else
        {

          sub_10004D2D8((uint64_t)v15);
          return 0;
        }
      }
      else
      {

        sub_100054B1C((uint64_t)&v13, &qword_100604710);
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    }
    return (uint64_t)v9;
  }
  return result;
}

uint64_t sub_1004174C8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1004174E4(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = sub_100418760(v3);
    *uint64_t v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      specialized Array._endMutation()();
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

BOOL sub_1004175C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  [*(id *)(v1 + 16) lock];
  unint64_t v7 = (void *)(v1 + 24);
  swift_beginAccess();
  swift_retain();
  unint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1004187F0(v8, a1);
  swift_bridgeObjectRelease();
  swift_release();
  if (v9)
  {
    swift_release();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    sub_1001C0DD4();
    unint64_t v11 = static OS_os_log.downloads.getter();
    if (os_log_type_enabled(v11, v10))
    {
      swift_retain();
      int v20 = v10;
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      long long v19[2] = v13;
      *(_DWORD *)uint64_t v12 = 136446210;
      v22[0] = v13;
      v19[1] = v12 + 4;
      id v14 = *(id *)(a1 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v15 = (uint64_t *)&v6[*(int *)(v4 + 20)];
      uint64_t v16 = *v15;
      unint64_t v17 = v15[1];
      swift_bridgeObjectRetain();
      sub_1001D92EC((uint64_t)v6);
      uint64_t v21 = sub_10004B974(v16, v17, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v20, "Episode already exists in pipeline. %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  [*(id *)(v2 + 16) unlock];
  return v9 == 0;
}

id sub_1004178BC(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  [*(id *)(v2 + 16) lock];
  v22[1] = v2 + 24;
  swift_beginAccess();
  uint64_t v23 = v2;
  unint64_t v8 = *(void *)(v2 + 24);
  if (v8 >> 62) {
    goto LABEL_19;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v10 = 0;
    uint64_t v24 = v9;
    unint64_t v25 = v8 & 0xC000000000000001;
    while (1)
    {
      if (v25)
      {
        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v11 = *(void *)(v8 + 8 * v10 + 32);
        swift_retain();
      }
      id v12 = *(id *)(v11 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v13 = &v7[*(int *)(v5 + 20)];
      uint64_t v15 = *(void *)v13;
      id v14 = (void *)*((void *)v13 + 1);
      swift_bridgeObjectRetain();
      sub_1001D92EC((uint64_t)v7);
      if (v15 == a1 && v14 == a2)
      {
        swift_bridgeObjectRelease();
        swift_release();
LABEL_16:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_1004174E4(v10);
        swift_endAccess();
        swift_release();
        return [*(id *)(v23 + 16) unlock];
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_release();
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_16;
      }
      unint64_t v18 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        break;
      }
      ++v10;
      if (v18 == v24) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease();
  unint64_t v26 = 0xD00000000000001ALL;
  unint64_t v27 = 0x80000001004E3C50;
  v19._uint64_t countAndFlagsBits = a1;
  v19._object = a2;
  String.append(_:)(v19);
  v20._uint64_t countAndFlagsBits = 0x756F6620746F6E20;
  v20._object = (void *)0xEA0000000000646ELL;
  String.append(_:)(v20);
  sub_1003D19F0();
  swift_bridgeObjectRelease();
  return [*(id *)(v23 + 16) unlock];
}

uint64_t sub_100417BB4(uint64_t a1)
{
  [*(id *)(v1 + 16) lock];
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 24);
  if (v3 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain_n();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      do
      {
        uint64_t v6 = v5 - 4;
        if ((v3 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v8 = __OFADD__(v6, 1);
          uint64_t v9 = v5 - 3;
          if (v8) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v3 + 8 * v5);
          swift_retain();
          BOOL v8 = __OFADD__(v6, 1);
          uint64_t v9 = v5 - 3;
          if (v8)
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        if ((*(unsigned char *)(v7 + OBJC_IVAR____TtC8Podcasts11JobPipeline_metadata + 40) & 1) == 0
          && *(void *)(v7 + OBJC_IVAR____TtC8Podcasts11JobPipeline_metadata + 32) == a1)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_16;
        }
        swift_release();
        ++v5;
      }
      while (v9 != v4);
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v7 = 0;
LABEL_16:
  [*(id *)(v1 + 16) unlock];
  return v7;
}

uint64_t sub_100417D20()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100417D60(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  BOOL v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  [*(id *)(v2 + 16) lock];
  swift_beginAccess();
  uint64_t v24 = v2;
  unint64_t v9 = *(void *)(v2 + 24);
  uint64_t v28 = a2;
  if (v9 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      unint64_t v25 = v9;
      unint64_t v26 = v9 & 0xC000000000000001;
      uint64_t v11 = 4;
      do
      {
        uint64_t v12 = v11 - 4;
        if (v26)
        {
          uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v9 = v11 - 3;
          if (__OFADD__(v12, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v4 = *(void *)(v9 + 8 * v11);
          swift_retain();
          unint64_t v9 = v11 - 3;
          if (__OFADD__(v12, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v3 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
        id v13 = *(id *)(v4 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
        uint64_t v14 = v27;
        OS_dispatch_queue.sync<A>(execute:)();

        uint64_t v15 = &v8[*(int *)(v14 + 20)];
        uint64_t v16 = *(void *)v15;
        uint64_t v17 = *((void *)v15 + 1);
        swift_bridgeObjectRetain();
        sub_1001D92EC((uint64_t)v8);
        BOOL v18 = v16 == a1 && v17 == v28;
        if (v18) {
          goto LABEL_17;
        }
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_18;
        }
        swift_release();
        ++v11;
        BOOL v18 = v9 == v10;
        unint64_t v9 = v25;
      }
      while (!v18);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease();
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v20 = *(id *)(v4 + v3);
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v21 = sub_100233BCC();
  sub_1001D92EC((uint64_t)v8);
  swift_release();
  [*(id *)(v24 + 16) unlock];
  return v21;
}

uint64_t sub_1004180A8(void *a1)
{
  uint64_t v3 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  [*(id *)(v1 + 16) lock];
  id v6 = [a1 episodeUuid];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_beginAccess();
    unint64_t v11 = *(void *)(v1 + 24);
    uint64_t v24 = v1;
    if (v11 >> 62) {
      goto LABEL_21;
    }
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    for (; v12; uint64_t v12 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v13 = 0;
      uint64_t v25 = v12;
      unint64_t v26 = v11 & 0xC000000000000001;
      while (1)
      {
        if (v26)
        {
          uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v14 = *(void *)(v11 + 8 * v13 + 32);
          swift_retain();
        }
        id v15 = *(id *)(v14 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
        OS_dispatch_queue.sync<A>(execute:)();

        uint64_t v16 = &v5[*(int *)(v3 + 20)];
        uint64_t v18 = *(void *)v16;
        uint64_t v17 = *((void *)v16 + 1);
        swift_bridgeObjectRetain();
        sub_1001D92EC((uint64_t)v5);
        if (v18 == v8 && v17 == v10)
        {
          swift_bridgeObjectRelease();
          swift_release();
LABEL_18:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v1 = v24;
          goto LABEL_19;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_release();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }
        uint64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        ++v13;
        if (v21 == v25) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v1 = v24;
  }
  uint64_t v13 = NSNotFound.getter();
LABEL_19:
  [*(id *)(v1 + 16) unlock];
  return v13;
}

uint64_t sub_100418398(unint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  [*(id *)(v1 + 16) lock];
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 24);
  if ((v7 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    uint64_t v8 = *(void *)(v7 + 8 * a1 + 32);
    swift_retain();
LABEL_5:
    id v9 = *(id *)(v8 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
    OS_dispatch_queue.sync<A>(execute:)();

    uint64_t v10 = sub_100233BCC();
    sub_1001D92EC((uint64_t)v5);
    swift_release();
    [*(id *)(v2 + 16) unlock];
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10041861C(uint64_t a1, uint64_t a2)
{
  [*(id *)(v2 + 16) lock];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = (unint64_t)sub_100418A8C(v5, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6 >> 62) {
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  [*(id *)(v2 + 16) unlock];
  return v7;
}

uint64_t sub_100418760(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

char *sub_1004187DC(uint64_t a1)
{
  return sub_10004CEAC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1004187F0(unint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v29 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v26 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
      unint64_t v27 = a1 & 0xC000000000000001;
      uint64_t v5 = 4;
      uint64_t v24 = v4;
      unint64_t v25 = a1;
      do
      {
        uint64_t v6 = v5 - 4;
        if (v27)
        {
          uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * v5);
          swift_retain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v31 = v8;
        id v9 = *(id *)(v7 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
        uint64_t v10 = (uint64_t)v28;
        uint64_t v11 = v7;
        uint64_t v12 = v29;
        OS_dispatch_queue.sync<A>(execute:)();

        uint64_t v13 = (uint64_t *)(v10 + *(int *)(v12 + 20));
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        swift_bridgeObjectRetain();
        sub_1001D92EC(v10);
        id v16 = *(id *)(v30 + v26);
        OS_dispatch_queue.sync<A>(execute:)();

        uint64_t v17 = (uint64_t *)(v10 + *(int *)(v12 + 20));
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        swift_bridgeObjectRetain();
        sub_1001D92EC(v10);
        if (v14 == v19 && v15 == v18)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          swift_bridgeObjectRelease();
          return v11;
        }
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_17;
        }
        swift_release();
        ++v5;
        a1 = v25;
      }
      while (v31 != v24);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_100418A8C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      unint64_t v15 = v5;
      unint64_t v7 = 0;
      unint64_t v8 = v5 & 0xC000000000000001;
      uint64_t v9 = v5 & 0xFFFFFFFFFFFFFF8;
      unint64_t v16 = v5 & 0xC000000000000001;
      while (1)
      {
        if (v8)
        {
          uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v11 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
LABEL_18:
            __break(1u);
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          if (v7 >= *(void *)(v9 + 16))
          {
            __break(1u);
            goto LABEL_21;
          }
          uint64_t v10 = *(void *)(v5 + 8 * v7 + 32);
          swift_retain();
          unint64_t v11 = v7 + 1;
          if (__OFADD__(v7, 1)) {
            goto LABEL_18;
          }
        }
        uint64_t v12 = *(void *)(v10 + OBJC_IVAR____TtC8Podcasts11JobPipeline_metadata + 8);
        if (v12
          && (*(void *)(v10 + OBJC_IVAR____TtC8Podcasts11JobPipeline_metadata) == a2 ? (BOOL v13 = v12 == a3) : (BOOL v13 = 0),
              v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          unint64_t v5 = v15;
          unint64_t v8 = v16;
        }
        else
        {
          swift_release();
        }
        ++v7;
        if (v11 == v6) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

id sub_100418C3C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  uint64_t v32 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v31 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  [*(id *)(a1 + 16) lock];
  swift_beginAccess();
  v26[0] = a1;
  unint64_t v7 = *(void *)(a1 + 24);
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain_n();
    if (v8) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    return [*(id *)(v26[0] + 16) unlock];
  }
  swift_bridgeObjectRetain_n();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v8 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    unint64_t v28 = v7 & 0xC000000000000001;
    int v27 = a3 & 1;
    v26[1] = v37;
    uint64_t v29 = v8;
    unint64_t v30 = v7;
    uint64_t v11 = (uint64_t)v31;
    uint64_t v12 = v32;
    do
    {
      if (v28)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v13 = *(void *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      uint64_t v35 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
      id v14 = *(id *)(v13 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      OS_dispatch_queue.sync<A>(execute:)();

      unint64_t v15 = (uint64_t *)(v11 + *(int *)(v12 + 20));
      uint64_t v17 = *v15;
      uint64_t v16 = v15[1];
      swift_bridgeObjectRetain();
      sub_1001D92EC(v11);
      id v18 = sub_100041274();
      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = v17;
      *(void *)(v20 + 32) = v16;
      *(unsigned char *)(v20 + 40) = v27;
      v37[2] = sub_1003D19E0;
      v37[3] = v20;
      aBlock[0] = (Swift::Int)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v37[0] = sub_10003B424;
      v37[1] = &unk_10056A598;
      char v21 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_release();
      [v18 addOperationWithBlock:v21];
      _Block_release(v21);
      swift_bridgeObjectRelease();

      id v22 = *(id *)(v13 + v35);
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v23 = (Swift::Int *)(v11 + *(int *)(v12 + 20));
      Swift::Int v24 = *v23;
      Swift::Int v25 = v23[1];
      swift_bridgeObjectRetain();
      sub_1001D92EC(v11);
      sub_100050684(aBlock, v24, v25);
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v7 = v30;
    }
    while (v29 != v10);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100418FCC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100419004()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100419044()
{
  uint64_t v1 = v0;
  type metadata accessor for InteractionContext.Page();
  __chkstk_darwin();
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for InteractionContext();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(void *)(v0 + 64)
    && (swift_retain(),
        dispatch thunk of ContextActionsConfiguration.context.getter(),
        swift_release(),
        InteractionContext.page.getter(),
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4),
        char v8 = InteractionContext.Page.isRecentlyUnfollowedPage.getter(),
        sub_1001B4BB0((uint64_t)v3),
        (v8 & 1) != 0)
    && *(void *)(v1 + 56))
  {
    swift_retain();
    char v9 = sub_100241FD4();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1004191E0()
{
  sub_10004D2D8(v0 + 16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts44DeleteRecentlyUnfollowedPodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1001DE9EC(v0 + OBJC_IVAR____TtC8Podcasts44DeleteRecentlyUnfollowedPodcastContextAction_contextActionType);

  return swift_deallocClassInstance();
}

uint64_t sub_1004192B0()
{
  return type metadata accessor for DeleteRecentlyUnfollowedPodcastContextAction();
}

uint64_t type metadata accessor for DeleteRecentlyUnfollowedPodcastContextAction()
{
  uint64_t result = qword_10060A138;
  if (!qword_10060A138) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100419304()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1004193FC()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0xE000000000000000;
  v1._uint64_t countAndFlagsBits = 0x535F45564F4D4552;
  v1._object = (void *)0xEB00000000574F48;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1004194A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts44DeleteRecentlyUnfollowedPodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100419514@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts44DeleteRecentlyUnfollowedPodcastContextAction_contextActionType, a1);
}

uint64_t sub_10041952C()
{
  if (v0[7])
  {
    swift_retain();
    sub_100241FD4();
    if (v1)
    {
      sub_100041A98(v0 + 2, v0[5]);
      dispatch thunk of LibraryActionControllerProtocol.deleteRecentlyUnfollowedShow(uuid:)();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100419604(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

void *sub_100419664(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1004196C4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_100419724(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_100419784(uint64_t a1)
{
  uint64_t result = sub_10041980C((unint64_t *)&unk_100608BF0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1004197C8(uint64_t a1)
{
  uint64_t result = sub_10041980C(&qword_10060A238);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10041980C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DeleteRecentlyUnfollowedPodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100419850(uint64_t a1, char a2)
{
}

void sub_100419860(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void (**)(uint64_t *))(v2 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
  if (v6)
  {
    uint64_t v11 = sub_100054B78(&qword_100607FD0);
    uint64_t v9 = a1;
    char v10 = a2;
    sub_10004ACDC((uint64_t)v6);
    sub_10005036C(a1, a2);
    v6(&v9);
    sub_1000536BC((uint64_t)v6);
    sub_10004D2D8((uint64_t)&v9);
  }
  if (a2 == 1)
  {
    uint64_t v7 = OBJC_IVAR____TtC8Podcasts13BaseOperation_lock;
    char v8 = *(void **)(v2 + OBJC_IVAR____TtC8Podcasts13BaseOperation_lock);
    swift_errorRetain();
    [v8 lock];
    *(void *)(v3 + OBJC_IVAR____TtC8Podcasts13BaseOperation__error) = a1;
    swift_errorRetain();
    swift_errorRelease();
    [*(id *)(v3 + v7) unlock];
    sub_100050358(a1, 1);
  }
  sub_100049E74();
}

void sub_100419980(uint64_t a1, char a2)
{
}

void sub_10041998C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void (**)(uint64_t *))(v3 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
  if (v7)
  {
    uint64_t v12 = sub_100054B78(a3);
    uint64_t v10 = a1;
    char v11 = a2;
    sub_10004ACDC((uint64_t)v7);
    sub_10004B0B0(a1, a2);
    v7(&v10);
    sub_1000536BC((uint64_t)v7);
    sub_10004D2D8((uint64_t)&v10);
  }
  if (a2 == 1)
  {
    uint64_t v8 = OBJC_IVAR____TtC8Podcasts13BaseOperation_lock;
    uint64_t v9 = *(void **)(v3 + OBJC_IVAR____TtC8Podcasts13BaseOperation_lock);
    swift_errorRetain();
    [v9 lock];
    *(void *)(v4 + OBJC_IVAR____TtC8Podcasts13BaseOperation__error) = a1;
    swift_errorRetain();
    swift_errorRelease();
    [*(id *)(v4 + v8) unlock];
    sub_10004B094(a1, 1);
  }
  sub_100049E74();
}

void sub_100419AA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F6C80);
  __chkstk_darwin();
  uint64_t v6 = (uint64_t *)((char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void (**)(uint64_t *))(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
  if (v7)
  {
    v12[3] = v4;
    uint64_t v8 = sub_10004A244(v12);
    sub_10041BC00(a1, (uint64_t)v8);
    swift_retain();
    v7(v12);
    sub_1000536BC((uint64_t)v7);
    sub_10004D2D8((uint64_t)v12);
  }
  sub_10041BC00(a1, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = *v6;
    uint64_t v10 = OBJC_IVAR____TtC8Podcasts13BaseOperation_lock;
    char v11 = *(void **)(v2 + OBJC_IVAR____TtC8Podcasts13BaseOperation_lock);
    swift_errorRetain();
    [v11 lock];
    *(void *)(v2 + OBJC_IVAR____TtC8Podcasts13BaseOperation__error) = v9;
    swift_errorRetain();
    swift_errorRelease();
    [*(id *)(v2 + v10) unlock];
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    sub_100054B1C((uint64_t)v6, &qword_1005F6C80);
  }
  sub_100049E74();
}

uint64_t sub_100419C34()
{
  uint64_t v1 = v0;
  long long v254 = (int *)type metadata accessor for ValidateOperation.Result(0);
  __chkstk_darwin();
  long long v253 = (char *)&v220 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  long long v246 = (char *)&v220 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v242 = (char *)&v220 - v4;
  __chkstk_darwin();
  long long v239 = (char *)&v220 - v5;
  __chkstk_darwin();
  long long v235 = (char *)&v220 - v6;
  __chkstk_darwin();
  long long v237 = (char *)&v220 - v7;
  sub_100054B78(&qword_10060A2E8);
  __chkstk_darwin();
  long long v244 = (char *)&v220 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UTType();
  uint64_t v248 = *(void *)(v9 - 8);
  uint64_t v249 = v9;
  __chkstk_darwin();
  long long v243 = (char *)&v220 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v241 = (char *)&v220 - v11;
  uint64_t v257 = sub_100054B78(&qword_1005F6C80);
  __chkstk_darwin();
  uint64_t v247 = (id *)((char *)&v220 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  long long v245 = (id *)((char *)&v220 - v13);
  __chkstk_darwin();
  long long v240 = (uint64_t *)((char *)&v220 - v14);
  __chkstk_darwin();
  long long v234 = (uint64_t *)((char *)&v220 - v15);
  __chkstk_darwin();
  long long v238 = (uint64_t *)((char *)&v220 - v16);
  __chkstk_darwin();
  id v18 = (uint64_t *)((char *)&v220 - v17);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin();
  uint64_t v236 = (char *)&v220 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v251 = (char *)&v220 - v22;
  __chkstk_darwin();
  long long v256 = (char *)&v220 - v23;
  __chkstk_darwin();
  Swift::Int v25 = (char *)&v220 - v24;
  uint64_t v26 = v1;
  uint64_t v27 = v1 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_source;
  swift_beginAccess();
  unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v28(v25, v27, v19);
  Swift::Bool v29 = URL.isPackagedMedia()();
  uint64_t v252 = v20;
  unint64_t v30 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v31 = v25;
  uint64_t v258 = v20 + 8;
  long long v255 = v30;
  v30(v25, v19);
  if (v29)
  {
    uint64_t v32 = *(void *)(v26 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_originalExtension);
    uint64_t v33 = *(void *)(v26 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_originalExtension + 8);
    uint64_t v34 = v253;
    v28(&v253[v254[5]], v27, v19);
    void *v34 = v32;
    v34[1] = v33;
    sub_10041BB40((uint64_t)v34, (uint64_t)v18);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_100419AA8((uint64_t)v18);
    sub_100054B1C((uint64_t)v18, &qword_1005F6C80);
    return sub_10041BBA4((uint64_t)v34);
  }
  long long v230 = v28;
  uint64_t v232 = v20 + 16;
  uint64_t v231 = v27;
  long long v233 = v18;
  uint64_t v36 = v26;
  unint64_t v37 = *(void **)(v26 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_response);
  if (!v37)
  {
    sub_10018B8B8();
    uint64_t v67 = swift_allocError();
    void *v68 = 0xD00000000000002ELL;
    v68[1] = 0x80000001004E3D10;
    unint64_t v69 = v233;
    *long long v233 = v67;
    swift_storeEnumTagMultiPayload();
    sub_100419AA8((uint64_t)v69);
    return sub_100054B1C((uint64_t)v69, &qword_1005F6C80);
  }
  unint64_t v38 = v31;
  uint64_t v39 = v31;
  uint64_t v40 = v231;
  uint64_t v41 = v230;
  v230(v39, v231, v19);
  uint64_t v43 = *(void *)(v36 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_originalExtension);
  uint64_t v42 = *(char **)(v36 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_originalExtension + 8);
  id v227 = v37;
  unint64_t v44 = v256;
  uint64_t v224 = v43;
  NSString v225 = v42;
  URL.appendingPathExtension(_:)();
  unint64_t v45 = v255;
  v255(v38, v19);
  v41(v38, v40, v19);
  uint64_t v229 = v36;
  uint64_t v46 = v251;
  v41(v251, (uint64_t)v44, v19);
  unint64_t v47 = (objc_class *)type metadata accessor for MoveFileOperation(0);
  unint64_t v48 = (char *)objc_allocWithZone(v47);
  unint64_t v49 = &v48[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input];
  *(void *)unint64_t v49 = 0;
  v49[8] = 2;
  v41(&v48[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_destination], (uint64_t)v46, v19);
  v41(&v48[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_source], (uint64_t)v38, v19);
  unint64_t v50 = sub_1001C0DD4();
  unint64_t v51 = v48;
  unint64_t v223 = v50;
  *(void *)&v51[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_log] = static OS_os_log.default.getter();

  v262.receiver = v51;
  v262.super_class = v47;
  uint64_t v52 = v40;
  Class v222 = v47;
  id v53 = [super init];
  v45(v46, v19);
  v45(v38, v19);
  id v226 = v53;
  sub_1002F1048();
  swift_beginAccess();
  v221 = *(void (**)(uint64_t, char *, uint64_t))(v252 + 24);
  v221(v40, v256, v19);
  swift_endAccess();
  v41(v38, v40, v19);
  LOBYTE(v53) = URL.isHLSPlaylist()();
  uint64_t v228 = v19;
  v45(v38, v19);
  os_log_type_t v54 = v233;
  if (v53)
  {
    static os_log_type_t.error.getter();
    uint64_t v55 = v229;
    sub_100054B78(&qword_1005F7720);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_10046D010;
    uint64_t v58 = *(void *)(v55 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid);
    uint64_t v57 = *(void **)(v55 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid + 8);
    *(void *)(v56 + 56) = &type metadata for String;
    *(void *)(v56 + 64) = sub_10004DA4C();
    *(void *)(v56 + 32) = v58;
    *(void *)(v56 + 40) = v57;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v260 = 0;
    unint64_t v261 = 0xE000000000000000;
    _StringGuts.grow(_:)(114);
    v59._uint64_t countAndFlagsBits = 0xD000000000000070;
    v59._object = (void *)0x80000001004E4240;
    String.append(_:)(v59);
    swift_bridgeObjectRetain();
    v60._uint64_t countAndFlagsBits = v58;
    v60._object = v57;
    String.append(_:)(v60);
    swift_bridgeObjectRelease();
    uint64_t v61 = v260;
    unint64_t v62 = v261;
    sub_10018B8B8();
    uint64_t v63 = swift_allocError();
    void *v64 = v61;
    v64[1] = v62;
    uint64_t *v54 = v63;
    swift_storeEnumTagMultiPayload();
    sub_100419AA8((uint64_t)v54);
    sub_100054B1C((uint64_t)v54, &qword_1005F6C80);

    unint64_t v65 = v256;
    uint64_t v66 = v228;
    return ((uint64_t (*)(char *, uint64_t))v255)(v65, v66);
  }
  id v70 = v227;
  uint64_t v71 = v228;
  v41(v38, v52, v228);
  uint64_t v72 = v52;
  id v73 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v74);
  uint64_t v76 = v75;
  id v77 = [v73 initWithURL:v75 options:0];

  v255(v38, v71);
  if ([v77 isPlayable])
  {
    unsigned int v78 = v253;
    v41(&v253[v254[5]], v72, v71);
    uint64_t v79 = v225;
    *unsigned int v78 = v224;
    v78[1] = v79;
    sub_10041BB40((uint64_t)v78, (uint64_t)v54);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_100419AA8((uint64_t)v54);

    sub_100054B1C((uint64_t)v54, &qword_1005F6C80);
    sub_10041BBA4((uint64_t)v78);
    unint64_t v65 = v256;
    uint64_t v66 = v71;
    return ((uint64_t (*)(char *, uint64_t))v255)(v65, v66);
  }
  id v220 = v77;
  id v80 = [v70 MIMEType];
  if (v80)
  {
    uint64_t v81 = v80;
    uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v84 = v83;

    id v85 = [self audiovisualMIMETypes];
    uint64_t v86 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v85) = sub_1000124B0(v82, v84, v86);
    swift_bridgeObjectRelease();
    if (v85)
    {
      swift_bridgeObjectRetain();
      static UTType.data.getter();
      uint64_t v87 = (uint64_t)v244;
      UTType.init(mimeType:conformingTo:)();
      uint64_t v88 = v248;
      uint64_t v89 = v249;
      int v90 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v248 + 48))(v87, 1, v249);
      uint64_t v91 = v229;
      if (v90 == 1)
      {
        sub_100054B1C(v87, &qword_10060A2E8);
        id v92 = v226;
LABEL_30:
        static os_log_type_t.error.getter();
        sub_100054B78(&qword_1005F7720);
        uint64_t v153 = v91;
        uint64_t v154 = swift_allocObject();
        *(_OWORD *)(v154 + 16) = xmmword_10046D030;
        *(void *)(v154 + 56) = &type metadata for String;
        unint64_t v155 = sub_10004DA4C();
        *(void *)(v154 + 32) = v82;
        *(void *)(v154 + 40) = v84;
        uint64_t v157 = *(void *)(v153 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid);
        uint64_t v156 = *(void *)(v153 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid + 8);
        *(void *)(v154 + 96) = &type metadata for String;
        *(void *)(v154 + 104) = v155;
        *(void *)(v154 + 64) = v155;
        *(void *)(v154 + 72) = v157;
        *(void *)(v154 + 80) = v156;
        swift_bridgeObjectRetain();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v260 = 0;
        unint64_t v261 = 0xE000000000000000;
        _StringGuts.grow(_:)(110);
        v158._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
        v158._object = (void *)0x80000001004E3FA0;
        String.append(_:)(v158);
        id v159 = [v70 URL];
        long long v160 = (uint64_t (*)(char *, uint64_t))v255;
        if (v159)
        {
          uint64_t v161 = v159;
          uint64_t v162 = v239;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v163 = 0;
          unint64_t v164 = v256;
        }
        else
        {
          uint64_t v163 = 1;
          unint64_t v164 = v256;
          uint64_t v162 = v239;
        }
        uint64_t v165 = v228;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v252 + 56))(v162, v163, 1, v228);
        v166._uint64_t countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v166);
        swift_bridgeObjectRelease();
        uint64_t v167 = v260;
        unint64_t v168 = v261;
        sub_10018B8B8();
        uint64_t v169 = swift_allocError();
        *uint64_t v170 = v167;
        v170[1] = v168;
        uint64_t v171 = (uint64_t)v240;
        *long long v240 = v169;
        swift_storeEnumTagMultiPayload();
        sub_100419AA8(v171);

        sub_100054B1C(v171, &qword_1005F6C80);
        return v160(v164, v165);
      }
      uint64_t v247 = (void *)v84;
      uint64_t v120 = v241;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v241, v87, v89);
      uint64_t v121 = UTType.preferredFilenameExtension.getter();
      if (!v122)
      {
        (*(void (**)(char *, uint64_t))(v88 + 8))(v120, v89);
        id v92 = v226;
        uint64_t v84 = (uint64_t)v247;
        uint64_t v91 = v229;
        goto LABEL_30;
      }
      uint64_t v123 = (char *)v121;
      if (v121 == v224 && v122 == v225 || (uint64_t v124 = v122, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        uint64_t v125 = v71;
        swift_bridgeObjectRelease();
        static os_log_type_t.error.getter();
        id v126 = (void *)static OS_os_log.downloads.getter();
        sub_100054B78(&qword_1005F7720);
        uint64_t v127 = swift_allocObject();
        *(_OWORD *)(v127 + 16) = xmmword_10046D030;
        *(void *)(v127 + 56) = &type metadata for String;
        unint64_t v128 = sub_10004DA4C();
        uint64_t v129 = v247;
        *(void *)(v127 + 32) = v82;
        *(void *)(v127 + 40) = v129;
        uint64_t v131 = *(void *)(v229 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid);
        uint64_t v130 = *(void *)(v229 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid + 8);
        *(void *)(v127 + 96) = &type metadata for String;
        *(void *)(v127 + 104) = v128;
        *(void *)(v127 + 64) = v128;
        *(void *)(v127 + 72) = v131;
        *(void *)(v127 + 80) = v130;
        swift_bridgeObjectRetain();
        os_log(_:dso:log:_:_:)();

        swift_bridgeObjectRelease();
        uint64_t v260 = 0;
        unint64_t v261 = 0xE000000000000000;
        _StringGuts.grow(_:)(58);
        v132._uint64_t countAndFlagsBits = 0xD000000000000038;
        v132._object = (void *)0x80000001004E4180;
        String.append(_:)(v132);
        id v133 = v227;
        id v134 = [v227 URL];
        if (v134)
        {
          unint64_t v135 = v134;
          uint64_t v136 = v237;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v137 = 0;
          uint64_t v139 = (uint64_t (*)(char *, uint64_t))v255;
          uint64_t v138 = v256;
          id v140 = v226;
        }
        else
        {
          uint64_t v137 = 1;
          uint64_t v139 = (uint64_t (*)(char *, uint64_t))v255;
          uint64_t v138 = v256;
          id v140 = v226;
          uint64_t v136 = v237;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v252 + 56))(v136, v137, 1, v125);
        v172._uint64_t countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v172);
        swift_bridgeObjectRelease();
        uint64_t v173 = v260;
        unint64_t v174 = v261;
        sub_10018B8B8();
        uint64_t v175 = swift_allocError();
        *uint64_t v176 = v173;
        v176[1] = v174;
        uint64_t v177 = (uint64_t)v238;
        *long long v238 = v175;
        swift_storeEnumTagMultiPayload();
        sub_100419AA8(v177);

        sub_100054B1C(v177, &qword_1005F6C80);
        (*(void (**)(char *, uint64_t))(v248 + 8))(v241, v249);
        return v139(v138, v125);
      }
      else
      {
        long long v245 = (void *)v82;
        uint64_t v178 = v231;
        uint64_t v179 = v230;
        v230(v38, v231, v71);
        unsigned int v180 = v236;
        long long v246 = v124;
        URL.appendingPathExtension(_:)();
        v255(v38, v71);
        v179(v38, v178, v71);
        long long v244 = v123;
        unsigned int v181 = v251;
        v179(v251, (uint64_t)v180, v71);
        uint64_t v182 = v222;
        uint64_t v183 = (char *)objc_allocWithZone(v222);
        uint64_t v184 = &v183[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input];
        *(void *)uint64_t v184 = 0;
        v184[8] = 2;
        v179(&v183[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_destination], (uint64_t)v181, v71);
        v179(&v183[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_source], (uint64_t)v38, v71);
        uint64_t v185 = v183;
        *(void *)&v185[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_log] = static OS_os_log.default.getter();

        v259.receiver = v185;
        v259.super_class = v182;
        uint64_t v186 = v178;
        uint64_t v187 = (int *)[super init];
        uint64_t v188 = v181;
        uint64_t v189 = v180;
        uint64_t v190 = v255;
        v255(v188, v71);
        v190(v38, v71);
        sub_1002F1048();
        swift_beginAccess();
        v221(v186, v189, v71);
        swift_endAccess();
        id v191 = objc_allocWithZone((Class)AVURLAsset);
        URL._bridgeToObjectiveC()(v192);
        id v194 = v193;
        id v195 = [v191 initWithURL:v193 options:0];

        if ([v195 isPlayable])
        {
          swift_bridgeObjectRelease();
          uint64_t v196 = v253;
          v179(&v253[v254[5]], v186, v71);
          uint64_t v197 = v246;
          *uint64_t v196 = v244;
          v196[1] = v197;
          Swift::String v198 = v233;
          sub_10041BB40((uint64_t)v196, (uint64_t)v233);
          swift_storeEnumTagMultiPayload();
          sub_100419AA8((uint64_t)v198);

          sub_100054B1C((uint64_t)v198, &qword_1005F6C80);
          sub_10041BBA4((uint64_t)v196);
          v190(v189, v71);
          (*(void (**)(char *, uint64_t))(v248 + 8))(v241, v249);
          return ((uint64_t (*)(char *, uint64_t))v190)(v256, v71);
        }
        else
        {
          long long v254 = v187;
          swift_bridgeObjectRelease();
          static os_log_type_t.error.getter();
          Swift::String v199 = (void *)static OS_os_log.downloads.getter();
          sub_100054B78(&qword_1005F7720);
          uint64_t v200 = swift_allocObject();
          *(_OWORD *)(v200 + 16) = xmmword_10046D030;
          *(void *)(v200 + 56) = &type metadata for String;
          unint64_t v201 = sub_10004DA4C();
          uint64_t v202 = v247;
          *(void *)(v200 + 32) = v245;
          *(void *)(v200 + 40) = v202;
          uint64_t v204 = *(void *)(v229 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid);
          uint64_t v203 = *(void *)(v229 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid + 8);
          *(void *)(v200 + 96) = &type metadata for String;
          *(void *)(v200 + 104) = v201;
          *(void *)(v200 + 64) = v201;
          *(void *)(v200 + 72) = v204;
          *(void *)(v200 + 80) = v203;
          swift_bridgeObjectRetain();
          os_log(_:dso:log:_:_:)();

          swift_bridgeObjectRelease();
          uint64_t v260 = 0;
          unint64_t v261 = 0xE000000000000000;
          _StringGuts.grow(_:)(82);
          v205._uint64_t countAndFlagsBits = 0xD000000000000050;
          v205._object = (void *)0x80000001004E4090;
          String.append(_:)(v205);
          id v206 = v227;
          id v207 = [v227 URL];
          if (v207)
          {
            uint64_t v208 = v207;
            uint64_t v209 = v235;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v210 = 0;
            uint64_t v212 = v255;
            uint64_t v211 = v256;
          }
          else
          {
            uint64_t v210 = 1;
            uint64_t v212 = v255;
            uint64_t v211 = v256;
            uint64_t v209 = v235;
          }
          uint64_t v213 = v228;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v252 + 56))(v209, v210, 1, v228);
          v214._uint64_t countAndFlagsBits = String.init<A>(describing:)();
          String.append(_:)(v214);
          swift_bridgeObjectRelease();
          uint64_t v215 = v260;
          unint64_t v216 = v261;
          sub_10018B8B8();
          uint64_t v217 = swift_allocError();
          *uint64_t v218 = v215;
          v218[1] = v216;
          uint64_t v219 = (uint64_t)v234;
          *long long v234 = v217;
          swift_storeEnumTagMultiPayload();
          sub_100419AA8(v219);

          sub_100054B1C(v219, &qword_1005F6C80);
          v212(v236, v213);
          (*(void (**)(char *, uint64_t))(v248 + 8))(v241, v249);
          return ((uint64_t (*)(char *, uint64_t))v212)(v211, v213);
        }
      }
    }
    else
    {
      uint64_t v106 = v71;
      static os_log_type_t.error.getter();
      uint64_t v107 = v229;
      sub_100054B78(&qword_1005F7720);
      uint64_t v108 = swift_allocObject();
      *(_OWORD *)(v108 + 16) = xmmword_10046D030;
      *(void *)(v108 + 56) = &type metadata for String;
      unint64_t v109 = sub_10004DA4C();
      *(void *)(v108 + 32) = v82;
      *(void *)(v108 + 40) = v84;
      uint64_t v111 = *(void *)(v107 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid);
      uint64_t v110 = *(void *)(v107 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid + 8);
      *(void *)(v108 + 96) = &type metadata for String;
      *(void *)(v108 + 104) = v109;
      *(void *)(v108 + 64) = v109;
      *(void *)(v108 + 72) = v111;
      *(void *)(v108 + 80) = v110;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v260 = 0;
      unint64_t v261 = 0xE000000000000000;
      _StringGuts.grow(_:)(105);
      v112._uint64_t countAndFlagsBits = 0xD000000000000067;
      v112._object = (void *)0x80000001004E3E90;
      String.append(_:)(v112);
      id v113 = [v70 URL];
      if (v113)
      {
        uint64_t v114 = v113;
        id v115 = v242;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v116 = 0;
        uint64_t v118 = (uint64_t (*)(char *, uint64_t))v255;
        uint64_t v117 = v256;
        id v119 = v226;
      }
      else
      {
        uint64_t v116 = 1;
        uint64_t v118 = (uint64_t (*)(char *, uint64_t))v255;
        uint64_t v117 = v256;
        id v119 = v226;
        id v115 = v242;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v252 + 56))(v115, v116, 1, v106);
      v147._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v147);
      swift_bridgeObjectRelease();
      uint64_t v148 = v260;
      unint64_t v149 = v261;
      sub_10018B8B8();
      uint64_t v150 = swift_allocError();
      *uint64_t v151 = v148;
      v151[1] = v149;
      uint64_t v152 = (uint64_t)v245;
      *long long v245 = v150;
      swift_storeEnumTagMultiPayload();
      sub_100419AA8(v152);

      sub_100054B1C(v152, &qword_1005F6C80);
      return v118(v117, v106);
    }
  }
  else
  {
    uint64_t v93 = v71;
    static os_log_type_t.error.getter();
    uint64_t v94 = v229;
    sub_100054B78(&qword_1005F7720);
    uint64_t v95 = swift_allocObject();
    *(_OWORD *)(v95 + 16) = xmmword_10046D010;
    uint64_t v97 = *(void *)(v94 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid);
    uint64_t v96 = *(void *)(v94 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid + 8);
    *(void *)(v95 + 56) = &type metadata for String;
    *(void *)(v95 + 64) = sub_10004DA4C();
    *(void *)(v95 + 32) = v97;
    *(void *)(v95 + 40) = v96;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v260 = 0;
    unint64_t v261 = 0xE000000000000000;
    _StringGuts.grow(_:)(96);
    v98._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
    v98._object = (void *)0x80000001004E3DB0;
    String.append(_:)(v98);
    id v99 = [v70 URL];
    if (v99)
    {
      uint64_t v100 = v99;
      uint64_t v101 = v246;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v102 = 0;
      uint64_t v104 = (uint64_t (*)(char *, uint64_t))v255;
      uint64_t v103 = v256;
      id v105 = v226;
    }
    else
    {
      uint64_t v102 = 1;
      uint64_t v104 = (uint64_t (*)(char *, uint64_t))v255;
      uint64_t v103 = v256;
      id v105 = v226;
      uint64_t v101 = v246;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v252 + 56))(v101, v102, 1, v93);
    v141._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v141);
    swift_bridgeObjectRelease();
    uint64_t v142 = v260;
    unint64_t v143 = v261;
    sub_10018B8B8();
    uint64_t v144 = swift_allocError();
    *uint64_t v145 = v142;
    v145[1] = v143;
    uint64_t v146 = (uint64_t)v247;
    void *v247 = v144;
    swift_storeEnumTagMultiPayload();
    sub_100419AA8(v146);

    sub_100054B1C(v146, &qword_1005F6C80);
    return v104(v103, v93);
  }
}