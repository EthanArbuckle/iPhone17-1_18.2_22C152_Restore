void sub_10041B81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  void *v4;
  uint64_t vars8;

  sub_100050358(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_input), *(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_input + 8));
  v1 = v0 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_source;
  v2 = type metadata accessor for URL();
  v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_origin, v2);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_log);
}

uint64_t sub_10041BA18()
{
  return type metadata accessor for ValidateOperation(0);
}

uint64_t type metadata accessor for ValidateOperation(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_10060A2A0);
}

uint64_t sub_10041BA40()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10041BB00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_input;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts17ValidateOperation_input);
  *(void *)a1 = v3;
  char v4 = *(unsigned char *)(v2 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  return sub_10005036C(v3, v4);
}

uint64_t type metadata accessor for ValidateOperation.Result(uint64_t a1)
{
  return sub_10004F778(a1, qword_10060A348);
}

uint64_t sub_10041BB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ValidateOperation.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10041BBA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ValidateOperation.Result(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10041BC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F6C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10041BC68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for URL();
    v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_10041BD50(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10041BDC8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_10041BE60(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_10041BEFC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_10041BF78(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10041C004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041C018);
}

uint64_t sub_10041C018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10041C0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041C0DC);
}

uint64_t sub_10041C0DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10041C184()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10041C21C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)type metadata accessor for ShowOffer();
  v99 = (void (**)(char *, id))*(v2 - 1);
  id v100 = v2;
  __chkstk_darwin(v2);
  v98 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for EpisodeOffer();
  uint64_t v97 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  v93 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  v96 = (char *)&v89 - v11;
  __chkstk_darwin(v10);
  v13 = (char *)&v89 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v103 = *(void *)(v14 - 8);
  v104 = (void *)v14;
  uint64_t v15 = __chkstk_darwin(v14);
  v92 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  v95 = (char *)&v89 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v94 = (char *)&v89 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v89 - v21;
  uint64_t v23 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v102 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  v101 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t result = __chkstk_darwin(v25 - 8);
  v28 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + 16)) {
    return result;
  }
  uint64_t v105 = *(void *)(v0 + 16);
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v0 + 24)) {
    return result;
  }
  uint64_t v90 = v23;
  swift_retain();
  swift_retain();
  uint64_t v29 = ContextActionsConfiguration.objectGraph.getter();
  swift_release();
  if (!*(void *)(v0 + 24)) {
    goto LABEL_8;
  }
  uint64_t v91 = v29;
  swift_retain();
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  swift_release();
  uint64_t v30 = type metadata accessor for PresentationSource();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v28, 1, v30))
  {
    swift_release();
    swift_release();
    v31 = (uint64_t *)&unk_100605DC0;
    goto LABEL_6;
  }
  v33 = (void *)PresentationSource.viewController.getter();
  sub_100054B1C((uint64_t)v28, (uint64_t *)&unk_100605DC0);
  if (!v33)
  {
LABEL_8:
    swift_release();
    return swift_release();
  }
  unint64_t v35 = *(void *)(v105 + 16);
  uint64_t v34 = *(void *)(v105 + 24);
  unsigned __int8 v36 = *(unsigned char *)(v105 + 32);
  switch(v36)
  {
    case 1u:
      if (*(void *)(v35 + 16))
      {
        uint64_t v45 = v97;
        (*(void (**)(char *, unint64_t, uint64_t))(v97 + 16))(v6, v35 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80)), v4);
        v46 = v98;
        EpisodeOffer.showOffer.getter();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v4);
        ShowOffer.storeUrl.getter();
        v99[1](v46, v100);
        uint64_t v48 = v103;
        v47 = v104;
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v103 + 48))(v13, 1, v104) != 1)
        {
          (*(void (**)(char *, char *, void *))(v48 + 32))(v22, v13, v47);
          sub_100056D54(v0 + 32, (uint64_t)v106);
          id v100 = v108;
          sub_100041A98(v106, v107);
          uint64_t v49 = v48;
          v51 = v101;
          uint64_t v50 = v102;
          uint64_t v52 = v90;
          (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v105 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v90);
          dispatch thunk of EpisodeControllerProtocol.presentStorePage(asPartOf:for:from:presentationHint:suppressMetrics:)();
          swift_release();

          swift_release();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
          (*(void (**)(char *, void *))(v49 + 8))(v22, v104);
          return sub_10004D2D8((uint64_t)v106);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, void *))(v103 + 56))(v13, 1, 1, v104);
      }
      swift_release();

      swift_release();
      v31 = (uint64_t *)&unk_1005F7750;
      uint64_t v32 = (uint64_t)v13;
      return sub_100054B1C(v32, v31);
    case 2u:
      uint64_t v53 = v35 & 0xFFFFFFFFFFFFFF8;
      if (v35 >> 62)
      {
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v54 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v54)
        {
LABEL_21:
          if ((v35 & 0xC000000000000001) != 0)
          {
            id v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_24;
          }
          if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v55 = *(id *)(v35 + 32);
LABEL_24:
            v56 = v55;
            id v100 = v33;
            sub_1001DCDF8(v35, v34, 2u);
            id v57 = [v56 podcastStoreId];

            id v58 = [self podcastUrlForStoreId:v57];
            if (v58)
            {
              v59 = v58;
              v60 = v95;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v61 = v103;
              v62 = v104;
              v63 = *(void (**)(char *, char *, void *))(v103 + 32);
              v28 = v96;
              v63(v96, v60, v104);
              (*(void (**)(char *, void, uint64_t, void *))(v61 + 56))(v28, 0, 1, v62);
              if ((*(unsigned int (**)(char *, uint64_t, void *))(v61 + 48))(v28, 1, v62) != 1)
              {
                v63(v94, v28, v62);
                sub_100056D54(v1 + 32, (uint64_t)v106);
                v99 = (void (**)(char *, id))v108;
                sub_100041A98(v106, v107);
                v65 = v101;
                uint64_t v64 = v102;
                uint64_t v66 = v90;
                (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v105 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v90);
                id v67 = v100;
                dispatch thunk of EpisodeControllerProtocol.presentStorePage(asPartOf:for:from:presentationHint:suppressMetrics:)();
                swift_release();

                swift_release();
                (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
                (*(void (**)(char *, void *))(v61 + 8))(v94, v62);
                return sub_10004D2D8((uint64_t)v106);
              }
            }
            else
            {
              v28 = v96;
              (*(void (**)(char *, uint64_t, uint64_t, void *))(v103 + 56))(v96, 1, 1, v104);
            }
            swift_release();

            goto LABEL_46;
          }
          __break(1u);
          goto LABEL_59;
        }
      }
      uint64_t v86 = v35;
      uint64_t v87 = v34;
      unsigned __int8 v88 = 2;
      goto LABEL_53;
    case 3u:
      uint64_t v53 = *(void *)(v105 + 24);
      if (!(v35 >> 62))
      {
        uint64_t v68 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v68) {
          goto LABEL_30;
        }
LABEL_52:
        uint64_t v86 = v35;
        uint64_t v87 = v53;
        unsigned __int8 v88 = 3;
LABEL_53:
        sub_1001DCDF8(v86, v87, v88);
LABEL_54:
        swift_release();

        return swift_release();
      }
      swift_bridgeObjectRetain();
      if (!_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_52;
      }
LABEL_30:
      if ((v35 & 0xC000000000000001) != 0)
      {
LABEL_59:
        id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_33;
      }
      if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_61;
      }
      id v69 = *(id *)(v35 + 32);
LABEL_33:
      v70 = v69;
      sub_1001DCDF8(v35, v53, 3u);
      v71 = (void *)MPCPlayerResponseItem.podcastEpisode.getter();

      if (!v71) {
        goto LABEL_54;
      }
      id v72 = [v71 podcast];

      if (!v72) {
        goto LABEL_54;
      }
      uint64_t v73 = MPModelObject.adamID.getter();
      char v75 = v74;

      if (v75) {
        goto LABEL_54;
      }
      if (v73 < 0)
      {
LABEL_61:
        __break(1u);
        JUMPOUT(0x10041CFC8);
      }
      id v76 = [self podcastUrlForStoreId:v73];
      uint64_t v78 = v103;
      v77 = v104;
      if (v76)
      {
        v79 = v76;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        v80 = *(void (**)(void))(v78 + 32);
        v28 = v93;
        v80();
        (*(void (**)(char *, void, uint64_t, void *))(v78 + 56))(v28, 0, 1, v77);
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v78 + 48))(v28, 1, v77) != 1)
        {
          ((void (*)(char *, char *, void *))v80)(v92, v28, v77);
          sub_100056D54(v1 + 32, (uint64_t)v106);
          id v100 = v108;
          sub_100041A98(v106, v107);
          uint64_t v81 = v78;
          v83 = v101;
          uint64_t v82 = v102;
          uint64_t v84 = v90;
          (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v105 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v90);
          v85 = v92;
          dispatch thunk of EpisodeControllerProtocol.presentStorePage(asPartOf:for:from:presentationHint:suppressMetrics:)();
          swift_release();

          swift_release();
          (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
          (*(void (**)(char *, void *))(v81 + 8))(v85, v104);
          return sub_10004D2D8((uint64_t)v106);
        }
      }
      else
      {
        v28 = v93;
        (*(void (**)(char *, uint64_t, uint64_t, void *))(v103 + 56))(v93, 1, 1, v104);
      }
      swift_release();

LABEL_46:
      swift_release();
      v31 = (uint64_t *)&unk_1005F7750;
LABEL_6:
      uint64_t v32 = (uint64_t)v28;
      return sub_100054B1C(v32, v31);
    default:
      sub_1001DCD9C(*(void *)(v105 + 16), *(void *)(v105 + 24), *(unsigned char *)(v105 + 32));
      uint64_t v37 = sub_10040241C((void *)v35, v34, v36);
      uint64_t v38 = v34;
      v39 = (void *)v37;
      sub_1001DCDF8(v35, v38, v36);
      if (!v39) {
        goto LABEL_54;
      }
      id v40 = [v39 podcast];

      if (!v40) {
        goto LABEL_54;
      }
      id v41 = [v40 uuid];

      if (!v41) {
        goto LABEL_54;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100056D54(v1 + 32, (uint64_t)v106);
      v104 = v108;
      sub_100041A98(v106, v107);
      v43 = v101;
      uint64_t v42 = v102;
      uint64_t v44 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v105 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v90);
      dispatch thunk of EpisodeControllerProtocol.presentShowPage(asPartOf:for:from:presentationHint:suppressMetrics:)();
      swift_release();
      swift_bridgeObjectRelease();

      swift_release();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
      return sub_10004D2D8((uint64_t)v106);
  }
}

BOOL sub_10041CFD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for InteractionContext();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    dispatch thunk of ContextActionsConfiguration.context.getter();
    swift_release();
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v9 = InteractionContext.Page.isShowPage.getter();
    sub_1001B4BB0((uint64_t)v4);
    BOOL result = 0;
    uint64_t v11 = *(void *)(v1 + 16);
    if (!v11 || (v9 & 1) != 0) {
      return result;
    }
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 16);
    if (!v11) {
      return 0;
    }
  }
  unint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v11 + 24);
  switch(*(unsigned char *)(v11 + 32))
  {
    case 2:
      uint64_t v15 = v12 & 0xFFFFFFFFFFFFFF8;
      if (!(v12 >> 62)) {
        goto LABEL_12;
      }
      sub_1001DCD9C(*(void *)(v11 + 16), *(void *)(v11 + 24), 2u);
      swift_retain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v17 = v12;
      uint64_t v18 = v13;
      unsigned __int8 v19 = 2;
      goto LABEL_19;
    case 3:
      uint64_t v15 = v12 & 0xFFFFFFFFFFFFFF8;
      if (v12 >> 62)
      {
        sub_1001DCD9C(*(void *)(v11 + 16), *(void *)(v11 + 24), 3u);
        swift_retain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v17 = v12;
        uint64_t v18 = v13;
        unsigned __int8 v19 = 3;
LABEL_19:
        sub_1001DCDF8(v17, v18, v19);
        swift_release();
      }
      else
      {
LABEL_12:
        uint64_t v16 = *(void *)(v15 + 16);
      }
      BOOL v14 = v16 == 1;
      break;
    default:
      BOOL v14 = *(void *)(v12 + 16) == 1;
      break;
  }
  return v14;
}

uint64_t sub_10041D248()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 32);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts34EpisodePresentPodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10041D300()
{
  return type metadata accessor for EpisodePresentPodcastContextAction();
}

uint64_t type metadata accessor for EpisodePresentPodcastContextAction()
{
  uint64_t result = qword_10060A3A8;
  if (!qword_10060A3A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10041D354()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10041D3FC()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0x80000001004D6970;
  v1._uint64_t countAndFlagsBits = 0x6853206F74206F47;
  v1._object = (void *)0xEA0000000000776FLL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0xD000000000000021;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10041D4AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts34EpisodePresentPodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_10041D520@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.episodeGoToShow(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_10041D610(uint64_t a1)
{
  uint64_t result = sub_10041D698((unint64_t *)&unk_100608BC0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10041D654(uint64_t a1)
{
  uint64_t result = sub_10041D698(&qword_1005FAB40);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10041D698(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EpisodePresentPodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CarPlayDeviceInfo(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CarPlayDeviceInfo(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CarPlayDeviceInfo()
{
  return &type metadata for CarPlayDeviceInfo;
}

uint64_t sub_10041D744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v79 = a4;
  uint64_t v80 = a5;
  uint64_t v55 = a3;
  uint64_t v78 = a1;
  uint64_t v7 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_1006053F0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  uint64_t v67 = v11;
  __chkstk_darwin(v10);
  v56 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_10060A450);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v69 = v13;
  uint64_t v70 = v14;
  __chkstk_darwin(v13);
  uint64_t v61 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_100605400);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v71 = v16;
  uint64_t v72 = v17;
  __chkstk_darwin(v16);
  uint64_t v68 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100054B78(&qword_10060A460);
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  id v57 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100054B78(&qword_10060A468);
  uint64_t v75 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v73 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v81[0] = sub_10041E130(a2);
  uint64_t v58 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v82 = (id)static OS_dispatch_queue.uiAssetPreparationQueue.getter();
  uint64_t v64 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v21 = *(void *)(v64 - 8);
  v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v65 = v21 + 56;
  v59 = v9;
  v63(v9, 1, 1, v64);
  sub_100054B78((uint64_t *)&unk_100605430);
  sub_100044200((unint64_t *)&unk_10060A470, (uint64_t *)&unk_100605430);
  unint64_t v60 = sub_100059BE0();
  Publisher.receive<A>(on:options:)();
  sub_100054B1C((uint64_t)v9, &qword_1005F9F20);

  swift_release();
  sub_100056D54(a3, (uint64_t)v81);
  uint64_t v22 = swift_allocObject();
  sub_100042FC4(v81, v22 + 16);
  long long v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)a2;
  *(_OWORD *)(v22 + 72) = v23;
  *(_OWORD *)(v22 + 88) = *(_OWORD *)(a2 + 32);
  *(void *)(v22 + 104) = *(void *)(a2 + 48);
  static Subscribers.Demand.unlimited.getter();
  sub_100054B78((uint64_t *)&unk_10060A480);
  sub_100054B78((uint64_t *)&unk_100605440);
  sub_100044200((unint64_t *)&unk_10060A490, (uint64_t *)&unk_1006053F0);
  uint64_t v24 = v57;
  sub_100044200((unint64_t *)&unk_100605450, (uint64_t *)&unk_100605440);
  uint64_t v25 = v61;
  uint64_t v26 = v66;
  uint64_t v27 = v56;
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v27, v26);
  sub_100056D54(v55, (uint64_t)v81);
  uint64_t v28 = swift_allocObject();
  sub_100042FC4(v81, v28 + 16);
  long long v29 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v28 + 56) = *(_OWORD *)a2;
  *(_OWORD *)(v28 + 72) = v29;
  *(_OWORD *)(v28 + 88) = *(_OWORD *)(a2 + 32);
  *(void *)(v28 + 104) = *(void *)(a2 + 48);
  sub_100054B78((uint64_t *)&unk_10060A4A0);
  sub_100044200((unint64_t *)&unk_100605460, (uint64_t *)&unk_10060A450);
  uint64_t v30 = v62;
  sub_100044200((unint64_t *)&unk_10060A4B0, (uint64_t *)&unk_10060A4A0);
  uint64_t v32 = v68;
  uint64_t v31 = v69;
  Publisher.catch<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v25, v31);
  *(void *)&v81[0] = static OS_dispatch_queue.main.getter();
  uint64_t v33 = (uint64_t)v59;
  v63(v59, 1, 1, v64);
  sub_100044200(&qword_100605470, (uint64_t *)&unk_100605400);
  uint64_t v34 = v71;
  Publisher.receive<A>(on:options:)();
  sub_100054B1C(v33, &qword_1005F9F20);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v32, v34);
  id v35 = [v30 title];
  if (v35)
  {
    unsigned __int8 v36 = v35;
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v39 = 0;
  }
  id v40 = [v30 album];
  if (v40)
  {
    id v41 = v40;
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;
  }
  else
  {
    uint64_t v42 = 0;
    uint64_t v44 = 0;
  }
  unsigned __int8 v45 = [v30 isExplicit];
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v37;
  *(void *)(v46 + 24) = v39;
  *(void *)(v46 + 32) = v42;
  *(void *)(v46 + 40) = v44;
  *(unsigned char *)(v46 + 48) = v45;
  uint64_t v47 = v79;
  uint64_t v48 = v80;
  *(void *)(v46 + 56) = v78;
  *(void *)(v46 + 64) = v47;
  *(void *)(v46 + 72) = v48;
  sub_10004D29C(0, (unint64_t *)&qword_1005FD240);
  sub_100044200(&qword_100605478, &qword_10060A460);
  swift_retain();
  uint64_t v49 = v73;
  uint64_t v50 = v76;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v24, v50);
  sub_100044200((unint64_t *)&unk_10060A4C0, &qword_10060A468);
  uint64_t v51 = v77;
  uint64_t v52 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v49, v51);
  return v52;
}

id sub_10041E078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!a2)
  {
    NSString v7 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v8 = 0;
    goto LABEL_6;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithText:v7 detailText:v8 image:a5];

  return v9;
}

uint64_t sub_10041E130(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v61 = a1;
  uint64_t v3 = sub_100054B78((uint64_t *)&unk_1006054E0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  uint64_t v59 = v4;
  __chkstk_darwin(v3);
  id v57 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ArtworkCrop();
  __chkstk_darwin(v6 - 8);
  v53[1] = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for ArtworkModel();
  __chkstk_darwin(v64);
  v53[2] = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100054B78(&qword_10060A510);
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78(&qword_1006054F0);
  uint64_t v56 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (void (**)(char *, uint64_t))((char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v60 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v53 - v21;
  uint64_t v23 = sub_100054B78(&qword_10060A518);
  v62 = *(void (***)(char *, uint64_t))(v23 - 8);
  uint64_t v63 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = [v2 podcastUuid];
  if (!v26)
  {
    uint64_t v37 = v60;
    v53[0] = v10;
    v62 = v13;
    uint64_t v63 = v11;
    id v38 = [v2 artworkUrl];
    if (v38)
    {
      uint64_t v39 = v38;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      id v40 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      id v41 = v20;
      uint64_t v42 = v17;
      v40(v16, v41, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v16, 0, 1, v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v16, 1, v17) != 1)
      {
        v40(v22, v16, v17);
        URL.path.getter();
        long long v65 = xmmword_100479150;
        long long v66 = 0u;
        memset(v67, 0, sizeof(v67));
        static ArtworkCrop.boundingBox.getter();
        static ArtworkFormat.preferredFormat.getter();
        ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)();
        uint64_t v43 = v53[0];
        Just.init(_:)();
        sub_100054B78(&qword_100603F70);
        uint64_t v44 = (char *)v62;
        uint64_t v45 = v55;
        Just.setFailureType<A>(to:)();
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v43, v45);
        sub_100044200((unint64_t *)&unk_100605510, &qword_1006054F0);
        uint64_t v46 = v63;
        uint64_t v36 = Publisher.eraseToAnyPublisher()();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v44, v46);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v42);
        return v36;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v16, 1, 1, v17);
    }
    sub_100054B1C((uint64_t)v16, (uint64_t *)&unk_1005F7750);
    uint64_t v47 = type metadata accessor for LibraryImageProviderError();
    sub_10036D824();
    uint64_t v48 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, enum case for LibraryImageProviderError.failedToPrepareImage(_:), v47);
    *(void *)&long long v65 = v48;
    sub_100054B78(&qword_100603F70);
    uint64_t v50 = v57;
    Fail.init(error:)();
    sub_100044200(&qword_100605508, (uint64_t *)&unk_1006054E0);
    uint64_t v51 = v58;
    uint64_t v36 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v50, v51);
    return v36;
  }
  uint64_t v27 = v26;
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  id v31 = [self sharedInstance];
  id v32 = [v31 mainQueueContext];

  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v28;
  *(void *)(v33 + 24) = v30;
  sub_100054B78(&qword_1005F76A0);
  uint64_t v34 = NSManagedObjectContext.performAndPublish<A>(_:)();

  swift_release();
  *(void *)&long long v65 = v34;
  sub_100054B78((uint64_t *)&unk_10060A520);
  sub_100044200((unint64_t *)&unk_100605E60, (uint64_t *)&unk_10060A520);
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_100044200((unint64_t *)&unk_10060A530, &qword_10060A518);
  uint64_t v35 = v63;
  uint64_t v36 = Publisher.eraseToAnyPublisher()();
  v62[1](v25, v35);
  return v36;
}

uint64_t sub_10041EA0C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v27 = a1;
  id v32 = a3;
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ArtworkModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ArtworkRequest();
  uint64_t v13 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_1006054D0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v30 = v16;
  uint64_t v31 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a2[3];
  uint64_t v26 = a2[4];
  sub_100041A98(a2, v20);
  sub_100313288(v27, (uint64_t)v12);
  uint64_t v21 = type metadata accessor for CropCode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
  static Logger.artwork.getter();
  static os_log_type_t.info.getter();
  SignpostAndLogTrace(domain:level:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v29);
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
  uint64_t v22 = dispatch thunk of ImageProvider.load(artwork:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  uint64_t v33 = v22;
  sub_100054B78((uint64_t *)&unk_100605E80);
  sub_100054B78((uint64_t *)&unk_10060A480);
  sub_100044200((unint64_t *)&unk_1006054B0, (uint64_t *)&unk_100605E80);
  Publisher.map<A>(_:)();
  swift_release();
  sub_100044200((unint64_t *)&unk_10060A500, (uint64_t *)&unk_1006054D0);
  uint64_t v23 = v30;
  uint64_t v24 = Publisher.eraseToAnyPublisher()();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v19, v23);
  *id v32 = v24;
  return result;
}

uint64_t sub_10041EE50()
{
  sub_10004D2D8(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10041EE88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10041EA0C(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_10041EE94@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100605490);
  uint64_t v41 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v38 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_10060A4D0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v40 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100054B78((uint64_t *)&unk_1006054A0);
  uint64_t v11 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  static Logger.artwork.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v32 = v9;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v33 = v8;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v31 = v11;
    uint64_t v43 = v16;
    uint64_t v44 = v21;
    uint64_t v34 = a4;
    *(_DWORD *)uint64_t v20 = 136315138;
    v30[1] = v20 + 4;
    swift_errorRetain();
    sub_100054B78(&qword_100603F70);
    uint64_t v22 = String.init<A>(describing:)();
    uint64_t v43 = sub_10004B974(v22, v23, &v44);
    a4 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v9 = v32;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to load artwork, falling back to placeholder: %s", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v11 = v31;
    swift_slowDealloc();
    uint64_t v8 = v33;
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v35);
  sub_100041A98(v36, v36[3]);
  uint64_t v44 = dispatch thunk of ImageProvider.placeholder(for:)();
  sub_100054B78((uint64_t *)&unk_100605E80);
  sub_100044200((unint64_t *)&unk_1006054B0, (uint64_t *)&unk_100605E80);
  uint64_t v24 = v38;
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)();
  swift_release();
  sub_100054B78((uint64_t *)&unk_10060A480);
  sub_100044200((unint64_t *)&unk_10060A4E0, (uint64_t *)&unk_100605490);
  uint64_t v25 = v40;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v6);
  uint64_t v44 = 0;
  sub_100044200((unint64_t *)&unk_1006054C0, (uint64_t *)&unk_10060A4D0);
  uint64_t v26 = v39;
  Publisher.replaceError(with:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v25, v8);
  sub_100044200((unint64_t *)&unk_10060A4F0, (uint64_t *)&unk_1006054A0);
  uint64_t v27 = v42;
  uint64_t v28 = Publisher.eraseToAnyPublisher()();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v26, v27);
  *a4 = v28;
  return result;
}

uint64_t sub_10041F46C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10041EE94(a1, (void *)(v2 + 16), v2 + 56, a2);
}

uint64_t sub_10041F478(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  if (v7)
  {
    swift_errorRetain();
    static Logger.artwork.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v15 = v7;
      uint64_t v16 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      v14[1] = v10 + 4;
      swift_errorRetain();
      sub_100054B78(&qword_100603F70);
      uint64_t v12 = String.init<A>(describing:)();
      uint64_t v15 = sub_10004B974(v12, v13, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "CRITICAL FAILURE: Unable to load placeholder image: %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

void sub_10041F6C0(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void **a9@<X8>, uint64_t a10)
{
  uint64_t v38 = a7;
  int v37 = a6;
  uint64_t v36 = a9;
  uint64_t v39 = a10;
  uint64_t v40 = a8;
  uint64_t v15 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  sub_10004D29C(0, (unint64_t *)&qword_1005FD240);
  id v23 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = sub_10041E078(a2, a3, a4, a5, v22);
  uint64_t v25 = v36;
  *uint64_t v36 = v24;
  [v24 setExplicitContent:v37 & 1];
  *(void *)uint64_t v21 = v38;
  v21[8] = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  sub_1001BF8D0((uint64_t)v21, (uint64_t)v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  uint64_t v27 = (uint64_t)&v26[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934((uint64_t)v17, v27);
  swift_endAccess();
  v26[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 9;
  sub_10004D29C(0, &qword_1005F88B0);
  uint64_t v28 = NSString.init(stringLiteral:)();
  uint64_t v29 = v26;
  sub_1001BFA4C((uint64_t)v28, (uint64_t)v26);

  uint64_t v30 = *v25;
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v39;
  *(void *)(v31 + 16) = v40;
  *(void *)(v31 + 24) = v32;
  aBlock[4] = sub_1001BFA88;
  aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BF99C;
  aBlock[3] = &unk_10056A830;
  uint64_t v33 = _Block_copy(aBlock);
  id v34 = v30;
  swift_retain();
  swift_release();
  [v34 setHandler:v33];
  _Block_release(v33);
}

uint64_t sub_10041FA20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_10041FA68(void **a1@<X0>, void **a2@<X8>)
{
  sub_10041F6C0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), a2, *(void *)(v2 + 72));
}

uint64_t sub_10041FAA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10041FAD8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_10041FB38()
{
}

uint64_t AppDependency.wrappedValue.getter()
{
  return AppDependency.wrappedValue.getter();
}

uint64_t AppDependency.__allocating_init(key:manager:)()
{
  return AppDependency.__allocating_init(key:manager:)();
}

uint64_t AppDependencyManager.add<A>(key:dependency:)()
{
  return AppDependencyManager.add<A>(key:dependency:)();
}

uint64_t static AppDependencyManager.shared.getter()
{
  return static AppDependencyManager.shared.getter();
}

uint64_t type metadata accessor for AppDependencyManager()
{
  return type metadata accessor for AppDependencyManager();
}

uint64_t static AppEntityVisualState.primary.getter()
{
  return static AppEntityVisualState.primary.getter();
}

uint64_t type metadata accessor for AppEntityVisualState()
{
  return type metadata accessor for AppEntityVisualState();
}

uint64_t static AppIntent.openAppWhenRun.getter()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t static AppIntent.description.getter()
{
  return static AppIntent.description.getter();
}

uint64_t static AppIntent.parameterSummary.getter()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t static AppIntent.authenticationPolicy.getter()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t type metadata accessor for IntentDialog()
{
  return type metadata accessor for IntentDialog();
}

uint64_t static IntentResult.result<>()()
{
  return static IntentResult.result<>()();
}

uint64_t IntentParameter.wrappedValue.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t IntentParameter.wrappedValue.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t type metadata accessor for InputConnectionBehavior()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t static CharacterSet.alphanumerics.getter()
{
  return static CharacterSet.alphanumerics.getter();
}

uint64_t static CharacterSet.urlQueryAllowed.getter()
{
  return static CharacterSet.urlQueryAllowed.getter();
}

NSCharacterSet __swiftcall CharacterSet._bridgeToObjectiveC()()
{
  return (NSCharacterSet)CharacterSet._bridgeToObjectiveC()();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t CharacterSet.contains(_:)()
{
  return CharacterSet.contains(_:)();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

NSNotification __swiftcall Notification._bridgeToObjectiveC()()
{
  return (NSNotification)Notification._bridgeToObjectiveC()();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.name.getter()
{
  return Notification.name.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t URLQueryItem.name.getter()
{
  return URLQueryItem.name.getter();
}

uint64_t URLQueryItem.value.getter()
{
  return URLQueryItem.value.getter();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.queryItems.modify()
{
  return URLComponents.queryItems.modify();
}

uint64_t URLComponents.queryItems.getter()
{
  return URLComponents.queryItems.getter();
}

uint64_t URLComponents.queryItems.setter()
{
  return URLComponents.queryItems.setter();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.host.setter()
{
  return URLComponents.host.setter();
}

uint64_t URLComponents.scheme.setter()
{
  return URLComponents.scheme.setter();
}

uint64_t URLComponents.init(string:)()
{
  return URLComponents.init(string:)();
}

uint64_t URLComponents.playerTime.getter()
{
  return URLComponents.playerTime.getter();
}

uint64_t URLComponents.referenceTime.getter()
{
  return URLComponents.referenceTime.getter();
}

uint64_t URLComponents.init()()
{
  return URLComponents.init()();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t LocalizedError.helpAnchor.getter()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t LocalizedError.failureReason.getter()
{
  return LocalizedError.failureReason.getter();
}

uint64_t LocalizedError.recoverySuggestion.getter()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t AttributeScopes.FoundationAttributes.link.getter()
{
  return AttributeScopes.FoundationAttributes.link.getter();
}

uint64_t AttributeScopes.UIKitAttributes.font.getter()
{
  return AttributeScopes.UIKitAttributes.font.getter();
}

uint64_t AttributedString.subscript.setter()
{
  return AttributedString.subscript.setter();
}

uint64_t AttributedString.replaceSubrange<A, B>(_:with:)()
{
  return AttributedString.replaceSubrange<A, B>(_:with:)();
}

uint64_t type metadata accessor for AttributedString.FormattingOptions()
{
  return type metadata accessor for AttributedString.FormattingOptions();
}

uint64_t type metadata accessor for AttributedString.InterpolationOptions()
{
  return type metadata accessor for AttributedString.InterpolationOptions();
}

uint64_t AttributedString.init(localized:options:table:bundle:locale:comment:)()
{
  return AttributedString.init(localized:options:table:bundle:locale:comment:)();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

uint64_t AttributedString.init(_:attributes:)()
{
  return AttributedString.init(_:attributes:)();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t AttributeContainer.init()()
{
  return AttributeContainer.init()();
}

uint64_t type metadata accessor for AttributeContainer()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t dispatch thunk of PropertyListDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t PropertyListDecoder.init()()
{
  return PropertyListDecoder.init()();
}

uint64_t type metadata accessor for PropertyListDecoder()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t dispatch thunk of PropertyListEncoder.outputFormat.setter()
{
  return dispatch thunk of PropertyListEncoder.outputFormat.setter();
}

uint64_t dispatch thunk of PropertyListEncoder.encode<A>(_:)()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t PropertyListEncoder.init()()
{
  return PropertyListEncoder.init()();
}

uint64_t type metadata accessor for PropertyListEncoder()
{
  return type metadata accessor for PropertyListEncoder();
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return AttributeDynamicLookup.subscript.getter();
}

{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t LocalizedStringResource.init(stringLiteral:)()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t AttributedStringProtocol.range<A>(of:options:locale:)()
{
  return AttributedStringProtocol.range<A>(of:options:locale:)();
}

uint64_t NSFastEnumerationIterator.next()()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

Swift::Bool __swiftcall URL.isHLSPlaylist()()
{
  return URL.isHLSPlaylist()();
}

Swift::Bool __swiftcall URL.isPackagedMedia()()
{
  return URL.isPackagedMedia()();
}

uint64_t static URL.iOSGlobalPreferences.getter()
{
  return static URL.iOSGlobalPreferences.getter();
}

uint64_t static URL.iOSAutomaticallyDownloadPreferences.getter()
{
  return static URL.iOSAutomaticallyDownloadPreferences.getter();
}

uint64_t URL.description.getter()
{
  return URL.description.getter();
}

uint64_t URL.standardized.getter()
{
  return URL.standardized.getter();
}

uint64_t URL.pathExtension.getter()
{
  return URL.pathExtension.getter();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.pathComponents.getter()
{
  return URL.pathComponents.getter();
}

uint64_t URL.lastPathComponent.getter()
{
  return URL.lastPathComponent.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t URL.appendingPathExtension(_:)()
{
  return URL.appendingPathExtension(_:)();
}

uint64_t static URL.== infix(_:_:)()
{
  return static URL.== infix(_:_:)();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.host.getter()
{
  return URL.host.getter();
}

Swift::String __swiftcall URL.path(percentEncoded:)(Swift::Bool percentEncoded)
{
  uint64_t v1 = URL.path(percentEncoded:)(percentEncoded);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.scheme.getter()
{
  return URL.scheme.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t URL.appending(queryItems:)()
{
  return URL.appending(queryItems:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.write(to:options:)()
{
  return Data.write(to:options:)();
}

uint64_t Date.init(timeIntervalSinceReferenceDate:)()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t static Date.timeIntervalSinceReferenceDate.getter()
{
  return static Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t Date.yearString.getter()
{
  return Date.yearString.getter();
}

Swift::String __swiftcall Date.verboseDisplayString()()
{
  uint64_t v0 = Date.verboseDisplayString()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t Date.friendlyDisplayString.getter()
{
  return Date.friendlyDisplayString.getter();
}

Swift::String __swiftcall Date.verboseDisplayStringWithoutTime()()
{
  uint64_t v0 = Date.verboseDisplayStringWithoutTime()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.lessVerboseDisplayStringWithoutTime()()
{
  uint64_t v0 = Date.lessVerboseDisplayStringWithoutTime()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static Date.distantPast.getter()
{
  return static Date.distantPast.getter();
}

uint64_t Date.ISO8601Format(_:)()
{
  return Date.ISO8601Format(_:)();
}

uint64_t static Date.distantFuture.getter()
{
  return static Date.distantFuture.getter();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator()
{
  return type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle.DateSeparator()
{
  return type metadata accessor for Date.ISO8601FormatStyle.DateSeparator();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator()
{
  return type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator();
}

uint64_t Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)()
{
  return Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator()
{
  return type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle()
{
  return type metadata accessor for Date.ISO8601FormatStyle();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return Date.addingTimeInterval(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t static Date.+ infix(_:_:)()
{
  return static Date.+ infix(_:_:)();
}

uint64_t Date.init(timeIntervalSinceNow:)()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t static Date.== infix(_:_:)()
{
  return static Date.== infix(_:_:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.distance(to:)()
{
  return Date.distance(to:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t type metadata accessor for Calendar.Identifier()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t Calendar.component(_:from:)()
{
  return Calendar.component(_:from:)();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

void __swiftcall IndexSet._bridgeToObjectiveC()(NSIndexSet *__return_ptr retstr)
{
}

uint64_t IndexSet.init(integer:)()
{
  return IndexSet.init(integer:)();
}

uint64_t type metadata accessor for IndexSet()
{
  return type metadata accessor for IndexSet();
}

uint64_t TimeZone.init(secondsFromGMT:)()
{
  return TimeZone.init(secondsFromGMT:)();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.init(row:section:)()
{
  return IndexPath.init(row:section:)();
}

uint64_t IndexPath.row.getter()
{
  return IndexPath.row.getter();
}

uint64_t IndexPath.section.getter()
{
  return IndexPath.section.getter();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t static Selector.== infix(_:_:)()
{
  return static Selector.== infix(_:_:)();
}

uint64_t PodcastsIntentDispatcher.init(asPartOf:intentDispatcher:timeout:instrumentation:)()
{
  return PodcastsIntentDispatcher.init(asPartOf:intentDispatcher:timeout:instrumentation:)();
}

uint64_t type metadata accessor for PodcastsIntentDispatcher()
{
  return type metadata accessor for PodcastsIntentDispatcher();
}

uint64_t type metadata accessor for PodcastsUIAppIntentsPackage()
{
  return type metadata accessor for PodcastsUIAppIntentsPackage();
}

uint64_t type metadata accessor for ModalSheet.Action.ActionType()
{
  return type metadata accessor for ModalSheet.Action.ActionType();
}

uint64_t ModalSheet.Action.init(title:type:handler:)()
{
  return ModalSheet.Action.init(title:type:handler:)();
}

uint64_t type metadata accessor for ModalSheet.Action()
{
  return type metadata accessor for ModalSheet.Action();
}

uint64_t dispatch thunk of ModalSheet.dismiss()()
{
  return dispatch thunk of ModalSheet.dismiss()();
}

uint64_t ShowEntity.ShowEntityQuery.init()()
{
  return ShowEntity.ShowEntityQuery.init()();
}

uint64_t type metadata accessor for ShowEntity.ShowEntityQuery()
{
  return type metadata accessor for ShowEntity.ShowEntityQuery();
}

uint64_t ShowEntity.preferredIdentifier()()
{
  return ShowEntity.preferredIdentifier()();
}

uint64_t ShowEntity.init(model:)()
{
  return ShowEntity.init(model:)();
}

uint64_t ShowEntity.adamID.getter()
{
  return ShowEntity.adamID.getter();
}

uint64_t type metadata accessor for ShowEntity()
{
  return type metadata accessor for ShowEntity();
}

uint64_t AppLocation.navigationTab.getter()
{
  return AppLocation.navigationTab.getter();
}

uint64_t static AssetCaches.shared.getter()
{
  return static AssetCaches.shared.getter();
}

uint64_t AssetCaches.artwork.getter()
{
  return AssetCaches.artwork.getter();
}

uint64_t type metadata accessor for AssetCaches()
{
  return type metadata accessor for AssetCaches();
}

uint64_t type metadata accessor for LazyJSStack()
{
  return type metadata accessor for LazyJSStack();
}

uint64_t SearchAction.init(origin:term:url:hintIndex:activatesSearchBar:actionMetrics:)()
{
  return SearchAction.init(origin:term:url:hintIndex:activatesSearchBar:actionMetrics:)();
}

uint64_t type metadata accessor for SearchAction()
{
  return type metadata accessor for SearchAction();
}

uint64_t ChannelEntity.init(model:)()
{
  return ChannelEntity.init(model:)();
}

uint64_t type metadata accessor for ChannelEntity()
{
  return type metadata accessor for ChannelEntity();
}

uint64_t EpisodeEntity.init(mediaObject:)()
{
  return EpisodeEntity.init(mediaObject:)();
}

uint64_t EpisodeEntity.preferredIdentifier()()
{
  return EpisodeEntity.preferredIdentifier()();
}

uint64_t EpisodeEntity.episodeStateIdentifier.getter()
{
  return EpisodeEntity.episodeStateIdentifier.getter();
}

uint64_t EpisodeEntity.transcriptRequestInformation.getter()
{
  return EpisodeEntity.transcriptRequestInformation.getter();
}

uint64_t EpisodeEntity.uuid.getter()
{
  return EpisodeEntity.uuid.getter();
}

uint64_t EpisodeEntity.init(model:)()
{
  return EpisodeEntity.init(model:)();
}

uint64_t EpisodeEntity.adamID.getter()
{
  return EpisodeEntity.adamID.getter();
}

uint64_t type metadata accessor for EpisodeEntity()
{
  return type metadata accessor for EpisodeEntity();
}

uint64_t dispatch thunk of ImageProvider.placeholder(for:)()
{
  return dispatch thunk of ImageProvider.placeholder(for:)();
}

uint64_t dispatch thunk of ImageProvider.load(artwork:)()
{
  return dispatch thunk of ImageProvider.load(artwork:)();
}

uint64_t dispatch thunk of ImageProvider.prefetch(artwork:)()
{
  return dispatch thunk of ImageProvider.prefetch(artwork:)();
}

uint64_t ImageProvider.load(artwork:receiveImage:receiveCompletion:)()
{
  return ImageProvider.load(artwork:receiveImage:receiveCompletion:)();
}

uint64_t ImageProvider.prefetch(artwork:)()
{
  return ImageProvider.prefetch(artwork:)();
}

uint64_t StationEntity.uuid.getter()
{
  return StationEntity.uuid.getter();
}

uint64_t StationEntity.init(model:)()
{
  return StationEntity.init(model:)();
}

uint64_t StationEntity.objectID.getter()
{
  return StationEntity.objectID.getter();
}

uint64_t type metadata accessor for StationEntity()
{
  return type metadata accessor for StationEntity();
}

uint64_t ShelfIDBuilder.addingAttribute(_:named:)()
{
  return ShelfIDBuilder.addingAttribute(_:named:)();
}

Swift::String __swiftcall ShelfIDBuilder.build()()
{
  uint64_t v0 = ShelfIDBuilder.build()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t ShelfIDBuilder.init(named:)()
{
  return ShelfIDBuilder.init(named:)();
}

uint64_t type metadata accessor for PageRenderEvent()
{
  return type metadata accessor for PageRenderEvent();
}

uint64_t type metadata accessor for NowPlayingArtwork.Data()
{
  return type metadata accessor for NowPlayingArtwork.Data();
}

uint64_t PlayEpisodeIntent.episode.getter()
{
  return PlayEpisodeIntent.episode.getter();
}

uint64_t type metadata accessor for PlayEpisodeIntent()
{
  return type metadata accessor for PlayEpisodeIntent();
}

uint64_t PlayStationIntent.station.getter()
{
  return PlayStationIntent.station.getter();
}

uint64_t QueueModelSection.init(tracklistSection:)()
{
  return QueueModelSection.init(tracklistSection:)();
}

uint64_t type metadata accessor for QueueModelSection()
{
  return type metadata accessor for QueueModelSection();
}

Swift::Void __swiftcall SiriIntentDonator.beginObserving()()
{
}

uint64_t type metadata accessor for SiriIntentDonator()
{
  return type metadata accessor for SiriIntentDonator();
}

uint64_t InteractionContext.EpisodeCellType.showsEpisodeControls.getter()
{
  return InteractionContext.EpisodeCellType.showsEpisodeControls.getter();
}

uint64_t InteractionContext.Page.isRecentlyUnfollowedPage.getter()
{
  return InteractionContext.Page.isRecentlyUnfollowedPage.getter();
}

uint64_t InteractionContext.Page.isEpisodeDetailTranscriptsPage.getter()
{
  return InteractionContext.Page.isEpisodeDetailTranscriptsPage.getter();
}

uint64_t InteractionContext.Page.isShowPage.getter()
{
  return InteractionContext.Page.isShowPage.getter();
}

uint64_t InteractionContext.Page.isEpisodePage.getter()
{
  return InteractionContext.Page.isEpisodePage.getter();
}

uint64_t InteractionContext.Page.isUpNextSeeAll.getter()
{
  return InteractionContext.Page.isUpNextSeeAll.getter();
}

uint64_t InteractionContext.Page.isTranscriptView.getter()
{
  return InteractionContext.Page.isTranscriptView.getter();
}

uint64_t InteractionContext.Page.episodeListSettings.getter()
{
  return InteractionContext.Page.episodeListSettings.getter();
}

uint64_t InteractionContext.Page.isUnfollowedLibraryShow.getter()
{
  return InteractionContext.Page.isUnfollowedLibraryShow.getter();
}

uint64_t type metadata accessor for InteractionContext.Page()
{
  return type metadata accessor for InteractionContext.Page();
}

uint64_t static InteractionContext.View.== infix(_:_:)()
{
  return static InteractionContext.View.== infix(_:_:)();
}

uint64_t static InteractionContext.none.getter()
{
  return static InteractionContext.none.getter();
}

uint64_t InteractionContext.page.getter()
{
  return InteractionContext.page.getter();
}

uint64_t InteractionContext.view.getter()
{
  return InteractionContext.view.getter();
}

uint64_t static InteractionContext.Origin.== infix(_:_:)()
{
  return static InteractionContext.Origin.== infix(_:_:)();
}

uint64_t type metadata accessor for InteractionContext.Origin()
{
  return type metadata accessor for InteractionContext.Origin();
}

uint64_t InteractionContext.origin.getter()
{
  return InteractionContext.origin.getter();
}

uint64_t type metadata accessor for InteractionContext()
{
  return type metadata accessor for InteractionContext();
}

uint64_t OrderedTipProvider<>.init(providers:)()
{
  return OrderedTipProvider<>.init(providers:)();
}

uint64_t type metadata accessor for PageRenderActivity()
{
  return type metadata accessor for PageRenderActivity();
}

uint64_t dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(identifier:)()
{
  return dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(identifier:)();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hardQueueFirstItemContentID.getter()
{
  return dispatch thunk of PlaybackController.QueueController.hardQueueFirstItemContentID.getter();
}

uint64_t dispatch thunk of PlaybackController.QueueController.addToQueue(uuids:location:)()
{
  return dispatch thunk of PlaybackController.QueueController.addToQueue(uuids:location:)();
}

uint64_t dispatch thunk of PlaybackController.QueueController.addToQueue(adamIds:location:)()
{
  return dispatch thunk of PlaybackController.QueueController.addToQueue(adamIds:location:)();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter()
{
  return dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hasSoftQueue.getter()
{
  return dispatch thunk of PlaybackController.QueueController.hasSoftQueue.getter();
}

uint64_t dispatch thunk of PlaybackController.QueueController.playbackController.getter()
{
  return dispatch thunk of PlaybackController.QueueController.playbackController.getter();
}

uint64_t dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)()
{
  return dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)();
}

uint64_t PlaybackController.QueueController.updatePlayerIfNeededForMarking(playerItems:as:)()
{
  return PlaybackController.QueueController.updatePlayerIfNeededForMarking(playerItems:as:)();
}

uint64_t PlaybackController.QueueController.updatePlayerIfNeededForMarking(uuids:as:)()
{
  return PlaybackController.QueueController.updatePlayerIfNeededForMarking(uuids:as:)();
}

uint64_t PlaybackController.QueueController.updatePlayerIfNeededForMarking(adamIDs:as:)()
{
  return PlaybackController.QueueController.updatePlayerIfNeededForMarking(adamIDs:as:)();
}

uint64_t dispatch thunk of PlaybackController.queueController.getter()
{
  return dispatch thunk of PlaybackController.queueController.getter();
}

uint64_t dispatch thunk of PlaybackController.$isPlaying.getter()
{
  return dispatch thunk of PlaybackController.$isPlaying.getter();
}

uint64_t dispatch thunk of PlaybackController.$tracklist.getter()
{
  return dispatch thunk of PlaybackController.$tracklist.getter();
}

uint64_t type metadata accessor for PlaybackController.PlayerError()
{
  return type metadata accessor for PlaybackController.PlayerError();
}

uint64_t PlaybackController.currentTime.getter()
{
  return PlaybackController.currentTime.getter();
}

uint64_t type metadata accessor for PlaybackController.QueueCommand.Location()
{
  return type metadata accessor for PlaybackController.QueueCommand.Location();
}

uint64_t type metadata accessor for PlaybackController.QueueCommand()
{
  return type metadata accessor for PlaybackController.QueueCommand();
}

uint64_t dispatch thunk of PlaybackController.currentRoute.getter()
{
  return dispatch thunk of PlaybackController.currentRoute.getter();
}

uint64_t dispatch thunk of PlaybackController.decreaseVolume()()
{
  return dispatch thunk of PlaybackController.decreaseVolume()();
}

uint64_t dispatch thunk of PlaybackController.increaseVolume()()
{
  return dispatch thunk of PlaybackController.increaseVolume()();
}

uint64_t dispatch thunk of PlaybackController.nowPlayingItem.getter()
{
  return dispatch thunk of PlaybackController.nowPlayingItem.getter();
}

uint64_t dispatch thunk of PlaybackController.$nowPlayingItem.getter()
{
  return dispatch thunk of PlaybackController.$nowPlayingItem.getter();
}

uint64_t type metadata accessor for PlaybackController.TransportCommand()
{
  return type metadata accessor for PlaybackController.TransportCommand();
}

uint64_t dispatch thunk of PlaybackController.durationSnapshot.getter()
{
  return dispatch thunk of PlaybackController.durationSnapshot.getter();
}

uint64_t dispatch thunk of PlaybackController.$durationSnapshot.getter()
{
  return dispatch thunk of PlaybackController.$durationSnapshot.getter();
}

uint64_t dispatch thunk of PlaybackController.isPlayingPublisher.getter()
{
  return dispatch thunk of PlaybackController.isPlayingPublisher.getter();
}

uint64_t type metadata accessor for PlaybackController.FairPlayKeyServerError()
{
  return type metadata accessor for PlaybackController.FairPlayKeyServerError();
}

uint64_t dispatch thunk of PlaybackController.playbackPositionTracker.setter()
{
  return dispatch thunk of PlaybackController.playbackPositionTracker.setter();
}

uint64_t dispatch thunk of PlaybackController.isVolumeControlAvailable.getter()
{
  return dispatch thunk of PlaybackController.isVolumeControlAvailable.getter();
}

uint64_t dispatch thunk of PlaybackController.isPlaying.getter()
{
  return dispatch thunk of PlaybackController.isPlaying.getter();
}

uint64_t dispatch thunk of PlaybackController.tracklist.getter()
{
  return dispatch thunk of PlaybackController.tracklist.getter();
}

uint64_t type metadata accessor for PlaybackController()
{
  return type metadata accessor for PlaybackController();
}

uint64_t PresentationSource.popoverSource.getter()
{
  return PresentationSource.popoverSource.getter();
}

uint64_t static PresentationSource.topmostPresentationSource.getter()
{
  return static PresentationSource.topmostPresentationSource.getter();
}

uint64_t PresentationSource.init(viewController:position:)()
{
  return PresentationSource.init(viewController:position:)();
}

uint64_t PresentationSource.viewController.getter()
{
  return PresentationSource.viewController.getter();
}

uint64_t PresentationSource.init(view:)()
{
  return PresentationSource.init(view:)();
}

uint64_t PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)()
{
  return PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)();
}

uint64_t PresentationSource.Position.view.getter()
{
  return PresentationSource.Position.view.getter();
}

uint64_t type metadata accessor for PresentationSource.Position()
{
  return type metadata accessor for PresentationSource.Position();
}

uint64_t PresentationSource.position.getter()
{
  return PresentationSource.position.getter();
}

uint64_t type metadata accessor for PresentationSource()
{
  return type metadata accessor for PresentationSource();
}

uint64_t type metadata accessor for UIPurchaseDelegate()
{
  return type metadata accessor for UIPurchaseDelegate();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.url.getter()
{
  return dispatch thunk of ArtworkLoaderConfig.url.getter();
}

uint64_t static LanguageAwareString.alwaysGenerateAttributedString.getter()
{
  return static LanguageAwareString.alwaysGenerateAttributedString.getter();
}

uint64_t type metadata accessor for LanguageAwareString()
{
  return type metadata accessor for LanguageAwareString();
}

uint64_t LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)()
{
  return LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)();
}

uint64_t PlayStateDataSource.init(playbackController:pendingPlaybackStore:episodeLookupUtil:)()
{
  return PlayStateDataSource.init(playbackController:pendingPlaybackStore:episodeLookupUtil:)();
}

uint64_t type metadata accessor for PlayStateDataSource()
{
  return type metadata accessor for PlayStateDataSource();
}

uint64_t dispatch thunk of TextFieldAlertSheet.text.getter()
{
  return dispatch thunk of TextFieldAlertSheet.text.getter();
}

uint64_t dispatch thunk of TextFieldAlertSheet.text.setter()
{
  return dispatch thunk of TextFieldAlertSheet.text.setter();
}

uint64_t type metadata accessor for TextFieldAlertSheet.Style()
{
  return type metadata accessor for TextFieldAlertSheet.Style();
}

uint64_t TextFieldAlertSheet.init(title:style:size:actions:)()
{
  return TextFieldAlertSheet.init(title:style:size:actions:)();
}

uint64_t type metadata accessor for TextFieldAlertSheet()
{
  return type metadata accessor for TextFieldAlertSheet();
}

uint64_t static LibraryImageProvider.background.getter()
{
  return static LibraryImageProvider.background.getter();
}

uint64_t type metadata accessor for LibraryImageProvider()
{
  return type metadata accessor for LibraryImageProvider();
}

uint64_t OpenTranscriptIntent.episode.getter()
{
  return OpenTranscriptIntent.episode.getter();
}

uint64_t type metadata accessor for OpenTranscriptIntent()
{
  return type metadata accessor for OpenTranscriptIntent();
}

uint64_t type metadata accessor for PageRenderController()
{
  return type metadata accessor for PageRenderController();
}

uint64_t static SearchResultsGroupID.topResults.getter()
{
  return static SearchResultsGroupID.topResults.getter();
}

uint64_t static SearchResultsGroupID.shows.getter()
{
  return static SearchResultsGroupID.shows.getter();
}

uint64_t static SearchResultsGroupID.channels.getter()
{
  return static SearchResultsGroupID.channels.getter();
}

uint64_t static SearchResultsGroupID.episodes.getter()
{
  return static SearchResultsGroupID.episodes.getter();
}

uint64_t type metadata accessor for ActionMetricsBehavior()
{
  return type metadata accessor for ActionMetricsBehavior();
}

uint64_t BookmarkEpisodeIntent.init(episodeIdentifiers:)()
{
  return BookmarkEpisodeIntent.init(episodeIdentifiers:)();
}

uint64_t type metadata accessor for BookmarkEpisodeIntent()
{
  return type metadata accessor for BookmarkEpisodeIntent();
}

uint64_t EpisodeTextInfoDetail.notes.getter()
{
  return EpisodeTextInfoDetail.notes.getter();
}

uint64_t type metadata accessor for EpisodeTextInfoDetail()
{
  return type metadata accessor for EpisodeTextInfoDetail();
}

uint64_t OpenAppLocationAction.location.getter()
{
  return OpenAppLocationAction.location.getter();
}

uint64_t type metadata accessor for PlayNextChapterIntent()
{
  return type metadata accessor for PlayNextChapterIntent();
}

uint64_t type metadata accessor for DownloadEpisodesAction()
{
  return type metadata accessor for DownloadEpisodesAction();
}

uint64_t type metadata accessor for EpisodeTextInfoContext()
{
  return type metadata accessor for EpisodeTextInfoContext();
}

uint64_t static PageRenderContentTypes.primaryData.getter()
{
  return static PageRenderContentTypes.primaryData.getter();
}

uint64_t static PageRenderContentTypes.unspecified.getter()
{
  return static PageRenderContentTypes.unspecified.getter();
}

uint64_t PageRenderContentTypes.init(rawValue:)()
{
  return PageRenderContentTypes.init(rawValue:)();
}

uint64_t static PageRenderContentTypes.resource.getter()
{
  return static PageRenderContentTypes.resource.getter();
}

uint64_t dispatch_to_main_queue(_:)()
{
  return dispatch_to_main_queue(_:)();
}

uint64_t dispatch thunk of DownloadRemovalObserver.beginObserving()()
{
  return dispatch thunk of DownloadRemovalObserver.beginObserving()();
}

uint64_t type metadata accessor for DownloadRemovalObserver()
{
  return type metadata accessor for DownloadRemovalObserver();
}

uint64_t EpisodeTextInfoProvider.init()()
{
  return EpisodeTextInfoProvider.init()();
}

uint64_t type metadata accessor for EpisodeTextInfoProvider()
{
  return type metadata accessor for EpisodeTextInfoProvider();
}

uint64_t FetchShowEntitiesIntent.contentIDs.getter()
{
  return FetchShowEntitiesIntent.contentIDs.getter();
}

uint64_t StayUpToDateTipProvider.init(asPartOf:)()
{
  return StayUpToDateTipProvider.init(asPartOf:)();
}

uint64_t type metadata accessor for StayUpToDateTipProvider()
{
  return type metadata accessor for StayUpToDateTipProvider();
}

uint64_t type metadata accessor for UIStoreResponseDelegate()
{
  return type metadata accessor for UIStoreResponseDelegate();
}

uint64_t UnbookmarkEpisodeIntent.init(episodeIdentifiers:)()
{
  return UnbookmarkEpisodeIntent.init(episodeIdentifiers:)();
}

uint64_t type metadata accessor for UnbookmarkEpisodeIntent()
{
  return type metadata accessor for UnbookmarkEpisodeIntent();
}

uint64_t ExplicitContentPresenter.symbol.getter()
{
  return ExplicitContentPresenter.symbol.getter();
}

uint64_t ExplicitContentPresenter.init()()
{
  return ExplicitContentPresenter.init()();
}

uint64_t type metadata accessor for ExplicitContentPresenter()
{
  return type metadata accessor for ExplicitContentPresenter();
}

uint64_t static MetricsDataConfiguration.search.getter()
{
  return static MetricsDataConfiguration.search.getter();
}

uint64_t static MetricsDataConfiguration.default.getter()
{
  return static MetricsDataConfiguration.default.getter();
}

uint64_t LibraryEpisodeContextItem.init(summary:cachedDescription:description:descriptionWithoutHTML:descriptionHasHTML:episodeShareURL:)()
{
  return LibraryEpisodeContextItem.init(summary:cachedDescription:description:descriptionWithoutHTML:descriptionHasHTML:episodeShareURL:)();
}

uint64_t type metadata accessor for LibraryEpisodeContextItem()
{
  return type metadata accessor for LibraryEpisodeContextItem();
}

uint64_t type metadata accessor for LibraryImageProviderError()
{
  return type metadata accessor for LibraryImageProviderError();
}

uint64_t PendingPlaybackController.init(pendingPlaybackStore:playbackController:playStateEstimationProvider:legacyPlayerController:)()
{
  return PendingPlaybackController.init(pendingPlaybackStore:playbackController:playStateEstimationProvider:legacyPlayerController:)();
}

uint64_t type metadata accessor for PendingPlaybackController()
{
  return type metadata accessor for PendingPlaybackController();
}

uint64_t type metadata accessor for PlayPreviousChapterIntent()
{
  return type metadata accessor for PlayPreviousChapterIntent();
}

uint64_t dispatch thunk of RemoteFollowCommandCenter.beginObservingPlaybackQueue()()
{
  return dispatch thunk of RemoteFollowCommandCenter.beginObservingPlaybackQueue()();
}

uint64_t RemoteFollowCommandCenter.init(asPartOf:subscriptionUtility:)()
{
  return RemoteFollowCommandCenter.init(asPartOf:subscriptionUtility:)();
}

uint64_t type metadata accessor for RemoteFollowCommandCenter()
{
  return type metadata accessor for RemoteFollowCommandCenter();
}

uint64_t type metadata accessor for RemoteQueueOperationError()
{
  return type metadata accessor for RemoteQueueOperationError();
}

uint64_t static ViewControllerContainment.add(_:to:frame:)()
{
  return static ViewControllerContainment.add(_:to:frame:)();
}

uint64_t static ViewControllerContainment.remove(_:)()
{
  return static ViewControllerContainment.remove(_:)();
}

uint64_t ShowAutoDownloadPickerLink.init(autoDownloadOption:openGlobalSettingsBlock:uuid:isSerialShow:)()
{
  return ShowAutoDownloadPickerLink.init(autoDownloadOption:openGlobalSettingsBlock:uuid:isSerialShow:)();
}

uint64_t type metadata accessor for ShowAutoDownloadPickerLink()
{
  return type metadata accessor for ShowAutoDownloadPickerLink();
}

uint64_t dispatch thunk of StoreReviewPromptController.didFollowShow()()
{
  return dispatch thunk of StoreReviewPromptController.didFollowShow()();
}

uint64_t dispatch thunk of StoreReviewPromptController.prepareToTrackBecomeActive()()
{
  return dispatch thunk of StoreReviewPromptController.prepareToTrackBecomeActive()();
}

uint64_t static StoreReviewPromptController.shared.getter()
{
  return static StoreReviewPromptController.shared.getter();
}

uint64_t type metadata accessor for StoreReviewPromptController()
{
  return type metadata accessor for StoreReviewPromptController();
}

uint64_t UnownedImageIssueIdentifier.init(directory:)()
{
  return UnownedImageIssueIdentifier.init(directory:)();
}

uint64_t type metadata accessor for UnownedImageIssueIdentifier()
{
  return type metadata accessor for UnownedImageIssueIdentifier();
}

uint64_t FetchPodcastForEpisodeIntent.init(episodeAdamID:)()
{
  return FetchPodcastForEpisodeIntent.init(episodeAdamID:)();
}

uint64_t type metadata accessor for FetchPodcastForEpisodeIntent()
{
  return type metadata accessor for FetchPodcastForEpisodeIntent();
}

uint64_t UpdateEpisodePlayStateIntent.playState.getter()
{
  return UpdateEpisodePlayStateIntent.playState.getter();
}

uint64_t UpdateEpisodePlayStateIntent.episode.getter()
{
  return UpdateEpisodePlayStateIntent.episode.getter();
}

uint64_t FetchShowLatestEpisodesIntent.show.getter()
{
  return FetchShowLatestEpisodesIntent.show.getter();
}

uint64_t FetchShowLatestEpisodesIntent.limit.getter()
{
  return FetchShowLatestEpisodesIntent.limit.getter();
}

uint64_t type metadata accessor for ReevaluateAutoDownloadsIntent()
{
  return type metadata accessor for ReevaluateAutoDownloadsIntent();
}

uint64_t type metadata accessor for NowPlayingAlignmentCoordinator()
{
  return type metadata accessor for NowPlayingAlignmentCoordinator();
}

uint64_t type metadata accessor for RemoveDownloadedEpisodesAction()
{
  return type metadata accessor for RemoveDownloadedEpisodesAction();
}

uint64_t EnqueueEpisodeForPlaybackIntent.location.getter()
{
  return EnqueueEpisodeForPlaybackIntent.location.getter();
}

uint64_t EnqueueEpisodeForPlaybackIntent.episodeID.getter()
{
  return EnqueueEpisodeForPlaybackIntent.episodeID.getter();
}

uint64_t dispatch thunk of EpisodeTextInfoProviderProtocol.textInfoDetailForContext(_:)()
{
  return dispatch thunk of EpisodeTextInfoProviderProtocol.textInfoDetailForContext(_:)();
}

uint64_t PlayEpisodeIntentImplementation.init()()
{
  return PlayEpisodeIntentImplementation.init()();
}

uint64_t type metadata accessor for PlayEpisodeIntentImplementation()
{
  return type metadata accessor for PlayEpisodeIntentImplementation();
}

uint64_t RemoveOlderDownloadsTipProvider.__allocating_init(asPartOf:)()
{
  return RemoveOlderDownloadsTipProvider.__allocating_init(asPartOf:)();
}

uint64_t type metadata accessor for RemoveOlderDownloadsTipProvider()
{
  return type metadata accessor for RemoveOlderDownloadsTipProvider();
}

uint64_t RestorePurgedEpisodesTipProvider.init(asPartOf:)()
{
  return RestorePurgedEpisodesTipProvider.init(asPartOf:)();
}

uint64_t type metadata accessor for RestorePurgedEpisodesTipProvider()
{
  return type metadata accessor for RestorePurgedEpisodesTipProvider();
}

uint64_t dispatch thunk of NowPlayingItemPlayheadSynchronizer.beginObserving()()
{
  return dispatch thunk of NowPlayingItemPlayheadSynchronizer.beginObserving()();
}

uint64_t type metadata accessor for NowPlayingItemPlayheadSynchronizer()
{
  return type metadata accessor for NowPlayingItemPlayheadSynchronizer();
}

uint64_t SynchronizedEpisodeStateDataSource.performExpectedEpisodeStateUpdates(_:)()
{
  return SynchronizedEpisodeStateDataSource.performExpectedEpisodeStateUpdates(_:)();
}

uint64_t LocalLibraryPlaybackPositionTracker.init(stateCoordinator:)()
{
  return LocalLibraryPlaybackPositionTracker.init(stateCoordinator:)();
}

uint64_t type metadata accessor for LocalLibraryPlaybackPositionTracker()
{
  return type metadata accessor for LocalLibraryPlaybackPositionTracker();
}

uint64_t RemoveAbandonedDownloadsTipProvider.init(asPartOf:)()
{
  return RemoveAbandonedDownloadsTipProvider.init(asPartOf:)();
}

uint64_t type metadata accessor for RemoveAbandonedDownloadsTipProvider()
{
  return type metadata accessor for RemoveAbandonedDownloadsTipProvider();
}

uint64_t type metadata accessor for UpdateEpisodeDownloadBehaviorAction()
{
  return type metadata accessor for UpdateEpisodeDownloadBehaviorAction();
}

uint64_t DownloadEpisodesIntentImplementation.init()()
{
  return DownloadEpisodesIntentImplementation.init()();
}

uint64_t type metadata accessor for DownloadEpisodesIntentImplementation()
{
  return type metadata accessor for DownloadEpisodesIntentImplementation();
}

uint64_t IntentDelegatingActionImplementation.init()()
{
  return IntentDelegatingActionImplementation.init()();
}

uint64_t NowPlayingArtworkProviderObjCWrapper.init(artworkProvider:)()
{
  return NowPlayingArtworkProviderObjCWrapper.init(artworkProvider:)();
}

uint64_t type metadata accessor for NowPlayingArtworkProviderObjCWrapper()
{
  return type metadata accessor for NowPlayingArtworkProviderObjCWrapper();
}

uint64_t AddFavoriteCategoriesButtonTipProvider.init(asPartOf:)()
{
  return AddFavoriteCategoriesButtonTipProvider.init(asPartOf:)();
}

uint64_t type metadata accessor for AddFavoriteCategoriesButtonTipProvider()
{
  return type metadata accessor for AddFavoriteCategoriesButtonTipProvider();
}

uint64_t IgnorePurgedEpisodesActionImplementation.init()()
{
  return IgnorePurgedEpisodesActionImplementation.init()();
}

uint64_t type metadata accessor for IgnorePurgedEpisodesActionImplementation()
{
  return type metadata accessor for IgnorePurgedEpisodesActionImplementation();
}

uint64_t RestorePurgedEpisodesActionImplementation.init()()
{
  return RestorePurgedEpisodesActionImplementation.init()();
}

uint64_t type metadata accessor for RestorePurgedEpisodesActionImplementation()
{
  return type metadata accessor for RestorePurgedEpisodesActionImplementation();
}

uint64_t FetchMAPIRepresentableIntentImplementation.init()()
{
  return FetchMAPIRepresentableIntentImplementation.init()();
}

uint64_t FetchPodcastForEpisodeIntentImplementation.init()()
{
  return FetchPodcastForEpisodeIntentImplementation.init()();
}

uint64_t type metadata accessor for FetchPodcastForEpisodeIntentImplementation()
{
  return type metadata accessor for FetchPodcastForEpisodeIntentImplementation();
}

uint64_t RemoveEpisodesDownloadIntentImplementation.init()()
{
  return RemoveEpisodesDownloadIntentImplementation.init()();
}

uint64_t type metadata accessor for RemoveEpisodesDownloadIntentImplementation()
{
  return type metadata accessor for RemoveEpisodesDownloadIntentImplementation();
}

uint64_t type metadata accessor for UpdateEpisodeDownloadBehaviorImplementation()
{
  return type metadata accessor for UpdateEpisodeDownloadBehaviorImplementation();
}

uint64_t IgnoreAbandonedDownloadsActionImplementation.init()()
{
  return IgnoreAbandonedDownloadsActionImplementation.init()();
}

uint64_t type metadata accessor for IgnoreAbandonedDownloadsActionImplementation()
{
  return type metadata accessor for IgnoreAbandonedDownloadsActionImplementation();
}

uint64_t RemoveAbandonedDownloadsActionImplementation.init()()
{
  return RemoveAbandonedDownloadsActionImplementation.init()();
}

uint64_t type metadata accessor for RemoveAbandonedDownloadsActionImplementation()
{
  return type metadata accessor for RemoveAbandonedDownloadsActionImplementation();
}

uint64_t EnqueueEpisodeForPlaybackIntentImplementation.init()()
{
  return EnqueueEpisodeForPlaybackIntentImplementation.init()();
}

uint64_t type metadata accessor for EnqueueEpisodeForPlaybackIntentImplementation()
{
  return type metadata accessor for EnqueueEpisodeForPlaybackIntentImplementation();
}

uint64_t RequestTipProviderRefreshActionImplementation.init()()
{
  return RequestTipProviderRefreshActionImplementation.init()();
}

uint64_t type metadata accessor for RequestTipProviderRefreshActionImplementation()
{
  return type metadata accessor for RequestTipProviderRefreshActionImplementation();
}

uint64_t AcceptEpisodeLimitRecommendationActionImplementation.init()()
{
  return AcceptEpisodeLimitRecommendationActionImplementation.init()();
}

uint64_t type metadata accessor for AcceptEpisodeLimitRecommendationActionImplementation()
{
  return type metadata accessor for AcceptEpisodeLimitRecommendationActionImplementation();
}

uint64_t DeclineEpisodeLimitRecommendationActionImplementation.init()()
{
  return DeclineEpisodeLimitRecommendationActionImplementation.init()();
}

uint64_t type metadata accessor for DeclineEpisodeLimitRecommendationActionImplementation()
{
  return type metadata accessor for DeclineEpisodeLimitRecommendationActionImplementation();
}

uint64_t DebugLibraryStorageTipSuggestedLimitIntentImplementation.init()()
{
  return DebugLibraryStorageTipSuggestedLimitIntentImplementation.init()();
}

uint64_t type metadata accessor for DebugLibraryStorageTipSuggestedLimitIntentImplementation()
{
  return type metadata accessor for DebugLibraryStorageTipSuggestedLimitIntentImplementation();
}

uint64_t static Glyph.HeaderButtons.more.getter()
{
  return static Glyph.HeaderButtons.more.getter();
}

uint64_t Glyph.Settings.name.getter()
{
  return Glyph.Settings.name.getter();
}

uint64_t type metadata accessor for Glyph.Settings()
{
  return type metadata accessor for Glyph.Settings();
}

uint64_t Glyph.settings.getter()
{
  return Glyph.settings.getter();
}

uint64_t type metadata accessor for Glyph()
{
  return type metadata accessor for Glyph();
}

uint64_t static Theme.backgroundColor.getter()
{
  return static Theme.backgroundColor.getter();
}

uint64_t static Theme.appTintColor.getter()
{
  return static Theme.appTintColor.getter();
}

uint64_t type metadata accessor for Theme()
{
  return type metadata accessor for Theme();
}

uint64_t LazyDate.value.getter()
{
  return LazyDate.value.getter();
}

uint64_t MCUINamespace<A>.installNowPlayingViewController<A>(_:)()
{
  return MCUINamespace<A>.installNowPlayingViewController<A>(_:)();
}

{
  return MCUINamespace<A>.installNowPlayingViewController<A>(_:)();
}

uint64_t MCUINamespace<A>.installNowPlayingView<A>(controller:)()
{
  return MCUINamespace<A>.installNowPlayingView<A>(controller:)();
}

{
  return MCUINamespace<A>.installNowPlayingView<A>(controller:)();
}

uint64_t static NowPlayingViewModel.PlayerStyle.== infix(_:_:)()
{
  return static NowPlayingViewModel.PlayerStyle.== infix(_:_:)();
}

uint64_t type metadata accessor for NowPlayingViewModel.PlayerStyle()
{
  return type metadata accessor for NowPlayingViewModel.PlayerStyle();
}

uint64_t dispatch thunk of NowPlayingViewModel.updateContentSelection(_:animated:)()
{
  return dispatch thunk of NowPlayingViewModel.updateContentSelection(_:animated:)();
}

uint64_t NowPlayingController.transition(to:animated:)()
{
  return NowPlayingController.transition(to:animated:)();
}

uint64_t NowPlayingController.playerStyle.getter()
{
  return NowPlayingController.playerStyle.getter();
}

uint64_t dispatch thunk of NowPlayingViewController.delegate.setter()
{
  return dispatch thunk of NowPlayingViewController.delegate.setter();
}

uint64_t NowPlayingHostedContentID.transcript.unsafeMutableAddressor()
{
  return NowPlayingHostedContentID.transcript.unsafeMutableAddressor();
}

uint64_t static NowPlayingHostedContentID.queue.getter()
{
  return static NowPlayingHostedContentID.queue.getter();
}

uint64_t type metadata accessor for NowPlayingHostedContentID()
{
  return type metadata accessor for NowPlayingHostedContentID();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t NowPlayingDataProvider.shared.unsafeMutableAddressor()
{
  return NowPlayingDataProvider.shared.unsafeMutableAddressor();
}

uint64_t NowPlayingTabController.init(asPartOf:)()
{
  return NowPlayingTabController.init(asPartOf:)();
}

uint64_t type metadata accessor for NowPlayingTabController()
{
  return type metadata accessor for NowPlayingTabController();
}

Swift::Void __swiftcall NowPlayingMediaPlayerController.willTransitionToMiniPlayer()()
{
}

Swift::Void __swiftcall NowPlayingMediaPlayerController.didTransitionToFullScreenPlayer()()
{
}

uint64_t NowPlayingMediaPlayerController.didUpdateSelectedContent(from:to:)()
{
  return NowPlayingMediaPlayerController.didUpdateSelectedContent(from:to:)();
}

uint64_t NowPlayingMediaPlayerController.init(asPartOf:)()
{
  return NowPlayingMediaPlayerController.init(asPartOf:)();
}

uint64_t type metadata accessor for NowPlayingMediaPlayerController()
{
  return type metadata accessor for NowPlayingMediaPlayerController();
}

uint64_t NowPlayingMetricsControllerWrapper.observe(lifecycleEvent:)()
{
  return NowPlayingMetricsControllerWrapper.observe(lifecycleEvent:)();
}

uint64_t type metadata accessor for DeprecatedBinding()
{
  return type metadata accessor for DeprecatedBinding();
}

uint64_t DeprecatedBinding.init(_:configurationBlock:)()
{
  return DeprecatedBinding.init(_:configurationBlock:)();
}

uint64_t static MiniPlayerFactory.createMiniPlayer(asPartOf:)()
{
  return static MiniPlayerFactory.createMiniPlayer(asPartOf:)();
}

uint64_t type metadata accessor for ContextActionsPresentationRegistration()
{
  return type metadata accessor for ContextActionsPresentationRegistration();
}

uint64_t Window.init(frame:windowScene:)()
{
  return Window.init(frame:windowScene:)();
}

uint64_t type metadata accessor for Window()
{
  return type metadata accessor for Window();
}

uint64_t AppEntityViewAnnotation.init<A>(entityType:identifier:state:)()
{
  return AppEntityViewAnnotation.init<A>(entityType:identifier:state:)();
}

uint64_t type metadata accessor for AppEntityViewAnnotation()
{
  return type metadata accessor for AppEntityViewAnnotation();
}

uint64_t RemoteSyncTypeWithUnknownSyncProperties.encodeUnknownSyncProperties()()
{
  return RemoteSyncTypeWithUnknownSyncProperties.encodeUnknownSyncProperties()();
}

uint64_t kInterestInterestValue.getter()
{
  return kInterestInterestValue.getter();
}

uint64_t static Podcasts.isBlueMoonEnabled()()
{
  return static Podcasts.isBlueMoonEnabled()();
}

uint64_t static Podcasts.isUIPSidebarEnabled.getter()
{
  return static Podcasts.isUIPSidebarEnabled.getter();
}

uint64_t static Podcasts.areTranscriptsSupportedOnPlatform.getter()
{
  return static Podcasts.areTranscriptsSupportedOnPlatform.getter();
}

uint64_t type metadata accessor for Podcasts()
{
  return type metadata accessor for Podcasts();
}

uint64_t type metadata accessor for PodcastsMediaLibrary.MediaItem.ItemType()
{
  return type metadata accessor for PodcastsMediaLibrary.MediaItem.ItemType();
}

uint64_t PodcastsMediaLibrary.MediaItem.init(title:assetURL:feedURL:storeTrackId:podcastStoreId:uuid:guid:externalContentID:author:duration:playhead:artworkURL:itemDescription:serverArtwork:isSubscribable:releaseDate:album:isSubscriptionActive:isExplicit:isRestricted:subscriptionRequired:itemType:priceType:mediaKind:episodeNumber:seasonNumber:podcastIsSerial:showArtworkTemplateURL:artworkInfo:transcriptIdentifier:isAppleNewsEpisode:isAppleMusicEpisode:transcriptSource:shareURL:podcastUUID:restorationContentItemID:isShallow:feedDeleted:podcastSubscriptionState:podcastPageContext:)()
{
  return PodcastsMediaLibrary.MediaItem.init(title:assetURL:feedURL:storeTrackId:podcastStoreId:uuid:guid:externalContentID:author:duration:playhead:artworkURL:itemDescription:serverArtwork:isSubscribable:releaseDate:album:isSubscriptionActive:isExplicit:isRestricted:subscriptionRequired:itemType:priceType:mediaKind:episodeNumber:seasonNumber:podcastIsSerial:showArtworkTemplateURL:artworkInfo:transcriptIdentifier:isAppleNewsEpisode:isAppleMusicEpisode:transcriptSource:shareURL:podcastUUID:restorationContentItemID:isShallow:feedDeleted:podcastSubscriptionState:podcastPageContext:)();
}

uint64_t PodcastsMediaLibrary.MediaItem.author.getter()
{
  return PodcastsMediaLibrary.MediaItem.author.getter();
}

uint64_t type metadata accessor for PodcastsMediaLibrary.MediaItem()
{
  return type metadata accessor for PodcastsMediaLibrary.MediaItem();
}

uint64_t PodcastsStateChangeOrigin.description.getter()
{
  return PodcastsStateChangeOrigin.description.getter();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeMark(_:as:in:from:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeMark(_:as:in:from:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.cancelDownload(forEpisodeWithUUID:userInitiated:from:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.cancelDownload(forEpisodeWithUUID:userInitiated:from:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.downloadEpisode(withUUID:isFromSaving:from:in:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.downloadEpisode(withUUID:isFromSaving:from:in:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.cancelAllDownloads(userInitiated:from:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.cancelAllDownloads(userInitiated:from:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.disableSubscription(onPodcastUUID:from:context:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.disableSubscription(onPodcastUUID:from:context:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeEnableSubscription(onPodcastUUID:from:context:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeEnableSubscription(onPodcastUUID:from:context:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeInsertNewImplicitFollow(for:from:in:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeInsertNewImplicitFollow(for:from:in:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeImplicitlyFollowIfNeeded(_:for:from:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeImplicitlyFollowIfNeeded(_:for:from:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveImplicitFollowIfNeeded(_:from:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveImplicitFollowIfNeeded(_:from:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveFromRecoveredEpisodesIfNeeded(episode:)()
{
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveFromRecoveredEpisodesIfNeeded(episode:)();
}

uint64_t PodcastsStateCoordinatorPersistentStore.init(syncKeysRepository:)()
{
  return PodcastsStateCoordinatorPersistentStore.init(syncKeysRepository:)();
}

uint64_t type metadata accessor for PodcastsStateCoordinatorPersistentStore()
{
  return type metadata accessor for PodcastsStateCoordinatorPersistentStore();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertPodcastInStoreState(in:for:)()
{
  return dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertPodcastInStoreState(in:for:)();
}

{
  return dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertPodcastInStoreState(in:for:)();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertEpisode(in:for:asPartOf:)()
{
  return dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertEpisode(in:for:asPartOf:)();
}

uint64_t type metadata accessor for PodcastsSystem()
{
  return type metadata accessor for PodcastsSystem();
}

Swift::Void __swiftcall MTCategory.setArtworkWidthNumber(_:)(NSNumber a1)
{
}

Swift::Void __swiftcall MTCategory.setArtworkHeightNumber(_:)(NSNumber a1)
{
}

uint64_t type metadata accessor for MTCategory()
{
  return type metadata accessor for MTCategory();
}

uint64_t static MTInterest.predicateForInterests(excludingAdamIDs:)()
{
  return static MTInterest.predicateForInterests(excludingAdamIDs:)();
}

uint64_t static MTInterest.predicateForNeutralInterests()()
{
  return static MTInterest.predicateForNeutralInterests()();
}

uint64_t type metadata accessor for MTInterest()
{
  return type metadata accessor for MTInterest();
}

uint64_t type metadata accessor for ModelError()
{
  return type metadata accessor for ModelError();
}

uint64_t PlayerItem.episode.getter()
{
  return PlayerItem.episode.getter();
}

uint64_t PlayerItem.init(podcast:episode:)()
{
  return PlayerItem.init(podcast:episode:)();
}

uint64_t PlayerItem.podcast.getter()
{
  return PlayerItem.podcast.getter();
}

uint64_t type metadata accessor for PlayerItem()
{
  return type metadata accessor for PlayerItem();
}

uint64_t static ArtworkCrop.boundingBox.getter()
{
  return static ArtworkCrop.boundingBox.getter();
}

uint64_t static ArtworkCrop.sr.getter()
{
  return static ArtworkCrop.sr.getter();
}

uint64_t type metadata accessor for ArtworkCrop()
{
  return type metadata accessor for ArtworkCrop();
}

uint64_t dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)()
{
  return dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)();
}

uint64_t dispatch thunk of BugReporter.prepare(bugReport:maximumFrequency:checkBlock:)()
{
  return dispatch thunk of BugReporter.prepare(bugReport:maximumFrequency:checkBlock:)();
}

uint64_t CacheDomain.DiskCaches.directory.getter()
{
  return CacheDomain.DiskCaches.directory.getter();
}

uint64_t CacheDomain.disk.getter()
{
  return CacheDomain.disk.getter();
}

uint64_t ContentKind.rawValue.getter()
{
  return ContentKind.rawValue.getter();
}

uint64_t DisplayType.init(rawValue:)()
{
  return DisplayType.init(rawValue:)();
}

uint64_t EpisodeType.rawValue.getter()
{
  return EpisodeType.rawValue.getter();
}

uint64_t ArtworkModel.init(serverArtwork:)()
{
  return ArtworkModel.init(serverArtwork:)();
}

uint64_t ArtworkModel.preferredRequest.getter()
{
  return ArtworkModel.preferredRequest.getter();
}

uint64_t ArtworkModel.config(_:mode:format:crop:retainAspectRatio:)()
{
  return ArtworkModel.config(_:mode:format:crop:retainAspectRatio:)();
}

uint64_t static ArtworkModel.placeholder.getter()
{
  return static ArtworkModel.placeholder.getter();
}

uint64_t ArtworkModel.size.getter()
{
  return ArtworkModel.size.getter();
}

uint64_t ArtworkModel.with(backgroundColor:)()
{
  return ArtworkModel.with(backgroundColor:)();
}

uint64_t ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)()
{
  return ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)();
}

uint64_t ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)()
{
  return ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)();
}

uint64_t type metadata accessor for ArtworkModel()
{
  return type metadata accessor for ArtworkModel();
}

uint64_t dispatch thunk of FileManaging.removeItem(at:)()
{
  return dispatch thunk of FileManaging.removeItem(at:)();
}

uint64_t static MediaRequest.RequestType.== infix(_:_:)()
{
  return static MediaRequest.RequestType.== infix(_:_:)();
}

uint64_t type metadata accessor for MediaRequest.RequestType()
{
  return type metadata accessor for MediaRequest.RequestType();
}

uint64_t type metadata accessor for MediaRequest.ContentType()
{
  return type metadata accessor for MediaRequest.ContentType();
}

uint64_t type metadata accessor for MediaRequest.URLFragment()
{
  return type metadata accessor for MediaRequest.URLFragment();
}

uint64_t type metadata accessor for MediaRequest.Relationship()
{
  return type metadata accessor for MediaRequest.Relationship();
}

uint64_t type metadata accessor for MediaRequest.IncludeExtendTypes()
{
  return type metadata accessor for MediaRequest.IncludeExtendTypes();
}

uint64_t type metadata accessor for MediaRequest.Filter()
{
  return type metadata accessor for MediaRequest.Filter();
}

uint64_t MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)()
{
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)();
}

uint64_t type metadata accessor for MediaRequest.Params()
{
  return type metadata accessor for MediaRequest.Params();
}

uint64_t type metadata accessor for MediaRequest.PageName()
{
  return type metadata accessor for MediaRequest.PageName();
}

uint64_t type metadata accessor for MediaRequest.ViewType()
{
  return type metadata accessor for MediaRequest.ViewType();
}

uint64_t type metadata accessor for MediaRequest.WithTypes()
{
  return type metadata accessor for MediaRequest.WithTypes();
}

uint64_t static MetricsField<>.searchTerm.getter()
{
  return static MetricsField<>.searchTerm.getter();
}

uint64_t PodcastState.isSubscribed.getter()
{
  return PodcastState.isSubscribed.getter();
}

uint64_t Synchronized.init(wrappedValue:)()
{
  return Synchronized.init(wrappedValue:)();
}

uint64_t Synchronized.wrappedValue.getter()
{
  return Synchronized.wrappedValue.getter();
}

uint64_t Synchronized.wrappedValue.setter()
{
  return Synchronized.wrappedValue.setter();
}

uint64_t static ArtworkFormat.preferredFormat.getter()
{
  return static ArtworkFormat.preferredFormat.getter();
}

uint64_t type metadata accessor for AssetLifetime()
{
  return type metadata accessor for AssetLifetime();
}

uint64_t ContentRating.rawValue.getter()
{
  return ContentRating.rawValue.getter();
}

uint64_t static EmitLifecycle.defaultVerbosity.getter()
{
  return static EmitLifecycle.defaultVerbosity.getter();
}

uint64_t FairPlayAsset.description.getter()
{
  return FairPlayAsset.description.getter();
}

uint64_t FairPlayAsset.init(adamID:avAsset:)()
{
  return FairPlayAsset.init(adamID:avAsset:)();
}

uint64_t type metadata accessor for FairPlayAsset()
{
  return type metadata accessor for FairPlayAsset();
}

uint64_t InterestState.rawValue.getter()
{
  return InterestState.rawValue.getter();
}

uint64_t static MetricsIDType.itsContentID.getter()
{
  return static MetricsIDType.itsContentID.getter();
}

uint64_t static MetricsPageID.welcomeSheet.getter()
{
  return static MetricsPageID.welcomeSheet.getter();
}

uint64_t static MetricsPageID.unknown.getter()
{
  return static MetricsPageID.unknown.getter();
}

uint64_t PlayerArtwork.init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)()
{
  return PlayerArtwork.init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)();
}

uint64_t type metadata accessor for PlayerArtwork()
{
  return type metadata accessor for PlayerArtwork();
}

uint64_t ServerArtwork.textColor1.getter()
{
  return ServerArtwork.textColor1.getter();
}

uint64_t ServerArtwork.textColor2.getter()
{
  return ServerArtwork.textColor2.getter();
}

uint64_t ServerArtwork.textColor3.getter()
{
  return ServerArtwork.textColor3.getter();
}

uint64_t ServerArtwork.textColor4.getter()
{
  return ServerArtwork.textColor4.getter();
}

uint64_t ServerArtwork.url.getter()
{
  return ServerArtwork.url.getter();
}

uint64_t ServerArtwork.__allocating_init(from:)()
{
  return ServerArtwork.__allocating_init(from:)();
}

uint64_t ServerArtwork.width.getter()
{
  return ServerArtwork.width.getter();
}

uint64_t ServerArtwork.height.getter()
{
  return ServerArtwork.height.getter();
}

uint64_t ServerArtwork.bgColor.getter()
{
  return ServerArtwork.bgColor.getter();
}

uint64_t type metadata accessor for ServerArtwork()
{
  return type metadata accessor for ServerArtwork();
}

uint64_t ServerChannel.attributes.getter()
{
  return ServerChannel.attributes.getter();
}

uint64_t ServerChannel.id.getter()
{
  return ServerChannel.id.getter();
}

uint64_t type metadata accessor for ServerChannel()
{
  return type metadata accessor for ServerChannel();
}

uint64_t dispatch thunk of ServerPodcast.episodes.getter()
{
  return dispatch thunk of ServerPodcast.episodes.getter();
}

uint64_t type metadata accessor for ServerPodcast()
{
  return type metadata accessor for ServerPodcast();
}

uint64_t ShowsSortType.rawValue.getter()
{
  return ShowsSortType.rawValue.getter();
}

uint64_t AnalyticsEvent.__allocating_init(cacheDeletedFilesRestored:failed:)()
{
  return AnalyticsEvent.__allocating_init(cacheDeletedFilesRestored:failed:)();
}

uint64_t static AnalyticsEvent.downloadedFileHasiPodLibraryURL(discoveryPoint:path:source:)()
{
  return static AnalyticsEvent.downloadedFileHasiPodLibraryURL(discoveryPoint:path:source:)();
}

uint64_t AnalyticsEvent.__allocating_init(name:payload:)()
{
  return AnalyticsEvent.__allocating_init(name:payload:)();
}

uint64_t type metadata accessor for AnalyticsEvent()
{
  return type metadata accessor for AnalyticsEvent();
}

uint64_t ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)()
{
  return ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
}

{
  return ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
}

uint64_t static ArtworkRequest.comparablePrefix(from:)()
{
  return static ArtworkRequest.comparablePrefix(from:)();
}

uint64_t ArtworkRequest.replacingEffects(_:)()
{
  return ArtworkRequest.replacingEffects(_:)();
}

uint64_t ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)()
{
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)();
}

uint64_t ArtworkRequest.trace.getter()
{
  return ArtworkRequest.trace.getter();
}

uint64_t ArtworkRequest.resized(to:displayScale:)()
{
  return ArtworkRequest.resized(to:displayScale:)();
}

uint64_t type metadata accessor for ArtworkRequest()
{
  return type metadata accessor for ArtworkRequest();
}

uint64_t static EyebrowBuilder.concatenate(captionElements:uppercased:)()
{
  return static EyebrowBuilder.concatenate(captionElements:uppercased:)();
}

uint64_t type metadata accessor for EyebrowBuilder()
{
  return type metadata accessor for EyebrowBuilder();
}

uint64_t FRPSectionInfo.items.getter()
{
  return FRPSectionInfo.items.getter();
}

uint64_t FRPSectionInfo.section.getter()
{
  return FRPSectionInfo.section.getter();
}

uint64_t FeedUpdateType.endInterval(for:success:)()
{
  return FeedUpdateType.endInterval(for:success:)();
}

uint64_t FeedUpdateType.beginInterval(for:)()
{
  return FeedUpdateType.beginInterval(for:)();
}

uint64_t type metadata accessor for FeedUpdateType()
{
  return type metadata accessor for FeedUpdateType();
}

uint64_t PlaybackIntent.withOptions(_:)()
{
  return PlaybackIntent.withOptions(_:)();
}

uint64_t PlaybackIntent.addingOptions(_:)()
{
  return PlaybackIntent.addingOptions(_:)();
}

uint64_t type metadata accessor for PlaybackIntent.ValidationError()
{
  return type metadata accessor for PlaybackIntent.ValidationError();
}

uint64_t type metadata accessor for PlaybackIntent.PlayerConstraint()
{
  return type metadata accessor for PlaybackIntent.PlayerConstraint();
}

uint64_t PlaybackIntent.init(id:listSettings:initialItem:options:)()
{
  return PlaybackIntent.init(id:listSettings:initialItem:options:)();
}

uint64_t type metadata accessor for PlaybackIntent.Option()
{
  return type metadata accessor for PlaybackIntent.Option();
}

uint64_t type metadata accessor for PlaybackIntent()
{
  return type metadata accessor for PlaybackIntent();
}

uint64_t RSSFeedUpdater.init(ctx:ingesterProvider:externalFeedDownloader:)()
{
  return RSSFeedUpdater.init(ctx:ingesterProvider:externalFeedDownloader:)();
}

uint64_t type metadata accessor for RSSFeedUpdater()
{
  return type metadata accessor for RSSFeedUpdater();
}

uint64_t RemoteInterest.init(dictionary:)()
{
  return RemoteInterest.init(dictionary:)();
}

uint64_t RemoteInterest.interestValue.getter()
{
  return RemoteInterest.interestValue.getter();
}

uint64_t RemoteInterest.unknownSyncProperties.getter()
{
  return RemoteInterest.unknownSyncProperties.getter();
}

uint64_t RemoteInterest.interestValueUpdatedDate.getter()
{
  return RemoteInterest.interestValueUpdatedDate.getter();
}

uint64_t RemoteInterest.adamID.getter()
{
  return RemoteInterest.adamID.getter();
}

uint64_t type metadata accessor for RemoteInterest()
{
  return type metadata accessor for RemoteInterest();
}

uint64_t type metadata accessor for SectionContext()
{
  return type metadata accessor for SectionContext();
}

uint64_t type metadata accessor for ServerCategory()
{
  return type metadata accessor for ServerCategory();
}

uint64_t static CoreDataFetcher.fetchPodcasts(for:by:with:)()
{
  return static CoreDataFetcher.fetchPodcasts(for:by:with:)();
}

uint64_t static CoreDataFetcher.episodeUuid(for:completion:)()
{
  return static CoreDataFetcher.episodeUuid(for:completion:)();
}

uint64_t static CoreDataFetcher.fetchEpisode(for:on:completion:)()
{
  return static CoreDataFetcher.fetchEpisode(for:on:completion:)();
}

uint64_t static CoreDataFetcher.fetchEpisode(with:completion:)()
{
  return static CoreDataFetcher.fetchEpisode(with:completion:)();
}

uint64_t static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:completion:)()
{
  return static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:completion:)();
}

uint64_t static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:with:)()
{
  return static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:with:)();
}

uint64_t static CoreDataFetcher.fetchPodcast(with:completion:)()
{
  return static CoreDataFetcher.fetchPodcast(with:completion:)();
}

uint64_t static CoreDataFetcher.fetchPodcast(adamId:feedUrl:completion:)()
{
  return static CoreDataFetcher.fetchPodcast(adamId:feedUrl:completion:)();
}

uint64_t static CoreDataFetcher.fetchPodcast(adamId:feedUrl:with:)()
{
  return static CoreDataFetcher.fetchPodcast(adamId:feedUrl:with:)();
}

uint64_t static CoreDataFetcher.fetchStation(with:completion:)()
{
  return static CoreDataFetcher.fetchStation(with:completion:)();
}

uint64_t static CoreDataFetcher.fetchEpisodes(for:sortDescriptors:fetchLimit:with:)()
{
  return static CoreDataFetcher.fetchEpisodes(for:sortDescriptors:fetchLimit:with:)();
}

uint64_t static CoreDataFetcher.contextProvider.getter()
{
  return static CoreDataFetcher.contextProvider.getter();
}

uint64_t static CoreDataFetcher.performAndWaitOnChannel<A>(for:block:)()
{
  return static CoreDataFetcher.performAndWaitOnChannel<A>(for:block:)();
}

uint64_t static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)()
{
  return static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
}

uint64_t static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)()
{
  return static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)();
}

uint64_t static CoreDataFetcher.performAndPublishOnPodcast<A>(with:queue:block:)()
{
  return static CoreDataFetcher.performAndPublishOnPodcast<A>(with:queue:block:)();
}

uint64_t static CoreDataFetcher.performAndWaitWithSaveOnEpisode(with:block:)()
{
  return static CoreDataFetcher.performAndWaitWithSaveOnEpisode(with:block:)();
}

uint64_t static CoreDataFetcher.episodeUuid(for:)()
{
  return static CoreDataFetcher.episodeUuid(for:)();
}

uint64_t static CoreDataFetcher.unsafeFindEpisode(for:in:)()
{
  return static CoreDataFetcher.unsafeFindEpisode(for:in:)();
}

uint64_t static CoreDataFetcher.unsafeFindOrCreateStoreEpisode(for:in:)()
{
  return static CoreDataFetcher.unsafeFindOrCreateStoreEpisode(for:in:)();
}

uint64_t type metadata accessor for CoreDataFetcher()
{
  return type metadata accessor for CoreDataFetcher();
}

uint64_t DownloadedAsset.init(episodeUuid:fileURL:)()
{
  return DownloadedAsset.init(episodeUuid:fileURL:)();
}

uint64_t type metadata accessor for DownloadedAsset()
{
  return type metadata accessor for DownloadedAsset();
}

uint64_t EpisodeListType.sortTypeFromUserDefaults.getter()
{
  return EpisodeListType.sortTypeFromUserDefaults.getter();
}

uint64_t EpisodeListType.description.getter()
{
  return EpisodeListType.description.getter();
}

uint64_t EpisodeListType.stationUUID.getter()
{
  return EpisodeListType.stationUUID.getter();
}

uint64_t EpisodeListType.pubDateLimit.getter()
{
  return EpisodeListType.pubDateLimit.getter();
}

uint64_t EpisodeListType.importantKeys.getter()
{
  return EpisodeListType.importantKeys.getter();
}

uint64_t EpisodeListType.libraryShowUUID.getter()
{
  return EpisodeListType.libraryShowUUID.getter();
}

uint64_t EpisodeListType.hidePlayedEpisodes.getter()
{
  return EpisodeListType.hidePlayedEpisodes.getter();
}

uint64_t EpisodeListType.wantsListenNowReason.getter()
{
  return EpisodeListType.wantsListenNowReason.getter();
}

uint64_t EpisodeListType.shouldMatchShowSorting.getter()
{
  return EpisodeListType.shouldMatchShowSorting.getter();
}

uint64_t EpisodeListType.shelfImpressionMetricsID.getter()
{
  return EpisodeListType.shelfImpressionMetricsID.getter();
}

uint64_t static EpisodeListType.== infix(_:_:)()
{
  return static EpisodeListType.== infix(_:_:)();
}

uint64_t EpisodeListType.singleShowListType(showUuid:)()
{
  return EpisodeListType.singleShowListType(showUuid:)();
}

uint64_t EpisodeListType.groupedShowListType(hidePlayedEpisodes:)()
{
  return EpisodeListType.groupedShowListType(hidePlayedEpisodes:)();
}

uint64_t EpisodeListType.shelfItemKind.getter()
{
  return EpisodeListType.shelfItemKind.getter();
}

uint64_t EpisodeListType.shelfItemPresentation.getter()
{
  return EpisodeListType.shelfItemPresentation.getter();
}

uint64_t EpisodeListType.groupedFlowDestination(podcastUUID:)()
{
  return EpisodeListType.groupedFlowDestination(podcastUUID:)();
}

uint64_t EpisodeListType.groupedShowLockupStyle(hidePlayedEpisodes:)()
{
  return EpisodeListType.groupedShowLockupStyle(hidePlayedEpisodes:)();
}

uint64_t EpisodeListType.title.getter()
{
  return EpisodeListType.title.getter();
}

uint64_t EpisodeSortType.isSerialSort.getter()
{
  return EpisodeSortType.isSerialSort.getter();
}

uint64_t EpisodeSortType.descriptors.getter()
{
  return EpisodeSortType.descriptors.getter();
}

uint64_t EpisodeSortType.playDescriptors.getter()
{
  return EpisodeSortType.playDescriptors.getter();
}

uint64_t EpisodeSortType.rawValue.getter()
{
  return EpisodeSortType.rawValue.getter();
}

uint64_t MediaAttributes.contentRatingResolved.getter()
{
  return MediaAttributes.contentRatingResolved.getter();
}

uint64_t MediaIdentifier.init(episodeID:)()
{
  return MediaIdentifier.init(episodeID:)();
}

uint64_t type metadata accessor for MediaIdentifier()
{
  return type metadata accessor for MediaIdentifier();
}

uint64_t MediaLibraryPid.init(uint64Value:)()
{
  return MediaLibraryPid.init(uint64Value:)();
}

uint64_t MediaLibraryPid.uint64Value.getter()
{
  return MediaLibraryPid.uint64Value.getter();
}

uint64_t MediaLibraryPid.value.getter()
{
  return MediaLibraryPid.value.getter();
}

uint64_t MediaLibraryPid.isValid.getter()
{
  return MediaLibraryPid.isValid.getter();
}

uint64_t type metadata accessor for MediaLibraryPid()
{
  return type metadata accessor for MediaLibraryPid();
}

uint64_t MediaLibraryPid.init(_:)()
{
  return MediaLibraryPid.init(_:)();
}

uint64_t static MetricsPageType.searchResults.getter()
{
  return static MetricsPageType.searchResults.getter();
}

uint64_t static MetricsPageType.episode.getter()
{
  return static MetricsPageType.episode.getter();
}

uint64_t static MetricsPageType.welcome.getter()
{
  return static MetricsPageType.welcome.getter();
}

uint64_t static MetricsTargetID.viewTranscript.getter()
{
  return static MetricsTargetID.viewTranscript.getter();
}

uint64_t static MetricsTargetID.manageFavoriteCategories.getter()
{
  return static MetricsTargetID.manageFavoriteCategories.getter();
}

uint64_t kInterestAdamID.getter()
{
  return kInterestAdamID.getter();
}

uint64_t static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)()
{
  return static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)();
}

uint64_t type metadata accessor for ArtworkFormatter()
{
  return type metadata accessor for ArtworkFormatter();
}

uint64_t static ContentReference.show(adamID:)()
{
  return static ContentReference.show(adamID:)();
}

uint64_t static ContentReference.channel(adamID:)()
{
  return static ContentReference.channel(adamID:)();
}

uint64_t static ContentReference.episode(adamID:)()
{
  return static ContentReference.episode(adamID:)();
}

uint64_t static ContentReference.category(adamID:)()
{
  return static ContentReference.category(adamID:)();
}

uint64_t EpisodeMediaType.rawValue.getter()
{
  return EpisodeMediaType.rawValue.getter();
}

uint64_t EpisodePlayState.isEpisodePaused.getter()
{
  return EpisodePlayState.isEpisodePaused.getter();
}

uint64_t EpisodePlayState.isEpisodePlaying.getter()
{
  return EpisodePlayState.isEpisodePlaying.getter();
}

uint64_t static EpisodePlayState.== infix(_:_:)()
{
  return static EpisodePlayState.== infix(_:_:)();
}

uint64_t type metadata accessor for EpisodePlayState()
{
  return type metadata accessor for EpisodePlayState();
}

uint64_t dispatch thunk of PodcastShowOffer.typeResolved.getter()
{
  return dispatch thunk of PodcastShowOffer.typeResolved.getter();
}

uint64_t dispatch thunk of StoreFeedUpdater.updateFeed(request:)()
{
  return dispatch thunk of StoreFeedUpdater.updateFeed(request:)();
}

uint64_t dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter()
{
  return dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter();
}

uint64_t StoreFeedUpdater.init(bagConfiguration:ctx:ingesterProvider:)()
{
  return StoreFeedUpdater.init(bagConfiguration:ctx:ingesterProvider:)();
}

uint64_t type metadata accessor for StoreFeedUpdater()
{
  return type metadata accessor for StoreFeedUpdater();
}

uint64_t TranscriptSource.init(rawValue:)()
{
  return TranscriptSource.init(rawValue:)();
}

uint64_t TranscriptSource.rawValue.getter()
{
  return TranscriptSource.rawValue.getter();
}

uint64_t type metadata accessor for TranscriptSource()
{
  return type metadata accessor for TranscriptSource();
}

uint64_t ChannelAttributes.isSubscribed.getter()
{
  return ChannelAttributes.isSubscribed.getter();
}

uint64_t static DispatchWorkgroup.swiftConcurrency.getter()
{
  return static DispatchWorkgroup.swiftConcurrency.getter();
}

uint64_t type metadata accessor for DispatchWorkgroup()
{
  return type metadata accessor for DispatchWorkgroup();
}

uint64_t EpisodePlayerItem.guid.getter()
{
  return EpisodePlayerItem.guid.getter();
}

uint64_t EpisodePlayerItem.title.getter()
{
  return EpisodePlayerItem.title.getter();
}

uint64_t EpisodePlayerItem.init(adamID:title:subtitle:guid:pubDate:)()
{
  return EpisodePlayerItem.init(adamID:title:subtitle:guid:pubDate:)();
}

uint64_t EpisodePlayerItem.adamID.getter()
{
  return EpisodePlayerItem.adamID.getter();
}

uint64_t type metadata accessor for EpisodePlayerItem()
{
  return type metadata accessor for EpisodePlayerItem();
}

uint64_t EpisodeStateModel.podcastStateModel.getter()
{
  return EpisodeStateModel.podcastStateModel.getter();
}

uint64_t EpisodeStateModel.isDownloaded.getter()
{
  return EpisodeStateModel.isDownloaded.getter();
}

uint64_t EpisodeStateModel.ids.getter()
{
  return EpisodeStateModel.ids.getter();
}

uint64_t type metadata accessor for EpisodeStateModel()
{
  return type metadata accessor for EpisodeStateModel();
}

uint64_t EpisodeUserFilter.basePredicate.getter()
{
  return EpisodeUserFilter.basePredicate.getter();
}

uint64_t EpisodeUserFilter.flipUpdateState.getter()
{
  return EpisodeUserFilter.flipUpdateState.getter();
}

uint64_t static EpisodeUserFilter.allAvailableFilters(seasonNumbers:hasBookmarkedEpisodes:hasPlayedEpisodes:hasSubscriberEpisodes:)()
{
  return static EpisodeUserFilter.allAvailableFilters(seasonNumbers:hasBookmarkedEpisodes:hasPlayedEpisodes:hasSubscriberEpisodes:)();
}

uint64_t static EpisodeUserFilter.== infix(_:_:)()
{
  return static EpisodeUserFilter.== infix(_:_:)();
}

uint64_t FairPlayKeyLoader.__allocating_init()()
{
  return FairPlayKeyLoader.__allocating_init()();
}

uint64_t type metadata accessor for FairPlayKeyLoader()
{
  return type metadata accessor for FairPlayKeyLoader();
}

Swift::Void __swiftcall FeedUpdateRequest.beginQueueing()()
{
}

uint64_t FeedUpdateRequest.podcastStoreId.getter()
{
  return FeedUpdateRequest.podcastStoreId.getter();
}

uint64_t FeedUpdateRequest.init(feedUrl:cloudSyncFeedUrl:podcastStoreId:triggerBy:userInitiated:forceBootstrap:useBackgroundFetch:source:isSubscribing:feedDownloadedHook:preProcessFeedHook:postProcessFeedHook:completion:)()
{
  return FeedUpdateRequest.init(feedUrl:cloudSyncFeedUrl:podcastStoreId:triggerBy:userInitiated:forceBootstrap:useBackgroundFetch:source:isSubscribing:feedDownloadedHook:preProcessFeedHook:postProcessFeedHook:completion:)();
}

uint64_t type metadata accessor for FeedUpdateRequest()
{
  return type metadata accessor for FeedUpdateRequest();
}

uint64_t static MetricsActionType.unfavorite.getter()
{
  return static MetricsActionType.unfavorite.getter();
}

uint64_t static MetricsActionType.suggestLess.getter()
{
  return static MetricsActionType.suggestLess.getter();
}

uint64_t static MetricsActionType.undoSuggestLess.getter()
{
  return static MetricsActionType.undoSuggestLess.getter();
}

uint64_t static MetricsActionType.share.getter()
{
  return static MetricsActionType.share.getter();
}

uint64_t static MetricsActionType.report.getter()
{
  return static MetricsActionType.report.getter();
}

uint64_t static MetricsActionType.favorite.getter()
{
  return static MetricsActionType.favorite.getter();
}

uint64_t static MetricsActionType.navigate.getter()
{
  return static MetricsActionType.navigate.getter();
}

uint64_t static MetricsTargetType.transcriptText.getter()
{
  return static MetricsTargetType.transcriptText.getter();
}

uint64_t static MetricsTargetType.link.getter()
{
  return static MetricsTargetType.link.getter();
}

uint64_t static MetricsTargetType.button.getter()
{
  return static MetricsTargetType.button.getter();
}

uint64_t static MetricsTargetType.lockup.getter()
{
  return static MetricsTargetType.lockup.getter();
}

uint64_t static MetricsTargetType.swoosh.getter()
{
  return static MetricsTargetType.swoosh.getter();
}

Swift::String __swiftcall PFLocalizedString(_:comment:)(Swift::String _, Swift::String comment)
{
  uint64_t v2 = PFLocalizedString(_:comment:)(_._countAndFlagsBits, _._object, comment._countAndFlagsBits, comment._object);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t PodcastAttributes.DisplayType.rawValue.getter()
{
  return PodcastAttributes.DisplayType.rawValue.getter();
}

uint64_t type metadata accessor for PodcastAttributes.DisplayType()
{
  return type metadata accessor for PodcastAttributes.DisplayType();
}

uint64_t PodcastAttributes.subscribable.getter()
{
  return PodcastAttributes.subscribable.getter();
}

uint64_t PodcastAttributes.editorialArtwork.getter()
{
  return PodcastAttributes.editorialArtwork.getter();
}

uint64_t PodcastAttributes.displayTypeResolved.getter()
{
  return PodcastAttributes.displayTypeResolved.getter();
}

uint64_t PodcastAttributes.isSerialShowTypeInFeed.getter()
{
  return PodcastAttributes.isSerialShowTypeInFeed.getter();
}

uint64_t PodcastAttributes.name.getter()
{
  return PodcastAttributes.name.getter();
}

uint64_t PodcastAttributes.offers.getter()
{
  return PodcastAttributes.offers.getter();
}

uint64_t PodcastAttributes.artwork.getter()
{
  return PodcastAttributes.artwork.getter();
}

uint64_t PodcastAttributes.feedUrl.getter()
{
  return PodcastAttributes.feedUrl.getter();
}

uint64_t PodcastIdentifier.description.getter()
{
  return PodcastIdentifier.description.getter();
}

uint64_t PodcastPlayerItem.isSubscribeable.getter()
{
  return PodcastPlayerItem.isSubscribeable.getter();
}

uint64_t PodcastPlayerItem.init(adamID:feedURL:title:displayType:isSubscribeable:)()
{
  return PodcastPlayerItem.init(adamID:feedURL:title:displayType:isSubscribeable:)();
}

uint64_t PodcastPlayerItem.adamID.getter()
{
  return PodcastPlayerItem.adamID.getter();
}

uint64_t type metadata accessor for PodcastPlayerItem()
{
  return type metadata accessor for PodcastPlayerItem();
}

uint64_t PodcastStateModel.sanitizedState()()
{
  return PodcastStateModel.sanitizedState()();
}

uint64_t PodcastStateModel.isFollowed.getter()
{
  return PodcastStateModel.isFollowed.getter();
}

uint64_t PodcastStateModel.isImplicitlyFollowed.getter()
{
  return PodcastStateModel.isImplicitlyFollowed.getter();
}

uint64_t PodcastStateModel.id.getter()
{
  return PodcastStateModel.id.getter();
}

uint64_t PodcastStateModel.uuid.getter()
{
  return PodcastStateModel.uuid.getter();
}

uint64_t PodcastStateModel.init(podcast:)()
{
  return PodcastStateModel.init(podcast:)();
}

uint64_t PodcastStateModel.isHidden.getter()
{
  return PodcastStateModel.isHidden.getter();
}

uint64_t type metadata accessor for PodcastStateModel()
{
  return type metadata accessor for PodcastStateModel();
}

uint64_t ServerDescription.standard.getter()
{
  return ServerDescription.standard.getter();
}

uint64_t ServerPodcastBase.attributes.getter()
{
  return ServerPodcastBase.attributes.getter();
}

uint64_t ServerPodcastBase.relationships.getter()
{
  return ServerPodcastBase.relationships.getter();
}

uint64_t ServerPodcastBase.id.getter()
{
  return ServerPodcastBase.id.getter();
}

uint64_t type metadata accessor for ServerPodcastBase()
{
  return type metadata accessor for ServerPodcastBase();
}

uint64_t type metadata accessor for TranscriptRequest()
{
  return type metadata accessor for TranscriptRequest();
}

uint64_t static AlbumStringBuilder.albumString(podcastTitle:episodeNumber:seasonNumber:isSerialType:pubDate:)()
{
  return static AlbumStringBuilder.albumString(podcastTitle:episodeNumber:seasonNumber:isSerialType:pubDate:)();
}

uint64_t type metadata accessor for AlbumStringBuilder()
{
  return type metadata accessor for AlbumStringBuilder();
}

uint64_t type metadata accessor for BugReportFrequency()
{
  return type metadata accessor for BugReportFrequency();
}

uint64_t CategoriesSyncUtil.init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)()
{
  return CategoriesSyncUtil.init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)();
}

uint64_t CategoriesSyncUtil.syncCategories(forced:completionHandler:)()
{
  return CategoriesSyncUtil.syncCategories(forced:completionHandler:)();
}

uint64_t type metadata accessor for CategoriesSyncUtil()
{
  return type metadata accessor for CategoriesSyncUtil();
}

uint64_t type metadata accessor for EpisodeStateDomain()
{
  return type metadata accessor for EpisodeStateDomain();
}

uint64_t FairPlayKeyLoading.receive(on:)()
{
  return FairPlayKeyLoading.receive(on:)();
}

uint64_t type metadata accessor for InterestRepository()
{
  return type metadata accessor for InterestRepository();
}

uint64_t static MetricsContentKind.show.getter()
{
  return static MetricsContentKind.show.getter();
}

uint64_t static MetricsContentKind.channel.getter()
{
  return static MetricsContentKind.channel.getter();
}

uint64_t static PageContextTracker.shared.getter()
{
  return static PageContextTracker.shared.getter();
}

uint64_t type metadata accessor for PageContextTracker()
{
  return type metadata accessor for PageContextTracker();
}

uint64_t PaginatedPublisher.eraseToAnyPaginatedPublisher()()
{
  return PaginatedPublisher.eraseToAnyPaginatedPublisher()();
}

uint64_t PaginatedPublisher.paginatedMap<A>(_:)()
{
  return PaginatedPublisher.paginatedMap<A>(_:)();
}

uint64_t PaginatedPublisher.paginatedPrepend(_:)()
{
  return PaginatedPublisher.paginatedPrepend(_:)();
}

uint64_t PaginatedPublisher.paginatedSectionMap<A, B, C>(_:)()
{
  return PaginatedPublisher.paginatedSectionMap<A, B, C>(_:)();
}

uint64_t PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)()
{
  return PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)();
}

uint64_t PaginatedPublisher.paginatedBufferedMulticast()()
{
  return PaginatedPublisher.paginatedBufferedMulticast()();
}

uint64_t dispatch thunk of PurchaseController.uiDelegate.setter()
{
  return dispatch thunk of PurchaseController.uiDelegate.setter();
}

uint64_t dispatch thunk of PurchaseController.downloadManager.setter()
{
  return dispatch thunk of PurchaseController.downloadManager.setter();
}

uint64_t dispatch thunk of PurchaseController.subscriptionConfirmatonHandler.setter()
{
  return dispatch thunk of PurchaseController.subscriptionConfirmatonHandler.setter();
}

uint64_t SyncKeysRepository.isInterestSyncDirty.getter()
{
  return SyncKeysRepository.isInterestSyncDirty.getter();
}

uint64_t SyncKeysRepository.isInterestSyncDirty.setter()
{
  return SyncKeysRepository.isInterestSyncDirty.setter();
}

uint64_t SyncKeysRepository.isPlaylistSyncDirty.setter()
{
  return SyncKeysRepository.isPlaylistSyncDirty.setter();
}

uint64_t SyncKeysRepository.interestLastSyncTimestamp.getter()
{
  return SyncKeysRepository.interestLastSyncTimestamp.getter();
}

uint64_t SyncKeysRepository.interestLastSyncTimestamp.setter()
{
  return SyncKeysRepository.interestLastSyncTimestamp.setter();
}

uint64_t SyncKeysRepository.markBookmarksSyncDirty(_:for:)()
{
  return SyncKeysRepository.markBookmarksSyncDirty(_:for:)();
}

uint64_t SyncKeysRepository.markSubscriptionSyncDirty(_:for:)()
{
  return SyncKeysRepository.markSubscriptionSyncDirty(_:for:)();
}

uint64_t SyncKeysRepository.nonFollowedShowsSyncVersion.getter()
{
  return SyncKeysRepository.nonFollowedShowsSyncVersion.getter();
}

uint64_t SyncKeysRepository.nonFollowedShowsSyncVersion.setter()
{
  return SyncKeysRepository.nonFollowedShowsSyncVersion.setter();
}

uint64_t SyncKeysRepository.isNonFollowedShowsSyncDirty.getter()
{
  return SyncKeysRepository.isNonFollowedShowsSyncDirty.getter();
}

uint64_t SyncKeysRepository.isNonFollowedShowsSyncDirty.setter()
{
  return SyncKeysRepository.isNonFollowedShowsSyncDirty.setter();
}

uint64_t SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.getter()
{
  return SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.getter();
}

uint64_t SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.setter()
{
  return SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.setter();
}

uint64_t SyncKeysRepository.interestSyncVersion.getter()
{
  return SyncKeysRepository.interestSyncVersion.getter();
}

uint64_t SyncKeysRepository.interestSyncVersion.setter()
{
  return SyncKeysRepository.interestSyncVersion.setter();
}

uint64_t SyncKeysRepository.podcastsDomainVersion.getter()
{
  return SyncKeysRepository.podcastsDomainVersion.getter();
}

uint64_t SyncKeysRepository.podcastsDomainVersion.setter()
{
  return SyncKeysRepository.podcastsDomainVersion.setter();
}

uint64_t static SyncKeysRepository.shared.getter()
{
  return static SyncKeysRepository.shared.getter();
}

uint64_t type metadata accessor for SyncKeysRepository()
{
  return type metadata accessor for SyncKeysRepository();
}

uint64_t type metadata accessor for URLTrackIdentifier.ArgumentKey()
{
  return type metadata accessor for URLTrackIdentifier.ArgumentKey();
}

uint64_t URLTrackIdentifier.valueForArgument(_:)()
{
  return URLTrackIdentifier.valueForArgument(_:)();
}

uint64_t URLTrackIdentifier.init(string:)()
{
  return URLTrackIdentifier.init(string:)();
}

uint64_t type metadata accessor for URLTrackIdentifier()
{
  return type metadata accessor for URLTrackIdentifier();
}

uint64_t DownloadConsistency.init(issueIdentifier:resolutionStrategy:effectApplicator:downloadEnvironment:)()
{
  return DownloadConsistency.init(issueIdentifier:resolutionStrategy:effectApplicator:downloadEnvironment:)();
}

uint64_t type metadata accessor for DownloadConsistency()
{
  return type metadata accessor for DownloadConsistency();
}

uint64_t DownloadEnvironment.fileStorage.getter()
{
  return DownloadEnvironment.fileStorage.getter();
}

uint64_t static DownloadEnvironment.live.getter()
{
  return static DownloadEnvironment.live.getter();
}

uint64_t type metadata accessor for DownloadEnvironment()
{
  return type metadata accessor for DownloadEnvironment();
}

uint64_t EpisodeListSettings.playPredicate.getter()
{
  return EpisodeListSettings.playPredicate.getter();
}

uint64_t EpisodeListSettings.sectionContext.getter()
{
  return EpisodeListSettings.sectionContext.getter();
}

uint64_t EpisodeListSettings.hidePlayedEpisodes.getter()
{
  return EpisodeListSettings.hidePlayedEpisodes.getter();
}

uint64_t EpisodeListSettings.sort.getter()
{
  return EpisodeListSettings.sort.getter();
}

uint64_t EpisodeListSettings.listType.getter()
{
  return EpisodeListSettings.listType.getter();
}

uint64_t EpisodeListSettings.predicate.getter()
{
  return EpisodeListSettings.predicate.getter();
}

uint64_t type metadata accessor for EpisodeListSettings()
{
  return type metadata accessor for EpisodeListSettings();
}

uint64_t EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)()
{
  return EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();
}

uint64_t EpisodeStateChanges.updated.getter()
{
  return EpisodeStateChanges.updated.getter();
}

uint64_t dispatch thunk of EpisodeStateMachine.addStateTransitionObserver(_:action:)()
{
  return dispatch thunk of EpisodeStateMachine.addStateTransitionObserver(_:action:)();
}

uint64_t dispatch thunk of EpisodeStateMachine.removeStateTransitionActions(for:)()
{
  return dispatch thunk of EpisodeStateMachine.removeStateTransitionActions(for:)();
}

uint64_t dispatch thunk of EpisodeStateMachine.currentState.getter()
{
  return dispatch thunk of EpisodeStateMachine.currentState.getter();
}

uint64_t static NetworkTaskPriority.dispatchQueuePriority()()
{
  return static NetworkTaskPriority.dispatchQueuePriority()();
}

uint64_t type metadata accessor for NetworkTaskPriority()
{
  return type metadata accessor for NetworkTaskPriority();
}

uint64_t dispatch thunk of PodcastStateMachine.currentState.getter()
{
  return dispatch thunk of PodcastStateMachine.currentState.getter();
}

uint64_t SignpostAndLogTrace(domain:level:)()
{
  return SignpostAndLogTrace(domain:level:)();
}

uint64_t dispatch thunk of URLBasedFeedUpdater.updateFeed(request:)()
{
  return dispatch thunk of URLBasedFeedUpdater.updateFeed(request:)();
}

uint64_t dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter()
{
  return dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter();
}

uint64_t EpisodeDownloadState.isDownloadedEpisode.getter()
{
  return EpisodeDownloadState.isDownloadedEpisode.getter();
}

uint64_t type metadata accessor for EpisodeDownloadState()
{
  return type metadata accessor for EpisodeDownloadState();
}

uint64_t InterestStateMachine.currentState.getter()
{
  return InterestStateMachine.currentState.getter();
}

uint64_t static MetricsActionContext.contextual.getter()
{
  return static MetricsActionContext.contextual.getter();
}

Swift::String_optional __swiftcall MetricsWidgetContext.encodeToString()()
{
  uint64_t v0 = MetricsWidgetContext.encodeToString()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static MetricsWidgetContext.decodeFromString(_:)()
{
  return static MetricsWidgetContext.decodeFromString(_:)();
}

uint64_t type metadata accessor for MetricsWidgetContext()
{
  return type metadata accessor for MetricsWidgetContext();
}

uint64_t static NotificationSettings.canSendNotification()()
{
  return static NotificationSettings.canSendNotification()();
}

uint64_t type metadata accessor for NotificationSettings()
{
  return type metadata accessor for NotificationSettings();
}

uint64_t PendingPlaybackStore.init()()
{
  return PendingPlaybackStore.init()();
}

uint64_t type metadata accessor for PendingPlaybackStore()
{
  return type metadata accessor for PendingPlaybackStore();
}

uint64_t PodcastRelationships.channel.getter()
{
  return PodcastRelationships.channel.getter();
}

uint64_t ServerPodcastEpisode.attributes.getter()
{
  return ServerPodcastEpisode.attributes.getter();
}

uint64_t dispatch thunk of ServerPodcastEpisode.relationships.getter()
{
  return dispatch thunk of ServerPodcastEpisode.relationships.getter();
}

uint64_t ServerPodcastEpisode.alternatePaidURL()()
{
  return ServerPodcastEpisode.alternatePaidURL()();
}

uint64_t ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)()
{
  return ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)();
}

uint64_t ServerPodcastEpisode.id.getter()
{
  return ServerPodcastEpisode.id.getter();
}

uint64_t ServerPodcastEpisode.determineBestTranscriptMetadata(isSubscriptionActive:)()
{
  return ServerPodcastEpisode.determineBestTranscriptMetadata(isSubscriptionActive:)();
}

uint64_t type metadata accessor for ServerPodcastEpisode()
{
  return type metadata accessor for ServerPodcastEpisode();
}

uint64_t dispatch thunk of ServerPodcastStation.episodes.getter()
{
  return dispatch thunk of ServerPodcastStation.episodes.getter();
}

uint64_t type metadata accessor for ServerPodcastStation()
{
  return type metadata accessor for ServerPodcastStation();
}

uint64_t DeviceCapacityMonitor.addCapacityChangeObserver(options:callback:)()
{
  return DeviceCapacityMonitor.addCapacityChangeObserver(options:callback:)();
}

Swift::Void __swiftcall DeviceCapacityMonitor.removeCapacityChangeObserver(with:)(Swift::Int64 with)
{
}

uint64_t DeviceCapacityMonitor.CapacityLevel.rawValue.getter()
{
  return DeviceCapacityMonitor.CapacityLevel.rawValue.getter();
}

uint64_t static DeviceCapacityMonitor.shared.getter()
{
  return static DeviceCapacityMonitor.shared.getter();
}

uint64_t type metadata accessor for DeviceCapacityMonitor()
{
  return type metadata accessor for DeviceCapacityMonitor();
}

uint64_t type metadata accessor for DownloadedAssetEffect()
{
  return type metadata accessor for DownloadedAssetEffect();
}

uint64_t KCUTranscriptProvider.init(bearerToken:basePath:kcuTranscriptPath:kcuSignaturePath:)()
{
  return KCUTranscriptProvider.init(bearerToken:basePath:kcuTranscriptPath:kcuSignaturePath:)();
}

uint64_t type metadata accessor for KCUTranscriptProvider()
{
  return type metadata accessor for KCUTranscriptProvider();
}

uint64_t RemoteNonFollowedShow.init(dictionary:)()
{
  return RemoteNonFollowedShow.init(dictionary:)();
}

uint64_t static RemoteNonFollowedShow.allSyncKeys.getter()
{
  return static RemoteNonFollowedShow.allSyncKeys.getter();
}

uint64_t RemoteNonFollowedShow.lastDatePlayed.getter()
{
  return RemoteNonFollowedShow.lastDatePlayed.getter();
}

uint64_t RemoteNonFollowedShow.prioritizedIDs.getter()
{
  return RemoteNonFollowedShow.prioritizedIDs.getter();
}

uint64_t RemoteNonFollowedShow.storeCollectionId.getter()
{
  return RemoteNonFollowedShow.storeCollectionId.getter();
}

uint64_t RemoteNonFollowedShow.unknownSyncProperties.getter()
{
  return RemoteNonFollowedShow.unknownSyncProperties.getter();
}

uint64_t RemoteNonFollowedShow.feedURL.getter()
{
  return RemoteNonFollowedShow.feedURL.getter();
}

uint64_t type metadata accessor for RemoteNonFollowedShow()
{
  return type metadata accessor for RemoteNonFollowedShow();
}

uint64_t kMTCategoryEntityName.getter()
{
  return kMTCategoryEntityName.getter();
}

uint64_t kMTInterestEntityName.getter()
{
  return kMTInterestEntityName.getter();
}

uint64_t DownloadableURLOptions.nonAppInitiated.getter()
{
  return DownloadableURLOptions.nonAppInitiated.getter();
}

uint64_t DownloadableURLOptions.url.getter()
{
  return DownloadableURLOptions.url.getter();
}

uint64_t type metadata accessor for DownloadableURLOptions()
{
  return type metadata accessor for DownloadableURLOptions();
}

uint64_t DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)()
{
  return DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)();
}

uint64_t type metadata accessor for EpisodeLevelCalculator()
{
  return type metadata accessor for EpisodeLevelCalculator();
}

uint64_t type metadata accessor for EpisodeListenNowReason()
{
  return type metadata accessor for EpisodeListenNowReason();
}

uint64_t EpisodeStateController.init(dataSources:transitionRules:)()
{
  return EpisodeStateController.init(dataSources:transitionRules:)();
}

uint64_t dispatch thunk of EpisodeStateController.stateMachine(for:)()
{
  return dispatch thunk of EpisodeStateController.stateMachine(for:)();
}

uint64_t EpisodeStateController.stateMachine(for:)()
{
  return EpisodeStateController.stateMachine(for:)();
}

{
  return EpisodeStateController.stateMachine(for:)();
}

uint64_t dispatch thunk of EpisodeStateController.startObservingChanges()()
{
  return dispatch thunk of EpisodeStateController.startObservingChanges()();
}

uint64_t EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)()
{
  return EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
}

{
  return EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
}

uint64_t static EpisodeStateIdentifier.generateIdsFrom(uuid:contentId:)()
{
  return static EpisodeStateIdentifier.generateIdsFrom(uuid:contentId:)();
}

uint64_t static EpisodeStateIdentifier.== infix(_:_:)()
{
  return static EpisodeStateIdentifier.== infix(_:_:)();
}

uint64_t EpisodeStateIdentifier.hash(into:)()
{
  return EpisodeStateIdentifier.hash(into:)();
}

uint64_t EpisodeStateRepository.publisherForChanges(in:)()
{
  return EpisodeStateRepository.publisherForChanges(in:)();
}

Swift::Void __swiftcall EpisodeStateRepository.startObservingChanges()()
{
}

uint64_t static EpisodeStateRepository.shared.getter()
{
  return static EpisodeStateRepository.shared.getter();
}

uint64_t type metadata accessor for EpisodeStateRepository()
{
  return type metadata accessor for EpisodeStateRepository();
}

uint64_t MAPICategoriesProvider.init(mediaRequestController:)()
{
  return MAPICategoriesProvider.init(mediaRequestController:)();
}

uint64_t type metadata accessor for MAPICategoriesProvider()
{
  return type metadata accessor for MAPICategoriesProvider();
}

uint64_t dispatch thunk of MediaRequestController.responseQueue.setter()
{
  return dispatch thunk of MediaRequestController.responseQueue.setter();
}

uint64_t dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:account:callback:)()
{
  return dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:account:callback:)();
}

uint64_t dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:callback:)()
{
  return dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:callback:)();
}

uint64_t type metadata accessor for MediaRequestController()
{
  return type metadata accessor for MediaRequestController();
}

uint64_t PodcastStateController.init(dataSources:transitionRules:)()
{
  return PodcastStateController.init(dataSources:transitionRules:)();
}

uint64_t dispatch thunk of PodcastStateController.stateMachine(for:initialState:)()
{
  return dispatch thunk of PodcastStateController.stateMachine(for:initialState:)();
}

{
  return dispatch thunk of PodcastStateController.stateMachine(for:initialState:)();
}

uint64_t type metadata accessor for PodcastStateController()
{
  return type metadata accessor for PodcastStateController();
}

uint64_t RestrictionsController.presentAlertIfNeeded(_:presentationCompletion:actionCompletion:)()
{
  return RestrictionsController.presentAlertIfNeeded(_:presentationCompletion:actionCompletion:)();
}

uint64_t RestrictionsController.ExplicitContentState.isExplicitContentAllowed.getter()
{
  return RestrictionsController.ExplicitContentState.isExplicitContentAllowed.getter();
}

uint64_t static RestrictionsController.isExplicitContentAllowed.getter()
{
  return static RestrictionsController.isExplicitContentAllowed.getter();
}

uint64_t RestrictionsController.state.getter()
{
  return RestrictionsController.state.getter();
}

uint64_t static RestrictionsController.shared.getter()
{
  return static RestrictionsController.shared.getter();
}

uint64_t type metadata accessor for RestrictionsController()
{
  return type metadata accessor for RestrictionsController();
}

Swift::Void __swiftcall ApplicationStateMonitor.beginListening()()
{
}

uint64_t static ApplicationStateMonitor.shared.getter()
{
  return static ApplicationStateMonitor.shared.getter();
}

uint64_t type metadata accessor for ApplicationStateMonitor()
{
  return type metadata accessor for ApplicationStateMonitor();
}

uint64_t InterestStateController.stateMachine(for:)()
{
  return InterestStateController.stateMachine(for:)();
}

uint64_t type metadata accessor for InterestStateController()
{
  return type metadata accessor for InterestStateController();
}

uint64_t dispatch thunk of MediaItemMetadataLoader.keyIdentifiers(from:completion:)()
{
  return dispatch thunk of MediaItemMetadataLoader.keyIdentifiers(from:completion:)();
}

uint64_t type metadata accessor for MediaItemMetadataLoader()
{
  return type metadata accessor for MediaItemMetadataLoader();
}

uint64_t PendingPlaybackMetadata.uuid.getter()
{
  return PendingPlaybackMetadata.uuid.getter();
}

uint64_t PendingPlaybackMetadata.init(adamId:uuid:)()
{
  return PendingPlaybackMetadata.init(adamId:uuid:)();
}

uint64_t PendingPlaybackMetadata.adamId.getter()
{
  return PendingPlaybackMetadata.adamId.getter();
}

uint64_t PendingPlaybackMetadata.duration.getter()
{
  return PendingPlaybackMetadata.duration.getter();
}

uint64_t PendingPlaybackMetadata.position.getter()
{
  return PendingPlaybackMetadata.position.getter();
}

uint64_t type metadata accessor for PendingPlaybackMetadata()
{
  return type metadata accessor for PendingPlaybackMetadata();
}

uint64_t RecommendationsMetadata.Categories.init(from:dislikedInterests:)()
{
  return RecommendationsMetadata.Categories.init(from:dislikedInterests:)();
}

uint64_t type metadata accessor for RecommendationsMetadata.Categories()
{
  return type metadata accessor for RecommendationsMetadata.Categories();
}

uint64_t RecommendationsMetadata.Shows.init(from:dislikedPodcasts:)()
{
  return RecommendationsMetadata.Shows.init(from:dislikedPodcasts:)();
}

uint64_t type metadata accessor for RecommendationsMetadata.Shows()
{
  return type metadata accessor for RecommendationsMetadata.Shows();
}

uint64_t RecommendationsMetadata.Channels.init(from:favoritedChannels:dislikedChannels:)()
{
  return RecommendationsMetadata.Channels.init(from:favoritedChannels:dislikedChannels:)();
}

uint64_t type metadata accessor for RecommendationsMetadata.Channels()
{
  return type metadata accessor for RecommendationsMetadata.Channels();
}

uint64_t type metadata accessor for RecommendationsMetadata.Episodes()
{
  return type metadata accessor for RecommendationsMetadata.Episodes();
}

uint64_t static EpisodeUnavailableReason.Translator.episodeUnavailableReason(for:)()
{
  return static EpisodeUnavailableReason.Translator.episodeUnavailableReason(for:)();
}

uint64_t EpisodeUnavailableReason.rawValue.getter()
{
  return EpisodeUnavailableReason.rawValue.getter();
}

uint64_t InterestObserverProvider.dislikedInterestsShowsPublisher.getter()
{
  return InterestObserverProvider.dislikedInterestsShowsPublisher.getter();
}

uint64_t InterestObserverProvider.dislikedInterestsChannelsPublisher.getter()
{
  return InterestObserverProvider.dislikedInterestsChannelsPublisher.getter();
}

uint64_t InterestObserverProvider.favoritedInterestsChannelsPublisher.getter()
{
  return InterestObserverProvider.favoritedInterestsChannelsPublisher.getter();
}

uint64_t InterestObserverProvider.dislikedInterestsCategoriesPublisher.getter()
{
  return InterestObserverProvider.dislikedInterestsCategoriesPublisher.getter();
}

uint64_t InterestObserverProvider.favoritedInterestsCategoriesPublisher.getter()
{
  return InterestObserverProvider.favoritedInterestsCategoriesPublisher.getter();
}

uint64_t type metadata accessor for InterestObserverProvider()
{
  return type metadata accessor for InterestObserverProvider();
}

uint64_t type metadata accessor for PodcastEpisodeAttributes.EpisodeType()
{
  return type metadata accessor for PodcastEpisodeAttributes.EpisodeType();
}

uint64_t PodcastEpisodeAttributes.ChannelKind.rawValue.getter()
{
  return PodcastEpisodeAttributes.ChannelKind.rawValue.getter();
}

uint64_t type metadata accessor for PodcastEpisodeAttributes.ChannelKind()
{
  return type metadata accessor for PodcastEpisodeAttributes.ChannelKind();
}

uint64_t PodcastEpisodeAttributes.channelKind.getter()
{
  return PodcastEpisodeAttributes.channelKind.getter();
}

uint64_t PodcastEpisodeAttributes.description.getter()
{
  return PodcastEpisodeAttributes.description.getter();
}

uint64_t PodcastEpisodeAttributes.episodeType.getter()
{
  return PodcastEpisodeAttributes.episodeType.getter();
}

uint64_t PodcastEpisodeAttributes.seasonNumber.getter()
{
  return PodcastEpisodeAttributes.seasonNumber.getter();
}

uint64_t PodcastEpisodeAttributes.episodeNumber.getter()
{
  return PodcastEpisodeAttributes.episodeNumber.getter();
}

uint64_t PodcastEpisodeAttributes.episodeArtwork.getter()
{
  return PodcastEpisodeAttributes.episodeArtwork.getter();
}

uint64_t PodcastEpisodeAttributes.mediaKindResolved.getter()
{
  return PodcastEpisodeAttributes.mediaKindResolved.getter();
}

uint64_t PodcastEpisodeAttributes.releaseDateResolved.getter()
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter();
}

uint64_t PodcastEpisodeAttributes.url.getter()
{
  return PodcastEpisodeAttributes.url.getter();
}

uint64_t PodcastEpisodeAttributes.guid.getter()
{
  return PodcastEpisodeAttributes.guid.getter();
}

uint64_t PodcastEpisodeAttributes.name.getter()
{
  return PodcastEpisodeAttributes.name.getter();
}

uint64_t PodcastEpisodeAttributes.artwork.getter()
{
  return PodcastEpisodeAttributes.artwork.getter();
}

uint64_t type metadata accessor for PodcastEpisodeAttributes.MediaKind()
{
  return type metadata accessor for PodcastEpisodeAttributes.MediaKind();
}

uint64_t type metadata accessor for PodcastEpisodeAttributes()
{
  return type metadata accessor for PodcastEpisodeAttributes();
}

uint64_t RepublishingValueSubject.send(_:)()
{
  return RepublishingValueSubject.send(_:)();
}

uint64_t RepublishingValueSubject.value.getter()
{
  return RepublishingValueSubject.value.getter();
}

uint64_t RepublishingValueSubject.init(_:)()
{
  return RepublishingValueSubject.init(_:)();
}

uint64_t kInterestLastUpdatedDate.getter()
{
  return kInterestLastUpdatedDate.getter();
}

uint64_t static FairPlayRolloutController.shared.getter()
{
  return static FairPlayRolloutController.shared.getter();
}

Swift::Bool __swiftcall FairPlayRolloutController.isEnabled()()
{
  return FairPlayRolloutController.isEnabled()();
}

uint64_t type metadata accessor for FairPlayRolloutController()
{
  return type metadata accessor for FairPlayRolloutController();
}

Swift::Bool __swiftcall MediaCacheDeleteProcessor.start()()
{
  return MediaCacheDeleteProcessor.start()();
}

uint64_t type metadata accessor for MediaCacheDeleteProcessor()
{
  return type metadata accessor for MediaCacheDeleteProcessor();
}

uint64_t PurchaseControllerWrapper.purchaseController.getter()
{
  return PurchaseControllerWrapper.purchaseController.getter();
}

uint64_t static PurchaseControllerWrapper.sharedInstance.getter()
{
  return static PurchaseControllerWrapper.sharedInstance.getter();
}

uint64_t type metadata accessor for PurchaseControllerWrapper()
{
  return type metadata accessor for PurchaseControllerWrapper();
}

uint64_t static StandardKeyRequestHandler.keyRequestLicenseErrorDomain.getter()
{
  return static StandardKeyRequestHandler.keyRequestLicenseErrorDomain.getter();
}

uint64_t type metadata accessor for StandardKeyRequestHandler()
{
  return type metadata accessor for StandardKeyRequestHandler();
}

Swift::Void __swiftcall StorageAnalyticsResponder.endObserving()()
{
}

Swift::Void __swiftcall StorageAnalyticsResponder.beginObserving()()
{
}

uint64_t type metadata accessor for StorageAnalyticsResponder()
{
  return type metadata accessor for StorageAnalyticsResponder();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.resetIfNeeded()()
{
  return dispatch thunk of AnalyticsIdentifierManager.resetIfNeeded()();
}

uint64_t static AnalyticsIdentifierManager.sharedInstance.getter()
{
  return static AnalyticsIdentifierManager.sharedInstance.getter();
}

uint64_t static AnalyticsIdentifierManager.hashDSIDWithSalt(_:)()
{
  return static AnalyticsIdentifierManager.hashDSIDWithSalt(_:)();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.resetIdentifiers()()
{
  return dispatch thunk of AnalyticsIdentifierManager.resetIdentifiers()();
}

uint64_t type metadata accessor for AnalyticsIdentifierManager()
{
  return type metadata accessor for AnalyticsIdentifierManager();
}

uint64_t dispatch thunk of InterestRepositoryProtocol.undoSuggestLess(forAdamID:)()
{
  return dispatch thunk of InterestRepositoryProtocol.undoSuggestLess(forAdamID:)();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.addArtwork(withFileUrl:toEpisodeWithPersistentId:completion:)()
{
  return dispatch thunk of MediaLibraryClientProtocol.addArtwork(withFileUrl:toEpisodeWithPersistentId:completion:)();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.addEpisode(_:completion:)()
{
  return dispatch thunk of MediaLibraryClientProtocol.addEpisode(_:completion:)();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.deleteEpisodes(identifiers:completion:)()
{
  return dispatch thunk of MediaLibraryClientProtocol.deleteEpisodes(identifiers:completion:)();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.postRestoreCandidates()()
{
  return dispatch thunk of MediaLibraryClientProtocol.postRestoreCandidates()();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.mostRecentRestoreToken.getter()
{
  return dispatch thunk of MediaLibraryClientProtocol.mostRecentRestoreToken.getter();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.reconcileMostRecentlyDownloadedEpisodes(completion:)()
{
  return dispatch thunk of MediaLibraryClientProtocol.reconcileMostRecentlyDownloadedEpisodes(completion:)();
}

uint64_t static MediaRequestResponseParser.parseContainerResponse<A>(containerType:_:)()
{
  return static MediaRequestResponseParser.parseContainerResponse<A>(containerType:_:)();
}

uint64_t static MediaRequestResponseParser.parsePodcastEpisodeResponse(_:)()
{
  return static MediaRequestResponseParser.parsePodcastEpisodeResponse(_:)();
}

uint64_t type metadata accessor for MediaRequestResponseParser()
{
  return type metadata accessor for MediaRequestResponseParser();
}

uint64_t static ModernEpisodeDownloadState.== infix(_:_:)()
{
  return static ModernEpisodeDownloadState.== infix(_:_:)();
}

uint64_t PlayButtonTimeFormatHelper.widgetCountDownHelper.getter()
{
  return PlayButtonTimeFormatHelper.widgetCountDownHelper.getter();
}

uint64_t static PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper.== infix(_:_:)()
{
  return static PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper.== infix(_:_:)();
}

uint64_t static PlayButtonTimeFormatHelper.FormatStyle.== infix(_:_:)()
{
  return static PlayButtonTimeFormatHelper.FormatStyle.== infix(_:_:)();
}

uint64_t PlayButtonTimeFormatHelper.formatStyle.getter()
{
  return PlayButtonTimeFormatHelper.formatStyle.getter();
}

uint64_t PlayButtonTimeFormatHelper.init(timeLeft:duration:)()
{
  return PlayButtonTimeFormatHelper.init(timeLeft:duration:)();
}

uint64_t type metadata accessor for PlayButtonTimeFormatHelper()
{
  return type metadata accessor for PlayButtonTimeFormatHelper();
}

uint64_t DummyLegacyPlayerController.init()()
{
  return DummyLegacyPlayerController.init()();
}

uint64_t type metadata accessor for DummyLegacyPlayerController()
{
  return type metadata accessor for DummyLegacyPlayerController();
}

uint64_t FairPlayInvalidationManager.__allocating_init()()
{
  return FairPlayInvalidationManager.__allocating_init()();
}

uint64_t type metadata accessor for FairPlayInvalidationManager()
{
  return type metadata accessor for FairPlayInvalidationManager();
}

uint64_t static FeedManagerBagConfiguration.getConfigurationOrLocalDefault(completion:)()
{
  return static FeedManagerBagConfiguration.getConfigurationOrLocalDefault(completion:)();
}

uint64_t type metadata accessor for FeedManagerBagConfiguration()
{
  return type metadata accessor for FeedManagerBagConfiguration();
}

uint64_t static FetchedResultsListPublisher.unsafeUnlimitedListPublisher(identifier:entityName:predicate:sortDescriptors:managedObjectContext:receiveOn:transform:updateRequiredComparator:)()
{
  return static FetchedResultsListPublisher.unsafeUnlimitedListPublisher(identifier:entityName:predicate:sortDescriptors:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
}

uint64_t FetchedResultsListPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:)()
{
  return FetchedResultsListPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
}

uint64_t type metadata accessor for FetchedResultsListPublisher()
{
  return type metadata accessor for FetchedResultsListPublisher();
}

uint64_t PodcastEpisodeRelationships.playbackPosition.getter()
{
  return PodcastEpisodeRelationships.playbackPosition.getter();
}

uint64_t PodcastEpisodeRelationships.podcast.getter()
{
  return PodcastEpisodeRelationships.podcast.getter();
}

uint64_t PodcastPlaybackPositionData.attributes.getter()
{
  return PodcastPlaybackPositionData.attributes.getter();
}

uint64_t ReadOnlyCurrentValueSubject.value.getter()
{
  return ReadOnlyCurrentValueSubject.value.getter();
}

uint64_t FetchedResultsCountPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:)()
{
  return FetchedResultsCountPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:)();
}

uint64_t type metadata accessor for FetchedResultsCountPublisher()
{
  return type metadata accessor for FetchedResultsCountPublisher();
}

uint64_t PodcastRelationshipContainer.data.getter()
{
  return PodcastRelationshipContainer.data.getter();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.requestSecureDeletion(of:completionHandler:)()
{
  return dispatch thunk of SecureDownloadRenewalManager.requestSecureDeletion(of:completionHandler:)();
}

uint64_t SecureDownloadRenewalManager.__allocating_init()()
{
  return SecureDownloadRenewalManager.__allocating_init()();
}

uint64_t type metadata accessor for SecureDownloadRenewalManager()
{
  return type metadata accessor for SecureDownloadRenewalManager();
}

uint64_t static TimeBombedTranscriptProvider.background.getter()
{
  return static TimeBombedTranscriptProvider.background.getter();
}

uint64_t static TimeBombedTranscriptProvider.foreground.getter()
{
  return static TimeBombedTranscriptProvider.foreground.getter();
}

uint64_t TimeBombedTranscriptProvider.prefetch(request:)()
{
  return TimeBombedTranscriptProvider.prefetch(request:)();
}

uint64_t type metadata accessor for TimeBombedTranscriptProvider()
{
  return type metadata accessor for TimeBombedTranscriptProvider();
}

uint64_t TranscriptRequestInformation.init(episodeAdamId:episodeTitle:ttmlIdentifier:selectedTextTimeInterval:showName:source:)()
{
  return TranscriptRequestInformation.init(episodeAdamId:episodeTitle:ttmlIdentifier:selectedTextTimeInterval:showName:source:)();
}

uint64_t TranscriptRequestInformation.ttmlIdentifier.getter()
{
  return TranscriptRequestInformation.ttmlIdentifier.getter();
}

uint64_t TranscriptRequestInformation.selectedTextTimeInterval.setter()
{
  return TranscriptRequestInformation.selectedTextTimeInterval.setter();
}

uint64_t type metadata accessor for TranscriptRequestInformation()
{
  return type metadata accessor for TranscriptRequestInformation();
}

uint64_t AssetRemovalProcessorDelegate.init(episodeAndShowStorage:library:workQueue:managedAssetDirectory:)()
{
  return AssetRemovalProcessorDelegate.init(episodeAndShowStorage:library:workQueue:managedAssetDirectory:)();
}

uint64_t type metadata accessor for AssetRemovalProcessorDelegate()
{
  return type metadata accessor for AssetRemovalProcessorDelegate();
}

uint64_t BundleAssetTranscriptProvider.init(ttmlFileName:signatureFileName:bundle:)()
{
  return BundleAssetTranscriptProvider.init(ttmlFileName:signatureFileName:bundle:)();
}

uint64_t type metadata accessor for BundleAssetTranscriptProvider()
{
  return type metadata accessor for BundleAssetTranscriptProvider();
}

uint64_t CoreDataEpisodeAndShowStorage.init(context:)()
{
  return CoreDataEpisodeAndShowStorage.init(context:)();
}

uint64_t type metadata accessor for CoreDataEpisodeAndShowStorage()
{
  return type metadata accessor for CoreDataEpisodeAndShowStorage();
}

uint64_t DefaultEpisodeStateDataSource.init()()
{
  return DefaultEpisodeStateDataSource.init()();
}

uint64_t DefaultPodcastStateDataSource.init()()
{
  return DefaultPodcastStateDataSource.init()();
}

uint64_t type metadata accessor for DefaultPodcastStateDataSource()
{
  return type metadata accessor for DefaultPodcastStateDataSource();
}

uint64_t LibraryPodcastStateDataSource.init(contextProvider:)()
{
  return LibraryPodcastStateDataSource.init(contextProvider:)();
}

uint64_t type metadata accessor for LibraryPodcastStateDataSource()
{
  return type metadata accessor for LibraryPodcastStateDataSource();
}

uint64_t defaultPodcastTransitionRules.getter()
{
  return defaultPodcastTransitionRules.getter();
}

uint64_t AbandonedStreamIssueIdentifier.init()()
{
  return AbandonedStreamIssueIdentifier.init()();
}

uint64_t type metadata accessor for AbandonedStreamIssueIdentifier()
{
  return type metadata accessor for AbandonedStreamIssueIdentifier();
}

uint64_t EpisodeStateDataSourceProtocol.eraseToAnyEpisodeStateDataSource()()
{
  return EpisodeStateDataSourceProtocol.eraseToAnyEpisodeStateDataSource()();
}

uint64_t kInterestUnknownSyncProperties.getter()
{
  return kInterestUnknownSyncProperties.getter();
}

uint64_t AssetRemovalProcessorDataSource.init(managedObjectContext:receiverQueue:)()
{
  return AssetRemovalProcessorDataSource.init(managedObjectContext:receiverQueue:)();
}

uint64_t type metadata accessor for AssetRemovalProcessorDataSource()
{
  return type metadata accessor for AssetRemovalProcessorDataSource();
}

uint64_t AutoDownloadProcessorDataSource.init(context:accountDataSource:workQueue:capacityMonitor:)()
{
  return AutoDownloadProcessorDataSource.init(context:accountDataSource:workQueue:capacityMonitor:)();
}

uint64_t type metadata accessor for AutoDownloadProcessorDataSource()
{
  return type metadata accessor for AutoDownloadProcessorDataSource();
}

uint64_t AutoDownloadProcessorDownloader.init(reachability:context:capacityMonitor:downloader:analyticsChannel:workQueue:)()
{
  return AutoDownloadProcessorDownloader.init(reachability:context:capacityMonitor:downloader:analyticsChannel:workQueue:)();
}

uint64_t type metadata accessor for AutoDownloadProcessorDownloader()
{
  return type metadata accessor for AutoDownloadProcessorDownloader();
}

uint64_t AVAssetsInLibraryIssueIdentifier.init()()
{
  return AVAssetsInLibraryIssueIdentifier.init()();
}

uint64_t type metadata accessor for AVAssetsInLibraryIssueIdentifier()
{
  return type metadata accessor for AVAssetsInLibraryIssueIdentifier();
}

uint64_t static AbbreviatedTimeIntervalFormatter.string(from:relativeTo:currentYearReferenceDate:)()
{
  return static AbbreviatedTimeIntervalFormatter.string(from:relativeTo:currentYearReferenceDate:)();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.requestEvaluation()()
{
  return dispatch thunk of DebouncedEpisodeAndShowProcessor.requestEvaluation()();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.start()()
{
  return dispatch thunk of DebouncedEpisodeAndShowProcessor.start()();
}

uint64_t DebouncedEpisodeAndShowProcessor.init(interval:dataSource:storage:delegate:workQueue:inverseBatchSize:)()
{
  return DebouncedEpisodeAndShowProcessor.init(interval:dataSource:storage:delegate:workQueue:inverseBatchSize:)();
}

uint64_t type metadata accessor for DebouncedEpisodeAndShowProcessor()
{
  return type metadata accessor for DebouncedEpisodeAndShowProcessor();
}

uint64_t FetchedResultsSectionedPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:sectionTransform:)()
{
  return FetchedResultsSectionedPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:sectionTransform:)();
}

Swift::Bool __swiftcall MediaCacheDeleteRemovalProcessor.start()()
{
  return MediaCacheDeleteRemovalProcessor.start()();
}

uint64_t type metadata accessor for MediaCacheDeleteRemovalProcessor()
{
  return type metadata accessor for MediaCacheDeleteRemovalProcessor();
}

uint64_t PodcastEditorialArtworkContainer.podcastPageBackground.getter()
{
  return PodcastEditorialArtworkContainer.podcastPageBackground.getter();
}

uint64_t PodcastPlaybackPositionContainer.data.getter()
{
  return PodcastPlaybackPositionContainer.data.getter();
}

uint64_t UninitializedCurrentValueSubject.send(_:)()
{
  return UninitializedCurrentValueSubject.send(_:)();
}

uint64_t UninitializedCurrentValueSubject.value.getter()
{
  return UninitializedCurrentValueSubject.value.getter();
}

uint64_t UninitializedCurrentValueSubject.init()()
{
  return UninitializedCurrentValueSubject.init()();
}

uint64_t type metadata accessor for UninitializedCurrentValueSubject()
{
  return type metadata accessor for UninitializedCurrentValueSubject();
}

uint64_t FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)()
{
  return FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
}

uint64_t ModernEpisodeDownloadStateMachine.currentState.getter()
{
  return ModernEpisodeDownloadStateMachine.currentState.getter();
}

uint64_t dispatch thunk of PendingPlaybackControllerProtocol.reset()()
{
  return dispatch thunk of PendingPlaybackControllerProtocol.reset()();
}

uint64_t dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)()
{
  return dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)();
}

uint64_t defaultEpisodePlayTransitionRules.getter()
{
  return defaultEpisodePlayTransitionRules.getter();
}

uint64_t CoreDataEpisodeAssetIssueIdentifier.init(analyticsChannel:)()
{
  return CoreDataEpisodeAssetIssueIdentifier.init(analyticsChannel:)();
}

uint64_t type metadata accessor for CoreDataEpisodeAssetIssueIdentifier()
{
  return type metadata accessor for CoreDataEpisodeAssetIssueIdentifier();
}

uint64_t PodcastChannelRelationshipContainer.data.getter()
{
  return PodcastChannelRelationshipContainer.data.getter();
}

uint64_t OnDemandLibraryEpisodeStateDataSource.init(episodeStateRepository:)()
{
  return OnDemandLibraryEpisodeStateDataSource.init(episodeStateRepository:)();
}

uint64_t PodcastPlaybackPositionDataAttributes.positionInMilliseconds.getter()
{
  return PodcastPlaybackPositionDataAttributes.positionInMilliseconds.getter();
}

uint64_t defaultEpisodeBookmarkTransitionRules.getter()
{
  return defaultEpisodeBookmarkTransitionRules.getter();
}

uint64_t defaultEpisodeDownloadTransitionRules.getter()
{
  return defaultEpisodeDownloadTransitionRules.getter();
}

uint64_t CompoundDownloadedAssetIssueIdentifier.init(identifiers:)()
{
  return CompoundDownloadedAssetIssueIdentifier.init(identifiers:)();
}

uint64_t type metadata accessor for CompoundDownloadedAssetIssueIdentifier()
{
  return type metadata accessor for CompoundDownloadedAssetIssueIdentifier();
}

uint64_t PrioritizedDownloadConsistencyResolutionStrategy.init(strategies:)()
{
  return PrioritizedDownloadConsistencyResolutionStrategy.init(strategies:)();
}

uint64_t type metadata accessor for PrioritizedDownloadConsistencyResolutionStrategy()
{
  return type metadata accessor for PrioritizedDownloadConsistencyResolutionStrategy();
}

uint64_t DeletionDownloadConsistencyIssueResolutionStrategy.init()()
{
  return DeletionDownloadConsistencyIssueResolutionStrategy.init()();
}

uint64_t type metadata accessor for DeletionDownloadConsistencyIssueResolutionStrategy()
{
  return type metadata accessor for DeletionDownloadConsistencyIssueResolutionStrategy();
}

uint64_t Color.init(descriptor:)()
{
  return Color.init(descriptor:)();
}

uint64_t static AdamID.empty.getter()
{
  return static AdamID.empty.getter();
}

uint64_t static AdamID.parse(_:)()
{
  return static AdamID.parse(_:)();
}

uint64_t AdamID.isEmpty.getter()
{
  return AdamID.isEmpty.getter();
}

uint64_t AdamID.init(rawValue:)()
{
  return AdamID.init(rawValue:)();
}

uint64_t AdamID.init(_:)()
{
  return AdamID.init(_:)();
}

uint64_t type metadata accessor for CropCode()
{
  return type metadata accessor for CropCode();
}

uint64_t Loadable.item.getter()
{
  return Loadable.item.getter();
}

uint64_t ShowType.rawValue.getter()
{
  return ShowType.rawValue.getter();
}

uint64_t type metadata accessor for BugReport.Domain()
{
  return type metadata accessor for BugReport.Domain();
}

uint64_t BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)()
{
  return BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)();
}

uint64_t type metadata accessor for BugReport.ErrorKind()
{
  return type metadata accessor for BugReport.ErrorKind();
}

uint64_t type metadata accessor for BugReport()
{
  return type metadata accessor for BugReport();
}

uint64_t FRPOutput.map<A>(_:)()
{
  return FRPOutput.map<A>(_:)();
}

uint64_t FRPOutput.init(content:hasMore:totalCount:)()
{
  return FRPOutput.init(content:hasMore:totalCount:)();
}

uint64_t FRPOutput.content.getter()
{
  return FRPOutput.content.getter();
}

uint64_t type metadata accessor for FRPOutput()
{
  return type metadata accessor for FRPOutput();
}

uint64_t PriceType.rawValue.getter()
{
  return PriceType.rawValue.getter();
}

uint64_t type metadata accessor for PriceType()
{
  return type metadata accessor for PriceType();
}

uint64_t Traceable.traced(by:)()
{
  return Traceable.traced(by:)();
}

uint64_t PlayerNotification_PlayerPathDidChange.getter()
{
  return PlayerNotification_PlayerPathDidChange.getter();
}

uint64_t dispatch thunk of PlayerProtocol.playerPathCoordinator.getter()
{
  return dispatch thunk of PlayerProtocol.playerPathCoordinator.getter();
}

uint64_t type metadata accessor for PlayerAutoStopMode()
{
  return type metadata accessor for PlayerAutoStopMode();
}

uint64_t PlayerPlaybackSpeed.localizedName.getter()
{
  return PlayerPlaybackSpeed.localizedName.getter();
}

uint64_t static PlayerPlaybackSpeed.allCases.getter()
{
  return static PlayerPlaybackSpeed.allCases.getter();
}

uint64_t PlayerPlaybackSpeed.init(rawValue:)()
{
  return PlayerPlaybackSpeed.init(rawValue:)();
}

uint64_t PlayerPlaybackSpeed.rawValue.getter()
{
  return PlayerPlaybackSpeed.rawValue.getter();
}

uint64_t type metadata accessor for PlayerPlaybackSpeed()
{
  return type metadata accessor for PlayerPlaybackSpeed();
}

uint64_t dispatch thunk of PlayerPathCoordinator.updatePlayerPaths(with:)()
{
  return dispatch thunk of PlayerPathCoordinator.updatePlayerPaths(with:)();
}

uint64_t dispatch thunk of PlayerPathCoordinator.didReceiveResponse(for:)()
{
  return dispatch thunk of PlayerPathCoordinator.didReceiveResponse(for:)();
}

uint64_t dispatch thunk of PlayerPathCoordinator.didReceiveErrorLoadingResponse(for:error:)()
{
  return dispatch thunk of PlayerPathCoordinator.didReceiveErrorLoadingResponse(for:error:)();
}

uint64_t PlayerPathCoordinator.init(playerID:bundleID:)()
{
  return PlayerPathCoordinator.init(playerID:bundleID:)();
}

uint64_t type metadata accessor for PlayerPathCoordinator()
{
  return type metadata accessor for PlayerPathCoordinator();
}

uint64_t PlayerNotification_PlaystateDidChange.getter()
{
  return PlayerNotification_PlaystateDidChange.getter();
}

uint64_t PlayerNotification_AutoStopModeDidChange.getter()
{
  return PlayerNotification_AutoStopModeDidChange.getter();
}

uint64_t PlayerNotification_JumpDurationDidChange.getter()
{
  return PlayerNotification_JumpDurationDidChange.getter();
}

uint64_t UTType.init(mimeType:conformingTo:)()
{
  return UTType.init(mimeType:conformingTo:)();
}

uint64_t UTType.preferredFilenameExtension.getter()
{
  return UTType.preferredFilenameExtension.getter();
}

uint64_t static UTType.data.getter()
{
  return static UTType.data.getter();
}

uint64_t static UTType.folder.getter()
{
  return static UTType.folder.getter();
}

uint64_t type metadata accessor for UTType()
{
  return type metadata accessor for UTType();
}

uint64_t static TabConverter.translateNavigationTab(for:interface:)()
{
  return static TabConverter.translateNavigationTab(for:interface:)();
}

uint64_t dispatch thunk of FlowController.viewController(for:referrer:)()
{
  return dispatch thunk of FlowController.viewController(for:referrer:)();
}

uint64_t dispatch thunk of FlowController.show(destination:hints:referrer:)()
{
  return dispatch thunk of FlowController.show(destination:hints:referrer:)();
}

uint64_t dispatch thunk of FlowController.change(tab:execute:popToRoot:preserveTransientView:userInitiated:suppressMetrics:objectGraph:)()
{
  return dispatch thunk of FlowController.change(tab:execute:popToRoot:preserveTransientView:userInitiated:suppressMetrics:objectGraph:)();
}

uint64_t type metadata accessor for FlowActionRunner()
{
  return type metadata accessor for FlowActionRunner();
}

uint64_t RootActionRunner.init(target:)()
{
  return RootActionRunner.init(target:)();
}

uint64_t type metadata accessor for RootActionRunner()
{
  return type metadata accessor for RootActionRunner();
}

uint64_t type metadata accessor for SmartPlayContext()
{
  return type metadata accessor for SmartPlayContext();
}

uint64_t HUDViewController.init(type:)()
{
  return HUDViewController.init(type:)();
}

uint64_t type metadata accessor for HUDViewController.HUDType()
{
  return type metadata accessor for HUDViewController.HUDType();
}

uint64_t dispatch thunk of HUDViewController.present()()
{
  return dispatch thunk of HUDViewController.present()();
}

uint64_t type metadata accessor for HUDViewController()
{
  return type metadata accessor for HUDViewController();
}

uint64_t dispatch thunk of BaseFlowController.metricsPipeline.getter()
{
  return dispatch thunk of BaseFlowController.metricsPipeline.getter();
}

uint64_t dispatch thunk of BaseFlowController.debugActionsProvider.setter()
{
  return dispatch thunk of BaseFlowController.debugActionsProvider.setter();
}

uint64_t type metadata accessor for BaseFlowController()
{
  return type metadata accessor for BaseFlowController();
}

uint64_t RootFlowController.init(rootViewController:asPartOf:)()
{
  return RootFlowController.init(rootViewController:asPartOf:)();
}

uint64_t static RootFlowController.shared.setter()
{
  return static RootFlowController.shared.setter();
}

uint64_t type metadata accessor for RootFlowController()
{
  return type metadata accessor for RootFlowController();
}

uint64_t PerformanceTestCase.init(name:options:)()
{
  return PerformanceTestCase.init(name:options:)();
}

uint64_t PerformanceTestCase.name.getter()
{
  return PerformanceTestCase.name.getter();
}

uint64_t type metadata accessor for PerformanceTestCase()
{
  return type metadata accessor for PerformanceTestCase();
}

uint64_t dispatch thunk of PerformanceTestable.perform(testCase:runner:)()
{
  return dispatch thunk of PerformanceTestable.perform(testCase:runner:)();
}

uint64_t ParentFlowController.viewControllerProvider.getter()
{
  return ParentFlowController.viewControllerProvider.getter();
}

uint64_t ParentFlowController.viewControllerGenerator.getter()
{
  return ParentFlowController.viewControllerGenerator.getter();
}

uint64_t ParentFlowController.interfaceMode.setter()
{
  return ParentFlowController.interfaceMode.setter();
}

Swift::Void __swiftcall ParentFlowController.initializePageContextForMetrics()()
{
}

uint64_t ParentFlowController.init(asPartOf:splitViewController:tabBarController:interfaceMode:)()
{
  return ParentFlowController.init(asPartOf:splitViewController:tabBarController:interfaceMode:)();
}

uint64_t type metadata accessor for ParentFlowController()
{
  return type metadata accessor for ParentFlowController();
}

uint64_t dispatch thunk of TabBarFlowController.navigationControllerDelegate.getter()
{
  return dispatch thunk of TabBarFlowController.navigationControllerDelegate.getter();
}

uint64_t TabBarFlowController.init(tabBarController:loadingNavigationController:asPartOf:)()
{
  return TabBarFlowController.init(tabBarController:loadingNavigationController:asPartOf:)();
}

uint64_t dispatch thunk of TabBarFlowController.initializePageContextForMetrics()()
{
  return dispatch thunk of TabBarFlowController.initializePageContextForMetrics()();
}

uint64_t type metadata accessor for TabBarFlowController()
{
  return type metadata accessor for TabBarFlowController();
}

uint64_t static FlowPresentationHints.modalFormSheet.getter()
{
  return static FlowPresentationHints.modalFormSheet.getter();
}

uint64_t FlowPresentationHints.init(context:animate:)()
{
  return FlowPresentationHints.init(context:animate:)();
}

uint64_t static FlowPresentationHints.default.getter()
{
  return static FlowPresentationHints.default.getter();
}

uint64_t type metadata accessor for FlowPresentationHints()
{
  return type metadata accessor for FlowPresentationHints();
}

uint64_t dispatch thunk of WelcomeViewController.deferUntilAcknowledged(_:)()
{
  return dispatch thunk of WelcomeViewController.deferUntilAcknowledged(_:)();
}

uint64_t type metadata accessor for WelcomeViewController()
{
  return type metadata accessor for WelcomeViewController();
}

uint64_t PPTViewControllerProxy.init(tabBarController:)()
{
  return PPTViewControllerProxy.init(tabBarController:)();
}

uint64_t PPTViewControllerProxy.prepareForTesting(testCase:)()
{
  return PPTViewControllerProxy.prepareForTesting(testCase:)();
}

uint64_t type metadata accessor for PPTViewControllerProxy()
{
  return type metadata accessor for PPTViewControllerProxy();
}

uint64_t dispatch thunk of MigrationViewController.isAcknowledgementRequired.setter()
{
  return dispatch thunk of MigrationViewController.isAcknowledgementRequired.setter();
}

uint64_t type metadata accessor for MigrationViewController()
{
  return type metadata accessor for MigrationViewController();
}

uint64_t dispatch thunk of RootSplitViewController.createMenuBarController(asPartOf:)()
{
  return dispatch thunk of RootSplitViewController.createMenuBarController(asPartOf:)();
}

uint64_t RootSplitViewController.init(hostingViewController:tabBarController:searchSuggestionsController:asPartOf:)()
{
  return RootSplitViewController.init(hostingViewController:tabBarController:searchSuggestionsController:asPartOf:)();
}

uint64_t dispatch thunk of RootSplitViewController.setFlowController(_:)()
{
  return dispatch thunk of RootSplitViewController.setFlowController(_:)();
}

uint64_t dispatch thunk of RootSplitViewController.actionRunner.setter()
{
  return dispatch thunk of RootSplitViewController.actionRunner.setter();
}

uint64_t dispatch thunk of RootSplitViewController.interfaceMode.getter()
{
  return dispatch thunk of RootSplitViewController.interfaceMode.getter();
}

uint64_t dispatch thunk of RootSplitViewController.$interfaceMode.getter()
{
  return dispatch thunk of RootSplitViewController.$interfaceMode.getter();
}

uint64_t type metadata accessor for RootSplitViewController()
{
  return type metadata accessor for RootSplitViewController();
}

Swift::OpaquePointer_optional __swiftcall FlowNavigationController.popToRootViewController(animated:)(Swift::Bool animated)
{
  uint64_t v1 = (void *)FlowNavigationController.popToRootViewController(animated:)(animated);
  result.value._rawValue = v1;
  result.is_nil = v2;
  return result;
}

uint64_t FlowNavigationController.__allocating_init(asPartOf:)()
{
  return FlowNavigationController.__allocating_init(asPartOf:)();
}

uint64_t type metadata accessor for FlowNavigationController()
{
  return type metadata accessor for FlowNavigationController();
}

uint64_t ModernPageViewController.init(asPartOf:with:)()
{
  return ModernPageViewController.init(asPartOf:with:)();
}

uint64_t type metadata accessor for SmartPlayPlatformContext()
{
  return type metadata accessor for SmartPlayPlatformContext();
}

uint64_t dispatch thunk of SmartPlayButtonController.buttonTitle(for:)()
{
  return dispatch thunk of SmartPlayButtonController.buttonTitle(for:)();
}

uint64_t dispatch thunk of SmartPlayButtonController.apply(model:)()
{
  return dispatch thunk of SmartPlayButtonController.apply(model:)();
}

uint64_t SmartPlayButtonController.init(button:context:platform:objectGraph:)()
{
  return SmartPlayButtonController.init(button:context:platform:objectGraph:)();
}

uint64_t type metadata accessor for SmartPlayButtonController()
{
  return type metadata accessor for SmartPlayButtonController();
}

uint64_t static DebugSettingsViewController.isActivation(url:)()
{
  return static DebugSettingsViewController.isActivation(url:)();
}

uint64_t type metadata accessor for DebugSettingsViewController()
{
  return type metadata accessor for DebugSettingsViewController();
}

uint64_t MiniPlayerHostViewController.__allocating_init(asPartOf:wrapping:miniPlayerController:)()
{
  return MiniPlayerHostViewController.__allocating_init(asPartOf:wrapping:miniPlayerController:)();
}

uint64_t type metadata accessor for MiniPlayerHostViewController()
{
  return type metadata accessor for MiniPlayerHostViewController();
}

uint64_t type metadata accessor for EpisodeUpsellBannerDataProvider()
{
  return type metadata accessor for EpisodeUpsellBannerDataProvider();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t os_signpost(_:dso:log:name:signpostID:)()
{
  return os_signpost(_:dso:log:name:signpostID:)();
}

uint64_t OSSignpostID.init(log:object:)()
{
  return OSSignpostID.init(log:object:)();
}

uint64_t OSSignpostID.init(log:)()
{
  return OSSignpostID.init(log:)();
}

uint64_t OSSignpostID.rawValue.getter()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t static OSSignpostID.exclusive.getter()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t static OSSignposter.bootstrap.getter()
{
  return static OSSignposter.bootstrap.getter();
}

uint64_t static OSSignposter.feedUpdate.getter()
{
  return static OSSignposter.feedUpdate.getter();
}

uint64_t static OSSignposter.cloudSync.getter()
{
  return static OSSignposter.cloudSync.getter();
}

uint64_t static OSSignposter.interests.getter()
{
  return static OSSignposter.interests.getter();
}

uint64_t OSSignposter.logHandle.getter()
{
  return OSSignposter.logHandle.getter();
}

uint64_t type metadata accessor for OSSignposter()
{
  return type metadata accessor for OSSignposter();
}

uint64_t type metadata accessor for OSSignpostError()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t OSSignpostIntervalState.signpostID.getter()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OSSignpostIntervalState.init(id:isOpen:)()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t type metadata accessor for OSSignpostIntervalState()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t checkForErrorAndConsumeState(state:)()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t static Logger.navigation.getter()
{
  return static Logger.navigation.getter();
}

uint64_t static Logger.transcripts.getter()
{
  return static Logger.transcripts.getter();
}

uint64_t static Logger.restrictions.getter()
{
  return static Logger.restrictions.getter();
}

uint64_t static Logger.userActivity.getter()
{
  return static Logger.userActivity.getter();
}

uint64_t static Logger.modernPlayback.getter()
{
  return static Logger.modernPlayback.getter();
}

uint64_t static Logger.backgroundTaskManager.getter()
{
  return static Logger.backgroundTaskManager.getter();
}

uint64_t static Logger.podcastsStatesCoordination.getter()
{
  return static Logger.podcastsStatesCoordination.getter();
}

uint64_t static Logger.js.getter()
{
  return static Logger.js.getter();
}

uint64_t static Logger.ui.getter()
{
  return static Logger.ui.getter();
}

uint64_t static Logger.widget.getter()
{
  return static Logger.widget.getter();
}

uint64_t static Logger.artwork.getter()
{
  return static Logger.artwork.getter();
}

uint64_t static Logger.database.getter()
{
  return static Logger.database.getter();
}

uint64_t static Logger.fairPlay.getter()
{
  return static Logger.fairPlay.getter();
}

uint64_t static Logger.playback.getter()
{
  return static Logger.playback.getter();
}

uint64_t static Logger.cloudSync.getter()
{
  return static Logger.cloudSync.getter();
}

uint64_t static Logger.downloads.getter()
{
  return static Logger.downloads.getter();
}

uint64_t static Logger.interests.getter()
{
  return static Logger.interests.getter();
}

uint64_t static Logger.lifecycle.getter()
{
  return static Logger.lifecycle.getter();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t static MetricsVisualizer.setupMetricsEventVisualizer()()
{
  return static MetricsVisualizer.setupMetricsEventVisualizer()();
}

uint64_t static JULoadingViewController.PresentationContext.fullCover.getter()
{
  return static JULoadingViewController.PresentationContext.fullCover.getter();
}

uint64_t type metadata accessor for JULoadingViewController.PresentationContext()
{
  return type metadata accessor for JULoadingViewController.PresentationContext();
}

uint64_t JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)()
{
  return JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)();
}

uint64_t type metadata accessor for JULoadingViewController()
{
  return type metadata accessor for JULoadingViewController();
}

uint64_t Publishers.CombineLatest.init(_:_:)()
{
  return Publishers.CombineLatest.init(_:_:)();
}

uint64_t Publishers.CombineLatest3.init(_:_:_:)()
{
  return Publishers.CombineLatest3.init(_:_:_:)();
}

uint64_t Publishers.CombineLatest4.init(_:_:_:_:)()
{
  return Publishers.CombineLatest4.init(_:_:_:_:)();
}

uint64_t Publishers.CompactMap.map<A>(_:)()
{
  return Publishers.CompactMap.map<A>(_:)();
}

uint64_t type metadata accessor for Publishers.MapKeyPath()
{
  return type metadata accessor for Publishers.MapKeyPath();
}

uint64_t type metadata accessor for Publishers.PrefetchStrategy()
{
  return type metadata accessor for Publishers.PrefetchStrategy();
}

uint64_t Publishers.Sequence.compactMap<A>(_:)()
{
  return Publishers.Sequence.compactMap<A>(_:)();
}

uint64_t Publishers.Sequence.filter(_:)()
{
  return Publishers.Sequence.filter(_:)();
}

uint64_t Publishers.Sequence.init(sequence:)()
{
  return Publishers.Sequence.init(sequence:)();
}

uint64_t static Subscribers.Demand.unlimited.getter()
{
  return static Subscribers.Demand.unlimited.getter();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

uint64_t AnyCancellable.store<A>(in:)()
{
  return AnyCancellable.store<A>(in:)();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
}

uint64_t type metadata accessor for AnyCancellable()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t PassthroughSubject.send(_:)()
{
  return PassthroughSubject.send(_:)();
}

uint64_t PassthroughSubject.init()()
{
  return PassthroughSubject.init()();
}

uint64_t CurrentValueSubject.send(_:)()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t CurrentValueSubject.value.getter()
{
  return CurrentValueSubject.value.getter();
}

uint64_t CurrentValueSubject.value.setter()
{
  return CurrentValueSubject.value.setter();
}

uint64_t CurrentValueSubject.init(_:)()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t ConnectablePublisher.autoconnect()()
{
  return ConnectablePublisher.autoconnect()();
}

uint64_t type metadata accessor for ObservableObjectPublisher()
{
  return type metadata accessor for ObservableObjectPublisher();
}

uint64_t Fail.init(error:)()
{
  return Fail.init(error:)();
}

uint64_t Just.setFailureType<A>(to:)()
{
  return Just.setFailureType<A>(to:)();
}

uint64_t Just.init(_:)()
{
  return Just.init(_:)();
}

uint64_t Empty.init(completeImmediately:)()
{
  return Empty.init(completeImmediately:)();
}

uint64_t Future.init(_:)()
{
  return Future.init(_:)();
}

uint64_t Subject<>.send()()
{
  return Subject<>.send()();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t Published.projectedValue.setter()
{
  return Published.projectedValue.setter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.emitPageRenderResourceEvents(using:onScreen:)()
{
  return Publisher.emitPageRenderResourceEvents(using:onScreen:)();
}

uint64_t Publisher<>.paginatedSwitchToLatest()()
{
  return Publisher<>.paginatedSwitchToLatest()();
}

uint64_t Publisher.nonNilValues<A>()()
{
  return Publisher.nonNilValues<A>()();
}

uint64_t Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)()
{
  return Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)();
}

uint64_t Publisher.bufferedMulticast()()
{
  return Publisher.bufferedMulticast()();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t Publisher.compactMap<A>(_:)()
{
  return Publisher.compactMap<A>(_:)();
}

uint64_t Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)()
{
  return Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)();
}

uint64_t Publisher.replaceEmpty(with:)()
{
  return Publisher.replaceEmpty(with:)();
}

uint64_t Publisher.replaceError(with:)()
{
  return Publisher.replaceError(with:)();
}

uint64_t Publisher.combineLatest<A, B>(_:_:)()
{
  return Publisher.combineLatest<A, B>(_:_:)();
}

{
  return Publisher.combineLatest<A, B>(_:_:)();
}

uint64_t Publisher.combineLatest<A>(_:)()
{
  return Publisher.combineLatest<A>(_:)();
}

uint64_t Publisher.removeDuplicates(by:)()
{
  return Publisher.removeDuplicates(by:)();
}

uint64_t Publisher.map<A>(_:)()
{
  return Publisher.map<A>(_:)();
}

{
  return Publisher.map<A>(_:)();
}

uint64_t Publisher.drop(while:)()
{
  return Publisher.drop(while:)();
}

uint64_t Publisher.scan<A>(_:_:)()
{
  return Publisher.scan<A>(_:_:)();
}

uint64_t Publisher.sink(receiveCompletion:receiveValue:)()
{
  return Publisher.sink(receiveCompletion:receiveValue:)();
}

uint64_t Publisher.catch<A>(_:)()
{
  return Publisher.catch<A>(_:)();
}

uint64_t Publisher.first(where:)()
{
  return Publisher.first(where:)();
}

uint64_t Publisher.first()()
{
  return Publisher.first()();
}

uint64_t Publisher.buffer(size:prefetch:whenFull:)()
{
  return Publisher.buffer(size:prefetch:whenFull:)();
}

uint64_t Publisher.filter(_:)()
{
  return Publisher.filter(_:)();
}

uint64_t Publisher.tryMap<A>(_:)()
{
  return Publisher.tryMap<A>(_:)();
}

uint64_t Publisher.collect()()
{
  return Publisher.collect()();
}

uint64_t Publisher.flatMap<A>(maxPublishers:_:)()
{
  return Publisher.flatMap<A>(maxPublishers:_:)();
}

uint64_t Publisher.flatMap<A, B>(maxPublishers:_:)()
{
  return Publisher.flatMap<A, B>(maxPublishers:_:)();
}

uint64_t Publisher.prepend(_:)()
{
  return Publisher.prepend(_:)();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher.timeout<A>(_:scheduler:options:customError:)()
{
  return Publisher.timeout<A>(_:scheduler:options:customError:)();
}

uint64_t Publisher.debounce<A>(for:scheduler:options:)()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t Publisher.throttle<A>(for:scheduler:latest:)()
{
  return Publisher.throttle<A>(for:scheduler:latest:)();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t Publisher<>.switchToLatest()()
{
  return Publisher<>.switchToLatest()();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t Publisher<>.values.getter()
{
  return Publisher<>.values.getter();
}

uint64_t Publisher<>.flatMap<A>(maxPublishers:_:)()
{
  return Publisher<>.flatMap<A>(maxPublishers:_:)();
}

{
  return Publisher<>.flatMap<A>(maxPublishers:_:)();
}

uint64_t AppStorage.init<A>(wrappedValue:_:store:)()
{
  return AppStorage.init<A>(wrappedValue:_:store:)();
}

{
  return AppStorage.init<A>(wrappedValue:_:store:)();
}

uint64_t AppStorage.wrappedValue.getter()
{
  return AppStorage.wrappedValue.getter();
}

uint64_t AppStorage.wrappedValue.setter()
{
  return AppStorage.wrappedValue.setter();
}

uint64_t AppStorage.projectedValue.getter()
{
  return AppStorage.projectedValue.getter();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

Swift::Void __swiftcall DismissAction.callAsFunction()()
{
}

uint64_t type metadata accessor for DismissAction()
{
  return type metadata accessor for DismissAction();
}

{
  return type metadata accessor for DismissAction();
}

uint64_t ImageRenderer.uiImage.getter()
{
  return ImageRenderer.uiImage.getter();
}

uint64_t ImageRenderer.scale.setter()
{
  return ImageRenderer.scale.setter();
}

uint64_t ImageRenderer.init(content:)()
{
  return ImageRenderer.init(content:)();
}

uint64_t OpenURLAction.init(handler:)()
{
  return OpenURLAction.init(handler:)();
}

uint64_t type metadata accessor for OpenURLAction()
{
  return type metadata accessor for OpenURLAction();
}

uint64_t LinearGradient.init(gradient:startPoint:endPoint:)()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t NavigationLink.init(destination:label:)()
{
  return NavigationLink.init(destination:label:)();
}

uint64_t type metadata accessor for NavigationLink()
{
  return type metadata accessor for NavigationLink();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t EnvironmentValues.lineSpacing.getter()
{
  return EnvironmentValues.lineSpacing.getter();
}

uint64_t EnvironmentValues.lineSpacing.setter()
{
  return EnvironmentValues.lineSpacing.setter();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t EnvironmentValues.dismiss.getter()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t EnvironmentValues.openURL.getter()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t EnvironmentValues.openURL.setter()
{
  return EnvironmentValues.openURL.setter();
}

uint64_t EnvironmentValues.isEnabled.getter()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t EnvironmentValues.isEnabled.setter()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t InlinePickerStyle.init()()
{
  return InlinePickerStyle.init()();
}

uint64_t type metadata accessor for InlinePickerStyle()
{
  return type metadata accessor for InlinePickerStyle();
}

uint64_t type metadata accessor for NavigationBarItem.TitleDisplayMode()
{
  return type metadata accessor for NavigationBarItem.TitleDisplayMode();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t type metadata accessor for _ValueActionModifier()
{
  return type metadata accessor for _ValueActionModifier();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t static AccessibilityActionKind.default.getter()
{
  return static AccessibilityActionKind.default.getter();
}

uint64_t type metadata accessor for AccessibilityActionKind()
{
  return type metadata accessor for AccessibilityActionKind();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t type metadata accessor for Font.Design()
{
  return type metadata accessor for Font.Design();
}

uint64_t static Font.Weight.semibold.getter()
{
  return static Font.Weight.semibold.getter();
}

uint64_t static Font.system(size:weight:design:)()
{
  return static Font.system(size:weight:design:)();
}

uint64_t Form.init(content:)()
{
  return Form.init(content:)();
}

uint64_t type metadata accessor for Form()
{
  return type metadata accessor for Form();
}

Swift::Void __swiftcall Path.move(to:)(CGPoint to)
{
  Path.move(to:)((__n128)__PAIR128__(v1, *(unint64_t *)&to.x), (__n128)__PAIR128__(v2, *(unint64_t *)&to.y));
}

Swift::Void __swiftcall Path.addLine(to:)(CGPoint to)
{
  Path.addLine(to:)((__n128)__PAIR128__(v1, *(unint64_t *)&to.x), (__n128)__PAIR128__(v2, *(unint64_t *)&to.y));
}

uint64_t Path.init(_:)()
{
  return Path.init(_:)();
}

uint64_t Text.fontWeight(_:)()
{
  return Text.fontWeight(_:)();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init(_:)()
{
  return Text.init(_:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.fontWeight(_:)()
{
  return View.fontWeight(_:)();
}

uint64_t View.pickerStyle<A>(_:)()
{
  return View.pickerStyle<A>(_:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.navigationTitle(_:)()
{
  return View.navigationTitle(_:)();
}

uint64_t View.navigationTitle<A>(_:)()
{
  return View.navigationTitle<A>(_:)();
}

uint64_t View.accessibilityAction(_:_:)()
{
  return View.accessibilityAction(_:_:)();
}

uint64_t View.navigationBarTitleDisplayMode(_:)()
{
  return View.navigationBarTitleDisplayMode(_:)();
}

uint64_t View.onChange<A>(of:perform:)()
{
  return View.onChange<A>(of:perform:)();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t static Color.black.getter()
{
  return static Color.black.getter();
}

uint64_t static Color.clear.getter()
{
  return static Color.clear.getter();
}

uint64_t static Color.white.getter()
{
  return static Color.white.getter();
}

uint64_t static Color.purple.getter()
{
  return static Color.purple.getter();
}

uint64_t static Color.secondary.getter()
{
  return static Color.secondary.getter();
}

uint64_t Color.init(_:red:green:blue:opacity:)()
{
  return Color.init(_:red:green:blue:opacity:)();
}

uint64_t Image.init(uiImage:)()
{
  return Image.init(uiImage:)();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t State.wrappedValue.getter()
{
  return State.wrappedValue.getter();
}

uint64_t State.wrappedValue.setter()
{
  return State.wrappedValue.setter();
}

uint64_t State.projectedValue.getter()
{
  return State.projectedValue.getter();
}

uint64_t Button<>.init(_:action:)()
{
  return Button<>.init(_:action:)();
}

uint64_t Picker.init(selection:label:content:)()
{
  return Picker.init(selection:label:content:)();
}

uint64_t type metadata accessor for Picker()
{
  return type metadata accessor for Picker();
}

uint64_t Slider<>.init<A>(value:in:onEditingChanged:)()
{
  return Slider<>.init<A>(value:in:onEditingChanged:)();
}

uint64_t Toggle<>.init(_:isOn:)()
{
  return Toggle<>.init(_:isOn:)();
}

uint64_t Binding.wrappedValue.getter()
{
  return Binding.wrappedValue.getter();
}

uint64_t Binding.subscript.getter()
{
  return Binding.subscript.getter();
}

uint64_t Binding.projectedValue.getter()
{
  return Binding.projectedValue.getter();
}

uint64_t type metadata accessor for Binding()
{
  return type metadata accessor for Binding();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t ForEach<>.init(_:content:)()
{
  return ForEach<>.init(_:content:)();
}

uint64_t Section<>.init(header:content:)()
{
  return Section<>.init(header:content:)();
}

uint64_t Section<>.init(header:footer:content:)()
{
  return Section<>.init(header:footer:content:)();
}

uint64_t Section<>.init(content:)()
{
  return Section<>.init(content:)();
}

uint64_t Section<>.init(footer:content:)()
{
  return Section<>.init(footer:content:)();
}

uint64_t Gradient.init(colors:)()
{
  return Gradient.init(colors:)();
}

uint64_t static Alignment.bottomLeading.getter()
{
  return static Alignment.bottomLeading.getter();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t static Alignment.leading.getter()
{
  return static Alignment.leading.getter();
}

uint64_t static UnitPoint.top.getter()
{
  return static UnitPoint.top.getter();
}

uint64_t static UnitPoint.leading.getter()
{
  return static UnitPoint.leading.getter();
}

uint64_t static UnitPoint.trailing.getter()
{
  return static UnitPoint.trailing.getter();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.background.getter()
{
  return static DispatchQoS.background.getter();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t static DispatchQoS.userInteractive.getter()
{
  return static DispatchQoS.userInteractive.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return DispatchWorkItem.init(flags:block:)();
}

uint64_t dispatch thunk of DispatchWorkItem.cancel()()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t type metadata accessor for ContextMetricsActionContext()
{
  return type metadata accessor for ContextMetricsActionContext();
}

uint64_t ActionRunnerDelegatingActionImplementation.init()()
{
  return ActionRunnerDelegatingActionImplementation.init()();
}

uint64_t type metadata accessor for CategoryPageFromYourShowsShelfIntentImplementation()
{
  return type metadata accessor for CategoryPageFromYourShowsShelfIntentImplementation();
}

uint64_t ModernShelf.metricsName.setter()
{
  return ModernShelf.metricsName.setter();
}

uint64_t ModernShelf.hideFromCarPlay.getter()
{
  return ModernShelf.hideFromCarPlay.getter();
}

uint64_t ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)()
{
  return ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
}

uint64_t ModernShelf.ItemPresentation.itemKind.getter()
{
  return ModernShelf.ItemPresentation.itemKind.getter();
}

uint64_t type metadata accessor for ModernShelf.ItemPresentation()
{
  return type metadata accessor for ModernShelf.ItemPresentation();
}

uint64_t ModernShelf.itemPresentation.getter()
{
  return ModernShelf.itemPresentation.getter();
}

uint64_t ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)()
{
  return ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
}

uint64_t ModernShelf.id.getter()
{
  return ModernShelf.id.getter();
}

uint64_t ModernShelf.items.getter()
{
  return ModernShelf.items.getter();
}

uint64_t ModernShelf.header.getter()
{
  return ModernShelf.header.getter();
}

uint64_t ModernShelf.ItemKind.targetType.getter()
{
  return ModernShelf.ItemKind.targetType.getter();
}

uint64_t ModernShelf.ItemKind.rawValue.getter()
{
  return ModernShelf.ItemKind.rawValue.getter();
}

uint64_t ModernShelf.ItemKind.modelType.getter()
{
  return ModernShelf.ItemKind.modelType.getter();
}

uint64_t type metadata accessor for ModernShelf()
{
  return type metadata accessor for ModernShelf();
}

uint64_t Shelf.__allocating_init(contentType:seeAllContentType:title:allItems:maxItems:isHorizontal:preferredNumberOfRows:horizontalLayoutFollowsVerticalLayoutRules:)()
{
  return Shelf.__allocating_init(contentType:seeAllContentType:title:allItems:maxItems:isHorizontal:preferredNumberOfRows:horizontalLayoutFollowsVerticalLayoutRules:)();
}

uint64_t Shelf.items.getter()
{
  return Shelf.items.getter();
}

uint64_t Shelf.title.getter()
{
  return Shelf.title.getter();
}

uint64_t type metadata accessor for Shelf()
{
  return type metadata accessor for Shelf();
}

uint64_t ActionMenu.ID.init()()
{
  return ActionMenu.ID.init()();
}

uint64_t ActionMenu.init(id:title:subtitle:icon:children:)()
{
  return ActionMenu.init(id:title:subtitle:icon:children:)();
}

uint64_t ActionMenu.Item.init(id:title:icon:role:state:action:)()
{
  return ActionMenu.Item.init(id:title:icon:role:state:action:)();
}

uint64_t type metadata accessor for ActionMenu.Child()
{
  return type metadata accessor for ActionMenu.Child();
}

uint64_t type metadata accessor for ActionMenu()
{
  return type metadata accessor for ActionMenu();
}

uint64_t dispatch thunk of FlowAction.destination.getter()
{
  return dispatch thunk of FlowAction.destination.getter();
}

uint64_t dispatch thunk of FlowAction.presentationContext.setter()
{
  return dispatch thunk of FlowAction.presentationContext.setter();
}

uint64_t static FlowAction.manageCategoriesPage(actionMetrics:)()
{
  return static FlowAction.manageCategoriesPage(actionMetrics:)();
}

uint64_t FlowAction.generateItemLevelLocationFields(locationPosition:sender:interactionView:)()
{
  return FlowAction.generateItemLevelLocationFields(locationPosition:sender:interactionView:)();
}

uint64_t FlowAction.generateClickEventWithItemLevelFields(sender:interactionView:)()
{
  return FlowAction.generateClickEventWithItemLevelFields(sender:interactionView:)();
}

uint64_t type metadata accessor for FlowAction()
{
  return type metadata accessor for FlowAction();
}

uint64_t dispatch thunk of FlowAction.__allocating_init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)()
{
  return dispatch thunk of FlowAction.__allocating_init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
}

uint64_t FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)()
{
  return FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
}

uint64_t type metadata accessor for FlowOrigin()
{
  return type metadata accessor for FlowOrigin();
}

uint64_t ModernPage.init(id:pageMetrics:shelves:)()
{
  return ModernPage.init(id:pageMetrics:shelves:)();
}

uint64_t type metadata accessor for ModernPage()
{
  return type metadata accessor for ModernPage();
}

uint64_t PlayAction.episodeOffer.getter()
{
  return PlayAction.episodeOffer.getter();
}

uint64_t PlayAction.contentId.getter()
{
  return PlayAction.contentId.getter();
}

uint64_t type metadata accessor for PlayAction()
{
  return type metadata accessor for PlayAction();
}

uint64_t ShowHeader.episodeToPlay.getter()
{
  return ShowHeader.episodeToPlay.getter();
}

uint64_t ShowHeader.primaryArtwork.getter()
{
  return ShowHeader.primaryArtwork.getter();
}

uint64_t ShowHeader.primaryButtonAction.getter()
{
  return ShowHeader.primaryButtonAction.getter();
}

uint64_t ShowHeader.showID.getter()
{
  return ShowHeader.showID.getter();
}

uint64_t type metadata accessor for ShowHeader()
{
  return type metadata accessor for ShowHeader();
}

uint64_t AlertAction.init(title:message:isCancelable:buttonActions:style:artwork:presentationStyle:)()
{
  return AlertAction.init(title:message:isCancelable:buttonActions:style:artwork:presentationStyle:)();
}

uint64_t type metadata accessor for AlertAction()
{
  return type metadata accessor for AlertAction();
}

uint64_t HeaderModel.PrimaryArtwork.artwork.getter()
{
  return HeaderModel.PrimaryArtwork.artwork.getter();
}

uint64_t type metadata accessor for HeaderModel.MetadataComponent()
{
  return type metadata accessor for HeaderModel.MetadataComponent();
}

uint64_t Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)()
{
  return Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)();
}

uint64_t type metadata accessor for Information()
{
  return type metadata accessor for Information();
}

uint64_t type metadata accessor for PageContent()
{
  return type metadata accessor for PageContent();
}

uint64_t dispatch thunk of ShareAction.activityItemsConfiguration()()
{
  return dispatch thunk of ShareAction.activityItemsConfiguration()();
}

uint64_t ShareAction.prepareShareController(_:sharingStyle:)()
{
  return ShareAction.prepareShareController(_:sharingStyle:)();
}

uint64_t ShareAction.applicationActivities.getter()
{
  return ShareAction.applicationActivities.getter();
}

uint64_t SheetAction.init(title:sheetTitle:message:actions:cancellable:style:)()
{
  return SheetAction.init(title:sheetTitle:message:actions:cancellable:style:)();
}

uint64_t type metadata accessor for SheetAction()
{
  return type metadata accessor for SheetAction();
}

uint64_t dispatch thunk of StationShow.episodeCount.getter()
{
  return dispatch thunk of StationShow.episodeCount.getter();
}

uint64_t dispatch thunk of StationShow.modernLockup.getter()
{
  return dispatch thunk of StationShow.modernLockup.getter();
}

uint64_t dispatch thunk of StationShow.__allocating_init(uuid:stationUuid:podcast:episodeCount:)()
{
  return dispatch thunk of StationShow.__allocating_init(uuid:stationUuid:podcast:episodeCount:)();
}

uint64_t StationShow.uuid.getter()
{
  return StationShow.uuid.getter();
}

uint64_t StationShow.podcast.getter()
{
  return StationShow.podcast.getter();
}

uint64_t type metadata accessor for StationShow()
{
  return type metadata accessor for StationShow();
}

uint64_t type metadata accessor for StationType()
{
  return type metadata accessor for StationType();
}

uint64_t static ASKConstants.PodcastCatalogUrl.getter()
{
  return static ASKConstants.PodcastCatalogUrl.getter();
}

uint64_t ActionOrigin.init(sender:view:)()
{
  return ActionOrigin.init(sender:view:)();
}

uint64_t ActionRunner.perform(_:withMetrics:asPartOf:)()
{
  return ActionRunner.perform(_:withMetrics:asPartOf:)();
}

uint64_t EpisodeOffer.isEntitledOffer.getter()
{
  return EpisodeOffer.isEntitledOffer.getter();
}

uint64_t EpisodeOffer.showOffer.getter()
{
  return EpisodeOffer.showOffer.getter();
}

uint64_t EpisodeOffer.episodeType.getter()
{
  return EpisodeOffer.episodeType.getter();
}

uint64_t EpisodeOffer.releaseDate.getter()
{
  return EpisodeOffer.releaseDate.getter();
}

uint64_t EpisodeOffer.seasonNumber.getter()
{
  return EpisodeOffer.seasonNumber.getter();
}

uint64_t EpisodeOffer.contentRating.getter()
{
  return EpisodeOffer.contentRating.getter();
}

uint64_t EpisodeOffer.episodeNumber.getter()
{
  return EpisodeOffer.episodeNumber.getter();
}

uint64_t EpisodeOffer.transcriptInfo.getter()
{
  return EpisodeOffer.transcriptInfo.getter();
}

uint64_t EpisodeOffer.reportingParams.getter()
{
  return EpisodeOffer.reportingParams.getter();
}

uint64_t EpisodeOffer.guid.getter()
{
  return EpisodeOffer.guid.getter();
}

uint64_t EpisodeOffer.title.getter()
{
  return EpisodeOffer.title.getter();
}

uint64_t EpisodeOffer.artwork.getter()
{
  return EpisodeOffer.artwork.getter();
}

uint64_t EpisodeOffer.summary.getter()
{
  return EpisodeOffer.summary.getter();
}

uint64_t EpisodeOffer.duration.getter()
{
  return EpisodeOffer.duration.getter();
}

uint64_t EpisodeOffer.storeUrl.getter()
{
  return EpisodeOffer.storeUrl.getter();
}

uint64_t EpisodeOffer.contentId.getter()
{
  return EpisodeOffer.contentId.getter();
}

uint64_t EpisodeOffer.mediaType.getter()
{
  return EpisodeOffer.mediaType.getter();
}

uint64_t EpisodeOffer.priceType.getter()
{
  return EpisodeOffer.priceType.getter();
}

uint64_t EpisodeOffer.streamUrl.getter()
{
  return EpisodeOffer.streamUrl.getter();
}

uint64_t type metadata accessor for EpisodeOffer()
{
  return type metadata accessor for EpisodeOffer();
}

uint64_t LegacyLockup.genreNames.getter()
{
  return LegacyLockup.genreNames.getter();
}

uint64_t LegacyLockup.isExplicit.getter()
{
  return LegacyLockup.isExplicit.getter();
}

uint64_t dispatch thunk of LegacyLockup.playAction.getter()
{
  return dispatch thunk of LegacyLockup.playAction.getter();
}

uint64_t dispatch thunk of LegacyLockup.clickAction.getter()
{
  return dispatch thunk of LegacyLockup.clickAction.getter();
}

uint64_t dispatch thunk of LegacyLockup.buttonAction.getter()
{
  return dispatch thunk of LegacyLockup.buttonAction.getter();
}

uint64_t dispatch thunk of LegacyLockup.contextAction.getter()
{
  return dispatch thunk of LegacyLockup.contextAction.getter();
}

uint64_t LegacyLockup.shelfUniqueId.getter()
{
  return LegacyLockup.shelfUniqueId.getter();
}

uint64_t LegacyLockup.titleAccessibilityLabel.getter()
{
  return LegacyLockup.titleAccessibilityLabel.getter();
}

uint64_t LegacyLockup.icon.getter()
{
  return LegacyLockup.icon.getter();
}

uint64_t LegacyLockup.title.getter()
{
  return LegacyLockup.title.getter();
}

uint64_t LegacyLockup.adamId.getter()
{
  return LegacyLockup.adamId.getter();
}

uint64_t LegacyLockup.subtitle.getter()
{
  return LegacyLockup.subtitle.getter();
}

uint64_t type metadata accessor for LegacyLockup()
{
  return type metadata accessor for LegacyLockup();
}

uint64_t static Localization.duration(_:)()
{
  return static Localization.duration(_:)();
}

uint64_t static Localization.fileSize(_:)()
{
  return static Localization.fileSize(_:)();
}

uint64_t dispatch thunk of MetricsEvent.eventFields.modify()
{
  return dispatch thunk of MetricsEvent.eventFields.modify();
}

uint64_t dispatch thunk of MetricsEvent.metricsData.getter()
{
  return dispatch thunk of MetricsEvent.metricsData.getter();
}

uint64_t MetricsLabel.rawValue.getter()
{
  return MetricsLabel.rawValue.getter();
}

uint64_t type metadata accessor for MetricsLabel()
{
  return type metadata accessor for MetricsLabel();
}

uint64_t ShowListType.description.getter()
{
  return ShowListType.description.getter();
}

uint64_t ArtworkLoader.alternativeSize.setter()
{
  return ArtworkLoader.alternativeSize.setter();
}

uint64_t type metadata accessor for ArtworkLoader()
{
  return type metadata accessor for ArtworkLoader();
}

uint64_t ChannelDetail.adamId.getter()
{
  return ChannelDetail.adamId.getter();
}

uint64_t dispatch thunk of ChannelDetail.__allocating_init(adamId:title:subtitle:displayType:uberArtwork:logoArtwork:iconArtwork:backgroundColor:showCount:availableShowCount:)()
{
  return dispatch thunk of ChannelDetail.__allocating_init(adamId:title:subtitle:displayType:uberArtwork:logoArtwork:iconArtwork:backgroundColor:showCount:availableShowCount:)();
}

uint64_t type metadata accessor for ChannelDetail()
{
  return type metadata accessor for ChannelDetail();
}

uint64_t ClosureAction.init(title:presentationStyle:actionMetrics:closure:)()
{
  return ClosureAction.init(title:presentationStyle:actionMetrics:closure:)();
}

uint64_t ClosureAction.closure.getter()
{
  return ClosureAction.closure.getter();
}

uint64_t type metadata accessor for ClosureAction()
{
  return type metadata accessor for ClosureAction();
}

uint64_t dispatch thunk of ContextAction.configuration.getter()
{
  return dispatch thunk of ContextAction.configuration.getter();
}

uint64_t dispatch thunk of ContextAction.configuration.setter()
{
  return dispatch thunk of ContextAction.configuration.setter();
}

uint64_t dispatch thunk of ContextAction.apply(configuration:)()
{
  return dispatch thunk of ContextAction.apply(configuration:)();
}

uint64_t DismissAction.init(title:animationBehavior:presentationStyle:)()
{
  return DismissAction.init(title:animationBehavior:presentationStyle:)();
}

uint64_t EpisodeHeader.__allocating_init(lockup:headerButtonItems:shelfUniqueId:referenceTime:playerTime:)()
{
  return EpisodeHeader.__allocating_init(lockup:headerButtonItems:shelfUniqueId:referenceTime:playerTime:)();
}

uint64_t type metadata accessor for EpisodeHeader()
{
  return type metadata accessor for EpisodeHeader();
}

uint64_t InterfaceMode.rawValue.getter()
{
  return InterfaceMode.rawValue.getter();
}

uint64_t static MenuSelectors.refreshCommand.getter()
{
  return static MenuSelectors.refreshCommand.getter();
}

uint64_t static NavigationTab.== infix(_:_:)()
{
  return static NavigationTab.== infix(_:_:)();
}

uint64_t NavigationTab.hash(into:)()
{
  return NavigationTab.hash(into:)();
}

uint64_t NavigationTab.init(intValue:)()
{
  return NavigationTab.init(intValue:)();
}

uint64_t NavigationTab.intValue.getter()
{
  return NavigationTab.intValue.getter();
}

uint64_t type metadata accessor for ObserverQueue()
{
  return type metadata accessor for ObserverQueue();
}

uint64_t type metadata accessor for PodcastDetail.DisplayType()
{
  return type metadata accessor for PodcastDetail.DisplayType();
}

uint64_t dispatch thunk of PodcastDetail.__allocating_init(uuid:adamId:title:podcastState:addedDate:summary:author:provider:newEpisodeCount:artwork:uberArtwork:logoArtwork:paidSubscriptionActive:episodeToPlay:seasonToShow:isSerialShowTypeInFeed:episodeUserFilter:episodes:storeUrl:webpageUrl:feedUrl:offerAction:darkModeOptions:hasEverPlayed:hidesPlayedEpisodes:sort:displayType:channel:isExplicit:impressionMetrics:)()
{
  return dispatch thunk of PodcastDetail.__allocating_init(uuid:adamId:title:podcastState:addedDate:summary:author:provider:newEpisodeCount:artwork:uberArtwork:logoArtwork:paidSubscriptionActive:episodeToPlay:seasonToShow:isSerialShowTypeInFeed:episodeUserFilter:episodes:storeUrl:webpageUrl:feedUrl:offerAction:darkModeOptions:hasEverPlayed:hidesPlayedEpisodes:sort:displayType:channel:isExplicit:impressionMetrics:)();
}

uint64_t type metadata accessor for PodcastDetail()
{
  return type metadata accessor for PodcastDetail();
}

uint64_t PodcastReview.Metadata.saveURL.getter()
{
  return PodcastReview.Metadata.saveURL.getter();
}

uint64_t type metadata accessor for PodcastReview.Metadata()
{
  return type metadata accessor for PodcastReview.Metadata();
}

uint64_t PodcastReview.httpData(forAdamId:)()
{
  return PodcastReview.httpData(forAdamId:)();
}

uint64_t PodcastReview.metadata.getter()
{
  return PodcastReview.metadata.getter();
}

uint64_t type metadata accessor for PodcastReview()
{
  return type metadata accessor for PodcastReview();
}

uint64_t PopoverAction.init(title:presentationStyle:flowAction:)()
{
  return PopoverAction.init(title:presentationStyle:flowAction:)();
}

uint64_t type metadata accessor for PopoverAction()
{
  return type metadata accessor for PopoverAction();
}

uint64_t StationDetail.episodeCount.getter()
{
  return StationDetail.episodeCount.getter();
}

uint64_t dispatch thunk of StationDetail.visibleShows.getter()
{
  return dispatch thunk of StationDetail.visibleShows.getter();
}

uint64_t StationDetail.predicateForEpisodes.getter()
{
  return StationDetail.predicateForEpisodes.getter();
}

uint64_t dispatch thunk of StationDetail.__allocating_init(uuid:type:title:artwork:sortOrder:grouped:hidePlayedEpisodes:episodeCount:showCount:unplayedCount:episodes:shows:predicateForEpisodes:objectID:dateCreated:)()
{
  return dispatch thunk of StationDetail.__allocating_init(uuid:type:title:artwork:sortOrder:grouped:hidePlayedEpisodes:episodeCount:showCount:unplayedCount:episodes:shows:predicateForEpisodes:objectID:dateCreated:)();
}

uint64_t StationDetail.uuid.getter()
{
  return StationDetail.uuid.getter();
}

uint64_t StationDetail.title.getter()
{
  return StationDetail.title.getter();
}

uint64_t StationDetail.grouped.getter()
{
  return StationDetail.grouped.getter();
}

uint64_t dispatch thunk of StationDetail.episodes.getter()
{
  return dispatch thunk of StationDetail.episodes.getter();
}

uint64_t StationDetail.objectID.getter()
{
  return StationDetail.objectID.getter();
}

uint64_t StationDetail.showCount.getter()
{
  return StationDetail.showCount.getter();
}

uint64_t StationDetail.sortOrder.getter()
{
  return StationDetail.sortOrder.getter();
}

uint64_t type metadata accessor for StationDetail()
{
  return type metadata accessor for StationDetail();
}

uint64_t dispatch thunk of ClickableModel.clickAction.getter()
{
  return dispatch thunk of ClickableModel.clickAction.getter();
}

uint64_t CompoundAction.__allocating_init(actions:)()
{
  return CompoundAction.__allocating_init(actions:)();
}

uint64_t type metadata accessor for CompoundAction()
{
  return type metadata accessor for CompoundAction();
}

uint64_t LocationFields.metricsFields.getter()
{
  return LocationFields.metricsFields.getter();
}

uint64_t type metadata accessor for LocationFields()
{
  return type metadata accessor for LocationFields();
}

uint64_t dispatch thunk of StationEpisode.__allocating_init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:stationUuid:adamId:channelAdamId:channelName:artwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)()
{
  return dispatch thunk of StationEpisode.__allocating_init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:stationUuid:adamId:channelAdamId:channelName:artwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)();
}

uint64_t type metadata accessor for StationEpisode()
{
  return type metadata accessor for StationEpisode();
}

uint64_t ActionPerformer.callAsFunction()()
{
  return ActionPerformer.callAsFunction()();
}

uint64_t type metadata accessor for ActionPerformer()
{
  return type metadata accessor for ActionPerformer();
}

uint64_t ActionPerformer.init(_:asPartOf:)()
{
  return ActionPerformer.init(_:asPartOf:)();
}

uint64_t static DarkModeOptions.autoDownload.getter()
{
  return static DarkModeOptions.autoDownload.getter();
}

uint64_t static DarkModeOptions.authenticated.getter()
{
  return static DarkModeOptions.authenticated.getter();
}

uint64_t type metadata accessor for DarkModeOptions()
{
  return type metadata accessor for DarkModeOptions();
}

uint64_t type metadata accessor for FeedUpdateError()
{
  return type metadata accessor for FeedUpdateError();
}

uint64_t FlowDestination.pageDestinationURL.getter()
{
  return FlowDestination.pageDestinationURL.getter();
}

uint64_t FlowDestination.pageDestinationPage.getter()
{
  return FlowDestination.pageDestinationPage.getter();
}

uint64_t static FlowDestination.page(_:)()
{
  return static FlowDestination.page(_:)();
}

uint64_t type metadata accessor for FlowDestination()
{
  return type metadata accessor for FlowDestination();
}

uint64_t MetricsActivity.PageReferrer.init(app:externalURL:openURL:)()
{
  return MetricsActivity.PageReferrer.init(app:externalURL:openURL:)();
}

uint64_t type metadata accessor for MetricsActivity.PageReferrer()
{
  return type metadata accessor for MetricsActivity.PageReferrer();
}

uint64_t MetricsActivity.setupWidgetData(_:)()
{
  return MetricsActivity.setupWidgetData(_:)();
}

uint64_t MetricsActivity.currentPageFields.getter()
{
  return MetricsActivity.currentPageFields.getter();
}

uint64_t MetricsActivity.firstPageEventWithReferrer.setter()
{
  return MetricsActivity.firstPageEventWithReferrer.setter();
}

uint64_t MetricsActivity.hasActiveCrossfireReferral.getter()
{
  return MetricsActivity.hasActiveCrossfireReferral.getter();
}

uint64_t MetricsActivity.beginActiveCrossfireReferral(_:)()
{
  return MetricsActivity.beginActiveCrossfireReferral(_:)();
}

uint64_t static MetricsActivity.shared.getter()
{
  return static MetricsActivity.shared.getter();
}

uint64_t type metadata accessor for MetricsActivity()
{
  return type metadata accessor for MetricsActivity();
}

uint64_t OAuthController.init(endpointSubscriber:hudViewHandler:)()
{
  return OAuthController.init(endpointSubscriber:hudViewHandler:)();
}

uint64_t type metadata accessor for OAuthController()
{
  return type metadata accessor for OAuthController();
}

uint64_t PlayPauseAction.episodeOffer.getter()
{
  return PlayPauseAction.episodeOffer.getter();
}

uint64_t PlayPauseAction.contentId.getter()
{
  return PlayPauseAction.contentId.getter();
}

uint64_t type metadata accessor for PlayPauseAction()
{
  return type metadata accessor for PlayPauseAction();
}

uint64_t PlayQueueAction.episodeOffer.getter()
{
  return PlayQueueAction.episodeOffer.getter();
}

uint64_t PlayQueueAction.queueEpisodeIds.getter()
{
  return PlayQueueAction.queueEpisodeIds.getter();
}

uint64_t PlayQueueAction.contentId.getter()
{
  return PlayQueueAction.contentId.getter();
}

uint64_t type metadata accessor for PlayQueueAction()
{
  return type metadata accessor for PlayQueueAction();
}

uint64_t PopToRootAction.init(animationBehavior:)()
{
  return PopToRootAction.init(animationBehavior:)();
}

uint64_t type metadata accessor for PopToRootAction()
{
  return type metadata accessor for PopToRootAction();
}

uint64_t ShowLockupStyle.LockupStyleOptions.unfollowedShowFallbackStyle.getter()
{
  return ShowLockupStyle.LockupStyleOptions.unfollowedShowFallbackStyle.getter();
}

uint64_t ShowLockupStyle.LockupStyleOptions.unfollowedShowStyle.getter()
{
  return ShowLockupStyle.LockupStyleOptions.unfollowedShowStyle.getter();
}

uint64_t ShowLockupStyle.LockupStyleOptions.followedSerialShowFallbackStyle.getter()
{
  return ShowLockupStyle.LockupStyleOptions.followedSerialShowFallbackStyle.getter();
}

uint64_t ShowLockupStyle.LockupStyleOptions.followedSerialShowStyle.getter()
{
  return ShowLockupStyle.LockupStyleOptions.followedSerialShowStyle.getter();
}

uint64_t ShowLockupStyle.LockupStyleOptions.followedEpisodicShowFallbackStyle.getter()
{
  return ShowLockupStyle.LockupStyleOptions.followedEpisodicShowFallbackStyle.getter();
}

uint64_t ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter()
{
  return ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter();
}

uint64_t type metadata accessor for ShowLockupStyle.LockupStyleOptions()
{
  return type metadata accessor for ShowLockupStyle.LockupStyleOptions();
}

uint64_t ShowLockupStyle.init(includesOfferButton:defaultSubtitle:unfollowedSubtitle:groupedEpisodesListType:)()
{
  return ShowLockupStyle.init(includesOfferButton:defaultSubtitle:unfollowedSubtitle:groupedEpisodesListType:)();
}

uint64_t ShowLockupStyle.includesOfferButton.getter()
{
  return ShowLockupStyle.includesOfferButton.getter();
}

uint64_t ShowLockupStyle.groupedEpisodesListType.getter()
{
  return ShowLockupStyle.groupedEpisodesListType.getter();
}

uint64_t ShowLockupStyle.title.getter()
{
  return ShowLockupStyle.title.getter();
}

uint64_t ShowLockupStyle.subline.getter()
{
  return ShowLockupStyle.subline.getter();
}

uint64_t type metadata accessor for ShowLockupStyle()
{
  return type metadata accessor for ShowLockupStyle();
}

uint64_t TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)()
{
  return TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
}

uint64_t type metadata accessor for TabChangeAction()
{
  return type metadata accessor for TabChangeAction();
}

uint64_t dispatch thunk of TabMenuProvider.libraryPublisher.getter()
{
  return dispatch thunk of TabMenuProvider.libraryPublisher.getter();
}

uint64_t TabMenuProvider.__allocating_init(asPartOf:userDefaults:interfaceMode:)()
{
  return TabMenuProvider.__allocating_init(asPartOf:userDefaults:interfaceMode:)();
}

uint64_t type metadata accessor for TabMenuProvider()
{
  return type metadata accessor for TabMenuProvider();
}

uint64_t static TextFieldAction.subscribeByURLAction(textFieldContent:okClosure:)()
{
  return static TextFieldAction.subscribeByURLAction(textFieldContent:okClosure:)();
}

uint64_t type metadata accessor for TextFieldAction()
{
  return type metadata accessor for TextFieldAction();
}

uint64_t type metadata accessor for AlertActionStyle()
{
  return type metadata accessor for AlertActionStyle();
}

uint64_t type metadata accessor for FeedUpdateResult()
{
  return type metadata accessor for FeedUpdateResult();
}

uint64_t type metadata accessor for FetchEntityError.ErrorDomain()
{
  return type metadata accessor for FetchEntityError.ErrorDomain();
}

uint64_t FetchEntityError.init(domain:)()
{
  return FetchEntityError.init(domain:)();
}

uint64_t type metadata accessor for HeaderButtonItem()
{
  return type metadata accessor for HeaderButtonItem();
}

uint64_t static HomePageProvider.recentlyPlayedShelfID.getter()
{
  return static HomePageProvider.recentlyPlayedShelfID.getter();
}

Swift::Void __swiftcall HomePageProvider.loadPageContent()()
{
}

uint64_t static HomePageProvider.upNextShelfID.getter()
{
  return static HomePageProvider.upNextShelfID.getter();
}

uint64_t HomePageProvider.pageContent.getter()
{
  return HomePageProvider.pageContent.getter();
}

uint64_t HomePageProvider.isStillLoading.getter()
{
  return HomePageProvider.isStillLoading.getter();
}

uint64_t HomePageProvider.init(asPartOf:platformContext:)()
{
  return HomePageProvider.init(asPartOf:platformContext:)();
}

uint64_t type metadata accessor for HomePageProvider()
{
  return type metadata accessor for HomePageProvider();
}

uint64_t dispatch thunk of MenuBarPresenter.buildMenuBar(with:)()
{
  return dispatch thunk of MenuBarPresenter.buildMenuBar(with:)();
}

uint64_t dispatch thunk of MenuBarPresenter.rebuildMenuBar.setter()
{
  return dispatch thunk of MenuBarPresenter.rebuildMenuBar.setter();
}

uint64_t dispatch thunk of SearchPerforming.perform(searchAction:)()
{
  return dispatch thunk of SearchPerforming.perform(searchAction:)();
}

uint64_t ShareSheetAction.shareSheetContentSource.getter()
{
  return ShareSheetAction.shareSheetContentSource.getter();
}

uint64_t ShareSheetAction.playerTime.getter()
{
  return ShareSheetAction.playerTime.getter();
}

uint64_t ShareSheetAction.referenceTime.getter()
{
  return ShareSheetAction.referenceTime.getter();
}

uint64_t type metadata accessor for SheetActionStyle()
{
  return type metadata accessor for SheetActionStyle();
}

uint64_t static ShowListProvider.showsShelfID.getter()
{
  return static ShowListProvider.showsShelfID.getter();
}

uint64_t ShowListProvider.pageContent.getter()
{
  return ShowListProvider.pageContent.getter();
}

Swift::Void __swiftcall ShowListProvider.start()()
{
}

uint64_t ShowListProvider.init(asPartOf:kind:pageSize:)()
{
  return ShowListProvider.init(asPartOf:kind:pageSize:)();
}

uint64_t type metadata accessor for ShowListProvider()
{
  return type metadata accessor for ShowListProvider();
}

uint64_t StationSortOrder.episodeSort.getter()
{
  return StationSortOrder.episodeSort.getter();
}

Swift::Bool __swiftcall StationSortOrder.supportsUsingFRP(isGrouped:)(Swift::Bool isGrouped)
{
  return StationSortOrder.supportsUsingFRP(isGrouped:)(isGrouped);
}

uint64_t static StationSortOrder.default.getter()
{
  return static StationSortOrder.default.getter();
}

uint64_t type metadata accessor for StationSortOrder()
{
  return type metadata accessor for StationSortOrder();
}

uint64_t static ClickMetricsEvent.makeClickEvent(targetId:actionType:targetType:channelAdamId:pageId:pageType:sharedPage:location:)()
{
  return static ClickMetricsEvent.makeClickEvent(targetId:actionType:targetType:channelAdamId:pageId:pageType:sharedPage:location:)();
}

uint64_t type metadata accessor for ClickMetricsEvent()
{
  return type metadata accessor for ClickMetricsEvent();
}

uint64_t ContextActionType.activityType.getter()
{
  return ContextActionType.activityType.getter();
}

uint64_t ContextActionType.actionIdentifier.getter()
{
  return ContextActionType.actionIdentifier.getter();
}

uint64_t type metadata accessor for ContextActionType()
{
  return type metadata accessor for ContextActionType();
}

uint64_t LibraryPlayAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:title:timestamp:actionMetrics:)()
{
  return LibraryPlayAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:title:timestamp:actionMetrics:)();
}

uint64_t LibraryPlayAction.episodeUuid.getter()
{
  return LibraryPlayAction.episodeUuid.getter();
}

uint64_t LibraryPlayAction.episodeAdamId.getter()
{
  return LibraryPlayAction.episodeAdamId.getter();
}

uint64_t LibraryPlayAction.settings.getter()
{
  return LibraryPlayAction.settings.getter();
}

uint64_t type metadata accessor for LibraryPlayAction()
{
  return type metadata accessor for LibraryPlayAction();
}

uint64_t dispatch thunk of LibraryShowLockup.__allocating_init(uuid:adamId:icon:name:title:addedDate:subtitles:ordinal:rating:buttonAction:clickAction:providerAction:playAction:contextAction:isSubscribed:isExplicit:shelfUniqueId:impressionMetrics:)()
{
  return dispatch thunk of LibraryShowLockup.__allocating_init(uuid:adamId:icon:name:title:addedDate:subtitles:ordinal:rating:buttonAction:clickAction:providerAction:playAction:contextAction:isSubscribed:isExplicit:shelfUniqueId:impressionMetrics:)();
}

uint64_t LibraryShowLockup.uuid.getter()
{
  return LibraryShowLockup.uuid.getter();
}

uint64_t type metadata accessor for LibraryShowLockup()
{
  return type metadata accessor for LibraryShowLockup();
}

uint64_t MetricsController.pageMetrics.setter()
{
  return MetricsController.pageMetrics.setter();
}

uint64_t MetricsController.sendEvents(for:)()
{
  return MetricsController.sendEvents(for:)();
}

uint64_t MetricsController.observe(lifecycleEvent:)()
{
  return MetricsController.observe(lifecycleEvent:)();
}

uint64_t MetricsController.process(_:)()
{
  return MetricsController.process(_:)();
}

uint64_t MetricsController.init(asPartOf:)()
{
  return MetricsController.init(asPartOf:)();
}

uint64_t type metadata accessor for MetricsController()
{
  return type metadata accessor for MetricsController();
}

uint64_t MetricsPageFields.metricsFields.getter()
{
  return MetricsPageFields.metricsFields.getter();
}

uint64_t MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)()
{
  return MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)();
}

uint64_t type metadata accessor for MetricsPageFields()
{
  return type metadata accessor for MetricsPageFields();
}

uint64_t PlayStationAction.episodeUuid.getter()
{
  return PlayStationAction.episodeUuid.getter();
}

uint64_t PlayStationAction.stationUuid.getter()
{
  return PlayStationAction.stationUuid.getter();
}

uint64_t PlayStationAction.init(title:stationUuid:episodeUuid:episodeAdamID:actionMetrics:)()
{
  return PlayStationAction.init(title:stationUuid:episodeUuid:episodeAdamID:actionMetrics:)();
}

uint64_t type metadata accessor for PlayStationAction()
{
  return type metadata accessor for PlayStationAction();
}

uint64_t ResumeOAuthAction.init(redirectURL:)()
{
  return ResumeOAuthAction.init(redirectURL:)();
}

uint64_t type metadata accessor for ResumeOAuthAction()
{
  return type metadata accessor for ResumeOAuthAction();
}

uint64_t dispatch thunk of StoreDataProvider.explicitSymbol.getter()
{
  return dispatch thunk of StoreDataProvider.explicitSymbol.getter();
}

uint64_t dispatch thunk of StoreDataProvider.fetchEpisodeOffers(with:)()
{
  return dispatch thunk of StoreDataProvider.fetchEpisodeOffers(with:)();
}

uint64_t dispatch thunk of StoreDataProvider.fetchEpisodePageFooter(for:isSubscribed:)()
{
  return dispatch thunk of StoreDataProvider.fetchEpisodePageFooter(for:isSubscribed:)();
}

uint64_t dispatch thunk of StoreDataProvider.fetchEpisodeUpsellAction(for:)()
{
  return dispatch thunk of StoreDataProvider.fetchEpisodeUpsellAction(for:)();
}

uint64_t dispatch thunk of StoreDataProvider.fetchSmartPlayEpisodeAdamID(for:)()
{
  return dispatch thunk of StoreDataProvider.fetchSmartPlayEpisodeAdamID(for:)();
}

uint64_t StorePageProvider.pageContent.getter()
{
  return StorePageProvider.pageContent.getter();
}

Swift::Void __swiftcall StorePageProvider.viewDidLoad()()
{
}

Swift::Void __swiftcall StorePageProvider.reload(ignoreCache:)(Swift::Bool ignoreCache)
{
}

uint64_t StorePageProvider.init(asPartOf:pageURL:page:)()
{
  return StorePageProvider.init(asPartOf:pageURL:page:)();
}

uint64_t type metadata accessor for StorePageProvider()
{
  return type metadata accessor for StorePageProvider();
}

uint64_t TranscriptSnippet.init(id:text:clickAction:impressionMetrics:)()
{
  return TranscriptSnippet.init(id:text:clickAction:impressionMetrics:)();
}

uint64_t type metadata accessor for TranscriptSnippet()
{
  return type metadata accessor for TranscriptSnippet();
}

uint64_t EpisodeOfferAction.episodeOffer.getter()
{
  return EpisodeOfferAction.episodeOffer.getter();
}

uint64_t type metadata accessor for EpisodeOfferAction()
{
  return type metadata accessor for EpisodeOfferAction();
}

uint64_t type metadata accessor for FollowMetricsEvent.FollowType()
{
  return type metadata accessor for FollowMetricsEvent.FollowType();
}

uint64_t static FollowMetricsEvent.makeData(followType:shows:)()
{
  return static FollowMetricsEvent.makeData(followType:shows:)();
}

uint64_t static StationListOptions.excludeShows.getter()
{
  return static StationListOptions.excludeShows.getter();
}

uint64_t static StationListOptions.excludeArtwork.getter()
{
  return static StationListOptions.excludeArtwork.getter();
}

uint64_t static StationListOptions.excludeEpisodes.getter()
{
  return static StationListOptions.excludeEpisodes.getter();
}

uint64_t static StationListOptions.list.getter()
{
  return static StationListOptions.list.getter();
}

uint64_t type metadata accessor for StationListOptions()
{
  return type metadata accessor for StationListOptions();
}

uint64_t ActionRunnerOptions.withActionOrigin(_:)()
{
  return ActionRunnerOptions.withActionOrigin(_:)();
}

uint64_t type metadata accessor for ActionRunnerOptions()
{
  return type metadata accessor for ActionRunnerOptions();
}

uint64_t type metadata accessor for AppExitMetricsEvent.ExitKind()
{
  return type metadata accessor for AppExitMetricsEvent.ExitKind();
}

uint64_t static AppExitMetricsEvent.makeData(exitKind:)()
{
  return static AppExitMetricsEvent.makeData(exitKind:)();
}

uint64_t BookmarksController.removeEpisodesFromBookmarks(with:showHUDConfirmation:)()
{
  return BookmarksController.removeEpisodesFromBookmarks(with:showHUDConfirmation:)();
}

uint64_t BookmarksController.bookmarkEpisodes(with:showHUDConfirmation:)()
{
  return BookmarksController.bookmarkEpisodes(with:showHUDConfirmation:)();
}

uint64_t BookmarksController.containsBookmarkedEpisodes(in:)()
{
  return BookmarksController.containsBookmarkedEpisodes(in:)();
}

uint64_t BookmarksController.notBookmarkedEpisodesCount(in:)()
{
  return BookmarksController.notBookmarkedEpisodesCount(in:)();
}

uint64_t BookmarksController.containsNotBookmarkedEpisodes(in:)()
{
  return BookmarksController.containsNotBookmarkedEpisodes(in:)();
}

uint64_t type metadata accessor for BookmarksController()
{
  return type metadata accessor for BookmarksController();
}

uint64_t type metadata accessor for CacheDeleteObserver()
{
  return type metadata accessor for CacheDeleteObserver();
}

uint64_t dispatch thunk of LegacyChannelLockup.__allocating_init(adamId:icon:title:subtitles:eyebrow:clickAction:isExplicit:impressionMetrics:)()
{
  return dispatch thunk of LegacyChannelLockup.__allocating_init(adamId:icon:title:subtitles:eyebrow:clickAction:isExplicit:impressionMetrics:)();
}

uint64_t type metadata accessor for LegacyChannelLockup()
{
  return type metadata accessor for LegacyChannelLockup();
}

uint64_t LegacyEpisodeLockup.releaseDate.getter()
{
  return LegacyEpisodeLockup.releaseDate.getter();
}

uint64_t LegacyEpisodeLockup.seasonNumber.getter()
{
  return LegacyEpisodeLockup.seasonNumber.getter();
}

uint64_t LegacyEpisodeLockup.episodeNumber.getter()
{
  return LegacyEpisodeLockup.episodeNumber.getter();
}

uint64_t LegacyEpisodeLockup.showTypeIsSerial.getter()
{
  return LegacyEpisodeLockup.showTypeIsSerial.getter();
}

uint64_t LegacyEpisodeLockup.duration.getter()
{
  return LegacyEpisodeLockup.duration.getter();
}

uint64_t type metadata accessor for LegacyEpisodeLockup()
{
  return type metadata accessor for LegacyEpisodeLockup();
}

uint64_t LibraryFollowAction.init(podcastUuid:displaySuccessHUD:)()
{
  return LibraryFollowAction.init(podcastUuid:displaySuccessHUD:)();
}

uint64_t type metadata accessor for LibraryFollowAction()
{
  return type metadata accessor for LibraryFollowAction();
}

uint64_t LibraryShowProvider.pageContent.getter()
{
  return LibraryShowProvider.pageContent.getter();
}

Swift::Void __swiftcall LibraryShowProvider.loadPageContent()()
{
}

uint64_t LibraryShowProvider.init(asPartOf:showUUID:)()
{
  return LibraryShowProvider.init(asPartOf:showUUID:)();
}

uint64_t type metadata accessor for LibraryShowProvider()
{
  return type metadata accessor for LibraryShowProvider();
}

Swift::Void __swiftcall ModernPagePresenter.splitControllerCollapseDidChange(collapsed:)(Swift::Bool collapsed)
{
}

uint64_t OAuthHUDViewHandler.init(asPartOf:)()
{
  return OAuthHUDViewHandler.init(asPartOf:)();
}

uint64_t type metadata accessor for OAuthHUDViewHandler()
{
  return type metadata accessor for OAuthHUDViewHandler();
}

uint64_t dispatch thunk of ActionRunnerProvider.actionRunner.getter()
{
  return dispatch thunk of ActionRunnerProvider.actionRunner.getter();
}

uint64_t type metadata accessor for AppEnterMetricsEvent.EnterKind()
{
  return type metadata accessor for AppEnterMetricsEvent.EnterKind();
}

uint64_t static AppEnterMetricsEvent.makeData(enterKind:)()
{
  return static AppEnterMetricsEvent.makeData(enterKind:)();
}

uint64_t ContextMetricsAction.init(title:targetId:podcastStoreId:targetType:actionContext:)()
{
  return ContextMetricsAction.init(title:targetId:podcastStoreId:targetType:actionContext:)();
}

uint64_t type metadata accessor for ContextMetricsAction()
{
  return type metadata accessor for ContextMetricsAction();
}

uint64_t LibraryEpisodeLockup.podcastUuid.getter()
{
  return LibraryEpisodeLockup.podcastUuid.getter();
}

uint64_t LibraryEpisodeLockup.assetFileUrl.getter()
{
  return LibraryEpisodeLockup.assetFileUrl.getter();
}

uint64_t LibraryEpisodeLockup.uuid.getter()
{
  return LibraryEpisodeLockup.uuid.getter();
}

uint64_t type metadata accessor for LibraryEpisodeLockup()
{
  return type metadata accessor for LibraryEpisodeLockup();
}

uint64_t PodcastContextAction.podcastOffer.getter()
{
  return PodcastContextAction.podcastOffer.getter();
}

uint64_t type metadata accessor for PodcastContextAction()
{
  return type metadata accessor for PodcastContextAction();
}

uint64_t type metadata accessor for ChildAndParentLocation()
{
  return type metadata accessor for ChildAndParentLocation();
}

uint64_t FavoriteInterestAction.init(adamID:interestContentKind:actionMetrics:)()
{
  return FavoriteInterestAction.init(adamID:interestContentKind:actionMetrics:)();
}

uint64_t type metadata accessor for FavoriteInterestAction()
{
  return type metadata accessor for FavoriteInterestAction();
}

uint64_t FindShowEpisodesIntent.init(showIdentifier:predicate:limit:sortDescriptors:)()
{
  return FindShowEpisodesIntent.init(showIdentifier:predicate:limit:sortDescriptors:)();
}

uint64_t type metadata accessor for FindShowEpisodesIntent()
{
  return type metadata accessor for FindShowEpisodesIntent();
}

uint64_t LibraryPlayPauseAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:isSmartPlayButton:isWidgetPlayButton:timestamp:waitForEngine:shouldPreventQueueing:actionMetrics:)()
{
  return LibraryPlayPauseAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:isSmartPlayButton:isWidgetPlayButton:timestamp:waitForEngine:shouldPreventQueueing:actionMetrics:)();
}

uint64_t LibraryPlayPauseAction.episodeUuid.getter()
{
  return LibraryPlayPauseAction.episodeUuid.getter();
}

uint64_t LibraryPlayPauseAction.settings.getter()
{
  return LibraryPlayPauseAction.settings.getter();
}

uint64_t type metadata accessor for LibraryPlayPauseAction()
{
  return type metadata accessor for LibraryPlayPauseAction();
}

uint64_t dispatch thunk of LibraryTabGroupManager.tabGroup.getter()
{
  return dispatch thunk of LibraryTabGroupManager.tabGroup.getter();
}

uint64_t LibraryTabGroupManager.init(asPartOf:viewControllerProvider:)()
{
  return LibraryTabGroupManager.init(asPartOf:viewControllerProvider:)();
}

uint64_t type metadata accessor for LibraryTabGroupManager()
{
  return type metadata accessor for LibraryTabGroupManager();
}

uint64_t ModernShelvesPresenter.interactionContextOrigin.getter()
{
  return ModernShelvesPresenter.interactionContextOrigin.getter();
}

uint64_t dispatch thunk of PlayEpisodeActionModel.episodeIdentifier.getter()
{
  return dispatch thunk of PlayEpisodeActionModel.episodeIdentifier.getter();
}

uint64_t PlayPauseStationAction.episodeUuid.getter()
{
  return PlayPauseStationAction.episodeUuid.getter();
}

uint64_t PlayPauseStationAction.stationUuid.getter()
{
  return PlayPauseStationAction.stationUuid.getter();
}

uint64_t type metadata accessor for PlayPauseStationAction()
{
  return type metadata accessor for PlayPauseStationAction();
}

uint64_t StoreEpisodePlayAction.init(episodeId:actionMetrics:)()
{
  return StoreEpisodePlayAction.init(episodeId:actionMetrics:)();
}

uint64_t type metadata accessor for StoreEpisodePlayAction()
{
  return type metadata accessor for StoreEpisodePlayAction();
}

uint64_t type metadata accessor for BookmarkButtonPresenter.Data()
{
  return type metadata accessor for BookmarkButtonPresenter.Data();
}

uint64_t type metadata accessor for DownloadButtonPresenter.Data()
{
  return type metadata accessor for DownloadButtonPresenter.Data();
}

uint64_t type metadata accessor for FlowPresentationContext()
{
  return type metadata accessor for FlowPresentationContext();
}

Swift::Void __swiftcall PodcastsTabBarPresenter.viewDidLoad()()
{
}

uint64_t PodcastsTabBarPresenter.view.setter()
{
  return PodcastsTabBarPresenter.view.setter();
}

uint64_t PodcastsTabBarPresenter.init(asPartOf:)()
{
  return PodcastsTabBarPresenter.init(asPartOf:)();
}

uint64_t type metadata accessor for PodcastsTabBarPresenter()
{
  return type metadata accessor for PodcastsTabBarPresenter();
}

uint64_t PresentNowPlayingAction.init()()
{
  return PresentNowPlayingAction.init()();
}

uint64_t type metadata accessor for PresentNowPlayingAction()
{
  return type metadata accessor for PresentNowPlayingAction();
}

uint64_t type metadata accessor for ShareSheetContentSource()
{
  return type metadata accessor for ShareSheetContentSource();
}

uint64_t ChannelPowerSwooshAction.channelName.getter()
{
  return ChannelPowerSwooshAction.channelName.getter();
}

uint64_t ChannelPowerSwooshAction.channelAdamId.getter()
{
  return ChannelPowerSwooshAction.channelAdamId.getter();
}

uint64_t type metadata accessor for ChannelPowerSwooshAction()
{
  return type metadata accessor for ChannelPowerSwooshAction();
}

uint64_t dispatch thunk of CustomPreviewActionModel.previewAction.getter()
{
  return dispatch thunk of CustomPreviewActionModel.previewAction.getter();
}

uint64_t FetchEpisodeOffersIntent.init(adamIDs:)()
{
  return FetchEpisodeOffersIntent.init(adamIDs:)();
}

uint64_t type metadata accessor for FetchEpisodeOffersIntent()
{
  return type metadata accessor for FetchEpisodeOffersIntent();
}

uint64_t GroupedSearchResultsPage.init(id:results:pageMetrics:)()
{
  return GroupedSearchResultsPage.init(id:results:pageMetrics:)();
}

uint64_t GroupedSearchResultsPage.Result.init(id:name:page:)()
{
  return GroupedSearchResultsPage.Result.init(id:name:page:)();
}

uint64_t type metadata accessor for GroupedSearchResultsPage.Result()
{
  return type metadata accessor for GroupedSearchResultsPage.Result();
}

uint64_t type metadata accessor for GroupedSearchResultsPage()
{
  return type metadata accessor for GroupedSearchResultsPage();
}

uint64_t LibraryRemovalController.init(asPartOf:)()
{
  return LibraryRemovalController.init(asPartOf:)();
}

uint64_t type metadata accessor for LibraryRemovalController()
{
  return type metadata accessor for LibraryRemovalController();
}

uint64_t type metadata accessor for PodcastReviewServerError()
{
  return type metadata accessor for PodcastReviewServerError();
}

uint64_t StationShowContextAction.stationShowUuid.getter()
{
  return StationShowContextAction.stationShowUuid.getter();
}

uint64_t StationShowContextAction.stationUuid.getter()
{
  return StationShowContextAction.stationUuid.getter();
}

uint64_t type metadata accessor for StationShowContextAction()
{
  return type metadata accessor for StationShowContextAction();
}

uint64_t UnfavoriteInterestAction.init(adamID:actionMetrics:)()
{
  return UnfavoriteInterestAction.init(adamID:actionMetrics:)();
}

uint64_t type metadata accessor for UnfavoriteInterestAction()
{
  return type metadata accessor for UnfavoriteInterestAction();
}

Swift::Void __swiftcall WeakNotificationObserver.invalidate()()
{
}

uint64_t static WelcomeSheetMetricsEvent.makeData()()
{
  return static WelcomeSheetMetricsEvent.makeData()();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentEpisodePage(asPartOf:for:from:presentationHint:suppressMetrics:)()
{
  return dispatch thunk of EpisodeControllerProtocol.presentEpisodePage(asPartOf:for:from:presentationHint:suppressMetrics:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.playPlayer()()
{
  return dispatch thunk of EpisodeControllerProtocol.playPlayer()();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.pausePlayer()()
{
  return dispatch thunk of EpisodeControllerProtocol.pausePlayer()();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentShowPage(asPartOf:for:from:presentationHint:suppressMetrics:)()
{
  return dispatch thunk of EpisodeControllerProtocol.presentShowPage(asPartOf:for:from:presentationHint:suppressMetrics:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentStorePage(asPartOf:for:from:presentationHint:suppressMetrics:)()
{
  return dispatch thunk of EpisodeControllerProtocol.presentStorePage(asPartOf:for:from:presentationHint:suppressMetrics:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:sender:)()
{
  return dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:sender:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:timestamp:sender:)()
{
  return dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:timestamp:sender:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:reason:timestamp:waitForEngine:)()
{
  return dispatch thunk of EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:reason:timestamp:waitForEngine:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(stationUuid:episodeUuid:from:)()
{
  return dispatch thunk of EpisodeControllerProtocol.play(stationUuid:episodeUuid:from:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:queueEpisodesIds:timestamp:sender:)()
{
  return dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:queueEpisodesIds:timestamp:sender:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:sender:)()
{
  return dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:sender:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.seekTo(time:)()
{
  return dispatch thunk of EpisodeControllerProtocol.seekTo(time:)();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.preflight(_:)()
{
  return dispatch thunk of EpisodeControllerProtocol.preflight(_:)();
}

uint64_t EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:timestamp:waitForEngine:)()
{
  return EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:timestamp:waitForEngine:)();
}

uint64_t type metadata accessor for FlowDestinationPageHeader()
{
  return type metadata accessor for FlowDestinationPageHeader();
}

uint64_t LibraryEpisodeOfferAction.episodeUuid.getter()
{
  return LibraryEpisodeOfferAction.episodeUuid.getter();
}

uint64_t type metadata accessor for LibraryEpisodeOfferAction()
{
  return type metadata accessor for LibraryEpisodeOfferAction();
}

uint64_t dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.getter()
{
  return dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.getter();
}

uint64_t type metadata accessor for PerformableContextActions()
{
  return type metadata accessor for PerformableContextActions();
}

uint64_t SuggestLessInterestAction.init(adamID:force:actionMetrics:)()
{
  return SuggestLessInterestAction.init(adamID:force:actionMetrics:)();
}

uint64_t type metadata accessor for SuggestLessInterestAction()
{
  return type metadata accessor for SuggestLessInterestAction();
}

uint64_t AMSOAuthEndpointSubscriber.init()()
{
  return AMSOAuthEndpointSubscriber.init()();
}

uint64_t type metadata accessor for AMSOAuthEndpointSubscriber()
{
  return type metadata accessor for AMSOAuthEndpointSubscriber();
}

uint64_t CategoriesSavedTipProvider.init(asPartOf:)()
{
  return CategoriesSavedTipProvider.init(asPartOf:)();
}

uint64_t type metadata accessor for CategoriesSavedTipProvider()
{
  return type metadata accessor for CategoriesSavedTipProvider();
}

uint64_t dispatch thunk of HighlightsProviderProtocol.pageHighlightShelfPublisherForId(adamId:)()
{
  return dispatch thunk of HighlightsProviderProtocol.pageHighlightShelfPublisherForId(adamId:)();
}

uint64_t HighlightsProviderProtocol.isSharedContent(_:)()
{
  return HighlightsProviderProtocol.isSharedContent(_:)();
}

uint64_t type metadata accessor for PreviewingPresentationHint()
{
  return type metadata accessor for PreviewingPresentationHint();
}

uint64_t ShowEpisodeCountHeaderData.init(title:artwork:action:)()
{
  return ShowEpisodeCountHeaderData.init(title:artwork:action:)();
}

uint64_t type metadata accessor for ShowEpisodeCountHeaderData()
{
  return type metadata accessor for ShowEpisodeCountHeaderData();
}

uint64_t ContextActionsConfiguration.objectGraph.getter()
{
  return ContextActionsConfiguration.objectGraph.getter();
}

uint64_t ContextActionsConfiguration.swipeActions(leadingSwipe:)()
{
  return ContextActionsConfiguration.swipeActions(leadingSwipe:)();
}

UIViewController_optional __swiftcall ContextActionsConfiguration.shareSheet()()
{
  uint64_t v0 = (objc_class *)ContextActionsConfiguration.shareSheet()();
  result.value.super.super.isa = v0;
  result.is_nil = v1;
  return result;
}

uint64_t ContextActionsConfiguration.firstShareAction()()
{
  return ContextActionsConfiguration.firstShareAction()();
}

UIViewController_optional __swiftcall ContextActionsConfiguration.previewViewController()()
{
  uint64_t v0 = (objc_class *)ContextActionsConfiguration.previewViewController()();
  result.value.super.super.isa = v0;
  result.is_nil = v1;
  return result;
}

UIMenu __swiftcall ContextActionsConfiguration.menu(extraContextMenuElements:)(Swift::OpaquePointer extraContextMenuElements)
{
  return (UIMenu)ContextActionsConfiguration.menu(extraContextMenuElements:)(extraContextMenuElements._rawValue);
}

uint64_t dispatch thunk of ContextActionsConfiguration.previewModel.getter()
{
  return dispatch thunk of ContextActionsConfiguration.previewModel.getter();
}

uint64_t dispatch thunk of ContextActionsConfiguration.presentationSource.getter()
{
  return dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
}

uint64_t dispatch thunk of ContextActionsConfiguration.presentationSource.setter()
{
  return dispatch thunk of ContextActionsConfiguration.presentationSource.setter();
}

Swift::tuple_OpaquePointer_OpaquePointer __swiftcall ContextActionsConfiguration.transcriptSelectionActions()()
{
  uint64_t v0 = (void *)ContextActionsConfiguration.transcriptSelectionActions()();
  result._1._rawValue = v1;
  result._0._rawValue = v0;
  return result;
}

uint64_t dispatch thunk of ContextActionsConfiguration.performPreviewAction()()
{
  return dispatch thunk of ContextActionsConfiguration.performPreviewAction()();
}

uint64_t dispatch thunk of ContextActionsConfiguration.preferredPreviewActionCommitStyle.getter()
{
  return dispatch thunk of ContextActionsConfiguration.preferredPreviewActionCommitStyle.getter();
}

uint64_t dispatch thunk of ContextActionsConfiguration.context.getter()
{
  return dispatch thunk of ContextActionsConfiguration.context.getter();
}

uint64_t ContextActionsConfiguration.perform(_:)()
{
  return ContextActionsConfiguration.perform(_:)();
}

uint64_t ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)()
{
  return ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)();
}

uint64_t type metadata accessor for ContextActionsConfiguration()
{
  return type metadata accessor for ContextActionsConfiguration();
}

uint64_t method lookup function for ContextActionsConfiguration()
{
  return method lookup function for ContextActionsConfiguration();
}

uint64_t ContextActionsConfiguration.deinit()
{
  return ContextActionsConfiguration.deinit();
}

uint64_t dispatch thunk of EpisodeUpsellBannerProvider.episodeUpsellBannerShelfPublisher(episodeAdamID:showAdamID:dismissalCompletion:)()
{
  return dispatch thunk of EpisodeUpsellBannerProvider.episodeUpsellBannerShelfPublisher(episodeAdamID:showAdamID:dismissalCompletion:)();
}

uint64_t EpisodeUpsellBannerProvider.init(graph:uuid:presentationType:)()
{
  return EpisodeUpsellBannerProvider.init(graph:uuid:presentationType:)();
}

uint64_t type metadata accessor for EpisodeUpsellBannerProvider()
{
  return type metadata accessor for EpisodeUpsellBannerProvider();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.episodeListShelfPublisher(episodeSettingsPublisher:pageSize:)()
{
  return dispatch thunk of LibraryDataProviderProtocol.episodeListShelfPublisher(episodeSettingsPublisher:pageSize:)();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.fetchEpisode(with:)()
{
  return dispatch thunk of LibraryDataProviderProtocol.fetchEpisode(with:)();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.hasFollowedShows()()
{
  return dispatch thunk of LibraryDataProviderProtocol.hasFollowedShows()();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.episodeListPublisher(settings:pageSize:queue:)()
{
  return dispatch thunk of LibraryDataProviderProtocol.episodeListPublisher(settings:pageSize:queue:)();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.fetchStationsObserver(with:)()
{
  return dispatch thunk of LibraryDataProviderProtocol.fetchStationsObserver(with:)();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.fetchShowCountObserver(listType:)()
{
  return dispatch thunk of LibraryDataProviderProtocol.fetchShowCountObserver(listType:)();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.libraryActionController.getter()
{
  return dispatch thunk of LibraryDataProviderProtocol.libraryActionController.getter();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.showsPaginatedPublisher(listType:sortBy:lockupStyle:pageSize:)()
{
  return dispatch thunk of LibraryDataProviderProtocol.showsPaginatedPublisher(listType:sortBy:lockupStyle:pageSize:)();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.fetchEpisodeCountObserver(for:)()
{
  return dispatch thunk of LibraryDataProviderProtocol.fetchEpisodeCountObserver(for:)();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.fetchStationDetailObserver(with:)()
{
  return dispatch thunk of LibraryDataProviderProtocol.fetchStationDetailObserver(with:)();
}

uint64_t dispatch thunk of LibraryDataProviderProtocol.episodeListSettingsPublisher(listType:)()
{
  return dispatch thunk of LibraryDataProviderProtocol.episodeListSettingsPublisher(listType:)();
}

uint64_t LibraryDataProviderProtocol.episodeListPublisher(settings:pageSize:)()
{
  return LibraryDataProviderProtocol.episodeListPublisher(settings:pageSize:)();
}

uint64_t LibraryDataProviderProtocol.fetchShowCountObserver()()
{
  return LibraryDataProviderProtocol.fetchShowCountObserver()();
}

uint64_t LibraryPodcastContextAction.init(podcastUuid:groupedEpisodeListType:)()
{
  return LibraryPodcastContextAction.init(podcastUuid:groupedEpisodeListType:)();
}

uint64_t LibraryPodcastContextAction.groupedEpisodeListType.getter()
{
  return LibraryPodcastContextAction.groupedEpisodeListType.getter();
}

uint64_t type metadata accessor for LibraryPodcastContextAction()
{
  return type metadata accessor for LibraryPodcastContextAction();
}

uint64_t static UpNextScoringWeightsManager.recalculateUpNext()()
{
  return static UpNextScoringWeightsManager.recalculateUpNext()();
}

uint64_t static UpNextScoringWeightsManager.resetToDefaultValues()()
{
  return static UpNextScoringWeightsManager.resetToDefaultValues()();
}

uint64_t dispatch thunk of UserAcknowledgementRequiring.deferUntilAcknowledged(_:)()
{
  return dispatch thunk of UserAcknowledgementRequiring.deferUntilAcknowledged(_:)();
}

uint64_t dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodesFromStations(episodeUuids:stationUuids:)()
{
  return dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodesFromStations(episodeUuids:stationUuids:)();
}

uint64_t dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodesOrProvideDeleteActions(episodeUuids:stationUuids:context:noConfirmation:)()
{
  return dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodesOrProvideDeleteActions(episodeUuids:stationUuids:context:noConfirmation:)();
}

uint64_t type metadata accessor for EpisodeDeletionActionProvider.Context()
{
  return type metadata accessor for EpisodeDeletionActionProvider.Context();
}

uint64_t EpisodeDeletionActionProvider.init(asPartOf:episodeDownloadStateController:libraryActionController:)()
{
  return EpisodeDeletionActionProvider.init(asPartOf:episodeDownloadStateController:libraryActionController:)();
}

uint64_t type metadata accessor for EpisodeDeletionActionProvider()
{
  return type metadata accessor for EpisodeDeletionActionProvider();
}

uint64_t dispatch thunk of MTNotificationManagerProtocol.requestNotificationPermissionsIfNeeded()()
{
  return dispatch thunk of MTNotificationManagerProtocol.requestNotificationPermissionsIfNeeded()();
}

uint64_t dispatch thunk of MTNotificationManagerProtocol.canPromptForNotificationPermissionsWithPreWarmSheet()()
{
  return dispatch thunk of MTNotificationManagerProtocol.canPromptForNotificationPermissionsWithPreWarmSheet()();
}

uint64_t dispatch thunk of MTNotificationManagerProtocol.requestNotificationPermissionsWithPreWarmSheetIfNeeded()()
{
  return dispatch thunk of MTNotificationManagerProtocol.requestNotificationPermissionsWithPreWarmSheetIfNeeded()();
}

uint64_t NotFindingAnythingTipProvider.init(asPartOf:)()
{
  return NotFindingAnythingTipProvider.init(asPartOf:)();
}

uint64_t type metadata accessor for NotFindingAnythingTipProvider()
{
  return type metadata accessor for NotFindingAnythingTipProvider();
}

uint64_t UndoSuggestLessInterestAction.init(adamID:actionMetrics:)()
{
  return UndoSuggestLessInterestAction.init(adamID:actionMetrics:)();
}

uint64_t type metadata accessor for UndoSuggestLessInterestAction()
{
  return type metadata accessor for UndoSuggestLessInterestAction();
}

uint64_t type metadata accessor for BookmarksControllerEpisodeData()
{
  return type metadata accessor for BookmarksControllerEpisodeData();
}

uint64_t FollowFeedIntentImplementation.init()()
{
  return FollowFeedIntentImplementation.init()();
}

uint64_t type metadata accessor for FollowFeedIntentImplementation()
{
  return type metadata accessor for FollowFeedIntentImplementation();
}

Swift::String __swiftcall localizedStringReferencingWiFi(_:comment:)(Swift::String _, Swift::String comment)
{
  uint64_t v2 = localizedStringReferencingWiFi(_:comment:)(_._countAndFlagsBits, _._object, comment._countAndFlagsBits, comment._object);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.updateFeed(podcast:context:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.updateFeed(podcast:context:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.unsubscribe(podcast:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.unsubscribe(podcast:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.updateAllFeeds()()
{
  return dispatch thunk of LibraryActionControllerProtocol.updateAllFeeds()();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeFromUpNext(uuids:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.removeFromUpNext(uuids:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hasDownloadedEpisodes(podcastUuid:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.hasDownloadedEpisodes(podcastUuid:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.pubDateLimitPublisher(forListType:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.pubDateLimitPublisher(forListType:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeRecoveredEpisodes(with:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.removeRecoveredEpisodes(with:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.episodeSortTypePublisher(forListType:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.episodeSortTypePublisher(forListType:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.deleteRecentlyUnfollowedShow(uuid:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.deleteRecentlyUnfollowedShow(uuid:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hidesPlayedEpisodesPublisher(forListType:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.hidesPlayedEpisodesPublisher(forListType:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.handleMarkingEpisodesAsPlayed(source:baseEpisodesPredicate:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.handleMarkingEpisodesAsPlayed(source:baseEpisodesPredicate:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hasEpisodesThatAreNotVisuallyPlayed(baseEpisodesPredicate:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.hasEpisodesThatAreNotVisuallyPlayed(baseEpisodesPredicate:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.mark(episodeUUIDS:as:completion:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.mark(episodeUUIDS:as:completion:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.mark(episodeOffers:as:completion:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.mark(episodeOffers:as:completion:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.download(episodeOffers:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.download(episodeOffers:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.download(episodes:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.download(episodes:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.subscribe(podcast:displaySuccessHUD:)()
{
  return dispatch thunk of LibraryActionControllerProtocol.subscribe(podcast:displaySuccessHUD:)();
}

uint64_t LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)()
{
  return LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)();
}

uint64_t dispatch thunk of LibraryObserverProviderProtocol.librarySubscribedChannelsPublisher.getter()
{
  return dispatch thunk of LibraryObserverProviderProtocol.librarySubscribedChannelsPublisher.getter();
}

uint64_t static RecommendationsMetadataProvider.metadataListLimit.getter()
{
  return static RecommendationsMetadataProvider.metadataListLimit.getter();
}

uint64_t type metadata accessor for RecommendationsMetadataProvider()
{
  return type metadata accessor for RecommendationsMetadataProvider();
}

uint64_t dispatch thunk of LibraryRemovalControllerProtocol.removeShowFromLibraryAlertController(uuid:)()
{
  return dispatch thunk of LibraryRemovalControllerProtocol.removeShowFromLibraryAlertController(uuid:)();
}

uint64_t dispatch thunk of LibraryRemovalControllerProtocol.removeAllDownloadsAlertController(uuid:)()
{
  return dispatch thunk of LibraryRemovalControllerProtocol.removeAllDownloadsAlertController(uuid:)();
}

uint64_t dispatch thunk of LibraryRemovalControllerProtocol.removalOptionsAfterUnfollow(uuid:)()
{
  return dispatch thunk of LibraryRemovalControllerProtocol.removalOptionsAfterUnfollow(uuid:)();
}

uint64_t LibraryStationEpisodeOfferAction.stationUuid.getter()
{
  return LibraryStationEpisodeOfferAction.stationUuid.getter();
}

uint64_t type metadata accessor for LibraryStationEpisodeOfferAction()
{
  return type metadata accessor for LibraryStationEpisodeOfferAction();
}

uint64_t UnfollowShowIntentImplementation.init()()
{
  return UnfollowShowIntentImplementation.init()();
}

uint64_t type metadata accessor for UnfollowShowIntentImplementation()
{
  return type metadata accessor for UnfollowShowIntentImplementation();
}

uint64_t BookmarkEpisodeIntentImplementation.init()()
{
  return BookmarkEpisodeIntentImplementation.init()();
}

uint64_t type metadata accessor for BookmarkEpisodeIntentImplementation()
{
  return type metadata accessor for BookmarkEpisodeIntentImplementation();
}

uint64_t FetchShowLatestCatalogEpisodesIntent.init(adamID:limit:extendedTypes:)()
{
  return FetchShowLatestCatalogEpisodesIntent.init(adamID:limit:extendedTypes:)();
}

uint64_t type metadata accessor for FetchShowLatestCatalogEpisodesIntent()
{
  return type metadata accessor for FetchShowLatestCatalogEpisodesIntent();
}

uint64_t FindShowEpisodesIntentImplementation.init()()
{
  return FindShowEpisodesIntentImplementation.init()();
}

uint64_t type metadata accessor for FindShowEpisodesIntentImplementation()
{
  return type metadata accessor for FindShowEpisodesIntentImplementation();
}

uint64_t dispatch thunk of NowPlayingContextActionConfiguration.modelObject.getter()
{
  return dispatch thunk of NowPlayingContextActionConfiguration.modelObject.getter();
}

uint64_t dispatch thunk of NowPlayingContextActionConfiguration.playerResponseItem.getter()
{
  return dispatch thunk of NowPlayingContextActionConfiguration.playerResponseItem.getter();
}

uint64_t type metadata accessor for NowPlayingContextActionConfiguration()
{
  return type metadata accessor for NowPlayingContextActionConfiguration();
}

uint64_t SubscriptionConfirmationSheetHandler.init(asPartOf:)()
{
  return SubscriptionConfirmationSheetHandler.init(asPartOf:)();
}

uint64_t type metadata accessor for SubscriptionConfirmationSheetHandler()
{
  return type metadata accessor for SubscriptionConfirmationSheetHandler();
}

uint64_t dispatch thunk of TimestampContextActionsConfiguration.playerTime.getter()
{
  return dispatch thunk of TimestampContextActionsConfiguration.playerTime.getter();
}

uint64_t dispatch thunk of TimestampContextActionsConfiguration.referenceTime.getter()
{
  return dispatch thunk of TimestampContextActionsConfiguration.referenceTime.getter();
}

uint64_t UnbookmarkEpisodeIntentImplementation.init()()
{
  return UnbookmarkEpisodeIntentImplementation.init()();
}

uint64_t type metadata accessor for UnbookmarkEpisodeIntentImplementation()
{
  return type metadata accessor for UnbookmarkEpisodeIntentImplementation();
}

uint64_t AddFavoriteCategoriesSearchTipProvider.init(asPartOf:)()
{
  return AddFavoriteCategoriesSearchTipProvider.init(asPartOf:)();
}

uint64_t type metadata accessor for AddFavoriteCategoriesSearchTipProvider()
{
  return type metadata accessor for AddFavoriteCategoriesSearchTipProvider();
}

uint64_t FetchUpNextEpisodesIntentImplementation.init()()
{
  return FetchUpNextEpisodesIntentImplementation.init()();
}

uint64_t type metadata accessor for FetchUpNextEpisodesIntentImplementation()
{
  return type metadata accessor for FetchUpNextEpisodesIntentImplementation();
}

uint64_t FindOrCreateEpisodeOfferContentIDsIntent.init(episodeOffers:)()
{
  return FindOrCreateEpisodeOfferContentIDsIntent.init(episodeOffers:)();
}

uint64_t type metadata accessor for FindOrCreateEpisodeOfferContentIDsIntent()
{
  return type metadata accessor for FindOrCreateEpisodeOfferContentIDsIntent();
}

uint64_t TabChangeActionOpenStoreURLActionImplementation.init()()
{
  return TabChangeActionOpenStoreURLActionImplementation.init()();
}

uint64_t type metadata accessor for TabChangeActionOpenStoreURLActionImplementation()
{
  return type metadata accessor for TabChangeActionOpenStoreURLActionImplementation();
}

uint64_t static Link.libraryLink(from:)()
{
  return static Link.libraryLink(from:)();
}

uint64_t static Link.Presentation.alertDestructive.getter()
{
  return static Link.Presentation.alertDestructive.getter();
}

uint64_t static Link.Presentation.textFollowsTintColor.getter()
{
  return static Link.Presentation.textFollowsTintColor.getter();
}

uint64_t static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter()
{
  return static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
}

uint64_t Link.Presentation.init(rawValue:)()
{
  return Link.Presentation.init(rawValue:)();
}

uint64_t Link.init(id:title:subtitle:artwork:presentation:segue:impressionMetrics:entity:)()
{
  return Link.init(id:title:subtitle:artwork:presentation:segue:impressionMetrics:entity:)();
}

uint64_t Link.init(station:presentationContext:showChevron:)()
{
  return Link.init(station:presentationContext:showChevron:)();
}

uint64_t type metadata accessor for Link()
{
  return type metadata accessor for Link();
}

uint64_t Page.init(shelves:title:selectedFilterActionId:filterActions:headerBackgroundColor:headerButtonItems:presentationOptions:pageContext:nextPageIntent:isIncomplete:isExplicit:uber:showAdamId:channelAdamId:mapiInLibrary:pageMetrics:)()
{
  return Page.init(shelves:title:selectedFilterActionId:filterActions:headerBackgroundColor:headerButtonItems:presentationOptions:pageContext:nextPageIntent:isIncomplete:isExplicit:uber:showAdamId:channelAdamId:mapiInLibrary:pageMetrics:)();
}

uint64_t type metadata accessor for Page()
{
  return type metadata accessor for Page();
}

uint64_t FetchShowLatestCatalogEpisodesIntentImplementation.init()()
{
  return FetchShowLatestCatalogEpisodesIntentImplementation.init()();
}

uint64_t type metadata accessor for FetchShowLatestCatalogEpisodesIntentImplementation()
{
  return type metadata accessor for FetchShowLatestCatalogEpisodesIntentImplementation();
}

uint64_t FindOrCreateLocalEpisodeContentIDsIntentImplementation.init()()
{
  return FindOrCreateLocalEpisodeContentIDsIntentImplementation.init()();
}

uint64_t type metadata accessor for FindOrCreateLocalEpisodeContentIDsIntentImplementation()
{
  return type metadata accessor for FindOrCreateLocalEpisodeContentIDsIntentImplementation();
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.selectedText.getter()
{
  return NowPlayingTranscriptSelectionContextActionConfiguration.selectedText.getter();
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.referenceEndTime.getter()
{
  return NowPlayingTranscriptSelectionContextActionConfiguration.referenceEndTime.getter();
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime.getter()
{
  return NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime.getter();
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.alignmentCoordinator.getter()
{
  return NowPlayingTranscriptSelectionContextActionConfiguration.alignmentCoordinator.getter();
}

uint64_t type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration()
{
  return type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
}

uint64_t FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init()()
{
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init()();
}

uint64_t type metadata accessor for FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation()
{
  return type metadata accessor for FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation();
}

uint64_t dispatch thunk of Action.actionMetrics.modify()
{
  return dispatch thunk of Action.actionMetrics.modify();
}

uint64_t Action.presentationStyle.getter()
{
  return Action.presentationStyle.getter();
}

uint64_t Action.title.getter()
{
  return Action.title.getter();
}

uint64_t type metadata accessor for Action()
{
  return type metadata accessor for Action();
}

uint64_t Header.PrimaryAction.action.getter()
{
  return Header.PrimaryAction.action.getter();
}

uint64_t type metadata accessor for Header.PrimaryAction()
{
  return type metadata accessor for Header.PrimaryAction();
}

uint64_t Header.primaryAction.getter()
{
  return Header.primaryAction.getter();
}

uint64_t Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)()
{
  return Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
}

uint64_t Header.title.getter()
{
  return Header.title.getter();
}

uint64_t type metadata accessor for Header()
{
  return type metadata accessor for Header();
}

uint64_t dispatch thunk of Episode.playableLockupForEpisodeDetails.getter()
{
  return dispatch thunk of Episode.playableLockupForEpisodeDetails.getter();
}

uint64_t Episode.isExplicit.getter()
{
  return Episode.isExplicit.getter();
}

uint64_t Episode.releaseDate.getter()
{
  return Episode.releaseDate.getter();
}

uint64_t Episode.seasonNumber.getter()
{
  return Episode.seasonNumber.getter();
}

uint64_t dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)()
{
  return dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
}

uint64_t Episode.episodeNumber.getter()
{
  return Episode.episodeNumber.getter();
}

uint64_t Episode.showTypeIsSerial.getter()
{
  return Episode.showTypeIsSerial.getter();
}

uint64_t dispatch thunk of Episode.presentDetailsLockup.getter()
{
  return dispatch thunk of Episode.presentDetailsLockup.getter();
}

uint64_t Episode.uuid.getter()
{
  return Episode.uuid.getter();
}

uint64_t dispatch thunk of Episode.__allocating_init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:adamId:channelAdamId:channelName:artwork:showUberArtwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showDisplayType:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)()
{
  return dispatch thunk of Episode.__allocating_init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:adamId:channelAdamId:channelName:artwork:showUberArtwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showDisplayType:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)();
}

uint64_t Episode.title.getter()
{
  return Episode.title.getter();
}

uint64_t Episode.adamId.getter()
{
  return Episode.adamId.getter();
}

uint64_t Episode.assetUrl.getter()
{
  return Episode.assetUrl.getter();
}

uint64_t Episode.duration.getter()
{
  return Episode.duration.getter();
}

uint64_t type metadata accessor for Episode()
{
  return type metadata accessor for Episode();
}

uint64_t Podcast.uuid.getter()
{
  return Podcast.uuid.getter();
}

uint64_t Podcast.adamId.getter()
{
  return Podcast.adamId.getter();
}

uint64_t static TabMenu.defaultTab.getter()
{
  return static TabMenu.defaultTab.getter();
}

uint64_t static TabMenu.viewControllers(for:interfaceMode:using:asPartOf:)()
{
  return static TabMenu.viewControllers(for:interfaceMode:using:asPartOf:)();
}

uint64_t TabMenu.Item.navigationTab.getter()
{
  return TabMenu.Item.navigationTab.getter();
}

uint64_t TabMenu.Item.identifier.getter()
{
  return TabMenu.Item.identifier.getter();
}

uint64_t TabMenu.Item.tabBarElement(asPartOf:interfaceMode:)()
{
  return TabMenu.Item.tabBarElement(asPartOf:interfaceMode:)();
}

uint64_t TabMenu.Item.tab(asPartOf:viewControllerProvider:)()
{
  return TabMenu.Item.tab(asPartOf:viewControllerProvider:)();
}

uint64_t TabMenu.Item.enabled.getter()
{
  return TabMenu.Item.enabled.getter();
}

uint64_t type metadata accessor for TabMenu.Item()
{
  return type metadata accessor for TabMenu.Item();
}

uint64_t static TabMenu.item(for:interfaceMode:)()
{
  return static TabMenu.item(for:interfaceMode:)();
}

uint64_t TabMenu.Group.items(for:)()
{
  return TabMenu.Group.items(for:)();
}

uint64_t TabMenu.Section.items.getter()
{
  return TabMenu.Section.items.getter();
}

uint64_t Observer.eraseToAnyObserver()()
{
  return Observer.eraseToAnyObserver()();
}

uint64_t ShowHero.contextAction.getter()
{
  return ShowHero.contextAction.getter();
}

uint64_t type metadata accessor for ShowHero()
{
  return type metadata accessor for ShowHero();
}

uint64_t ShowInfo.init(adamId:deviceShowId:followTime:)()
{
  return ShowInfo.init(adamId:deviceShowId:followTime:)();
}

uint64_t type metadata accessor for ShowInfo()
{
  return type metadata accessor for ShowInfo();
}

uint64_t Showcase.showAdamId.getter()
{
  return Showcase.showAdamId.getter();
}

uint64_t Showcase.clickAction.getter()
{
  return Showcase.clickAction.getter();
}

uint64_t Showcase.showArtwork.getter()
{
  return Showcase.showArtwork.getter();
}

uint64_t Showcase.showMetadata.getter()
{
  return Showcase.showMetadata.getter();
}

uint64_t Showcase.title.getter()
{
  return Showcase.title.getter();
}

uint64_t type metadata accessor for Showcase()
{
  return type metadata accessor for Showcase();
}

uint64_t Paragraph.init(text:alignment:style:isCollapsed:isLinkDetectionEnabled:shareSheetContentSource:impressionMetrics:)()
{
  return Paragraph.init(text:alignment:style:isCollapsed:isLinkDetectionEnabled:shareSheetContentSource:impressionMetrics:)();
}

uint64_t type metadata accessor for Paragraph()
{
  return type metadata accessor for Paragraph();
}

uint64_t ShowOffer.displayType.getter()
{
  return ShowOffer.displayType.getter();
}

uint64_t ShowOffer.subscribable.getter()
{
  return ShowOffer.subscribable.getter();
}

uint64_t ShowOffer.contentRating.getter()
{
  return ShowOffer.contentRating.getter();
}

uint64_t ShowOffer.dzcPageLocation.getter()
{
  return ShowOffer.dzcPageLocation.getter();
}

uint64_t ShowOffer.title.getter()
{
  return ShowOffer.title.getter();
}

uint64_t ShowOffer.adamId.getter()
{
  return ShowOffer.adamId.getter();
}

uint64_t ShowOffer.author.getter()
{
  return ShowOffer.author.getter();
}

uint64_t ShowOffer.artwork.getter()
{
  return ShowOffer.artwork.getter();
}

uint64_t ShowOffer.feedUrl.getter()
{
  return ShowOffer.feedUrl.getter();
}

uint64_t ShowOffer.provider.getter()
{
  return ShowOffer.provider.getter();
}

uint64_t ShowOffer.showType.getter()
{
  return ShowOffer.showType.getter();
}

uint64_t ShowOffer.storeUrl.getter()
{
  return ShowOffer.storeUrl.getter();
}

uint64_t type metadata accessor for ShowOffer()
{
  return type metadata accessor for ShowOffer();
}

uint64_t Dependency.init<A>(satisfying:with:)()
{
  return Dependency.init<A>(satisfying:with:)();
}

uint64_t Dependency.init<A, B>(aliasing:with:)()
{
  return Dependency.init<A, B>(aliasing:with:)();
}

uint64_t type metadata accessor for Dependency()
{
  return type metadata accessor for Dependency();
}

uint64_t LogMessage.init(stringLiteral:)()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t LogMessage.StringInterpolation.appendInterpolation(safe:)()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t LogMessage.StringInterpolation.appendInterpolation(sensitive:)()
{
  return LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
}

Swift::Void __swiftcall LogMessage.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for LogMessage.StringInterpolation()
{
  return type metadata accessor for LogMessage.StringInterpolation();
}

uint64_t LogMessage.init(stringInterpolation:)()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t type metadata accessor for LogMessage()
{
  return type metadata accessor for LogMessage();
}

uint64_t EmptyAction.init(actionMetrics:)()
{
  return EmptyAction.init(actionMetrics:)();
}

uint64_t type metadata accessor for EmptyAction()
{
  return type metadata accessor for EmptyAction();
}

uint64_t IntentModel._canonicalIntentModel.getter()
{
  return IntentModel._canonicalIntentModel.getter();
}

uint64_t IntentModel._canonicalized.getter()
{
  return IntentModel._canonicalized.getter();
}

uint64_t IntentModel<>.kind.getter()
{
  return IntentModel<>.kind.getter();
}

uint64_t static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)()
{
  return static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
}

uint64_t MetricsData.removingIncludedField(_:)()
{
  return MetricsData.removingIncludedField(_:)();
}

uint64_t type metadata accessor for MetricsData()
{
  return type metadata accessor for MetricsData();
}

uint64_t static PageMetrics.Instruction.impressions(fields:configuration:)()
{
  return static PageMetrics.Instruction.impressions(fields:configuration:)();
}

uint64_t static PageMetrics.Instruction.page(fields:configuration:)()
{
  return static PageMetrics.Instruction.page(fields:configuration:)();
}

uint64_t type metadata accessor for PageMetrics.Instruction()
{
  return type metadata accessor for PageMetrics.Instruction();
}

uint64_t PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)()
{
  return PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)();
}

uint64_t static PageMetrics.InvocationPoint.pageEnter.getter()
{
  return static PageMetrics.InvocationPoint.pageEnter.getter();
}

uint64_t type metadata accessor for PageMetrics.InvocationPoint()
{
  return type metadata accessor for PageMetrics.InvocationPoint();
}

uint64_t static PageMetrics.notInstrumented.getter()
{
  return static PageMetrics.notInstrumented.getter();
}

uint64_t type metadata accessor for PageMetrics()
{
  return type metadata accessor for PageMetrics();
}

uint64_t Preferences.subscript.getter()
{
  return Preferences.subscript.getter();
}

uint64_t static ActionMetrics.play(adamID:targetType:fields:configuration:)()
{
  return static ActionMetrics.play(adamID:targetType:fields:configuration:)();
}

uint64_t static ActionMetrics.notInstrumented.getter()
{
  return static ActionMetrics.notInstrumented.getter();
}

uint64_t ActionMetrics.init(data:custom:)()
{
  return ActionMetrics.init(data:custom:)();
}

uint64_t ActionMetrics.data.modify()
{
  return ActionMetrics.data.modify();
}

uint64_t type metadata accessor for ActionMetrics()
{
  return type metadata accessor for ActionMetrics();
}

uint64_t type metadata accessor for ActionOutcome()
{
  return type metadata accessor for ActionOutcome();
}

uint64_t PreferenceKey.init(_:)()
{
  return PreferenceKey.init(_:)();
}

uint64_t BaseObjectGraph.injectIfAvailable<A>(_:)()
{
  return BaseObjectGraph.injectIfAvailable<A>(_:)();
}

uint64_t BaseObjectGraph.inject<A>(_:)()
{
  return BaseObjectGraph.inject<A>(_:)();
}

uint64_t BaseObjectGraph.satisfying<A>(_:with:)()
{
  return BaseObjectGraph.satisfying<A>(_:with:)();
}

{
  return BaseObjectGraph.satisfying<A>(_:with:)();
}

uint64_t BaseObjectGraph.inject<A>(_:named:)()
{
  return BaseObjectGraph.inject<A>(_:named:)();
}

uint64_t BaseObjectGraph.__allocating_init(name:_:)()
{
  return BaseObjectGraph.__allocating_init(name:_:)();
}

uint64_t dispatch thunk of BaseObjectGraph.adding(dependency:)()
{
  return dispatch thunk of BaseObjectGraph.adding(dependency:)();
}

uint64_t dispatch thunk of BaseObjectGraph.adding(allDependenciesOf:)()
{
  return dispatch thunk of BaseObjectGraph.adding(allDependenciesOf:)();
}

uint64_t static BaseObjectGraph.current.getter()
{
  return static BaseObjectGraph.current.getter();
}

uint64_t type metadata accessor for BaseObjectGraph()
{
  return type metadata accessor for BaseObjectGraph();
}

uint64_t BaseObjectGraph.__allocating_init(_:)()
{
  return BaseObjectGraph.__allocating_init(_:)();
}

uint64_t MetricsPipeline.process(_:using:)()
{
  return MetricsPipeline.process(_:using:)();
}

uint64_t type metadata accessor for MetricsPipeline()
{
  return type metadata accessor for MetricsPipeline();
}

uint64_t ActionDispatcher.add(contentsOf:)()
{
  return ActionDispatcher.add(contentsOf:)();
}

uint64_t ActionDispatcher.add<A>(_:)()
{
  return ActionDispatcher.add<A>(_:)();
}

uint64_t ActionDispatcher.init()()
{
  return ActionDispatcher.init()();
}

uint64_t ScalarDictionary.init()()
{
  return ScalarDictionary.init()();
}

uint64_t type metadata accessor for ScalarDictionary()
{
  return type metadata accessor for ScalarDictionary();
}

uint64_t static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)()
{
  return static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
}

uint64_t static ImpressionMetrics.shelfItem(id:idType:uniqueID:impressionType:kind:name:)()
{
  return static ImpressionMetrics.shelfItem(id:idType:uniqueID:impressionType:kind:name:)();
}

uint64_t type metadata accessor for ImpressionMetrics()
{
  return type metadata accessor for ImpressionMetrics();
}

uint64_t SyncTaskScheduler.init()()
{
  return SyncTaskScheduler.init()();
}

uint64_t type metadata accessor for SyncTaskScheduler()
{
  return type metadata accessor for SyncTaskScheduler();
}

uint64_t IntentImplementation.intentKind.getter()
{
  return IntentImplementation.intentKind.getter();
}

uint64_t MetricsFieldsContext.addingValue<A>(_:forProperty:)()
{
  return MetricsFieldsContext.addingValue<A>(_:forProperty:)();
}

{
  return MetricsFieldsContext.addingValue<A>(_:forProperty:)();
}

uint64_t static MetricsFieldsContext.Property<A>.pageContextTracker.getter()
{
  return static MetricsFieldsContext.Property<A>.pageContextTracker.getter();
}

uint64_t static MetricsFieldsContext.Property<A>.pageFields.getter()
{
  return static MetricsFieldsContext.Property<A>.pageFields.getter();
}

uint64_t MetricsFieldsContext.init()()
{
  return MetricsFieldsContext.init()();
}

uint64_t type metadata accessor for MetricsFieldsContext()
{
  return type metadata accessor for MetricsFieldsContext();
}

uint64_t type metadata accessor for IntentDispatchTimeout()
{
  return type metadata accessor for IntentDispatchTimeout();
}

uint64_t NativeIntentDispatcher.registering<A>(_:)()
{
  return NativeIntentDispatcher.registering<A>(_:)();
}

uint64_t NativeIntentDispatcher.next.setter()
{
  return NativeIntentDispatcher.next.setter();
}

uint64_t static NativeIntentDispatcher.Builder.buildExpression<A>(_:)()
{
  return static NativeIntentDispatcher.Builder.buildExpression<A>(_:)();
}

uint64_t NativeIntentDispatcher.register(contentsOf:)()
{
  return NativeIntentDispatcher.register(contentsOf:)();
}

uint64_t NativeIntentDispatcher.init()()
{
  return NativeIntentDispatcher.init()();
}

uint64_t type metadata accessor for NativeIntentDispatcher()
{
  return type metadata accessor for NativeIntentDispatcher();
}

Swift::Void __swiftcall ViewControllerPresenter.viewDidAppear()()
{
}

Swift::Void __swiftcall ViewControllerPresenter.viewWillAppear()()
{
}

Swift::Void __swiftcall ViewControllerPresenter.viewDidDisappear()()
{
}

Swift::Void __swiftcall ViewControllerPresenter.viewDidReceiveMemoryWarning()()
{
}

uint64_t EmptyActionImplementation.init()()
{
  return EmptyActionImplementation.init()();
}

uint64_t type metadata accessor for PageIntentInstrumentation()
{
  return type metadata accessor for PageIntentInstrumentation();
}

uint64_t ClosureActionImplementation.init(scheduler:)()
{
  return ClosureActionImplementation.init(scheduler:)();
}

uint64_t CompoundActionImplementation.init()()
{
  return CompoundActionImplementation.init()();
}

uint64_t static MetricsFieldInclusionRequest.impressionsSnapshot.getter()
{
  return static MetricsFieldInclusionRequest.impressionsSnapshot.getter();
}

uint64_t type metadata accessor for MetricsFieldInclusionRequest()
{
  return type metadata accessor for MetricsFieldInclusionRequest();
}

uint64_t Logger.error(_:)()
{
  return Logger.error(_:)();
}

uint64_t PageID.init(with:)()
{
  return PageID.init(with:)();
}

uint64_t type metadata accessor for PageID()
{
  return type metadata accessor for PageID();
}

uint64_t inject<A, B>(_:from:)()
{
  return inject<A, B>(_:from:)();
}

uint64_t Promise.init(signpost:log:metadata:logResult:)()
{
  return Promise.init(signpost:log:metadata:logResult:)();
}

uint64_t Promise.isResolved.getter()
{
  return Promise.isResolved.getter();
}

uint64_t Promise.join<A>(with:)()
{
  return Promise.join<A>(with:)();
}

uint64_t Promise.then(perform:orCatchError:on:)()
{
  return Promise.then(perform:orCatchError:on:)();
}

uint64_t Promise.__allocating_init(value:)()
{
  return Promise.__allocating_init(value:)();
}

uint64_t Promise.always(on:perform:)()
{
  return Promise.always(on:perform:)();
}

uint64_t Promise.reject(_:)()
{
  return Promise.reject(_:)();
}

uint64_t Promise.flatMap<A>(on:_:)()
{
  return Promise.flatMap<A>(on:_:)();
}

uint64_t Promise.resolve(_:)()
{
  return Promise.resolve(_:)();
}

uint64_t Promise<A>.observerPublisher(receiveOn:)()
{
  return Promise<A>.observerPublisher(receiveOn:)();
}

uint64_t Promise<A>.init(_:)()
{
  return Promise<A>.init(_:)();
}

uint64_t Promise.__allocating_init()()
{
  return Promise.__allocating_init()();
}

uint64_t static OSLogger.actions.getter()
{
  return static OSLogger.actions.getter();
}

uint64_t type metadata accessor for OSLogger()
{
  return type metadata accessor for OSLogger();
}

uint64_t dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)()
{
  return dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)();
}

uint64_t static WidgetCenter.shared.getter()
{
  return static WidgetCenter.shared.getter();
}

uint64_t type metadata accessor for WidgetCenter()
{
  return type metadata accessor for WidgetCenter();
}

uint64_t Set.init()()
{
  return Set.init()();
}

uint64_t BinaryFloatingPoint.safeInt64.getter()
{
  return BinaryFloatingPoint.safeInt64.getter();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._forceBridgeFromObjectiveC(_:result:)()
{
  return static Dictionary._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t Dictionary.init<A>(probablyUniqueKeysWithValues:)()
{
  return Dictionary.init<A>(probablyUniqueKeysWithValues:)();
}

uint64_t Dictionary<>.flatteningUnknownSyncProperties<A>(for:)()
{
  return Dictionary<>.flatteningUnknownSyncProperties<A>(for:)();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t BidirectionalCollection<>.starts<A>(with:)()
{
  return BidirectionalCollection<>.starts<A>(with:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t type metadata accessor for String.IntentInputOptions()
{
  return type metadata accessor for String.IntentInputOptions();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t String.LocalizationValue.init(stringInterpolation:)()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t String.init<A>(reflecting:)()
{
  return String.init<A>(reflecting:)();
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t String.UnicodeScalarView._foreignIndex(after:)()
{
  return String.UnicodeScalarView._foreignIndex(after:)();
}

uint64_t String.UnicodeScalarView._foreignIndex(before:)()
{
  return String.UnicodeScalarView._foreignIndex(before:)();
}

uint64_t String.UnicodeScalarView.append<A>(contentsOf:)()
{
  return String.UnicodeScalarView.append<A>(contentsOf:)();
}

uint64_t static String.eyebrowSeparatorSymbol.getter()
{
  return static String.eyebrowSeparatorSymbol.getter();
}

uint64_t static String.Account.lastSignedInDSIDKey.getter()
{
  return static String.Account.lastSignedInDSIDKey.getter();
}

uint64_t String.init(playedOn:dateString:)()
{
  return String.init(playedOn:dateString:)();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t String.index(_:offsetBy:)()
{
  return String.index(_:offsetBy:)();
}

uint64_t String.append<A>(contentsOf:)()
{
  return String.append<A>(contentsOf:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

uint64_t static String.pageHighlightShelfID.getter()
{
  return static String.pageHighlightShelfID.getter();
}

uint64_t static String.loadingShelfID.getter()
{
  return static String.loadingShelfID.getter();
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::Bool __swiftcall String.hasSuffix(_:)(Swift::String a1)
{
  return String.hasSuffix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

{
  return String.subscript.getter();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t Sequence.sorted<A, B>(by:using:)()
{
  return Sequence.sorted<A, B>(by:using:)();
}

uint64_t Sequence.uniqued<A>(by:)()
{
  return Sequence.uniqued<A>(by:)();
}

uint64_t Sequence.publisher.getter()
{
  return Sequence.publisher.getter();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t Array<A>.group()()
{
  return Array<A>.group()();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t Array<A>.mapToModernShelves()()
{
  return Array<A>.mapToModernShelves()();
}

uint64_t type metadata accessor for Array()
{
  return type metadata accessor for Array();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t static TaskPriority.utility.getter()
{
  return static TaskPriority.utility.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t static Task<>.currentPriority.getter()
{
  return static Task<>.currentPriority.getter();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)Double._bridgeToObjectiveC()();
}

uint64_t static Double._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Double._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t static Set<>.default.getter()
{
  return static Set<>.default.getter();
}

uint64_t Set.Index._asCocoa.modify()
{
  return Set.Index._asCocoa.modify();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t static Int._forceBridgeFromObjectiveC(_:result:)()
{
  return static Int._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Int._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Int._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Int._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Int.hashValue.getter()
{
  return Int.hashValue.getter();
}

uint64_t Collection.isNotEmpty.getter()
{
  return Collection.isNotEmpty.getter();
}

uint64_t MTPlaylist.artworkModel.getter()
{
  return MTPlaylist.artworkModel.getter();
}

uint64_t NSProgress.estimatedTimeRemaining.getter()
{
  return NSProgress.estimatedTimeRemaining.getter();
}

uint64_t NSPredicate.init(format:_:)()
{
  return NSPredicate.init(format:_:)();
}

uint64_t UIResponder.firstViewInResponderChain.getter()
{
  return UIResponder.firstViewInResponderChain.getter();
}

uint64_t UIResponder.nearestFlowController.getter()
{
  return UIResponder.nearestFlowController.getter();
}

uint64_t UIResponder.nearestActionRunner.getter()
{
  return UIResponder.nearestActionRunner.getter();
}

uint64_t IMPlayerItem.init(modelObject:includeArtworkCatalog:)()
{
  return IMPlayerItem.init(modelObject:includeArtworkCatalog:)();
}

uint64_t IMPlayerItem.adamID.getter()
{
  return IMPlayerItem.adamID.getter();
}

uint64_t IMPlayerItem.init(episode:)()
{
  return IMPlayerItem.init(episode:)();
}

uint64_t NSExpression.init<A, B>(forKeyPath:)()
{
  return NSExpression.init<A, B>(forKeyPath:)();
}

uint64_t NSOrderedSet.makeIterator()()
{
  return NSOrderedSet.makeIterator()();
}

uint64_t UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)()
{
  return UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
}

uint64_t MPModelObject.uuid.getter()
{
  return MPModelObject.uuid.getter();
}

uint64_t MPModelObject.adamID.getter()
{
  return MPModelObject.adamID.getter();
}

Swift::Bool __swiftcall NSFileManager.fileExists(at:isDirectory:)(Swift::String at, Swift::Bool isDirectory)
{
  return NSFileManager.fileExists(at:isDirectory:)(at._countAndFlagsBits, at._object, isDirectory);
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t NSUserActivity.stateRestorationNavigationTab.getter()
{
  return NSUserActivity.stateRestorationNavigationTab.getter();
}

uint64_t NSUserDefaults.BOOLPublisher(forKey:)()
{
  return NSUserDefaults.BOOLPublisher(forKey:)();
}

uint64_t NSUserDefaults.queryPublisher<A>(_:)()
{
  return NSUserDefaults.queryPublisher<A>(_:)();
}

uint64_t NSUserDefaults.showListSortType.getter()
{
  return NSUserDefaults.showListSortType.getter();
}

uint64_t NSUserDefaults.showListSortType.setter()
{
  return NSUserDefaults.showListSortType.setter();
}

uint64_t NSUserDefaults.debugGestureEnabled.getter()
{
  return NSUserDefaults.debugGestureEnabled.getter();
}

uint64_t NSUserDefaults.episodeDownloadErrorEnabled.getter()
{
  return NSUserDefaults.episodeDownloadErrorEnabled.getter();
}

uint64_t CSSearchableItem.associateAppEntity<A>(_:priority:)()
{
  return CSSearchableItem.associateAppEntity<A>(_:priority:)();
}

uint64_t static UIMenuIdentifier.playbackSpeed.getter()
{
  return static UIMenuIdentifier.playbackSpeed.getter();
}

uint64_t static UIMenuIdentifier.play.getter()
{
  return static UIMenuIdentifier.play.getter();
}

uint64_t static UIMenuIdentifier.volume.getter()
{
  return static UIMenuIdentifier.volume.getter();
}

uint64_t static UIMenuIdentifier.controls.getter()
{
  return static UIMenuIdentifier.controls.getter();
}

uint64_t UIViewController.presentShareSheet(from:sourceRect:configuration:)()
{
  return UIViewController.presentShareSheet(from:sourceRect:configuration:)();
}

uint64_t UIViewController.registerForPreviewing(sourceView:handler:)()
{
  return UIViewController.registerForPreviewing(sourceView:handler:)();
}

uint64_t UIViewController.unregisterForPreviewing(registration:)()
{
  return UIViewController.unregisterForPreviewing(registration:)();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t static OS_dispatch_queue.metricsProcessingQueue.getter()
{
  return static OS_dispatch_queue.metricsProcessingQueue.getter();
}

uint64_t static OS_dispatch_queue.uiAssetPreparationQueue.getter()
{
  return static OS_dispatch_queue.uiAssetPreparationQueue.getter();
}

uint64_t static OS_dispatch_queue.automaticAssetManagement.getter()
{
  return static OS_dispatch_queue.automaticAssetManagement.getter();
}

uint64_t static OS_dispatch_queue.Attributes.concurrent.getter()
{
  return static OS_dispatch_queue.Attributes.concurrent.getter();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t UITraitCollection.interfaceIdiomIsMac.getter()
{
  return UITraitCollection.interfaceIdiomIsMac.getter();
}

uint64_t static UITraitCollection.interfaceIdiomIsMac.getter()
{
  return static UITraitCollection.interfaceIdiomIsMac.getter();
}

uint64_t UITraitCollection.interfaceMode.getter()
{
  return UITraitCollection.interfaceMode.getter();
}

uint64_t static UITraitCollection.interfaceMode.getter()
{
  return static UITraitCollection.interfaceMode.getter();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

Swift::Void __swiftcall OS_dispatch_source.suspend()()
{
}

uint64_t UITabBarController.mcui.getter()
{
  return UITabBarController.mcui.getter();
}

uint64_t UITabBarController.showTransientController(_:)()
{
  return UITabBarController.showTransientController(_:)();
}

uint64_t UITabBarController.isShowingTransientController.getter()
{
  return UITabBarController.isShowingTransientController.getter();
}

uint64_t UITabBarController.selectedNavigationController.modify()
{
  return UITabBarController.selectedNavigationController.modify();
}

uint64_t UITabBarController.selectedNavigationController.getter()
{
  return UITabBarController.selectedNavigationController.getter();
}

uint64_t UITabBarController.selectedNavigationController.setter()
{
  return UITabBarController.selectedNavigationController.setter();
}

uint64_t UITabBarController.rootViewControllers.modify()
{
  return UITabBarController.rootViewControllers.modify();
}

uint64_t UITabBarController.rootViewControllers.getter()
{
  return UITabBarController.rootViewControllers.getter();
}

uint64_t UITabBarController.rootViewControllers.setter()
{
  return UITabBarController.rootViewControllers.setter();
}

uint64_t UITabBarController.selectTabIfPossible(_:)()
{
  return UITabBarController.selectTabIfPossible(_:)();
}

uint64_t UITabBarController.navigationControllers.getter()
{
  return UITabBarController.navigationControllers.getter();
}

uint64_t UITabBarController.canSelect(navigationTab:)()
{
  return UITabBarController.canSelect(navigationTab:)();
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t static os_signpost_type_t.event.getter()
{
  return static os_signpost_type_t.event.getter();
}

uint64_t MTBookmarksSyncType.description.getter()
{
  return MTBookmarksSyncType.description.getter();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t NSNotificationCenter.weakObserver(for:using:)()
{
  return NSNotificationCenter.weakObserver(for:using:)();
}

uint64_t MPCPlayerResponseItem.podcastEpisode.getter()
{
  return MPCPlayerResponseItem.podcastEpisode.getter();
}

uint64_t MPModelPodcastEpisode.showArtworkData.getter()
{
  return MPModelPodcastEpisode.showArtworkData.getter();
}

uint64_t static MPModelPodcastEpisode.propertiesRequiredForPopulatingPlayerItem()()
{
  return static MPModelPodcastEpisode.propertiesRequiredForPopulatingPlayerItem()();
}

uint64_t MPModelPodcastEpisode.contentId.getter()
{
  return MPModelPodcastEpisode.contentId.getter();
}

uint64_t MTPodcastEpisodeLimit.countValue(in:completionHandler:)()
{
  return MTPodcastEpisodeLimit.countValue(in:completionHandler:)();
}

uint64_t static MTPodcastEpisodeLimit.defaultOption.getter()
{
  return static MTPodcastEpisodeLimit.defaultOption.getter();
}

uint64_t MTPodcastEpisodeLimit.allowsAutomaticDownloads.getter()
{
  return MTPodcastEpisodeLimit.allowsAutomaticDownloads.getter();
}

uint64_t MTPodcastEpisodeLimit.intValue.getter()
{
  return MTPodcastEpisodeLimit.intValue.getter();
}

uint64_t static NSAttributedStringKey.contentType.getter()
{
  return static NSAttributedStringKey.contentType.getter();
}

Swift::Void __swiftcall OS_dispatch_semaphore.wait()()
{
}

Swift::Int __swiftcall OS_dispatch_semaphore.signal()()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t UISplitViewController.mcui.getter()
{
  return UISplitViewController.mcui.getter();
}

uint64_t MTSubscriptionSyncType.description.getter()
{
  return MTSubscriptionSyncType.description.getter();
}

uint64_t NSManagedObjectContext.unsafeShow(for:sortDescriptors:)()
{
  return NSManagedObjectContext.unsafeShow(for:sortDescriptors:)();
}

uint64_t NSManagedObjectContext.performAndWait<A>(_:)()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

uint64_t NSManagedObjectContext.unsafeCategory(forAdamID:)()
{
  return NSManagedObjectContext.unsafeCategory(forAdamID:)();
}

uint64_t NSManagedObjectContext.unsafeInterest(forAdamID:)()
{
  return NSManagedObjectContext.unsafeInterest(forAdamID:)();
}

uint64_t NSManagedObjectContext.performAndPublish<A>(_:)()
{
  return NSManagedObjectContext.performAndPublish<A>(_:)();
}

uint64_t NSManagedObjectContext.fetchListAndPublish<A, B>(entityName:predicate:sortDescriptors:limit:receiveOn:transform:)()
{
  return NSManagedObjectContext.fetchListAndPublish<A, B>(entityName:predicate:sortDescriptors:limit:receiveOn:transform:)();
}

uint64_t NSManagedObjectContext.unsafeFromYourShowsEpisodeIdentifiers(forCategoryAdamID:)()
{
  return NSManagedObjectContext.unsafeFromYourShowsEpisodeIdentifiers(forCategoryAdamID:)();
}

uint64_t NSManagedObjectContext.episodes(for:sortDescriptors:limit:)()
{
  return NSManagedObjectContext.episodes(for:sortDescriptors:limit:)();
}

uint64_t type metadata accessor for NSManagedObjectContext.ScheduledTaskType()
{
  return type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
}

uint64_t NSManagedObjectContext.count<A>(for:)()
{
  return NSManagedObjectContext.count<A>(for:)();
}

uint64_t NSManagedObjectContext.fetch<A>(_:)()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t static MTPodcastPlaylistSettings.sortDescriptorsForGroupedStation(orderedBy:)()
{
  return static MTPodcastPlaylistSettings.sortDescriptorsForGroupedStation(orderedBy:)();
}

uint64_t MPCPlayerItemDurationSnapshot.isConsideredPlayed.getter()
{
  return MPCPlayerItemDurationSnapshot.isConsideredPlayed.getter();
}

uint64_t UITab.navigationTab.getter()
{
  return UITab.navigationTab.getter();
}

uint64_t UITab.tab(matching:)()
{
  return UITab.tab(matching:)();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t UIView.interactionContext.getter()
{
  return UIView.interactionContext.getter();
}

Swift::Void __swiftcall UIView.removeAnnotation()()
{
}

uint64_t UIView.annotate(with:)()
{
  return UIView.annotate(with:)();
}

uint64_t _UITab.tabElement(matching:)()
{
  return _UITab.tabElement(matching:)();
}

uint64_t NSArray.makeIterator()()
{
  return NSArray.makeIterator()();
}

uint64_t type metadata accessor for NSTimer.TimerPublisher()
{
  return type metadata accessor for NSTimer.TimerPublisher();
}

uint64_t static NSTimer.publish(every:tolerance:on:in:options:)()
{
  return static NSTimer.publish(every:tolerance:on:in:options:)();
}

NSNumber __swiftcall NSNumber.init(BOOLeanLiteral:)(Swift::Bool BOOLeanLiteral)
{
  return (NSNumber)NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSString.init(stringLiteral:)()
{
  return NSString.init(stringLiteral:)();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t MTEpisode.artworkModel.getter()
{
  return MTEpisode.artworkModel.getter();
}

uint64_t MTEpisode.transcriptRequest(priority:lifetime:)()
{
  return MTEpisode.transcriptRequest(priority:lifetime:)();
}

uint64_t static MTEpisode.predicateForAllEpisodes(forPodcast:)()
{
  return static MTEpisode.predicateForAllEpisodes(forPodcast:)();
}

uint64_t static MTEpisode.sortDescriptorsForUngroupedStation(orderedBy:)()
{
  return static MTEpisode.sortDescriptorsForUngroupedStation(orderedBy:)();
}

uint64_t MTEpisode.contentId.getter()
{
  return MTEpisode.contentId.getter();
}

uint64_t MTPodcast.artworkModel.getter()
{
  return MTPodcast.artworkModel.getter();
}

uint64_t MTPodcast.episodeSortType.getter()
{
  return MTPodcast.episodeSortType.getter();
}

uint64_t MTPodcast.episodeUserFilter.getter()
{
  return MTPodcast.episodeUserFilter.getter();
}

uint64_t MTPodcast.episodeUserFilter.setter()
{
  return MTPodcast.episodeUserFilter.setter();
}

uint64_t MTPodcast.uberBackgroundArtworkModel.getter()
{
  return MTPodcast.uberBackgroundArtworkModel.getter();
}

uint64_t static MTPodcast.recalculateAvailabilityDates(in:completion:)()
{
  return static MTPodcast.recalculateAvailabilityDates(in:completion:)();
}

uint64_t MTPodcast.adamId.getter()
{
  return MTPodcast.adamId.getter();
}

uint64_t MTPodcast.showType.getter()
{
  return MTPodcast.showType.getter();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t OS_os_log.signpostsEnabled.getter()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t static OS_os_log.default.getter()
{
  return static OS_os_log.default.getter();
}

uint64_t static OS_os_log.feedUpdate.getter()
{
  return static OS_os_log.feedUpdate.getter();
}

uint64_t static OS_os_log.mediaLibrary.getter()
{
  return static OS_os_log.mediaLibrary.getter();
}

uint64_t static OS_os_log.notifications.getter()
{
  return static OS_os_log.notifications.getter();
}

uint64_t static OS_os_log.iTunesMigration.getter()
{
  return static OS_os_log.iTunesMigration.getter();
}

uint64_t static OS_os_log.cloudSyncSignpost.getter()
{
  return static OS_os_log.cloudSyncSignpost.getter();
}

uint64_t static OS_os_log.episodeStatesSignpost.getter()
{
  return static OS_os_log.episodeStatesSignpost.getter();
}

uint64_t static OS_os_log.libraryLoadingSignpost.getter()
{
  return static OS_os_log.libraryLoadingSignpost.getter();
}

uint64_t static OS_os_log.launch.getter()
{
  return static OS_os_log.launch.getter();
}

uint64_t static OS_os_log.carPlay.getter()
{
  return static OS_os_log.carPlay.getter();
}

uint64_t static OS_os_log.metrics.getter()
{
  return static OS_os_log.metrics.getter();
}

uint64_t static OS_os_log.restore.getter()
{
  return static OS_os_log.restore.getter();
}

uint64_t static OS_os_log.reviews.getter()
{
  return static OS_os_log.reviews.getter();
}

uint64_t static OS_os_log.classKit.getter()
{
  return static OS_os_log.classKit.getter();
}

uint64_t static OS_os_log.cloudSync.getter()
{
  return static OS_os_log.cloudSync.getter();
}

uint64_t static OS_os_log.downloads.getter()
{
  return static OS_os_log.downloads.getter();
}

uint64_t UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)()
{
  return UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)();
}

uint64_t Optional<A>.isEmpty.getter()
{
  return Optional<A>.isEmpty.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components(separatedBy:)()
{
  return StringProtocol.components(separatedBy:)();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.localizedLowercase.getter()
{
  return StringProtocol.localizedLowercase.getter();
}

uint64_t StringProtocol.localizedUppercase.getter()
{
  return StringProtocol.localizedUppercase.getter();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.enumerateSubstrings<A>(in:options:_:)()
{
  return StringProtocol.enumerateSubstrings<A>(in:options:_:)();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.addingPercentEncoding(withAllowedCharacters:)()
{
  return StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
}

uint64_t StringProtocol.removingPercentEncoding.getter()
{
  return StringProtocol.removingPercentEncoding.getter();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t BinaryInteger.description.getter()
{
  return BinaryInteger.description.getter();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.isSuperset(of:)()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t dispatch thunk of SetAlgebra.intersection(_:)()
{
  return dispatch thunk of SetAlgebra.intersection(_:)();
}

uint64_t dispatch thunk of SetAlgebra.formUnion(_:)()
{
  return dispatch thunk of SetAlgebra.formUnion(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.contains(_:)()
{
  return __CocoaSet.contains(_:)();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

NSObject __swiftcall AnyHashable._bridgeToObjectiveC()()
{
  return (NSObject)AnyHashable._bridgeToObjectiveC()();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t _StringGuts.foreignErrorCorrectedScalar(startingAt:)()
{
  return _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t StaticString.description.getter()
{
  return StaticString.description.getter();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t _decodeScalar(_:startingAt:)()
{
  return _decodeScalar(_:startingAt:)();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _assertionFailure(_:_:flags:)()
{
  return _assertionFailure(_:_:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return _CocoaArrayWrapper.subscript.getter();
}

{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)()
{
  return KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.nestedUnkeyedContainer(forKey:)()
{
  return KeyedEncodingContainer.nestedUnkeyedContainer(forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t dispatch thunk of UnkeyedDecodingContainer.nestedContainer<A>(keyedBy:)()
{
  return dispatch thunk of UnkeyedDecodingContainer.nestedContainer<A>(keyedBy:)();
}

uint64_t dispatch thunk of UnkeyedDecodingContainer.count.getter()
{
  return dispatch thunk of UnkeyedDecodingContainer.count.getter();
}

uint64_t dispatch thunk of UnkeyedEncodingContainer.nestedContainer<A>(keyedBy:)()
{
  return dispatch thunk of UnkeyedEncodingContainer.nestedContainer<A>(keyedBy:)();
}

uint64_t _getErrorEmbeddedNSError<A>(_:)()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t _forceBridgeFromObjectiveC<A>(_:_:)()
{
  return _forceBridgeFromObjectiveC<A>(_:_:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _diagnoseUnexpectedEnumCase<A>(type:)()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

NSNumber __swiftcall Int64._bridgeToObjectiveC()()
{
  return (NSNumber)Int64._bridgeToObjectiveC()();
}

uint64_t print(_:separator:terminator:)()
{
  return print(_:separator:terminator:)();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t Result<>.init(success:error:)()
{
  return Result<>.init(success:error:)();
}

uint64_t type metadata accessor for Result()
{
  return type metadata accessor for Result();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

uint64_t ASKBuildTypeGetCurrent()
{
  return _ASKBuildTypeGetCurrent();
}

uint64_t ASKBuildTypeIsAnyOf()
{
  return _ASKBuildTypeIsAnyOf();
}

int CC_MD5_Final(unsigned __int8 *md, CC_MD5_CTX *c)
{
  return _CC_MD5_Final(md, c);
}

int CC_MD5_Init(CC_MD5_CTX *c)
{
  return _CC_MD5_Init(c);
}

int CC_MD5_Update(CC_MD5_CTX *c, const void *data, CC_LONG len)
{
  return _CC_MD5_Update(c, data, len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return _CFArrayCreateMutable(allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return _CFArrayGetCount(theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return _CFArrayGetValueAtIndex(theArray, idx);
}

void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx)
{
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return _CFBooleanGetValue(BOOLean);
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreate(allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesSynchronize(applicationID, userName, hostName);
}

CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error)
{
  return _CFPropertyListCreateData(allocator, propertyList, format, options, error);
}

CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error)
{
  return _CFPropertyListCreateWithData(allocator, data, options, format, error);
}

void CFRelease(CFTypeRef cf)
{
}

CFStringRef CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding)
{
  return _CFURLCreateStringByAddingPercentEscapes(allocator, originalString, charactersToLeaveUnescaped, legalURLCharactersToBeEscaped, encoding);
}

CFStringRef CFURLCreateStringByReplacingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveEscaped)
{
  return _CFURLCreateStringByReplacingPercentEscapes(allocator, originalString, charactersToLeaveEscaped);
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return _CFUUIDCreate(alloc);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return _CFUUIDCreateString(alloc, uuid);
}

uint64_t CGRectCenterRectInRect()
{
  return _CGRectCenterRectInRect();
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectOffset(rect, dx, dy);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  return _CMTimeGetSeconds(time);
}

uint64_t CTFontDescriptorCreateWithTextStyle()
{
  return _CTFontDescriptorCreateWithTextStyle();
}

uint64_t CTFontGetLanguageAwareOutsets()
{
  return _CTFontGetLanguageAwareOutsets();
}

uint64_t IMAccessibilityLocalizedNumber()
{
  return _IMAccessibilityLocalizedNumber();
}

uint64_t IMRectCenteredXInRectScale()
{
  return _IMRectCenteredXInRectScale();
}

uint64_t IMRectCenteredYInRectScale()
{
  return _IMRectCenteredYInRectScale();
}

uint64_t IMRoundToPixel()
{
  return _IMRoundToPixel();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return _MKBDeviceUnlockedSinceBoot();
}

uint64_t MRContentItemCopyNowPlayingInfo()
{
  return _MRContentItemCopyNowPlayingInfo();
}

uint64_t MRMediaRemoteCommandInfoCreate()
{
  return _MRMediaRemoteCommandInfoCreate();
}

uint64_t MRMediaRemoteCommandInfoGetCommand()
{
  return _MRMediaRemoteCommandInfoGetCommand();
}

uint64_t MRMediaRemoteCommandInfoSetCommand()
{
  return _MRMediaRemoteCommandInfoSetCommand();
}

uint64_t MRMediaRemoteCommandInfoSetEnabled()
{
  return _MRMediaRemoteCommandInfoSetEnabled();
}

uint64_t MRMediaRemoteGetLocalOrigin()
{
  return _MRMediaRemoteGetLocalOrigin();
}

uint64_t MRMediaRemoteInsertSystemAppPlaybackQueueForPlayer()
{
  return _MRMediaRemoteInsertSystemAppPlaybackQueueForPlayer();
}

uint64_t MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync()
{
  return _MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync();
}

uint64_t MRMediaRemoteSendCommandToPlayer()
{
  return _MRMediaRemoteSendCommandToPlayer();
}

uint64_t MRMediaRemoteSetAppPlaybackQueueForPlayer()
{
  return _MRMediaRemoteSetAppPlaybackQueueForPlayer();
}

uint64_t MRMediaRemoteSetWantsNowPlayingNotifications()
{
  return _MRMediaRemoteSetWantsNowPlayingNotifications();
}

uint64_t MRNowPlayingClientCreate()
{
  return _MRNowPlayingClientCreate();
}

uint64_t MRNowPlayingPlayerCreate()
{
  return _MRNowPlayingPlayerCreate();
}

uint64_t MRNowPlayingPlayerGetIdentifier()
{
  return _MRNowPlayingPlayerGetIdentifier();
}

uint64_t MRNowPlayingPlayerPathCreate()
{
  return _MRNowPlayingPlayerPathCreate();
}

uint64_t MRNowPlayingPlayerPathGetOrigin()
{
  return _MRNowPlayingPlayerPathGetOrigin();
}

uint64_t MRNowPlayingPlayerPathGetPlayer()
{
  return _MRNowPlayingPlayerPathGetPlayer();
}

uint64_t MRPlaybackQueueGetContentItemAtOffset()
{
  return _MRPlaybackQueueGetContentItemAtOffset();
}

uint64_t MRPlaybackQueueRequestCreate()
{
  return _MRPlaybackQueueRequestCreate();
}

uint64_t MRPlaybackQueueRequestSetIncludeMetadata()
{
  return _MRPlaybackQueueRequestSetIncludeMetadata();
}

uint64_t MRSystemAppPlaybackQueueCreate()
{
  return _MRSystemAppPlaybackQueueCreate();
}

uint64_t MRSystemAppPlaybackQueueCreateExternalRepresentation()
{
  return _MRSystemAppPlaybackQueueCreateExternalRepresentation();
}

uint64_t MRSystemAppPlaybackQueueDestroy()
{
  return _MRSystemAppPlaybackQueueDestroy();
}

uint64_t MRSystemAppPlaybackQueueSetGenericTrackIdentifiers()
{
  return _MRSystemAppPlaybackQueueSetGenericTrackIdentifiers();
}

uint64_t MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback()
{
  return _MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback();
}

uint64_t MRSystemAppPlaybackQueueSetReplaceIntent()
{
  return _MRSystemAppPlaybackQueueSetReplaceIntent();
}

uint64_t MRSystemAppPlaybackQueueSetSiriAssetInfo()
{
  return _MRSystemAppPlaybackQueueSetSiriAssetInfo();
}

uint64_t MRSystemAppPlaybackQueueSetTracklistShuffleMode()
{
  return _MRSystemAppPlaybackQueueSetTracklistShuffleMode();
}

uint64_t MRSystemAppPlaybackQueueSetUserInfo()
{
  return _MRSystemAppPlaybackQueueSetUserInfo();
}

uint64_t MSVDeviceIsAudioAccessory()
{
  return _MSVDeviceIsAudioAccessory();
}

uint64_t MTDisplayTypeFromPersistentString()
{
  return _MTDisplayTypeFromPersistentString();
}

uint64_t MTEpisodeContextFromPersistentString()
{
  return _MTEpisodeContextFromPersistentString();
}

uint64_t MTEpisodeContextSortTypeFromPersistentString()
{
  return _MTEpisodeContextSortTypeFromPersistentString();
}

uint64_t MTEpisodePriceTypeFromPersistentString()
{
  return _MTEpisodePriceTypeFromPersistentString();
}

uint64_t MTImageDownloaderArtworkDidLoadCacheKeys()
{
  return _MTImageDownloaderArtworkDidLoadCacheKeys();
}

uint64_t MTImageDownloaderArtworkDidLoadEntityUuids()
{
  return _MTImageDownloaderArtworkDidLoadEntityUuids();
}

id MTLCreateSystemDefaultDevice(void)
{
  return _MTLCreateSystemDefaultDevice();
}

uint64_t MTPlayReasonFromPersistentString()
{
  return _MTPlayReasonFromPersistentString();
}

uint64_t MTPlaybackContinuousPlaybackEnabled()
{
  return _MTPlaybackContinuousPlaybackEnabled();
}

uint64_t MTPodcastHidesPlayedEpisodesAppWideSetting()
{
  return _MTPodcastHidesPlayedEpisodesAppWideSetting();
}

uint64_t MTPodcastHidesPlayedEpisodesAppWideUserDefaults()
{
  return _MTPodcastHidesPlayedEpisodesAppWideUserDefaults();
}

uint64_t MTPodcastHidesPlayedEpisodesResolved()
{
  return _MTPodcastHidesPlayedEpisodesResolved();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

void NSLog(NSString *format, ...)
{
}

uint64_t NSPersistentStringForMTDisplayType()
{
  return _NSPersistentStringForMTDisplayType();
}

uint64_t NSPersistentStringForMTEpisodeContext()
{
  return _NSPersistentStringForMTEpisodeContext();
}

uint64_t NSPersistentStringForMTEpisodeContextSortType()
{
  return _NSPersistentStringForMTEpisodeContextSortType();
}

uint64_t NSPersistentStringForMTEpisodePriceType()
{
  return _NSPersistentStringForMTEpisodePriceType();
}

uint64_t NSPersistentStringForMTPlayReason()
{
  return _NSPersistentStringForMTPlayReason();
}

uint64_t NSPersistentStringFromMTPlaybackAdjustmentInitiator()
{
  return _NSPersistentStringFromMTPlaybackAdjustmentInitiator();
}

uint64_t NSPersistentStringFromMTStopReason()
{
  return _NSPersistentStringFromMTStopReason();
}

NSString *__cdecl NSStringFromCGSize(CGSize size)
{
  return _NSStringFromCGSize(size);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t PFMostRestrictiveLimit()
{
  return _PFMostRestrictiveLimit();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return _SecItemAdd(attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return _SecItemCopyMatching(query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return _SecItemDelete(query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return _SecItemUpdate(query, attributesToUpdate);
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsEndImageContext(void)
{
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return _UIImageJPEGRepresentation(image, compressionQuality);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

uint64_t UIInterfaceGetContentDisabledAlpha()
{
  return _UIInterfaceGetContentDisabledAlpha();
}

uint64_t UIPointRoundToViewScale()
{
  return _UIPointRoundToViewScale();
}

void UIRectFill(CGRect rect)
{
}

uint64_t UIRectInset()
{
  return _UIRectInset();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFNetworkCopyDefaultUserAgentString()
{
  return __CFNetworkCopyDefaultUserAgentString();
}

uint64_t _CTServerConnectionCopyCellularUsagePolicy()
{
  return __CTServerConnectionCopyCellularUsagePolicy();
}

uint64_t _CTServerConnectionCreateOnTargetQueue()
{
  return __CTServerConnectionCreateOnTargetQueue();
}

uint64_t _MTLogCategoryArtworkDownload()
{
  return __MTLogCategoryArtworkDownload();
}

uint64_t _MTLogCategoryAsyncTask()
{
  return __MTLogCategoryAsyncTask();
}

uint64_t _MTLogCategoryBackgroundFetching()
{
  return __MTLogCategoryBackgroundFetching();
}

uint64_t _MTLogCategoryCloudSync()
{
  return __MTLogCategoryCloudSync();
}

uint64_t _MTLogCategoryDRM()
{
  return __MTLogCategoryDRM();
}

uint64_t _MTLogCategoryDatabase()
{
  return __MTLogCategoryDatabase();
}

uint64_t _MTLogCategoryDefault()
{
  return __MTLogCategoryDefault();
}

uint64_t _MTLogCategoryDownload()
{
  return __MTLogCategoryDownload();
}

uint64_t _MTLogCategoryFeedUpdate()
{
  return __MTLogCategoryFeedUpdate();
}

uint64_t _MTLogCategoryFeedUpdateIngester()
{
  return __MTLogCategoryFeedUpdateIngester();
}

uint64_t _MTLogCategoryFollowing()
{
  return __MTLogCategoryFollowing();
}

uint64_t _MTLogCategoryLifecycle()
{
  return __MTLogCategoryLifecycle();
}

uint64_t _MTLogCategoryMediaLibrary()
{
  return __MTLogCategoryMediaLibrary();
}

uint64_t _MTLogCategoryMediaRemote()
{
  return __MTLogCategoryMediaRemote();
}

uint64_t _MTLogCategoryMetrics()
{
  return __MTLogCategoryMetrics();
}

uint64_t _MTLogCategoryNetwork()
{
  return __MTLogCategoryNetwork();
}

uint64_t _MTLogCategoryNotifications()
{
  return __MTLogCategoryNotifications();
}

uint64_t _MTLogCategoryPlayback()
{
  return __MTLogCategoryPlayback();
}

uint64_t _MTLogCategoryPrivacy()
{
  return __MTLogCategoryPrivacy();
}

uint64_t _MTLogCategorySiri()
{
  return __MTLogCategorySiri();
}

uint64_t _MTLogCategorySpotlight()
{
  return __MTLogCategorySpotlight();
}

uint64_t _MTLogCategoryUPPSync()
{
  return __MTLogCategoryUPPSync();
}

uint64_t _MTLogCategoryiTunesMigration()
{
  return __MTLogCategoryiTunesMigration();
}

uint64_t _UIAccessibilityFullKeyboardAccessEnabled()
{
  return __UIAccessibilityFullKeyboardAccessEnabled();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

{
}

{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t abort_report_np()
{
  return _abort_report_np();
}

void bzero(void *a1, size_t a2)
{
}

Ivar class_getInstanceVariable(Class cls, const char *name)
{
  return _class_getInstanceVariable(cls, name);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return _clock_gettime_nsec_np(__clock_id);
}

int deflate(z_streamp strm, int flush)
{
  return _deflate(strm, flush);
}

int deflateEnd(z_streamp strm)
{
  return _deflateEnd(strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return _deflateInit2_(strm, level, method, windowBits, memLevel, strategy, version, stream_size);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return _dispatch_block_create_with_qos_class(flags, qos_class, relative_priority, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_merge_data(dispatch_source_t source, uintptr_t value)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return _dispatch_walltime(when, delta);
}

void exit(int a1)
{
}

void free(void *a1)
{
}

int inflate(z_streamp strm, int flush)
{
  return _inflate(strm, flush);
}

int inflateEnd(z_streamp strm)
{
  return _inflateEnd(strm);
}

int inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)
{
  return _inflateInit2_(strm, windowBits, version, stream_size);
}

uint64_t isMac()
{
  return _isMac();
}

uint64_t isPad()
{
  return _isPad();
}

uint64_t isRunningUnitTests()
{
  return _isRunningUnitTests();
}

uint64_t isTV()
{
  return _isTV();
}

uint64_t isTouch()
{
  return _isTouch();
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

Class object_getClass(id a1)
{
  return _object_getClass(a1);
}

id object_getIvar(id a1, Ivar a2)
{
  return _object_getIvar(a1, a2);
}

uint64_t os_feature_enabled_batch_feed_fetch()
{
  return _os_feature_enabled_batch_feed_fetch();
}

uint64_t os_feature_enabled_bluemoon()
{
  return _os_feature_enabled_bluemoon();
}

uint64_t os_feature_enabled_debounced_asset_management()
{
  return _os_feature_enabled_debounced_asset_management();
}

uint64_t os_feature_enabled_disable_siri_plist_dumper()
{
  return _os_feature_enabled_disable_siri_plist_dumper();
}

uint64_t os_feature_enabled_download_consistency_checks()
{
  return _os_feature_enabled_download_consistency_checks();
}

uint64_t os_feature_enabled_experimental_serial_episode_count()
{
  return _os_feature_enabled_experimental_serial_episode_count();
}

uint64_t os_feature_enabled_fetch_upp_on_library_push()
{
  return _os_feature_enabled_fetch_upp_on_library_push();
}

uint64_t os_feature_enabled_homepod_siri_donation_from_apns()
{
  return _os_feature_enabled_homepod_siri_donation_from_apns();
}

uint64_t os_feature_enabled_ponderosa()
{
  return _os_feature_enabled_ponderosa();
}

uint64_t os_feature_enabled_prototype_up_next()
{
  return _os_feature_enabled_prototype_up_next();
}

uint64_t os_feature_enabled_recently_unfollowed()
{
  return _os_feature_enabled_recently_unfollowed();
}

uint64_t os_feature_enabled_red_sun()
{
  return _os_feature_enabled_red_sun();
}

uint64_t os_feature_enabled_serial_sort_auto_downloads()
{
  return _os_feature_enabled_serial_sort_auto_downloads();
}

uint64_t os_feature_enabled_skip_empty_upp_sync()
{
  return _os_feature_enabled_skip_empty_upp_sync();
}

uint64_t os_feature_enabled_story_sharing()
{
  return _os_feature_enabled_story_sharing();
}

uint64_t os_feature_enabled_unfollowed_shows_in_up_next()
{
  return _os_feature_enabled_unfollowed_shows_in_up_next();
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

int setenv(const char *__name, const char *__value, int __overwrite)
{
  return _setenv(__name, __value, __overwrite);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocObject()
{
  return _swift_deallocObject();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_deletedMethodError()
{
  return _swift_deletedMethodError();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout()
{
  return _swift_getTupleTypeLayout();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return _swift_initEnumMetadataSingleCase();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_AND_(void *a1, const char *a2, ...)
{
  return [a1 AND:];
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGSizeValue(void *a1, const char *a2, ...)
{
  return _[a1 CGSizeValue];
}

id objc_msgSend_DSID(void *a1, const char *a2, ...)
{
  return _[a1 DSID];
}

id objc_msgSend_DSIDText(void *a1, const char *a2, ...)
{
  return _[a1 DSIDText];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return [a1 JSONObjectWithData:options:error:];
}

id objc_msgSend_MZDataByDeflatingWithGZip(void *a1, const char *a2, ...)
{
  return _[a1 MZDataByDeflatingWithGZip];
}

id objc_msgSend_MZDataByInflatingWithGZip(void *a1, const char *a2, ...)
{
  return _[a1 MZDataByInflatingWithGZip];
}

id objc_msgSend_MZStringByMD5HashingString_(void *a1, const char *a2, ...)
{
  return [a1 MZStringByMD5HashingString];
}

id objc_msgSend_MZStringFromDigestData_(void *a1, const char *a2, ...)
{
  return [a1 MZStringFromDigestData:];
}

id objc_msgSend_OR_(void *a1, const char *a2, ...)
{
  return [a1 OR:];
}

id objc_msgSend_PlayerNotification_JumpDurationDidChange_String(void *a1, const char *a2, ...)
{
  return [a1 PlayerNotification_JumpDurationDidChange_String];
}

id objc_msgSend_UPPDisabled(void *a1, const char *a2, ...)
{
  return _[a1 UPPDisabled];
}

id objc_msgSend_UPPDomainVersion(void *a1, const char *a2, ...)
{
  return _[a1 UPPDomainVersion];
}

id objc_msgSend_UPPEnabled(void *a1, const char *a2, ...)
{
  return _[a1 UPPEnabled];
}

id objc_msgSend_UPPStore(void *a1, const char *a2, ...)
{
  return _[a1 UPPStore];
}

id objc_msgSend_URI(void *a1, const char *a2, ...)
{
  return _[a1 URI];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:];
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:isDirectory:];
}

id objc_msgSend_URLByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathExtension:];
}

id objc_msgSend_URLByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingPathExtension];
}

id objc_msgSend_URLByStandardizingPath(void *a1, const char *a2, ...)
{
  return _[a1 URLByStandardizingPath];
}

id objc_msgSend_URLForKey_(void *a1, const char *a2, ...)
{
  return [a1 URLForKey:];
}

id objc_msgSend_URLQueryAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLQueryAllowedCharacterSet];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_URLsForDirectory_inDomains_(void *a1, const char *a2, ...)
{
  return [a1 URLsForDirectory:inDomains:];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UTIByExtension_(void *a1, const char *a2, ...)
{
  return [a1 UTIByExtension:];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend___queryStringToQueryDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__queryStringToQueryDictionary:");
}

id objc_msgSend___stringByRemovingPercentEscapes_(void *a1, const char *a2, ...)
{
  return [a1 __stringByRemovingPercentEscapes:];
}

id objc_msgSend___stringWithPercentEscape_(void *a1, const char *a2, ...)
{
  return [a1 __stringWithPercentEscape];
}

id objc_msgSend__accountForSyncing(void *a1, const char *a2, ...)
{
  return _[a1 _accountForSyncing];
}

id objc_msgSend__actionButtonDisplayTitleForActionTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionButtonDisplayTitleForActionTitle:");
}

id objc_msgSend__activeAccountBlocking(void *a1, const char *a2, ...)
{
  return _[a1 _activeAccountBlocking];
}

id objc_msgSend__activityRestorationPath(void *a1, const char *a2, ...)
{
  return _[a1 _activityRestorationPath];
}

id objc_msgSend__addDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addDictionary:");
}

id objc_msgSend__addEpisode_toMyEpisodesInPodcast_persist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addEpisode:toMyEpisodesInPodcast:persist:");
}

id objc_msgSend__addEpisodeInCtx_mediaItem_episodeCache_podcastUuid_isRestoreDownloadCandidate_canSendNotifications_outEpisodeUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addEpisodeInCtx:mediaItem:episodeCache:podcastUuid:isRestoreDownloadCandidate:canSendNotifications:outEpisodeUUID:");
}

id objc_msgSend__addLatestSeasonForSerialPodcast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLatestSeasonForSerialPodcast:");
}

id objc_msgSend__addLatestSeasonToPodcast_(void *a1, const char *a2, ...)
{
  return [a1 _addLatestSeasonToPodcast:];
}

id objc_msgSend__addNewestEpisodeToPodcast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addNewestEpisodeToPodcast:");
}

id objc_msgSend__addPendingFeedProcessingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPendingFeedProcessingBlock:");
}

id objc_msgSend__addPendingTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPendingTransaction:");
}

id objc_msgSend__addSetting_syncObj_playlist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSetting:syncObj:playlist:");
}

id objc_msgSend__addedSubscriptions(void *a1, const char *a2, ...)
{
  return _[a1 _addedSubscriptions];
}

id objc_msgSend__alertControllerForClearingOrKeepingUpNextWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alertControllerForClearingOrKeepingUpNextWithRequest:");
}

id objc_msgSend__allEligiblePodcastsForPlaylistInCtx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allEligiblePodcastsForPlaylistInCtx:");
}

id objc_msgSend__appendDeferredWorkBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendDeferredWorkBlock:");
}

id objc_msgSend__applePodcastsFoundationSettingsUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 _applePodcastsFoundationSettingsUserDefaults];
}

id objc_msgSend__applePodcastsFoundationSharedUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 _applePodcastsFoundationSharedUserDefaults];
}

id objc_msgSend__appliedInsets(void *a1, const char *a2, ...)
{
  return _[a1 _appliedInsets];
}

id objc_msgSend__applyBackdropViewSettings_includeTints_includeBlur_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyBackdropViewSettings:includeTints:includeBlur:");
}

id objc_msgSend__artworkSizeDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _artworkSizeDidChange];
}

id objc_msgSend__artworkView(void *a1, const char *a2, ...)
{
  return _[a1 _artworkView];
}

id objc_msgSend__asyncFetchArtworkDidLoadImage_forArtworkKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_asyncFetchArtworkDidLoadImage:forArtworkKey:");
}

id objc_msgSend__augmentPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_augmentPredicate:");
}

id objc_msgSend__authenticationCanProcessTransaction_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authenticationCanProcessTransaction:error:");
}

id objc_msgSend__automaticallySynchronizeLocalChangesOnResignActive(void *a1, const char *a2, ...)
{
  return _[a1 _automaticallySynchronizeLocalChangesOnResignActive];
}

id objc_msgSend__automaticallySynchronizeOnBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 _automaticallySynchronizeOnBecomeActive];
}

id objc_msgSend__backgroundFetchInterval(void *a1, const char *a2, ...)
{
  return _[a1 _backgroundFetchInterval];
}

id objc_msgSend__baselineOffsetFromBottom(void *a1, const char *a2, ...)
{
  return _[a1 _baselineOffsetFromBottom];
}

id objc_msgSend__beginBackgroundTask(void *a1, const char *a2, ...)
{
  return _[a1 _beginBackgroundTask];
}

id objc_msgSend__beginGeneratingLibraryChangeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _beginGeneratingLibraryChangeNotifications];
}

id objc_msgSend__blurredArtworkForArtwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_blurredArtworkForArtwork:");
}

id objc_msgSend__boundsRelativeHitRect(void *a1, const char *a2, ...)
{
  return _[a1 _boundsRelativeHitRect];
}

id objc_msgSend__buildMap(void *a1, const char *a2, ...)
{
  return _[a1 _buildMap];
}

id objc_msgSend__canScheduleTransaction_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canScheduleTransaction:error:");
}

id objc_msgSend__canScheduleTransactionBasedOfNetworkingBlocked_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canScheduleTransactionBasedOfNetworkingBlocked:error:");
}

id objc_msgSend__canScheduleTransactionBasedOnBackOff_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canScheduleTransactionBasedOnBackOff:error:");
}

id objc_msgSend__canScheduleTransactionBasedOnDSIDCheck_error_(void *a1, const char *a2, ...)
{
  return [a1 _canScheduleTransactionBasedOnDSIDCheck:error:];
}

id objc_msgSend__canScheduleTransactionBasedOnType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canScheduleTransactionBasedOnType:error:");
}

id objc_msgSend__canScheduleTransactionBasedOnUserCancelledSignIn_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canScheduleTransactionBasedOnUserCancelledSignIn:error:");
}

id objc_msgSend__canShowInApp(void *a1, const char *a2, ...)
{
  return _[a1 _canShowInApp];
}

id objc_msgSend__cancelAllPendingTransactions_(void *a1, const char *a2, ...)
{
  return [a1 _cancelAllPendingTransactions:];
}

id objc_msgSend__cancelTransaction_error_(void *a1, const char *a2, ...)
{
  return [a1 _cancelTransaction:error:];
}

id objc_msgSend__changeContainsRelevantChannelChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeContainsRelevantChannelChanges:");
}

id objc_msgSend__changeContainsRelevantEpisodeChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeContainsRelevantEpisodeChanges:");
}

id objc_msgSend__changeContainsRelevantPodcastChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeContainsRelevantPodcastChanges:");
}

id objc_msgSend__chevronFrameForViewSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_chevronFrameForViewSize:");
}

id objc_msgSend__chevronSize(void *a1, const char *a2, ...)
{
  return _[a1 _chevronSize];
}

id objc_msgSend__clampsCanScheduleTransaction_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clampsCanScheduleTransaction:error:");
}

id objc_msgSend__classesForTransactionClampsValues(void *a1, const char *a2, ...)
{
  return _[a1 _classesForTransactionClampsValues];
}

id objc_msgSend__clearAndHideArtworkView(void *a1, const char *a2, ...)
{
  return _[a1 _clearAndHideArtworkView];
}

id objc_msgSend__clearCellEmphasis(void *a1, const char *a2, ...)
{
  return _[a1 _clearCellEmphasis];
}

id objc_msgSend__commandEventIsFromSiri_(void *a1, const char *a2, ...)
{
  return [a1 _commandEventIsFromSiri];
}

id objc_msgSend__commandEventIsInternal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commandEventIsInternal:");
}

id objc_msgSend__compareServerEpisode_toLocalEpisode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_compareServerEpisode:toLocalEpisode:");
}

id objc_msgSend__configureEmphasisForCell_indexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureEmphasisForCell:indexPath:animated:");
}

id objc_msgSend__configureEmphasisForCellAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureEmphasisForCellAtIndexPath:animated:");
}

id objc_msgSend__contentGUID(void *a1, const char *a2, ...)
{
  return _[a1 _contentGUID];
}

id objc_msgSend__contentScrollInset(void *a1, const char *a2, ...)
{
  return _[a1 _contentScrollInset];
}

id objc_msgSend__contentViewLayoutRect(void *a1, const char *a2, ...)
{
  return _[a1 _contentViewLayoutRect];
}

id objc_msgSend__countFrameForViewSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_countFrameForViewSize:");
}

id objc_msgSend__countSize(void *a1, const char *a2, ...)
{
  return _[a1 _countSize];
}

id objc_msgSend__createLabelTextForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _createLabelTextForCurrentState];
}

id objc_msgSend__currentDescriptionColor(void *a1, const char *a2, ...)
{
  return _[a1 _currentDescriptionColor];
}

id objc_msgSend__currentEpisodeForManifest_(void *a1, const char *a2, ...)
{
  return [_currentEpisodeForManifest:];
}

id objc_msgSend__currentEpisodeForPodcastGroup_(void *a1, const char *a2, ...)
{
  return [_currentEpisodeForPodcastGroup:];
}

id objc_msgSend__currentEpisodeUuid(void *a1, const char *a2, ...)
{
  return _[a1 _currentEpisodeUuid];
}

id objc_msgSend__currentStatus(void *a1, const char *a2, ...)
{
  return _[a1 _currentStatus];
}

id objc_msgSend__currentTitleColor(void *a1, const char *a2, ...)
{
  return _[a1 _currentTitleColor];
}

id objc_msgSend__currentTitleFont(void *a1, const char *a2, ...)
{
  return _[a1 _currentTitleFont];
}

id objc_msgSend__currentTransactionDidFinish(void *a1, const char *a2, ...)
{
  return _[a1 _currentTransactionDidFinish];
}

id objc_msgSend__currentUpNextIndex(void *a1, const char *a2, ...)
{
  return _[a1 _currentUpNextIndex];
}

id objc_msgSend__data(void *a1, const char *a2, ...)
{
  return _[a1 _data];
}

id objc_msgSend__dataSourceCancelTransaction(void *a1, const char *a2, ...)
{
  return _[a1 _dataSourceCancelTransaction];
}

id objc_msgSend__defaultSelectionStyleForSetting_(void *a1, const char *a2, ...)
{
  return [_defaultSelectionStyleForSetting:];
}

id objc_msgSend__defaultsChanged(void *a1, const char *a2, ...)
{
  return _[a1 _defaultsChanged];
}

id objc_msgSend__delegateOperationDidFinish(void *a1, const char *a2, ...)
{
  return _[a1 _delegateOperationDidFinish];
}

id objc_msgSend__delegateShouldScheduleTransaction_error_(void *a1, const char *a2, ...)
{
  return [_delegateShouldScheduleTransaction:error:];
}

id objc_msgSend__delegateTransactionDidFail_withError_(void *a1, const char *a2, ...)
{
  return [_delegateTransactionDidFail:withError:];
}

id objc_msgSend__delegateTransactionDidFinish_(void *a1, const char *a2, ...)
{
  return [_delegateTransactionDidFinish:];
}

id objc_msgSend__deleteEpisodeUuids_forced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteEpisodeUuids:forced:");
}

id objc_msgSend__deleteEpisodes_forced_ctx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteEpisodes:forced:ctx:");
}

id objc_msgSend__deleteFromRecentlyUnfollowedForPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteFromRecentlyUnfollowedForPredicate:");
}

id objc_msgSend__deletePodcastForPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deletePodcastForPredicate:");
}

id objc_msgSend__deleteSpotlightIdentifierForPlaylist_(void *a1, const char *a2, ...)
{
  return [a1 _deleteSpotlightIdentifierForPlaylist];
}

id objc_msgSend__deleteSpotlightIdentifiersForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 _deleteSpotlightIdentifiersForPodcast:];
}

id objc_msgSend__dequeueAllDeferredWorkBlocks(void *a1, const char *a2, ...)
{
  return _[a1 _dequeueAllDeferredWorkBlocks];
}

id objc_msgSend__descriptionHTMLForDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionHTMLForDataSource:");
}

id objc_msgSend__destinationForRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationForRequest:completion:");
}

id objc_msgSend__determineManifest_scalledIndex_forIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_determineManifest:scalledIndex:forIndex:");
}

id objc_msgSend__dictionaryForPodcastUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictionaryForPodcastUuid:");
}

id objc_msgSend__didCompleteBatchProcessingBatchGenerator_state_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didCompleteBatchProcessingBatchGenerator:state:error:");
}

id objc_msgSend__didFinishUpdatingFeedUrl_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didFinishUpdatingFeedUrl:withError:");
}

id objc_msgSend__disclosureChevronImage_(void *a1, const char *a2, ...)
{
  return [a1 _disclosureChevronImage:];
}

id objc_msgSend__donateCurrentPlayerItem(void *a1, const char *a2, ...)
{
  return _[a1 _donateCurrentPlayerItem];
}

id objc_msgSend__downloadDataSource(void *a1, const char *a2, ...)
{
  return _[a1 _downloadDataSource];
}

id objc_msgSend__duration(void *a1, const char *a2, ...)
{
  return _[a1 _duration];
}

id objc_msgSend__effectiveAutorefreshRate(void *a1, const char *a2, ...)
{
  return _[a1 _effectiveAutorefreshRate];
}

id objc_msgSend__encodedUpNext(void *a1, const char *a2, ...)
{
  return _[a1 _encodedUpNext];
}

id objc_msgSend__encodedUpNextClasses(void *a1, const char *a2, ...)
{
  return _[a1 _encodedUpNextClasses];
}

id objc_msgSend__endBackgroundTask(void *a1, const char *a2, ...)
{
  return _[a1 _endBackgroundTask];
}

id objc_msgSend__endGeneratingLibraryChangeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _endGeneratingLibraryChangeNotifications];
}

id objc_msgSend__enqueueStoreRequest_withUrlRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueStoreRequest:withUrlRequest:");
}

id objc_msgSend__enqueueTempFilesDeletion(void *a1, const char *a2, ...)
{
  return _[a1 _enqueueTempFilesDeletion];
}

id objc_msgSend__entitiesByRemovingAlreadyProcessedFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_entitiesByRemovingAlreadyProcessedFrom:");
}

id objc_msgSend__episodeArtworkIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _episodeArtworkIdentifier];
}

id objc_msgSend__episodeContextFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_episodeContextFromString:");
}

id objc_msgSend__episodeContextSortFromString_(void *a1, const char *a2, ...)
{
  return [a1 _episodeContextSortFromString:];
}

id objc_msgSend__episodeOrderFromString_(void *a1, const char *a2, ...)
{
  return [a1 _episodeOrderFromString:];
}

id objc_msgSend__episodeStorePlatformDictionaryFromSiriAssetInfo_episodeAdamId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_episodeStorePlatformDictionaryFromSiriAssetInfo:episodeAdamId:");
}

id objc_msgSend__episodeToPlayForPodcastUuid_playbackOrder_excludeExplicit_ctx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_episodeToPlayForPodcastUuid:playbackOrder:excludeExplicit:ctx:");
}

id objc_msgSend__errorResolutionCancel_transaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorResolutionCancel:transaction:");
}

id objc_msgSend__errorResolutionDefault_transaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorResolutionDefault:transaction:");
}

id objc_msgSend__errorResolutionRetry_transaction_(void *a1, const char *a2, ...)
{
  return [a1 _errorResolutionRetry:transaction:];
}

id objc_msgSend__extraObjects(void *a1, const char *a2, ...)
{
  return _[a1 _extraObjects];
}

id objc_msgSend__feedUpdateAndSubscribeToPodcast_feedUrl_adamId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_feedUpdateAndSubscribeToPodcast:feedUrl:adamId:");
}

id objc_msgSend__fetchArtwork(void *a1, const char *a2, ...)
{
  return _[a1 _fetchArtwork];
}

id objc_msgSend__fetchArtworkInBackground(void *a1, const char *a2, ...)
{
  return _[a1 _fetchArtworkInBackground];
}

id objc_msgSend__fetchBatchFetchEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _fetchBatchFetchEnabled];
}

id objc_msgSend__fetchLatestProcessedPersistentHistoryToken(void *a1, const char *a2, ...)
{
  return _[a1 _fetchLatestProcessedPersistentHistoryToken];
}

id objc_msgSend__fetchMediaAPIShowsExpectedToUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMediaAPIShowsExpectedToUpdate:");
}

id objc_msgSend__fetchRequestForDistinctSeasons(void *a1, const char *a2, ...)
{
  return _[a1 _fetchRequestForDistinctSeasons];
}

id objc_msgSend__fetchRequestForEpisodesWithMissingAdamIdsForPodcastUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchRequestForEpisodesWithMissingAdamIdsForPodcastUuid:");
}

id objc_msgSend__fetchRequestForMostRecentlyPlayedEpisode(void *a1, const char *a2, ...)
{
  return _[a1 _fetchRequestForMostRecentlyPlayedEpisode];
}

id objc_msgSend__fetchShortcutItems(void *a1, const char *a2, ...)
{
  return _[a1 _fetchShortcutItems];
}

id objc_msgSend__fetchSmallestPicturePossible(void *a1, const char *a2, ...)
{
  return _[a1 _fetchSmallestPicturePossible];
}

id objc_msgSend__filePath(void *a1, const char *a2, ...)
{
  return _[a1 _filePath];
}

id objc_msgSend__fillEmptyMetadataIdentifiersIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _fillEmptyMetadataIdentifiersIfNeeded];
}

id objc_msgSend__findOrAddPodcastForMediaItem_updaterCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findOrAddPodcastForMediaItem:updaterCache:");
}

id objc_msgSend__fixSortOrder_generated_p_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fixSortOrder:generated_p:");
}

id objc_msgSend__font(void *a1, const char *a2, ...)
{
  return _[a1 _font];
}

id objc_msgSend__footerHTMLForDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footerHTMLForDataSource:");
}

id objc_msgSend__frcDidChangeResults_uuidToManagedObjectIDMap_(void *a1, const char *a2, ...)
{
  return [a1 _frcDidChangeResults:uuidToManagedObjectIDMap:];
}

id objc_msgSend__freeSpace(void *a1, const char *a2, ...)
{
  return _[a1 _freeSpace];
}

id objc_msgSend__freezeContentIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _freezeContentIfNeeded];
}

id objc_msgSend__genreNameForStoreItemDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_genreNameForStoreItemDictionary:");
}

id objc_msgSend__getNowPlayingInfoAndCallPendingCompletions(void *a1, const char *a2, ...)
{
  return _[a1 _getNowPlayingInfoAndCallPendingCompletions];
}

id objc_msgSend__grabBagWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 _grabBagWithCompletionBlock:];
}

id objc_msgSend__handleAttributesAndRedownloadOnPriceTypeChangeIfNeeded_isNewEpisodeToCurrentDevice_oldIsEntitled_oldEnclosureURL_oldPriceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAttributesAndRedownloadOnPriceTypeChangeIfNeeded:isNewEpisodeToCurrentDevice:oldIsEntitled:oldEnclosureURL:oldPriceType:");
}

id objc_msgSend__handleBrowseURL_(void *a1, const char *a2, ...)
{
  return [a1 _handleBrowseURL:];
}

id objc_msgSend__handleLegacyCoreSpotlightURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLegacyCoreSpotlightURL:");
}

id objc_msgSend__handleNowPlayingURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNowPlayingURL:");
}

id objc_msgSend__handleShowNotificationsDebugMenuAction(void *a1, const char *a2, ...)
{
  return _[a1 _handleShowNotificationsDebugMenuAction];
}

id objc_msgSend__hasMTImageStoreContent(void *a1, const char *a2, ...)
{
  return _[a1 _hasMTImageStoreContent];
}

id objc_msgSend__hasResults(void *a1, const char *a2, ...)
{
  return _[a1 _hasResults];
}

id objc_msgSend__hasRowAtIndexPath_focusable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasRowAtIndexPath:focusable:");
}

id objc_msgSend__heightWillChange(void *a1, const char *a2, ...)
{
  return _[a1 _heightWillChange];
}

id objc_msgSend__historyTransactionsSinceLatestPersistentHistoryToken(void *a1, const char *a2, ...)
{
  return _[a1 _historyTransactionsSinceLatestPersistentHistoryToken];
}

id objc_msgSend__identifierForDictionary_(void *a1, const char *a2, ...)
{
  return [a1 _identifierForDictionary];
}

id objc_msgSend__imageThatSuppressesAccessibilityHairlineThickening(void *a1, const char *a2, ...)
{
  return _[a1 _imageThatSuppressesAccessibilityHairlineThickening];
}

id objc_msgSend__imageViewForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageViewForKey:");
}

id objc_msgSend__imageViews(void *a1, const char *a2, ...)
{
  return _[a1 _imageViews];
}

id objc_msgSend__indexOfEpisodeUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexOfEpisodeUUID:");
}

id objc_msgSend__indexPathForRowAfterIndexPath_focusable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathForRowAfterIndexPath:focusable:");
}

id objc_msgSend__indexPathForRowBeforeIndexPath_focusable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathForRowBeforeIndexPath:focusable:");
}

id objc_msgSend__initGroupWithName_identifier_customizations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initGroupWithName:identifier:customizations:");
}

id objc_msgSend__initShared(void *a1, const char *a2, ...)
{
  return _[a1 _initShared];
}

id objc_msgSend__initWithEpisodeAdamIds_playheadPosition_initialIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithEpisodeAdamIds:playheadPosition:initialIndex:");
}

id objc_msgSend__initWithPodcastStorePlatformDictionary_oldestEpisode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithPodcastStorePlatformDictionary:oldestEpisode:");
}

id objc_msgSend__initWithTypeIdentifier_suggestedActionType_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithTypeIdentifier:suggestedActionType:options:");
}

id objc_msgSend__initializeFrc(void *a1, const char *a2, ...)
{
  return _[a1 _initializeFrc];
}

id objc_msgSend__insertNewEpisodeForServerEpisode_podcast_ctx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertNewEpisodeForServerEpisode:podcast:ctx:");
}

id objc_msgSend__intentWantsPlaybackQueueIncludedInNowPlayingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intentWantsPlaybackQueueIncludedInNowPlayingInfo:");
}

id objc_msgSend__invalidateAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateAssertionTimer];
}

id objc_msgSend__invalidateTaskAssertionForced_(void *a1, const char *a2, ...)
{
  return [a1 _invalidateTaskAssertionForced:];
}

id objc_msgSend__invalidateTaskTimer(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateTaskTimer];
}

id objc_msgSend__invokeRestorationCompletions(void *a1, const char *a2, ...)
{
  return _[a1 _invokeRestorationCompletions];
}

id objc_msgSend__isApplicationActive(void *a1, const char *a2, ...)
{
  return _[a1 _isApplicationActive];
}

id objc_msgSend__isBackgroundEmphasized(void *a1, const char *a2, ...)
{
  return _[a1 _isBackgroundEmphasized];
}

id objc_msgSend__isContinuousPlaybackEnabledForLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isContinuousPlaybackEnabledForLimit:");
}

id objc_msgSend__isDownloadButtonEnabledForDownloadPhase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDownloadButtonEnabledForDownloadPhase:");
}

id objc_msgSend__isEmphasizedSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEmphasizedSetting:");
}

id objc_msgSend__isEnabledForTransaction_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEnabledForTransaction:error:");
}

id objc_msgSend__isGetAllSinceDomainVersionRequest(void *a1, const char *a2, ...)
{
  return _[a1 _isGetAllSinceDomainVersionRequest];
}

id objc_msgSend__isLPMEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _isLPMEnabled];
}

id objc_msgSend__isPausedForDownloadPhase_(void *a1, const char *a2, ...)
{
  return [a1 _isPausedForDownloadPhase:];
}

id objc_msgSend__isRTL(void *a1, const char *a2, ...)
{
  return _[a1 _isRTL];
}

id objc_msgSend__isRemoveAllSinceDomainVersion(void *a1, const char *a2, ...)
{
  return _[a1 _isRemoveAllSinceDomainVersion];
}

id objc_msgSend__isSideViewHidden(void *a1, const char *a2, ...)
{
  return _[a1 _isSideViewHidden];
}

id objc_msgSend__isTextEmphasized(void *a1, const char *a2, ...)
{
  return _[a1 _isTextEmphasized];
}

id objc_msgSend__isTransactionValid_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isTransactionValid:error:");
}

id objc_msgSend__itemType(void *a1, const char *a2, ...)
{
  return _[a1 _itemType];
}

id objc_msgSend__itemTypeForPlayerItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemTypeForPlayerItem:");
}

id objc_msgSend__keyForTransaction_(void *a1, const char *a2, ...)
{
  return [a1 _keyForTransaction:];
}

id objc_msgSend__lastGlyphBaselineRightPointWithLayoutManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lastGlyphBaselineRightPointWithLayoutManager:");
}

id objc_msgSend__latestEpisodeForPodcastUuid_restrictToUserEpisodes_excludeExplicit_ctx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_latestEpisodeForPodcastUuid:restrictToUserEpisodes:excludeExplicit:ctx:");
}

id objc_msgSend__layoutContentViewSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _layoutContentViewSubviews];
}

id objc_msgSend__layoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 _layoutMargins];
}

id objc_msgSend__layoutMarginsForViewWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutMarginsForViewWidth:");
}

id objc_msgSend__leading(void *a1, const char *a2, ...)
{
  return _[a1 _leading];
}

id objc_msgSend__load_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_load:");
}

id objc_msgSend__loadActivityForRestoration(void *a1, const char *a2, ...)
{
  return _[a1 _loadActivityForRestoration];
}

id objc_msgSend__loadArtworkFromMemoryCache(void *a1, const char *a2, ...)
{
  return _[a1 _loadArtworkFromMemoryCache];
}

id objc_msgSend__loadItemsFromEpisodeAdamIdsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadItemsFromEpisodeAdamIdsWithCompletion:");
}

id objc_msgSend__loadQueryParameterValuesFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadQueryParameterValuesFromString:");
}

id objc_msgSend__localEpisode_isEqualToServerEpisode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localEpisode:isEqualToServerEpisode:");
}

id objc_msgSend__localPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 _localPlayerPath];
}

id objc_msgSend__localPodcastExists(void *a1, const char *a2, ...)
{
  return _[a1 _localPodcastExists];
}

id objc_msgSend__logStateChange_oldButtonType_oldStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logStateChange:oldButtonType:oldStatus:");
}

id objc_msgSend__longStringForEpisodes_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_longStringForEpisodes:defaultValue:");
}

id objc_msgSend__lookupEpisodeUuidIfNecessaryFromURLString_(void *a1, const char *a2, ...)
{
  return [a1 _lookupEpisodeUuidIfNecessaryFromURLString:];
}

id objc_msgSend__lookupPodcastUuidIfNecessaryFromURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lookupPodcastUuidIfNecessaryFromURLString:");
}

id objc_msgSend__manifestForPlayMyLatestPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 _manifestForPlayMyLatestPodcasts];
}

id objc_msgSend__manifestForPlayMyOldestPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 _manifestForPlayMyOldestPodcasts];
}

id objc_msgSend__manifestForPlayMyPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 _manifestForPlayMyPodcasts];
}

id objc_msgSend__markAsHiddenPodcast_inContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markAsHiddenPodcast:inContext:");
}

id objc_msgSend__markAsHiddenPodcastsWithUuids_setSubscriptionsSyncDirty_ctx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markAsHiddenPodcastsWithUuids:setSubscriptionsSyncDirty:ctx:");
}

id objc_msgSend__markEpisodeAsFirstSeen_(void *a1, const char *a2, ...)
{
  return [a1 _markEpisodeAsFirstSeen:];
}

id objc_msgSend__markLatestEpisodeAsUnplayedIfNeeded_latestEpisodeInPodcast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markLatestEpisodeAsUnplayedIfNeeded:latestEpisodeInPodcast:");
}

id objc_msgSend__markPlaylistsForUpdateForPodcastUuids_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markPlaylistsForUpdateForPodcastUuids:");
}

id objc_msgSend__maxArtworkSize(void *a1, const char *a2, ...)
{
  return _[a1 _maxArtworkSize];
}

id objc_msgSend__mediaItemForEpisode_(void *a1, const char *a2, ...)
{
  return [a1 _mediaItemForEpisode];
}

id objc_msgSend__mediaType(void *a1, const char *a2, ...)
{
  return _[a1 _mediaType];
}

id objc_msgSend__mediaTypeForPlayerItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mediaTypeForPlayerItem:");
}

id objc_msgSend__mergeSetting_syncObj_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeSetting:syncObj:");
}

id objc_msgSend__metadataUrl(void *a1, const char *a2, ...)
{
  return _[a1 _metadataUrl];
}

id objc_msgSend__metricsDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _metricsDateFormatter];
}

id objc_msgSend__migrateToImageProvider(void *a1, const char *a2, ...)
{
  return _[a1 _migrateToImageProvider];
}

id objc_msgSend__mostRecentPlayTimeFromDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _mostRecentPlayTimeFromDatabase];
}

id objc_msgSend__mt_identifiersMatchingDeletedEpisodesOnPodcastUuid_inNotificationRequests_ctx_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mt_identifiersMatchingDeletedEpisodesOnPodcastUuid:inNotificationRequests:ctx:completion:");
}

id objc_msgSend__mt_identifiersMatchingPlayerItemsInNotificationRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mt_identifiersMatchingPlayerItemsInNotificationRequests:");
}

id objc_msgSend__mt_identifiersMatchingPodcastUuid_inNotificationRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mt_identifiersMatchingPodcastUuid:inNotificationRequests:");
}

id objc_msgSend__multiSelectCheckmarkImage(void *a1, const char *a2, ...)
{
  return _[a1 _multiSelectCheckmarkImage];
}

id objc_msgSend__multiSelectNotSelectedImage(void *a1, const char *a2, ...)
{
  return _[a1 _multiSelectNotSelectedImage];
}

id objc_msgSend__needsImageStoreMigration(void *a1, const char *a2, ...)
{
  return _[a1 _needsImageStoreMigration];
}

id objc_msgSend__notifyDelegateIfHeightChanged(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDelegateIfHeightChanged];
}

id objc_msgSend__nowPlayingRootViewController(void *a1, const char *a2, ...)
{
  return _[a1 _nowPlayingRootViewController];
}

id objc_msgSend__observeAllPropertyChangesForEntityName_predicate_(void *a1, const char *a2, ...)
{
  return [_observeAllPropertyChangesForEntityName:predicate:];
}

id objc_msgSend__offerNameForOfferFlavor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_offerNameForOfferFlavor:");
}

id objc_msgSend__offerTypesAsFlagBits_(void *a1, const char *a2, ...)
{
  return [a1 _offerTypesAsFlagBits];
}

id objc_msgSend__oldestEpisodeForPodcastUuid_restrictToUserEpisodes_excludeExplicit_ctx_(void *a1, const char *a2, ...)
{
  return [_oldestEpisodeForPodcastUuid:restrictToUserEpisodes:excludeExplicit:ctx:];
}

id objc_msgSend__onIndexingQueueHandleNextBatchOrUpdateRequest(void *a1, const char *a2, ...)
{
  return _[a1 _onIndexingQueueHandleNextBatchOrUpdateRequest];
}

id objc_msgSend__onIndexingQueuePerformUpdateRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onIndexingQueuePerformUpdateRequest:");
}

id objc_msgSend__onQueueCancelCurrentReindexAll(void *a1, const char *a2, ...)
{
  return _[a1 _onQueueCancelCurrentReindexAll];
}

id objc_msgSend__onQueueLoadBagContextWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueueLoadBagContextWithCompletionHandler:");
}

id objc_msgSend__onQueuePerformCompletionsForGenerator_error_(void *a1, const char *a2, ...)
{
  return [_onQueuePerformCompletionsForGenerator:error:];
}

id objc_msgSend__onQueueStartNewTimer(void *a1, const char *a2, ...)
{
  return _[a1 _onQueueStartNewTimer];
}

id objc_msgSend__onQueueStartProcessNextBatchInGenerator_searchableIndex_(void *a1, const char *a2, ...)
{
  return [_onQueueStartProcessNextBatchInGenerator:searchableIndex:];
}

id objc_msgSend__onQueueStopTimer(void *a1, const char *a2, ...)
{
  return _[a1 _onQueueStopTimer];
}

id objc_msgSend__onQueueSuspendTimer(void *a1, const char *a2, ...)
{
  return _[a1 _onQueueSuspendTimer];
}

id objc_msgSend__onQueueSynchronizeImmediatelyWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 _onQueueSynchronizeImmediatelyWithCompletionBlock:];
}

id objc_msgSend__onQueueSynchronizeWithAutosynchronizeMask_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return [_onQueueSynchronizeWithAutosynchronizeMask:withCompletionBlock:];
}

id objc_msgSend__onQueueUpdateTimerForActiveChanges(void *a1, const char *a2, ...)
{
  return _[a1 _onQueueUpdateTimerForActiveChanges];
}

id objc_msgSend__openExternalItemIfNeededForManifest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openExternalItemIfNeededForManifest:");
}

id objc_msgSend__options(void *a1, const char *a2, ...)
{
  return _[a1 _options];
}

id objc_msgSend__performAfterPlay_playbackStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAfterPlay:playbackStarted:");
}

id objc_msgSend__performDeferredIndexAll(void *a1, const char *a2, ...)
{
  return _[a1 _performDeferredIndexAll];
}

id objc_msgSend__performMediaRemoteCommand_options_(void *a1, const char *a2, ...)
{
  return [a1 _performMediaRemoteCommand:options:];
}

id objc_msgSend__platformContentController(void *a1, const char *a2, ...)
{
  return _[a1 _platformContentController];
}

id objc_msgSend__playQueueTypeForRequestURL_(void *a1, const char *a2, ...)
{
  return [a1 _playQueueTypeForRequestURL];
}

id objc_msgSend__playReasonFromString_(void *a1, const char *a2, ...)
{
  return [a1 _playReasonFromString:];
}

id objc_msgSend__playbackRequestIdentifierWithHost_queryComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playbackRequestIdentifierWithHost:queryComponents:");
}

id objc_msgSend__playbackRequestIdentifierWithHost_queryKey_value_(void *a1, const char *a2, ...)
{
  return [a1 _playbackRequestIdentifierWithHost:queryKey:value:];
}

id objc_msgSend__playbackRequestURLForIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playbackRequestURLForIntent:");
}

id objc_msgSend__playerItemForContentItemId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playerItemForContentItemId:");
}

id objc_msgSend__playerItemForContentItemId_infoCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playerItemForContentItemId:infoCenter:");
}

id objc_msgSend__podcastArtworkIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _podcastArtworkIdentifier];
}

id objc_msgSend__podcastFeedURL(void *a1, const char *a2, ...)
{
  return _[a1 _podcastFeedURL];
}

id objc_msgSend__podcastId(void *a1, const char *a2, ...)
{
  return _[a1 _podcastId];
}

id objc_msgSend__podcastState(void *a1, const char *a2, ...)
{
  return _[a1 _podcastState];
}

id objc_msgSend__podcastStateForPlayerItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_podcastStateForPlayerItem:");
}

id objc_msgSend__podcastSubscriptions(void *a1, const char *a2, ...)
{
  return _[a1 _podcastSubscriptions];
}

id objc_msgSend__predicate(void *a1, const char *a2, ...)
{
  return _[a1 _predicate];
}

id objc_msgSend__predicateForEpisodesToUpdateWithPodcastUuid_predicateForUnplayedInUnplayedTab_predicateForUserEpisodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForEpisodesToUpdateWithPodcastUuid:predicateForUnplayedInUnplayedTab:predicateForUserEpisodes:");
}

id objc_msgSend__predicateForFilteringExplicitEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 _predicateForFilteringExplicitEpisodes];
}

id objc_msgSend__predicateForOpportunisticHiddenPodcastDeletion(void *a1, const char *a2, ...)
{
  return _[a1 _predicateForOpportunisticHiddenPodcastDeletion];
}

id objc_msgSend__prepareToHandleNextBatchWithReadyBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareToHandleNextBatchWithReadyBlock:");
}

id objc_msgSend__presentErrorDialogWithTitle_message_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentErrorDialogWithTitle:message:handler:");
}

id objc_msgSend__prewarmSingletons(void *a1, const char *a2, ...)
{
  return _[a1 _prewarmSingletons];
}

id objc_msgSend__processCurrentTransaction(void *a1, const char *a2, ...)
{
  return _[a1 _processCurrentTransaction];
}

id objc_msgSend__processLatestPersistentHistoryTransactions(void *a1, const char *a2, ...)
{
  return _[a1 _processLatestPersistentHistoryTransactions];
}

id objc_msgSend__processOperationOutput_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processOperationOutput:forRequest:");
}

id objc_msgSend__processPendingTransactions(void *a1, const char *a2, ...)
{
  return _[a1 _processPendingTransactions];
}

id objc_msgSend__processResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processResults:");
}

id objc_msgSend__promptToClearUpNextIfNeededForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptToClearUpNextIfNeededForRequest:");
}

id objc_msgSend__propertiesToFetch(void *a1, const char *a2, ...)
{
  return _[a1 _propertiesToFetch];
}

id objc_msgSend__propertyDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _propertyDidChange];
}

id objc_msgSend__providerId(void *a1, const char *a2, ...)
{
  return _[a1 _providerId];
}

id objc_msgSend__queue_processNextPendingFeedIfPossible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_processNextPendingFeedIfPossible");
}

id objc_msgSend__radioButtonTintsTextColorOnSelection(void *a1, const char *a2, ...)
{
  return _[a1 _radioButtonTintsTextColorOnSelection];
}

id objc_msgSend__reCheck(void *a1, const char *a2, ...)
{
  return _[a1 _reCheck];
}

id objc_msgSend__recalculateEpisodeLevel_episodeLevelCalculator_ctx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recalculateEpisodeLevel:episodeLevelCalculator:ctx:");
}

id objc_msgSend__recordMetricsForItemDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _recordMetricsForItemDidChange];
}

id objc_msgSend__referenceBounds(void *a1, const char *a2, ...)
{
  return _[a1 _referenceBounds];
}

id objc_msgSend__refetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refetch:");
}

id objc_msgSend__registerPushNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerPushNotifications];
}

id objc_msgSend__reloadActionButtonContent(void *a1, const char *a2, ...)
{
  return _[a1 _reloadActionButtonContent];
}

id objc_msgSend__reloadArtwork(void *a1, const char *a2, ...)
{
  return _[a1 _reloadArtwork];
}

id objc_msgSend__removeDownloadAssetsForEpisodeUuids_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeDownloadAssetsForEpisodeUuids:reason:");
}

id objc_msgSend__removeDownloadAssetsForEpisodes_shouldKeep_forced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeDownloadAssetsForEpisodes:shouldKeep:forced:");
}

id objc_msgSend__removeImageStoreContent(void *a1, const char *a2, ...)
{
  return _[a1 _removeImageStoreContent];
}

id objc_msgSend__reportMetrics(void *a1, const char *a2, ...)
{
  return _[a1 _reportMetrics];
}

id objc_msgSend__reportRetentionPolicy(void *a1, const char *a2, ...)
{
  return _[a1 _reportRetentionPolicy];
}

id objc_msgSend__reportUpNextChangeType_forPlayerItem_withData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reportUpNextChangeType:forPlayerItem:withData:");
}

id objc_msgSend__reportUpNextChangeType_forPlayerItems_withData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reportUpNextChangeType:forPlayerItems:withData:");
}

id objc_msgSend__representationByMigratingLegacyKeysInRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_representationByMigratingLegacyKeysInRepresentation:");
}

id objc_msgSend__requestForTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestForTransaction:");
}

id objc_msgSend__resetState(void *a1, const char *a2, ...)
{
  return _[a1 _resetState];
}

id objc_msgSend__resolveError_transaction_resolution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveError:transaction:resolution:");
}

id objc_msgSend__responseForCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_responseForCode:");
}

id objc_msgSend__responseForMediaRemoteStatus_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_responseForMediaRemoteStatus:error:");
}

id objc_msgSend__restoreDefaultManifestIfNeededWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreDefaultManifestIfNeededWithCompletion:");
}

id objc_msgSend__restoreManifestIfNeededWithCompletion_useEmptyManifest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreManifestIfNeededWithCompletion:useEmptyManifest:");
}

id objc_msgSend__restoreUpNext(void *a1, const char *a2, ...)
{
  return _[a1 _restoreUpNext];
}

id objc_msgSend__rightNow(void *a1, const char *a2, ...)
{
  return _[a1 _rightNow];
}

id objc_msgSend__sanitisedTimeIntervalForObject_(void *a1, const char *a2, ...)
{
  return [a1 _sanitisedTimeIntervalForObject];
}

id objc_msgSend__saveActivityForRestoration(void *a1, const char *a2, ...)
{
  return _[a1 _saveActivityForRestoration];
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return [a1 _scaledValueForValue:];
}

id objc_msgSend__scheduleTransactionWithType_sinceDomainVersion_URL_keys_processor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleTransactionWithType:sinceDomainVersion:URL:keys:processor:");
}

id objc_msgSend__scrollEmphasizedCellToVisibleIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _scrollEmphasizedCellToVisibleIfNecessary];
}

id objc_msgSend__searchDictionaryFromArray_withKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchDictionaryFromArray:withKey:");
}

id objc_msgSend__selectItemWithUuid_(void *a1, const char *a2, ...)
{
  return [a1 _selectItemWithUuid:];
}

id objc_msgSend__sendDidEndEditingForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _sendDidEndEditingForIndexPath:];
}

id objc_msgSend__sendMediaRemoteCommand_toPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMediaRemoteCommand:toPlayer:");
}

id objc_msgSend__sendMediaRemoteCommand_toPlayer_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMediaRemoteCommand:toPlayer:options:");
}

id objc_msgSend__sendNotificationForNewlyEntitledEpisodesIfNeeded_latestEpisodeInPodcast_newlyEntitledEpisodeUUIDs_ctx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendNotificationForNewlyEntitledEpisodesIfNeeded:latestEpisodeInPodcast:newlyEntitledEpisodeUUIDs:ctx:");
}

id objc_msgSend__sendWillBeginEditingForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendWillBeginEditingForIndexPath:");
}

id objc_msgSend__separatorColor(void *a1, const char *a2, ...)
{
  return _[a1 _separatorColor];
}

id objc_msgSend__setAttributedMessage_(void *a1, const char *a2, ...)
{
  return [_a1 _setAttributedMessage];
}

id objc_msgSend__setAttributesOfLocalEpisode_feedEpisode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAttributesOfLocalEpisode:feedEpisode:");
}

id objc_msgSend__setContentScrollInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContentScrollInset:");
}

id objc_msgSend__setControllers_(void *a1, const char *a2, ...)
{
  return [a1 _setControllers:];
}

id objc_msgSend__setDocument_(void *a1, const char *a2, ...)
{
  return [a1 _setDocument:];
}

id objc_msgSend__setDonatedBySiri_(void *a1, const char *a2, ...)
{
  return [a1 _setDonatedBySiri:];
}

id objc_msgSend__setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setError:");
}

id objc_msgSend__setFrc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFrc:");
}

id objc_msgSend__setHeight_forRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHeight:forRowAtIndexPath:");
}

id objc_msgSend__setImageIgnoringSmallerSize_forKey_shareMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setImageIgnoringSmallerSize:forKey:shareMode:");
}

id objc_msgSend__setIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _setIndexPath:];
}

id objc_msgSend__setLastProcessedPersistentHistoryToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLastProcessedPersistentHistoryToken:");
}

id objc_msgSend__setLocalPlaybackQueue_(void *a1, const char *a2, ...)
{
  return [a1 _setLocalPlaybackQueue:];
}

id objc_msgSend__setManifest_playerController_queueType_startPlayback_forceLocal_reason_interactive_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setManifest:playerController:queueType:startPlayback:forceLocal:reason:interactive:completion:");
}

id objc_msgSend__setNeedsRetryFlagFromNotificationForStoreId_(void *a1, const char *a2, ...)
{
  return [_a1 _setNeedsRetryFlagFromNotificationForStoreId:];
}

id objc_msgSend__setNumberOfLinesForDescription_(void *a1, const char *a2, ...)
{
  return [a1 _setNumberOfLinesForDescription];
}

id objc_msgSend__setPlaybackQueue_(void *a1, const char *a2, ...)
{
  return [_a1 _setPlaybackQueue:];
}

id objc_msgSend__setPlaybackQueueForMyPodcastsWithOrder_playerController_startPlayback_forceLocal_reason_interactive_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPlaybackQueueForMyPodcastsWithOrder:playerController:startPlayback:forceLocal:reason:interactive:completion:");
}

id objc_msgSend__setPlaybackQueueFromStoreForPodcastAdamId_playerController_siriAssetInfo_savePlayHistory_playbackOrder_startPlayback_reason_interactive_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPlaybackQueueFromStoreForPodcastAdamId:playerController:siriAssetInfo:savePlayHistory:playbackOrder:startPlayback:reason:interactive:completion:");
}

id objc_msgSend__setPlaybackQueueWithIdentifier_startPlayback_assetInfo_requesterSharedUserId_sharedUserIdFromPlayableITunesAccount_playerID_mrCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPlaybackQueueWithIdentifier:startPlayback:assetInfo:requesterSharedUserId:sharedUserIdFromPlayableITunesAccount:playerID:mrCompletion:");
}

id objc_msgSend__setPodcastArtwork_(void *a1, const char *a2, ...)
{
  return [a1 _setPodcastArtwork:];
}

id objc_msgSend__setRowAlignmentsOptions_(void *a1, const char *a2, ...)
{
  return [a1 _setRowAlignmentsOptions:];
}

id objc_msgSend__setStreaming_(void *a1, const char *a2, ...)
{
  return [_a1 _setStreaming:];
}

id objc_msgSend__setSuggestedEpisodeUuidsImmediately_(void *a1, const char *a2, ...)
{
  return [a1 _setSuggestedEpisodeUuidsImmediately];
}

id objc_msgSend__setupLabel(void *a1, const char *a2, ...)
{
  return _[a1 _setupLabel];
}

id objc_msgSend__setupManifestDefaults(void *a1, const char *a2, ...)
{
  return _[a1 _setupManifestDefaults];
}

id objc_msgSend__setupMarketingPushHandlerWithBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupMarketingPushHandlerWithBag:");
}

id objc_msgSend__setupPlayer(void *a1, const char *a2, ...)
{
  return _[a1 _setupPlayer];
}

id objc_msgSend__setupUPP(void *a1, const char *a2, ...)
{
  return _[a1 _setupUPP];
}

id objc_msgSend__shiftIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _shiftIndexPath:];
}

id objc_msgSend__shortStringForEpisodes_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shortStringForEpisodes:defaultValue:");
}

id objc_msgSend__shouldDeferWork(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDeferWork];
}

id objc_msgSend__shouldDelayEmphasizeCellScrollToVisible(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDelayEmphasizeCellScrollToVisible];
}

id objc_msgSend__shouldDownloadPodcastWithIdentifierFromStore_(void *a1, const char *a2, ...)
{
  return [a1 _shouldDownloadPodcastWithIdentifierFromStore:];
}

id objc_msgSend__shouldOpenExternalItemForEpisode_(void *a1, const char *a2, ...)
{
  return [a1 _shouldOpenExternalItemForEpisode:];
}

id objc_msgSend__shouldSkipSettingPropertiesForWatchPPT(void *a1, const char *a2, ...)
{
  return _[a1 _shouldSkipSettingPropertiesForWatchPPT];
}

id objc_msgSend__shouldStop(void *a1, const char *a2, ...)
{
  return _[a1 _shouldStop];
}

id objc_msgSend__shouldUpdatePodcastsStatsForChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldUpdatePodcastsStatsForChange:");
}

id objc_msgSend__showAlertForInternetUnavailableReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAlertForInternetUnavailableReason:completion:");
}

id objc_msgSend__showDetailUsingURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDetailUsingURL:");
}

id objc_msgSend__showURL_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showURL:presentingViewController:");
}

id objc_msgSend__showsArtwork(void *a1, const char *a2, ...)
{
  return _[a1 _showsArtwork];
}

id objc_msgSend__signalKVSTransactionCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_signalKVSTransactionCompletion:");
}

id objc_msgSend__signalKVSTransactionCompletion_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_signalKVSTransactionCompletion:withError:");
}

id objc_msgSend__skipBackwardCommandEvent(void *a1, const char *a2, ...)
{
  return _[a1 _skipBackwardCommandEvent];
}

id objc_msgSend__skipForwardCommandEvent(void *a1, const char *a2, ...)
{
  return _[a1 _skipForwardCommandEvent];
}

id objc_msgSend__sortDescriptorsForLocalEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 _sortDescriptorsForLocalEpisodes];
}

id objc_msgSend__sortTypeForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortTypeForString:");
}

id objc_msgSend__sortUngroupedList_inPlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortUngroupedList:inPlaylist:");
}

id objc_msgSend__startDownloadForFeedUrl_cloudSyncFeedUrl_podcastStoreId_triggerBy_userInitiated_useBackgroundFetch_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startDownloadForFeedUrl:cloudSyncFeedUrl:podcastStoreId:triggerBy:userInitiated:useBackgroundFetch:source:");
}

id objc_msgSend__startProcessor_(void *a1, const char *a2, ...)
{
  return [a1 _startProcessor:];
}

id objc_msgSend__storeDownloadArtworkArrayForStoreItemDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeDownloadArtworkArrayForStoreItemDictionary:");
}

id objc_msgSend__storeDownloadOffersForStoreItemDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeDownloadOffersForStoreItemDictionary:");
}

id objc_msgSend__storeOfferDownloadDictionaryForStoreOfferItemDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeOfferDownloadDictionaryForStoreOfferItemDictionary:");
}

id objc_msgSend__storefrontIdentifierFromPreviewUrl_(void *a1, const char *a2, ...)
{
  return [a1 _storefrontIdentifierFromPreviewUrl:];
}

id objc_msgSend__stringForSortType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringForSortType:");
}

id objc_msgSend__subscribedPodcastsCount(void *a1, const char *a2, ...)
{
  return _[a1 _subscribedPodcastsCount];
}

id objc_msgSend__subtitleForPodcast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subtitleForPodcast:");
}

id objc_msgSend__subtitleForPodcastGroup_currentEpisode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subtitleForPodcastGroup:currentEpisode:");
}

id objc_msgSend__subtitleHTMLForDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subtitleHTMLForDataSource:");
}

id objc_msgSend__suggestedActionType(void *a1, const char *a2, ...)
{
  return _[a1 _suggestedActionType];
}

id objc_msgSend__synchronize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synchronize:");
}

id objc_msgSend__synchronousResetToInitialStateDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _synchronousResetToInitialStateDatabase];
}

id objc_msgSend__synchronousResetToInitialStateMetadata(void *a1, const char *a2, ...)
{
  return _[a1 _synchronousResetToInitialStateMetadata];
}

id objc_msgSend__synchronouslyRunKVSTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synchronouslyRunKVSTransaction:");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 _systemImageNamed:];
}

id objc_msgSend__systemMidGrayTintColor(void *a1, const char *a2, ...)
{
  return _[a1 _systemMidGrayTintColor];
}

id objc_msgSend__tableHeaderHeightDidChangeToHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tableHeaderHeightDidChangeToHeight:");
}

id objc_msgSend__tableView(void *a1, const char *a2, ...)
{
  return _[a1 _tableView];
}

id objc_msgSend__takeAssertionAndSchedule(void *a1, const char *a2, ...)
{
  return _[a1 _takeAssertionAndSchedule];
}

id objc_msgSend__timerFired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_timerFired:");
}

id objc_msgSend__timerIsStopped(void *a1, const char *a2, ...)
{
  return _[a1 _timerIsStopped];
}

id objc_msgSend__tintedImageForSize_withTint_effectsImage_maskImage_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tintedImageForSize:withTint:effectsImage:maskImage:style:");
}

id objc_msgSend__titleForPodcastGroup_currentEpisode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_titleForPodcastGroup:currentEpisode:");
}

id objc_msgSend__titleHTMLForDataSource_(void *a1, const char *a2, ...)
{
  return [a1 _titleHTMLForDataSource:];
}

id objc_msgSend__toolbarButton(void *a1, const char *a2, ...)
{
  return _[a1 _toolbarButton];
}

id objc_msgSend__transactionDidCancel_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transactionDidCancel:withError:");
}

id objc_msgSend__transactionDidFail_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transactionDidFail:withError:");
}

id objc_msgSend__uniqueIdentifierForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 _uniqueIdentifierForPodcast:];
}

id objc_msgSend__universalPlaybackQueueIdentifierForPodcastUuid_podcastFeedUrl_podcastStoreId_episodeUuid_episodeGuid_episodeStoreId_context_contextSortType_sampPlaybackOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:episodeUuid:episodeGuid:episodeStoreId:context:contextSortType:sampPlaybackOrder:");
}

id objc_msgSend__unmodifiedTitleForStoreItemDictionary_(void *a1, const char *a2, ...)
{
  return [a1 _unmodifiedTitleForStoreItemDictionary:];
}

id objc_msgSend__unregisterPushNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterPushNotifications];
}

id objc_msgSend__unsafeDeletePodcast_ctx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unsafeDeletePodcast:ctx:");
}

id objc_msgSend__unsafeFinalizeIngestion_episodeLevelCalculator_storeInfoUpdater_updateAverageCalculator_ctx_didUpdateAnyEpisodes_newlyEntitledEpisodeUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unsafeFinalizeIngestion:episodeLevelCalculator:storeInfoUpdater:updateAverageCalculator:ctx:didUpdateAnyEpisodes:newlyEntitledEpisodeUUIDs:");
}

id objc_msgSend__unsafeIngestEpisode_localEpisode_isNew_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unsafeIngestEpisode:localEpisode:isNew:");
}

id objc_msgSend__unsafe_updateAllPodcastsUserInitiated_forced_useBackgroundFetch_source_startedUpdatesCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unsafe_updateAllPodcastsUserInitiated:forced:useBackgroundFetch:source:startedUpdatesCallback:");
}

id objc_msgSend__upNextDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _upNextDidChange];
}

id objc_msgSend__updateActiveAccount(void *a1, const char *a2, ...)
{
  return _[a1 _updateActiveAccount];
}

id objc_msgSend__updateActivityItems_applicationActivities_(void *a1, const char *a2, ...)
{
  return [a1 _updateActivityItems:applicationActivities:];
}

id objc_msgSend__updateAirplaneMode(void *a1, const char *a2, ...)
{
  return _[a1 _updateAirplaneMode];
}

id objc_msgSend__updateAllMediaAPIPodcastsUserInitiated_source_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAllMediaAPIPodcastsUserInitiated:source:completion:");
}

id objc_msgSend__updateAllNonMediaAPIPodcastsUserInitiated_forced_source_started_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAllNonMediaAPIPodcastsUserInitiated:forced:source:started:");
}

id objc_msgSend__updateAutorefreshRateSettingAndRestartTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAutorefreshRateSettingAndRestartTimer:");
}

id objc_msgSend__updateButtonFontAndTextAlignment(void *a1, const char *a2, ...)
{
  return _[a1 _updateButtonFontAndTextAlignment];
}

id objc_msgSend__updateChannelRelationship_deassociate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateChannelRelationship:deassociate:");
}

id objc_msgSend__updateCurrentActivityForPlayState(void *a1, const char *a2, ...)
{
  return _[a1 _updateCurrentActivityForPlayState];
}

id objc_msgSend__updateCurrentTextColor(void *a1, const char *a2, ...)
{
  return _[a1 _updateCurrentTextColor];
}

id objc_msgSend__updateDerivedPropertiesForPodcastUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDerivedPropertiesForPodcastUUIDs:");
}

id objc_msgSend__updateEpisodeCountsForPodcastUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateEpisodeCountsForPodcastUuid:");
}

id objc_msgSend__updateFonts(void *a1, const char *a2, ...)
{
  return _[a1 _updateFonts];
}

id objc_msgSend__updateGlobalCellularWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 _updateGlobalCellularWithCompletion:];
}

id objc_msgSend__updateGlobalPolicyLimitIfMoreRestrictiveInDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateGlobalPolicyLimitIfMoreRestrictiveInDefaults:");
}

id objc_msgSend__updateIconsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateIconsIfNeeded];
}

id objc_msgSend__updateLoadStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLoadStatus:");
}

id objc_msgSend__updatePlaylistEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 _updatePlaylistEpisodes];
}

id objc_msgSend__updatePodcastArtworksIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updatePodcastArtworksIfNeeded];
}

id objc_msgSend__updatePodcastWithUUID_triggerBy_userInitiated_forced_forceBootstrap_source_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePodcastWithUUID:triggerBy:userInitiated:forced:forceBootstrap:source:completion:");
}

id objc_msgSend__updatePodcastWithUUID_triggerBy_userInitiated_forced_forceBootstrap_useBackgroundFetch_source_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePodcastWithUUID:triggerBy:userInitiated:forced:forceBootstrap:useBackgroundFetch:source:completion:");
}

id objc_msgSend__updatePodcastWithUUID_triggerBy_userInitiated_forced_forceBootstrap_useBackgroundFetch_source_tryRedirectURL_startedUpdateCallback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePodcastWithUUID:triggerBy:userInitiated:forced:forceBootstrap:useBackgroundFetch:source:tryRedirectURL:startedUpdateCallback:completion:");
}

id objc_msgSend__updatePodcastWithUUID_userInitiated_forced_useBackgroundFetch_source_startedUpdateCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePodcastWithUUID:userInitiated:forced:useBackgroundFetch:source:startedUpdateCallback:");
}

id objc_msgSend__updatePodcastWithUUID_userInitiated_forced_useBackgroundFetch_source_tryRedirectURL_startedUpdateCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePodcastWithUUID:userInitiated:forced:useBackgroundFetch:source:tryRedirectURL:startedUpdateCallback:");
}

id objc_msgSend__updatePodcastWithUUID_userInitiated_useBackgroundFetch_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePodcastWithUUID:userInitiated:useBackgroundFetch:source:");
}

id objc_msgSend__updatePodcastWithUUID_userInitiated_useBackgroundFetch_source_tryRedirectURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePodcastWithUUID:userInitiated:useBackgroundFetch:source:tryRedirectURL:");
}

id objc_msgSend__updatePodcastsWithUUIDs_userInitiated_forced_useBackgroundFetch_source_startedUpdatesCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePodcastsWithUUIDs:userInitiated:forced:useBackgroundFetch:source:startedUpdatesCallback:");
}

id objc_msgSend__updatePodcastsWithUUIDs_userInitiated_useBackgroundFetch_source_startedUpdatesCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePodcastsWithUUIDs:userInitiated:useBackgroundFetch:source:startedUpdatesCallback:");
}

id objc_msgSend__updateReachability(void *a1, const char *a2, ...)
{
  return _[a1 _updateReachability];
}

id objc_msgSend__updateSeparatorInsets(void *a1, const char *a2, ...)
{
  return _[a1 _updateSeparatorInsets];
}

id objc_msgSend__updateSettingsFromLoadedBagContext_(void *a1, const char *a2, ...)
{
  return [a1 _updateSettingsFromLoadedBagContext:];
}

id objc_msgSend__updateSideViewHiddenForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _updateSideViewHiddenForCurrentState];
}

id objc_msgSend__updateSideViewHiddenForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSideViewHiddenForState:");
}

id objc_msgSend__updateSortOrder(void *a1, const char *a2, ...)
{
  return _[a1 _updateSortOrder];
}

id objc_msgSend__updateSubtitleFont(void *a1, const char *a2, ...)
{
  return _[a1 _updateSubtitleFont];
}

id objc_msgSend__updateTableAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTableAnimated:");
}

id objc_msgSend__updateTextColorForCell_selected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTextColorForCell:selected:");
}

id objc_msgSend__updateTitleFont(void *a1, const char *a2, ...)
{
  return _[a1 _updateTitleFont];
}

id objc_msgSend__updateUI(void *a1, const char *a2, ...)
{
  return _[a1 _updateUI];
}

id objc_msgSend__updateUngroupedListSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateUngroupedListSetting:");
}

id objc_msgSend__updateUpNextDeleting_inContext_forced_podcastUuids_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateUpNextDeleting:inContext:forced:podcastUuids:");
}

id objc_msgSend__updateWithPodcast_(void *a1, const char *a2, ...)
{
  return [a1 _updateWithPodcast:];
}

id objc_msgSend__upgradeRepresentationFrom0To1_(void *a1, const char *a2, ...)
{
  return [a1 _upgradeRepresentationFrom0To1:];
}

id objc_msgSend__validateFairPlayEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 _validateFairPlayEpisodes];
}

id objc_msgSend__validateFairPlayEpisodesWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validateFairPlayEpisodesWithCompletionHandler:");
}

id objc_msgSend__validatePlaybackRequest_(void *a1, const char *a2, ...)
{
  return [a1 _validatePlaybackRequest:];
}

id objc_msgSend__verifyFairPlayMigrationWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 _verifyFairPlayMigrationWithCompletionHandler:];
}

id objc_msgSend__withLockSetAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_withLockSetAssertion:");
}

id objc_msgSend_abbreviatedFriendlyDisplayString(void *a1, const char *a2, ...)
{
  return _[a1 abbreviatedFriendlyDisplayString];
}

id objc_msgSend_abortUpdatesIfNetworkUnreachable_(void *a1, const char *a2, ...)
{
  return [a1 abortUpdatesIfNetworkUnreachable:];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_acceptedDSID(void *a1, const char *a2, ...)
{
  return _[a1 acceptedDSID];
}

id objc_msgSend_acceptedDSIDText(void *a1, const char *a2, ...)
{
  return _[a1 acceptedDSIDText];
}

id objc_msgSend_acceptedDSIDTextUserDefaultsKey(void *a1, const char *a2, ...)
{
  return _[a1 acceptedDSIDTextUserDefaultsKey];
}

id objc_msgSend_acceptedDSIDUserDefaultsKey(void *a1, const char *a2, ...)
{
  return _[a1 acceptedDSIDUserDefaultsKey];
}

id objc_msgSend_accessLog(void *a1, const char *a2, ...)
{
  return _[a1 accessLog];
}

id objc_msgSend_accessLogEvent(void *a1, const char *a2, ...)
{
  return _[a1 accessLogEvent];
}

id objc_msgSend_accessTransactionClampsWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 accessTransactionClampsWithBlock:];
}

id objc_msgSend_accountAgreedTermsVersion(void *a1, const char *a2, ...)
{
  return _[a1 accountAgreedTermsVersion];
}

id objc_msgSend_accountForRequesterUserId_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 accountForRequesterUserId:completionHandler:];
}

id objc_msgSend_accountFromQueueContainingDsid_error_(void *a1, const char *a2, ...)
{
  return [a1 accountFromQueueContainingDsid:error:];
}

id objc_msgSend_accountIdentifierForLastSync(void *a1, const char *a2, ...)
{
  return _[a1 accountIdentifierForLastSync];
}

id objc_msgSend_accountStore(void *a1, const char *a2, ...)
{
  return _[a1 accountStore];
}

id objc_msgSend_acknowledgePrivacy(void *a1, const char *a2, ...)
{
  return _[a1 acknowledgePrivacy];
}

id objc_msgSend_acknowledged(void *a1, const char *a2, ...)
{
  return _[a1 acknowledged];
}

id objc_msgSend_acknowledgementNeededForPrivacyIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 acknowledgementNeededForPrivacyIdentifier:];
}

id objc_msgSend_acquireWithInvalidationHandler_(void *a1, const char *a2, ...)
{
  return [a1 acquireWithInvalidationHandler:];
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _[a1 action];
}

id objc_msgSend_actionBlock(void *a1, const char *a2, ...)
{
  return _[a1 actionBlock];
}

id objc_msgSend_actionButton(void *a1, const char *a2, ...)
{
  return _[a1 actionButton];
}

id objc_msgSend_actionButtonFrameForViewWidth_titleOriginY_(void *a1, const char *a2, ...)
{
  return [a1 actionButtonFrameForViewWidth:titleOriginY:];
}

id objc_msgSend_actionButtons(void *a1, const char *a2, ...)
{
  return _[a1 actionButtons];
}

id objc_msgSend_actionButtonsContainer(void *a1, const char *a2, ...)
{
  return _[a1 actionButtonsContainer];
}

id objc_msgSend_actionController(void *a1, const char *a2, ...)
{
  return _[a1 actionController];
}

id objc_msgSend_actionHandler(void *a1, const char *a2, ...)
{
  return _[a1 actionHandler];
}

id objc_msgSend_actionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 actionIdentifier];
}

id objc_msgSend_actionObject(void *a1, const char *a2, ...)
{
  return _[a1 actionObject];
}

id objc_msgSend_actionType(void *a1, const char *a2, ...)
{
  return _[a1 actionType];
}

id objc_msgSend_actionWithIdentifier_title_options_icon_(void *a1, const char *a2, ...)
{
  return [a1 actionWithIdentifier:title:options:icon:];
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:image:identifier:handler:];
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:style:handler:];
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _[a1 actions];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activeAccount(void *a1, const char *a2, ...)
{
  return _[a1 activeAccount];
}

id objc_msgSend_activeDsid(void *a1, const char *a2, ...)
{
  return _[a1 activeDsid];
}

id objc_msgSend_activeStorefront(void *a1, const char *a2, ...)
{
  return _[a1 activeStorefront];
}

id objc_msgSend_activity(void *a1, const char *a2, ...)
{
  return _[a1 activity];
}

id objc_msgSend_activityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 activityIndicator];
}

id objc_msgSend_activitySpotlightIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activitySpotlightIdentifier];
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _[a1 activityType];
}

id objc_msgSend_actualRate(void *a1, const char *a2, ...)
{
  return _[a1 actualRate];
}

id objc_msgSend_adamID(void *a1, const char *a2, ...)
{
  return _[a1 adamID];
}

id objc_msgSend_adamIdNumberFromStoreId_(void *a1, const char *a2, ...)
{
  return [a1 adamIdNumberFromStoreId:];
}

id objc_msgSend_addAcknowledgementCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 addAcknowledgementCompletionBlock:];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return [a1 addAction:];
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttribute:value:range:];
}

id objc_msgSend_addAttributes_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttributes:range:];
}

id objc_msgSend_addCallback_(void *a1, const char *a2, ...)
{
  return [a1 addCallback:];
}

id objc_msgSend_addCapacityChangeObserverWithOptions_callback_(void *a1, const char *a2, ...)
{
  return [a1 addCapacityChangeObserverWithOptions:callback:];
}

id objc_msgSend_addChangeNotifier_(void *a1, const char *a2, ...)
{
  return [a1 addChangeNotifier:];
}

id objc_msgSend_addChild_(void *a1, const char *a2, ...)
{
  return [a1 addChild:];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addDeleteButtonInFooter(void *a1, const char *a2, ...)
{
  return _[a1 addDeleteButtonInFooter];
}

id objc_msgSend_addDeletedEpisodesObject_(void *a1, const char *a2, ...)
{
  return [a1 addDeletedEpisodesObject:];
}

id objc_msgSend_addEntityToCache_(void *a1, const char *a2, ...)
{
  return [a1 addEntityToCache:];
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addEntriesFromDictionary:];
}

id objc_msgSend_addEpisode_(void *a1, const char *a2, ...)
{
  return [a1 addEpisode:];
}

id objc_msgSend_addEpisodeAutoDownloads_completion_(void *a1, const char *a2, ...)
{
  return [a1 addEpisodeAutoDownloads:completion:];
}

id objc_msgSend_addEpisodeObserver_(void *a1, const char *a2, ...)
{
  return [a1 addEpisodeObserver:];
}

id objc_msgSend_addEpisodeObserverForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 addEpisodeObserverForPodcast:];
}

id objc_msgSend_addEpisodeUuidToUpNext_(void *a1, const char *a2, ...)
{
  return [a1 addEpisodeUuidToUpNext];
}

id objc_msgSend_addFilterPredicate_(void *a1, const char *a2, ...)
{
  return [a1 addFilterPredicate:];
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return [a1 addFinishBlock:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addImage_forKey_(void *a1, const char *a2, ...)
{
  return [a1 addImage:forKey:];
}

id objc_msgSend_addImage_forKey_persist_(void *a1, const char *a2, ...)
{
  return [a1 addImage:forKey:persist:];
}

id objc_msgSend_addMetricsController_(void *a1, const char *a2, ...)
{
  return [a1 addMetricsController:];
}

id objc_msgSend_addNotificationRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 addNotificationRequest:withCompletionHandler:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:];
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:forKeyPath:options:context:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 addObserverForName:object:queue:usingBlock:];
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return [a1 addOperation:];
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 addOperationWithBlock:];
}

id objc_msgSend_addPlayerItemToUpNext_(void *a1, const char *a2, ...)
{
  return [a1 addPlayerItemToUpNext:];
}

id objc_msgSend_addPlayerItemsToPlayNext_(void *a1, const char *a2, ...)
{
  return [a1 addPlayerItemsToPlayNext];
}

id objc_msgSend_addPlayerItemsToUpNext_(void *a1, const char *a2, ...)
{
  return [a1 addPlayerItemsToUpNext];
}

id objc_msgSend_addPodcast_(void *a1, const char *a2, ...)
{
  return [a1 addPodcast:];
}

id objc_msgSend_addPodcastInfoViewHeader(void *a1, const char *a2, ...)
{
  return _[a1 addPodcastInfoViewHeader];
}

id objc_msgSend_addPodcastWithTitle_uuid_(void *a1, const char *a2, ...)
{
  return [a1 addPodcastWithTitle:uuid:];
}

id objc_msgSend_addPodcastsViewController(void *a1, const char *a2, ...)
{
  return _[a1 addPodcastsViewController];
}

id objc_msgSend_addRadioSetting_(void *a1, const char *a2, ...)
{
  return [a1 addRadioSetting:];
}

id objc_msgSend_addResultsChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 addResultsChangedHandler:];
}

id objc_msgSend_addServiceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 addServiceIdentifier:];
}

id objc_msgSend_addSubscribeParams_forFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 addSubscribeParams:forFeedUrl:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addSubviews(void *a1, const char *a2, ...)
{
  return _[a1 addSubviews];
}

id objc_msgSend_addTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:];
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forControlEvents:];
}

id objc_msgSend_addTarget_action_usingExtendedStatus_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:usingExtendedStatus:];
}

id objc_msgSend_addTaskCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 addTaskCompletionBlock:];
}

id objc_msgSend_addTextFieldWithConfigurationHandler_(void *a1, const char *a2, ...)
{
  return [a1 addTextFieldWithConfigurationHandler:];
}

id objc_msgSend_addToUpNextAction(void *a1, const char *a2, ...)
{
  return _[a1 addToUpNextAction];
}

id objc_msgSend_addUserAgent_(void *a1, const char *a2, ...)
{
  return [a1 addUserAgent:];
}

id objc_msgSend_addVolumeDisplay_(void *a1, const char *a2, ...)
{
  return [a1 addVolumeDisplay];
}

id objc_msgSend_addedDate(void *a1, const char *a2, ...)
{
  return _[a1 addedDate];
}

id objc_msgSend_addedPlaylists(void *a1, const char *a2, ...)
{
  return _[a1 addedPlaylists];
}

id objc_msgSend_addedSubscriptions(void *a1, const char *a2, ...)
{
  return _[a1 addedSubscriptions];
}

id objc_msgSend_adjustBarHeightToSize(void *a1, const char *a2, ...)
{
  return _[a1 adjustBarHeightToSize];
}

id objc_msgSend_adjustContentOffsetForRefreshControlAsNeeded(void *a1, const char *a2, ...)
{
  return _[a1 adjustContentOffsetForRefreshControlAsNeeded];
}

id objc_msgSend_adjustVolumeValue_(void *a1, const char *a2, ...)
{
  return [a1 adjustVolumeValue:];
}

id objc_msgSend_adjustedContentInset(void *a1, const char *a2, ...)
{
  return _[a1 adjustedContentInset];
}

id objc_msgSend_aggregateOperation_attribute_predicate_managedObjectContext_(void *a1, const char *a2, ...)
{
  return [a1 aggregateOperation:attribute:predicate:managedObjectContext:];
}

id objc_msgSend_airplaneMode(void *a1, const char *a2, ...)
{
  return _[a1 airplaneMode];
}

id objc_msgSend_album(void *a1, const char *a2, ...)
{
  return _[a1 album];
}

id objc_msgSend_albumName(void *a1, const char *a2, ...)
{
  return _[a1 albumName];
}

id objc_msgSend_alertController(void *a1, const char *a2, ...)
{
  return _[a1 alertController];
}

id objc_msgSend_alertControllerStyleForInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 alertControllerStyleForInterfaceIdiom];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerWithTitle:message:preferredStyle:];
}

id objc_msgSend_alertTitleForUnavailableReason_podcastTitle_(void *a1, const char *a2, ...)
{
  return [a1 alertTitleForUnavailableReason:podcastTitle:];
}

id objc_msgSend_allActions(void *a1, const char *a2, ...)
{
  return _[a1 allActions];
}

id objc_msgSend_allEpisodesMigrationForVersion40to41In_(void *a1, const char *a2, ...)
{
  return [a1 allEpisodesMigrationForVersion40to41In:];
}

id objc_msgSend_allEpisodesMigrationForVersion43to44In_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allEpisodesMigrationForVersion43to44In:");
}

id objc_msgSend_allEpisodesMigrationForVersion45to46In_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allEpisodesMigrationForVersion45to46In:");
}

id objc_msgSend_allEpisodesMigrationForVersion46to47In_(void *a1, const char *a2, ...)
{
  return [a1 allEpisodesMigrationForVersion46to47In:];
}

id objc_msgSend_allEpisodesMigrationForVersion47to48In_(void *a1, const char *a2, ...)
{
  return [a1 allEpisodesMigrationForVersion47to48In:];
}

id objc_msgSend_allEpisodesMigrationForVersion51to52In_(void *a1, const char *a2, ...)
{
  return [a1 allEpisodesMigrationForVersion51to52In];
}

id objc_msgSend_allEpisodesMigrationForVersion53to54In_(void *a1, const char *a2, ...)
{
  return [a1 allEpisodesMigrationForVersion53to54In:];
}

id objc_msgSend_allEpisodesMigrationForVersion54to55In_(void *a1, const char *a2, ...)
{
  return [a1 allEpisodesMigrationForVersion54to55In:];
}

id objc_msgSend_allEpisodesMigrationForVersion59to60In_(void *a1, const char *a2, ...)
{
  return [a1 allEpisodesMigrationForVersion59to60In:];
}

id objc_msgSend_allEpisodesMigrationForVersion65to66In_(void *a1, const char *a2, ...)
{
  return [a1 allEpisodesMigrationForVersion65to66In:];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allPodcastsSelected(void *a1, const char *a2, ...)
{
  return _[a1 allPodcastsSelected];
}

id objc_msgSend_allPossibleEpisodeListSortOrderProperties(void *a1, const char *a2, ...)
{
  return _[a1 allPossibleEpisodeListSortOrderProperties];
}

id objc_msgSend_allPropertyChangeObserver(void *a1, const char *a2, ...)
{
  return _[a1 allPropertyChangeObserver];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return [a1 allocWithZone:];
}

id objc_msgSend_allowEpisodesRequestTo404AndDeleteEpisodesWithFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 allowEpisodesRequestTo404AndDeleteEpisodesWithFeedUrl:];
}

id objc_msgSend_allowReporting(void *a1, const char *a2, ...)
{
  return _[a1 allowReporting];
}

id objc_msgSend_allowsDurationUpdateFromSource_(void *a1, const char *a2, ...)
{
  return [a1 allowsDurationUpdateFromSource:];
}

id objc_msgSend_allowsMultipleSelection(void *a1, const char *a2, ...)
{
  return _[a1 allowsMultipleSelection];
}

id objc_msgSend_alreadyRegisteredWithActiveDsid(void *a1, const char *a2, ...)
{
  return _[a1 alreadyRegisteredWithActiveDsid];
}

id objc_msgSend_alreadySubscribedErrorCode(void *a1, const char *a2, ...)
{
  return _[a1 alreadySubscribedErrorCode];
}

id objc_msgSend_alternatePaidURL(void *a1, const char *a2, ...)
{
  return _[a1 alternatePaidURL];
}

id objc_msgSend_ams_DSID(void *a1, const char *a2, ...)
{
  return [a1 ams_DSID];
}

id objc_msgSend_ams_activeiTunesAccount(void *a1, const char *a2, ...)
{
  return [a1 ams_activeiTunesAccount];
}

id objc_msgSend_ams_dictionaryByAddingEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return [a1 ams_dictionaryByAddingEntriesFromDictionary:];
}

id objc_msgSend_ams_filterUsingTest_(void *a1, const char *a2, ...)
{
  return [a1 ams_filterUsingTest:];
}

id objc_msgSend_ams_fullName(void *a1, const char *a2, ...)
{
  return [a1 ams_fullName];
}

id objc_msgSend_ams_isManagedAppleID(void *a1, const char *a2, ...)
{
  return [a1 ams_isManagedAppleID];
}

id objc_msgSend_ams_sharedAccountStore(void *a1, const char *a2, ...)
{
  return [a1 ams_sharedAccountStore];
}

id objc_msgSend_ams_storefront(void *a1, const char *a2, ...)
{
  return [a1 ams_storefront];
}

id objc_msgSend_ams_underlyingError(void *a1, const char *a2, ...)
{
  return [a1 ams_underlyingError];
}

id objc_msgSend_analyticsChannel(void *a1, const char *a2, ...)
{
  return _[a1 analyticsChannel];
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return [a1 andPredicateWithSubpredicates:];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:completion:];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:animations:];
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:animations:completion:];
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:delay:options:animations:completion:];
}

id objc_msgSend_annotateItem_withManagedObject_(void *a1, const char *a2, ...)
{
  return [a1 annotateItem:withManagedObject:];
}

id objc_msgSend_annotateItem_withPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 annotateItem:withPlayerItem:];
}

id objc_msgSend_annotator(void *a1, const char *a2, ...)
{
  return _[a1 annotator];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appActivateObserver(void *a1, const char *a2, ...)
{
  return _[a1 appActivateObserver];
}

id objc_msgSend_appController(void *a1, const char *a2, ...)
{
  return _[a1 appController];
}

id objc_msgSend_appControllerWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 appControllerWithDelegate:];
}

id objc_msgSend_appDelegate(void *a1, const char *a2, ...)
{
  return _[a1 appDelegate];
}

id objc_msgSend_appDelegateClass(void *a1, const char *a2, ...)
{
  return _[a1 appDelegateClass];
}

id objc_msgSend_appTintColor(void *a1, const char *a2, ...)
{
  return _[a1 appTintColor];
}

id objc_msgSend_appearanceSelectedPath(void *a1, const char *a2, ...)
{
  return _[a1 appearanceSelectedPath];
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 appendAttributedString:];
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 appendBytes:length:];
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return [a1 appendFormat:];
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return [a1 appendString:];
}

id objc_msgSend_application(void *a1, const char *a2, ...)
{
  return _[a1 application];
}

id objc_msgSend_application_continueUserActivity_restorationHandler_(void *a1, const char *a2, ...)
{
  return [a1 application:continueUserActivity:restorationHandler:];
}

id objc_msgSend_application_didFinishLaunchingWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 application:didFinishLaunchingWithOptions:];
}

id objc_msgSend_application_handleStateRestorationWith_(void *a1, const char *a2, ...)
{
  return [a1 application:handleStateRestorationWith:];
}

id objc_msgSend_application_openStateRestorationActivity_(void *a1, const char *a2, ...)
{
  return [a1 application:openStateRestorationActivity:];
}

id objc_msgSend_application_openURL_options_(void *a1, const char *a2, ...)
{
  return [a1 application:openURL:options:];
}

id objc_msgSend_application_runTest_options_(void *a1, const char *a2, ...)
{
  return [a1 application:runTest:options:];
}

id objc_msgSend_application_willFinishLaunchingWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 application:willFinishLaunchingWithOptions:];
}

id objc_msgSend_applicationActivities(void *a1, const char *a2, ...)
{
  return _[a1 applicationActivities];
}

id objc_msgSend_applicationDidBecomeActive_(void *a1, const char *a2, ...)
{
  return [a1 applicationDidBecomeActive:];
}

id objc_msgSend_applicationDidEnterBackground(void *a1, const char *a2, ...)
{
  return _[a1 applicationDidEnterBackground];
}

id objc_msgSend_applicationDidEnterBackground_(void *a1, const char *a2, ...)
{
  return [a1 applicationDidEnterBackground:];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applicationWillEnterForeground(void *a1, const char *a2, ...)
{
  return _[a1 applicationWillEnterForeground];
}

id objc_msgSend_applicationWillTerminate_(void *a1, const char *a2, ...)
{
  return [a1 applicationWillTerminate:];
}

id objc_msgSend_appliedInsets(void *a1, const char *a2, ...)
{
  return _[a1 appliedInsets];
}

id objc_msgSend_appliedYOffset(void *a1, const char *a2, ...)
{
  return _[a1 appliedYOffset];
}

id objc_msgSend_applyCachedImageForPodcast_withSize_(void *a1, const char *a2, ...)
{
  return [a1 applyCachedImageForPodcast:withSize:];
}

id objc_msgSend_applyShowTypeSetting_(void *a1, const char *a2, ...)
{
  return [a1 applyShowTypeSetting:];
}

id objc_msgSend_applyThemeToImageViewWithKey_(void *a1, const char *a2, ...)
{
  return [a1 applyThemeToImageViewWithKey:];
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return [a1 archivedDataWithRootObject:requiringSecureCoding:error:];
}

id objc_msgSend_areAnimationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 areAnimationsEnabled];
}

id objc_msgSend_areChaptersLoaded(void *a1, const char *a2, ...)
{
  return _[a1 areChaptersLoaded];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObject:];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObjectsFromArray:];
}

id objc_msgSend_arrayValue(void *a1, const char *a2, ...)
{
  return _[a1 arrayValue];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithArray:];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObject:];
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_artist(void *a1, const char *a2, ...)
{
  return _[a1 artist];
}

id objc_msgSend_artwork(void *a1, const char *a2, ...)
{
  return _[a1 artwork];
}

id objc_msgSend_artworkBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 artworkBackgroundColor];
}

id objc_msgSend_artworkBorderColor(void *a1, const char *a2, ...)
{
  return _[a1 artworkBorderColor];
}

id objc_msgSend_artworkCatalog(void *a1, const char *a2, ...)
{
  return _[a1 artworkCatalog];
}

id objc_msgSend_artworkDictionary_closestToSize_(void *a1, const char *a2, ...)
{
  return [a1 artworkDictionary:closestToSize:];
}

id objc_msgSend_artworkForMTPodcast_withSize_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkForMTPodcast:withSize:completionHandler:");
}

id objc_msgSend_artworkForShow_size_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 artworkForShow:size:completionHandler:];
}

id objc_msgSend_artworkForStationUUID_podcastsUUIDs_size_(void *a1, const char *a2, ...)
{
  return [a1 artworkForStationUUID:podcastsUUIDs:size:];
}

id objc_msgSend_artworkForURL_withSize_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkForURL:withSize:completionHandler:");
}

id objc_msgSend_artworkFrameForContentViewSize_(void *a1, const char *a2, ...)
{
  return [a1 artworkFrameForContentViewSize:];
}

id objc_msgSend_artworkFrameForStyle_forViewWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkFrameForStyle:forViewWidth:");
}

id objc_msgSend_artworkHeight(void *a1, const char *a2, ...)
{
  return _[a1 artworkHeight];
}

id objc_msgSend_artworkHeightForStyle_sizeType_(void *a1, const char *a2, ...)
{
  return [a1 artworkHeightForStyle:sizeType:];
}

id objc_msgSend_artworkIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 artworkIdentifier];
}

id objc_msgSend_artworkKey(void *a1, const char *a2, ...)
{
  return _[a1 artworkKey];
}

id objc_msgSend_artworkPathForShow_size_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 artworkPathForShow:size:completionHandler:];
}

id objc_msgSend_artworkPathForShow_size_source_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 artworkPathForShow:size:source:completionHandler:];
}

id objc_msgSend_artworkPrimaryColor(void *a1, const char *a2, ...)
{
  return _[a1 artworkPrimaryColor];
}

id objc_msgSend_artworkProvider(void *a1, const char *a2, ...)
{
  return _[a1 artworkProvider];
}

id objc_msgSend_artworkRequests(void *a1, const char *a2, ...)
{
  return _[a1 artworkRequests];
}

id objc_msgSend_artworkSizeForStyle_(void *a1, const char *a2, ...)
{
  return [a1 artworkSizeForStyle:];
}

id objc_msgSend_artworkSizeForViewWidth_(void *a1, const char *a2, ...)
{
  return [a1 artworkSizeForViewWidth:];
}

id objc_msgSend_artworkTemplateURL(void *a1, const char *a2, ...)
{
  return _[a1 artworkTemplateURL];
}

id objc_msgSend_artworkTextPrimaryColor(void *a1, const char *a2, ...)
{
  return _[a1 artworkTextPrimaryColor];
}

id objc_msgSend_artworkTextQuaternaryColor(void *a1, const char *a2, ...)
{
  return _[a1 artworkTextQuaternaryColor];
}

id objc_msgSend_artworkTextSecondaryColor(void *a1, const char *a2, ...)
{
  return _[a1 artworkTextSecondaryColor];
}

id objc_msgSend_artworkTextTertiaryColor(void *a1, const char *a2, ...)
{
  return _[a1 artworkTextTertiaryColor];
}

id objc_msgSend_artworkTokenId(void *a1, const char *a2, ...)
{
  return _[a1 artworkTokenId];
}

id objc_msgSend_artworkUrl(void *a1, const char *a2, ...)
{
  return _[a1 artworkUrl];
}

id objc_msgSend_artworkView(void *a1, const char *a2, ...)
{
  return _[a1 artworkView];
}

id objc_msgSend_artworkWidth(void *a1, const char *a2, ...)
{
  return _[a1 artworkWidth];
}

id objc_msgSend_artworkWithSize_(void *a1, const char *a2, ...)
{
  return [a1 artworkWithSize:];
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _[a1 ascender];
}

id objc_msgSend_assertionName(void *a1, const char *a2, ...)
{
  return _[a1 assertionName];
}

id objc_msgSend_assertionTimeout(void *a1, const char *a2, ...)
{
  return _[a1 assertionTimeout];
}

id objc_msgSend_assertionTimeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 assertionTimeoutTimer];
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return _[a1 asset];
}

id objc_msgSend_assetCache(void *a1, const char *a2, ...)
{
  return _[a1 assetCache];
}

id objc_msgSend_assetForLocalFile_(void *a1, const char *a2, ...)
{
  return [a1 assetForLocalFile:];
}

id objc_msgSend_assetForRemoteFile_(void *a1, const char *a2, ...)
{
  return [a1 assetForRemoteFile];
}

id objc_msgSend_assetTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 assetTimeRange];
}

id objc_msgSend_assetURL(void *a1, const char *a2, ...)
{
  return _[a1 assetURL];
}

id objc_msgSend_assetUrl(void *a1, const char *a2, ...)
{
  return _[a1 assetUrl];
}

id objc_msgSend_asyncImageForKey_size_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 asyncImageForKey:size:completionHandler:];
}

id objc_msgSend_asyncImageURLForKey_squareDimension_cacheKeyModifier_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 asyncImageURLForKey:squareDimension:cacheKeyModifier:completionHandler:];
}

id objc_msgSend_asyncValueOnQueue_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 asyncValueOnQueue:withCompletion:];
}

id objc_msgSend_asyncValuePromiseOnQueue_(void *a1, const char *a2, ...)
{
  return [a1 asyncValuePromiseOnQueue:];
}

id objc_msgSend_attachmentWithIdentifier_URL_options_error_(void *a1, const char *a2, ...)
{
  return [a1 attachmentWithIdentifier:URL:options:error:];
}

id objc_msgSend_attachments(void *a1, const char *a2, ...)
{
  return _[a1 attachments];
}

id objc_msgSend_attemptToRecoverFromKeyError_(void *a1, const char *a2, ...)
{
  return [a1 attemptToRecoverFromKeyError:];
}

id objc_msgSend_attributeSet(void *a1, const char *a2, ...)
{
  return _[a1 attributeSet];
}

id objc_msgSend_attributeWithDomain_name_(void *a1, const char *a2, ...)
{
  return [a1 attributeWithDomain:name:];
}

id objc_msgSend_attributedMessageForAlertController(void *a1, const char *a2, ...)
{
  return _[a1 attributedMessageForAlertController];
}

id objc_msgSend_attributedStringWithAttachment_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringWithAttachment:];
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _[a1 attributedText];
}

id objc_msgSend_attributedTitleForRefreshControl(void *a1, const char *a2, ...)
{
  return _[a1 attributedTitleForRefreshControl];
}

id objc_msgSend_attributesOfFileSystemForPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfFileSystemForPath:error:");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return [a1 attributesOfItemAtPath:error:];
}

id objc_msgSend_authenticationController(void *a1, const char *a2, ...)
{
  return _[a1 authenticationController];
}

id objc_msgSend_authenticationError(void *a1, const char *a2, ...)
{
  return _[a1 authenticationError];
}

id objc_msgSend_authenticationErrorsForTransaction_(void *a1, const char *a2, ...)
{
  return [a1 authenticationErrorsForTransaction:];
}

id objc_msgSend_authenticationNeededTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 authenticationNeededTimestamp];
}

id objc_msgSend_author(void *a1, const char *a2, ...)
{
  return _[a1 author];
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _[a1 authorizationStatus];
}

id objc_msgSend_autoDownload(void *a1, const char *a2, ...)
{
  return _[a1 autoDownload];
}

id objc_msgSend_autoDownloadEnabled(void *a1, const char *a2, ...)
{
  return _[a1 autoDownloadEnabled];
}

id objc_msgSend_autoDownloadFooterTextWithGlobalLimit(void *a1, const char *a2, ...)
{
  return _[a1 autoDownloadFooterTextWithGlobalLimit];
}

id objc_msgSend_autoDownloadType(void *a1, const char *a2, ...)
{
  return _[a1 autoDownloadType];
}

id objc_msgSend_autoDownloadsSettingsGroup(void *a1, const char *a2, ...)
{
  return _[a1 autoDownloadsSettingsGroup];
}

id objc_msgSend_autoSimulateNotificationOnAppActivate(void *a1, const char *a2, ...)
{
  return _[a1 autoSimulateNotificationOnAppActivate];
}

id objc_msgSend_autodownloadEpisodesChanged_(void *a1, const char *a2, ...)
{
  return [a1 autodownloadEpisodesChanged:];
}

id objc_msgSend_automaticSynchronizeOptions(void *a1, const char *a2, ...)
{
  return _[a1 automaticSynchronizeOptions];
}

id objc_msgSend_automaticallySuggestsEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 automaticallySuggestsEpisodes];
}

id objc_msgSend_autorefreshRate(void *a1, const char *a2, ...)
{
  return _[a1 autorefreshRate];
}

id objc_msgSend_availableActions(void *a1, const char *a2, ...)
{
  return _[a1 availableActions];
}

id objc_msgSend_backCatalog(void *a1, const char *a2, ...)
{
  return _[a1 backCatalog];
}

id objc_msgSend_backCatalogIconForTheme_(void *a1, const char *a2, ...)
{
  return [a1 backCatalogIconForTheme:];
}

id objc_msgSend_backCatalogPartiallyPlayedIconForTheme_(void *a1, const char *a2, ...)
{
  return [a1 backCatalogPartiallyPlayedIconForTheme:];
}

id objc_msgSend_backOffForTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 backOffForTimeInterval:];
}

id objc_msgSend_backOffUntil(void *a1, const char *a2, ...)
{
  return _[a1 backOffUntil];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColor];
}

id objc_msgSend_backgroundColorForTheme_(void *a1, const char *a2, ...)
{
  return [a1 backgroundColorForTheme:];
}

id objc_msgSend_backgroundFetch(void *a1, const char *a2, ...)
{
  return _[a1 backgroundFetch];
}

id objc_msgSend_backgroundTask(void *a1, const char *a2, ...)
{
  return _[a1 backgroundTask];
}

id objc_msgSend_backgroundTaskAssertion(void *a1, const char *a2, ...)
{
  return _[a1 backgroundTaskAssertion];
}

id objc_msgSend_backgroundTaskId(void *a1, const char *a2, ...)
{
  return _[a1 backgroundTaskId];
}

id objc_msgSend_backgroundTaskIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 backgroundTaskIdentifier];
}

id objc_msgSend_backgroundTaskScheduler(void *a1, const char *a2, ...)
{
  return _[a1 backgroundTaskScheduler];
}

id objc_msgSend_backgroundView(void *a1, const char *a2, ...)
{
  return _[a1 backgroundView];
}

id objc_msgSend_badgeLabel(void *a1, const char *a2, ...)
{
  return _[a1 badgeLabel];
}

id objc_msgSend_bag(void *a1, const char *a2, ...)
{
  return _[a1 bag];
}

id objc_msgSend_bagLookupEndTime(void *a1, const char *a2, ...)
{
  return _[a1 bagLookupEndTime];
}

id objc_msgSend_bagLookupStartTime(void *a1, const char *a2, ...)
{
  return _[a1 bagLookupStartTime];
}

id objc_msgSend_bagLookupTask(void *a1, const char *a2, ...)
{
  return _[a1 bagLookupTask];
}

id objc_msgSend_barsTintColorForTheme_(void *a1, const char *a2, ...)
{
  return [a1 barsTintColorForTheme:];
}

id objc_msgSend_barsView(void *a1, const char *a2, ...)
{
  return _[a1 barsView];
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 base64EncodedStringWithOptions:];
}

id objc_msgSend_baseDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseDictionary];
}

id objc_msgSend_baseURLForGETAll(void *a1, const char *a2, ...)
{
  return _[a1 baseURLForGETAll];
}

id objc_msgSend_baseURLForPUTAll(void *a1, const char *a2, ...)
{
  return _[a1 baseURLForPUTAll];
}

id objc_msgSend_batchFeedFetchIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 batchFeedFetchIsEnabled];
}

id objc_msgSend_batchUpdateRequestWithEntityName_(void *a1, const char *a2, ...)
{
  return [a1 batchUpdateRequestWithEntityName:];
}

id objc_msgSend_becomeActiveMediaPlayer(void *a1, const char *a2, ...)
{
  return _[a1 becomeActiveMediaPlayer];
}

id objc_msgSend_becomeCurrent(void *a1, const char *a2, ...)
{
  return _[a1 becomeCurrent];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _[a1 begin];
}

id objc_msgSend_beginAutomaticResponseLoading(void *a1, const char *a2, ...)
{
  return _[a1 beginAutomaticResponseLoading];
}

id objc_msgSend_beginBackgroundTaskWithExpirationHandler_(void *a1, const char *a2, ...)
{
  return [a1 beginBackgroundTaskWithExpirationHandler:];
}

id objc_msgSend_beginBackgroundTaskWithName_expirationHandler_(void *a1, const char *a2, ...)
{
  return [a1 beginBackgroundTaskWithName:expirationHandler:];
}

id objc_msgSend_beginEnforcementWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 beginEnforcementWithCompletionHandler:];
}

id objc_msgSend_beginGeneratingLibraryChangeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 beginGeneratingLibraryChangeNotifications];
}

id objc_msgSend_beginGeneratingLibraryChangeNotifications_(void *a1, const char *a2, ...)
{
  return [a1 beginGeneratingLibraryChangeNotifications:];
}

id objc_msgSend_beginIgnoringInteractionEvents(void *a1, const char *a2, ...)
{
  return _[a1 beginIgnoringInteractionEvents];
}

id objc_msgSend_beginLoadingArtwork(void *a1, const char *a2, ...)
{
  return _[a1 beginLoadingArtwork];
}

id objc_msgSend_beginObserving(void *a1, const char *a2, ...)
{
  return _[a1 beginObserving];
}

id objc_msgSend_beginObservingTranscriptIdentifierChangesForCurrentItem_(void *a1, const char *a2, ...)
{
  return [a1 beginObservingTranscriptIdentifierChangesForCurrentItem:];
}

id objc_msgSend_beginRefreshing(void *a1, const char *a2, ...)
{
  return _[a1 beginRefreshing];
}

id objc_msgSend_beginTaskOperation(void *a1, const char *a2, ...)
{
  return _[a1 beginTaskOperation];
}

id objc_msgSend_beginTransactionWithItemsToSyncEnumerationBlock_(void *a1, const char *a2, ...)
{
  return [a1 beginTransactionWithItemsToSyncEnumerationBlock:];
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdates];
}

id objc_msgSend_bestAvailableStoreCleanURL(void *a1, const char *a2, ...)
{
  return _[a1 bestAvailableStoreCleanURL];
}

id objc_msgSend_bestDescription(void *a1, const char *a2, ...)
{
  return _[a1 bestDescription];
}

id objc_msgSend_bestFeedURLExcludingRedirectURL_(void *a1, const char *a2, ...)
{
  return [a1 bestFeedURLExcludingRedirectURL:];
}

id objc_msgSend_bestIndexPathForObject_atIndex_fromMap_(void *a1, const char *a2, ...)
{
  return [a1 bestIndexPathForObject:atIndex:fromMap:];
}

id objc_msgSend_bestIndexPathForObject_atIndex_fromMap_autoremove_(void *a1, const char *a2, ...)
{
  return [a1 bestIndexPathForObject:atIndex:fromMap:autoremove:];
}

id objc_msgSend_bestSummary(void *a1, const char *a2, ...)
{
  return _[a1 bestSummary];
}

id objc_msgSend_bestTitle(void *a1, const char *a2, ...)
{
  return _[a1 bestTitle];
}

id objc_msgSend_bestUrl(void *a1, const char *a2, ...)
{
  return _[a1 bestUrl];
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithRect:];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_block(void *a1, const char *a2, ...)
{
  return _[a1 block];
}

id objc_msgSend_bodyForShareEmailFromDataSource_(void *a1, const char *a2, ...)
{
  return [a1 bodyForShareEmailFromDataSource:];
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 boldSystemFontOfSize:];
}

id objc_msgSend_bookmarkKeyForSyncType_(void *a1, const char *a2, ...)
{
  return [a1 bookmarkKeyForSyncType:];
}

id objc_msgSend_bookmarkTime(void *a1, const char *a2, ...)
{
  return _[a1 bookmarkTime];
}

id objc_msgSend_bookmarkTimeMillis(void *a1, const char *a2, ...)
{
  return _[a1 bookmarkTimeMillis];
}

id objc_msgSend_bookmarksKeyForSyncType_(void *a1, const char *a2, ...)
{
  return [a1 bookmarksKeyForSyncType:];
}

id objc_msgSend_bookmarksLastSyncKeyForSyncType_(void *a1, const char *a2, ...)
{
  return [a1 bookmarksLastSyncKeyForSyncType:];
}

id objc_msgSend_bookmarksSyncVersionForSyncType_(void *a1, const char *a2, ...)
{
  return [a1 bookmarksSyncVersionForSyncType:];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return [a1 BOOLForKey:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return [a1 boundingRectWithSize:options:attributes:context:];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_box_(void *a1, const char *a2, ...)
{
  return [a1 box:];
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return [a1 bringSubviewToFront:];
}

id objc_msgSend_bumpBookmarksSyncVersionToVersion_(void *a1, const char *a2, ...)
{
  return [a1 bumpBookmarksSyncVersionToVersion:];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_button(void *a1, const char *a2, ...)
{
  return _[a1 button];
}

id objc_msgSend_buttonCallback(void *a1, const char *a2, ...)
{
  return _[a1 buttonCallback];
}

id objc_msgSend_buttonFont(void *a1, const char *a2, ...)
{
  return _[a1 buttonFont];
}

id objc_msgSend_buttonLabel(void *a1, const char *a2, ...)
{
  return _[a1 buttonLabel];
}

id objc_msgSend_buttonSettingWithTitle_detailText_identifier_changeHandler_(void *a1, const char *a2, ...)
{
  return [a1 buttonSettingWithTitle:detailText:identifier:changeHandler:];
}

id objc_msgSend_buttonSize(void *a1, const char *a2, ...)
{
  return _[a1 buttonSize];
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return [a1 buttonWithType:];
}

id objc_msgSend_buttonsFrameForActionButtonFrame_downloadButtonFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonsFrameForActionButtonFrame:downloadButtonFrame:");
}

id objc_msgSend_byteSize(void *a1, const char *a2, ...)
{
  return _[a1 byteSize];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cacheArtwork_withDimension_forShow_fromSource_(void *a1, const char *a2, ...)
{
  return [a1 cacheArtwork:withDimension:forShow:fromSource:];
}

id objc_msgSend_cachedArtworkForMTPodcast_withSize_(void *a1, const char *a2, ...)
{
  return [a1 cachedArtworkForMTPodcast:withSize:];
}

id objc_msgSend_cachedAssetURL(void *a1, const char *a2, ...)
{
  return _[a1 cachedAssetURL];
}

id objc_msgSend_cachesDirectory(void *a1, const char *a2, ...)
{
  return _[a1 cachesDirectory];
}

id objc_msgSend_calculateCellWidth_(void *a1, const char *a2, ...)
{
  return [a1 calculateCellWidth:];
}

id objc_msgSend_calculateNewEpisodeCountIn_serialShowsUseExperimentalRules_(void *a1, const char *a2, ...)
{
  return [a1 calculateNewEpisodeCountIn:serialShowsUseExperimentalRules:];
}

id objc_msgSend_callbacks(void *a1, const char *a2, ...)
{
  return _[a1 callbacks];
}

id objc_msgSend_canBecomeFocused(void *a1, const char *a2, ...)
{
  return _[a1 canBecomeFocused];
}

id objc_msgSend_canContinueIntentWithUserActivityType_(void *a1, const char *a2, ...)
{
  return [a1 canContinueIntentWithUserActivityType:];
}

id objc_msgSend_canDeletePlaylistUUIDBlock(void *a1, const char *a2, ...)
{
  return _[a1 canDeletePlaylistUUIDBlock];
}

id objc_msgSend_canFocusRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 canFocusRowAtIndexPath:];
}

id objc_msgSend_canOpenURL_(void *a1, const char *a2, ...)
{
  return [a1 canOpenURL:];
}

id objc_msgSend_canPromptForNotificationPermissionsWithPreWarmSheet(void *a1, const char *a2, ...)
{
  return _[a1 canPromptForNotificationPermissionsWithPreWarmSheet];
}

id objc_msgSend_canRequestStoreSignIn(void *a1, const char *a2, ...)
{
  return _[a1 canRequestStoreSignIn];
}

id objc_msgSend_canScheduleSyncRequest(void *a1, const char *a2, ...)
{
  return _[a1 canScheduleSyncRequest];
}

id objc_msgSend_canScheduleTransaction_error_(void *a1, const char *a2, ...)
{
  return [a1 canScheduleTransaction:error:];
}

id objc_msgSend_canSendNotification(void *a1, const char *a2, ...)
{
  return _[a1 canSendNotification];
}

id objc_msgSend_canShareFromTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 canShareFromTimestamp];
}

id objc_msgSend_canShowWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 canShowWithPresentingViewController:];
}

id objc_msgSend_canSyncInterests(void *a1, const char *a2, ...)
{
  return _[a1 canSyncInterests];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAllButton(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllButton];
}

id objc_msgSend_cancelAllDownloadsUserInitiated_(void *a1, const char *a2, ...)
{
  return [a1 cancelAllDownloadsUserInitiated:];
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllOperations];
}

id objc_msgSend_cancelAllRequests(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllRequests];
}

id objc_msgSend_cancelAllTaskRequests(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllTaskRequests];
}

id objc_msgSend_cancelAllTransactions(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllTransactions];
}

id objc_msgSend_cancelAllTransactionsCancelCode_(void *a1, const char *a2, ...)
{
  return [a1 cancelAllTransactionsCancelCode:];
}

id objc_msgSend_cancelDownloadForEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 cancelDownloadForEpisodeUuid:];
}

id objc_msgSend_cancelDownloadsForEpisodeUuid_userInitiated_(void *a1, const char *a2, ...)
{
  return [a1 cancelDownloadsForEpisodeUuid:userInitiated:];
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return [a1 cancelPreviousPerformRequestsWithTarget:selector:object:];
}

id objc_msgSend_cancelTaskRequestWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 cancelTaskRequestWithIdentifier:];
}

id objc_msgSend_cancelType(void *a1, const char *a2, ...)
{
  return _[a1 cancelType];
}

id objc_msgSend_cancelUniversalPlaybackPositionTransaction_(void *a1, const char *a2, ...)
{
  return [a1 cancelUniversalPlaybackPositionTransaction];
}

id objc_msgSend_cancelWithError_(void *a1, const char *a2, ...)
{
  return [a1 cancelWithError:];
}

id objc_msgSend_canceled(void *a1, const char *a2, ...)
{
  return _[a1 canceled];
}

id objc_msgSend_capHeight(void *a1, const char *a2, ...)
{
  return _[a1 capHeight];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return [a1 caseInsensitiveCompare:];
}

id objc_msgSend_categories(void *a1, const char *a2, ...)
{
  return _[a1 categories];
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return _[a1 category];
}

id objc_msgSend_categoryWithIdentifier_actions_intentIdentifiers_hiddenPreviewsBodyPlaceholder_categorySummaryFormat_options_(void *a1, const char *a2, ...)
{
  return [a1 categoryWithIdentifier:actions:intentIdentifiers:hiddenPreviewsBodyPlaceholder:categorySummaryFormat:options:];
}

id objc_msgSend_cell_moreButtonTapped_(void *a1, const char *a2, ...)
{
  return [a1 cell:moreButtonTapped:];
}

id objc_msgSend_cellClassForSettingType_inGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 cellClassForSettingType:inGroupWithIdentifier:];
}

id objc_msgSend_cellDidChangeSize_(void *a1, const char *a2, ...)
{
  return [a1 cellDidChangeSize:];
}

id objc_msgSend_cellDidPressDelete_(void *a1, const char *a2, ...)
{
  return [a1 cellDidPressDelete:];
}

id objc_msgSend_cellDidPressMore_(void *a1, const char *a2, ...)
{
  return [a1 cellDidPressMore:];
}

id objc_msgSend_cellDidPressToggleDownload_(void *a1, const char *a2, ...)
{
  return [a1 cellDidPressToggleDownload:];
}

id objc_msgSend_cellEmpahsisBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 cellEmpahsisBackgroundColor];
}

id objc_msgSend_cellEmpahsisSwitchBorderColor(void *a1, const char *a2, ...)
{
  return _[a1 cellEmpahsisSwitchBorderColor];
}

id objc_msgSend_cellEmpahsisTextColor(void *a1, const char *a2, ...)
{
  return _[a1 cellEmpahsisTextColor];
}

id objc_msgSend_cellEmphasis(void *a1, const char *a2, ...)
{
  return _[a1 cellEmphasis];
}

id objc_msgSend_cellForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 cellForItemAtIndexPath:];
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 cellForRowAtIndexPath:];
}

id objc_msgSend_cellIdentifierForSettingType_(void *a1, const char *a2, ...)
{
  return [a1 cellIdentifierForSettingType:];
}

id objc_msgSend_cellSecondaryTextColor(void *a1, const char *a2, ...)
{
  return _[a1 cellSecondaryTextColor];
}

id objc_msgSend_cellSelectedBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 cellSelectedBackgroundColor];
}

id objc_msgSend_cellSeparatorColor(void *a1, const char *a2, ...)
{
  return _[a1 cellSeparatorColor];
}

id objc_msgSend_cellTextColor(void *a1, const char *a2, ...)
{
  return _[a1 cellTextColor];
}

id objc_msgSend_changeGenerator(void *a1, const char *a2, ...)
{
  return _[a1 changeGenerator];
}

id objc_msgSend_changeHandler(void *a1, const char *a2, ...)
{
  return _[a1 changeHandler];
}

id objc_msgSend_changeIsUserDriven(void *a1, const char *a2, ...)
{
  return _[a1 changeIsUserDriven];
}

id objc_msgSend_changeType(void *a1, const char *a2, ...)
{
  return _[a1 changeType];
}

id objc_msgSend_changedObjectID(void *a1, const char *a2, ...)
{
  return _[a1 changedObjectID];
}

id objc_msgSend_changes(void *a1, const char *a2, ...)
{
  return _[a1 changes];
}

id objc_msgSend_changesForEntityName_(void *a1, const char *a2, ...)
{
  return [a1 changesForEntityName:];
}

id objc_msgSend_channel(void *a1, const char *a2, ...)
{
  return _[a1 channel];
}

id objc_msgSend_channelForStoreId_(void *a1, const char *a2, ...)
{
  return [a1 channelForStoreId:];
}

id objc_msgSend_channelItem(void *a1, const char *a2, ...)
{
  return _[a1 channelItem];
}

id objc_msgSend_channelStoreId(void *a1, const char *a2, ...)
{
  return _[a1 channelStoreId];
}

id objc_msgSend_chapters(void *a1, const char *a2, ...)
{
  return _[a1 chapters];
}

id objc_msgSend_checkAutoDownloadsForUuids_(void *a1, const char *a2, ...)
{
  return [a1 checkAutoDownloadsForUuids:];
}

id objc_msgSend_checkPotentialLibraryDeletionIssueForPreviouslySubscribedPodcastsCount_podcastsToUnsubscribeCount_newVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkPotentialLibraryDeletionIssueForPreviouslySubscribedPodcastsCount:podcastsToUnsubscribeCount:newVersion:");
}

id objc_msgSend_checkPotentialLibraryDeletionIssueForRemoteBookmarksCount_episodesToUnbookmarkCount_newVersion_(void *a1, const char *a2, ...)
{
  return [a1 checkPotentialLibraryDeletionIssueForRemoteBookmarksCount:episodesToUnbookmarkCount:newVersion:];
}

id objc_msgSend_checkViabilityOfSyncLibraryAndUPP(void *a1, const char *a2, ...)
{
  return _[a1 checkViabilityOfSyncLibraryAndUPP];
}

id objc_msgSend_chevronImage(void *a1, const char *a2, ...)
{
  return _[a1 chevronImage];
}

id objc_msgSend_chevronView(void *a1, const char *a2, ...)
{
  return _[a1 chevronView];
}

id objc_msgSend_children(void *a1, const char *a2, ...)
{
  return _[a1 children];
}

id objc_msgSend_chosenByAutofill(void *a1, const char *a2, ...)
{
  return _[a1 chosenByAutofill];
}

id objc_msgSend_clampsController(void *a1, const char *a2, ...)
{
  return _[a1 clampsController];
}

id objc_msgSend_cleanKeys(void *a1, const char *a2, ...)
{
  return _[a1 cleanKeys];
}

id objc_msgSend_cleanUpNeutralInterests(void *a1, const char *a2, ...)
{
  return _[a1 cleanUpNeutralInterests];
}

id objc_msgSend_cleanUpOldHiddenPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 cleanUpOldHiddenPodcasts];
}

id objc_msgSend_cleanedTitleStringWithPrefix_(void *a1, const char *a2, ...)
{
  return [a1 cleanedTitleStringWithPrefix:];
}

id objc_msgSend_cleanupItem(void *a1, const char *a2, ...)
{
  return _[a1 cleanupItem];
}

id objc_msgSend_cleanupTemporaryResourcesDirectoryIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 cleanupTemporaryResourcesDirectoryIfNecessary];
}

id objc_msgSend_clear(void *a1, const char *a2, ...)
{
  return _[a1 clear];
}

id objc_msgSend_clearAuthenticationRequest(void *a1, const char *a2, ...)
{
  return _[a1 clearAuthenticationRequest];
}

id objc_msgSend_clearBackOff(void *a1, const char *a2, ...)
{
  return _[a1 clearBackOff];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearDSIDCheckTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 clearDSIDCheckTimestamp];
}

id objc_msgSend_clearHasBeenIndexed(void *a1, const char *a2, ...)
{
  return _[a1 clearHasBeenIndexed];
}

id objc_msgSend_clearNetworkingBlocked(void *a1, const char *a2, ...)
{
  return _[a1 clearNetworkingBlocked];
}

id objc_msgSend_clearPartialUploadState(void *a1, const char *a2, ...)
{
  return _[a1 clearPartialUploadState];
}

id objc_msgSend_clearPlayerManifestWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 clearPlayerManifestWithCompletion:];
}

id objc_msgSend_clearQueueItems(void *a1, const char *a2, ...)
{
  return _[a1 clearQueueItems];
}

id objc_msgSend_clearStopInfo(void *a1, const char *a2, ...)
{
  return _[a1 clearStopInfo];
}

id objc_msgSend_clearTimestampForTransaction_(void *a1, const char *a2, ...)
{
  return [a1 clearTimestampForTransaction:];
}

id objc_msgSend_clearUpNextManifest(void *a1, const char *a2, ...)
{
  return _[a1 clearUpNextManifest];
}

id objc_msgSend_clearUserAcceptedSyncTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 clearUserAcceptedSyncTimestamp];
}

id objc_msgSend_clearUserCancelledSignIn(void *a1, const char *a2, ...)
{
  return _[a1 clearUserCancelledSignIn];
}

id objc_msgSend_clientClampErrorWithTransaction_retrySeconds_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 clientClampErrorWithTransaction:retrySeconds:underlyingError:];
}

id objc_msgSend_clientId(void *a1, const char *a2, ...)
{
  return _[a1 clientId];
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _[a1 close];
}

id objc_msgSend_closestIndexPathToRow_forIndexPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closestIndexPathToRow:forIndexPaths:");
}

id objc_msgSend_cloudSyncBugReporter(void *a1, const char *a2, ...)
{
  return _[a1 cloudSyncBugReporter];
}

id objc_msgSend_cloudSyncController(void *a1, const char *a2, ...)
{
  return _[a1 cloudSyncController];
}

id objc_msgSend_cloudSyncIsDirty(void *a1, const char *a2, ...)
{
  return _[a1 cloudSyncIsDirty];
}

id objc_msgSend_cloudSyncVersion(void *a1, const char *a2, ...)
{
  return _[a1 cloudSyncVersion];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collectNextBatch_(void *a1, const char *a2, ...)
{
  return [a1 collectNextBatch:];
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _[a1 collectionView];
}

id objc_msgSend_collectionView_didEndEditingItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionView:didEndEditingItemAtIndexPath:");
}

id objc_msgSend_collectionView_didSelectItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionView:didSelectItemAtIndexPath:");
}

id objc_msgSend_collectionView_layout_referenceSizeForHeaderInSection_(void *a1, const char *a2, ...)
{
  return [a1 collectionView:layout:referenceSizeForHeaderInSection:];
}

id objc_msgSend_collectionView_willBeginEditingItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 collectionView:willBeginEditingItemAtIndexPath:];
}

id objc_msgSend_collectionViewLayout(void *a1, const char *a2, ...)
{
  return _[a1 collectionViewLayout];
}

id objc_msgSend_collections(void *a1, const char *a2, ...)
{
  return _[a1 collections];
}

id objc_msgSend_colorTheme(void *a1, const char *a2, ...)
{
  return _[a1 colorTheme];
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return [a1 colorWithAlphaComponent:];
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithRed:green:blue:alpha:];
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithWhite:alpha:];
}

id objc_msgSend_combineImages_rowCount_size_border_(void *a1, const char *a2, ...)
{
  return [a1 combineImages:rowCount:size:border:];
}

id objc_msgSend_commandCenter(void *a1, const char *a2, ...)
{
  return _[a1 commandCenter];
}

id objc_msgSend_commandController(void *a1, const char *a2, ...)
{
  return _[a1 commandController];
}

id objc_msgSend_commandType(void *a1, const char *a2, ...)
{
  return _[a1 commandType];
}

id objc_msgSend_commitHasPerformedLegacyBadgeMigration(void *a1, const char *a2, ...)
{
  return _[a1 commitHasPerformedLegacyBadgeMigration];
}

id objc_msgSend_commitUniversalPlaybackPositionTransaction_domainVersion_metadataEnumerationBlock_(void *a1, const char *a2, ...)
{
  return [a1 commitUniversalPlaybackPositionTransaction:nil domainVersion:nil metadataEnumerationBlock:nil];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return [a1 compare:];
}

id objc_msgSend_completeAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 completeAndReturnError:];
}

id objc_msgSend_completeTransactionWithNewVersion_isGetTransaction_mismatch_finishedBlock_(void *a1, const char *a2, ...)
{
  return [a1 completeTransactionWithNewVersion:isGetTransaction:mismatch:finishedBlock:];
}

id objc_msgSend_completeTransactionWithNewVersion_key_finishedBlock_(void *a1, const char *a2, ...)
{
  return [a1 completeTransactionWithNewVersion:key:finishedBlock:];
}

id objc_msgSend_completeTransactionWithNewVersion_mismatch_finishedBlock_(void *a1, const char *a2, ...)
{
  return [a1 completeTransactionWithNewVersion:mismatch:finishedBlock:];
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _[a1 completion];
}

id objc_msgSend_completions(void *a1, const char *a2, ...)
{
  return _[a1 completions];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsJoinedByString:];
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return [a1 componentsSeparatedByCharactersInSet:];
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsSeparatedByString:];
}

id objc_msgSend_compositeManifest(void *a1, const char *a2, ...)
{
  return _[a1 compositeManifest];
}

id objc_msgSend_compositingFilter(void *a1, const char *a2, ...)
{
  return _[a1 compositingFilter];
}

id objc_msgSend_computeNotificationsWithSchedulingOptions_(void *a1, const char *a2, ...)
{
  return [a1 computeNotificationsWithSchedulingOptions:];
}

id objc_msgSend_concurrentMapWithStrideSize_on_withBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "concurrentMapWithStrideSize:on:withBlock:");
}

id objc_msgSend_config(void *a1, const char *a2, ...)
{
  return _[a1 config];
}

id objc_msgSend_configWithSupportsMetrics_(void *a1, const char *a2, ...)
{
  return [a1 configWithSupportsMetrics:];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configureArtworkForSearchableItemAttributeSet_withPodcastUuid_completion_(void *a1, const char *a2, ...)
{
  return [a1 configureArtworkForSearchableItemAttributeSet:withPodcastUuid:completion:];
}

id objc_msgSend_configureBarButtonItems(void *a1, const char *a2, ...)
{
  return _[a1 configureBarButtonItems];
}

id objc_msgSend_configureCell_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 configureCell:atIndex:];
}

id objc_msgSend_configureCell_atIndexPath_withDescription_inGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureCell:atIndexPath:withDescription:inGroupWithIdentifier:");
}

id objc_msgSend_configureCell_withObject_atIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 configureCell:withObject:atIndexPath:];
}

id objc_msgSend_configureRowHeight(void *a1, const char *a2, ...)
{
  return _[a1 configureRowHeight];
}

id objc_msgSend_configureSubviews(void *a1, const char *a2, ...)
{
  return _[a1 configureSubviews];
}

id objc_msgSend_conflictForSetTransaction_withData_forKey_version_finishedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conflictForSetTransaction:withData:forKey:version:finishedBlock:");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return [a1 conformsToProtocol:];
}

id objc_msgSend_conformsToType_(void *a1, const char *a2, ...)
{
  return [a1 conformsToType:];
}

id objc_msgSend_consecutiveFeedFetchErrors(void *a1, const char *a2, ...)
{
  return _[a1 consecutiveFeedFetchErrors];
}

id objc_msgSend_constant(void *a1, const char *a2, ...)
{
  return _[a1 constant];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:];
}

id objc_msgSend_containerIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 containerIdentifier];
}

id objc_msgSend_containerOrder(void *a1, const char *a2, ...)
{
  return _[a1 containerOrder];
}

id objc_msgSend_containerOrderOptionArray_(void *a1, const char *a2, ...)
{
  return [a1 containerOrderOptionArray:];
}

id objc_msgSend_containerOrderOptionValues(void *a1, const char *a2, ...)
{
  return _[a1 containerOrderOptionValues];
}

id objc_msgSend_containerTitle(void *a1, const char *a2, ...)
{
  return _[a1 containerTitle];
}

id objc_msgSend_containsEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 containsEpisodeUuid:];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return [a1 containsString:];
}

id objc_msgSend_containsStringInsensitive_(void *a1, const char *a2, ...)
{
  return [a1 containsStringInsensitive:];
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _[a1 content];
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _[a1 contentInset];
}

id objc_msgSend_contentItem(void *a1, const char *a2, ...)
{
  return _[a1 contentItem];
}

id objc_msgSend_contentItemID(void *a1, const char *a2, ...)
{
  return _[a1 contentItemID];
}

id objc_msgSend_contentItemIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contentItemIdentifier];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _[a1 contentOffset];
}

id objc_msgSend_contentRectForCell_forState_rowWidth_(void *a1, const char *a2, ...)
{
  return [a1 contentRectForCell:forState:rowWidth:];
}

id objc_msgSend_contentRectForEditControlWidth_(void *a1, const char *a2, ...)
{
  return [a1 contentRectForEditControlWidth:];
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _[a1 contentSize];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return [a1 contentsOfDirectoryAtPath:error:];
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_contextID(void *a1, const char *a2, ...)
{
  return _[a1 contextID];
}

id objc_msgSend_contextWithReason_(void *a1, const char *a2, ...)
{
  return [a1 contextWithReason:];
}

id objc_msgSend_continueActivity_(void *a1, const char *a2, ...)
{
  return [a1 continueActivity:];
}

id objc_msgSend_continueCoreSpotlightItemActivity_(void *a1, const char *a2, ...)
{
  return [a1 continueCoreSpotlightItemActivity:];
}

id objc_msgSend_continueCoreSpotlightSearchActivity_(void *a1, const char *a2, ...)
{
  return [a1 continueCoreSpotlightSearchActivity:];
}

id objc_msgSend_continueIntentsUserActivity_(void *a1, const char *a2, ...)
{
  return [a1 continueIntentsUserActivity:];
}

id objc_msgSend_continuePlaybackActivity_(void *a1, const char *a2, ...)
{
  return [a1 continuePlaybackActivity:];
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return _[a1 controller];
}

id objc_msgSend_controller_didChangeObject_atIndexPath_forChangeType_newIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:];
}

id objc_msgSend_controllerAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 controllerAtIndex:];
}

id objc_msgSend_controllerDidChangeContent_(void *a1, const char *a2, ...)
{
  return [a1 controllerDidChangeContent:];
}

id objc_msgSend_controllerForDeletingStation_fromLibrary_deletionCompletion_(void *a1, const char *a2, ...)
{
  return [a1 controllerForDeletingStation:fromLibrary:deletionCompletion:];
}

id objc_msgSend_controllerWillChangeContent_(void *a1, const char *a2, ...)
{
  return [a1 controllerWillChangeContent:];
}

id objc_msgSend_controllerWithQosClass_identifier_(void *a1, const char *a2, ...)
{
  return [a1 controllerWithQosClass:identifier:];
}

id objc_msgSend_controllerWithUserIdentity_(void *a1, const char *a2, ...)
{
  return [a1 controllerWithUserIdentity:];
}

id objc_msgSend_controllers(void *a1, const char *a2, ...)
{
  return _[a1 controllers];
}

id objc_msgSend_convertActiveEndpointToBufferedAirPlayWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 convertActiveEndpointToBufferedAirPlayWithCompletion:];
}

id objc_msgSend_convertPoint_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertPoint:fromView:];
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return [a1 convertPoint:toView:];
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromView:];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyImageFromSourceUrl_sourceFileType_to_discardTransparency_enforceSquare_maxDimensionInPixels_(void *a1, const char *a2, ...)
{
  return [a1 copyImageFromSourceUrl:sourceFileType:to:discardTransparency:enforceSquare:maxDimensionInPixels:];
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return [a1 copyItemAtURL:toURL:error:];
}

id objc_msgSend_copySettingsToSharedContainer(void *a1, const char *a2, ...)
{
  return _[a1 copySettingsToSharedContainer];
}

id objc_msgSend_copyWithPlayReason_(void *a1, const char *a2, ...)
{
  return [a1 copyWithPlayReason:];
}

id objc_msgSend_coreDataVersion(void *a1, const char *a2, ...)
{
  return _[a1 coreDataVersion];
}

id objc_msgSend_cornerRadiusForSize_(void *a1, const char *a2, ...)
{
  return [a1 cornerRadiusForSize:];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return [a1 countByEnumeratingWithState:objects:count:];
}

id objc_msgSend_countForFetchRequest_error_(void *a1, const char *a2, ...)
{
  return [a1 countForFetchRequest:error:];
}

id objc_msgSend_countInfoButton(void *a1, const char *a2, ...)
{
  return _[a1 countInfoButton];
}

id objc_msgSend_countLabel(void *a1, const char *a2, ...)
{
  return _[a1 countLabel];
}

id objc_msgSend_countOfNewEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 countOfNewEpisodes];
}

id objc_msgSend_countOfNewEpisodesForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 countOfNewEpisodesForPodcast:];
}

id objc_msgSend_countOfObjectsInEntity_predicate_(void *a1, const char *a2, ...)
{
  return [a1 countOfObjectsInEntity:predicate:];
}

id objc_msgSend_countOfPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 countOfPodcasts];
}

id objc_msgSend_countOfUnplayedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 countOfUnplayedEpisodes];
}

id objc_msgSend_countOfUnplayedEpisodesForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 countOfUnplayedEpisodesForPodcast:];
}

id objc_msgSend_countView(void *a1, const char *a2, ...)
{
  return _[a1 countView];
}

id objc_msgSend_counterForGeneratingLibraryChangeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 counterForGeneratingLibraryChangeNotifications];
}

id objc_msgSend_createAndSaveStationWithTitle_(void *a1, const char *a2, ...)
{
  return [a1 createAndSaveStationWithTitle:];
}

id objc_msgSend_createBagForSubProfile(void *a1, const char *a2, ...)
{
  return _[a1 createBagForSubProfile];
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return [a1 createDirectoryAtPath:withIntermediateDirectories:attributes:error:];
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createEpisodeObserverForPodcastUuid_predicate_sortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 createEpisodeObserverForPodcastUuid:predicate:sortDescriptors:];
}

id objc_msgSend_createMoreAction(void *a1, const char *a2, ...)
{
  return _[a1 createMoreAction];
}

id objc_msgSend_createOrFindChannelFromFeedChannelItem_personalizedRequest_context_(void *a1, const char *a2, ...)
{
  return [a1 createOrFindChannelFromFeedChannelItem:personalizedRequest:context:];
}

id objc_msgSend_createOrUpdateUPPMetadataFromUPPMediaItem_inCtx_(void *a1, const char *a2, ...)
{
  return [a1 createOrUpdateUPPMetadataFromUPPMediaItem:inCtx:];
}

id objc_msgSend_createOrUpdateUPPMetadataFromUPPRecord_inCtx_(void *a1, const char *a2, ...)
{
  return [a1 createOrUpdateUPPMetadataFromUPPRecord:inCtx:];
}

id objc_msgSend_createPersistentStoreForModel_attemptMigration_(void *a1, const char *a2, ...)
{
  return [a1 createPersistentStoreForModel:attemptMigration:];
}

id objc_msgSend_createPrivateTempDirIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 createPrivateTempDirIfNeeded];
}

id objc_msgSend_createQueryObserver(void *a1, const char *a2, ...)
{
  return _[a1 createQueryObserver];
}

id objc_msgSend_createSectionForEmptyOverlay(void *a1, const char *a2, ...)
{
  return _[a1 createSectionForEmptyOverlay];
}

id objc_msgSend_createSectionForFeed(void *a1, const char *a2, ...)
{
  return _[a1 createSectionForFeed];
}

id objc_msgSend_createSectionForIsFromiTunesSync(void *a1, const char *a2, ...)
{
  return _[a1 createSectionForIsFromiTunesSync];
}

id objc_msgSend_createSectionForOtherEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 createSectionForOtherEpisodes];
}

id objc_msgSend_createSectionForPlayedToBeDeleted(void *a1, const char *a2, ...)
{
  return _[a1 createSectionForPlayedToBeDeleted];
}

id objc_msgSend_createSectionForUnplayed(void *a1, const char *a2, ...)
{
  return _[a1 createSectionForUnplayed];
}

id objc_msgSend_createSeparator(void *a1, const char *a2, ...)
{
  return _[a1 createSeparator];
}

id objc_msgSend_createSessionWithAsset_completion_(void *a1, const char *a2, ...)
{
  return [a1 createSessionWithAsset:completion:];
}

id objc_msgSend_createSocialPostUIImageWithShareModel_(void *a1, const char *a2, ...)
{
  return [a1 createSocialPostUIImageWithShareModel:];
}

id objc_msgSend_createVideoGlyphAttributedString(void *a1, const char *a2, ...)
{
  return _[a1 createVideoGlyphAttributedString];
}

id objc_msgSend_createWindowForApplication_(void *a1, const char *a2, ...)
{
  return [a1 createWindowForApplication:];
}

id objc_msgSend_createWindowWithScene_(void *a1, const char *a2, ...)
{
  return [a1 createWindowWithScene:];
}

id objc_msgSend_createdPodcastUUID(void *a1, const char *a2, ...)
{
  return _[a1 createdPodcastUUID];
}

id objc_msgSend_currentActivity(void *a1, const char *a2, ...)
{
  return _[a1 currentActivity];
}

id objc_msgSend_currentChapter(void *a1, const char *a2, ...)
{
  return _[a1 currentChapter];
}

id objc_msgSend_currentConstant(void *a1, const char *a2, ...)
{
  return _[a1 currentConstant];
}

id objc_msgSend_currentDeserializer(void *a1, const char *a2, ...)
{
  return _[a1 currentDeserializer];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentEpisodeLimitAllowsAutomaticDownloads(void *a1, const char *a2, ...)
{
  return _[a1 currentEpisodeLimitAllowsAutomaticDownloads];
}

id objc_msgSend_currentEpisodeLimitIsNextNEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 currentEpisodeLimitIsNextNEpisodes];
}

id objc_msgSend_currentFeedURL(void *a1, const char *a2, ...)
{
  return _[a1 currentFeedURL];
}

id objc_msgSend_currentFetchRequest(void *a1, const char *a2, ...)
{
  return _[a1 currentFetchRequest];
}

id objc_msgSend_currentIndex(void *a1, const char *a2, ...)
{
  return _[a1 currentIndex];
}

id objc_msgSend_currentItem(void *a1, const char *a2, ...)
{
  return _[a1 currentItem];
}

id objc_msgSend_currentKVSTransaction(void *a1, const char *a2, ...)
{
  return _[a1 currentKVSTransaction];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentManifest(void *a1, const char *a2, ...)
{
  return _[a1 currentManifest];
}

id objc_msgSend_currentNotificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 currentNotificationCenter];
}

id objc_msgSend_currentPersistentHistoryTokenFromStores_(void *a1, const char *a2, ...)
{
  return [a1 currentPersistentHistoryTokenFromStores:];
}

id objc_msgSend_currentPlayerTime(void *a1, const char *a2, ...)
{
  return _[a1 currentPlayerTime];
}

id objc_msgSend_currentPodcastFeedURL(void *a1, const char *a2, ...)
{
  return _[a1 currentPodcastFeedURL];
}

id objc_msgSend_currentPodcastStateDescriptionFrom_(void *a1, const char *a2, ...)
{
  return [a1 currentPodcastStateDescriptionFrom:];
}

id objc_msgSend_currentProcess(void *a1, const char *a2, ...)
{
  return _[a1 currentProcess];
}

id objc_msgSend_currentReachabilityStatus(void *a1, const char *a2, ...)
{
  return _[a1 currentReachabilityStatus];
}

id objc_msgSend_currentRequest(void *a1, const char *a2, ...)
{
  return _[a1 currentRequest];
}

id objc_msgSend_currentSettings(void *a1, const char *a2, ...)
{
  return _[a1 currentSettings];
}

id objc_msgSend_currentShareMode(void *a1, const char *a2, ...)
{
  return _[a1 currentShareMode];
}

id objc_msgSend_currentShortTitle(void *a1, const char *a2, ...)
{
  return _[a1 currentShortTitle];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _[a1 currentState];
}

id objc_msgSend_currentStateMask(void *a1, const char *a2, ...)
{
  return _[a1 currentStateMask];
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return _[a1 currentThread];
}

id objc_msgSend_currentTime(void *a1, const char *a2, ...)
{
  return _[a1 currentTime];
}

id objc_msgSend_currentTraitCollection(void *a1, const char *a2, ...)
{
  return _[a1 currentTraitCollection];
}

id objc_msgSend_currentTransaction(void *a1, const char *a2, ...)
{
  return _[a1 currentTransaction];
}

id objc_msgSend_currentlySubscribingStoreCollectionIds(void *a1, const char *a2, ...)
{
  return _[a1 currentlySubscribingStoreCollectionIds];
}

id objc_msgSend_customHeaderHeight(void *a1, const char *a2, ...)
{
  return _[a1 customHeaderHeight];
}

id objc_msgSend_customView(void *a1, const char *a2, ...)
{
  return _[a1 customView];
}

id objc_msgSend_customiseLabelAndSeparatorInsets(void *a1, const char *a2, ...)
{
  return _[a1 customiseLabelAndSeparatorInsets];
}

id objc_msgSend_darkCount(void *a1, const char *a2, ...)
{
  return _[a1 darkCount];
}

id objc_msgSend_darkDownloadsChangeWithWasDark_isDark_reason_previousExit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darkDownloadsChangeWithWasDark:isDark:reason:previousExit:");
}

id objc_msgSend_dataAccessQueue(void *a1, const char *a2, ...)
{
  return _[a1 dataAccessQueue];
}

id objc_msgSend_dataForSetTransaction_key_version_(void *a1, const char *a2, ...)
{
  return [a1 dataForSetTransaction:key:version:];
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataSourceTransactionContext(void *a1, const char *a2, ...)
{
  return _[a1 dataSourceTransactionContext];
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return [a1 dataUsingEncoding:];
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 dataWithBytes:length:];
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfFile:];
}

id objc_msgSend_dataWithContentsOfFile_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfFile:options:error:];
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfURL:];
}

id objc_msgSend_dataWithNodes_(void *a1, const char *a2, ...)
{
  return [a1 dataWithNodes:];
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithPropertyList:format:options:error:];
}

id objc_msgSend_databaseID(void *a1, const char *a2, ...)
{
  return _[a1 databaseID];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateAccessed(void *a1, const char *a2, ...)
{
  return _[a1 dateAccessed];
}

id objc_msgSend_dateAdded(void *a1, const char *a2, ...)
{
  return _[a1 dateAdded];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingTimeInterval:];
}

id objc_msgSend_dateFormatters(void *a1, const char *a2, ...)
{
  return _[a1 dateFormatters];
}

id objc_msgSend_dateFromFormattedString_(void *a1, const char *a2, ...)
{
  return [a1 dateFromFormattedString:];
}

id objc_msgSend_dateFromString_(void *a1, const char *a2, ...)
{
  return [a1 dateFromString:];
}

id objc_msgSend_dateLabelDescriptionForEpisode_download_(void *a1, const char *a2, ...)
{
  return [a1 dateLabelDescriptionForEpisode:download:];
}

id objc_msgSend_dateReleased(void *a1, const char *a2, ...)
{
  return _[a1 dateReleased];
}

id objc_msgSend_dateToFireNextTimer(void *a1, const char *a2, ...)
{
  return _[a1 dateToFireNextTimer];
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSince1970:];
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceNow:];
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceReferenceDate:];
}

id objc_msgSend_debugDataFileName(void *a1, const char *a2, ...)
{
  return _[a1 debugDataFileName];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_declinedAuthRequests(void *a1, const char *a2, ...)
{
  return _[a1 declinedAuthRequests];
}

id objc_msgSend_decodeAndSetPlaybackQueueForController_fromIdentifiers_enqueuer_accountLookupFailed_startPlayback_upNextQueueIntent_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeAndSetPlaybackQueueForController:fromIdentifiers:enqueuer:accountLookupFailed:startPlayback:upNextQueueIntent:completion:");
}

id objc_msgSend_decodeAndSetPlaybackQueueForController_fromIdentifiers_sessionIdentifierOverride_enqueuer_accountLookupFailed_startPlayback_upNextQueueIntent_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeAndSetPlaybackQueueForController:fromIdentifiers:sessionIdentifierOverride:enqueuer:accountLookupFailed:startPlayback:upNextQueueIntent:completion:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return [a1 decodeDoubleForKey:];
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return [a1 decodeObjectOfClasses:forKey:];
}

id objc_msgSend_defaultActionButtonsXOriginForScrollFrame_andActionContainerSize_(void *a1, const char *a2, ...)
{
  return [a1 defaultActionButtonsXOriginForScrollFrame:andActionContainerSize:];
}

id objc_msgSend_defaultArtworkForStyle_(void *a1, const char *a2, ...)
{
  return [a1 defaultArtworkForStyle:];
}

id objc_msgSend_defaultAssetOptions(void *a1, const char *a2, ...)
{
  return _[a1 defaultAssetOptions];
}

id objc_msgSend_defaultCategory(void *a1, const char *a2, ...)
{
  return _[a1 defaultCategory];
}

id objc_msgSend_defaultCellBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 defaultCellBackgroundColor];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultConfiguration];
}

id objc_msgSend_defaultContext(void *a1, const char *a2, ...)
{
  return _[a1 defaultContext];
}

id objc_msgSend_defaultDomain(void *a1, const char *a2, ...)
{
  return _[a1 defaultDomain];
}

id objc_msgSend_defaultEpisodeLimit(void *a1, const char *a2, ...)
{
  return _[a1 defaultEpisodeLimit];
}

id objc_msgSend_defaultGetURL(void *a1, const char *a2, ...)
{
  return _[a1 defaultGetURL];
}

id objc_msgSend_defaultImageStoreURL(void *a1, const char *a2, ...)
{
  return _[a1 defaultImageStoreURL];
}

id objc_msgSend_defaultInstance(void *a1, const char *a2, ...)
{
  return _[a1 defaultInstance];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 defaultMediaLibrary];
}

id objc_msgSend_defaultPodcastArtwork(void *a1, const char *a2, ...)
{
  return _[a1 defaultPodcastArtwork];
}

id objc_msgSend_defaultPodcastArtworkData(void *a1, const char *a2, ...)
{
  return _[a1 defaultPodcastArtworkData];
}

id objc_msgSend_defaultPollingInterval(void *a1, const char *a2, ...)
{
  return _[a1 defaultPollingInterval];
}

id objc_msgSend_defaultPropertiesThatAffectPredicate(void *a1, const char *a2, ...)
{
  return _[a1 defaultPropertiesThatAffectPredicate];
}

id objc_msgSend_defaultPropertiesToFetch(void *a1, const char *a2, ...)
{
  return _[a1 defaultPropertiesToFetch];
}

id objc_msgSend_defaultSetURL(void *a1, const char *a2, ...)
{
  return _[a1 defaultSetURL];
}

id objc_msgSend_defaultSettings(void *a1, const char *a2, ...)
{
  return _[a1 defaultSettings];
}

id objc_msgSend_defaultShowType(void *a1, const char *a2, ...)
{
  return _[a1 defaultShowType];
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultStore];
}

id objc_msgSend_defaultSubtitleFont(void *a1, const char *a2, ...)
{
  return _[a1 defaultSubtitleFont];
}

id objc_msgSend_defaultSubtitleNumberOfLines(void *a1, const char *a2, ...)
{
  return _[a1 defaultSubtitleNumberOfLines];
}

id objc_msgSend_defaultSubtitleTextStyle(void *a1, const char *a2, ...)
{
  return _[a1 defaultSubtitleTextStyle];
}

id objc_msgSend_defaultTitleFont(void *a1, const char *a2, ...)
{
  return _[a1 defaultTitleFont];
}

id objc_msgSend_defaultTitleNumberOfLines(void *a1, const char *a2, ...)
{
  return _[a1 defaultTitleNumberOfLines];
}

id objc_msgSend_defaultTitleTextStyle(void *a1, const char *a2, ...)
{
  return _[a1 defaultTitleTextStyle];
}

id objc_msgSend_defaultToInitialIndexZero(void *a1, const char *a2, ...)
{
  return _[a1 defaultToInitialIndexZero];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_defaultsKey(void *a1, const char *a2, ...)
{
  return _[a1 defaultsKey];
}

id objc_msgSend_defaultsNotifier(void *a1, const char *a2, ...)
{
  return _[a1 defaultsNotifier];
}

id objc_msgSend_defaultsObserver(void *a1, const char *a2, ...)
{
  return _[a1 defaultsObserver];
}

id objc_msgSend_deferWork_(void *a1, const char *a2, ...)
{
  return [a1 deferWork:];
}

id objc_msgSend_deferredEpisodeUuids(void *a1, const char *a2, ...)
{
  return _[a1 deferredEpisodeUuids];
}

id objc_msgSend_deferredWorkBlocks(void *a1, const char *a2, ...)
{
  return _[a1 deferredWorkBlocks];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delegateCancelledErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegateCancelledErrorWithTransaction:underlyingError:");
}

id objc_msgSend_deleteAllContentInCtx_error_(void *a1, const char *a2, ...)
{
  return [a1 deleteAllContentInCtx:error:];
}

id objc_msgSend_deleteAllInterestsBlockingCaller(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllInterestsBlockingCaller];
}

id objc_msgSend_deleteAllTopLevelStationsExcludingFolders(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllTopLevelStationsExcludingFolders];
}

id objc_msgSend_deleteAllUPPMetadata(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllUPPMetadata];
}

id objc_msgSend_deleteButton(void *a1, const char *a2, ...)
{
  return _[a1 deleteButton];
}

id objc_msgSend_deleteDuplicateVideoEpisodesForRdar59691904(void *a1, const char *a2, ...)
{
  return _[a1 deleteDuplicateVideoEpisodesForRdar59691904];
}

id objc_msgSend_deleteEpisodeUuids_(void *a1, const char *a2, ...)
{
  return [a1 deleteEpisodeUuids];
}

id objc_msgSend_deleteEpisodeUuids_forced_(void *a1, const char *a2, ...)
{
  return [a1 deleteEpisodeUuids:forced:];
}

id objc_msgSend_deleteEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 deleteEpisodes:];
}

id objc_msgSend_deleteHistoryBeforeDate_(void *a1, const char *a2, ...)
{
  return [a1 deleteHistoryBeforeDate:];
}

id objc_msgSend_deleteInteractionsWithGroupIdentifier_completion_(void *a1, const char *a2, ...)
{
  return [a1 deleteInteractionsWithGroupIdentifier:completion:];
}

id objc_msgSend_deleteInteractionsWithIdentifiers_completion_(void *a1, const char *a2, ...)
{
  return [a1 deleteInteractionsWithIdentifiers:completion:];
}

id objc_msgSend_deleteItems_(void *a1, const char *a2, ...)
{
  return [a1 deleteItems:];
}

id objc_msgSend_deleteMediaItems_completion_(void *a1, const char *a2, ...)
{
  return [a1 deleteMediaItems:completion:];
}

id objc_msgSend_deleteMigrationRegistryAtVersion_(void *a1, const char *a2, ...)
{
  return [a1 deleteMigrationRegistryAtVersion:];
}

id objc_msgSend_deleteMusicSubscriptionInfoIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 deleteMusicSubscriptionInfoIfNeeded];
}

id objc_msgSend_deleteObject_(void *a1, const char *a2, ...)
{
  return [a1 deleteObject:];
}

id objc_msgSend_deleteOrUpdatePlaylist_ifIsDefault_(void *a1, const char *a2, ...)
{
  return [a1 deleteOrUpdatePlaylist:ifIsDefault:];
}

id objc_msgSend_deleteOrphanedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 deleteOrphanedEpisodes];
}

id objc_msgSend_deletePlayedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 deletePlayedEpisodes];
}

id objc_msgSend_deletePlayedEpisodesDefaultValue(void *a1, const char *a2, ...)
{
  return _[a1 deletePlayedEpisodesDefaultValue];
}

id objc_msgSend_deletePlayedEpisodesResolvedValue(void *a1, const char *a2, ...)
{
  return _[a1 deletePlayedEpisodesResolvedValue];
}

id objc_msgSend_deletePlayedText_(void *a1, const char *a2, ...)
{
  return [a1 deletePlayedText:];
}

id objc_msgSend_deletePlaylist_(void *a1, const char *a2, ...)
{
  return [a1 deletePlaylist];
}

id objc_msgSend_deletePodcastWithUuid_(void *a1, const char *a2, ...)
{
  return [a1 deletePodcastWithUuid:];
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 deleteRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_deleteSearchableItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 deleteSearchableItemsWithIdentifiers:];
}

id objc_msgSend_deleteSearchableItemsWithIdentifiers_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 deleteSearchableItemsWithIdentifiers:completionHandler:];
}

id objc_msgSend_deleteSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 deleteSections:withRowAnimation:];
}

id objc_msgSend_deleteStationAlertController(void *a1, const char *a2, ...)
{
  return _[a1 deleteStationAlertController];
}

id objc_msgSend_deletedEpisodeCount(void *a1, const char *a2, ...)
{
  return _[a1 deletedEpisodeCount];
}

id objc_msgSend_deletedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 deletedEpisodes];
}

id objc_msgSend_dependantPropertyKeys(void *a1, const char *a2, ...)
{
  return _[a1 dependantPropertyKeys];
}

id objc_msgSend_dependentKeys(void *a1, const char *a2, ...)
{
  return _[a1 dependentKeys];
}

id objc_msgSend_dependentPropertyKeys(void *a1, const char *a2, ...)
{
  return _[a1 dependentPropertyKeys];
}

id objc_msgSend_deprecatedImageStoreURL(void *a1, const char *a2, ...)
{
  return _[a1 deprecatedImageStoreURL];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithIdentifier:];
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithReuseIdentifier:forIndexPath:];
}

id objc_msgSend_dequeueReusableHeaderFooterViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableHeaderFooterViewWithIdentifier:];
}

id objc_msgSend_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:];
}

id objc_msgSend_deregister(void *a1, const char *a2, ...)
{
  return _[a1 deregister];
}

id objc_msgSend_derivedPropertiesForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 derivedPropertiesForPodcast:];
}

id objc_msgSend_derivedPropertyValueForKey_forPodcast_(void *a1, const char *a2, ...)
{
  return [a1 derivedPropertyValueForKey:forPodcast:];
}

id objc_msgSend_descender(void *a1, const char *a2, ...)
{
  return _[a1 descender];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptionBodyTextForEpisode_html_withAttributes_(void *a1, const char *a2, ...)
{
  return [a1 descriptionBodyTextForEpisode:html:withAttributes:];
}

id objc_msgSend_descriptionButton(void *a1, const char *a2, ...)
{
  return _[a1 descriptionButton];
}

id objc_msgSend_descriptionButtonFrameForDescriptionFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionButtonFrameForDescriptionFrame:");
}

id objc_msgSend_descriptionCache(void *a1, const char *a2, ...)
{
  return _[a1 descriptionCache];
}

id objc_msgSend_descriptionCacheForEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 descriptionCacheForEpisodeUuid:];
}

id objc_msgSend_descriptionExclusionPathsForOrigin_descriptionWidth_buttonsFrame_titleFrame_(void *a1, const char *a2, ...)
{
  return [a1 descriptionExclusionPathsForOrigin:descriptionWidth:buttonsFrame:titleFrame:];
}

id objc_msgSend_descriptionFont(void *a1, const char *a2, ...)
{
  return _[a1 descriptionFont];
}

id objc_msgSend_descriptionFooterTextForEpisode_includesSeasonEpisodeType_includesDuration_includesPlayedIfPlayed_hasBodyText_unavailableReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionFooterTextForEpisode:includesSeasonEpisodeType:includesDuration:includesPlayedIfPlayed:hasBodyText:unavailableReason:");
}

id objc_msgSend_descriptionForEpisode_options_(void *a1, const char *a2, ...)
{
  return [a1 descriptionForEpisode:options:];
}

id objc_msgSend_descriptionForNotificationLogging(void *a1, const char *a2, ...)
{
  return _[a1 descriptionForNotificationLogging];
}

id objc_msgSend_descriptionForState_(void *a1, const char *a2, ...)
{
  return [a1 descriptionForState:];
}

id objc_msgSend_descriptionKeyForOptions_unavailableReason_(void *a1, const char *a2, ...)
{
  return [a1 descriptionKeyForOptions:unavailableReason:];
}

id objc_msgSend_descriptionMaxHeightForCurrentOrientation(void *a1, const char *a2, ...)
{
  return _[a1 descriptionMaxHeightForCurrentOrientation];
}

id objc_msgSend_descriptionNumberOfLinesForStyle_isTitleMultipleLines_(void *a1, const char *a2, ...)
{
  return [a1 descriptionNumberOfLinesForStyle:isTitleMultipleLines:];
}

id objc_msgSend_descriptionOriginForViewWidth_artworkFrame_buttonViewFrame_titleFrame_metadataFrame_iconViewFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionOriginForViewWidth:artworkFrame:buttonViewFrame:titleFrame:metadataFrame:iconViewFrame:style:");
}

id objc_msgSend_descriptionPrefixTextForEpisode_options_trailingNewline_(void *a1, const char *a2, ...)
{
  return [a1 descriptionPrefixTextForEpisode:options:trailingNewline:];
}

id objc_msgSend_descriptionTextForEpisode_options_(void *a1, const char *a2, ...)
{
  return [a1 descriptionTextForEpisode:options:];
}

id objc_msgSend_descriptionTextStyle(void *a1, const char *a2, ...)
{
  return _[a1 descriptionTextStyle];
}

id objc_msgSend_descriptionTextView(void *a1, const char *a2, ...)
{
  return _[a1 descriptionTextView];
}

id objc_msgSend_descriptionWidthForViewWidth_titleFrame_style_(void *a1, const char *a2, ...)
{
  return [a1 descriptionWidthForViewWidth:titleFrame:style:];
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 deselectRowAtIndexPath:animated:];
}

id objc_msgSend_deserialize(void *a1, const char *a2, ...)
{
  return _[a1 deserialize];
}

id objc_msgSend_deserializeOperationDidFinish_shouldReschedule_(void *a1, const char *a2, ...)
{
  return [a1 deserializeOperationDidFinish:shouldReschedule:];
}

id objc_msgSend_destroyAndRebuildDatabase(void *a1, const char *a2, ...)
{
  return _[a1 destroyAndRebuildDatabase];
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _[a1 detailTextLabel];
}

id objc_msgSend_determineCanSendNewEpisodeAlertsWithSchedulingOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "determineCanSendNewEpisodeAlertsWithSchedulingOptions:completion:");
}

id objc_msgSend_determineCompositeIndexWithIndex_fromManifest_(void *a1, const char *a2, ...)
{
  return [a1 determineCompositeIndexWithIndex:fromManifest:];
}

id objc_msgSend_determineiTunesMatchEnabledWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 determineiTunesMatchEnabledWithCompletion:];
}

id objc_msgSend_deviceAgreedTermsVersion(void *a1, const char *a2, ...)
{
  return _[a1 deviceAgreedTermsVersion];
}

id objc_msgSend_deviceCapacityObserver(void *a1, const char *a2, ...)
{
  return _[a1 deviceCapacityObserver];
}

id objc_msgSend_dictionariesToMerge(void *a1, const char *a2, ...)
{
  return _[a1 dictionariesToMerge];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryByDecomposingQueryStringWithURLDecode_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryByDecomposingQueryStringWithURLDecode];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryToSecItemFormat_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryToSecItemFormat];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithCapacity:];
}

id objc_msgSend_dictionaryWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithContentsOfURL:];
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithDictionary:];
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObject:forKey:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjectsAndKeys:];
}

id objc_msgSend_dictionaryWithValuesForKeys_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithValuesForKeys:];
}

id objc_msgSend_didBecomeActiveWhileMigrating(void *a1, const char *a2, ...)
{
  return _[a1 didBecomeActiveWhileMigrating];
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 didChangeValueForKey:];
}

id objc_msgSend_didDeletePersistentId_(void *a1, const char *a2, ...)
{
  return [a1 didDeletePersistentId:];
}

id objc_msgSend_didDownloadFeedWithError_data_task_requestedUrl_useBackgroundFetch_(void *a1, const char *a2, ...)
{
  return [a1 didDownloadFeedWithError:data:task:requestedUrl:useBackgroundFetch:];
}

id objc_msgSend_didEndRefreshing(void *a1, const char *a2, ...)
{
  return _[a1 didEndRefreshing];
}

id objc_msgSend_didFailToRegisterWithError_(void *a1, const char *a2, ...)
{
  return [a1 didFailToRegisterWithError:];
}

id objc_msgSend_didFinishProcessingContextSaveHandlerForTests(void *a1, const char *a2, ...)
{
  return _[a1 didFinishProcessingContextSaveHandlerForTests];
}

id objc_msgSend_didFinishUpdatingAllFeeds_(void *a1, const char *a2, ...)
{
  return [a1 didFinishUpdatingAllFeeds:];
}

id objc_msgSend_didFinishUpdatingFeedUrl_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFinishUpdatingFeedUrl:withError:");
}

id objc_msgSend_didLoadChapters(void *a1, const char *a2, ...)
{
  return _[a1 didLoadChapters];
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 didMoveToParentViewController:];
}

id objc_msgSend_didPerformActionInSheet_(void *a1, const char *a2, ...)
{
  return [a1 didPerformActionInSheet:];
}

id objc_msgSend_didRegisterWithToken_(void *a1, const char *a2, ...)
{
  return [a1 didRegisterWithToken:];
}

id objc_msgSend_didRestoreFeedUrlTask_(void *a1, const char *a2, ...)
{
  return [a1 didRestoreFeedUrlTask:];
}

id objc_msgSend_didRollbackStatusChangeWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 didRollbackStatusChangeWithCompletion:];
}

id objc_msgSend_didStartUpdatingFeedUrl_cloudSyncUrl_(void *a1, const char *a2, ...)
{
  return [a1 didStartUpdatingFeedUrl:cloudSyncUrl:];
}

id objc_msgSend_didTapStartButton(void *a1, const char *a2, ...)
{
  return _[a1 didTapStartButton];
}

id objc_msgSend_didUpdateCompletionBlocks(void *a1, const char *a2, ...)
{
  return _[a1 didUpdateCompletionBlocks];
}

id objc_msgSend_dimmingView(void *a1, const char *a2, ...)
{
  return _[a1 dimmingView];
}

id objc_msgSend_direction(void *a1, const char *a2, ...)
{
  return _[a1 direction];
}

id objc_msgSend_dirtyKeys(void *a1, const char *a2, ...)
{
  return _[a1 dirtyKeys];
}

id objc_msgSend_disable(void *a1, const char *a2, ...)
{
  return _[a1 disable];
}

id objc_msgSend_disableRefreshControlWhileEditing(void *a1, const char *a2, ...)
{
  return _[a1 disableRefreshControlWhileEditing];
}

id objc_msgSend_disableSubscriptionOnPodcastUUID_from_(void *a1, const char *a2, ...)
{
  return [a1 disableSubscriptionOnPodcastUUID:from:];
}

id objc_msgSend_disableSubscriptionsOnPodcastUUIDs_from_context_(void *a1, const char *a2, ...)
{
  return [a1 disableSubscriptionsOnPodcastUUIDs:from:context:];
}

id objc_msgSend_disableSubscriptionsWithUuids_ctx_(void *a1, const char *a2, ...)
{
  return [a1 disableSubscriptionsWithUuids:ctx:];
}

id objc_msgSend_disabledGroups(void *a1, const char *a2, ...)
{
  return _[a1 disabledGroups];
}

id objc_msgSend_disabledReason(void *a1, const char *a2, ...)
{
  return _[a1 disabledReason];
}

id objc_msgSend_diskCache(void *a1, const char *a2, ...)
{
  return _[a1 diskCache];
}

id objc_msgSend_dismissActionSheet(void *a1, const char *a2, ...)
{
  return _[a1 dismissActionSheet];
}

id objc_msgSend_dismissActionSheetsAndPopovers(void *a1, const char *a2, ...)
{
  return _[a1 dismissActionSheetsAndPopovers];
}

id objc_msgSend_dismissNowPlayingAnimated_(void *a1, const char *a2, ...)
{
  return [a1 dismissNowPlayingAnimated:];
}

id objc_msgSend_dismissNowPlayingAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissNowPlayingAnimated:YES completion:nil];
}

id objc_msgSend_dismissNowPlayingWithAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissNowPlayingWithAnimated:completion:];
}

id objc_msgSend_dismissOnTouchRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 dismissOnTouchRecognizer];
}

id objc_msgSend_dismissPopover(void *a1, const char *a2, ...)
{
  return _[a1 dismissPopover];
}

id objc_msgSend_dismissSearchOverlayController(void *a1, const char *a2, ...)
{
  return _[a1 dismissSearchOverlayController];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:completion:];
}

id objc_msgSend_dispatchQueue(void *a1, const char *a2, ...)
{
  return _[a1 dispatchQueue];
}

id objc_msgSend_displayType(void *a1, const char *a2, ...)
{
  return _[a1 displayType];
}

id objc_msgSend_displayURL(void *a1, const char *a2, ...)
{
  return _[a1 displayURL];
}

id objc_msgSend_distanceBetweenLabelFrames(void *a1, const char *a2, ...)
{
  return _[a1 distanceBetweenLabelFrames];
}

id objc_msgSend_distanceBetweenLabelFramesWithTitleFont_subtitleFont_multilineTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceBetweenLabelFramesWithTitleFont:subtitleFont:multilineTitle:");
}

id objc_msgSend_distanceFromIndexPath_toIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 distanceFromIndexPath:toIndexPath:];
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return _[a1 distantFuture];
}

id objc_msgSend_distantPast(void *a1, const char *a2, ...)
{
  return _[a1 distantPast];
}

id objc_msgSend_dividerColor(void *a1, const char *a2, ...)
{
  return _[a1 dividerColor];
}

id objc_msgSend_dividerView(void *a1, const char *a2, ...)
{
  return _[a1 dividerView];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_domainVersion(void *a1, const char *a2, ...)
{
  return _[a1 domainVersion];
}

id objc_msgSend_donateEpisodeUuid_stationUuid_isPlaybackFromSiri_completion_(void *a1, const char *a2, ...)
{
  return [a1 donateEpisodeUuid:stationUuid:isPlaybackFromSiri:completion:];
}

id objc_msgSend_donateInteractionWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 donateInteractionWithCompletion:];
}

id objc_msgSend_donateManifestCurrentItem_(void *a1, const char *a2, ...)
{
  return [a1 donateManifestCurrentItem:];
}

id objc_msgSend_donateManifestCurrentItem_playReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateManifestCurrentItem:playReason:");
}

id objc_msgSend_donationQueue(void *a1, const char *a2, ...)
{
  return _[a1 donationQueue];
}

id objc_msgSend_doubleForKey_(void *a1, const char *a2, ...)
{
  return [a1 doubleForKey:];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 downloadAtIndex:];
}

id objc_msgSend_downloadButton(void *a1, const char *a2, ...)
{
  return _[a1 downloadButton];
}

id objc_msgSend_downloadButtonFrameForActionButtonFrame_titleOriginY_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadButtonFrameForActionButtonFrame:titleOriginY:");
}

id objc_msgSend_downloadBytes(void *a1, const char *a2, ...)
{
  return _[a1 downloadBytes];
}

id objc_msgSend_downloadCandidateMediaItems(void *a1, const char *a2, ...)
{
  return _[a1 downloadCandidateMediaItems];
}

id objc_msgSend_downloadDate(void *a1, const char *a2, ...)
{
  return _[a1 downloadDate];
}

id objc_msgSend_downloadDescription(void *a1, const char *a2, ...)
{
  return _[a1 downloadDescription];
}

id objc_msgSend_downloadEpisode_isFromSaving_(void *a1, const char *a2, ...)
{
  return [a1 downloadEpisode:isFromSaving:];
}

id objc_msgSend_downloadIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 downloadIdentifier];
}

id objc_msgSend_downloadImageForPodcastUuid_urlOptions_userInitiated_useBackgroundFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadImageForPodcastUuid:urlOptions:userInitiated:useBackgroundFetch:");
}

id objc_msgSend_downloadImageForPodcastUuid_urlOptions_userInitiated_useBackgroundFetch_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadImageForPodcastUuid:urlOptions:userInitiated:useBackgroundFetch:callback:");
}

id objc_msgSend_downloadImageUrl_cacheKey_userInitiated_backgroundFetch_(void *a1, const char *a2, ...)
{
  return [a1 downloadImageUrl:cacheKey:userInitiated:backgroundFetch:];
}

id objc_msgSend_downloadLimitPodcast(void *a1, const char *a2, ...)
{
  return _[a1 downloadLimitPodcast];
}

id objc_msgSend_downloadLimitVideoPodcast(void *a1, const char *a2, ...)
{
  return _[a1 downloadLimitVideoPodcast];
}

id objc_msgSend_downloadManager(void *a1, const char *a2, ...)
{
  return _[a1 downloadManager];
}

id objc_msgSend_downloadManagerIfSetup(void *a1, const char *a2, ...)
{
  return _[a1 downloadManagerIfSetup];
}

id objc_msgSend_downloadOverdue(void *a1, const char *a2, ...)
{
  return _[a1 downloadOverdue];
}

id objc_msgSend_downloadPhase(void *a1, const char *a2, ...)
{
  return _[a1 downloadPhase];
}

id objc_msgSend_downloadPodcast_triggerBy_allowEpisodesTo404_isImplicitActionRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadPodcast:triggerBy:allowEpisodesTo404:isImplicitActionRequest:completion:");
}

id objc_msgSend_downloadProgress(void *a1, const char *a2, ...)
{
  return _[a1 downloadProgress];
}

id objc_msgSend_downloadSizeLimitForEpisode_(void *a1, const char *a2, ...)
{
  return [a1 downloadSizeLimitForEpisode:];
}

id objc_msgSend_downloaded(void *a1, const char *a2, ...)
{
  return _[a1 downloaded];
}

id objc_msgSend_downloadedCount(void *a1, const char *a2, ...)
{
  return _[a1 downloadedCount];
}

id objc_msgSend_downloadedDate(void *a1, const char *a2, ...)
{
  return _[a1 downloadedDate];
}

id objc_msgSend_downloadedFileHasiPodLibraryURLWithDiscoveryPoint_path_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadedFileHasiPodLibraryURLWithDiscoveryPoint:path:source:");
}

id objc_msgSend_downloadedQueryObserver(void *a1, const char *a2, ...)
{
  return _[a1 downloadedQueryObserver];
}

id objc_msgSend_downloadsNotifier(void *a1, const char *a2, ...)
{
  return _[a1 downloadsNotifier];
}

id objc_msgSend_downloadsSettingsGroup(void *a1, const char *a2, ...)
{
  return _[a1 downloadsSettingsGroup];
}

id objc_msgSend_dryRun(void *a1, const char *a2, ...)
{
  return _[a1 dryRun];
}

id objc_msgSend_dsid(void *a1, const char *a2, ...)
{
  return _[a1 dsid];
}

id objc_msgSend_dsidCheckTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 dsidCheckTimestamp];
}

id objc_msgSend_dumpPlist(void *a1, const char *a2, ...)
{
  return _[a1 dumpPlist];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_durationWatched(void *a1, const char *a2, ...)
{
  return _[a1 durationWatched];
}

id objc_msgSend_earliestBeginTime(void *a1, const char *a2, ...)
{
  return _[a1 earliestBeginTime];
}

id objc_msgSend_editButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 editButtonItem];
}

id objc_msgSend_editingControlRectInBounds_(void *a1, const char *a2, ...)
{
  return [a1 editingControlRectInBounds:];
}

id objc_msgSend_editingStyle(void *a1, const char *a2, ...)
{
  return _[a1 editingStyle];
}

id objc_msgSend_effectiveUserInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 effectiveUserInterfaceLayoutDirection];
}

id objc_msgSend_emptyPropertySet(void *a1, const char *a2, ...)
{
  return _[a1 emptyPropertySet];
}

id objc_msgSend_enable(void *a1, const char *a2, ...)
{
  return _[a1 enable];
}

id objc_msgSend_enableAssetDeletionIfPossible(void *a1, const char *a2, ...)
{
  return _[a1 enableAssetDeletionIfPossible];
}

id objc_msgSend_enableAssetDeletionIfPossible_(void *a1, const char *a2, ...)
{
  return [a1 enableAssetDeletionIfPossible:];
}

id objc_msgSend_enableSubscriptionOnPodcastUUID_from_(void *a1, const char *a2, ...)
{
  return [a1 enableSubscriptionOnPodcastUUID:from:];
}

id objc_msgSend_enableSubscriptionOnPodcastUuid_ctx_(void *a1, const char *a2, ...)
{
  return [a1 enableSubscriptionOnPodcastUuid:ctx:];
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return _[a1 enabled];
}

id objc_msgSend_enclosureURL(void *a1, const char *a2, ...)
{
  return _[a1 enclosureURL];
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return [a1 encodeDouble:forKey:];
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 encodeObject:forKey:];
}

id objc_msgSend_encodedQueryStringFromDictionary_(void *a1, const char *a2, ...)
{
  return [a1 encodedQueryStringFromDictionary:];
}

id objc_msgSend_endBackgroundTask(void *a1, const char *a2, ...)
{
  return _[a1 endBackgroundTask];
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return [a1 endBackgroundTask:];
}

id objc_msgSend_endGeneratingLibraryChangeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 endGeneratingLibraryChangeNotifications];
}

id objc_msgSend_endGeneratingLibraryChangeNotifications_(void *a1, const char *a2, ...)
{
  return [a1 endGeneratingLibraryChangeNotifications:];
}

id objc_msgSend_endIgnoringInteractionEvents(void *a1, const char *a2, ...)
{
  return _[a1 endIgnoringInteractionEvents];
}

id objc_msgSend_endObserving(void *a1, const char *a2, ...)
{
  return _[a1 endObserving];
}

id objc_msgSend_endOfTrack(void *a1, const char *a2, ...)
{
  return _[a1 endOfTrack];
}

id objc_msgSend_endRefreshing(void *a1, const char *a2, ...)
{
  return _[a1 endRefreshing];
}

id objc_msgSend_endTimer_(void *a1, const char *a2, ...)
{
  return [a1 endTimer:];
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _[a1 endUpdates];
}

id objc_msgSend_endedEpisodeUuids(void *a1, const char *a2, ...)
{
  return _[a1 endedEpisodeUuids];
}

id objc_msgSend_engagementRequestForFullSheet(void *a1, const char *a2, ...)
{
  return _[a1 engagementRequestForFullSheet];
}

id objc_msgSend_enqueueWorkBlock_(void *a1, const char *a2, ...)
{
  return [a1 enqueueWorkBlock:];
}

id objc_msgSend_enqueuedByAnotherUser(void *a1, const char *a2, ...)
{
  return _[a1 enqueuedByAnotherUser];
}

id objc_msgSend_entitiesByName(void *a1, const char *a2, ...)
{
  return _[a1 entitiesByName];
}

id objc_msgSend_entitledDuration(void *a1, const char *a2, ...)
{
  return _[a1 entitledDuration];
}

id objc_msgSend_entitledEnclosureURL(void *a1, const char *a2, ...)
{
  return _[a1 entitledEnclosureURL];
}

id objc_msgSend_entitledPriceType(void *a1, const char *a2, ...)
{
  return _[a1 entitledPriceType];
}

id objc_msgSend_entitledTranscriptIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 entitledTranscriptIdentifier];
}

id objc_msgSend_entitledTranscriptProvider(void *a1, const char *a2, ...)
{
  return _[a1 entitledTranscriptProvider];
}

id objc_msgSend_entitledTranscriptSnippet(void *a1, const char *a2, ...)
{
  return _[a1 entitledTranscriptSnippet];
}

id objc_msgSend_entitlementState(void *a1, const char *a2, ...)
{
  return _[a1 entitlementState];
}

id objc_msgSend_entity(void *a1, const char *a2, ...)
{
  return _[a1 entity];
}

id objc_msgSend_entityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return [a1 entityForName:inManagedObjectContext:];
}

id objc_msgSend_entityLoadingBlock(void *a1, const char *a2, ...)
{
  return _[a1 entityLoadingBlock];
}

id objc_msgSend_entityName(void *a1, const char *a2, ...)
{
  return _[a1 entityName];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateKeysAndObjectsUsingBlock:];
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsUsingBlock:];
}

id objc_msgSend_enumerateUnvisitedItemUuids_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateUnvisitedItemUuids:");
}

id objc_msgSend_enumerateValuesForProperties_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateValuesForProperties:usingBlock:];
}

id objc_msgSend_episode(void *a1, const char *a2, ...)
{
  return _[a1 episode];
}

id objc_msgSend_episodeAdamId(void *a1, const char *a2, ...)
{
  return _[a1 episodeAdamId];
}

id objc_msgSend_episodeAdamIds(void *a1, const char *a2, ...)
{
  return _[a1 episodeAdamIds];
}

id objc_msgSend_episodeArtworkProperties(void *a1, const char *a2, ...)
{
  return _[a1 episodeArtworkProperties];
}

id objc_msgSend_episodeCache(void *a1, const char *a2, ...)
{
  return _[a1 episodeCache];
}

id objc_msgSend_episodeCacheForStoreMediaDictionaries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "episodeCacheForStoreMediaDictionaries:");
}

id objc_msgSend_episodeCacheWithPredicate_inCtx_(void *a1, const char *a2, ...)
{
  return [a1 episodeCacheWithPredicate:inCtx:];
}

id objc_msgSend_episodeCount(void *a1, const char *a2, ...)
{
  return _[a1 episodeCount];
}

id objc_msgSend_episodeDisplayGroup(void *a1, const char *a2, ...)
{
  return _[a1 episodeDisplayGroup];
}

id objc_msgSend_episodeForAssetUrl_(void *a1, const char *a2, ...)
{
  return [a1 episodeForAssetUrl:];
}

id objc_msgSend_episodeForDownloadAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 episodeForDownloadAtIndex:];
}

id objc_msgSend_episodeForEnclosure_(void *a1, const char *a2, ...)
{
  return [a1 episodeForEnclosure:];
}

id objc_msgSend_episodeForGuid_(void *a1, const char *a2, ...)
{
  return [a1 episodeForGuid:];
}

id objc_msgSend_episodeForPersistentID_(void *a1, const char *a2, ...)
{
  return [a1 episodeForPersistentID:];
}

id objc_msgSend_episodeForPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 episodeForPlayerItem:];
}

id objc_msgSend_episodeForTitle_pubDate_(void *a1, const char *a2, ...)
{
  return [a1 episodeForTitle:pubDate:];
}

id objc_msgSend_episodeForUUID_(void *a1, const char *a2, ...)
{
  return [a1 episodeForUUID:];
}

id objc_msgSend_episodeForUuid_(void *a1, const char *a2, ...)
{
  return [a1 episodeForUuid:];
}

id objc_msgSend_episodeGUID(void *a1, const char *a2, ...)
{
  return _[a1 episodeGUID];
}

id objc_msgSend_episodeGuid(void *a1, const char *a2, ...)
{
  return _[a1 episodeGuid];
}

id objc_msgSend_episodeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 episodeIdentifier];
}

id objc_msgSend_episodeIntents(void *a1, const char *a2, ...)
{
  return _[a1 episodeIntents];
}

id objc_msgSend_episodeLimit(void *a1, const char *a2, ...)
{
  return _[a1 episodeLimit];
}

id objc_msgSend_episodeLimitDefaultValue(void *a1, const char *a2, ...)
{
  return _[a1 episodeLimitDefaultValue];
}

id objc_msgSend_episodeLimitForKey_(void *a1, const char *a2, ...)
{
  return [a1 episodeLimitForKey:];
}

id objc_msgSend_episodeLimitResolvedValue(void *a1, const char *a2, ...)
{
  return _[a1 episodeLimitResolvedValue];
}

id objc_msgSend_episodeLockup(void *a1, const char *a2, ...)
{
  return _[a1 episodeLockup];
}

id objc_msgSend_episodeMigrationForVersion0to1_(void *a1, const char *a2, ...)
{
  return [a1 episodeMigrationForVersion0to1:];
}

id objc_msgSend_episodeMigrationForVersion13to14_(void *a1, const char *a2, ...)
{
  return [a1 episodeMigrationForVersion13to14:];
}

id objc_msgSend_episodeMigrationForVersion16to17_(void *a1, const char *a2, ...)
{
  return [a1 episodeMigrationForVersion16to17:];
}

id objc_msgSend_episodeMigrationForVersion17to18_(void *a1, const char *a2, ...)
{
  return [a1 episodeMigrationForVersion17to18:];
}

id objc_msgSend_episodeMigrationForVersion21to22_(void *a1, const char *a2, ...)
{
  return [a1 episodeMigrationForVersion21to22:];
}

id objc_msgSend_episodeMigrationForVersion23to24_(void *a1, const char *a2, ...)
{
  return [a1 episodeMigrationForVersion23to24:];
}

id objc_msgSend_episodeMigrationForVersion24to25_(void *a1, const char *a2, ...)
{
  return [a1 episodeMigrationForVersion24to25:];
}

id objc_msgSend_episodeMigrationForVersion29to30_(void *a1, const char *a2, ...)
{
  return [a1 episodeMigrationForVersion29to30];
}

id objc_msgSend_episodeMigrationForVersion6to7_(void *a1, const char *a2, ...)
{
  return [a1 episodeMigrationForVersion6to7:];
}

id objc_msgSend_episodeNumber(void *a1, const char *a2, ...)
{
  return _[a1 episodeNumber];
}

id objc_msgSend_episodeObjectID(void *a1, const char *a2, ...)
{
  return _[a1 episodeObjectID];
}

id objc_msgSend_episodeObserverForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 episodeObserverForPodcastUuid:];
}

id objc_msgSend_episodeObservers(void *a1, const char *a2, ...)
{
  return _[a1 episodeObservers];
}

id objc_msgSend_episodeOrderSettingsGroup(void *a1, const char *a2, ...)
{
  return _[a1 episodeOrderSettingsGroup];
}

id objc_msgSend_episodePredicateForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 episodePredicateForPodcast:];
}

id objc_msgSend_episodeResultsChangedForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 episodeResultsChangedForPodcastUuid:];
}

id objc_msgSend_episodeSection_didChangeObject_atIndex_forChangeType_newIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "episodeSection:didChangeObject:atIndex:forChangeType:newIndex:");
}

id objc_msgSend_episodeSection_didChangeObject_atIndexPath_forChangeType_newIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "episodeSection:didChangeObject:atIndexPath:forChangeType:newIndexPath:");
}

id objc_msgSend_episodeSerpentID(void *a1, const char *a2, ...)
{
  return _[a1 episodeSerpentID];
}

id objc_msgSend_episodeShareUrl(void *a1, const char *a2, ...)
{
  return _[a1 episodeShareUrl];
}

id objc_msgSend_episodeSortDescriptorsForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 episodeSortDescriptorsForPodcast:];
}

id objc_msgSend_episodeStoreId(void *a1, const char *a2, ...)
{
  return _[a1 episodeStoreId];
}

id objc_msgSend_episodeSyncStorage(void *a1, const char *a2, ...)
{
  return _[a1 episodeSyncStorage];
}

id objc_msgSend_episodeType(void *a1, const char *a2, ...)
{
  return _[a1 episodeType];
}

id objc_msgSend_episodeTypeResolvedValue(void *a1, const char *a2, ...)
{
  return _[a1 episodeTypeResolvedValue];
}

id objc_msgSend_episodeUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 episodeUUIDs];
}

id objc_msgSend_episodeUuid(void *a1, const char *a2, ...)
{
  return _[a1 episodeUuid];
}

id objc_msgSend_episodeUuidForActivity_completion_(void *a1, const char *a2, ...)
{
  return [a1 episodeUuidForActivity:completion:];
}

id objc_msgSend_episodeUuidForDownloadWithAdamID_(void *a1, const char *a2, ...)
{
  return [a1 episodeUuidForDownloadWithAdamID];
}

id objc_msgSend_episodeUuidForSetPlaybackQueueRequestIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "episodeUuidForSetPlaybackQueueRequestIdentifier:");
}

id objc_msgSend_episodeUuidObserver_resultsChangedForPodcast_withDeletedIds_andInsertIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "episodeUuidObserver:resultsChangedForPodcast:withDeletedIds:andInsertIds:");
}

id objc_msgSend_episodeUuids(void *a1, const char *a2, ...)
{
  return _[a1 episodeUuids];
}

id objc_msgSend_episodeWithValue_forPropertyKey_(void *a1, const char *a2, ...)
{
  return [a1 episodeWithValue:forPropertyKey:];
}

id objc_msgSend_episodes(void *a1, const char *a2, ...)
{
  return _[a1 episodes];
}

id objc_msgSend_episodesInLatestSeasonWithLimit_(void *a1, const char *a2, ...)
{
  return [a1 episodesInLatestSeasonWithLimit:];
}

id objc_msgSend_episodesOptionArray_defaultValue_(void *a1, const char *a2, ...)
{
  return [a1 episodesOptionArray:defaultValue:];
}

id objc_msgSend_episodesOptionValues(void *a1, const char *a2, ...)
{
  return _[a1 episodesOptionValues];
}

id objc_msgSend_episodesToKeepDefaultValue(void *a1, const char *a2, ...)
{
  return _[a1 episodesToKeepDefaultValue];
}

id objc_msgSend_episodesToKeepSetting(void *a1, const char *a2, ...)
{
  return _[a1 episodesToKeepSetting];
}

id objc_msgSend_episodesToKeepToEpisodeLimit_(void *a1, const char *a2, ...)
{
  return [a1 episodesToKeepToEpisodeLimit:];
}

id objc_msgSend_episodesToShow(void *a1, const char *a2, ...)
{
  return _[a1 episodesToShow];
}

id objc_msgSend_episodesWithMissingAdamIdsForPodcast_withContext_(void *a1, const char *a2, ...)
{
  return [a1 episodesWithMissingAdamIdsForPodcast:withContext:];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorCannotGenerateInternalURL(void *a1, const char *a2, ...)
{
  return _[a1 errorCannotGenerateInternalURL];
}

id objc_msgSend_errorCode(void *a1, const char *a2, ...)
{
  return _[a1 errorCode];
}

id objc_msgSend_errorComment(void *a1, const char *a2, ...)
{
  return _[a1 errorComment];
}

id objc_msgSend_errorDomain(void *a1, const char *a2, ...)
{
  return _[a1 errorDomain];
}

id objc_msgSend_errorLog(void *a1, const char *a2, ...)
{
  return _[a1 errorLog];
}

id objc_msgSend_errorStatusCode(void *a1, const char *a2, ...)
{
  return _[a1 errorStatusCode];
}

id objc_msgSend_errorURLDoesNotExist(void *a1, const char *a2, ...)
{
  return _[a1 errorURLDoesNotExist];
}

id objc_msgSend_errorURLInvalid(void *a1, const char *a2, ...)
{
  return _[a1 errorURLInvalid];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_evaluateWithObject_(void *a1, const char *a2, ...)
{
  return [a1 evaluateWithObject:];
}

id objc_msgSend_eventId(void *a1, const char *a2, ...)
{
  return _[a1 eventId];
}

id objc_msgSend_eventWithAccessLog_dataSource_(void *a1, const char *a2, ...)
{
  return [a1 eventWithAccessLog:dataSource:];
}

id objc_msgSend_events(void *a1, const char *a2, ...)
{
  return _[a1 events];
}

id objc_msgSend_exactDescriptionSizeForOrigin_viewWidth_titleFrame_actionButtonFrame_downloadButtonFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exactDescriptionSizeForOrigin:viewWidth:titleFrame:actionButtonFrame:downloadButtonFrame:style:");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 exceptionWithName:reason:userInfo:];
}

id objc_msgSend_executeAction_using_andToken_(void *a1, const char *a2, ...)
{
  return [a1 executeAction:using:andToken:];
}

id objc_msgSend_executeFetchRequest_(void *a1, const char *a2, ...)
{
  return [a1 executeFetchRequest:];
}

id objc_msgSend_executeFetchRequest_error_(void *a1, const char *a2, ...)
{
  return [a1 executeFetchRequest:error:];
}

id objc_msgSend_executeRequest_error_(void *a1, const char *a2, ...)
{
  return [a1 executeRequest:error:];
}

id objc_msgSend_existingDownloadedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 existingDownloadedEpisodes];
}

id objc_msgSend_existingEpisodeWithID_(void *a1, const char *a2, ...)
{
  return [a1 existingEpisodeWithID:];
}

id objc_msgSend_existingObjectWithID_error_(void *a1, const char *a2, ...)
{
  return [a1 existingObjectWithID:error:];
}

id objc_msgSend_exists_(void *a1, const char *a2, ...)
{
  return [a1 exists:];
}

id objc_msgSend_expandFeedUrls_(void *a1, const char *a2, ...)
{
  return [a1 expandFeedUrls];
}

id objc_msgSend_expandedIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 expandedIndexPath];
}

id objc_msgSend_expirationBlock(void *a1, const char *a2, ...)
{
  return _[a1 expirationBlock];
}

id objc_msgSend_expirationDate(void *a1, const char *a2, ...)
{
  return _[a1 expirationDate];
}

id objc_msgSend_explicit(void *a1, const char *a2, ...)
{
  return _[a1 explicit];
}

id objc_msgSend_explicitIcon(void *a1, const char *a2, ...)
{
  return _[a1 explicitIcon];
}

id objc_msgSend_explicitIconView(void *a1, const char *a2, ...)
{
  return _[a1 explicitIconView];
}

id objc_msgSend_explicitSortOrder(void *a1, const char *a2, ...)
{
  return _[a1 explicitSortOrder];
}

id objc_msgSend_exposeActionsAnimated_(void *a1, const char *a2, ...)
{
  return [a1 exposeActionsAnimated:];
}

id objc_msgSend_exposedActions(void *a1, const char *a2, ...)
{
  return _[a1 exposedActions];
}

id objc_msgSend_externalFeedDownloader(void *a1, const char *a2, ...)
{
  return _[a1 externalFeedDownloader];
}

id objc_msgSend_externalGuid(void *a1, const char *a2, ...)
{
  return _[a1 externalGuid];
}

id objc_msgSend_externalType(void *a1, const char *a2, ...)
{
  return _[a1 externalType];
}

id objc_msgSend_externallyProcessedMOIDs(void *a1, const char *a2, ...)
{
  return _[a1 externallyProcessedMOIDs];
}

id objc_msgSend_fairPlayKeyLoader(void *a1, const char *a2, ...)
{
  return _[a1 fairPlayKeyLoader];
}

id objc_msgSend_fairPlayKeySession(void *a1, const char *a2, ...)
{
  return _[a1 fairPlayKeySession];
}

id objc_msgSend_fairPlayMigrationBackgroundTask(void *a1, const char *a2, ...)
{
  return _[a1 fairPlayMigrationBackgroundTask];
}

id objc_msgSend_fairPlayMigrationRetryCount(void *a1, const char *a2, ...)
{
  return _[a1 fairPlayMigrationRetryCount];
}

id objc_msgSend_fairPlayValidationManager(void *a1, const char *a2, ...)
{
  return _[a1 fairPlayValidationManager];
}

id objc_msgSend_falsePredicate(void *a1, const char *a2, ...)
{
  return _[a1 falsePredicate];
}

id objc_msgSend_fatalSyncError(void *a1, const char *a2, ...)
{
  return _[a1 fatalSyncError];
}

id objc_msgSend_feedChangedDate(void *a1, const char *a2, ...)
{
  return _[a1 feedChangedDate];
}

id objc_msgSend_feedDeleted(void *a1, const char *a2, ...)
{
  return _[a1 feedDeleted];
}

id objc_msgSend_feedDescription(void *a1, const char *a2, ...)
{
  return _[a1 feedDescription];
}

id objc_msgSend_feedDownloadedWithError_task_requestedUrl_(void *a1, const char *a2, ...)
{
  return [a1 feedDownloadedWithError:task:requestedUrl:];
}

id objc_msgSend_feedManager(void *a1, const char *a2, ...)
{
  return _[a1 feedManager];
}

id objc_msgSend_feedProcessingQueue(void *a1, const char *a2, ...)
{
  return _[a1 feedProcessingQueue];
}

id objc_msgSend_feedSections(void *a1, const char *a2, ...)
{
  return _[a1 feedSections];
}

id objc_msgSend_feedURL(void *a1, const char *a2, ...)
{
  return _[a1 feedURL];
}

id objc_msgSend_feedURLComposer(void *a1, const char *a2, ...)
{
  return _[a1 feedURLComposer];
}

id objc_msgSend_feedURLForOptionalURL_adamID_error_(void *a1, const char *a2, ...)
{
  return [a1 feedURLForOptionalURL:error:];
}

id objc_msgSend_feedURLIsEmpty(void *a1, const char *a2, ...)
{
  return _[a1 feedURLIsEmpty];
}

id objc_msgSend_feedUpdateAllPodcastsOnForeground(void *a1, const char *a2, ...)
{
  return _[a1 feedUpdateAllPodcastsOnForeground];
}

id objc_msgSend_feedUpdateBeginTime(void *a1, const char *a2, ...)
{
  return _[a1 feedUpdateBeginTime];
}

id objc_msgSend_feedUpdateNeedsRetry(void *a1, const char *a2, ...)
{
  return _[a1 feedUpdateNeedsRetry];
}

id objc_msgSend_feedUpdatesDisabled(void *a1, const char *a2, ...)
{
  return _[a1 feedUpdatesDisabled];
}

id objc_msgSend_feedUrl(void *a1, const char *a2, ...)
{
  return _[a1 feedUrl];
}

id objc_msgSend_feedUrlFromModernKey_(void *a1, const char *a2, ...)
{
  return [a1 feedUrlFromModernKey:];
}

id objc_msgSend_feedUrlsToParams(void *a1, const char *a2, ...)
{
  return _[a1 feedUrlsToParams];
}

id objc_msgSend_fetchActiveAccountWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 fetchActiveAccountWithCompletion:];
}

id objc_msgSend_fetchArtworkForPlayerItem_contentItem_atTime_ofSize_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchArtworkForPlayerItem:contentItem:atTime:ofSize:completion:");
}

id objc_msgSend_fetchBatchSize(void *a1, const char *a2, ...)
{
  return _[a1 fetchBatchSize];
}

id objc_msgSend_fetchChannelUpdatesCheckingEntitlementsNotification(void *a1, const char *a2, ...)
{
  return _[a1 fetchChannelUpdatesCheckingEntitlementsNotification];
}

id objc_msgSend_fetchEntityName(void *a1, const char *a2, ...)
{
  return _[a1 fetchEntityName];
}

id objc_msgSend_fetchFeedsExpectedToUpdate(void *a1, const char *a2, ...)
{
  return _[a1 fetchFeedsExpectedToUpdate];
}

id objc_msgSend_fetchHistoryAfterToken_(void *a1, const char *a2, ...)
{
  return [a1 fetchHistoryAfterToken:];
}

id objc_msgSend_fetchImageWithTemplateURL_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 fetchImageWithTemplateURL:completionHandler:];
}

id objc_msgSend_fetchInfoCenterArtworkWith_at_of_completion_(void *a1, const char *a2, ...)
{
  return [a1 fetchInfoCenterArtworkWith:at:of:completion:];
}

id objc_msgSend_fetchLimit(void *a1, const char *a2, ...)
{
  return _[a1 fetchLimit];
}

id objc_msgSend_fetchManagedObjectModelFromDisk(void *a1, const char *a2, ...)
{
  return _[a1 fetchManagedObjectModelFromDisk];
}

id objc_msgSend_fetchMediaDataForEpisodeStoreId_podcastStoreId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMediaDataForEpisodeStoreId:podcastStoreId:completion:");
}

id objc_msgSend_fetchOutOfDateShowUUIDsWith_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 fetchOutOfDateShowUUIDsWith:completionHandler:];
}

id objc_msgSend_fetchOutOfDateShowUUIDsWithIncludeImplicit_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 fetchOutOfDateShowUUIDsWithIncludeImplicit:completionHandler:];
}

id objc_msgSend_fetchPlayerItemsFor_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPlayerItemsFor:completion:");
}

id objc_msgSend_fetchPlayerItemsForPlaybackQueueRequestIdentifiers_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPlayerItemsForPlaybackQueueRequestIdentifiers:completion:");
}

id objc_msgSend_fetchPlayerItemsForPlaybackQueueRequestIdentifiers_initiatedByAnotherUser_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPlayerItemsForPlaybackQueueRequestIdentifiers:initiatedByAnotherUser:completion:");
}

id objc_msgSend_fetchPlayerItemsForStoreTrackIDs_initiatedByAnotherUser_completion_(void *a1, const char *a2, ...)
{
  return [a1 fetchPlayerItemsForStoreTrackIDs:initiatedByAnotherUser:completion:];
}

id objc_msgSend_fetchPredicate(void *a1, const char *a2, ...)
{
  return _[a1 fetchPredicate];
}

id objc_msgSend_fetchRequest(void *a1, const char *a2, ...)
{
  return _[a1 fetchRequest];
}

id objc_msgSend_fetchRequestForIndexType_(void *a1, const char *a2, ...)
{
  return [a1 fetchRequestForIndexType:];
}

id objc_msgSend_fetchRequestForIndexType_additionalPredicate_(void *a1, const char *a2, ...)
{
  return [a1 fetchRequestForIndexType:additionalPredicate:];
}

id objc_msgSend_fetchRequestInManagedObjectContext_(void *a1, const char *a2, ...)
{
  return [a1 fetchRequestInManagedObjectContext:];
}

id objc_msgSend_fetchRequestWithEntityName_(void *a1, const char *a2, ...)
{
  return [a1 fetchRequestWithEntityName:];
}

id objc_msgSend_fetchedObjects(void *a1, const char *a2, ...)
{
  return _[a1 fetchedObjects];
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return [a1 fileExistsAtPath:];
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 fileExistsAtPath:isDirectory:];
}

id objc_msgSend_fileExtension(void *a1, const char *a2, ...)
{
  return _[a1 fileExtension];
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return _[a1 fileSize];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileType(void *a1, const char *a2, ...)
{
  return _[a1 fileType];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPath:];
}

id objc_msgSend_fileURLWithPathComponents_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPathComponents:];
}

id objc_msgSend_filter_compactMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filter:compactMap:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return [a1 filteredArrayUsingPredicate:];
}

id objc_msgSend_findDuplicateItemsWithEntity_itemsToLookAtFilter_keysThatMustMatchToBeConsideredADuplicate_keysThatShouldNotBeDuplicated_keyValuesOfDuplicatedItemsToReturn_sortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findDuplicateItemsWithEntity:itemsToLookAtFilter:keysThatMustMatchToBeConsideredADuplicate:keysThatShouldNotBeDuplicated:keyValuesOfDuplicatedItemsToReturn:sortDescriptors:");
}

id objc_msgSend_findEpisodeByFeedURL_guid_inContext_(void *a1, const char *a2, ...)
{
  return [a1 findEpisodeByFeedURL:guid:inContext:];
}

id objc_msgSend_findEpisodeByStoreID_inContext_(void *a1, const char *a2, ...)
{
  return [a1 findEpisodeByStoreID:inContext:];
}

id objc_msgSend_findEpisodeWithRequest_(void *a1, const char *a2, ...)
{
  return [a1 findEpisodeWithRequest:];
}

id objc_msgSend_findIndexOfCommand_inArray_(void *a1, const char *a2, ...)
{
  return [a1 findIndexOfCommand:inArray:];
}

id objc_msgSend_finish(void *a1, const char *a2, ...)
{
  return _[a1 finish];
}

id objc_msgSend_finishSuccessfulTransactionWithNewVersion_finishedBlock_(void *a1, const char *a2, ...)
{
  return [a1 finishSuccessfulTransactionWithNewVersion:finishedBlock:];
}

id objc_msgSend_finishTaskOperationWithResult_error_(void *a1, const char *a2, ...)
{
  return [a1 finishTaskOperationWithResult:nil error:nil];
}

id objc_msgSend_finishWithResult_(void *a1, const char *a2, ...)
{
  return [a1 finishWithResult:];
}

id objc_msgSend_finishWithStatus_(void *a1, const char *a2, ...)
{
  return [a1 finishWithStatus:];
}

id objc_msgSend_finished(void *a1, const char *a2, ...)
{
  return _[a1 finished];
}

id objc_msgSend_finishedHandler(void *a1, const char *a2, ...)
{
  return _[a1 finishedHandler];
}

id objc_msgSend_finishedWithoutURL(void *a1, const char *a2, ...)
{
  return _[a1 finishedWithoutURL];
}

id objc_msgSend_firstAttribute(void *a1, const char *a2, ...)
{
  return _[a1 firstAttribute];
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return _[a1 firstIndex];
}

id objc_msgSend_firstItem(void *a1, const char *a2, ...)
{
  return _[a1 firstItem];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstTimeAvailable(void *a1, const char *a2, ...)
{
  return _[a1 firstTimeAvailable];
}

id objc_msgSend_firstTimeAvailableAsFree(void *a1, const char *a2, ...)
{
  return _[a1 firstTimeAvailableAsFree];
}

id objc_msgSend_firstTimeAvailableAsPaid(void *a1, const char *a2, ...)
{
  return _[a1 firstTimeAvailableAsPaid];
}

id objc_msgSend_firstValidIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 firstValidIndexPath];
}

id objc_msgSend_fixEmptyTextContainers(void *a1, const char *a2, ...)
{
  return _[a1 fixEmptyTextContainers];
}

id objc_msgSend_fixupDataMigrationVersion(void *a1, const char *a2, ...)
{
  return _[a1 fixupDataMigrationVersion];
}

id objc_msgSend_flags(void *a1, const char *a2, ...)
{
  return _[a1 flags];
}

id objc_msgSend_floatForKey_(void *a1, const char *a2, ...)
{
  return [a1 floatForKey:];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flushInvocations(void *a1, const char *a2, ...)
{
  return _[a1 flushInvocations];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_fontDescriptorWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return [a1 fontDescriptorWithSymbolicTraits:];
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return [a1 fontWithDescriptor:];
}

id objc_msgSend_footerAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 footerAttributedString:];
}

id objc_msgSend_footerAttributedString_additionalAttributeName_additionalAttributeValue_additionalAttributeRange_(void *a1, const char *a2, ...)
{
  return [a1 footerAttributedString:additionalAttributeName:additionalAttributeValue:additionalAttributeRange:];
}

id objc_msgSend_footerCallback(void *a1, const char *a2, ...)
{
  return _[a1 footerCallback];
}

id objc_msgSend_footerFrameForDescriptionButtonFrame_descriptionFrame_(void *a1, const char *a2, ...)
{
  return [a1 footerFrameForDescriptionButtonFrame:descriptionFrame:];
}

id objc_msgSend_footerText(void *a1, const char *a2, ...)
{
  return _[a1 footerText];
}

id objc_msgSend_footerTextStyle(void *a1, const char *a2, ...)
{
  return _[a1 footerTextStyle];
}

id objc_msgSend_footerTextView(void *a1, const char *a2, ...)
{
  return _[a1 footerTextView];
}

id objc_msgSend_forceFetchLatestChannelUpdates(void *a1, const char *a2, ...)
{
  return _[a1 forceFetchLatestChannelUpdates];
}

id objc_msgSend_forceUpdateDatabaseFromMediaLibraryWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 forceUpdateDatabaseFromMediaLibraryWithCompletion:];
}

id objc_msgSend_foreground(void *a1, const char *a2, ...)
{
  return _[a1 foreground];
}

id objc_msgSend_formatArtworkUrlWithString_for_cropCode_fileExtension_(void *a1, const char *a2, ...)
{
  return [a1 formatArtworkUrlWithString:for:cropCode:fileExtension:];
}

id objc_msgSend_formatDate_(void *a1, const char *a2, ...)
{
  return [a1 formatDate:];
}

id objc_msgSend_forwardInvocation_(void *a1, const char *a2, ...)
{
  return [a1 forwardInvocation:];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_frc(void *a1, const char *a2, ...)
{
  return _[a1 frc];
}

id objc_msgSend_freeDuration(void *a1, const char *a2, ...)
{
  return _[a1 freeDuration];
}

id objc_msgSend_freeEnclosureURL(void *a1, const char *a2, ...)
{
  return _[a1 freeEnclosureURL];
}

id objc_msgSend_freePriceType(void *a1, const char *a2, ...)
{
  return _[a1 freePriceType];
}

id objc_msgSend_freeTranscriptIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 freeTranscriptIdentifier];
}

id objc_msgSend_freeTranscriptProvider(void *a1, const char *a2, ...)
{
  return _[a1 freeTranscriptProvider];
}

id objc_msgSend_freeTranscriptSnippet(void *a1, const char *a2, ...)
{
  return _[a1 freeTranscriptSnippet];
}

id objc_msgSend_friendlyDisplayString(void *a1, const char *a2, ...)
{
  return _[a1 friendlyDisplayString];
}

id objc_msgSend_generateChangesForExistingObjects_newObjects_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateChangesForExistingObjects:newObjects:inSection:");
}

id objc_msgSend_generatedDate(void *a1, const char *a2, ...)
{
  return _[a1 generatedDate];
}

id objc_msgSend_generator(void *a1, const char *a2, ...)
{
  return _[a1 generator];
}

id objc_msgSend_generator_didChangeObject_atIndexPath_forChangeType_newIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generator:didChangeObject:atIndexPath:forChangeType:newIndexPath:");
}

id objc_msgSend_genericError(void *a1, const char *a2, ...)
{
  return _[a1 genericError];
}

id objc_msgSend_getAllTasksWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getAllTasksWithCompletionHandler:];
}

id objc_msgSend_getBadgeNumberWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getBadgeNumberWithCompletionHandler:];
}

id objc_msgSend_getContinuationStreamsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getContinuationStreamsWithCompletionHandler:];
}

id objc_msgSend_getDeliveredNotificationsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getDeliveredNotificationsWithCompletionHandler:];
}

id objc_msgSend_getHomeUserIdForSharedUserId_completion_(void *a1, const char *a2, ...)
{
  return [a1 getHomeUserIdForSharedUserId:completion:];
}

id objc_msgSend_getNotificationSettingsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getNotificationSettingsWithCompletionHandler:];
}

id objc_msgSend_getNowPlayingInfoForMagicMomentInfoCenterWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 getNowPlayingInfoForMagicMomentInfoCenterWithCompletion:];
}

id objc_msgSend_getObjectId_andIndexPath_forItemWithUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getObjectId:andIndexPath:forItemWithUuid:");
}

id objc_msgSend_getPendingNotificationRequestsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPendingNotificationRequestsWithCompletionHandler:");
}

id objc_msgSend_getPendingTaskRequestsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getPendingTaskRequestsWithCompletionHandler:];
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return [a1 getResourceValue:forKey:error:];
}

id objc_msgSend_getStoreInfoForEpisodesWithAdamIds_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStoreInfoForEpisodesWithAdamIds:callback:");
}

id objc_msgSend_getStoreInfoForPodcastWithAdamId_callback_(void *a1, const char *a2, ...)
{
  return [a1 getStoreInfoForPodcastWithAdamId:callback:];
}

id objc_msgSend_globalDownloadPolicyRequiresMigration(void *a1, const char *a2, ...)
{
  return _[a1 globalDownloadPolicyRequiresMigration];
}

id objc_msgSend_globalImageURL(void *a1, const char *a2, ...)
{
  return _[a1 globalImageURL];
}

id objc_msgSend_globalRetentionPolicy(void *a1, const char *a2, ...)
{
  return _[a1 globalRetentionPolicy];
}

id objc_msgSend_globallyUniqueString(void *a1, const char *a2, ...)
{
  return _[a1 globallyUniqueString];
}

id objc_msgSend_goneDarkColor(void *a1, const char *a2, ...)
{
  return _[a1 goneDarkColor];
}

id objc_msgSend_group(void *a1, const char *a2, ...)
{
  return _[a1 group];
}

id objc_msgSend_groupFooter(void *a1, const char *a2, ...)
{
  return _[a1 groupFooter];
}

id objc_msgSend_groupSettings(void *a1, const char *a2, ...)
{
  return _[a1 groupSettings];
}

id objc_msgSend_groupTitle(void *a1, const char *a2, ...)
{
  return _[a1 groupTitle];
}

id objc_msgSend_groupWithTitle_footerText_settings_(void *a1, const char *a2, ...)
{
  return [a1 groupWithTitle:footerText:settings:];
}

id objc_msgSend_groupWithTitle_footerText_settingsHandler_(void *a1, const char *a2, ...)
{
  return [a1 groupWithTitle:footerText:settingsHandler:];
}

id objc_msgSend_groupedFooterConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 groupedFooterConfiguration];
}

id objc_msgSend_groups(void *a1, const char *a2, ...)
{
  return _[a1 groups];
}

id objc_msgSend_guid(void *a1, const char *a2, ...)
{
  return _[a1 guid];
}

id objc_msgSend_halfPlayedIcon(void *a1, const char *a2, ...)
{
  return _[a1 halfPlayedIcon];
}

id objc_msgSend_handleEventsForBackgroundURLSessionFor_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 handleEventsForBackgroundURLSessionFor:completionHandler:];
}

id objc_msgSend_handleEventsForBackgroundURLSessionWithIdentifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEventsForBackgroundURLSessionWithIdentifier:handler:");
}

id objc_msgSend_handleNotification_(void *a1, const char *a2, ...)
{
  return [a1 handleNotification:];
}

id objc_msgSend_handleNotificationResponse_bag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNotificationResponse:bag:");
}

id objc_msgSend_handlePodcastsUrlScheme_(void *a1, const char *a2, ...)
{
  return [a1 handlePodcastsUrlScheme:];
}

id objc_msgSend_handleiTMSUrlScheme_(void *a1, const char *a2, ...)
{
  return [a1 handleiTMSUrlScheme:];
}

id objc_msgSend_handlers(void *a1, const char *a2, ...)
{
  return _[a1 handlers];
}

id objc_msgSend_hasAccountChangedSinceLastSync(void *a1, const char *a2, ...)
{
  return _[a1 hasAccountChangedSinceLastSync];
}

id objc_msgSend_hasAnyObjectsInEntity_satisfyingPredicate_(void *a1, const char *a2, ...)
{
  return [a1 hasAnyObjectsInEntity:satisfyingPredicate:];
}

id objc_msgSend_hasArtworkForShow_withDimensions_fromSource_(void *a1, const char *a2, ...)
{
  return [a1 hasArtworkForShow:withDimensions:fromSource:];
}

id objc_msgSend_hasAuthenticatedTooRecentlyForTransaction_error_(void *a1, const char *a2, ...)
{
  return [a1 hasAuthenticatedTooRecentlyForTransaction:error:];
}

id objc_msgSend_hasBackoff(void *a1, const char *a2, ...)
{
  return _[a1 hasBackoff];
}

id objc_msgSend_hasBeenInactiveForTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 hasBeenInactiveForTimeInterval:];
}

id objc_msgSend_hasBeenIndexed(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenIndexed];
}

id objc_msgSend_hasBeenPlayed(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenPlayed];
}

id objc_msgSend_hasBeenPlayedForPlayState_(void *a1, const char *a2, ...)
{
  return [a1 hasBeenPlayedForPlayState:];
}

id objc_msgSend_hasBeenSynced(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenSynced];
}

id objc_msgSend_hasBookmarksSync(void *a1, const char *a2, ...)
{
  return _[a1 hasBookmarksSync];
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return _[a1 hasChanges];
}

id objc_msgSend_hasCheckQueued(void *a1, const char *a2, ...)
{
  return _[a1 hasCheckQueued];
}

id objc_msgSend_hasData(void *a1, const char *a2, ...)
{
  return _[a1 hasData];
}

id objc_msgSend_hasDefaultInstance(void *a1, const char *a2, ...)
{
  return _[a1 hasDefaultInstance];
}

id objc_msgSend_hasDeferredIndexAll(void *a1, const char *a2, ...)
{
  return _[a1 hasDeferredIndexAll];
}

id objc_msgSend_hasDeletes(void *a1, const char *a2, ...)
{
  return _[a1 hasDeletes];
}

id objc_msgSend_hasDeterminedActualGlobalCellularState(void *a1, const char *a2, ...)
{
  return _[a1 hasDeterminedActualGlobalCellularState];
}

id objc_msgSend_hasEnabledSettings(void *a1, const char *a2, ...)
{
  return _[a1 hasEnabledSettings];
}

id objc_msgSend_hasEndedVisitingEpisode_(void *a1, const char *a2, ...)
{
  return [a1 hasEndedVisitingEpisode:];
}

id objc_msgSend_hasEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 hasEpisodes];
}

id objc_msgSend_hasFRCChanges(void *a1, const char *a2, ...)
{
  return _[a1 hasFRCChanges];
}

id objc_msgSend_hasFetchedInitialAccount(void *a1, const char *a2, ...)
{
  return _[a1 hasFetchedInitialAccount];
}

id objc_msgSend_hasHTML(void *a1, const char *a2, ...)
{
  return _[a1 hasHTML];
}

id objc_msgSend_hasIndexingOperationInProgress(void *a1, const char *a2, ...)
{
  return _[a1 hasIndexingOperationInProgress];
}

id objc_msgSend_hasInserts(void *a1, const char *a2, ...)
{
  return _[a1 hasInserts];
}

id objc_msgSend_hasInsertsForEntityNames_(void *a1, const char *a2, ...)
{
  return [a1 hasInsertsForEntityNames:];
}

id objc_msgSend_hasInterestSyncVersion(void *a1, const char *a2, ...)
{
  return _[a1 hasInterestSyncVersion];
}

id objc_msgSend_hasItemForKey_(void *a1, const char *a2, ...)
{
  return [a1 hasItemForKey:];
}

id objc_msgSend_hasLocalChanges(void *a1, const char *a2, ...)
{
  return _[a1 hasLocalChanges];
}

id objc_msgSend_hasLocalChangesToSync(void *a1, const char *a2, ...)
{
  return _[a1 hasLocalChangesToSync];
}

id objc_msgSend_hasObjects(void *a1, const char *a2, ...)
{
  return _[a1 hasObjects];
}

id objc_msgSend_hasOnlyPaidEpisodesWithoutSubscription(void *a1, const char *a2, ...)
{
  return _[a1 hasOnlyPaidEpisodesWithoutSubscription];
}

id objc_msgSend_hasPerformedLegacyBadgeMigration(void *a1, const char *a2, ...)
{
  return _[a1 hasPerformedLegacyBadgeMigration];
}

id objc_msgSend_hasPerformedLegacyBadgeMigrationKey(void *a1, const char *a2, ...)
{
  return _[a1 hasPerformedLegacyBadgeMigrationKey];
}

id objc_msgSend_hasPlaylistSyncVersion(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaylistSyncVersion];
}

id objc_msgSend_hasPodcastSyncV3Version(void *a1, const char *a2, ...)
{
  return _[a1 hasPodcastSyncV3Version];
}

id objc_msgSend_hasPodcastSyncVersion(void *a1, const char *a2, ...)
{
  return _[a1 hasPodcastSyncVersion];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hasReportedThisEpisode(void *a1, const char *a2, ...)
{
  return _[a1 hasReportedThisEpisode];
}

id objc_msgSend_hasResults(void *a1, const char *a2, ...)
{
  return _[a1 hasResults];
}

id objc_msgSend_hasRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 hasRowAtIndexPath:];
}

id objc_msgSend_hasRowsInSectionAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 hasRowsInSectionAtIndex:];
}

id objc_msgSend_hasSectionNameKeyPathChanged(void *a1, const char *a2, ...)
{
  return _[a1 hasSectionNameKeyPathChanged];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return [a1 hasSuffix:];
}

id objc_msgSend_hasUpdates(void *a1, const char *a2, ...)
{
  return _[a1 hasUpdates];
}

id objc_msgSend_hasUserRecentlyAcceptedSync(void *a1, const char *a2, ...)
{
  return _[a1 hasUserRecentlyAcceptedSync];
}

id objc_msgSend_hasVideo(void *a1, const char *a2, ...)
{
  return _[a1 hasVideo];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_haveMediaLibraryPropertiesChangedForEpisode_(void *a1, const char *a2, ...)
{
  return [a1 haveMediaLibraryPropertiesChangedForEpisode:];
}

id objc_msgSend_headerAction(void *a1, const char *a2, ...)
{
  return _[a1 headerAction];
}

id objc_msgSend_headerCallback(void *a1, const char *a2, ...)
{
  return _[a1 headerCallback];
}

id objc_msgSend_headerText(void *a1, const char *a2, ...)
{
  return _[a1 headerText];
}

id objc_msgSend_headerTitle(void *a1, const char *a2, ...)
{
  return _[a1 headerTitle];
}

id objc_msgSend_headerTitleFont(void *a1, const char *a2, ...)
{
  return _[a1 headerTitleFont];
}

id objc_msgSend_headerView(void *a1, const char *a2, ...)
{
  return _[a1 headerView];
}

id objc_msgSend_headerViewForSection_(void *a1, const char *a2, ...)
{
  return [a1 headerViewForSection:];
}

id objc_msgSend_heightForRowWithDescription_inGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 heightForRowWithDescription:inGroupWithIdentifier:];
}

id objc_msgSend_heightForSeparatorInsets_(void *a1, const char *a2, ...)
{
  return [a1 heightForSeparatorInsets:];
}

id objc_msgSend_heightForWidth_(void *a1, const char *a2, ...)
{
  return [a1 heightForWidth:];
}

id objc_msgSend_heightForWidth_style_(void *a1, const char *a2, ...)
{
  return [a1 heightForWidth:style:];
}

id objc_msgSend_hexString(void *a1, const char *a2, ...)
{
  return _[a1 hexString];
}

id objc_msgSend_hidden(void *a1, const char *a2, ...)
{
  return _[a1 hidden];
}

id objc_msgSend_hideActionsAnimated_(void *a1, const char *a2, ...)
{
  return [a1 hideActionsAnimated:];
}

id objc_msgSend_hidesPlayedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 hidesPlayedEpisodes];
}

id objc_msgSend_hidesSideViewWhenEditing(void *a1, const char *a2, ...)
{
  return _[a1 hidesSideViewWhenEditing];
}

id objc_msgSend_highlightsProvider(void *a1, const char *a2, ...)
{
  return _[a1 highlightsProvider];
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 hitTest:withEvent:];
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 horizontalSizeClass];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_iTunesAccountDidChangeForACAccountNotification_(void *a1, const char *a2, ...)
{
  return [a1 iTunesAccountDidChangeForACAccountNotification:];
}

id objc_msgSend_iTunesMatchEnabled(void *a1, const char *a2, ...)
{
  return _[a1 iTunesMatchEnabled];
}

id objc_msgSend_ic_privateListeningEnabledForHomeUsers(void *a1, const char *a2, ...)
{
  return [a1 ic_privateListeningEnabledForHomeUsers];
}

id objc_msgSend_ic_sharedAccountStore(void *a1, const char *a2, ...)
{
  return [a1 ic_sharedAccountStore];
}

id objc_msgSend_ic_storeAccountForHomeUserIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_storeAccountForHomeUserIdentifier:completion:");
}

id objc_msgSend_ic_storeAccountForStoreAccountID_completion_(void *a1, const char *a2, ...)
{
  return [a1 ic_storeAccountForStoreAccountID:completion:];
}

id objc_msgSend_ic_storeAccountForStoreAccountID_error_(void *a1, const char *a2, ...)
{
  return [a1 ic_storeAccountForStoreAccountID:error:];
}

id objc_msgSend_icon(void *a1, const char *a2, ...)
{
  return _[a1 icon];
}

id objc_msgSend_iconView(void *a1, const char *a2, ...)
{
  return _[a1 iconView];
}

id objc_msgSend_iconWithSystemImageName_(void *a1, const char *a2, ...)
{
  return [a1 iconWithSystemImageName:];
}

id objc_msgSend_iconsViewFrameForViewWidth_titleFrame_metadataFrame_style_(void *a1, const char *a2, ...)
{
  return [a1 iconsViewFrameForViewWidth:titleFrame:metadataFrame:style:];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierComposer(void *a1, const char *a2, ...)
{
  return _[a1 identifierComposer];
}

id objc_msgSend_identifierPromise(void *a1, const char *a2, ...)
{
  return _[a1 identifierPromise];
}

id objc_msgSend_identifierWithFeedUrl_storeIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 identifierWithFeedUrl:storeIdentifier:];
}

id objc_msgSend_identifiers(void *a1, const char *a2, ...)
{
  return _[a1 identifiers];
}

id objc_msgSend_im_addAttribute_value_(void *a1, const char *a2, ...)
{
  return [a1 im_addAttribute:value:];
}

id objc_msgSend_im_addPropertiesWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 im_addPropertiesWithDictionary:];
}

id objc_msgSend_im_appendImage_(void *a1, const char *a2, ...)
{
  return [a1 im_appendImage:];
}

id objc_msgSend_im_appendString_(void *a1, const char *a2, ...)
{
  return [a1 im_appendString:];
}

id objc_msgSend_im_distanceFromLastBaselineToBottom(void *a1, const char *a2, ...)
{
  return [a1 im_distanceFromLastBaselineToBottom];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_image_inRect_withBacking_opaque_scale_(void *a1, const char *a2, ...)
{
  return [a1 image:inRect:withBacking:opaque:scale:];
}

id objc_msgSend_imageFlippedForRightToLeftLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 imageFlippedForRightToLeftLayoutDirection];
}

id objc_msgSend_imageForIconKey_theme_(void *a1, const char *a2, ...)
{
  return [a1 imageForIconKey:theme:];
}

id objc_msgSend_imageForKey_(void *a1, const char *a2, ...)
{
  return [a1 imageForKey:];
}

id objc_msgSend_imageForKey_size_(void *a1, const char *a2, ...)
{
  return [a1 imageForKey:size:];
}

id objc_msgSend_imageInMemoryForKey_size_(void *a1, const char *a2, ...)
{
  return [a1 imageInMemoryForKey:size:];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:];
}

id objc_msgSend_imagePadding(void *a1, const char *a2, ...)
{
  return _[a1 imagePadding];
}

id objc_msgSend_imageProvider(void *a1, const char *a2, ...)
{
  return _[a1 imageProvider];
}

id objc_msgSend_imageRectForContentRect_(void *a1, const char *a2, ...)
{
  return [a1 imageRectForContentRect:];
}

id objc_msgSend_imageURL(void *a1, const char *a2, ...)
{
  return _[a1 imageURL];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return [a1 imageWithData:];
}

id objc_msgSend_imageWithImageData_(void *a1, const char *a2, ...)
{
  return [a1 imageWithImageData:];
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return [a1 imageWithRenderingMode:];
}

id objc_msgSend_imageWithSize_(void *a1, const char *a2, ...)
{
  return [a1 imageWithSize:];
}

id objc_msgSend_immediatelyDeleteAllHiddenPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 immediatelyDeleteAllHiddenPodcasts];
}

id objc_msgSend_importContext(void *a1, const char *a2, ...)
{
  return _[a1 importContext];
}

id objc_msgSend_importDate(void *a1, const char *a2, ...)
{
  return _[a1 importDate];
}

id objc_msgSend_importPlaylist_intoContext_mediaLibraryCache_knownPlaylistIds_(void *a1, const char *a2, ...)
{
  return [a1 importPlaylist:intoContext:mediaLibraryCache:knownPlaylistIds:];
}

id objc_msgSend_importPlaylists_knownPlaylistIds_mediaLibraryCache_playlists_(void *a1, const char *a2, ...)
{
  return [a1 importPlaylists:knownPlaylistIds:mediaLibraryCache:playlists:];
}

id objc_msgSend_importRemotePodcastDicts_inContext_visitingPodcastsInCache_updatingPodcastsToAdd_updatingPodcastsToUnsubscribe_mismatch_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importRemotePodcastDicts:inContext:visitingPodcastsInCache:updatingPodcastsToAdd:updatingPodcastsToUnsubscribe:mismatch:version:");
}

id objc_msgSend_importedShowArtworkURLFor_(void *a1, const char *a2, ...)
{
  return [a1 importedShowArtworkURLFor:];
}

id objc_msgSend_importing(void *a1, const char *a2, ...)
{
  return _[a1 importing];
}

id objc_msgSend_inContextKeyDataFor_ctx_(void *a1, const char *a2, ...)
{
  return [a1 inContextKeyDataFor:ctx:];
}

id objc_msgSend_inFlightAuthRequests(void *a1, const char *a2, ...)
{
  return _[a1 inFlightAuthRequests];
}

id objc_msgSend_inactiveIntervalForDownloadPolicyUpgrade(void *a1, const char *a2, ...)
{
  return _[a1 inactiveIntervalForDownloadPolicyUpgrade];
}

id objc_msgSend_includesAllPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 includesAllPodcasts];
}

id objc_msgSend_incremementPlayCount(void *a1, const char *a2, ...)
{
  return _[a1 incremementPlayCount];
}

id objc_msgSend_incrementSize_duration_forFeedURL_(void *a1, const char *a2, ...)
{
  return [a1 incrementSize:duration:forFeedURL:];
}

id objc_msgSend_index(void *a1, const char *a2, ...)
{
  return _[a1 index];
}

id objc_msgSend_indexAllBatchGenerator(void *a1, const char *a2, ...)
{
  return _[a1 indexAllBatchGenerator];
}

id objc_msgSend_indexAllCompletions(void *a1, const char *a2, ...)
{
  return _[a1 indexAllCompletions];
}

id objc_msgSend_indexAllDataWithSearchableIndex_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexAllDataWithSearchableIndex:completionHandler:");
}

id objc_msgSend_indexForDownload_(void *a1, const char *a2, ...)
{
  return [a1 indexForDownload:];
}

id objc_msgSend_indexForSection_(void *a1, const char *a2, ...)
{
  return [a1 indexForSection:];
}

id objc_msgSend_indexForValue_(void *a1, const char *a2, ...)
{
  return [a1 indexForValue:];
}

id objc_msgSend_indexOfController_(void *a1, const char *a2, ...)
{
  return [a1 indexOfController];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObjectPassingTest:];
}

id objc_msgSend_indexPath(void *a1, const char *a2, ...)
{
  return _[a1 indexPath];
}

id objc_msgSend_indexPathForCell_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForCell:];
}

id objc_msgSend_indexPathForFirstRow(void *a1, const char *a2, ...)
{
  return _[a1 indexPathForFirstRow];
}

id objc_msgSend_indexPathForFirstRowInSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForFirstRowInSection:];
}

id objc_msgSend_indexPathForFocusableRowAfterIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForFocusableRowAfterIndexPath:];
}

id objc_msgSend_indexPathForFocusableRowBeforeIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForFocusableRowBeforeIndexPath:];
}

id objc_msgSend_indexPathForItem_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForItem:inSection:];
}

id objc_msgSend_indexPathForLastRowInSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForLastRowInSection:];
}

id objc_msgSend_indexPathForObject_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForObject];
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRow:inSection:];
}

id objc_msgSend_indexPathForRowAfterIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRowAfterIndexPath:];
}

id objc_msgSend_indexPathForRowBeforeIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRowBeforeIndexPath:];
}

id objc_msgSend_indexPathForSelectedRow(void *a1, const char *a2, ...)
{
  return _[a1 indexPathForSelectedRow];
}

id objc_msgSend_indexPathForSetting_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForSetting];
}

id objc_msgSend_indexPathIsCurrentlySelectedRow_(void *a1, const char *a2, ...)
{
  return [a1 indexPathIsCurrentlySelectedRow:];
}

id objc_msgSend_indexPathShifter(void *a1, const char *a2, ...)
{
  return _[a1 indexPathShifter];
}

id objc_msgSend_indexPathWithIndex_(void *a1, const char *a2, ...)
{
  return [a1 indexPathWithIndex:];
}

id objc_msgSend_indexPathsForVisibleRows(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForVisibleRows];
}

id objc_msgSend_indexSearchableItems_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 indexSearchableItems:completionHandler:];
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return [a1 indexSetWithIndex:];
}

id objc_msgSend_indexSetWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return [a1 indexSetWithIndexesInRange:];
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_indexingBlock(void *a1, const char *a2, ...)
{
  return _[a1 indexingBlock];
}

id objc_msgSend_indexingQueue(void *a1, const char *a2, ...)
{
  return _[a1 indexingQueue];
}

id objc_msgSend_indicatedBitrate(void *a1, const char *a2, ...)
{
  return _[a1 indicatedBitrate];
}

id objc_msgSend_infoCenter(void *a1, const char *a2, ...)
{
  return _[a1 infoCenter];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_infoIcon(void *a1, const char *a2, ...)
{
  return _[a1 infoIcon];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_init_nonAppInitiated_(void *a1, const char *a2, ...)
{
  return [a1 init:nonAppInitiated:];
}

id objc_msgSend_initSupportsPlayback_supportsLocalMedia_(void *a1, const char *a2, ...)
{
  return [a1 initSupportsPlayback:supportsLocalMedia:];
}

id objc_msgSend_initWithAccessLogEvent_dataSource_(void *a1, const char *a2, ...)
{
  return [a1 initWithAccessLogEvent:dataSource:];
}

id objc_msgSend_initWithAccount_presentingViewController_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithAccount:presentingViewController:options:];
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityIndicatorStyle:];
}

id objc_msgSend_initWithAdamID_avAsset_(void *a1, const char *a2, ...)
{
  return [a1 initWithAdamID:avAsset:];
}

id objc_msgSend_initWithAnnotator_(void *a1, const char *a2, ...)
{
  return [a1 initWithAnnotator:];
}

id objc_msgSend_initWithAppBundleID_playerID_origin_(void *a1, const char *a2, ...)
{
  return [a1 initWithAppBundleID:playerID:origin:];
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:];
}

id objc_msgSend_initWithAssetInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithAssetInfo:];
}

id objc_msgSend_initWithAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 initWithAttributedString:];
}

id objc_msgSend_initWithBackgroundTaskManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithBackgroundTaskManager:];
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithBarButtonSystemItem:target:action:];
}

id objc_msgSend_initWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithBlock:];
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return [a1 initWithBytes:length:encoding:];
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 initWithCapacity:];
}

id objc_msgSend_initWithCategory_name_title_handler_(void *a1, const char *a2, ...)
{
  return [a1 initWithCategory:name:title:handler:];
}

id objc_msgSend_initWithCloudSyncBugReporter_(void *a1, const char *a2, ...)
{
  return [a1 initWithCloudSyncBugReporter:];
}

id objc_msgSend_initWithCode_userActivity_(void *a1, const char *a2, ...)
{
  return [a1 initWithCode:userActivity:];
}

id objc_msgSend_initWithCollectionViewLayout_libraryActionControllerBridge_(void *a1, const char *a2, ...)
{
  return [a1 initWithCollectionViewLayout:libraryActionControllerBridge:];
}

id objc_msgSend_initWithConcurrentOperationCount_requestEncodingType_(void *a1, const char *a2, ...)
{
  return [a1 initWithConcurrentOperationCount:requestEncodingType:];
}

id objc_msgSend_initWithCondition_(void *a1, const char *a2, ...)
{
  return [a1 initWithCondition:];
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:];
}

id objc_msgSend_initWithConfiguration_bag_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:bag:];
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithContentsOfURL:];
}

id objc_msgSend_initWithControllers_(void *a1, const char *a2, ...)
{
  return [a1 initWithControllers:];
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return [a1 initWithCustomView:];
}

id objc_msgSend_initWithData_MIMEType_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:MIMEType:];
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:encoding:];
}

id objc_msgSend_initWithDataSource_(void *a1, const char *a2, ...)
{
  return [a1 initWithDataSource:];
}

id objc_msgSend_initWithDataSource_applicationActivities_(void *a1, const char *a2, ...)
{
  return [a1 initWithDataSource:applicationActivities:];
}

id objc_msgSend_initWithDataSource_bagContext_andTask_(void *a1, const char *a2, ...)
{
  return [a1 initWithDataSource:bagContext:andTask:];
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:];
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 initWithDictionary:];
}

id objc_msgSend_initWithDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return [a1 initWithDictionaryRepresentation:];
}

id objc_msgSend_initWithDomain_baseURLForGETAll_baseURLForPUTAll_(void *a1, const char *a2, ...)
{
  return [a1 initWithDomain:baseURLForGETAll:baseURLForPUTAll:];
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithDomain:code:userInfo:];
}

id objc_msgSend_initWithDownloadManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithDownloadManager:];
}

id objc_msgSend_initWithEndpointURL_action_apnsToken_(void *a1, const char *a2, ...)
{
  return [a1 initWithEndpointURL:action:apnsToken:];
}

id objc_msgSend_initWithEntity_(void *a1, const char *a2, ...)
{
  return [a1 initWithEntity:];
}

id objc_msgSend_initWithEntity_insertIntoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return [a1 initWithEntity:insertIntoManagedObjectContext:];
}

id objc_msgSend_initWithEntityName_(void *a1, const char *a2, ...)
{
  return [a1 initWithEntityName:];
}

id objc_msgSend_initWithEntityName_predicate_(void *a1, const char *a2, ...)
{
  return [a1 initWithEntityName:predicate:];
}

id objc_msgSend_initWithEntityName_predicate_sortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 initWithEntityName:predicate:sortDescriptors:];
}

id objc_msgSend_initWithEpisode_(void *a1, const char *a2, ...)
{
  return [a1 initWithEpisode:];
}

id objc_msgSend_initWithEpisodeAdamId_assetInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithEpisodeAdamId:assetInfo:];
}

id objc_msgSend_initWithEpisodeAdamIds_assetInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithEpisodeAdamIds:assetInfo:];
}

id objc_msgSend_initWithEpisodeIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithEpisodeIdentifier:];
}

id objc_msgSend_initWithEpisodeRemovalManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithEpisodeRemovalManager:];
}

id objc_msgSend_initWithEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 initWithEpisodeUuid:];
}

id objc_msgSend_initWithExpirationBlock_debugDescription_(void *a1, const char *a2, ...)
{
  return [a1 initWithExpirationBlock:debugDescription:];
}

id objc_msgSend_initWithExpirationHandler_debugInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithExpirationHandler:debugInfo:];
}

id objc_msgSend_initWithExplanation_target_attributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithExplanation:target:attributes:];
}

id objc_msgSend_initWithFeedUrl_storeIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithFeedUrl:storeIdentifier:];
}

id objc_msgSend_initWithFetchRequest_(void *a1, const char *a2, ...)
{
  return [a1 initWithFetchRequest:];
}

id objc_msgSend_initWithFetchRequest_managedObjectContext_(void *a1, const char *a2, ...)
{
  return [a1 initWithFetchRequest:managedObjectContext:];
}

id objc_msgSend_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_(void *a1, const char *a2, ...)
{
  return [a1 initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:];
}

id objc_msgSend_initWithFetchRequest_propertyKeys_(void *a1, const char *a2, ...)
{
  return [a1 initWithFetchRequest:propertyKeys:];
}

id objc_msgSend_initWithFocusedView_touchAllowance_(void *a1, const char *a2, ...)
{
  return [a1 initWithFocusedView:touchAllowance:];
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 initWithFormat:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithFrame_collectionViewLayout_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:collectionViewLayout:];
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:style:];
}

id objc_msgSend_initWithHandlerQueue_taskTimeout_assertionTimeout_debugDescription_(void *a1, const char *a2, ...)
{
  return [a1 initWithHandlerQueue:taskTimeout:assertionTimeout:debugDescription:];
}

id objc_msgSend_initWithHandlerQueue_taskTimeout_assertionTimeout_debugDescription_reportMetrics_(void *a1, const char *a2, ...)
{
  return [a1 initWithHandlerQueue:taskTimeout:assertionTimeout:debugDescription:reportMetrics:];
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:];
}

id objc_msgSend_initWithIdentifier_title_type_artwork_artist_topics_namedEntities_privateMediaItemValueData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:title:type:artwork:artist:topics:namedEntities:privateMediaItemValueData:");
}

id objc_msgSend_initWithIds_(void *a1, const char *a2, ...)
{
  return [a1 initWithIds:];
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:];
}

id objc_msgSend_initWithImage_highlightedImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:highlightedImage:];
}

id objc_msgSend_initWithImage_titleText_descriptionText_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:titleText:descriptionText:];
}

id objc_msgSend_initWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return [a1 initWithIndexesInRange:];
}

id objc_msgSend_initWithInitialEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 initWithInitialEpisodeUuid:];
}

id objc_msgSend_initWithInitialEpisodeUuid_fetchRequest_(void *a1, const char *a2, ...)
{
  return [a1 initWithInitialEpisodeUuid:fetchRequest:];
}

id objc_msgSend_initWithInitialEpisodeUuid_newestToOldest_(void *a1, const char *a2, ...)
{
  return [a1 initWithInitialEpisodeUuid:newestToOldest:];
}

id objc_msgSend_initWithInitialEpisodeUuid_predicateToTrack_sortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 initWithInitialEpisodeUuid:predicateToTrack:sortDescriptors:];
}

id objc_msgSend_initWithInitialEpisodeUuid_sectionType_(void *a1, const char *a2, ...)
{
  return [a1 initWithInitialEpisodeUuid:sectionType:];
}

id objc_msgSend_initWithInt_(void *a1, const char *a2, ...)
{
  return [a1 initWithInt:];
}

id objc_msgSend_initWithIntent_(void *a1, const char *a2, ...)
{
  return [a1 initWithIntent:];
}

id objc_msgSend_initWithIntent_response_(void *a1, const char *a2, ...)
{
  return [a1 initWithIntent:response:];
}

id objc_msgSend_initWithItemContentType_(void *a1, const char *a2, ...)
{
  return [a1 initWithItemContentType:];
}

id objc_msgSend_initWithItemProvider_properties_placeholderImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItemProvider:properties:placeholderImage:");
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return [a1 initWithItems:];
}

id objc_msgSend_initWithItems_initialIndex_(void *a1, const char *a2, ...)
{
  return [a1 initWithItems:initialIndex:];
}

id objc_msgSend_initWithKey_ascending_(void *a1, const char *a2, ...)
{
  return [a1 initWithKey:ascending:];
}

id objc_msgSend_initWithKey_processor_(void *a1, const char *a2, ...)
{
  return [a1 initWithKey:processor:];
}

id objc_msgSend_initWithKeysAndProcessors_(void *a1, const char *a2, ...)
{
  return [a1 initWithKeysAndProcessors:];
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocaleIdentifier:];
}

id objc_msgSend_initWithLoggingCategory_dictionariesToMerge_(void *a1, const char *a2, ...)
{
  return [a1 initWithLoggingCategory:];
}

id objc_msgSend_initWithMediaItems_mediaContainer_playShuffled_playbackRepeatMode_resumePlayback_playbackQueueLocation_playbackSpeed_mediaSearch_(void *a1, const char *a2, ...)
{
  return [a1 initWithMediaItems:mediaContainer:playShuffled:playbackRepeatMode:resumePlayback:playbackQueueLocation:playbackSpeed:mediaSearch:];
}

id objc_msgSend_initWithMediaQuery_initialItem_(void *a1, const char *a2, ...)
{
  return [a1 initWithMediaQuery:initialItem:];
}

id objc_msgSend_initWithMetricsSender_(void *a1, const char *a2, ...)
{
  return [a1 initWithMetricsSender:];
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:];
}

id objc_msgSend_initWithName_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:bundleIdentifier:];
}

id objc_msgSend_initWithName_payload_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:payload:];
}

id objc_msgSend_initWithName_title_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:title:];
}

id objc_msgSend_initWithName_value_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:value:];
}

id objc_msgSend_initWithObject_(void *a1, const char *a2, ...)
{
  return [a1 initWithObject:];
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 initWithObjects:];
}

id objc_msgSend_initWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return [a1 initWithObjectsAndKeys:];
}

id objc_msgSend_initWithOption_largeTitleDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 initWithOption:largeTitleDisplayMode:];
}

id objc_msgSend_initWithOptionsDictionary_(void *a1, const char *a2, ...)
{
  return [a1 initWithOptionsDictionary:];
}

id objc_msgSend_initWithPlaybackQueueRef_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlaybackQueueRef:];
}

id objc_msgSend_initWithPlayerController_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlayerController:];
}

id objc_msgSend_initWithPlayerID_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlayerID:];
}

id objc_msgSend_initWithPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlayerItem:];
}

id objc_msgSend_initWithPlayerItem_selectedReferenceTime_selectedPlayerTime_currentPlayerTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayerItem:selectedReferenceTime:selectedPlayerTime:currentPlayerTime:");
}

id objc_msgSend_initWithPlayerItems_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlayerItems:];
}

id objc_msgSend_initWithPlaylistUuid_initialEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlaylistUuid:initialEpisodeUuid:];
}

id objc_msgSend_initWithPodcast_(void *a1, const char *a2, ...)
{
  return [a1 initWithPodcast:];
}

id objc_msgSend_initWithPodcastAdamId_assetInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithPodcastAdamId:assetInfo:];
}

id objc_msgSend_initWithPodcastAdamId_siriAssetInfo_oldestEpisode_initiatedByAnotherUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPodcastAdamId:siriAssetInfo:oldestEpisode:initiatedByAnotherUser:");
}

id objc_msgSend_initWithPodcastDetails_(void *a1, const char *a2, ...)
{
  return [a1 initWithPodcastDetails:];
}

id objc_msgSend_initWithPredicate_entityName_ctx_properties_fetchProperties_(void *a1, const char *a2, ...)
{
  return [a1 initWithPredicate:entityName:ctx:properties:fetchProperties:];
}

id objc_msgSend_initWithPredicate_inCtx_extraProperties_(void *a1, const char *a2, ...)
{
  return [a1 initWithPredicate:inCtx:extraProperties:];
}

id objc_msgSend_initWithPresentedViewController_presentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithPresentedViewController:presentingViewController:];
}

id objc_msgSend_initWithPrivacyIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithPrivacyIdentifier:];
}

id objc_msgSend_initWithProperties_defaults_(void *a1, const char *a2, ...)
{
  return [a1 initWithProperties:defaults:];
}

id objc_msgSend_initWithReason_entityLoadingBlock_searchableIndex_completion_(void *a1, const char *a2, ...)
{
  return [a1 initWithReason:completion:];
}

id objc_msgSend_initWithRecipient_useCase_account_urlProtocolDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithRecipient:useCase:account:urlProtocolDelegate:];
}

id objc_msgSend_initWithRequest_bag_presentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRequest:bag:presentingViewController:];
}

id objc_msgSend_initWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithReuseIdentifier:];
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootViewController:];
}

id objc_msgSend_initWithShortcut_(void *a1, const char *a2, ...)
{
  return [a1 initWithShortcut:];
}

id objc_msgSend_initWithShouldContinue_createdPodcastUUID_(void *a1, const char *a2, ...)
{
  return [a1 initWithShouldContinue:createdPodcastUUID:];
}

id objc_msgSend_initWithShowName_episodeName_creatorName_publishDate_artwork_(void *a1, const char *a2, ...)
{
  return [a1 initWithShowName:episodeName:creatorName:publishDate:artwork:];
}

id objc_msgSend_initWithSourceURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithSourceURL:];
}

id objc_msgSend_initWithStartingIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 initWithStartingIndexPath:];
}

id objc_msgSend_initWithStationId_assetInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithStationId:assetInfo:];
}

id objc_msgSend_initWithStorage_(void *a1, const char *a2, ...)
{
  return [a1 initWithStorage:];
}

id objc_msgSend_initWithStorage_config_cloudSyncBugReporter_(void *a1, const char *a2, ...)
{
  return [a1 initWithStorage:config:cloudSyncBugReporter:];
}

id objc_msgSend_initWithStorageProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithStorageProvider:];
}

id objc_msgSend_initWithStorageProvider_cloudSyncBugReporter_(void *a1, const char *a2, ...)
{
  return [a1 initWithStorageProvider:cloudSyncBugReporter:];
}

id objc_msgSend_initWithStorageProviderDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithStorageProviderDelegate:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:attributes:];
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:reuseIdentifier:];
}

id objc_msgSend_initWithSyncType_(void *a1, const char *a2, ...)
{
  return [a1 initWithSyncType:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithTitle_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:];
}

id objc_msgSend_initWithTitle_actionHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:actionHandler:];
}

id objc_msgSend_initWithTitle_icon_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:icon:];
}

id objc_msgSend_initWithTitle_image_selectedImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:image:selectedImage:];
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:style:target:action:];
}

id objc_msgSend_initWithTopic_(void *a1, const char *a2, ...)
{
  return [a1 initWithTopic:];
}

id objc_msgSend_initWithTransaction_(void *a1, const char *a2, ...)
{
  return [a1 initWithTransaction:];
}

id objc_msgSend_initWithTransaction_response_(void *a1, const char *a2, ...)
{
  return [a1 initWithTransaction:response:];
}

id objc_msgSend_initWithType_clientIdentifier_clientVersion_bag_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:clientIdentifier:clientVersion:bag:];
}

id objc_msgSend_initWithType_domain_URL_keys_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:domain:URL:keys:];
}

id objc_msgSend_initWithType_localizedTitle_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:localizedTitle:];
}

id objc_msgSend_initWithType_localizedTitle_localizedSubtitle_icon_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:localizedTitle:localizedSubtitle:icon:userInfo:];
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:];
}

id objc_msgSend_initWithURL_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:options:];
}

id objc_msgSend_initWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:resolvingAgainstBaseURL:];
}

id objc_msgSend_initWithURLString_(void *a1, const char *a2, ...)
{
  return [a1 initWithURLString:];
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return [a1 initWithUUIDString:];
}

id objc_msgSend_initWithUpNextManifest_userManifest_loadQueue_(void *a1, const char *a2, ...)
{
  return [a1 initWithUpNextManifest:userManifest:loadQueue:];
}

id objc_msgSend_initWithUrl_(void *a1, const char *a2, ...)
{
  return [a1 initWithUrl:];
}

id objc_msgSend_initWithUrl_nonAppInitiated_(void *a1, const char *a2, ...)
{
  return [a1 initWithUrl:nonAppInitiated:];
}

id objc_msgSend_initWithUuid_storeTrackId_bestTitle_bestSummary_pubDate_duration_byteSize_isVideo_sortPropertyValues_podcastUuid_podcastTitle_podcastStoreCollectionId_(void *a1, const char *a2, ...)
{
  return [a1 initWithUuid:storeTrackId:bestTitle:bestSummary:pubDate:duration:byteSize:isVideo:sortPropertyValues:podcastUuid:podcastTitle:podcastStoreCollectionId:];
}

id objc_msgSend_initWithUuid_title_(void *a1, const char *a2, ...)
{
  return [a1 initWithUuid:title:];
}

id objc_msgSend_initWithWorkQueue_identifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithWorkQueue:identifier:];
}

id objc_msgSend_initialAutosyncNeeded(void *a1, const char *a2, ...)
{
  return _[a1 initialAutosyncNeeded];
}

id objc_msgSend_initialEpisodeUuid(void *a1, const char *a2, ...)
{
  return _[a1 initialEpisodeUuid];
}

id objc_msgSend_initialFeedUpdateCount(void *a1, const char *a2, ...)
{
  return _[a1 initialFeedUpdateCount];
}

id objc_msgSend_initialIndex(void *a1, const char *a2, ...)
{
  return _[a1 initialIndex];
}

id objc_msgSend_initialIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 initialIndexPath];
}

id objc_msgSend_initialPlayheadPosition(void *a1, const char *a2, ...)
{
  return _[a1 initialPlayheadPosition];
}

id objc_msgSend_initialSubscribedPodcastsCount(void *a1, const char *a2, ...)
{
  return _[a1 initialSubscribedPodcastsCount];
}

id objc_msgSend_initializeFrc(void *a1, const char *a2, ...)
{
  return _[a1 initializeFrc];
}

id objc_msgSend_initiatedByAnotherUser(void *a1, const char *a2, ...)
{
  return _[a1 initiatedByAnotherUser];
}

id objc_msgSend_insertAfterContextItemID(void *a1, const char *a2, ...)
{
  return _[a1 insertAfterContextItemID];
}

id objc_msgSend_insertEpisodeUuids_intoPlaybackQueueAtPosition_(void *a1, const char *a2, ...)
{
  return [a1 insertEpisodeUuids:intoPlaybackQueueAtPosition:];
}

id objc_msgSend_insertIntoPlaybackQueueCommand(void *a1, const char *a2, ...)
{
  return _[a1 insertIntoPlaybackQueueCommand];
}

id objc_msgSend_insertNewEpisodeInManagedObjectContext_canSendNotifications_(void *a1, const char *a2, ...)
{
  return [a1 insertNewEpisodeInManagedObjectContext:canSendNotifications:];
}

id objc_msgSend_insertNewImplicitFollowIfNeededForPlayerItem_from_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertNewImplicitFollowIfNeededForPlayerItem:from:completion:");
}

id objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return [a1 insertNewObjectForEntityForName:inManagedObjectContext:];
}

id objc_msgSend_insertNewPlaylistInManagedObjectContext_(void *a1, const char *a2, ...)
{
  return [a1 insertNewPlaylistInManagedObjectContext:];
}

id objc_msgSend_insertNewPlaylistInManagedObjectContext_uuid_defaultSettings_(void *a1, const char *a2, ...)
{
  return [a1 insertNewPlaylistInManagedObjectContext:uuid:defaultSettings:];
}

id objc_msgSend_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_displayType_showSpecificUpsellCopy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertNewPodcastInManagedObjectContext:subscribed:feedUrl:showType:showTypeInFeed:title:author:provider:imageUrl:description:displayType:showSpecificUpsellCopy:");
}

id objc_msgSend_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_title_author_provider_imageUrl_description_(void *a1, const char *a2, ...)
{
  return [a1 insertNewPodcastInManagedObjectContext:subscribed:feedUrl:showType:title:author:provider:imageUrl:description:];
}

id objc_msgSend_insertNewSettingsInManagedObjectContext_(void *a1, const char *a2, ...)
{
  return [a1 insertNewSettingsInManagedObjectContext:];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertObject:atIndex:];
}

id objc_msgSend_insertObjects_atIndexes_(void *a1, const char *a2, ...)
{
  return [a1 insertObjects:atIndexes:];
}

id objc_msgSend_insertPlayerItems_intoPlaybackQueueAtPosition_(void *a1, const char *a2, ...)
{
  return [a1 insertPlayerItems:intoPlaybackQueueAtPosition:];
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 insertRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_insertSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 insertSections:withRowAnimation:];
}

id objc_msgSend_insertSubview_aboveSubview_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:aboveSubview:];
}

id objc_msgSend_insertSubview_below_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:below:];
}

id objc_msgSend_insertSubview_belowSubview_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:belowSubview:];
}

id objc_msgSend_insertedAndUpdatedObjectIDs(void *a1, const char *a2, ...)
{
  return _[a1 insertedAndUpdatedObjectIDs];
}

id objc_msgSend_insertionPosition(void *a1, const char *a2, ...)
{
  return _[a1 insertionPosition];
}

id objc_msgSend_instanceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 instanceIdentifier];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerForEpisodesToShow(void *a1, const char *a2, ...)
{
  return _[a1 integerForEpisodesToShow];
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return [a1 integerForKey:];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_intent(void *a1, const char *a2, ...)
{
  return _[a1 intent];
}

id objc_msgSend_interaction(void *a1, const char *a2, ...)
{
  return _[a1 interaction];
}

id objc_msgSend_interactionClass(void *a1, const char *a2, ...)
{
  return _[a1 interactionClass];
}

id objc_msgSend_interestSyncVersion(void *a1, const char *a2, ...)
{
  return _[a1 interestSyncVersion];
}

id objc_msgSend_internalAppDelegate(void *a1, const char *a2, ...)
{
  return _[a1 internalAppDelegate];
}

id objc_msgSend_internetNotReachable(void *a1, const char *a2, ...)
{
  return _[a1 internetNotReachable];
}

id objc_msgSend_interruptEvent(void *a1, const char *a2, ...)
{
  return _[a1 interruptEvent];
}

id objc_msgSend_intersectOrderedSet_(void *a1, const char *a2, ...)
{
  return [a1 intersectOrderedSet:];
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return [a1 intersectSet:];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateAndCancel(void *a1, const char *a2, ...)
{
  return _[a1 invalidateAndCancel];
}

id objc_msgSend_invalidateArtwork(void *a1, const char *a2, ...)
{
  return _[a1 invalidateArtwork];
}

id objc_msgSend_invalidateArtworkForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 invalidateArtworkForPodcast:];
}

id objc_msgSend_invalidateAsset(void *a1, const char *a2, ...)
{
  return _[a1 invalidateAsset];
}

id objc_msgSend_invalidateLayout(void *a1, const char *a2, ...)
{
  return _[a1 invalidateLayout];
}

id objc_msgSend_invalidateLayoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 invalidateLayoutMargins];
}

id objc_msgSend_invalidatePlaybackQueue(void *a1, const char *a2, ...)
{
  return _[a1 invalidatePlaybackQueue];
}

id objc_msgSend_invalidateSizeMetrics(void *a1, const char *a2, ...)
{
  return _[a1 invalidateSizeMetrics];
}

id objc_msgSend_invalidateTranscriptAssetForAdamID_(void *a1, const char *a2, ...)
{
  return [a1 invalidateTranscriptAssetForAdamID];
}

id objc_msgSend_invalidationManager(void *a1, const char *a2, ...)
{
  return _[a1 invalidationManager];
}

id objc_msgSend_invocationWithMethodSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invocationWithMethodSignature:");
}

id objc_msgSend_invokeTaskCompletionBlocksWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeTaskCompletionBlocksWithBlock:");
}

id objc_msgSend_invokeWithTarget_(void *a1, const char *a2, ...)
{
  return [a1 invokeWithTarget:];
}

id objc_msgSend_isAValue_(void *a1, const char *a2, ...)
{
  return [a1 isAValue:];
}

id objc_msgSend_isAccountsChangedError(void *a1, const char *a2, ...)
{
  return _[a1 isAccountsChangedError];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isAdded(void *a1, const char *a2, ...)
{
  return _[a1 isAdded];
}

id objc_msgSend_isAirplaneModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAirplaneModeEnabled];
}

id objc_msgSend_isAppleMusicEpisode(void *a1, const char *a2, ...)
{
  return _[a1 isAppleMusicEpisode];
}

id objc_msgSend_isAppleNewsEpisode(void *a1, const char *a2, ...)
{
  return _[a1 isAppleNewsEpisode];
}

id objc_msgSend_isAppleTVRoute(void *a1, const char *a2, ...)
{
  return _[a1 isAppleTVRoute];
}

id objc_msgSend_isAudio(void *a1, const char *a2, ...)
{
  return _[a1 isAudio];
}

id objc_msgSend_isAuthenticatedDark(void *a1, const char *a2, ...)
{
  return _[a1 isAuthenticatedDark];
}

id objc_msgSend_isAuthenticatedWithQueue_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 isAuthenticatedWithQueue:completionHandler:];
}

id objc_msgSend_isAuthenticationError(void *a1, const char *a2, ...)
{
  return _[a1 isAuthenticationError];
}

id objc_msgSend_isAuthenticationValidForTransaction_error_(void *a1, const char *a2, ...)
{
  return [a1 isAuthenticationValidForTransaction:error:];
}

id objc_msgSend_isBackCatalogItem(void *a1, const char *a2, ...)
{
  return _[a1 isBackCatalogItem];
}

id objc_msgSend_isBookmarksSyncDirtyFor_(void *a1, const char *a2, ...)
{
  return [a1 isBookmarksSyncDirtyFor:];
}

id objc_msgSend_isBuiltIn(void *a1, const char *a2, ...)
{
  return _[a1 isBuiltIn];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isCenteredLayout(void *a1, const char *a2, ...)
{
  return _[a1 isCenteredLayout];
}

id objc_msgSend_isCompilation(void *a1, const char *a2, ...)
{
  return _[a1 isCompilation];
}

id objc_msgSend_isComplete(void *a1, const char *a2, ...)
{
  return _[a1 isComplete];
}

id objc_msgSend_isCorrupt(void *a1, const char *a2, ...)
{
  return _[a1 isCorrupt];
}

id objc_msgSend_isCurrentEpisodeDownloaded(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentEpisodeDownloaded];
}

id objc_msgSend_isCurrentPlayerItem(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentPlayerItem];
}

id objc_msgSend_isDark(void *a1, const char *a2, ...)
{
  return _[a1 isDark];
}

id objc_msgSend_isDebugUrl_(void *a1, const char *a2, ...)
{
  return [a1 isDebugUrl:];
}

id objc_msgSend_isDefaultSettingsForPlaylist_title_episodesToShow_showPlayedEpisodes_includeAllPodcasts_(void *a1, const char *a2, ...)
{
  return [a1 isDefaultSettingsForPlaylist:title:episodesToShow:showPlayedEpisodes:includeAllPodcasts:];
}

id objc_msgSend_isDeleted(void *a1, const char *a2, ...)
{
  return _[a1 isDeleted];
}

id objc_msgSend_isDeletingPersistentId_(void *a1, const char *a2, ...)
{
  return [a1 isDeletingPersistentId:];
}

id objc_msgSend_isDestructive(void *a1, const char *a2, ...)
{
  return _[a1 isDestructive];
}

id objc_msgSend_isDeviceRoute(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceRoute];
}

id objc_msgSend_isDeviceStorageSpaceAvailableForPersistence(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceStorageSpaceAvailableForPersistence];
}

id objc_msgSend_isDirty(void *a1, const char *a2, ...)
{
  return _[a1 isDirty];
}

id objc_msgSend_isDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isDisabled];
}

id objc_msgSend_isDownloaded(void *a1, const char *a2, ...)
{
  return _[a1 isDownloaded];
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return _[a1 isDragging];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEmpty(void *a1, const char *a2, ...)
{
  return _[a1 isEmpty];
}

id objc_msgSend_isEmpty_(void *a1, const char *a2, ...)
{
  return [a1 isEmpty:];
}

id objc_msgSend_isEmptyNumber_(void *a1, const char *a2, ...)
{
  return [a1 isEmptyNumber:];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEnabledForGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 isEnabledForGroupWithIdentifier:];
}

id objc_msgSend_isEntitled(void *a1, const char *a2, ...)
{
  return _[a1 isEntitled];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToArray:];
}

id objc_msgSend_isEqualToAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToAttributedString:];
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToDate:];
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToDictionary:];
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToNumber:];
}

id objc_msgSend_isEqualToOrderedSet_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToOrderedSet:];
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToSet:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isExecuting(void *a1, const char *a2, ...)
{
  return _[a1 isExecuting];
}

id objc_msgSend_isExpanded(void *a1, const char *a2, ...)
{
  return _[a1 isExpanded];
}

id objc_msgSend_isExplicit(void *a1, const char *a2, ...)
{
  return _[a1 isExplicit];
}

id objc_msgSend_isExplicitContentAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isExplicitContentAllowed];
}

id objc_msgSend_isExplicitForStorePlatformDictionary_(void *a1, const char *a2, ...)
{
  return [a1 isExplicitForStorePlatformDictionary:];
}

id objc_msgSend_isExternalType(void *a1, const char *a2, ...)
{
  return _[a1 isExternalType];
}

id objc_msgSend_isFileExpired_inDirectory_(void *a1, const char *a2, ...)
{
  return [a1 isFileExpired:inDirectory:];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _[a1 isFinished];
}

id objc_msgSend_isFloating(void *a1, const char *a2, ...)
{
  return _[a1 isFloating];
}

id objc_msgSend_isFolder(void *a1, const char *a2, ...)
{
  return _[a1 isFolder];
}

id objc_msgSend_isFromITunesSync(void *a1, const char *a2, ...)
{
  return _[a1 isFromITunesSync];
}

id objc_msgSend_isFutureWithTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 isFutureWithTimestamp:];
}

id objc_msgSend_isGenius(void *a1, const char *a2, ...)
{
  return _[a1 isGenius];
}

id objc_msgSend_isGlobalCellularEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isGlobalCellularEnabled];
}

id objc_msgSend_isHLSPlaylist(void *a1, const char *a2, ...)
{
  return _[a1 isHLSPlaylist];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _[a1 isHidden];
}

id objc_msgSend_isHomePodRoute(void *a1, const char *a2, ...)
{
  return _[a1 isHomePodRoute];
}

id objc_msgSend_isHorizontallyCompact(void *a1, const char *a2, ...)
{
  return _[a1 isHorizontallyCompact];
}

id objc_msgSend_isHorizontallyRegular(void *a1, const char *a2, ...)
{
  return _[a1 isHorizontallyRegular];
}

id objc_msgSend_isITunesU(void *a1, const char *a2, ...)
{
  return _[a1 isITunesU];
}

id objc_msgSend_isIdle(void *a1, const char *a2, ...)
{
  return _[a1 isIdle];
}

id objc_msgSend_isImplicitlyFollowed(void *a1, const char *a2, ...)
{
  return _[a1 isImplicitlyFollowed];
}

id objc_msgSend_isInPodcastDetailsUnplayedTab(void *a1, const char *a2, ...)
{
  return _[a1 isInPodcastDetailsUnplayedTab];
}

id objc_msgSend_isInUserEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 isInUserEpisodes];
}

id objc_msgSend_isInitialPrepare(void *a1, const char *a2, ...)
{
  return _[a1 isInitialPrepare];
}

id objc_msgSend_isInteractive(void *a1, const char *a2, ...)
{
  return _[a1 isInteractive];
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return _[a1 isInternalInstall];
}

id objc_msgSend_isItunesPlaylist(void *a1, const char *a2, ...)
{
  return _[a1 isItunesPlaylist];
}

id objc_msgSend_isItunesSmartPlaylist(void *a1, const char *a2, ...)
{
  return _[a1 isItunesSmartPlaylist];
}

id objc_msgSend_isItunesU(void *a1, const char *a2, ...)
{
  return _[a1 isItunesU];
}

id objc_msgSend_isLabelMultipleLinesWithFrame_font_(void *a1, const char *a2, ...)
{
  return [a1 isLabelMultipleLinesWithFrame:font:];
}

id objc_msgSend_isLessThanDaysOld_(void *a1, const char *a2, ...)
{
  return [a1 isLessThanDaysOld:];
}

id objc_msgSend_isLibrarySyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isLibrarySyncEnabled];
}

id objc_msgSend_isLicenseKeyExpiredError_(void *a1, const char *a2, ...)
{
  return [a1 isLicenseKeyExpiredError:];
}

id objc_msgSend_isLicenseKeyIntegrityError_(void *a1, const char *a2, ...)
{
  return [a1 isLicenseKeyIntegrityError:];
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isLoaded];
}

id objc_msgSend_isLocal(void *a1, const char *a2, ...)
{
  return _[a1 isLocal];
}

id objc_msgSend_isLocalSetPlaybackQueueURLString_(void *a1, const char *a2, ...)
{
  return [a1 isLocalSetPlaybackQueueURLString:];
}

id objc_msgSend_isLowPowerModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isLowPowerModeEnabled];
}

id objc_msgSend_isMacIdiom(void *a1, const char *a2, ...)
{
  return _[a1 isMacIdiom];
}

id objc_msgSend_isManifestRestorationOngoing(void *a1, const char *a2, ...)
{
  return _[a1 isManifestRestorationOngoing];
}

id objc_msgSend_isMedia(void *a1, const char *a2, ...)
{
  return _[a1 isMedia];
}

id objc_msgSend_isMediaItemSyncedFromiTunes_(void *a1, const char *a2, ...)
{
  return [a1 isMediaItemSyncedFromiTunes:];
}

id objc_msgSend_isMigrating(void *a1, const char *a2, ...)
{
  return _[a1 isMigrating];
}

id objc_msgSend_isMigrationPossible(void *a1, const char *a2, ...)
{
  return _[a1 isMigrationPossible];
}

id objc_msgSend_isMissingAsset(void *a1, const char *a2, ...)
{
  return _[a1 isMissingAsset];
}

id objc_msgSend_isMissingAssetForItem_(void *a1, const char *a2, ...)
{
  return [a1 isMissingAssetForItem:];
}

id objc_msgSend_isMissingFilePathForItem_(void *a1, const char *a2, ...)
{
  return [a1 isMissingFilePathForItem:];
}

id objc_msgSend_isMomCompatible_(void *a1, const char *a2, ...)
{
  return [a1 isMomCompatible:];
}

id objc_msgSend_isMultiUser(void *a1, const char *a2, ...)
{
  return _[a1 isMultiUser];
}

id objc_msgSend_isMultiplayerHost(void *a1, const char *a2, ...)
{
  return _[a1 isMultiplayerHost];
}

id objc_msgSend_isMyPodcastsTabSelected(void *a1, const char *a2, ...)
{
  return _[a1 isMyPodcastsTabSelected];
}

id objc_msgSend_isNetworkingBlocked(void *a1, const char *a2, ...)
{
  return _[a1 isNetworkingBlocked];
}

id objc_msgSend_isNew(void *a1, const char *a2, ...)
{
  return _[a1 isNew];
}

id objc_msgSend_isNewInstall(void *a1, const char *a2, ...)
{
  return _[a1 isNewInstall];
}

id objc_msgSend_isNonFollowedShowsSyncDirty(void *a1, const char *a2, ...)
{
  return _[a1 isNonFollowedShowsSyncDirty];
}

id objc_msgSend_isNotEmpty(void *a1, const char *a2, ...)
{
  return _[a1 isNotEmpty];
}

id objc_msgSend_isNotEmpty_(void *a1, const char *a2, ...)
{
  return [a1 isNotEmpty:];
}

id objc_msgSend_isNotEmptyNumber_(void *a1, const char *a2, ...)
{
  return [a1 isNotEmptyNumber:];
}

id objc_msgSend_isNotSubscribable(void *a1, const char *a2, ...)
{
  return _[a1 isNotSubscribable];
}

id objc_msgSend_isOTAPurchased(void *a1, const char *a2, ...)
{
  return _[a1 isOTAPurchased];
}

id objc_msgSend_isObserving(void *a1, const char *a2, ...)
{
  return _[a1 isObserving];
}

id objc_msgSend_isOfflineAsset(void *a1, const char *a2, ...)
{
  return _[a1 isOfflineAsset];
}

id objc_msgSend_isOn(void *a1, const char *a2, ...)
{
  return _[a1 isOn];
}

id objc_msgSend_isOnTheGo(void *a1, const char *a2, ...)
{
  return _[a1 isOnTheGo];
}

id objc_msgSend_isOpen(void *a1, const char *a2, ...)
{
  return _[a1 isOpen];
}

id objc_msgSend_isPackagedMedia(void *a1, const char *a2, ...)
{
  return _[a1 isPackagedMedia];
}

id objc_msgSend_isPartiallyOffTheTop(void *a1, const char *a2, ...)
{
  return _[a1 isPartiallyOffTheTop];
}

id objc_msgSend_isPartiallyPlayed(void *a1, const char *a2, ...)
{
  return _[a1 isPartiallyPlayed];
}

id objc_msgSend_isPartiallyPlayedBackCatalogItem(void *a1, const char *a2, ...)
{
  return _[a1 isPartiallyPlayedBackCatalogItem];
}

id objc_msgSend_isPastAutodownloadOrEpisodeLimitDark(void *a1, const char *a2, ...)
{
  return _[a1 isPastAutodownloadOrEpisodeLimitDark];
}

id objc_msgSend_isPausable(void *a1, const char *a2, ...)
{
  return _[a1 isPausable];
}

id objc_msgSend_isPlaceholder(void *a1, const char *a2, ...)
{
  return _[a1 isPlaceholder];
}

id objc_msgSend_isPlaybackActive(void *a1, const char *a2, ...)
{
  return _[a1 isPlaybackActive];
}

id objc_msgSend_isPlaybackRequested(void *a1, const char *a2, ...)
{
  return _[a1 isPlaybackRequested];
}

id objc_msgSend_isPlayed(void *a1, const char *a2, ...)
{
  return _[a1 isPlayed];
}

id objc_msgSend_isPlayerManifestRestored(void *a1, const char *a2, ...)
{
  return _[a1 isPlayerManifestRestored];
}

id objc_msgSend_isPlayerTargetLocal(void *a1, const char *a2, ...)
{
  return _[a1 isPlayerTargetLocal];
}

id objc_msgSend_isPlayhead_resumableForDuration_(void *a1, const char *a2, ...)
{
  return [a1 isPlayhead:resumableForDuration:];
}

id objc_msgSend_isPlayheadResumable(void *a1, const char *a2, ...)
{
  return _[a1 isPlayheadResumable];
}

id objc_msgSend_isPlayingEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 isPlayingEpisodeUuid:];
}

id objc_msgSend_isPlayingFromManifest_(void *a1, const char *a2, ...)
{
  return [a1 isPlayingFromManifest:];
}

id objc_msgSend_isPlayingFromUpNext(void *a1, const char *a2, ...)
{
  return _[a1 isPlayingFromUpNext];
}

id objc_msgSend_isPlayingLocally(void *a1, const char *a2, ...)
{
  return _[a1 isPlayingLocally];
}

id objc_msgSend_isPlaylistSyncDirty(void *a1, const char *a2, ...)
{
  return _[a1 isPlaylistSyncDirty];
}

id objc_msgSend_isPodcastUpdatable_userInitiated_forced_(void *a1, const char *a2, ...)
{
  return [a1 isPodcastUpdatable:userInitiated:forced:];
}

id objc_msgSend_isPodcastsCellularDownloadsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isPodcastsCellularDownloadsEnabled];
}

id objc_msgSend_isPresentedModally(void *a1, const char *a2, ...)
{
  return _[a1 isPresentedModally];
}

id objc_msgSend_isPrimaryUserActiveAccount(void *a1, const char *a2, ...)
{
  return _[a1 isPrimaryUserActiveAccount];
}

id objc_msgSend_isPrivateListeningEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isPrivateListeningEnabled];
}

id objc_msgSend_isReachable(void *a1, const char *a2, ...)
{
  return _[a1 isReachable];
}

id objc_msgSend_isReachableViaCellular(void *a1, const char *a2, ...)
{
  return _[a1 isReachableViaCellular];
}

id objc_msgSend_isRecoverableError(void *a1, const char *a2, ...)
{
  return _[a1 isRecoverableError];
}

id objc_msgSend_isRedirectURL_(void *a1, const char *a2, ...)
{
  return [a1 isRedirectURL];
}

id objc_msgSend_isRefreshing(void *a1, const char *a2, ...)
{
  return _[a1 isRefreshing];
}

id objc_msgSend_isRequestingImmediatePlayback(void *a1, const char *a2, ...)
{
  return _[a1 isRequestingImmediatePlayback];
}

id objc_msgSend_isResetable(void *a1, const char *a2, ...)
{
  return _[a1 isResetable];
}

id objc_msgSend_isResolvingError(void *a1, const char *a2, ...)
{
  return _[a1 isResolvingError];
}

id objc_msgSend_isRestricted(void *a1, const char *a2, ...)
{
  return _[a1 isRestricted];
}

id objc_msgSend_isRunning(void *a1, const char *a2, ...)
{
  return _[a1 isRunning];
}

id objc_msgSend_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 isRunningInStoreDemoMode];
}

id objc_msgSend_isRunningOnHomepod(void *a1, const char *a2, ...)
{
  return _[a1 isRunningOnHomepod];
}

id objc_msgSend_isRunningOnInternalOS(void *a1, const char *a2, ...)
{
  return _[a1 isRunningOnInternalOS];
}

id objc_msgSend_isScrollEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isScrollEnabled];
}

id objc_msgSend_isSeekingOrScrubbing(void *a1, const char *a2, ...)
{
  return _[a1 isSeekingOrScrubbing];
}

id objc_msgSend_isSeparatorHidden(void *a1, const char *a2, ...)
{
  return _[a1 isSeparatorHidden];
}

id objc_msgSend_isSerialPodcast(void *a1, const char *a2, ...)
{
  return _[a1 isSerialPodcast];
}

id objc_msgSend_isSerialShowTypeInFeed(void *a1, const char *a2, ...)
{
  return _[a1 isSerialShowTypeInFeed];
}

id objc_msgSend_isServerRevisionNewerThanClient_(void *a1, const char *a2, ...)
{
  return [a1 isServerRevisionNewerThanClient:];
}

id objc_msgSend_isShareable(void *a1, const char *a2, ...)
{
  return _[a1 isShareable];
}

id objc_msgSend_isSharedContentWithContentAdamId_(void *a1, const char *a2, ...)
{
  return [a1 isSharedContentWithContentAdamId:];
}

id objc_msgSend_isSmart(void *a1, const char *a2, ...)
{
  return _[a1 isSmart];
}

id objc_msgSend_isStateRestorationActivity(void *a1, const char *a2, ...)
{
  return _[a1 isStateRestorationActivity];
}

id objc_msgSend_isStopping(void *a1, const char *a2, ...)
{
  return _[a1 isStopping];
}

id objc_msgSend_isStoppingLock(void *a1, const char *a2, ...)
{
  return _[a1 isStoppingLock];
}

id objc_msgSend_isStreamable(void *a1, const char *a2, ...)
{
  return _[a1 isStreamable];
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return [a1 isSubclassOfClass:];
}

id objc_msgSend_isSubscribeCommandURLString_(void *a1, const char *a2, ...)
{
  return [a1 isSubscribeCommandURLString];
}

id objc_msgSend_isSubscribedToPodcastWithUuid_(void *a1, const char *a2, ...)
{
  return [a1 isSubscribedToPodcastWithUuid:];
}

id objc_msgSend_isSubscribingWithFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 isSubscribingWithFeedUrl:];
}

id objc_msgSend_isSubscriptionSyncDirtyFor_(void *a1, const char *a2, ...)
{
  return [a1 isSubscriptionSyncDirtyFor:];
}

id objc_msgSend_isSupportedUrlString_(void *a1, const char *a2, ...)
{
  return [a1 isSupportedUrlString];
}

id objc_msgSend_isSyncing(void *a1, const char *a2, ...)
{
  return _[a1 isSyncing];
}

id objc_msgSend_isTargetPlaying(void *a1, const char *a2, ...)
{
  return _[a1 isTargetPlaying];
}

id objc_msgSend_isToday(void *a1, const char *a2, ...)
{
  return _[a1 isToday];
}

id objc_msgSend_isTransactionCancelledError(void *a1, const char *a2, ...)
{
  return _[a1 isTransactionCancelledError];
}

id objc_msgSend_isUngroupedList(void *a1, const char *a2, ...)
{
  return _[a1 isUngroupedList];
}

id objc_msgSend_isUniversalPlaybackIdentifierURLString_(void *a1, const char *a2, ...)
{
  return [a1 isUniversalPlaybackIdentifierURLString];
}

id objc_msgSend_isUnplayed(void *a1, const char *a2, ...)
{
  return _[a1 isUnplayed];
}

id objc_msgSend_isUpdating(void *a1, const char *a2, ...)
{
  return _[a1 isUpdating];
}

id objc_msgSend_isUpdatingFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 isUpdatingFeedUrl:];
}

id objc_msgSend_isUserLoggedIn(void *a1, const char *a2, ...)
{
  return _[a1 isUserLoggedIn];
}

id objc_msgSend_isValidShowTypeSetting_(void *a1, const char *a2, ...)
{
  return [a1 isValidShowTypeSetting:];
}

id objc_msgSend_isVerticalLayout(void *a1, const char *a2, ...)
{
  return _[a1 isVerticalLayout];
}

id objc_msgSend_isVideo(void *a1, const char *a2, ...)
{
  return _[a1 isVideo];
}

id objc_msgSend_isVideo_(void *a1, const char *a2, ...)
{
  return [a1 isVideo:];
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isViewLoaded];
}

id objc_msgSend_isVisuallyPlayed(void *a1, const char *a2, ...)
{
  return _[a1 isVisuallyPlayed];
}

id objc_msgSend_isVolumeControlAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isVolumeControlAvailable];
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _[a1 item];
}

id objc_msgSend_itemDescription(void *a1, const char *a2, ...)
{
  return _[a1 itemDescription];
}

id objc_msgSend_itemDescriptionHasHTML(void *a1, const char *a2, ...)
{
  return _[a1 itemDescriptionHasHTML];
}

id objc_msgSend_itemDescriptionWithoutHTML(void *a1, const char *a2, ...)
{
  return _[a1 itemDescriptionWithoutHTML];
}

id objc_msgSend_itemFilePath(void *a1, const char *a2, ...)
{
  return _[a1 itemFilePath];
}

id objc_msgSend_itemIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 itemIdentifier];
}

id objc_msgSend_itemSummary(void *a1, const char *a2, ...)
{
  return _[a1 itemSummary];
}

id objc_msgSend_itemTitle(void *a1, const char *a2, ...)
{
  return _[a1 itemTitle];
}

id objc_msgSend_itemType(void *a1, const char *a2, ...)
{
  return _[a1 itemType];
}

id objc_msgSend_itemWithMPMediaItem_(void *a1, const char *a2, ...)
{
  return [a1 itemWithMPMediaItem:];
}

id objc_msgSend_itemWithMPMediaItem_isRestoreDownloadCandidate_(void *a1, const char *a2, ...)
{
  return [a1 itemWithMPMediaItem:isRestoreDownloadCandidate:];
}

id objc_msgSend_itemWithPersistentID_(void *a1, const char *a2, ...)
{
  return [a1 itemWithPersistentID:];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_itunesSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 itunesSubtitle];
}

id objc_msgSend_itunesTitle(void *a1, const char *a2, ...)
{
  return _[a1 itunesTitle];
}

id objc_msgSend_jumpBackwardsWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 jumpBackwardsWithCompletion:];
}

id objc_msgSend_jumpForwardsWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 jumpForwardsWithCompletion:];
}

id objc_msgSend_kIsPlayingKeyPath(void *a1, const char *a2, ...)
{
  return _[a1 kIsPlayingKeyPath];
}

id objc_msgSend_keepEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 keepEpisodes];
}

id objc_msgSend_keepsFeedFileInTempDirAfterDownload(void *a1, const char *a2, ...)
{
  return _[a1 keepsFeedFileInTempDirAfterDownload];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyImage(void *a1, const char *a2, ...)
{
  return _[a1 keyImage];
}

id objc_msgSend_keyProcessorPairProvider(void *a1, const char *a2, ...)
{
  return _[a1 keyProcessorPairProvider];
}

id objc_msgSend_keyRequestLicenseErrorDomain(void *a1, const char *a2, ...)
{
  return _[a1 keyRequestLicenseErrorDomain];
}

id objc_msgSend_keyStorage(void *a1, const char *a2, ...)
{
  return _[a1 keyStorage];
}

id objc_msgSend_keyValueStoreController(void *a1, const char *a2, ...)
{
  return _[a1 keyValueStoreController];
}

id objc_msgSend_keyValueStoreController_shouldScheduleTransaction_(void *a1, const char *a2, ...)
{
  return [a1 keyValueStoreController:shouldScheduleTransaction:];
}

id objc_msgSend_keyValueStoreController_transaction_didCancelWithError_(void *a1, const char *a2, ...)
{
  return [a1 keyValueStoreController:transaction:didCancelWithError:];
}

id objc_msgSend_keyValueStoreController_transaction_didFailWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyValueStoreController:transaction:didFailWithError:");
}

id objc_msgSend_keyValueStoreController_transactionDidFinish_(void *a1, const char *a2, ...)
{
  return [a1 keyValueStoreController:transactionDidFinish:];
}

id objc_msgSend_keyValueStoreDataCurrentRevision(void *a1, const char *a2, ...)
{
  return _[a1 keyValueStoreDataCurrentRevision];
}

id objc_msgSend_keyValueStoreDataFirstRevision(void *a1, const char *a2, ...)
{
  return _[a1 keyValueStoreDataFirstRevision];
}

id objc_msgSend_keyValueStoreDisabledErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyValueStoreDisabledErrorWithTransaction:underlyingError:");
}

id objc_msgSend_keyValueStoreErrorWithCode_localizedDescription_transaction_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyValueStoreErrorWithCode:localizedDescription:transaction:underlyingError:");
}

id objc_msgSend_keyValueStoreItemIdentifierForItem_(void *a1, const char *a2, ...)
{
  return [a1 keyValueStoreItemIdentifierForItem:];
}

id objc_msgSend_keyValueStoreOperation_scheduleURLRequest_(void *a1, const char *a2, ...)
{
  return [a1 keyValueStoreOperation:scheduleURLRequest:];
}

id objc_msgSend_keyValueStoreOperationOperationDidFinish_(void *a1, const char *a2, ...)
{
  return [a1 keyValueStoreOperationOperationDidFinish:];
}

id objc_msgSend_keyValueStorePayload(void *a1, const char *a2, ...)
{
  return _[a1 keyValueStorePayload];
}

id objc_msgSend_keyWindow(void *a1, const char *a2, ...)
{
  return _[a1 keyWindow];
}

id objc_msgSend_keyWithPrefix_assetID_(void *a1, const char *a2, ...)
{
  return [a1 keyWithPrefix:assetID:];
}

id objc_msgSend_keyedArtworkForShow_size_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 keyedArtworkForShow:size:completionHandler:];
}

id objc_msgSend_keys(void *a1, const char *a2, ...)
{
  return _[a1 keys];
}

id objc_msgSend_keysAndProcessorsForAllBookkeeperKeys(void *a1, const char *a2, ...)
{
  return _[a1 keysAndProcessorsForAllBookkeeperKeys];
}

id objc_msgSend_keysAndProcessorsForBookmarksSync(void *a1, const char *a2, ...)
{
  return _[a1 keysAndProcessorsForBookmarksSync];
}

id objc_msgSend_keysAndProcessorsForCriticalBookkeeperKeys(void *a1, const char *a2, ...)
{
  return _[a1 keysAndProcessorsForCriticalBookkeeperKeys];
}

id objc_msgSend_keysAndProcessorsForInterestSync(void *a1, const char *a2, ...)
{
  return _[a1 keysAndProcessorsForInterestSync];
}

id objc_msgSend_keysAndProcessorsForNonFollowedShowsSync(void *a1, const char *a2, ...)
{
  return _[a1 keysAndProcessorsForNonFollowedShowsSync];
}

id objc_msgSend_keysAndProcessorsForSubscriptionsAndStationsSync(void *a1, const char *a2, ...)
{
  return _[a1 keysAndProcessorsForSubscriptionsAndStationsSync];
}

id objc_msgSend_keysAndProcessorsForTermsVersionSync(void *a1, const char *a2, ...)
{
  return _[a1 keysAndProcessorsForTermsVersionSync];
}

id objc_msgSend_keysForTransaction_(void *a1, const char *a2, ...)
{
  return [a1 keysForTransaction:];
}

id objc_msgSend_keysOfEntriesPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 keysOfEntriesPassingTest:];
}

id objc_msgSend_killSwitchErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "killSwitchErrorWithTransaction:underlyingError:");
}

id objc_msgSend_kvsController(void *a1, const char *a2, ...)
{
  return _[a1 kvsController];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _[a1 label];
}

id objc_msgSend_labelInset(void *a1, const char *a2, ...)
{
  return _[a1 labelInset];
}

id objc_msgSend_labelSize(void *a1, const char *a2, ...)
{
  return _[a1 labelSize];
}

id objc_msgSend_labelStackViewDidChangeHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelStackViewDidChangeHeight:");
}

id objc_msgSend_lastAppUseDate(void *a1, const char *a2, ...)
{
  return _[a1 lastAppUseDate];
}

id objc_msgSend_lastBookmarkedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastBookmarkedDate];
}

id objc_msgSend_lastBookmarksSyncTimestampForSyncType_(void *a1, const char *a2, ...)
{
  return [a1 lastBookmarksSyncTimestampForSyncType:];
}

id objc_msgSend_lastCheckTime(void *a1, const char *a2, ...)
{
  return _[a1 lastCheckTime];
}

id objc_msgSend_lastDatePlayed(void *a1, const char *a2, ...)
{
  return _[a1 lastDatePlayed];
}

id objc_msgSend_lastImplicitlyFollowedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastImplicitlyFollowedDate];
}

id objc_msgSend_lastModifiedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastModifiedDate];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastPlaybackPositionSaveTime(void *a1, const char *a2, ...)
{
  return _[a1 lastPlaybackPositionSaveTime];
}

id objc_msgSend_lastPlaybackSaveTime(void *a1, const char *a2, ...)
{
  return _[a1 lastPlaybackSaveTime];
}

id objc_msgSend_lastPlayedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastPlayedDate];
}

id objc_msgSend_lastRecordedItemURL(void *a1, const char *a2, ...)
{
  return _[a1 lastRecordedItemURL];
}

id objc_msgSend_lastRemovedFromUpNextDate(void *a1, const char *a2, ...)
{
  return _[a1 lastRemovedFromUpNextDate];
}

id objc_msgSend_lastStoreEpisodesInfoCheckDate(void *a1, const char *a2, ...)
{
  return _[a1 lastStoreEpisodesInfoCheckDate];
}

id objc_msgSend_lastStorePodcastInfoCheckDate(void *a1, const char *a2, ...)
{
  return _[a1 lastStorePodcastInfoCheckDate];
}

id objc_msgSend_lastSyncTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 lastSyncTimestamp];
}

id objc_msgSend_lastSyncedDomainVersion(void *a1, const char *a2, ...)
{
  return _[a1 lastSyncedDomainVersion];
}

id objc_msgSend_lastTouchDate(void *a1, const char *a2, ...)
{
  return _[a1 lastTouchDate];
}

id objc_msgSend_lastUnfollowedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastUnfollowedDate];
}

id objc_msgSend_lastUserMarkedAsPlayedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastUserMarkedAsPlayedDate];
}

id objc_msgSend_latestEpisodeDate(void *a1, const char *a2, ...)
{
  return _[a1 latestEpisodeDate];
}

id objc_msgSend_latestExitFromDarkDownloads(void *a1, const char *a2, ...)
{
  return _[a1 latestExitFromDarkDownloads];
}

id objc_msgSend_latestSeasonNumber(void *a1, const char *a2, ...)
{
  return _[a1 latestSeasonNumber];
}

id objc_msgSend_latestUPPSubtask(void *a1, const char *a2, ...)
{
  return _[a1 latestUPPSubtask];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layoutAttributesForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 layoutAttributesForItemAtIndexPath:];
}

id objc_msgSend_layoutAttributesForSupplementaryViewOfKind_atIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 layoutAttributesForSupplementaryViewOfKind:atIndexPath:];
}

id objc_msgSend_layoutAttributesForSupplementaryViewOfKind_withIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 layoutAttributesForSupplementaryViewOfKind:withIndexPath:];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_layoutManager(void *a1, const char *a2, ...)
{
  return _[a1 layoutManager];
}

id objc_msgSend_layoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 layoutMargins];
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _[a1 layoutMarginsGuide];
}

id objc_msgSend_lazyAttributedDescription(void *a1, const char *a2, ...)
{
  return _[a1 lazyAttributedDescription];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_leadingMarginForViewWidth_(void *a1, const char *a2, ...)
{
  return [a1 leadingMarginForViewWidth:];
}

id objc_msgSend_leftAccessoryView(void *a1, const char *a2, ...)
{
  return _[a1 leftAccessoryView];
}

id objc_msgSend_leftEditingAccessoryView(void *a1, const char *a2, ...)
{
  return _[a1 leftEditingAccessoryView];
}

id objc_msgSend_legacyFetchArtworkForPlayerItem_contentItem_atTime_ofSize_completion_(void *a1, const char *a2, ...)
{
  return [a1 legacyFetchArtworkForPlayerItem:contentItem:atTime:ofSize:completion:];
}

id objc_msgSend_legacyLibraryPath(void *a1, const char *a2, ...)
{
  return _[a1 legacyLibraryPath];
}

id objc_msgSend_legacyPlayCountForPlayState_playCount_(void *a1, const char *a2, ...)
{
  return [a1 legacyPlayCountForPlayState:playCount:];
}

id objc_msgSend_legacyUICachedArtworkForPodcastUuid_withSize_(void *a1, const char *a2, ...)
{
  return [a1 legacyUICachedArtworkForPodcastUuid:withSize:];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lenientSharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 lenientSharedInstance];
}

id objc_msgSend_library(void *a1, const char *a2, ...)
{
  return _[a1 library];
}

id objc_msgSend_libraryActionControllerBridge(void *a1, const char *a2, ...)
{
  return _[a1 libraryActionControllerBridge];
}

id objc_msgSend_libraryDataProvider(void *a1, const char *a2, ...)
{
  return _[a1 libraryDataProvider];
}

id objc_msgSend_libraryDataVersion(void *a1, const char *a2, ...)
{
  return _[a1 libraryDataVersion];
}

id objc_msgSend_libraryPath(void *a1, const char *a2, ...)
{
  return _[a1 libraryPath];
}

id objc_msgSend_libraryShmPath(void *a1, const char *a2, ...)
{
  return _[a1 libraryShmPath];
}

id objc_msgSend_libraryWalPath(void *a1, const char *a2, ...)
{
  return _[a1 libraryWalPath];
}

id objc_msgSend_lineFragmentRectForGlyphAtIndex_effectiveRange_(void *a1, const char *a2, ...)
{
  return [a1 lineFragmentRectForGlyphAtIndex:effectiveRange:];
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return _[a1 lineHeight];
}

id objc_msgSend_linkMetadataForDataSource_(void *a1, const char *a2, ...)
{
  return [a1 linkMetadataForDataSource:];
}

id objc_msgSend_linkWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 linkWithBundleIdentifier:];
}

id objc_msgSend_listenNowEpisode(void *a1, const char *a2, ...)
{
  return _[a1 listenNowEpisode];
}

id objc_msgSend_listenNowQueryObserver(void *a1, const char *a2, ...)
{
  return _[a1 listenNowQueryObserver];
}

id objc_msgSend_load_(void *a1, const char *a2, ...)
{
  return [a1 load:];
}

id objc_msgSend_loadBagContextFromIMURLBag_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 loadBagContextFromIMURLBag:completionBlock:];
}

id objc_msgSend_loadData(void *a1, const char *a2, ...)
{
  return _[a1 loadData];
}

id objc_msgSend_loadIfNeededAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 loadIfNeededAndReturnError:];
}

id objc_msgSend_loadQueue(void *a1, const char *a2, ...)
{
  return _[a1 loadQueue];
}

id objc_msgSend_loadSessionsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadSessionsIfNeeded];
}

id objc_msgSend_loadState(void *a1, const char *a2, ...)
{
  return _[a1 loadState];
}

id objc_msgSend_loadStatus(void *a1, const char *a2, ...)
{
  return _[a1 loadStatus];
}

id objc_msgSend_localAssetSupportWorkQueue(void *a1, const char *a2, ...)
{
  return _[a1 localAssetSupportWorkQueue];
}

id objc_msgSend_localLibraryUpdatesDisabled(void *a1, const char *a2, ...)
{
  return _[a1 localLibraryUpdatesDisabled];
}

id objc_msgSend_localPlaybackQueueIdentifierForPodcastUuid_episodeUuid_sampPlaybackOrder_(void *a1, const char *a2, ...)
{
  return [a1 localPlaybackQueueIdentifierForPodcastUuid:episodeUuid:sampPlaybackOrder:];
}

id objc_msgSend_localPlaybackQueueIdentifierForStationUuid_episodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 localPlaybackQueueIdentifierForStationUuid:episodeUuid:];
}

id objc_msgSend_localShowMissing(void *a1, const char *a2, ...)
{
  return _[a1 localShowMissing];
}

id objc_msgSend_localizedCaseInsensitiveContainsString_(void *a1, const char *a2, ...)
{
  return [a1 localizedCaseInsensitiveContainsString:];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return _[a1 localizedFailureReason];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_localizedStringForSkipBackwards(void *a1, const char *a2, ...)
{
  return _[a1 localizedStringForSkipBackwards];
}

id objc_msgSend_localizedStringForSkipForward(void *a1, const char *a2, ...)
{
  return _[a1 localizedStringForSkipForward];
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithFormat:];
}

id objc_msgSend_localizedStringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithValidatedFormat:validFormatSpecifiers:error:];
}

id objc_msgSend_localizedUserNotificationStringForKey_arguments_(void *a1, const char *a2, ...)
{
  return [a1 localizedUserNotificationStringForKey:arguments:];
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return [a1 locationInView:];
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return _[a1 lock];
}

id objc_msgSend_lockContentOffset(void *a1, const char *a2, ...)
{
  return _[a1 lockContentOffset];
}

id objc_msgSend_lockWhenCondition_beforeDate_(void *a1, const char *a2, ...)
{
  return [a1 lockWhenCondition:beforeDate:];
}

id objc_msgSend_lockup_moreButtonTapped_(void *a1, const char *a2, ...)
{
  return [a1 lockup:moreButtonTapped:];
}

id objc_msgSend_lockupDidChangeSize_(void *a1, const char *a2, ...)
{
  return [a1 lockupDidChangeSize:];
}

id objc_msgSend_logAndThrow_(void *a1, const char *a2, ...)
{
  return [a1 logAndThrow:];
}

id objc_msgSend_logAndThrow_printStackTrace_(void *a1, const char *a2, ...)
{
  return [a1 logAndThrow:printStackTrace:];
}

id objc_msgSend_logEventWithType_context_(void *a1, const char *a2, ...)
{
  return [a1 logEventWithType:context:];
}

id objc_msgSend_logFile_lineNumber_format_(void *a1, const char *a2, ...)
{
  return [a1 logFile:lineNumber:format:];
}

id objc_msgSend_logPrefix(void *a1, const char *a2, ...)
{
  return _[a1 logPrefix];
}

id objc_msgSend_loggingCategory(void *a1, const char *a2, ...)
{
  return _[a1 loggingCategory];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_longReasonTextForNoInternet(void *a1, const char *a2, ...)
{
  return _[a1 longReasonTextForNoInternet];
}

id objc_msgSend_longStringForUnavailableReason_podcastTitle_(void *a1, const char *a2, ...)
{
  return [a1 longStringForUnavailableReason:podcastTitle:];
}

id objc_msgSend_longTitles(void *a1, const char *a2, ...)
{
  return _[a1 longTitles];
}

id objc_msgSend_lookupDict(void *a1, const char *a2, ...)
{
  return _[a1 lookupDict];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_magicMomentCompletionHandlers(void *a1, const char *a2, ...)
{
  return _[a1 magicMomentCompletionHandlers];
}

id objc_msgSend_magicMomentPlayerItem(void *a1, const char *a2, ...)
{
  return _[a1 magicMomentPlayerItem];
}

id objc_msgSend_main(void *a1, const char *a2, ...)
{
  return _[a1 main];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainOrPrivateContext(void *a1, const char *a2, ...)
{
  return _[a1 mainOrPrivateContext];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainQueueContext(void *a1, const char *a2, ...)
{
  return _[a1 mainQueueContext];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mainThread_(void *a1, const char *a2, ...)
{
  return [a1 mainThread:];
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyAndVisible];
}

id objc_msgSend_makeObjectsPerformSelector_(void *a1, const char *a2, ...)
{
  return [a1 makeObjectsPerformSelector:];
}

id objc_msgSend_managedAssetsDirectoryURL(void *a1, const char *a2, ...)
{
  return _[a1 managedAssetsDirectoryURL];
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectContext];
}

id objc_msgSend_managedObjectModel(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectModel];
}

id objc_msgSend_managedObjectModelDefinitionURL(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectModelDefinitionURL];
}

id objc_msgSend_manifest(void *a1, const char *a2, ...)
{
  return _[a1 manifest];
}

id objc_msgSend_manifestDidChange(void *a1, const char *a2, ...)
{
  return _[a1 manifestDidChange];
}

id objc_msgSend_manifestIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 manifestIdentifier];
}

id objc_msgSend_manifestIndex(void *a1, const char *a2, ...)
{
  return _[a1 manifestIndex];
}

id objc_msgSend_manuallyAdded(void *a1, const char *a2, ...)
{
  return _[a1 manuallyAdded];
}

id objc_msgSend_markAddedSubscriptionsAsSynced(void *a1, const char *a2, ...)
{
  return _[a1 markAddedSubscriptionsAsSynced];
}

id objc_msgSend_markAllShowsAsSynced(void *a1, const char *a2, ...)
{
  return _[a1 markAllShowsAsSynced];
}

id objc_msgSend_markAsAgreedToLatestTerms(void *a1, const char *a2, ...)
{
  return _[a1 markAsAgreedToLatestTerms];
}

id objc_msgSend_markAsUnbookmarked(void *a1, const char *a2, ...)
{
  return _[a1 markAsUnbookmarked];
}

id objc_msgSend_markBookmarksSyncDirty_for_(void *a1, const char *a2, ...)
{
  return [a1 markBookmarksSyncDirty:for:];
}

id objc_msgSend_markEpisodeAsFirstSeen_(void *a1, const char *a2, ...)
{
  return [a1 markEpisodeAsFirstSeen:];
}

id objc_msgSend_markEpisodesAsNotified_(void *a1, const char *a2, ...)
{
  return [a1 markEpisodesAsNotified:];
}

id objc_msgSend_markEverythingAsSyncedWithVersion_(void *a1, const char *a2, ...)
{
  return [a1 markEverythingAsSyncedWithVersion:];
}

id objc_msgSend_markHasBeenIndexed(void *a1, const char *a2, ...)
{
  return _[a1 markHasBeenIndexed];
}

id objc_msgSend_markPlayedAction(void *a1, const char *a2, ...)
{
  return _[a1 markPlayedAction];
}

id objc_msgSend_markPlaylistsForUpdate(void *a1, const char *a2, ...)
{
  return _[a1 markPlaylistsForUpdate];
}

id objc_msgSend_markShowsAsSyncedForPredicate_(void *a1, const char *a2, ...)
{
  return [a1 markShowsAsSyncedForPredicate:];
}

id objc_msgSend_markSubscriptionSyncDirty_for_(void *a1, const char *a2, ...)
{
  return [a1 markSubscriptionSyncDirty:for:];
}

id objc_msgSend_markUnplayedAction(void *a1, const char *a2, ...)
{
  return _[a1 markUnplayedAction];
}

id objc_msgSend_markUpdateUnnecessaryForObjectIDs_(void *a1, const char *a2, ...)
{
  return [a1 markUpdateUnnecessaryForObjectIDs:];
}

id objc_msgSend_markWelcomeAsShown(void *a1, const char *a2, ...)
{
  return _[a1 markWelcomeAsShown];
}

id objc_msgSend_marketingPushHandler(void *a1, const char *a2, ...)
{
  return _[a1 marketingPushHandler];
}

id objc_msgSend_maximumContentWidthForStyle_(void *a1, const char *a2, ...)
{
  return [a1 maximumContentWidthForStyle:];
}

id objc_msgSend_maximumLevelHeightDefault(void *a1, const char *a2, ...)
{
  return _[a1 maximumLevelHeightDefault];
}

id objc_msgSend_maximumLevelHeightMax(void *a1, const char *a2, ...)
{
  return _[a1 maximumLevelHeightMax];
}

id objc_msgSend_maximumLevelHeightMin(void *a1, const char *a2, ...)
{
  return _[a1 maximumLevelHeightMin];
}

id objc_msgSend_maximumNumberOfLines(void *a1, const char *a2, ...)
{
  return _[a1 maximumNumberOfLines];
}

id objc_msgSend_mediaApiClientIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaApiClientIdentifier];
}

id objc_msgSend_mediaApiClientVersion(void *a1, const char *a2, ...)
{
  return _[a1 mediaApiClientVersion];
}

id objc_msgSend_mediaContainer(void *a1, const char *a2, ...)
{
  return _[a1 mediaContainer];
}

id objc_msgSend_mediaItemDictionary(void *a1, const char *a2, ...)
{
  return _[a1 mediaItemDictionary];
}

id objc_msgSend_mediaItemForEpisodeWithManagedObjectID_(void *a1, const char *a2, ...)
{
  return [a1 mediaItemForEpisodeWithManagedObjectID];
}

id objc_msgSend_mediaItemForEpisodeWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 mediaItemForEpisodeWithUUID:];
}

id objc_msgSend_mediaItemIdentifierForEpisode_(void *a1, const char *a2, ...)
{
  return [a1 mediaItemIdentifierForEpisode];
}

id objc_msgSend_mediaItems(void *a1, const char *a2, ...)
{
  return _[a1 mediaItems];
}

id objc_msgSend_mediaLibraryDidChange(void *a1, const char *a2, ...)
{
  return _[a1 mediaLibraryDidChange];
}

id objc_msgSend_mediaLibraryId(void *a1, const char *a2, ...)
{
  return _[a1 mediaLibraryId];
}

id objc_msgSend_mediaOptionArray_(void *a1, const char *a2, ...)
{
  return [a1 mediaOptionArray:];
}

id objc_msgSend_mediaOptionValues(void *a1, const char *a2, ...)
{
  return _[a1 mediaOptionValues];
}

id objc_msgSend_mediaQuery(void *a1, const char *a2, ...)
{
  return _[a1 mediaQuery];
}

id objc_msgSend_mediaRemoteOptions(void *a1, const char *a2, ...)
{
  return _[a1 mediaRemoteOptions];
}

id objc_msgSend_mediaRemotePlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 mediaRemotePlayerPath];
}

id objc_msgSend_mediaRequestsWWAN(void *a1, const char *a2, ...)
{
  return _[a1 mediaRequestsWWAN];
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return _[a1 mediaType];
}

id objc_msgSend_menuWithTitle_children_(void *a1, const char *a2, ...)
{
  return [a1 menuWithTitle:children:];
}

id objc_msgSend_mergeArray_fromArray_lookupKey_updateBlock_insertBlock_deleteBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeArray:fromArray:lookupKey:updateBlock:insertBlock:deleteBlock:");
}

id objc_msgSend_mergeData_forKey_(void *a1, const char *a2, ...)
{
  return [a1 mergeData:forKey:];
}

id objc_msgSend_mergeData_forKey_version_mismatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeData:forKey:version:mismatch:");
}

id objc_msgSend_mergeData_forKey_version_mismatch_finishedBlock_(void *a1, const char *a2, ...)
{
  return [a1 mergeData:forKey:version:mismatch:finishedBlock:];
}

id objc_msgSend_mergeData_forKey_version_mismatch_isGetTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeData:forKey:version:mismatch:isGetTransaction:");
}

id objc_msgSend_mergeData_mismatch_(void *a1, const char *a2, ...)
{
  return [a1 mergeData:mismatch:];
}

id objc_msgSend_mergeLocalAndRemoteData_forKey_version_mismatch_(void *a1, const char *a2, ...)
{
  return [a1 mergeLocalAndRemoteData:forKey:version:mismatch:];
}

id objc_msgSend_mergeMetadataItemFromSetResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeMetadataItemFromSetResponse:");
}

id objc_msgSend_mergeMetadataItemsFromGetResponse(void *a1, const char *a2, ...)
{
  return _[a1 mergeMetadataItemsFromGetResponse];
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _[a1 message];
}

id objc_msgSend_messageForAlertController(void *a1, const char *a2, ...)
{
  return _[a1 messageForAlertController];
}

id objc_msgSend_messageLabel(void *a1, const char *a2, ...)
{
  return _[a1 messageLabel];
}

id objc_msgSend_messageLabelWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 messageLabelWithFrame:];
}

id objc_msgSend_metadataChapters(void *a1, const char *a2, ...)
{
  return _[a1 metadataChapters];
}

id objc_msgSend_metadataCommandCenter(void *a1, const char *a2, ...)
{
  return _[a1 metadataCommandCenter];
}

id objc_msgSend_metadataFooterFont(void *a1, const char *a2, ...)
{
  return _[a1 metadataFooterFont];
}

id objc_msgSend_metadataFooterForEpisode_includingDuration_(void *a1, const char *a2, ...)
{
  return [a1 metadataFooterForEpisode:includingDuration:];
}

id objc_msgSend_metadataFrameForViewWidth_titleFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataFrameForViewWidth:titleFrame:style:");
}

id objc_msgSend_metadataHeaderFont(void *a1, const char *a2, ...)
{
  return _[a1 metadataHeaderFont];
}

id objc_msgSend_metadataIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 metadataIdentifier];
}

id objc_msgSend_metadataInfoCenter(void *a1, const char *a2, ...)
{
  return _[a1 metadataInfoCenter];
}

id objc_msgSend_metadataItemsFromDataSource(void *a1, const char *a2, ...)
{
  return _[a1 metadataItemsFromDataSource];
}

id objc_msgSend_metadataItemsFromKVSStorage(void *a1, const char *a2, ...)
{
  return _[a1 metadataItemsFromKVSStorage];
}

id objc_msgSend_metadataItemsToCommitToDataSource(void *a1, const char *a2, ...)
{
  return _[a1 metadataItemsToCommitToDataSource];
}

id objc_msgSend_metadataItemsToCommitToKVSStorage(void *a1, const char *a2, ...)
{
  return _[a1 metadataItemsToCommitToKVSStorage];
}

id objc_msgSend_metadataLabel(void *a1, const char *a2, ...)
{
  return _[a1 metadataLabel];
}

id objc_msgSend_metadataObject(void *a1, const char *a2, ...)
{
  return _[a1 metadataObject];
}

id objc_msgSend_metadataTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 metadataTimestamp];
}

id objc_msgSend_metadataWithValuesFromDataSourceItem_(void *a1, const char *a2, ...)
{
  return [a1 metadataWithValuesFromDataSourceItem:];
}

id objc_msgSend_metadataWithValuesItemIdentifier_keyValueStorePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataWithValuesItemIdentifier:keyValueStorePayload:");
}

id objc_msgSend_methodSignatureForSelector_(void *a1, const char *a2, ...)
{
  return [a1 methodSignatureForSelector:];
}

id objc_msgSend_metricDataSource(void *a1, const char *a2, ...)
{
  return _[a1 metricDataSource];
}

id objc_msgSend_metrics(void *a1, const char *a2, ...)
{
  return _[a1 metrics];
}

id objc_msgSend_metricsAdditionalData(void *a1, const char *a2, ...)
{
  return _[a1 metricsAdditionalData];
}

id objc_msgSend_metricsCanaryIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 metricsCanaryIdentifier];
}

id objc_msgSend_metricsContentIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 metricsContentIdentifier];
}

id objc_msgSend_metricsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 metricsDictionary];
}

id objc_msgSend_metricsKeys(void *a1, const char *a2, ...)
{
  return _[a1 metricsKeys];
}

id objc_msgSend_metricsPlayStartPosition(void *a1, const char *a2, ...)
{
  return _[a1 metricsPlayStartPosition];
}

id objc_msgSend_metricsPlayStartTime(void *a1, const char *a2, ...)
{
  return _[a1 metricsPlayStartTime];
}

id objc_msgSend_metricsSender(void *a1, const char *a2, ...)
{
  return _[a1 metricsSender];
}

id objc_msgSend_migrate(void *a1, const char *a2, ...)
{
  return _[a1 migrate];
}

id objc_msgSend_migrateDatabasePropertiesToSharedContainerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 migrateDatabasePropertiesToSharedContainerIfNeeded];
}

id objc_msgSend_migrateDatabaseToSharedContainerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 migrateDatabaseToSharedContainerIfNeeded];
}

id objc_msgSend_migrateDefaultPlaylistsForVersion18to19(void *a1, const char *a2, ...)
{
  return _[a1 migrateDefaultPlaylistsForVersion18to19];
}

id objc_msgSend_migrateIfNecessaryWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 migrateIfNecessaryWithCompletion:];
}

id objc_msgSend_migrateLibraryArtworkFromImageStoreWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 migrateLibraryArtworkFromImageStoreWithCompletionHandler:];
}

id objc_msgSend_migratePlaylistDefaultsForVersion7to8(void *a1, const char *a2, ...)
{
  return _[a1 migratePlaylistDefaultsForVersion7to8];
}

id objc_msgSend_migratePlaylistsForVersion_(void *a1, const char *a2, ...)
{
  return [a1 migratePlaylistsForVersion:];
}

id objc_msgSend_migrateSerpentId(void *a1, const char *a2, ...)
{
  return _[a1 migrateSerpentId];
}

id objc_msgSend_migrateSettingDefaultsForVersion10to11(void *a1, const char *a2, ...)
{
  return _[a1 migrateSettingDefaultsForVersion10to11];
}

id objc_msgSend_migrateSettingDefaultsForVersion30to31(void *a1, const char *a2, ...)
{
  return _[a1 migrateSettingDefaultsForVersion30to31];
}

id objc_msgSend_migrateSettingDefaultsForVersion42to43(void *a1, const char *a2, ...)
{
  return _[a1 migrateSettingDefaultsForVersion42to43];
}

id objc_msgSend_migrateSettingDefaultsForVersion44to45(void *a1, const char *a2, ...)
{
  return _[a1 migrateSettingDefaultsForVersion44to45];
}

id objc_msgSend_migrateSettingDefaultsForVersion48to49(void *a1, const char *a2, ...)
{
  return _[a1 migrateSettingDefaultsForVersion48to49];
}

id objc_msgSend_migrateSettingDefaultsForVersion58to59(void *a1, const char *a2, ...)
{
  return _[a1 migrateSettingDefaultsForVersion58to59];
}

id objc_msgSend_migrateSettingDefaultsForVersion6to7(void *a1, const char *a2, ...)
{
  return _[a1 migrateSettingDefaultsForVersion6to7];
}

id objc_msgSend_migrateSettingDefaultsForVersion9to10(void *a1, const char *a2, ...)
{
  return _[a1 migrateSettingDefaultsForVersion9to10];
}

id objc_msgSend_migrateSettingsForVersion_(void *a1, const char *a2, ...)
{
  return [a1 migrateSettingsForVersion:];
}

id objc_msgSend_migrateToDeltaFeedSystem(void *a1, const char *a2, ...)
{
  return _[a1 migrateToDeltaFeedSystem];
}

id objc_msgSend_migrationRegisteredAtVersion_(void *a1, const char *a2, ...)
{
  return [a1 migrationRegisteredAtVersion:];
}

id objc_msgSend_minimumInteritemSpacing(void *a1, const char *a2, ...)
{
  return _[a1 minimumInteritemSpacing];
}

id objc_msgSend_minimumLineSpacing(void *a1, const char *a2, ...)
{
  return _[a1 minimumLineSpacing];
}

id objc_msgSend_minusOrderedSet_(void *a1, const char *a2, ...)
{
  return [a1 minusOrderedSet:];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return [a1 minusSet:];
}

id objc_msgSend_mockEpisode(void *a1, const char *a2, ...)
{
  return _[a1 mockEpisode];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modernKeyFromFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 modernKeyFromFeedUrl:];
}

id objc_msgSend_modifiedDate(void *a1, const char *a2, ...)
{
  return _[a1 modifiedDate];
}

id objc_msgSend_moreAction(void *a1, const char *a2, ...)
{
  return _[a1 moreAction];
}

id objc_msgSend_moreButton(void *a1, const char *a2, ...)
{
  return _[a1 moreButton];
}

id objc_msgSend_moreButtonFrameForDescriptionFrame_(void *a1, const char *a2, ...)
{
  return [a1 moreButtonFrameForDescriptionFrame:];
}

id objc_msgSend_moreButtonTapped_(void *a1, const char *a2, ...)
{
  return [a1 moreButtonTapped:];
}

id objc_msgSend_moreIcon(void *a1, const char *a2, ...)
{
  return _[a1 moreIcon];
}

id objc_msgSend_moveEpisodeFrom_to_(void *a1, const char *a2, ...)
{
  return [a1 moveEpisodeFrom:to:];
}

id objc_msgSend_moveItemAtPath_toPath_error_(void *a1, const char *a2, ...)
{
  return [a1 moveItemAtPath:toPath:error:];
}

id objc_msgSend_moveItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return [a1 moveItemAtURL:toURL:error:];
}

id objc_msgSend_moveSQLiteFilesFromDocumentsToSharedContainer(void *a1, const char *a2, ...)
{
  return _[a1 moveSQLiteFilesFromDocumentsToSharedContainer];
}

id objc_msgSend_moveSourceFile_toPath_(void *a1, const char *a2, ...)
{
  return [a1 moveSourceFile:toPath:];
}

id objc_msgSend_moveUserDefaultToSharedContainer_(void *a1, const char *a2, ...)
{
  return [a1 moveUserDefaultToSharedContainer];
}

id objc_msgSend_mt_RTLMirrorIfNeeded(void *a1, const char *a2, ...)
{
  return [a1 mt_RTLMirrorIfNeeded];
}

id objc_msgSend_mt_accessSchedulingOptionsByRequestIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 mt_accessSchedulingOptionsByRequestIdentifier:];
}

id objc_msgSend_mt_actionType(void *a1, const char *a2, ...)
{
  return [a1 mt_actionType];
}

id objc_msgSend_mt_allItemsForPodcastsApp(void *a1, const char *a2, ...)
{
  return [a1 mt_allItemsForPodcastsApp];
}

id objc_msgSend_mt_allItemsForPodcastsAppWithAdditionalFilterPredicate_disableSystemPredicates_(void *a1, const char *a2, ...)
{
  return [a1 mt_allItemsForPodcastsAppWithAdditionalFilterPredicate:disableSystemPredicates:];
}

id objc_msgSend_mt_allSupportedLocalNotificationCategories(void *a1, const char *a2, ...)
{
  return [a1 mt_allSupportedLocalNotificationCategories];
}

id objc_msgSend_mt_allSupportedNotificationCategories(void *a1, const char *a2, ...)
{
  return [a1 mt_allSupportedNotificationCategories];
}

id objc_msgSend_mt_areMarginsGenerousForWidth_(void *a1, const char *a2, ...)
{
  return [a1 mt_areMarginsGenerousForWidth:];
}

id objc_msgSend_mt_baselineOriginY(void *a1, const char *a2, ...)
{
  return [a1 mt_baselineOriginY];
}

id objc_msgSend_mt_collectionView(void *a1, const char *a2, ...)
{
  return [a1 mt_collectionView];
}

id objc_msgSend_mt_compactMap_(void *a1, const char *a2, ...)
{
  return [a1 mt_compactMap:];
}

id objc_msgSend_mt_configureForDisplayingArtworkWithRadius_(void *a1, const char *a2, ...)
{
  return [a1 mt_configureForDisplayingArtworkWithRadius:];
}

id objc_msgSend_mt_copy(void *a1, const char *a2, ...)
{
  return [a1 mt_copy];
}

id objc_msgSend_mt_dynamicTypeConstant(void *a1, const char *a2, ...)
{
  return [a1 mt_dynamicTypeConstant];
}

id objc_msgSend_mt_enableAutomaticRTLMirroringForSubviews(void *a1, const char *a2, ...)
{
  return [a1 mt_enableAutomaticRTLMirroringForSubviews];
}

id objc_msgSend_mt_filter_(void *a1, const char *a2, ...)
{
  return [a1 mt_filter:];
}

id objc_msgSend_mt_firstBaselineOffsetFromTop(void *a1, const char *a2, ...)
{
  return [a1 mt_firstBaselineOffsetFromTop];
}

id objc_msgSend_mt_fontDescriptorForTextStyle_contentSizeCategoryName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mt_fontDescriptorForTextStyle:contentSizeCategoryName:");
}

id objc_msgSend_mt_fontForTextStyle_contentSizeCategoryName_(void *a1, const char *a2, ...)
{
  return [a1 mt_fontForTextStyle:contentSizeCategoryName:];
}

id objc_msgSend_mt_horizontalMarginsForWidth_(void *a1, const char *a2, ...)
{
  return [a1 mt_horizontalMarginsForWidth:];
}

id objc_msgSend_mt_iTunesUQuery(void *a1, const char *a2, ...)
{
  return [a1 mt_iTunesUQuery];
}

id objc_msgSend_mt_imageAttachmentForCacheKey_imageURL_(void *a1, const char *a2, ...)
{
  return [a1 mt_imageAttachmentForCacheKey:imageURL:];
}

id objc_msgSend_mt_isExcludedFromAutomaticRTLMirroring(void *a1, const char *a2, ...)
{
  return [a1 mt_isExcludedFromAutomaticRTLMirroring];
}

id objc_msgSend_mt_isPlayerItemRequestIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 mt_isPlayerItemRequestIdentifier:];
}

id objc_msgSend_mt_isRTL(void *a1, const char *a2, ...)
{
  return [a1 mt_isRTL];
}

id objc_msgSend_mt_isUuidRequestIdentifier_matchForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 mt_isUuidRequestIdentifier:matchForPodcastUuid:];
}

id objc_msgSend_mt_layoutMarginsForWidth_(void *a1, const char *a2, ...)
{
  return [a1 mt_layoutMarginsForWidth:];
}

id objc_msgSend_mt_leftMargin(void *a1, const char *a2, ...)
{
  return [a1 mt_leftMargin];
}

id objc_msgSend_mt_localNotificationForAnnouncements(void *a1, const char *a2, ...)
{
  return [a1 mt_localNotificationForAnnouncements];
}

id objc_msgSend_mt_localNotificationForNewEpisodesAvailable(void *a1, const char *a2, ...)
{
  return [a1 mt_localNotificationForNewEpisodesAvailable];
}

id objc_msgSend_mt_notificationEpisodes(void *a1, const char *a2, ...)
{
  return [a1 mt_notificationEpisodes];
}

id objc_msgSend_mt_offsetFromCapHeightToAscent(void *a1, const char *a2, ...)
{
  return [a1 mt_offsetFromCapHeightToAscent];
}

id objc_msgSend_mt_offsetFromFirstBaselineToTop(void *a1, const char *a2, ...)
{
  return [a1 mt_offsetFromFirstBaselineToTop];
}

id objc_msgSend_mt_offsetFromLastBaselineToBottom(void *a1, const char *a2, ...)
{
  return [a1 mt_offsetFromLastBaselineToBottom];
}

id objc_msgSend_mt_podcastUuid(void *a1, const char *a2, ...)
{
  return [a1 mt_podcastUuid];
}

id objc_msgSend_mt_podcastsQuery(void *a1, const char *a2, ...)
{
  return [a1 mt_podcastsQuery];
}

id objc_msgSend_mt_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 mt_preferredFontForTextStyle:];
}

id objc_msgSend_mt_preferredFontForTextStyle_addingSymbolicTraits_(void *a1, const char *a2, ...)
{
  return [a1 mt_preferredFontForTextStyle:addingSymbolicTraits:];
}

id objc_msgSend_mt_recursivelyFindFirstViewMeetingCriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mt_recursivelyFindFirstViewMeetingCriteria:");
}

id objc_msgSend_mt_removeAllNotificationsForDeletedEpisodesOnPodcastUuid_ctx_(void *a1, const char *a2, ...)
{
  return [a1 mt_removeAllNotificationsForDeletedEpisodesOnPodcastUuid:ctx:];
}

id objc_msgSend_mt_removeAllNotificationsForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 mt_removeAllNotificationsForPodcastUuid:];
}

id objc_msgSend_mt_rootViewController(void *a1, const char *a2, ...)
{
  return [a1 mt_rootViewController];
}

id objc_msgSend_mt_schedulingOptions(void *a1, const char *a2, ...)
{
  return [a1 mt_schedulingOptions];
}

id objc_msgSend_mt_setDynamicTypeConstant_(void *a1, const char *a2, ...)
{
  return [a1 mt_setDynamicTypeConstant:];
}

id objc_msgSend_mt_setSchedulingOptions_(void *a1, const char *a2, ...)
{
  return [a1 mt_setSchedulingOptions:];
}

id objc_msgSend_mt_setShouldRTLMirrorStackDepth_(void *a1, const char *a2, ...)
{
  return [a1 mt_setShouldRTLMirrorStackDepth:];
}

id objc_msgSend_mt_setUserInfoEpisode_(void *a1, const char *a2, ...)
{
  return [a1 mt_setUserInfoEpisode:];
}

id objc_msgSend_mt_setUserInfoPodcastUuid_episodes_(void *a1, const char *a2, ...)
{
  return [a1 mt_setUserInfoPodcastUuid:episodes:];
}

id objc_msgSend_mt_shouldRTLMirrorStackDepth(void *a1, const char *a2, ...)
{
  return [a1 mt_shouldRTLMirrorStackDepth];
}

id objc_msgSend_mt_subdictionaryWithKeys_(void *a1, const char *a2, ...)
{
  return [a1 mt_subdictionaryWithKeys:];
}

id objc_msgSend_mt_topViewController(void *a1, const char *a2, ...)
{
  return [a1 mt_topViewController];
}

id objc_msgSend_mt_uniqueRequestIdentifierForPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 mt_uniqueRequestIdentifierForPlayerItem:];
}

id objc_msgSend_mt_uniqueRequestIdentifierForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 mt_uniqueRequestIdentifierForPodcastUuid:];
}

id objc_msgSend_multiCheckIcon(void *a1, const char *a2, ...)
{
  return _[a1 multiCheckIcon];
}

id objc_msgSend_multiUncheckIcon(void *a1, const char *a2, ...)
{
  return _[a1 multiUncheckIcon];
}

id objc_msgSend_multiplier(void *a1, const char *a2, ...)
{
  return _[a1 multiplier];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_mutableOrderedSetValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 mutableOrderedSetValueForKey:];
}

id objc_msgSend_mutableSetValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 mutableSetValueForKey:];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nanoFriendlyDisplayString(void *a1, const char *a2, ...)
{
  return _[a1 nanoFriendlyDisplayString];
}

id objc_msgSend_naturalRect(void *a1, const char *a2, ...)
{
  return _[a1 naturalRect];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_needToMigrateDataToSharedContainer(void *a1, const char *a2, ...)
{
  return _[a1 needToMigrateDataToSharedContainer];
}

id objc_msgSend_needsArtworkUpdate(void *a1, const char *a2, ...)
{
  return _[a1 needsArtworkUpdate];
}

id objc_msgSend_needsCacheBustForFreeAndPaidUrlStorage(void *a1, const char *a2, ...)
{
  return _[a1 needsCacheBustForFreeAndPaidUrlStorage];
}

id objc_msgSend_needsCoreDataMigration(void *a1, const char *a2, ...)
{
  return _[a1 needsCoreDataMigration];
}

id objc_msgSend_needsDataMigration(void *a1, const char *a2, ...)
{
  return _[a1 needsDataMigration];
}

id objc_msgSend_needsFrozenCheck(void *a1, const char *a2, ...)
{
  return _[a1 needsFrozenCheck];
}

id objc_msgSend_needsImageStoreMigration(void *a1, const char *a2, ...)
{
  return _[a1 needsImageStoreMigration];
}

id objc_msgSend_needsMigration(void *a1, const char *a2, ...)
{
  return _[a1 needsMigration];
}

id objc_msgSend_needsMigrationToDeltaFeedUpdates(void *a1, const char *a2, ...)
{
  return _[a1 needsMigrationToDeltaFeedUpdates];
}

id objc_msgSend_needsNetworkToPlayButNoNetwork(void *a1, const char *a2, ...)
{
  return _[a1 needsNetworkToPlayButNoNetwork];
}

id objc_msgSend_needsRestore(void *a1, const char *a2, ...)
{
  return _[a1 needsRestore];
}

id objc_msgSend_needsSerpentIdEpisodeMigration(void *a1, const char *a2, ...)
{
  return _[a1 needsSerpentIdEpisodeMigration];
}

id objc_msgSend_needsToComputeLastLaunch(void *a1, const char *a2, ...)
{
  return _[a1 needsToComputeLastLaunch];
}

id objc_msgSend_needsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 needsUpdate];
}

id objc_msgSend_networkIsReachable(void *a1, const char *a2, ...)
{
  return _[a1 networkIsReachable];
}

id objc_msgSend_networkStatus(void *a1, const char *a2, ...)
{
  return _[a1 networkStatus];
}

id objc_msgSend_networkUPPEnabled(void *a1, const char *a2, ...)
{
  return _[a1 networkUPPEnabled];
}

id objc_msgSend_networkingBlockedErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 networkingBlockedErrorWithTransaction:underlyingError:];
}

id objc_msgSend_networkingBlockedUntil(void *a1, const char *a2, ...)
{
  return _[a1 networkingBlockedUntil];
}

id objc_msgSend_newBackgroundTaskWithExpirationHandler_debugInfo_(void *a1, const char *a2, ...)
{
  return [a1 newBackgroundTaskWithExpirationHandler:debugInfo:];
}

id objc_msgSend_newCellForDescriptionType_inGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 newCellForDescriptionType:inGroupWithIdentifier:];
}

id objc_msgSend_newCellInstanceWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 newCellInstanceWithReuseIdentifier];
}

id objc_msgSend_newCommandEventWithInterval_(void *a1, const char *a2, ...)
{
  return [a1 newCommandEventWithInterval:];
}

id objc_msgSend_newEpisodeCount(void *a1, const char *a2, ...)
{
  return _[a1 newEpisodeCount];
}

id objc_msgSend_newKVSGetAllTransactionSinceDomainVersion_(void *a1, const char *a2, ...)
{
  return [a1 newKVSGetAllTransactionSinceDomainVersion:];
}

id objc_msgSend_newKVSGetAllTransactionWithMetadataItems_(void *a1, const char *a2, ...)
{
  return [a1 newKVSGetAllTransactionWithMetadataItems:];
}

id objc_msgSend_newKVSPutAllTransactionWithMetadataItems_(void *a1, const char *a2, ...)
{
  return [a1 newKVSPutAllTransactionWithMetadataItems:];
}

id objc_msgSend_newKVSTransactionWithType_keys_(void *a1, const char *a2, ...)
{
  return [a1 newKVSTransactionWithType:keys:];
}

id objc_msgSend_newSettingsController(void *a1, const char *a2, ...)
{
  return _[a1 newSettingsController];
}

id objc_msgSend_newestEpisode(void *a1, const char *a2, ...)
{
  return _[a1 newestEpisode];
}

id objc_msgSend_newestEpisodeByAvailabiltyTime(void *a1, const char *a2, ...)
{
  return _[a1 newestEpisodeByAvailabiltyTime];
}

id objc_msgSend_newestEpisodeExcludingUuid_excludeExplicit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newestEpisodeExcludingUuid:excludeExplicit:");
}

id objc_msgSend_newestEpisodeWithFilter_(void *a1, const char *a2, ...)
{
  return [a1 newestEpisodeWithFilter:];
}

id objc_msgSend_newestFullEpisode(void *a1, const char *a2, ...)
{
  return _[a1 newestFullEpisode];
}

id objc_msgSend_newestUserEpisodeExcludingExplicit_(void *a1, const char *a2, ...)
{
  return [a1 newestUserEpisodeExcludingExplicit:];
}

id objc_msgSend_newlyEntitledEpisodeUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 newlyEntitledEpisodeUUIDs];
}

id objc_msgSend_next(void *a1, const char *a2, ...)
{
  return _[a1 next];
}

id objc_msgSend_nextBatchWithTransformationBlock_(void *a1, const char *a2, ...)
{
  return [a1 nextBatchWithTransformationBlock:];
}

id objc_msgSend_nextEpisode(void *a1, const char *a2, ...)
{
  return _[a1 nextEpisode];
}

id objc_msgSend_nextEpisodeUuid(void *a1, const char *a2, ...)
{
  return _[a1 nextEpisodeUuid];
}

id objc_msgSend_nextIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 nextIndexPath];
}

id objc_msgSend_nextManifest_(void *a1, const char *a2, ...)
{
  return [a1 nextManifest:];
}

id objc_msgSend_noStoreAccountErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 noStoreAccountErrorWithTransaction:underlyingError:];
}

id objc_msgSend_notPredicateWithSubpredicate_(void *a1, const char *a2, ...)
{
  return [a1 notPredicateWithSubpredicate:];
}

id objc_msgSend_notYetUpdatable(void *a1, const char *a2, ...)
{
  return _[a1 notYetUpdatable];
}

id objc_msgSend_noteObserver(void *a1, const char *a2, ...)
{
  return _[a1 noteObserver];
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _[a1 notification];
}

id objc_msgSend_notificationCenter_didChangeSettings_bag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationCenter:didChangeSettings:bag:");
}

id objc_msgSend_notificationEpisodesCount(void *a1, const char *a2, ...)
{
  return _[a1 notificationEpisodesCount];
}

id objc_msgSend_notificationReceived(void *a1, const char *a2, ...)
{
  return _[a1 notificationReceived];
}

id objc_msgSend_notificationScheduled(void *a1, const char *a2, ...)
{
  return _[a1 notificationScheduled];
}

id objc_msgSend_notificationSetRetryFlag(void *a1, const char *a2, ...)
{
  return _[a1 notificationSetRetryFlag];
}

id objc_msgSend_notificationTapped(void *a1, const char *a2, ...)
{
  return _[a1 notificationTapped];
}

id objc_msgSend_notificationTestActionsViewController(void *a1, const char *a2, ...)
{
  return _[a1 notificationTestActionsViewController];
}

id objc_msgSend_notificationType(void *a1, const char *a2, ...)
{
  return _[a1 notificationType];
}

id objc_msgSend_notifications(void *a1, const char *a2, ...)
{
  return _[a1 notifications];
}

id objc_msgSend_notificationsSetting(void *a1, const char *a2, ...)
{
  return _[a1 notificationsSetting];
}

id objc_msgSend_notifyCurrentItemDidChange(void *a1, const char *a2, ...)
{
  return _[a1 notifyCurrentItemDidChange];
}

id objc_msgSend_notifyObservers(void *a1, const char *a2, ...)
{
  return _[a1 notifyObservers];
}

id objc_msgSend_notifyObserversForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 notifyObserversForPodcast];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_nowPlayingIcon(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingIcon];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numMetadataItemsFromDataSource(void *a1, const char *a2, ...)
{
  return _[a1 numMetadataItemsFromDataSource];
}

id objc_msgSend_numMetadataItemsFromKVSStorage(void *a1, const char *a2, ...)
{
  return _[a1 numMetadataItemsFromKVSStorage];
}

id objc_msgSend_numMetadataItemsToCommitToDataSource(void *a1, const char *a2, ...)
{
  return _[a1 numMetadataItemsToCommitToDataSource];
}

id objc_msgSend_numMetadataItemsToCommitToKVSStorage(void *a1, const char *a2, ...)
{
  return _[a1 numMetadataItemsToCommitToKVSStorage];
}

id objc_msgSend_numberFormatter(void *a1, const char *a2, ...)
{
  return _[a1 numberFormatter];
}

id objc_msgSend_numberFromString_(void *a1, const char *a2, ...)
{
  return [a1 numberFromString:];
}

id objc_msgSend_numberOfBytesTransferred(void *a1, const char *a2, ...)
{
  return _[a1 numberOfBytesTransferred];
}

id objc_msgSend_numberOfColumns(void *a1, const char *a2, ...)
{
  return _[a1 numberOfColumns];
}

id objc_msgSend_numberOfDownloads(void *a1, const char *a2, ...)
{
  return _[a1 numberOfDownloads];
}

id objc_msgSend_numberOfDroppedVideoFrames(void *a1, const char *a2, ...)
{
  return _[a1 numberOfDroppedVideoFrames];
}

id objc_msgSend_numberOfExtraObjects(void *a1, const char *a2, ...)
{
  return _[a1 numberOfExtraObjects];
}

id objc_msgSend_numberOfGlyphs(void *a1, const char *a2, ...)
{
  return _[a1 numberOfGlyphs];
}

id objc_msgSend_numberOfItemsInSection_(void *a1, const char *a2, ...)
{
  return [a1 numberOfItemsInSection:];
}

id objc_msgSend_numberOfLevels(void *a1, const char *a2, ...)
{
  return _[a1 numberOfLevels];
}

id objc_msgSend_numberOfLines(void *a1, const char *a2, ...)
{
  return _[a1 numberOfLines];
}

id objc_msgSend_numberOfMediaRequests(void *a1, const char *a2, ...)
{
  return _[a1 numberOfMediaRequests];
}

id objc_msgSend_numberOfObjects(void *a1, const char *a2, ...)
{
  return _[a1 numberOfObjects];
}

id objc_msgSend_numberOfPlaceholderObjects(void *a1, const char *a2, ...)
{
  return _[a1 numberOfPlaceholderObjects];
}

id objc_msgSend_numberOfResults(void *a1, const char *a2, ...)
{
  return _[a1 numberOfResults];
}

id objc_msgSend_numberOfRowsFromIndexPath_toFromIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 numberOfRowsFromIndexPath:toFromIndexPath:];
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return [a1 numberOfRowsInSection:];
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return _[a1 numberOfSections];
}

id objc_msgSend_numberOfSectionsInTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSectionsInTableView:");
}

id objc_msgSend_numberOfServerAddressChanges(void *a1, const char *a2, ...)
{
  return _[a1 numberOfServerAddressChanges];
}

id objc_msgSend_numberOfStalls(void *a1, const char *a2, ...)
{
  return _[a1 numberOfStalls];
}

id objc_msgSend_numberValue(void *a1, const char *a2, ...)
{
  return _[a1 numberValue];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return [a1 numberWithFloat:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return [a1 numberWithLongLong:];
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInt:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedLongLong:];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndex:];
}

id objc_msgSend_objectAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexPath:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectDictionariesInEntity_predicate_sortDescriptors_propertiesToFetch_includeObjectId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectDictionariesInEntity:predicate:sortDescriptors:propertiesToFetch:includeObjectId:");
}

id objc_msgSend_objectDictionariesInEntity_predicate_sortDescriptors_propertiesToFetch_includeObjectId_limit_distinct_groupBy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectDictionariesInEntity:predicate:sortDescriptors:propertiesToFetch:includeObjectId:limit:distinct:groupBy:");
}

id objc_msgSend_objectDictionaryForUuid_entityName_byAddingComputedProperties_toFetchedObjectDictionary_(void *a1, const char *a2, ...)
{
  return [a1 objectDictionaryForUuid:entityName:byAddingComputedProperties:toFetchedObjectDictionary:];
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 objectEnumerator];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKey_withDefaultValue_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:withDefaultValue:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_objectForUuid_entityName_(void *a1, const char *a2, ...)
{
  return [a1 objectForUuid:entityName:];
}

id objc_msgSend_objectID(void *a1, const char *a2, ...)
{
  return _[a1 objectID];
}

id objc_msgSend_objectInEntity_predicate_(void *a1, const char *a2, ...)
{
  return [a1 objectInEntity:predicate:];
}

id objc_msgSend_objectValue(void *a1, const char *a2, ...)
{
  return _[a1 objectValue];
}

id objc_msgSend_objectVersionPairForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectVersionPairForKey:];
}

id objc_msgSend_objectWithID_(void *a1, const char *a2, ...)
{
  return [a1 objectWithID:];
}

id objc_msgSend_objects(void *a1, const char *a2, ...)
{
  return _[a1 objects];
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return [a1 objectsAtIndexes:];
}

id objc_msgSend_objectsForKeys_notFoundMarker_(void *a1, const char *a2, ...)
{
  return [a1 objectsForKeys:notFoundMarker:];
}

id objc_msgSend_objectsInEntity_predicate_propertiesToFetch_batchSize_(void *a1, const char *a2, ...)
{
  return [a1 objectsInEntity:propertiesToFetch:batchSize:];
}

id objc_msgSend_objectsInEntity_predicate_propertiesToFetch_limit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsInEntity:predicate:propertiesToFetch:limit:");
}

id objc_msgSend_objectsInEntity_predicate_sortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 objectsInEntity:predicate:sortDescriptors:];
}

id objc_msgSend_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_(void *a1, const char *a2, ...)
{
  return [a1 objectsInEntity:];
}

id objc_msgSend_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_(void *a1, const char *a2, ...)
{
  return [a1 objectsInEntity:predicate:sortDescriptors:returnsObjectsAsFaults:limit:];
}

id objc_msgSend_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 objectsPassingTest:];
}

id objc_msgSend_objectsToIndexPathDictionary_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsToIndexPathDictionary:inSection:");
}

id objc_msgSend_observePlaybackStartEventForRefId_(void *a1, const char *a2, ...)
{
  return [a1 observePlaybackStartEventForRefId:];
}

id objc_msgSend_observedBitrate(void *a1, const char *a2, ...)
{
  return _[a1 observedBitrate];
}

id objc_msgSend_observedBitrateStandardDeviation(void *a1, const char *a2, ...)
{
  return _[a1 observedBitrateStandardDeviation];
}

id objc_msgSend_observedMaxBitrate(void *a1, const char *a2, ...)
{
  return _[a1 observedMaxBitrate];
}

id objc_msgSend_observedMinBitrate(void *a1, const char *a2, ...)
{
  return _[a1 observedMinBitrate];
}

id objc_msgSend_observerLock(void *a1, const char *a2, ...)
{
  return _[a1 observerLock];
}

id objc_msgSend_observerWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 observerWithBlock:];
}

id objc_msgSend_obtainPermanentIDsForObjects_error_(void *a1, const char *a2, ...)
{
  return [a1 obtainPermanentIDsForObjects:error:];
}

id objc_msgSend_offerTypeAsFlagBit(void *a1, const char *a2, ...)
{
  return _[a1 offerTypeAsFlagBit];
}

id objc_msgSend_offerTypesAsFlagBits(void *a1, const char *a2, ...)
{
  return _[a1 offerTypesAsFlagBits];
}

id objc_msgSend_offers(void *a1, const char *a2, ...)
{
  return _[a1 offers];
}

id objc_msgSend_oldestEpisodeDate(void *a1, const char *a2, ...)
{
  return _[a1 oldestEpisodeDate];
}

id objc_msgSend_oldestEpisodeExcludingExplicit_(void *a1, const char *a2, ...)
{
  return [a1 oldestEpisodeExcludingExplicit:];
}

id objc_msgSend_oldestUserEpisodeExcludingExplicit_(void *a1, const char *a2, ...)
{
  return [a1 oldestUserEpisodeExcludingExplicit:];
}

id objc_msgSend_openExternalEpisode_(void *a1, const char *a2, ...)
{
  return [a1 openExternalEpisode:];
}

id objc_msgSend_openGlobalSettings(void *a1, const char *a2, ...)
{
  return _[a1 openGlobalSettings];
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 openSensitiveURL:withOptions:];
}

id objc_msgSend_openStoreURL_(void *a1, const char *a2, ...)
{
  return [a1 openStoreURL];
}

id objc_msgSend_openURL_(void *a1, const char *a2, ...)
{
  return [a1 openURL:];
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 openURL:options:completionHandler:];
}

id objc_msgSend_openURL_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 openURL:withOptions:];
}

id objc_msgSend_operationCount(void *a1, const char *a2, ...)
{
  return _[a1 operationCount];
}

id objc_msgSend_operationInQueueWithType_(void *a1, const char *a2, ...)
{
  return [a1 operationInQueueWithType:];
}

id objc_msgSend_operationType(void *a1, const char *a2, ...)
{
  return _[a1 operationType];
}

id objc_msgSend_operationTypeForSET(void *a1, const char *a2, ...)
{
  return _[a1 operationTypeForSET];
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _[a1 operations];
}

id objc_msgSend_option(void *a1, const char *a2, ...)
{
  return _[a1 option];
}

id objc_msgSend_optionDown(void *a1, const char *a2, ...)
{
  return _[a1 optionDown];
}

id objc_msgSend_optionFont(void *a1, const char *a2, ...)
{
  return _[a1 optionFont];
}

id objc_msgSend_optionSettingChanged_value_(void *a1, const char *a2, ...)
{
  return [a1 optionSettingChanged:value:];
}

id objc_msgSend_optionSettingWithTitle_footerText_initialValue_optionDescription_identifier_changeHandler_(void *a1, const char *a2, ...)
{
  return [a1 optionSettingWithTitle:footerText:initialValue:optionDescription:identifier:changeHandler:];
}

id objc_msgSend_optionSettingWithTitle_headerTitle_footerText_initialValue_optionDescription_identifier_changeHandler_(void *a1, const char *a2, ...)
{
  return [a1 optionSettingWithTitle:headerTitle:footerText:initialValue:optionDescription:identifier:changeHandler:];
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_optionsForDeletePlayedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 optionsForDeletePlayedEpisodes];
}

id objc_msgSend_optionsForHidesPlayedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 optionsForHidesPlayedEpisodes];
}

id objc_msgSend_optionsForLimitWithGlobalDefault(void *a1, const char *a2, ...)
{
  return _[a1 optionsForLimitWithGlobalDefault];
}

id objc_msgSend_optionsTableViewControllerWithOption_(void *a1, const char *a2, ...)
{
  return [a1 optionsTableViewControllerWithOption:];
}

id objc_msgSend_optionsWithLongTitles_shortTitles_valueList_(void *a1, const char *a2, ...)
{
  return [a1 optionsWithLongTitles:shortTitles:valueList:];
}

id objc_msgSend_optionsWithLongTitles_shortTitles_valueList_footerTextCallback_headerTextCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionsWithLongTitles:shortTitles:valueList:footerTextCallback:headerTextCallback:");
}

id objc_msgSend_orPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return [a1 orPredicateWithSubpredicates:];
}

id objc_msgSend_orangeColor(void *a1, const char *a2, ...)
{
  return _[a1 orangeColor];
}

id objc_msgSend_order(void *a1, const char *a2, ...)
{
  return _[a1 order];
}

id objc_msgSend_orderedIconKeys(void *a1, const char *a2, ...)
{
  return _[a1 orderedIconKeys];
}

id objc_msgSend_orderedSetWithArray_(void *a1, const char *a2, ...)
{
  return [a1 orderedSetWithArray:];
}

id objc_msgSend_orderedSetWithOrderedSet_range_copyItems_(void *a1, const char *a2, ...)
{
  return [a1 orderedSetWithOrderedSet:range:copyItems:];
}

id objc_msgSend_originalPodcastFeedURL(void *a1, const char *a2, ...)
{
  return _[a1 originalPodcastFeedURL];
}

id objc_msgSend_originalRequest(void *a1, const char *a2, ...)
{
  return _[a1 originalRequest];
}

id objc_msgSend_originalURLForTask_(void *a1, const char *a2, ...)
{
  return [a1 originalURLForTask:];
}

id objc_msgSend_overrideLocalWithRemoteData_forKey_version_mismatch_(void *a1, const char *a2, ...)
{
  return [a1 overrideLocalWithRemoteData:forKey:version:mismatch:];
}

id objc_msgSend_pageContext(void *a1, const char *a2, ...)
{
  return _[a1 pageContext];
}

id objc_msgSend_pageParser(void *a1, const char *a2, ...)
{
  return _[a1 pageParser];
}

id objc_msgSend_pageTypeForReportType_(void *a1, const char *a2, ...)
{
  return [a1 pageTypeForReportType:];
}

id objc_msgSend_paidSubscriptionActive(void *a1, const char *a2, ...)
{
  return _[a1 paidSubscriptionActive];
}

id objc_msgSend_panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 panGestureRecognizer];
}

id objc_msgSend_parameters(void *a1, const char *a2, ...)
{
  return _[a1 parameters];
}

id objc_msgSend_parentMediaLibraryId(void *a1, const char *a2, ...)
{
  return _[a1 parentMediaLibraryId];
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _[a1 parentViewController];
}

id objc_msgSend_parseError(void *a1, const char *a2, ...)
{
  return _[a1 parseError];
}

id objc_msgSend_parseWithData_(void *a1, const char *a2, ...)
{
  return [a1 parseWithData:];
}

id objc_msgSend_parser(void *a1, const char *a2, ...)
{
  return _[a1 parser];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _[a1 pathComponents];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pathWithRoute_bundleID_playerID_(void *a1, const char *a2, ...)
{
  return [a1 pathWithRoute:bundleID:playerID:];
}

id objc_msgSend_pause(void *a1, const char *a2, ...)
{
  return _[a1 pause];
}

id objc_msgSend_pauseLocalPlayer(void *a1, const char *a2, ...)
{
  return _[a1 pauseLocalPlayer];
}

id objc_msgSend_pauseLocalPlayerWithInitiator_(void *a1, const char *a2, ...)
{
  return [a1 pauseLocalPlayerWithInitiator:];
}

id objc_msgSend_pauseWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 pauseWithCompletion:];
}

id objc_msgSend_pauseWithInitiator_(void *a1, const char *a2, ...)
{
  return [a1 pauseWithInitiator:];
}

id objc_msgSend_payload(void *a1, const char *a2, ...)
{
  return _[a1 payload];
}

id objc_msgSend_pcrFallback(void *a1, const char *a2, ...)
{
  return _[a1 pcrFallback];
}

id objc_msgSend_pendingCompletion(void *a1, const char *a2, ...)
{
  return _[a1 pendingCompletion];
}

id objc_msgSend_pendingDeferredUpdate(void *a1, const char *a2, ...)
{
  return _[a1 pendingDeferredUpdate];
}

id objc_msgSend_pendingDeletionPersistentIds(void *a1, const char *a2, ...)
{
  return _[a1 pendingDeletionPersistentIds];
}

id objc_msgSend_pendingDeserializations(void *a1, const char *a2, ...)
{
  return _[a1 pendingDeserializations];
}

id objc_msgSend_pendingFeedProcessingBlocks(void *a1, const char *a2, ...)
{
  return _[a1 pendingFeedProcessingBlocks];
}

id objc_msgSend_pendingRequest(void *a1, const char *a2, ...)
{
  return _[a1 pendingRequest];
}

id objc_msgSend_pendingTransactions(void *a1, const char *a2, ...)
{
  return _[a1 pendingTransactions];
}

id objc_msgSend_pendingUserDefaultArchivedData(void *a1, const char *a2, ...)
{
  return _[a1 pendingUserDefaultArchivedData];
}

id objc_msgSend_peopleScoresFromMediaData_keyedOnQid_(void *a1, const char *a2, ...)
{
  return [a1 peopleScoresFromMediaData:keyedOnQid:];
}

id objc_msgSend_perform(void *a1, const char *a2, ...)
{
  return _[a1 perform];
}

id objc_msgSend_performAction(void *a1, const char *a2, ...)
{
  return _[a1 performAction];
}

id objc_msgSend_performActionForShortcutItem_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 performActionForShortcutItem:completionHandler:];
}

id objc_msgSend_performAndWaitWithContext_save_(void *a1, const char *a2, ...)
{
  return [a1 performAndWaitWithContext:save:];
}

id objc_msgSend_performAuthentication(void *a1, const char *a2, ...)
{
  return _[a1 performAuthentication];
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return [a1 performBlock:];
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return [a1 performBlockAndWait:];
}

id objc_msgSend_performBlockAndWaitWithSave_(void *a1, const char *a2, ...)
{
  return [a1 performBlockAndWaitWithSave:];
}

id objc_msgSend_performEpisodeUpdateAction_(void *a1, const char *a2, ...)
{
  return [a1 performEpisodeUpdateAction];
}

id objc_msgSend_performFetch_(void *a1, const char *a2, ...)
{
  return [a1 performFetch:];
}

id objc_msgSend_performMigration(void *a1, const char *a2, ...)
{
  return _[a1 performMigration];
}

id objc_msgSend_performMigrationIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 performMigrationIfNecessary];
}

id objc_msgSend_performMigrationIfNecessaryWithOptionKeyDown::(void *a1, const char *a2, ...)
{
  return [a1 performMigrationIfNecessaryWithOptionKeyDown:];
}

id objc_msgSend_performOnAvSessionQueue_(void *a1, const char *a2, ...)
{
  return [a1 performOnAvSessionQueue:];
}

id objc_msgSend_performOnMainQueue_(void *a1, const char *a2, ...)
{
  return [a1 performOnMainQueue:];
}

id objc_msgSend_performPlayActionForShortcutItem_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 performPlayActionForShortcutItem:completionHandler:];
}

id objc_msgSend_performRequest_(void *a1, const char *a2, ...)
{
  return [a1 performRequest:];
}

id objc_msgSend_performRequestAsBufferedAirPlay_(void *a1, const char *a2, ...)
{
  return [a1 performRequestAsBufferedAirPlay];
}

id objc_msgSend_performSearchAction_(void *a1, const char *a2, ...)
{
  return [a1 performSearchAction:];
}

id objc_msgSend_performSelector_withObject_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:];
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:withObject:afterDelay:];
}

id objc_msgSend_performSubscribe_(void *a1, const char *a2, ...)
{
  return [a1 performSubscribe:];
}

id objc_msgSend_performTransactionWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 performTransactionWithBlock:];
}

id objc_msgSend_performUniversalPlaybackPositionSync(void *a1, const char *a2, ...)
{
  return _[a1 performUniversalPlaybackPositionSync];
}

id objc_msgSend_performUrlRequest_callback_(void *a1, const char *a2, ...)
{
  return [a1 performUrlRequest:callback:];
}

id objc_msgSend_performWhenURLAvailableForImageForKey_block_(void *a1, const char *a2, ...)
{
  return [a1 performWhenURLAvailableForImageForKey:block:];
}

id objc_msgSend_performWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 performWithCompletion:];
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return [a1 performWithoutAnimation:];
}

id objc_msgSend_persistentID(void *a1, const char *a2, ...)
{
  return _[a1 persistentID];
}

id objc_msgSend_persistentId(void *a1, const char *a2, ...)
{
  return _[a1 persistentId];
}

id objc_msgSend_persistentIds(void *a1, const char *a2, ...)
{
  return _[a1 persistentIds];
}

id objc_msgSend_persistentStoreCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 persistentStoreCoordinator];
}

id objc_msgSend_pf_URLByAppendingHashString_(void *a1, const char *a2, ...)
{
  return [a1 pf_URLByAppendingHashString];
}

id objc_msgSend_pf_URLByAppendingQueryParameterKey_value_(void *a1, const char *a2, ...)
{
  return [a1 pf_URLByAppendingQueryParameterKey:value:];
}

id objc_msgSend_pf_URLByAppendingQueryParameters_(void *a1, const char *a2, ...)
{
  return [a1 pf_URLByAppendingQueryParameters];
}

id objc_msgSend_pf_URLByAppendingQueryString_(void *a1, const char *a2, ...)
{
  return [a1 pf_URLByAppendingQueryString:];
}

id objc_msgSend_pf_cleanUrlToEpisodeGuid(void *a1, const char *a2, ...)
{
  return [a1 pf_cleanUrlToEpisodeGuid];
}

id objc_msgSend_pf_cleanUrlToStoreId(void *a1, const char *a2, ...)
{
  return [a1 pf_cleanUrlToStoreId];
}

id objc_msgSend_pf_cleanUrlToStoreTrackId(void *a1, const char *a2, ...)
{
  return [a1 pf_cleanUrlToStoreTrackId];
}

id objc_msgSend_pf_queryAsDictionary(void *a1, const char *a2, ...)
{
  return [a1 pf_queryAsDictionary];
}

id objc_msgSend_pf_stringWithPercentEscape(void *a1, const char *a2, ...)
{
  return [a1 pf_stringWithPercentEscape];
}

id objc_msgSend_pickRouteAndSwitchToLocalCard_completion_(void *a1, const char *a2, ...)
{
  return [a1 pickRouteAndSwitchToLocalCard:completion:];
}

id objc_msgSend_pickerCustomizationWithIdentifier_options_selectedOptionIndex_footerText_valueChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 pickerCustomizationWithIdentifier:options:selectedOptionIndex:footerText:valueChangedHandler:];
}

id objc_msgSend_pidToUuidMapping(void *a1, const char *a2, ...)
{
  return _[a1 pidToUuidMapping];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _[a1 placeholder];
}

id objc_msgSend_placeholderWithSize_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 placeholderWithSize:completionHandler:];
}

id objc_msgSend_platformSpecificConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 platformSpecificConfiguration];
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return _[a1 play];
}

id objc_msgSend_play_interruptionEvent_(void *a1, const char *a2, ...)
{
  return [a1 play:interruptionEvent:];
}

id objc_msgSend_playCommand(void *a1, const char *a2, ...)
{
  return _[a1 playCommand];
}

id objc_msgSend_playContext(void *a1, const char *a2, ...)
{
  return _[a1 playContext];
}

id objc_msgSend_playCount(void *a1, const char *a2, ...)
{
  return _[a1 playCount];
}

id objc_msgSend_playEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 playEpisodeUuid:];
}

id objc_msgSend_playEpisodeUuid_context_(void *a1, const char *a2, ...)
{
  return [a1 playEpisodeUuid:context:];
}

id objc_msgSend_playEpisodeUuid_context_limit_(void *a1, const char *a2, ...)
{
  return [a1 playEpisodeUuid:context:limit:];
}

id objc_msgSend_playEpisodeUuid_limit_(void *a1, const char *a2, ...)
{
  return [a1 playEpisodeUuid:limit:];
}

id objc_msgSend_playItemInQueueCommand(void *a1, const char *a2, ...)
{
  return _[a1 playItemInQueueCommand];
}

id objc_msgSend_playItemWithContentID_(void *a1, const char *a2, ...)
{
  return [a1 playItemWithContentID:];
}

id objc_msgSend_playListenNow(void *a1, const char *a2, ...)
{
  return _[a1 playListenNow];
}

id objc_msgSend_playLocalPlayer(void *a1, const char *a2, ...)
{
  return _[a1 playLocalPlayer];
}

id objc_msgSend_playManifest_reason_(void *a1, const char *a2, ...)
{
  return [a1 playManifest:reason:];
}

id objc_msgSend_playManifest_reason_interactive_completion_(void *a1, const char *a2, ...)
{
  return [a1 playManifest:reason:interactive:completion:];
}

id objc_msgSend_playManifest_reason_interactive_presentationType_completion_(void *a1, const char *a2, ...)
{
  return [a1 playManifest:reason:interactive:presentationType:completion:];
}

id objc_msgSend_playManifest_waitingForEngine_completion_(void *a1, const char *a2, ...)
{
  return [a1 playManifest:waitingForEngine:completion:];
}

id objc_msgSend_playMyPodcastsWithOrder_(void *a1, const char *a2, ...)
{
  return [a1 playMyPodcastsWithOrder:];
}

id objc_msgSend_playNextAction(void *a1, const char *a2, ...)
{
  return _[a1 playNextAction];
}

id objc_msgSend_playPodcastDefaultBehaviorForNotificationEpisode_(void *a1, const char *a2, ...)
{
  return [a1 playPodcastDefaultBehaviorForNotificationEpisode:];
}

id objc_msgSend_playPodcastNotificationEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 playPodcastNotificationEpisodes];
}

id objc_msgSend_playPodcastUuid_order_limit_error_(void *a1, const char *a2, ...)
{
  return [a1 playPodcastUuid:order:limit:error:];
}

id objc_msgSend_playQueueType(void *a1, const char *a2, ...)
{
  return _[a1 playQueueType];
}

id objc_msgSend_playReason(void *a1, const char *a2, ...)
{
  return _[a1 playReason];
}

id objc_msgSend_playState(void *a1, const char *a2, ...)
{
  return _[a1 playState];
}

id objc_msgSend_playStateFromHasBeenPlayed_andPlayCount_(void *a1, const char *a2, ...)
{
  return [a1 playStateFromHasBeenPlayed:andPlayCount:];
}

id objc_msgSend_playStateManuallySet(void *a1, const char *a2, ...)
{
  return _[a1 playStateManuallySet];
}

id objc_msgSend_playStateSource(void *a1, const char *a2, ...)
{
  return _[a1 playStateSource];
}

id objc_msgSend_playStationUuid_episodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 playStationUuid:episodeUuid:];
}

id objc_msgSend_playStationUuid_episodeUuid_limit_(void *a1, const char *a2, ...)
{
  return [a1 playStationUuid:episodeUuid:limit:];
}

id objc_msgSend_playStationUuid_limit_(void *a1, const char *a2, ...)
{
  return [a1 playStationUuid:limit:];
}

id objc_msgSend_playStatusImageForTheme_(void *a1, const char *a2, ...)
{
  return [a1 playStatusImageForTheme:];
}

id objc_msgSend_playStatusView(void *a1, const char *a2, ...)
{
  return _[a1 playStatusView];
}

id objc_msgSend_playStatusViewFrameForViewWidth_titleFrame_artworkFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playStatusViewFrameForViewWidth:titleFrame:artworkFrame:");
}

id objc_msgSend_playWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 playWithCompletion:];
}

id objc_msgSend_playWithContext_(void *a1, const char *a2, ...)
{
  return [a1 playWithContext:];
}

id objc_msgSend_playWithContext_completion_(void *a1, const char *a2, ...)
{
  return [a1 playWithContext:completion:];
}

id objc_msgSend_playWithReason_(void *a1, const char *a2, ...)
{
  return [a1 playWithReason:];
}

id objc_msgSend_playWithReason_interruptEvent_(void *a1, const char *a2, ...)
{
  return [a1 playWithReason:interruptEvent:];
}

id objc_msgSend_playbackContext(void *a1, const char *a2, ...)
{
  return _[a1 playbackContext];
}

id objc_msgSend_playbackDestination(void *a1, const char *a2, ...)
{
  return _[a1 playbackDestination];
}

id objc_msgSend_playbackIsUserRequested(void *a1, const char *a2, ...)
{
  return _[a1 playbackIsUserRequested];
}

id objc_msgSend_playbackNewestToOldest(void *a1, const char *a2, ...)
{
  return _[a1 playbackNewestToOldest];
}

id objc_msgSend_playbackOrder(void *a1, const char *a2, ...)
{
  return _[a1 playbackOrder];
}

id objc_msgSend_playbackPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 playbackPlayerPath];
}

id objc_msgSend_playbackPositionController(void *a1, const char *a2, ...)
{
  return _[a1 playbackPositionController];
}

id objc_msgSend_playbackQueue(void *a1, const char *a2, ...)
{
  return _[a1 playbackQueue];
}

id objc_msgSend_playbackQueueController(void *a1, const char *a2, ...)
{
  return _[a1 playbackQueueController];
}

id objc_msgSend_playbackQueueForIdentifier_startPlayback_assetInfo_(void *a1, const char *a2, ...)
{
  return [a1 playbackQueueForIdentifier:startPlayback:assetInfo:];
}

id objc_msgSend_playbackQueueIdentifierForPodcastAdamId_sampPlaybackOrder_(void *a1, const char *a2, ...)
{
  return [a1 playbackQueueIdentifierForPodcastAdamId:sampPlaybackOrder:];
}

id objc_msgSend_playbackQueueWithAccountInfoForIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 playbackQueueWithAccountInfoForIdentifiers:];
}

id objc_msgSend_playbackQueueWithAccountInfoForManifest_queueStatus_(void *a1, const char *a2, ...)
{
  return [a1 playbackQueueWithAccountInfoForManifest:queueStatus:];
}

id objc_msgSend_playbackQueueWithAccountInfoForPlayerItems_(void *a1, const char *a2, ...)
{
  return [a1 playbackQueueWithAccountInfoForPlayerItems:];
}

id objc_msgSend_playbackQueueWithDsid_forIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 playbackQueueWithDsid:forIdentifiers:];
}

id objc_msgSend_playbackRelativeVolume(void *a1, const char *a2, ...)
{
  return _[a1 playbackRelativeVolume];
}

id objc_msgSend_playbackRequestURLWithDSID_baseRequestURLString_(void *a1, const char *a2, ...)
{
  return [a1 playbackRequestURLWithDSID:baseRequestURLString:];
}

id objc_msgSend_playbackSessionData(void *a1, const char *a2, ...)
{
  return _[a1 playbackSessionData];
}

id objc_msgSend_playbackSessionID(void *a1, const char *a2, ...)
{
  return _[a1 playbackSessionID];
}

id objc_msgSend_playbackSpeed(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeed];
}

id objc_msgSend_playbackStart(void *a1, const char *a2, ...)
{
  return _[a1 playbackStart];
}

id objc_msgSend_playbackStartDate(void *a1, const char *a2, ...)
{
  return _[a1 playbackStartDate];
}

id objc_msgSend_playbackStartOffset(void *a1, const char *a2, ...)
{
  return _[a1 playbackStartOffset];
}

id objc_msgSend_playbackState(void *a1, const char *a2, ...)
{
  return _[a1 playbackState];
}

id objc_msgSend_playbackType(void *a1, const char *a2, ...)
{
  return _[a1 playbackType];
}

id objc_msgSend_playedText(void *a1, const char *a2, ...)
{
  return _[a1 playedText];
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return _[a1 player];
}

id objc_msgSend_player_didStopWithReason_initiator_(void *a1, const char *a2, ...)
{
  return [a1 player:didStopWithReason:initiator:];
}

id objc_msgSend_player_willStopWithReason_initiator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "player:willStopWithReason:initiator:");
}

id objc_msgSend_playerController(void *a1, const char *a2, ...)
{
  return _[a1 playerController];
}

id objc_msgSend_playerFailure_shouldShowDialog_(void *a1, const char *a2, ...)
{
  return [a1 playerFailure:shouldShowDialog:];
}

id objc_msgSend_playerID(void *a1, const char *a2, ...)
{
  return _[a1 playerID];
}

id objc_msgSend_playerItem(void *a1, const char *a2, ...)
{
  return _[a1 playerItem];
}

id objc_msgSend_playerItems(void *a1, const char *a2, ...)
{
  return _[a1 playerItems];
}

id objc_msgSend_playerItemsFromPodcastStorePlatformDictionary_oldestEpisode_restricted_initiatedByAnotherUser_(void *a1, const char *a2, ...)
{
  return [a1 playerItemsFromPodcastStorePlatformDictionary:oldestEpisode:restricted:initiatedByAnotherUser:];
}

id objc_msgSend_playerItemsNeedLoading(void *a1, const char *a2, ...)
{
  return _[a1 playerItemsNeedLoading];
}

id objc_msgSend_playerPath(void *a1, const char *a2, ...)
{
  return _[a1 playerPath];
}

id objc_msgSend_playerPaused(void *a1, const char *a2, ...)
{
  return _[a1 playerPaused];
}

id objc_msgSend_playhead(void *a1, const char *a2, ...)
{
  return _[a1 playhead];
}

id objc_msgSend_playingEpisodeUuid(void *a1, const char *a2, ...)
{
  return _[a1 playingEpisodeUuid];
}

id objc_msgSend_playingItem(void *a1, const char *a2, ...)
{
  return _[a1 playingItem];
}

id objc_msgSend_playlist(void *a1, const char *a2, ...)
{
  return _[a1 playlist];
}

id objc_msgSend_playlistForUuid_(void *a1, const char *a2, ...)
{
  return [a1 playlistForUuid:];
}

id objc_msgSend_playlistId(void *a1, const char *a2, ...)
{
  return _[a1 playlistId];
}

id objc_msgSend_playlistIfDefault(void *a1, const char *a2, ...)
{
  return _[a1 playlistIfDefault];
}

id objc_msgSend_playlistSettings(void *a1, const char *a2, ...)
{
  return _[a1 playlistSettings];
}

id objc_msgSend_playlistSettings_didChangeLayout_(void *a1, const char *a2, ...)
{
  return [a1 playlistSettings:didChangeLayout:];
}

id objc_msgSend_playlistSettingsDidChangeSetting_(void *a1, const char *a2, ...)
{
  return [a1 playlistSettingsDidChangeSetting:];
}

id objc_msgSend_playlistSyncDirtyFlag(void *a1, const char *a2, ...)
{
  return _[a1 playlistSyncDirtyFlag];
}

id objc_msgSend_playlistSyncVersion(void *a1, const char *a2, ...)
{
  return _[a1 playlistSyncVersion];
}

id objc_msgSend_playlistUuid(void *a1, const char *a2, ...)
{
  return _[a1 playlistUuid];
}

id objc_msgSend_playlistWithMPPlaylist_(void *a1, const char *a2, ...)
{
  return [a1 playlistWithMPPlaylist:];
}

id objc_msgSend_playlists(void *a1, const char *a2, ...)
{
  return _[a1 playlists];
}

id objc_msgSend_podcast(void *a1, const char *a2, ...)
{
  return _[a1 podcast];
}

id objc_msgSend_podcastAdamID(void *a1, const char *a2, ...)
{
  return _[a1 podcastAdamID];
}

id objc_msgSend_podcastAdamId(void *a1, const char *a2, ...)
{
  return _[a1 podcastAdamId];
}

id objc_msgSend_podcastCacheInContext_(void *a1, const char *a2, ...)
{
  return [a1 podcastCacheInContext:];
}

id objc_msgSend_podcastCount(void *a1, const char *a2, ...)
{
  return _[a1 podcastCount];
}

id objc_msgSend_podcastDataSource(void *a1, const char *a2, ...)
{
  return _[a1 podcastDataSource];
}

id objc_msgSend_podcastExistsInStoreWithFeedUrl_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "podcastExistsInStoreWithFeedUrl:completion:");
}

id objc_msgSend_podcastFeedUrl(void *a1, const char *a2, ...)
{
  return _[a1 podcastFeedUrl];
}

id objc_msgSend_podcastForFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 podcastForFeedUrl:];
}

id objc_msgSend_podcastForStoreId_(void *a1, const char *a2, ...)
{
  return [a1 podcastForStoreId:];
}

id objc_msgSend_podcastForUuid_(void *a1, const char *a2, ...)
{
  return [a1 podcastForUuid:];
}

id objc_msgSend_podcastGroupCellDidTapInfoButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "podcastGroupCellDidTapInfoButton:");
}

id objc_msgSend_podcastImageSize(void *a1, const char *a2, ...)
{
  return _[a1 podcastImageSize];
}

id objc_msgSend_podcastInfoViewDidExpand_(void *a1, const char *a2, ...)
{
  return [a1 podcastInfoViewDidExpand:];
}

id objc_msgSend_podcastInfoViewWasTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "podcastInfoViewWasTapped:");
}

id objc_msgSend_podcastMigrationForVersion11to12_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion11to12:];
}

id objc_msgSend_podcastMigrationForVersion14to15_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion14to15:];
}

id objc_msgSend_podcastMigrationForVersion19to20_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion19to20:];
}

id objc_msgSend_podcastMigrationForVersion20to21_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion20to21:];
}

id objc_msgSend_podcastMigrationForVersion24to25_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion24to25:];
}

id objc_msgSend_podcastMigrationForVersion25to26_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion25to26:];
}

id objc_msgSend_podcastMigrationForVersion26to27_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion26to27:];
}

id objc_msgSend_podcastMigrationForVersion27to28_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion27to28:];
}

id objc_msgSend_podcastMigrationForVersion28to29_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion28to29:];
}

id objc_msgSend_podcastMigrationForVersion32to33_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion32to33:];
}

id objc_msgSend_podcastMigrationForVersion34to35_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion34to35:];
}

id objc_msgSend_podcastMigrationForVersion35to36_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion35to36:];
}

id objc_msgSend_podcastMigrationForVersion36to37_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion36to37:];
}

id objc_msgSend_podcastMigrationForVersion38to39_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion38to39:];
}

id objc_msgSend_podcastMigrationForVersion41to42_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion41to42:];
}

id objc_msgSend_podcastMigrationForVersion42to43_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion42to43:];
}

id objc_msgSend_podcastMigrationForVersion44to45_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion44to45:];
}

id objc_msgSend_podcastMigrationForVersion49to50_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion49to50:];
}

id objc_msgSend_podcastMigrationForVersion50to51_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion50to51:];
}

id objc_msgSend_podcastMigrationForVersion55to56_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion55to56:];
}

id objc_msgSend_podcastMigrationForVersion56to57_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion56to57:];
}

id objc_msgSend_podcastMigrationForVersion57to58_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion57to58:];
}

id objc_msgSend_podcastMigrationForVersion58to59_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion58to59:];
}

id objc_msgSend_podcastMigrationForVersion59to60_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion59to60:];
}

id objc_msgSend_podcastMigrationForVersion62to63_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion62to63:];
}

id objc_msgSend_podcastMigrationForVersion66to67_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion66to67:];
}

id objc_msgSend_podcastMigrationForVersion6to7_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion6to7:];
}

id objc_msgSend_podcastMigrationForVersion8to9_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion8to9:];
}

id objc_msgSend_podcastMigrationForVersion9to10_(void *a1, const char *a2, ...)
{
  return [a1 podcastMigrationForVersion9to10:];
}

id objc_msgSend_podcastPID(void *a1, const char *a2, ...)
{
  return _[a1 podcastPID];
}

id objc_msgSend_podcastPersistentId(void *a1, const char *a2, ...)
{
  return _[a1 podcastPersistentId];
}

id objc_msgSend_podcastPlaylistSettingsForUuid_(void *a1, const char *a2, ...)
{
  return [a1 podcastPlaylistSettingsForUuid:];
}

id objc_msgSend_podcastStateDataSource(void *a1, const char *a2, ...)
{
  return _[a1 podcastStateDataSource];
}

id objc_msgSend_podcastStoreCollectionId(void *a1, const char *a2, ...)
{
  return _[a1 podcastStoreCollectionId];
}

id objc_msgSend_podcastStoreId(void *a1, const char *a2, ...)
{
  return _[a1 podcastStoreId];
}

id objc_msgSend_podcastStorePlatformDictionaryFromSiriAssetInfo_podcastAdamId_(void *a1, const char *a2, ...)
{
  return [a1 podcastStorePlatformDictionaryFromSiriAssetInfo:podcastAdamId:];
}

id objc_msgSend_podcastTitle(void *a1, const char *a2, ...)
{
  return _[a1 podcastTitle];
}

id objc_msgSend_podcastUrlForStoreId_(void *a1, const char *a2, ...)
{
  return [a1 podcastUrlForStoreId:];
}

id objc_msgSend_podcastUuid(void *a1, const char *a2, ...)
{
  return _[a1 podcastUuid];
}

id objc_msgSend_podcastUuidForFeedUrlString_ctx_(void *a1, const char *a2, ...)
{
  return [a1 podcastUuidForFeedUrlString:ctx:];
}

id objc_msgSend_podcastUuidForSetPlaybackQueueRequestIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 podcastUuidForSetPlaybackQueueRequestIdentifier];
}

id objc_msgSend_podcastUuids(void *a1, const char *a2, ...)
{
  return _[a1 podcastUuids];
}

id objc_msgSend_podcasts(void *a1, const char *a2, ...)
{
  return _[a1 podcasts];
}

id objc_msgSend_podcastsDomainVersion(void *a1, const char *a2, ...)
{
  return _[a1 podcastsDomainVersion];
}

id objc_msgSend_podcastsQuery(void *a1, const char *a2, ...)
{
  return _[a1 podcastsQuery];
}

id objc_msgSend_pollingInterval(void *a1, const char *a2, ...)
{
  return _[a1 pollingInterval];
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popToRootViewControllerAnimated:];
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 popToViewController:animated:];
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_populateEpisodeDictionary(void *a1, const char *a2, ...)
{
  return _[a1 populateEpisodeDictionary];
}

id objc_msgSend_populateLocationPropertiesWithPath_(void *a1, const char *a2, ...)
{
  return [a1 populateLocationPropertiesWithPath:];
}

id objc_msgSend_populateMagicMomentInfoCenterWithPlaybackRequestIdentifier_mrCompletion_(void *a1, const char *a2, ...)
{
  return [a1 populateMagicMomentInfoCenterWithPlaybackRequestIdentifier:mrCompletion:];
}

id objc_msgSend_postData_(void *a1, const char *a2, ...)
{
  return [a1 postData:];
}

id objc_msgSend_postManifestDidChangeNotification(void *a1, const char *a2, ...)
{
  return _[a1 postManifestDidChangeNotification];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:];
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:userInfo:];
}

id objc_msgSend_postNotificationName_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:userInfo:];
}

id objc_msgSend_postProcessFeedHookWithParams_podcastUuid_ctx_(void *a1, const char *a2, ...)
{
  return [a1 postProcessFeedHookWithParams:podcastUuid:ctx:];
}

id objc_msgSend_preProcessFeedHook_requestUrl_needsUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preProcessFeedHook:requestUrl:needsUpdate:");
}

id objc_msgSend_preProcessFeedHookWithParams_feed_requestUrl_needsUpdate_ctx_(void *a1, const char *a2, ...)
{
  return [a1 preProcessFeedHookWithParams:feed:requestUrl:needsUpdate:ctx:];
}

id objc_msgSend_preProcessHookDeniedUpdate(void *a1, const char *a2, ...)
{
  return _[a1 preProcessHookDeniedUpdate];
}

id objc_msgSend_preWarmSheetMetricsOverlayDictionary(void *a1, const char *a2, ...)
{
  return _[a1 preWarmSheetMetricsOverlayDictionary];
}

id objc_msgSend_predicate(void *a1, const char *a2, ...)
{
  return _[a1 predicate];
}

id objc_msgSend_predicateForAllBookmarkedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 predicateForAllBookmarkedEpisodes];
}

id objc_msgSend_predicateForAllEpisodesIncludingHiddenOnPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForAllEpisodesIncludingHiddenOnPodcastUuid:];
}

id objc_msgSend_predicateForAllEpisodesOnPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForAllEpisodesOnPodcastUuid:];
}

id objc_msgSend_predicateForAllEpisodesOnPodcastUuid_includeNonAudioEpisodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAllEpisodesOnPodcastUuid:includeNonAudioEpisodes:");
}

id objc_msgSend_predicateForAreMediaAPI_(void *a1, const char *a2, ...)
{
  return [a1 predicateForAreMediaAPI];
}

id objc_msgSend_predicateForAudio_(void *a1, const char *a2, ...)
{
  return [a1 predicateForAudio:];
}

id objc_msgSend_predicateForAutomaticDeletionOnShow_deletePlayedEpisodes_episodeLimit_(void *a1, const char *a2, ...)
{
  return [a1 predicateForAutomaticDeletionOnShow:deletePlayedEpisodes:episodeLimit:];
}

id objc_msgSend_predicateForAutomaticDownloadsOnShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAutomaticDownloadsOnShow:deletePlayedEpisodes:episodeLimit:serialNextEpisodesSort:includePlayableWithoutAccount:");
}

id objc_msgSend_predicateForBacklog_(void *a1, const char *a2, ...)
{
  return [a1 predicateForBacklog:];
}

id objc_msgSend_predicateForBookmarkedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 predicateForBookmarkedEpisodes];
}

id objc_msgSend_predicateForBookmarkedEpisodesExcludingUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 predicateForBookmarkedEpisodesExcludingUUIDs];
}

id objc_msgSend_predicateForBookmarkedEpisodesOnPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForBookmarkedEpisodesOnPodcastUuid:];
}

id objc_msgSend_predicateForBookmarksOnlyInLocalAndBeforeLastSyncWithRemoteBookmarksUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 predicateForBookmarksOnlyInLocalAndBeforeLastSyncWithRemoteBookmarksUUIDs];
}

id objc_msgSend_predicateForBookmarksSyncType(void *a1, const char *a2, ...)
{
  return _[a1 predicateForBookmarksSyncType];
}

id objc_msgSend_predicateForDateKey_isGreaterThanDate_(void *a1, const char *a2, ...)
{
  return [a1 predicateForDateKey:isGreaterThanDate:];
}

id objc_msgSend_predicateForDateKey_isGreaterThanOrEqualToDate_(void *a1, const char *a2, ...)
{
  return [a1 predicateForDateKey:isGreaterThanOrEqualToDate:];
}

id objc_msgSend_predicateForDateKey_isLessThanDate_(void *a1, const char *a2, ...)
{
  return [a1 predicateForDateKey:isLessThanDate:];
}

id objc_msgSend_predicateForDateKey_isLessThanOrEqualToDate_(void *a1, const char *a2, ...)
{
  return [a1 predicateForDateKey:isLessThanOrEqualToDate:];
}

id objc_msgSend_predicateForDownloadBehavior_(void *a1, const char *a2, ...)
{
  return [a1 predicateForDownloadBehavior:];
}

id objc_msgSend_predicateForDownloaded_excludeHidden_(void *a1, const char *a2, ...)
{
  return [a1 predicateForDownloaded:excludeHidden:];
}

id objc_msgSend_predicateForDownloadedEpisodesOnPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForDownloadedEpisodesOnPodcastUuid:];
}

id objc_msgSend_predicateForEntitledEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 predicateForEntitledEpisodes];
}

id objc_msgSend_predicateForEpisodeGuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodeGuid:];
}

id objc_msgSend_predicateForEpisodeGuid_onFeedURL_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodeGuid:onFeedURL:];
}

id objc_msgSend_predicateForEpisodeGuid_onPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodeGuid:onPodcastUuid:];
}

id objc_msgSend_predicateForEpisodeStoreTrackId_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodeStoreTrackId:];
}

id objc_msgSend_predicateForEpisodeTitle_onPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodeTitle:onPodcastUuid:];
}

id objc_msgSend_predicateForEpisodeType_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodeType:];
}

id objc_msgSend_predicateForEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodeUuid:];
}

id objc_msgSend_predicateForEpisodeUuids_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodeUuids];
}

id objc_msgSend_predicateForEpisodesInFeedForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodesInFeedForPodcastUuid:];
}

id objc_msgSend_predicateForEpisodesInSearchResults(void *a1, const char *a2, ...)
{
  return _[a1 predicateForEpisodesInSearchResults];
}

id objc_msgSend_predicateForEpisodesIsFromiTunesSyncOnPodcastUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForEpisodesIsFromiTunesSyncOnPodcastUuid:");
}

id objc_msgSend_predicateForEpisodesOnPodcastUuid_deletePlayedEpisodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForEpisodesOnPodcastUuid:deletePlayedEpisodes:");
}

id objc_msgSend_predicateForEpisodesOnUnplayedTab(void *a1, const char *a2, ...)
{
  return _[a1 predicateForEpisodesOnUnplayedTab];
}

id objc_msgSend_predicateForEpisodesOnUnplayedTabOnPodcastUuid_ctx_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodesOnUnplayedTabOnPodcastUuid:ctx:];
}

id objc_msgSend_predicateForEpisodesPriceTypeChangedThisWeek(void *a1, const char *a2, ...)
{
  return _[a1 predicateForEpisodesPriceTypeChangedThisWeek];
}

id objc_msgSend_predicateForEpisodesPublishedThisWeek(void *a1, const char *a2, ...)
{
  return _[a1 predicateForEpisodesPublishedThisWeek];
}

id objc_msgSend_predicateForEpisodesWhichNeedEntitlementStateUpdate(void *a1, const char *a2, ...)
{
  return _[a1 predicateForEpisodesWhichNeedEntitlementStateUpdate];
}

id objc_msgSend_predicateForEpisodesWhichNeedEntitlementStateUpdateForShowUUID_subscriptionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForEpisodesWhichNeedEntitlementStateUpdateForShowUUID:subscriptionState:");
}

id objc_msgSend_predicateForEpisodesWithSeasonNumbersOnPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodesWithSeasonNumbersOnPodcastUuid:];
}

id objc_msgSend_predicateForExplicit_(void *a1, const char *a2, ...)
{
  return [a1 predicateForExplicit:];
}

id objc_msgSend_predicateForExternalType_(void *a1, const char *a2, ...)
{
  return [a1 predicateForExternalType];
}

id objc_msgSend_predicateForFeedDeleted_(void *a1, const char *a2, ...)
{
  return [a1 predicateForFeedDeleted:];
}

id objc_msgSend_predicateForFilteringEpisodesWithEmptyPlayState(void *a1, const char *a2, ...)
{
  return _[a1 predicateForFilteringEpisodesWithEmptyPlayState];
}

id objc_msgSend_predicateForFlag_isTrue_(void *a1, const char *a2, ...)
{
  return [a1 predicateForFlag:isTrue:];
}

id objc_msgSend_predicateForHLSDownloadedExcludeHidden_(void *a1, const char *a2, ...)
{
  return [a1 predicateForHLSDownloadedExcludeHidden:];
}

id objc_msgSend_predicateForHasBeenSynced_(void *a1, const char *a2, ...)
{
  return [a1 predicateForHasBeenSynced:];
}

id objc_msgSend_predicateForHiddenOrImplicitlyFollowedPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 predicateForHiddenOrImplicitlyFollowedPodcasts];
}

id objc_msgSend_predicateForHiddenPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 predicateForHiddenPodcasts];
}

id objc_msgSend_predicateForIdentifer_(void *a1, const char *a2, ...)
{
  return [a1 predicateForIdentifer:];
}

id objc_msgSend_predicateForIsFromiTunesSync_(void *a1, const char *a2, ...)
{
  return [a1 predicateForIsFromiTunesSync];
}

id objc_msgSend_predicateForIsNew_(void *a1, const char *a2, ...)
{
  return [a1 predicateForIsNew:];
}

id objc_msgSend_predicateForLibraryEpisodesOnPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForLibraryEpisodesOnPodcastUuid:];
}

id objc_msgSend_predicateForListenNow(void *a1, const char *a2, ...)
{
  return _[a1 predicateForListenNow];
}

id objc_msgSend_predicateForListenNowForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForListenNowForPodcastUuid:];
}

id objc_msgSend_predicateForListenNowLatestEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 predicateForListenNowLatestEpisodes];
}

id objc_msgSend_predicateForMetadataFirstSyncEligible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForMetadataFirstSyncEligible:");
}

id objc_msgSend_predicateForNilLastDatePlayed(void *a1, const char *a2, ...)
{
  return _[a1 predicateForNilLastDatePlayed];
}

id objc_msgSend_predicateForNilLastUserMarkedAsPlayedDate(void *a1, const char *a2, ...)
{
  return _[a1 predicateForNilLastUserMarkedAsPlayedDate];
}

id objc_msgSend_predicateForNilValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 predicateForNilValueForKey:];
}

id objc_msgSend_predicateForNilValueOrEmptyStringForKey_(void *a1, const char *a2, ...)
{
  return [a1 predicateForNilValueOrEmptyStringForKey:];
}

id objc_msgSend_predicateForNonNilLastDatePlayed(void *a1, const char *a2, ...)
{
  return _[a1 predicateForNonNilLastDatePlayed];
}

id objc_msgSend_predicateForNonNilLastUserMarkedAsPlayedDate(void *a1, const char *a2, ...)
{
  return _[a1 predicateForNonNilLastUserMarkedAsPlayedDate];
}

id objc_msgSend_predicateForNotHiddenNotImplicitlyFollowedPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 predicateForNotHiddenNotImplicitlyFollowedPodcasts];
}

id objc_msgSend_predicateForNotHiddenPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 predicateForNotHiddenPodcasts];
}

id objc_msgSend_predicateForNotImplicitlyFollowedPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 predicateForNotImplicitlyFollowedPodcasts];
}

id objc_msgSend_predicateForOtherEpisodesOnPodcastUuid_baseEpisodesPredicate_deletePlayedEpisodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForOtherEpisodesOnPodcastUuid:baseEpisodesPredicate:deletePlayedEpisodes:");
}

id objc_msgSend_predicateForPeriodicallyUpdatablePodcasts(void *a1, const char *a2, ...)
{
  return _[a1 predicateForPeriodicallyUpdatablePodcasts];
}

id objc_msgSend_predicateForPersistentId_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPersistentId:];
}

id objc_msgSend_predicateForPlayStateManuallySet_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPlayStateManuallySet];
}

id objc_msgSend_predicateForPlayed_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPlayed:];
}

id objc_msgSend_predicateForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPodcast:];
}

id objc_msgSend_predicateForPodcast_sectionType_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPodcast:sectionType:];
}

id objc_msgSend_predicateForPodcastIsNotHidden(void *a1, const char *a2, ...)
{
  return _[a1 predicateForPodcastIsNotHidden];
}

id objc_msgSend_predicateForPodcastIsNotHiddenNotImplicitlyFollowed(void *a1, const char *a2, ...)
{
  return _[a1 predicateForPodcastIsNotHiddenNotImplicitlyFollowed];
}

id objc_msgSend_predicateForPodcastIsSubscribed_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPodcastIsSubscribed];
}

id objc_msgSend_predicateForPodcastStoreId_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPodcastStoreId:];
}

id objc_msgSend_predicateForPodcastUUID_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPodcastUUID:];
}

id objc_msgSend_predicateForPodcastUuids_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPodcastUuids];
}

id objc_msgSend_predicateForPodcastWithFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPodcastWithFeedUrl:];
}

id objc_msgSend_predicateForPodcastsNeedingRetry_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPodcastsNeedingRetry:];
}

id objc_msgSend_predicateForPreviouslyPlayedHidingFutureTimestamps(void *a1, const char *a2, ...)
{
  return _[a1 predicateForPreviouslyPlayedHidingFutureTimestamps];
}

id objc_msgSend_predicateForPubDateLimit_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPubDateLimit];
}

id objc_msgSend_predicateForRSSEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 predicateForRSSEpisodes];
}

id objc_msgSend_predicateForRecentlyPlayedEpisodesToBeDeletedOnPodcastUuid_deletePlayedEpisodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForRecentlyPlayedEpisodesToBeDeletedOnPodcastUuid:deletePlayedEpisodes:");
}

id objc_msgSend_predicateForRecentlyUnfollowedOlderThanCutoffDate(void *a1, const char *a2, ...)
{
  return _[a1 predicateForRecentlyUnfollowedOlderThanCutoffDate];
}

id objc_msgSend_predicateForSaved_(void *a1, const char *a2, ...)
{
  return [a1 predicateForSaved:];
}

id objc_msgSend_predicateForSeasonNumberWithNoEpisodeNumber_(void *a1, const char *a2, ...)
{
  return [a1 predicateForSeasonNumberWithNoEpisodeNumber];
}

id objc_msgSend_predicateForSentNotification_(void *a1, const char *a2, ...)
{
  return [a1 predicateForSentNotification];
}

id objc_msgSend_predicateForSettings(void *a1, const char *a2, ...)
{
  return _[a1 predicateForSettings];
}

id objc_msgSend_predicateForStationEligibleEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 predicateForStationEligibleEpisodes];
}

id objc_msgSend_predicateForSubscribedAndNotHidden(void *a1, const char *a2, ...)
{
  return _[a1 predicateForSubscribedAndNotHidden];
}

id objc_msgSend_predicateForSubscribedPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 predicateForSubscribedPodcasts];
}

id objc_msgSend_predicateForSubscriptionSyncType_(void *a1, const char *a2, ...)
{
  return [a1 predicateForSubscriptionSyncType:];
}

id objc_msgSend_predicateForSuppressAutoDownload_(void *a1, const char *a2, ...)
{
  return [a1 predicateForSuppressAutoDownload];
}

id objc_msgSend_predicateForSyncablePodcastsForSyncType_(void *a1, const char *a2, ...)
{
  return [a1 predicateForSyncablePodcastsForSyncType:];
}

id objc_msgSend_predicateForUnplayedTabFlag_(void *a1, const char *a2, ...)
{
  return [a1 predicateForUnplayedTabFlag];
}

id objc_msgSend_predicateForUserEpisode_(void *a1, const char *a2, ...)
{
  return [a1 predicateForUserEpisode:];
}

id objc_msgSend_predicateForUserEpisodesOnPodcastUuid_ctx_(void *a1, const char *a2, ...)
{
  return [a1 predicateForUserEpisodesOnPodcastUuid:ctx:];
}

id objc_msgSend_predicateForUserEpisodesOnPodcastUuid_episodeLimit_deletePlayedEpisodes_limitToDownloadBehaviorAutomatic_(void *a1, const char *a2, ...)
{
  return [a1 predicateForUserEpisodesOnPodcastUuid:episodeLimit:deletePlayedEpisodes:limitToDownloadBehaviorAutomatic:];
}

id objc_msgSend_predicateForVisiblePlaylistWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForVisiblePlaylistWithUUID:");
}

id objc_msgSend_predicateForVisuallyPlayed_(void *a1, const char *a2, ...)
{
  return [a1 predicateForVisuallyPlayed:];
}

id objc_msgSend_predicateMatchingPredicates_(void *a1, const char *a2, ...)
{
  return [a1 predicateMatchingPredicates:];
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithBlock:];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithFormat:];
}

id objc_msgSend_predicateWithValue_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithValue:];
}

id objc_msgSend_predicateWithValue_forProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithValue:forProperty:");
}

id objc_msgSend_preferencesURL(void *a1, const char *a2, ...)
{
  return _[a1 preferencesURL];
}

id objc_msgSend_preferredContentWidth(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentWidth];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_addingSymbolicTraits_options_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredIntervals(void *a1, const char *a2, ...)
{
  return _[a1 preferredIntervals];
}

id objc_msgSend_prepareAssetForFairPlayPlayback_(void *a1, const char *a2, ...)
{
  return [a1 prepareAssetForFairPlayPlayback];
}

id objc_msgSend_prepareAssetForFairPlayPlayback_legacy_(void *a1, const char *a2, ...)
{
  return [a1 prepareAssetForFairPlayPlayback_legacy:];
}

id objc_msgSend_prepareForPlatform_(void *a1, const char *a2, ...)
{
  return [a1 prepareForPlatform:];
}

id objc_msgSend_prepareForPopoverPresentation_(void *a1, const char *a2, ...)
{
  return [a1 prepareForPopoverPresentation:];
}

id objc_msgSend_prepareForReuse(void *a1, const char *a2, ...)
{
  return _[a1 prepareForReuse];
}

id objc_msgSend_prepareImageDataForPodcastUuid_completion_(void *a1, const char *a2, ...)
{
  return [a1 prepareImageDataForPodcastUuid:completion:];
}

id objc_msgSend_prepareIntentForEpisodeUuid_stationUuid_includeImage_includeStorePlatformData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareIntentForEpisodeUuid:stationUuid:includeImage:includeStorePlatformData:completion:");
}

id objc_msgSend_prepareSearchableItemForEpisode_annotator_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareSearchableItemForEpisode:annotator:completion:");
}

id objc_msgSend_prepareSearchableItemForObject_annotator_completion_(void *a1, const char *a2, ...)
{
  return [a1 prepareSearchableItemForObject:annotator:completion:];
}

id objc_msgSend_prepareSearchableItemForPlayerItem_annotator_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareSearchableItemForPlayerItem:annotator:completion:");
}

id objc_msgSend_prepareSearchableItemForPodcast_annotator_completion_(void *a1, const char *a2, ...)
{
  return [a1 prepareSearchableItemForPodcast:annotator:completion:];
}

id objc_msgSend_prepareSearchableItemForStation_annotator_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareSearchableItemForStation:annotator:completion:");
}

id objc_msgSend_prepareSearchableItemsForObjectInArray_annotator_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareSearchableItemsForObjectInArray:annotator:completion:");
}

id objc_msgSend_preprocessFeedWithDataHashingBlock_feedCreationBlock_url_useBackgroundFetch_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preprocessFeedWithDataHashingBlock:feedCreationBlock:url:useBackgroundFetch:source:");
}

id objc_msgSend_presentAddPodcastUIWithUrl_(void *a1, const char *a2, ...)
{
  return [a1 presentAddPodcastUIWithUrl:];
}

id objc_msgSend_presentAlertIfNeeded_presentationCompletion_actionCompletion_(void *a1, const char *a2, ...)
{
  return [a1 presentAlertIfNeeded:nil presentationCompletion:nil actionCompletion:nil];
}

id objc_msgSend_presentAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentAnimated:YES completion:nil];
}

id objc_msgSend_presentEngagement(void *a1, const char *a2, ...)
{
  return _[a1 presentEngagement];
}

id objc_msgSend_presentLaunchAlertIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 presentLaunchAlertIfNeeded];
}

id objc_msgSend_presentModalWithHighlightedPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 presentModalWithHighlightedPodcastUuid:];
}

id objc_msgSend_presentNowPlayingAnimated_(void *a1, const char *a2, ...)
{
  return [a1 presentNowPlayingAnimated:];
}

id objc_msgSend_presentNowPlayingWithAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentNowPlayingWithAnimated:completion:];
}

id objc_msgSend_presentPodcast_episode_podcastTab_startPlayback_animated_(void *a1, const char *a2, ...)
{
  return [a1 presentPodcast:episode:podcastTab:startPlayback:animated:];
}

id objc_msgSend_presentPodcast_episodeUuid_episodeNotAvailable_podcastTab_startPlayback_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentPodcast:episodeUuid:episodeNotAvailable:podcastTab:startPlayback:animated:");
}

id objc_msgSend_presentStation_new_(void *a1, const char *a2, ...)
{
  return [a1 presentStation:new:];
}

id objc_msgSend_presentStationWithTitle_(void *a1, const char *a2, ...)
{
  return [a1 presentStationWithTitle:];
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _[a1 presentationController];
}

id objc_msgSend_presentationStyle(void *a1, const char *a2, ...)
{
  return _[a1 presentationStyle];
}

id objc_msgSend_presentationType(void *a1, const char *a2, ...)
{
  return _[a1 presentationType];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presentingButton(void *a1, const char *a2, ...)
{
  return _[a1 presentingButton];
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingViewController];
}

id objc_msgSend_prettyShortStringWithDuration_abbreviated_(void *a1, const char *a2, ...)
{
  return [a1 prettyShortStringWithDuration:abbreviated:];
}

id objc_msgSend_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_(void *a1, const char *a2, ...)
{
  return [a1 prettyShortStringWithDuration:includeTimeRemainingPhrase:abbreviated:];
}

id objc_msgSend_prettyStringWithDuration_(void *a1, const char *a2, ...)
{
  return [a1 prettyStringWithDuration:];
}

id objc_msgSend_previousPlayingEpisodeUuid(void *a1, const char *a2, ...)
{
  return _[a1 previousPlayingEpisodeUuid];
}

id objc_msgSend_priceType(void *a1, const char *a2, ...)
{
  return _[a1 priceType];
}

id objc_msgSend_priceTypeIsPSUB(void *a1, const char *a2, ...)
{
  return _[a1 priceTypeIsPSUB];
}

id objc_msgSend_primaryTextColorForTheme_(void *a1, const char *a2, ...)
{
  return [a1 primaryTextColorForTheme:];
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return _[a1 priority];
}

id objc_msgSend_privacyAcknowledgementNeeded(void *a1, const char *a2, ...)
{
  return _[a1 privacyAcknowledgementNeeded];
}

id objc_msgSend_privatePathForDownload(void *a1, const char *a2, ...)
{
  return _[a1 privatePathForDownload];
}

id objc_msgSend_privateQueueContext(void *a1, const char *a2, ...)
{
  return _[a1 privateQueueContext];
}

id objc_msgSend_processAnnouncementNotification_(void *a1, const char *a2, ...)
{
  return [a1 processAnnouncementNotification:];
}

id objc_msgSend_processAssertion(void *a1, const char *a2, ...)
{
  return _[a1 processAssertion];
}

id objc_msgSend_processChangeAtIndexPath_forChangeType_newIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 processChangeAtIndexPath:forChangeType:newIndexPath:];
}

id objc_msgSend_processFeed_podcastUUID_requestUrl_useBackgroundFetch_needsUpdate_source_(void *a1, const char *a2, ...)
{
  return [a1 processFeed:podcastUUID:requestUrl:useBackgroundFetch:needsUpdate:source:];
}

id objc_msgSend_processFeedUpdateNotification_triggerBy_(void *a1, const char *a2, ...)
{
  return [a1 processFeedUpdateNotification:triggerBy:];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processLatestPersistentHistoryTransactions(void *a1, const char *a2, ...)
{
  return _[a1 processLatestPersistentHistoryTransactions];
}

id objc_msgSend_processNotification_(void *a1, const char *a2, ...)
{
  return [a1 processNotification:];
}

id objc_msgSend_processNotificationsWithReason_(void *a1, const char *a2, ...)
{
  return [a1 processNotificationsWithReason:];
}

id objc_msgSend_processPendingKeyInvalidations(void *a1, const char *a2, ...)
{
  return _[a1 processPendingKeyInvalidations];
}

id objc_msgSend_processResults(void *a1, const char *a2, ...)
{
  return _[a1 processResults];
}

id objc_msgSend_processSubscriptionSyncNotification(void *a1, const char *a2, ...)
{
  return _[a1 processSubscriptionSyncNotification];
}

id objc_msgSend_processUPPSyncNotification(void *a1, const char *a2, ...)
{
  return _[a1 processUPPSyncNotification];
}

id objc_msgSend_processingCompletion(void *a1, const char *a2, ...)
{
  return _[a1 processingCompletion];
}

id objc_msgSend_processor(void *a1, const char *a2, ...)
{
  return _[a1 processor];
}

id objc_msgSend_processorForKey_(void *a1, const char *a2, ...)
{
  return [a1 processorForKey:];
}

id objc_msgSend_productURLForStoreCollectionId_storeTrackId_(void *a1, const char *a2, ...)
{
  return [a1 productURLForStoreCollectionId:storeTrackId:];
}

id objc_msgSend_promiseWithResult_(void *a1, const char *a2, ...)
{
  return [a1 promiseWithResult:];
}

id objc_msgSend_promptAccountAuthenticationWithDebugReason_forced_(void *a1, const char *a2, ...)
{
  return [a1 promptAccountAuthenticationWithDebugReason:forced:];
}

id objc_msgSend_promptBeforePerformingIntentAsBufferedAirPlayForRoute_provider_queueStatus_completion_(void *a1, const char *a2, ...)
{
  return [a1 promptBeforePerformingIntentAsBufferedAirPlayForRoute:provider:queueStatus:completion:];
}

id objc_msgSend_promptBeforePerformingRequestAsBufferedAirPlay_queueStatus_(void *a1, const char *a2, ...)
{
  return [a1 promptBeforePerformingRequestAsBufferedAirPlay:queueStatus:];
}

id objc_msgSend_properties(void *a1, const char *a2, ...)
{
  return _[a1 properties];
}

id objc_msgSend_propertiesForMediaItem(void *a1, const char *a2, ...)
{
  return _[a1 propertiesForMediaItem];
}

id objc_msgSend_propertiesForMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 propertiesForMediaLibrary];
}

id objc_msgSend_propertiesToFetchAssetURL(void *a1, const char *a2, ...)
{
  return _[a1 propertiesToFetchAssetURL];
}

id objc_msgSend_propertyDictionaryForSearchItem_(void *a1, const char *a2, ...)
{
  return [a1 propertyDictionaryForSearchItem:];
}

id objc_msgSend_propertyKeys(void *a1, const char *a2, ...)
{
  return _[a1 propertyKeys];
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return [a1 propertyListWithData:options:format:error:];
}

id objc_msgSend_propertyPathForPodcastProperty_(void *a1, const char *a2, ...)
{
  return [a1 propertyPathForPodcastProperty:];
}

id objc_msgSend_propertySetWithRelationships_(void *a1, const char *a2, ...)
{
  return [a1 propertySetWithRelationships:];
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return _[a1 provider];
}

id objc_msgSend_proxyShouldShowDialogForReason_podcastTitle_(void *a1, const char *a2, ...)
{
  return [a1 proxyShouldShowDialogForReason:podcastTitle:];
}

id objc_msgSend_prunePersistentHistory(void *a1, const char *a2, ...)
{
  return _[a1 prunePersistentHistory];
}

id objc_msgSend_pubDate(void *a1, const char *a2, ...)
{
  return _[a1 pubDate];
}

id objc_msgSend_pubDateFromStoreMediaDictionary_(void *a1, const char *a2, ...)
{
  return [a1 pubDateFromStoreMediaDictionary:];
}

id objc_msgSend_purgeExternalCookies(void *a1, const char *a2, ...)
{
  return _[a1 purgeExternalCookies];
}

id objc_msgSend_purgeSubscriptionMetadata(void *a1, const char *a2, ...)
{
  return _[a1 purgeSubscriptionMetadata];
}

id objc_msgSend_pushNotificationRegistration(void *a1, const char *a2, ...)
{
  return _[a1 pushNotificationRegistration];
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushViewController:animated:];
}

id objc_msgSend_query(void *a1, const char *a2, ...)
{
  return _[a1 query];
}

id objc_msgSend_queryObserver(void *a1, const char *a2, ...)
{
  return _[a1 queryObserver];
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_queueCommandCustomStatusForRequestStatus_queueType_(void *a1, const char *a2, ...)
{
  return [a1 queueCommandCustomStatusForRequestStatus:queueType:];
}

id objc_msgSend_queueCommandStatusForRequestStatus_queueType_(void *a1, const char *a2, ...)
{
  return [a1 queueCommandStatusForRequestStatus:queueType:];
}

id objc_msgSend_queuedInvocations(void *a1, const char *a2, ...)
{
  return _[a1 queuedInvocations];
}

id objc_msgSend_quickCheckForNeedsContainerMigration(void *a1, const char *a2, ...)
{
  return _[a1 quickCheckForNeedsContainerMigration];
}

id objc_msgSend_radioGroup(void *a1, const char *a2, ...)
{
  return _[a1 radioGroup];
}

id objc_msgSend_radioGroupWithInitialValue_changeHandler_(void *a1, const char *a2, ...)
{
  return [a1 radioGroupWithInitialValue:changeHandler:];
}

id objc_msgSend_radioOptionWithTitle_radioGroup_value_identifier_(void *a1, const char *a2, ...)
{
  return [a1 radioOptionWithTitle:radioGroup:value:identifier:];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfString:];
}

id objc_msgSend_reachability(void *a1, const char *a2, ...)
{
  return _[a1 reachability];
}

id objc_msgSend_reachabilityChangedFrom_to_(void *a1, const char *a2, ...)
{
  return [a1 reachabilityChangedFrom:to:];
}

id objc_msgSend_reachabilityForInternetConnection(void *a1, const char *a2, ...)
{
  return _[a1 reachabilityForInternetConnection];
}

id objc_msgSend_readableWidth(void *a1, const char *a2, ...)
{
  return _[a1 readableWidth];
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _[a1 reason];
}

id objc_msgSend_reasonForNoInternet(void *a1, const char *a2, ...)
{
  return _[a1 reasonForNoInternet];
}

id objc_msgSend_reasonForNotPlayable(void *a1, const char *a2, ...)
{
  return _[a1 reasonForNotPlayable];
}

id objc_msgSend_reasonTextForNoInternet(void *a1, const char *a2, ...)
{
  return _[a1 reasonTextForNoInternet];
}

id objc_msgSend_recalculateAllPlaylists(void *a1, const char *a2, ...)
{
  return _[a1 recalculateAllPlaylists];
}

id objc_msgSend_recalculateEpisodeCounts(void *a1, const char *a2, ...)
{
  return _[a1 recalculateEpisodeCounts];
}

id objc_msgSend_recalculateUpNextForShowWithFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 recalculateUpNextForShowWithFeedUrl:];
}

id objc_msgSend_receiveOn_loader_(void *a1, const char *a2, ...)
{
  return [a1 receiveOn:loader];
}

id objc_msgSend_record(void *a1, const char *a2, ...)
{
  return _[a1 record];
}

id objc_msgSend_recordEvent_dataSource_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordEvent:dataSource:data:");
}

id objc_msgSend_recordEvent_dataSource_data_topic_(void *a1, const char *a2, ...)
{
  return [a1 recordEvent:dataSource:data:topic:];
}

id objc_msgSend_recordEvent_topic_(void *a1, const char *a2, ...)
{
  return [a1 recordEvent:topic:];
}

id objc_msgSend_recordMTPlayerMetricsForCurrentItemWithCurrentTime_(void *a1, const char *a2, ...)
{
  return [a1 recordMTPlayerMetricsForCurrentItemWithCurrentTime:];
}

id objc_msgSend_recordMetrics(void *a1, const char *a2, ...)
{
  return _[a1 recordMetrics];
}

id objc_msgSend_recordMetricsEventForAccessLog_playerItem_(void *a1, const char *a2, ...)
{
  return [a1 recordMetricsEventForAccessLog:playerItem:];
}

id objc_msgSend_recordMetricsEventForErrorLog_withEpisode_(void *a1, const char *a2, ...)
{
  return [a1 recordMetricsEventForErrorLog:withEpisode:];
}

id objc_msgSend_recordMetricsEventForType_withData_(void *a1, const char *a2, ...)
{
  return [a1 recordMetricsEventForType:withData:];
}

id objc_msgSend_recordMetricsForCurrentItem(void *a1, const char *a2, ...)
{
  return _[a1 recordMetricsForCurrentItem];
}

id objc_msgSend_recordUserAction_(void *a1, const char *a2, ...)
{
  return [a1 recordUserAction:];
}

id objc_msgSend_recordUserAction_dataSource_(void *a1, const char *a2, ...)
{
  return [a1 recordUserAction:dataSource:];
}

id objc_msgSend_recordUserAction_dataSource_withData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordUserAction:dataSource:withData:");
}

id objc_msgSend_recordedPlayEventsForCurrentItem(void *a1, const char *a2, ...)
{
  return _[a1 recordedPlayEventsForCurrentItem];
}

id objc_msgSend_rectForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 rectForRowAtIndexPath:];
}

id objc_msgSend_redColor(void *a1, const char *a2, ...)
{
  return _[a1 redColor];
}

id objc_msgSend_redirectURL(void *a1, const char *a2, ...)
{
  return _[a1 redirectURL];
}

id objc_msgSend_refresh(void *a1, const char *a2, ...)
{
  return _[a1 refresh];
}

id objc_msgSend_refreshContentsOfUpdatedOrInsertedPlaylists(void *a1, const char *a2, ...)
{
  return _[a1 refreshContentsOfUpdatedOrInsertedPlaylists];
}

id objc_msgSend_refreshControl(void *a1, const char *a2, ...)
{
  return _[a1 refreshControl];
}

id objc_msgSend_refreshControlTextColor(void *a1, const char *a2, ...)
{
  return _[a1 refreshControlTextColor];
}

id objc_msgSend_refreshDelegate(void *a1, const char *a2, ...)
{
  return _[a1 refreshDelegate];
}

id objc_msgSend_refreshObject_mergeChanges_(void *a1, const char *a2, ...)
{
  return [a1 refreshObject:mergeChanges:];
}

id objc_msgSend_refreshSettings(void *a1, const char *a2, ...)
{
  return _[a1 refreshSettings];
}

id objc_msgSend_registerAVSessionCategoryAndMode(void *a1, const char *a2, ...)
{
  return _[a1 registerAVSessionCategoryAndMode];
}

id objc_msgSend_registerActions_(void *a1, const char *a2, ...)
{
  return [a1 registerActions:];
}

id objc_msgSend_registerBackgroundCompletion_forSession_(void *a1, const char *a2, ...)
{
  return [a1 registerBackgroundCompletion:forSession:];
}

id objc_msgSend_registerBackgroundTaskClass_(void *a1, const char *a2, ...)
{
  return [a1 registerBackgroundTaskClass];
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forCellWithReuseIdentifier:];
}

id objc_msgSend_registerClass_forHeaderFooterViewReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forHeaderFooterViewReuseIdentifier:];
}

id objc_msgSend_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forSupplementaryViewOfKind:withReuseIdentifier:];
}

id objc_msgSend_registerDataProvider_(void *a1, const char *a2, ...)
{
  return [a1 registerDataProvider:];
}

id objc_msgSend_registerDefaults(void *a1, const char *a2, ...)
{
  return _[a1 registerDefaults];
}

id objc_msgSend_registerDefaults_(void *a1, const char *a2, ...)
{
  return [a1 registerDefaults:];
}

id objc_msgSend_registerForRemoteNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerForRemoteNotifications];
}

id objc_msgSend_registerForTaskWithIdentifier_usingQueue_launchHandler_(void *a1, const char *a2, ...)
{
  return [a1 registerForTaskWithIdentifier:usingQueue:launchHandler:];
}

id objc_msgSend_registerForUpdates_(void *a1, const char *a2, ...)
{
  return [a1 registerForUpdates:];
}

id objc_msgSend_registerItemForTypeIdentifier_loadHandler_(void *a1, const char *a2, ...)
{
  return [a1 registerItemForTypeIdentifier:loadHandler:];
}

id objc_msgSend_registerLaunchHandlers(void *a1, const char *a2, ...)
{
  return _[a1 registerLaunchHandlers];
}

id objc_msgSend_registerManifestForRestoration_(void *a1, const char *a2, ...)
{
  return [a1 registerManifestForRestoration];
}

id objc_msgSend_registerPushNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerPushNotifications];
}

id objc_msgSend_registerSupportedQueueType_(void *a1, const char *a2, ...)
{
  return [a1 registerSupportedQueueType:];
}

id objc_msgSend_registerUserSwitchStakeHolder_(void *a1, const char *a2, ...)
{
  return [a1 registerUserSwitchStakeHolder];
}

id objc_msgSend_relation(void *a1, const char *a2, ...)
{
  return _[a1 relation];
}

id objc_msgSend_reload(void *a1, const char *a2, ...)
{
  return _[a1 reload];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _[a1 reloadData];
}

id objc_msgSend_reloadGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 reloadGroupWithIdentifier:];
}

id objc_msgSend_reloadHandler(void *a1, const char *a2, ...)
{
  return _[a1 reloadHandler];
}

id objc_msgSend_reloadIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 reloadIfNeeded];
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 reloadRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_reloadSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 reloadSections:withRowAnimation:];
}

id objc_msgSend_remainingBackgroundTime(void *a1, const char *a2, ...)
{
  return _[a1 remainingBackgroundTime];
}

id objc_msgSend_remeberBookmark(void *a1, const char *a2, ...)
{
  return _[a1 remeberBookmark];
}

id objc_msgSend_remoteSkipBackward_(void *a1, const char *a2, ...)
{
  return [a1 remoteSkipBackward:];
}

id objc_msgSend_remoteSkipForward_(void *a1, const char *a2, ...)
{
  return [a1 remoteSkipForward];
}

id objc_msgSend_remoteSkipPreference(void *a1, const char *a2, ...)
{
  return _[a1 remoteSkipPreference];
}

id objc_msgSend_removalAllFairPlayKeysWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 removalAllFairPlayKeysWithCompletion:];
}

id objc_msgSend_removeAccount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 removeAccount:withCompletionHandler:];
}

id objc_msgSend_removeAllDeliveredNotifications(void *a1, const char *a2, ...)
{
  return _[a1 removeAllDeliveredNotifications];
}

id objc_msgSend_removeAllDonations(void *a1, const char *a2, ...)
{
  return _[a1 removeAllDonations];
}

id objc_msgSend_removeAllHLSDownloadAssets(void *a1, const char *a2, ...)
{
  return _[a1 removeAllHLSDownloadAssets];
}

id objc_msgSend_removeAllKeyDataWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 removeAllKeyDataWithCompletion:];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAllPendingNotificationRequests(void *a1, const char *a2, ...)
{
  return _[a1 removeAllPendingNotificationRequests];
}

id objc_msgSend_removeCapacityChangeObserverWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCapacityChangeObserverWith:");
}

id objc_msgSend_removeChangeNotifier_(void *a1, const char *a2, ...)
{
  return [a1 removeChangeNotifier:];
}

id objc_msgSend_removeDeliveredNotificationsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 removeDeliveredNotificationsWithIdentifiers:];
}

id objc_msgSend_removeDismissRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 removeDismissRecognizer];
}

id objc_msgSend_removeDonationForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 removeDonationForPodcastUuid:];
}

id objc_msgSend_removeDonationsForEpisodeUuids_(void *a1, const char *a2, ...)
{
  return [a1 removeDonationsForEpisodeUuids:];
}

id objc_msgSend_removeDownload_shouldAllowAutomaticRedownloads_completion_(void *a1, const char *a2, ...)
{
  return [a1 removeDownload:shouldAllowAutomaticRedownloads:completion:];
}

id objc_msgSend_removeDownloadAssetsForEpisodeAdamIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDownloadAssetsForEpisodeAdamIds:");
}

id objc_msgSend_removeDownloadAssetsForEpisodeUuids_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDownloadAssetsForEpisodeUuids:");
}

id objc_msgSend_removeDownloadAssetsForEpisodeUuids_shouldKeep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDownloadAssetsForEpisodeUuids:shouldKeep:");
}

id objc_msgSend_removeEpisode_inBulkTransaction_(void *a1, const char *a2, ...)
{
  return [a1 removeEpisode:inBulkTransaction:];
}

id objc_msgSend_removeEpisodeAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeEpisodeAtIndex:];
}

id objc_msgSend_removeEpisodeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeEpisodeObserver:];
}

id objc_msgSend_removeEpisodeObserverForPodcasts_(void *a1, const char *a2, ...)
{
  return [a1 removeEpisodeObserverForPodcasts];
}

id objc_msgSend_removeEpisodesForUuid_(void *a1, const char *a2, ...)
{
  return [a1 removeEpisodesForUuid:];
}

id objc_msgSend_removeFromPlaybackQueueCommand(void *a1, const char *a2, ...)
{
  return _[a1 removeFromPlaybackQueueCommand];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 removeGestureRecognizer:];
}

id objc_msgSend_removeIndexPath_forObject_fromMap_(void *a1, const char *a2, ...)
{
  return [a1 removeIndexPath:forObject:fromMap:];
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return [a1 removeItemAtPath:error:];
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return [a1 removeItemAtURL:error:];
}

id objc_msgSend_removeItemWithContentID_(void *a1, const char *a2, ...)
{
  return [a1 removeItemWithContentID];
}

id objc_msgSend_removeItems_(void *a1, const char *a2, ...)
{
  return [a1 removeItems:];
}

id objc_msgSend_removeItemsWithPrefx_(void *a1, const char *a2, ...)
{
  return [a1 removeItemsWithPrefx:];
}

id objc_msgSend_removeKeyDataForStoreTrackID_(void *a1, const char *a2, ...)
{
  return [a1 removeKeyDataForStoreTrackID];
}

id objc_msgSend_removeKeyFor_(void *a1, const char *a2, ...)
{
  return [a1 removeKeyFor:];
}

id objc_msgSend_removeMetadataForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 removeMetadataForPodcastUuid];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectAtIndex:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObjectIdenticalTo_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectIdenticalTo:];
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsAtIndexes:];
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsForKeys:];
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsInArray:];
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:];
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPath:context:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_removePendingNotificationRequestsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 removePendingNotificationRequestsWithIdentifiers:];
}

id objc_msgSend_removePlayedDownloadsSetting(void *a1, const char *a2, ...)
{
  return _[a1 removePlayedDownloadsSetting];
}

id objc_msgSend_removePlaylistsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePlaylistsObject:");
}

id objc_msgSend_removePodcast_(void *a1, const char *a2, ...)
{
  return [a1 removePodcast:];
}

id objc_msgSend_removeSettingAtIndex_fromGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 removeSettingAtIndex:fromGroupWithIdentifier:];
}

id objc_msgSend_removeSubscribeParamsForFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 removeSubscribeParamsForFeedUrl:];
}

id objc_msgSend_removeTarget_(void *a1, const char *a2, ...)
{
  return [a1 removeTarget];
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 removeTarget:action:forControlEvents:];
}

id objc_msgSend_reorderItemWithContentId_afterItemWithContentID_(void *a1, const char *a2, ...)
{
  return [a1 reorderItemWithContentId:afterItemWithContentID:];
}

id objc_msgSend_reorderLocalPodcastsToMatchRemote_(void *a1, const char *a2, ...)
{
  return [a1 reorderLocalPodcastsToMatchRemote:];
}

id objc_msgSend_reorderQueueCommand(void *a1, const char *a2, ...)
{
  return _[a1 reorderQueueCommand];
}

id objc_msgSend_replaceIntent(void *a1, const char *a2, ...)
{
  return _[a1 replaceIntent];
}

id objc_msgSend_report(void *a1, const char *a2, ...)
{
  return _[a1 report];
}

id objc_msgSend_report_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 report:userInfo:];
}

id objc_msgSend_reportBookmarksSyncIssue_bookmarksSyncType_version_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 reportBookmarksSyncIssue:bookmarksSyncType:version:userInfo:];
}

id objc_msgSend_reportIfLocalAssetHasiPodLibraryURL_(void *a1, const char *a2, ...)
{
  return [a1 reportIfLocalAssetHasiPodLibraryURL];
}

id objc_msgSend_reportImportingRemotePodcast_withLocalPodcast_shouldAddPodcast_shouldUnsubscribeLocalPodcast_shouldUpdateSettings_mismatch_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportImportingRemotePodcast:withLocalPodcast:shouldAddPodcast:shouldUnsubscribeLocalPodcast:shouldUpdateSettings:mismatch:version:");
}

id objc_msgSend_reportKeyIntegrityError(void *a1, const char *a2, ...)
{
  return _[a1 reportKeyIntegrityError];
}

id objc_msgSend_reportMetrics(void *a1, const char *a2, ...)
{
  return _[a1 reportMetrics];
}

id objc_msgSend_reportPlaybackFromStore_reason_(void *a1, const char *a2, ...)
{
  return [a1 reportPlaybackFromStore:reason:];
}

id objc_msgSend_reportStatsForPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 reportStatsForPodcasts];
}

id objc_msgSend_reportStopReason_withInitiator_(void *a1, const char *a2, ...)
{
  return [a1 reportStopReason:withInitiator:];
}

id objc_msgSend_reportSubscriptionsSyncIssue_subscriptionSyncType_version_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 reportSubscriptionsSyncIssue:subscriptionSyncType:version:userInfo:];
}

id objc_msgSend_reportSyncAuthenticationErrorFor_error_(void *a1, const char *a2, ...)
{
  return [a1 reportSyncAuthenticationErrorFor:error:];
}

id objc_msgSend_reportWithMarker_(void *a1, const char *a2, ...)
{
  return [a1 reportWithMarker:];
}

id objc_msgSend_reportWithType_userInfo_location_reason_(void *a1, const char *a2, ...)
{
  return [a1 reportWithType:userInfo:location:reason:];
}

id objc_msgSend_reportedItemVersionForIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 reportedItemVersionForIdentifier];
}

id objc_msgSend_reportingStringForPlayReason_(void *a1, const char *a2, ...)
{
  return [a1 reportingStringForPlayReason:];
}

id objc_msgSend_representedElementKind(void *a1, const char *a2, ...)
{
  return _[a1 representedElementKind];
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _[a1 request];
}

id objc_msgSend_request_(void *a1, const char *a2, ...)
{
  return [a1 request];
}

id objc_msgSend_requestAuthorizationWithOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestAuthorizationWithOptions:completionHandler:];
}

id objc_msgSend_requestError(void *a1, const char *a2, ...)
{
  return _[a1 requestError];
}

id objc_msgSend_requestIdentifierForPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 requestIdentifierForPlayerItem:];
}

id objc_msgSend_requestIdentifiersForManifest_queueStatus_(void *a1, const char *a2, ...)
{
  return [a1 requestIdentifiersForManifest:queueStatus:];
}

id objc_msgSend_requestImageWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestImageWithCompletionHandler:];
}

id objc_msgSend_requestMediaLibraryReadTransaction_(void *a1, const char *a2, ...)
{
  return [a1 requestMediaLibraryReadTransaction];
}

id objc_msgSend_requestMediaLibraryWriteTransaction_(void *a1, const char *a2, ...)
{
  return [a1 requestMediaLibraryWriteTransaction:];
}

id objc_msgSend_requestMediaLibraryWriteTransaction_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestMediaLibraryWriteTransaction:completion:");
}

id objc_msgSend_requestParams(void *a1, const char *a2, ...)
{
  return _[a1 requestParams];
}

id objc_msgSend_requestSecureDeletionOf_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestSecureDeletionOf:completionHandler:];
}

id objc_msgSend_requestStatusForMediaRemoteStatus_(void *a1, const char *a2, ...)
{
  return [a1 requestStatusForMediaRemoteStatus];
}

id objc_msgSend_requestWithContext_(void *a1, const char *a2, ...)
{
  return [a1 requestWithContext:];
}

id objc_msgSend_requestWithIdentifier_content_trigger_(void *a1, const char *a2, ...)
{
  return [a1 requestWithIdentifier:content:trigger:];
}

id objc_msgSend_requestWithParams_callback_(void *a1, const char *a2, ...)
{
  return [a1 requestWithParams:callback:];
}

id objc_msgSend_requesterDsid(void *a1, const char *a2, ...)
{
  return _[a1 requesterDsid];
}

id objc_msgSend_requestsAreNonAppInitiated(void *a1, const char *a2, ...)
{
  return _[a1 requestsAreNonAppInitiated];
}

id objc_msgSend_requiresMigration(void *a1, const char *a2, ...)
{
  return _[a1 requiresMigration];
}

id objc_msgSend_requiresStartDelayToAvoidClampErrors(void *a1, const char *a2, ...)
{
  return _[a1 requiresStartDelayToAvoidClampErrors];
}

id objc_msgSend_rescheduleTasksIfNotScheduledWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return [a1 rescheduleTasksIfNotScheduledWithIdentifier:completion:];
}

id objc_msgSend_rescheduleTasksWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return [a1 rescheduleTasksWithIdentifier:completion:];
}

id objc_msgSend_rescheduleTransactionWithFinishedBlock_(void *a1, const char *a2, ...)
{
  return [a1 rescheduleTransactionWithFinishedBlock:];
}

id objc_msgSend_rescheduleTransactionWithNewVersion_key_finishedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rescheduleTransactionWithNewVersion:key:finishedBlock:");
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_resetAcceptedCredentials(void *a1, const char *a2, ...)
{
  return _[a1 resetAcceptedCredentials];
}

id objc_msgSend_resetAccountIdentifierForLastSync(void *a1, const char *a2, ...)
{
  return _[a1 resetAccountIdentifierForLastSync];
}

id objc_msgSend_resetAllSubscriptionSyncVersion(void *a1, const char *a2, ...)
{
  return _[a1 resetAllSubscriptionSyncVersion];
}

id objc_msgSend_resetBookmarksSync(void *a1, const char *a2, ...)
{
  return _[a1 resetBookmarksSync];
}

id objc_msgSend_resetCache(void *a1, const char *a2, ...)
{
  return _[a1 resetCache];
}

id objc_msgSend_resetForSyncType_(void *a1, const char *a2, ...)
{
  return [a1 resetForSyncType:];
}

id objc_msgSend_resetGoDarkWithReason_(void *a1, const char *a2, ...)
{
  return [a1 resetGoDarkWithReason:];
}

id objc_msgSend_resetInterestSync(void *a1, const char *a2, ...)
{
  return _[a1 resetInterestSync];
}

id objc_msgSend_resetKeychainItem(void *a1, const char *a2, ...)
{
  return _[a1 resetKeychainItem];
}

id objc_msgSend_resetMetadataToInitialState(void *a1, const char *a2, ...)
{
  return _[a1 resetMetadataToInitialState];
}

id objc_msgSend_resetNonFollowedShowsSync(void *a1, const char *a2, ...)
{
  return _[a1 resetNonFollowedShowsSync];
}

id objc_msgSend_resetPlaylistSyncVersion(void *a1, const char *a2, ...)
{
  return _[a1 resetPlaylistSyncVersion];
}

id objc_msgSend_resetSubscriptionsLastSyncTimestampFor_(void *a1, const char *a2, ...)
{
  return [a1 resetSubscriptionsLastSyncTimestampFor:];
}

id objc_msgSend_resetSubscriptionsSyncVersionFor_(void *a1, const char *a2, ...)
{
  return [a1 resetSubscriptionsSyncVersionFor:];
}

id objc_msgSend_resetToInitialState(void *a1, const char *a2, ...)
{
  return _[a1 resetToInitialState];
}

id objc_msgSend_resetToInitialStateForced_(void *a1, const char *a2, ...)
{
  return [a1 resetToInitialStateForced:];
}

id objc_msgSend_resetToInitialStateIfIncomplete(void *a1, const char *a2, ...)
{
  return _[a1 resetToInitialStateIfIncomplete];
}

id objc_msgSend_resetToInitialStateIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 resetToInitialStateIfNeeded];
}

id objc_msgSend_resetUppLastSyncTimeAndDomainVersion(void *a1, const char *a2, ...)
{
  return _[a1 resetUppLastSyncTimeAndDomainVersion];
}

id objc_msgSend_resetVersionForAllFeedUrls(void *a1, const char *a2, ...)
{
  return _[a1 resetVersionForAllFeedUrls];
}

id objc_msgSend_resetVersionForFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 resetVersionForFeedUrl:];
}

id objc_msgSend_resetableImportContext(void *a1, const char *a2, ...)
{
  return _[a1 resetableImportContext];
}

id objc_msgSend_resettingToInitialState(void *a1, const char *a2, ...)
{
  return _[a1 resettingToInitialState];
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponder];
}

id objc_msgSend_resizableImageWithCapInsets_(void *a1, const char *a2, ...)
{
  return [a1 resizableImageWithCapInsets:];
}

id objc_msgSend_resizedArtworkURLString_withDimension_(void *a1, const char *a2, ...)
{
  return [a1 resizedArtworkURLString:withDimension:];
}

id objc_msgSend_resolveActivePlayerPathWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 resolveActivePlayerPathWithCompletion:];
}

id objc_msgSend_resolveAvailabilityDate(void *a1, const char *a2, ...)
{
  return _[a1 resolveAvailabilityDate];
}

id objc_msgSend_resolveError_transaction_resolution_(void *a1, const char *a2, ...)
{
  return [a1 resolveError:transaction:resolution:];
}

id objc_msgSend_resolveWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 resolveWithCompletion:];
}

id objc_msgSend_resolvedColor(void *a1, const char *a2, ...)
{
  return _[a1 resolvedColor];
}

id objc_msgSend_resolvedEnclosureUrl(void *a1, const char *a2, ...)
{
  return _[a1 resolvedEnclosureUrl];
}

id objc_msgSend_resolvedFeedURL(void *a1, const char *a2, ...)
{
  return _[a1 resolvedFeedURL];
}

id objc_msgSend_resolvedSyncClass(void *a1, const char *a2, ...)
{
  return _[a1 resolvedSyncClass];
}

id objc_msgSend_resolvedSyncController(void *a1, const char *a2, ...)
{
  return _[a1 resolvedSyncController];
}

id objc_msgSend_resourceSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 resourceSpecifier];
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _[a1 response];
}

id objc_msgSend_responseDomainVersion(void *a1, const char *a2, ...)
{
  return _[a1 responseDomainVersion];
}

id objc_msgSend_responseTypeForTransaction_withData_forKey_mismatch_(void *a1, const char *a2, ...)
{
  return [a1 responseTypeForTransaction:withData:forKey:mismatch:];
}

id objc_msgSend_restorationCompletions(void *a1, const char *a2, ...)
{
  return _[a1 restorationCompletions];
}

id objc_msgSend_restorationQueue(void *a1, const char *a2, ...)
{
  return _[a1 restorationQueue];
}

id objc_msgSend_restoreActivity_completion_(void *a1, const char *a2, ...)
{
  return [a1 restoreActivity:completion:];
}

id objc_msgSend_restoreBackgroundDownloadTasksWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 restoreBackgroundDownloadTasksWithCompletion:];
}

id objc_msgSend_restoreDownloadedEpisodes_completion_(void *a1, const char *a2, ...)
{
  return [a1 restoreDownloadedEpisodes:completion:];
}

id objc_msgSend_restoreFromUserActivity_startPlayback_reason_interactive_completion_(void *a1, const char *a2, ...)
{
  return [a1 restoreFromUserActivity:startPlayback:reason:interactive:completion:];
}

id objc_msgSend_restoreFromUserActivity_withManifest_startPlayback_reason_interactive_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreFromUserActivity:withManifest:startPlayback:reason:interactive:completion:");
}

id objc_msgSend_restorePlayerManifestWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 restorePlayerManifestWithCompletion:];
}

id objc_msgSend_restorePreviouslyDownloadedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 restorePreviouslyDownloadedEpisodes];
}

id objc_msgSend_restoreSelection(void *a1, const char *a2, ...)
{
  return _[a1 restoreSelection];
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return _[a1 result];
}

id objc_msgSend_results_(void *a1, const char *a2, ...)
{
  return [a1 results:];
}

id objc_msgSend_resultsAreFrozen(void *a1, const char *a2, ...)
{
  return _[a1 resultsAreFrozen];
}

id objc_msgSend_resultsChangedWithDeletedIds_insertIds_updatedIds_(void *a1, const char *a2, ...)
{
  return [a1 resultsChangedWithDeletedIds:insertIds:updatedIds:];
}

id objc_msgSend_resumeOrPauseEpisodeDownloadWithUuid_(void *a1, const char *a2, ...)
{
  return [a1 resumeOrPauseEpisodeDownloadWithUuid:];
}

id objc_msgSend_resyncWhenDone(void *a1, const char *a2, ...)
{
  return _[a1 resyncWhenDone];
}

id objc_msgSend_retainArguments(void *a1, const char *a2, ...)
{
  return _[a1 retainArguments];
}

id objc_msgSend_retrieveArtwork_withSize_(void *a1, const char *a2, ...)
{
  return [a1 retrieveArtwork:withSize:];
}

id objc_msgSend_retrieveArtwork_withSize_atTime_(void *a1, const char *a2, ...)
{
  return [a1 retrieveArtwork:withSize:atTime:];
}

id objc_msgSend_retrySeconds(void *a1, const char *a2, ...)
{
  return _[a1 retrySeconds];
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 reuseIdentifier];
}

id objc_msgSend_reuseIdentifierForRow_(void *a1, const char *a2, ...)
{
  return [a1 reuseIdentifierForRow:];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_rollbackIfNecessaryWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 rollbackIfNecessaryWithCompletion:];
}

id objc_msgSend_rollbackMigrationV40IfNeededInContext_(void *a1, const char *a2, ...)
{
  return [a1 rollbackMigrationV40IfNeededInContext:];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_route(void *a1, const char *a2, ...)
{
  return _[a1 route];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_rowAnimation(void *a1, const char *a2, ...)
{
  return _[a1 rowAnimation];
}

id objc_msgSend_rowHeight(void *a1, const char *a2, ...)
{
  return _[a1 rowHeight];
}

id objc_msgSend_runBlockWhenReady_(void *a1, const char *a2, ...)
{
  return [a1 runBlockWhenReady:];
}

id objc_msgSend_runCoreDataMigration(void *a1, const char *a2, ...)
{
  return _[a1 runCoreDataMigration];
}

id objc_msgSend_runDataMigration(void *a1, const char *a2, ...)
{
  return _[a1 runDataMigration];
}

id objc_msgSend_runImageFormatMigration(void *a1, const char *a2, ...)
{
  return _[a1 runImageFormatMigration];
}

id objc_msgSend_runImageStoreMigration(void *a1, const char *a2, ...)
{
  return _[a1 runImageStoreMigration];
}

id objc_msgSend_runImageStorePathMigration(void *a1, const char *a2, ...)
{
  return _[a1 runImageStorePathMigration];
}

id objc_msgSend_runMigrationForPodcast_version_(void *a1, const char *a2, ...)
{
  return [a1 runMigrationForPodcast:version:];
}

id objc_msgSend_runMigrationOnAllEpisodesForVersion_(void *a1, const char *a2, ...)
{
  return [a1 runMigrationOnAllEpisodesForVersion:];
}

id objc_msgSend_runMigrationOnEpisodesByPodcastForVersion_(void *a1, const char *a2, ...)
{
  return [a1 runMigrationOnEpisodesByPodcastForVersion:];
}

id objc_msgSend_runQueryInContext_(void *a1, const char *a2, ...)
{
  return [a1 runQueryInContext:];
}

id objc_msgSend_runQueryWithPodcastPredicate_episodePredicate_channelPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runQueryWithPodcastPredicate:episodePredicate:channelPredicate:");
}

id objc_msgSend_saveController(void *a1, const char *a2, ...)
{
  return _[a1 saveController];
}

id objc_msgSend_saveDelegate(void *a1, const char *a2, ...)
{
  return _[a1 saveDelegate];
}

id objc_msgSend_saveInCurrentBlock(void *a1, const char *a2, ...)
{
  return _[a1 saveInCurrentBlock];
}

id objc_msgSend_saveNewPlaylists(void *a1, const char *a2, ...)
{
  return _[a1 saveNewPlaylists];
}

id objc_msgSend_savePartialUploadStateIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 savePartialUploadStateIndexPath:];
}

id objc_msgSend_saveSubscriptionMetadata(void *a1, const char *a2, ...)
{
  return _[a1 saveSubscriptionMetadata];
}

id objc_msgSend_saveToUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 saveToUserDefaults];
}

id objc_msgSend_saved(void *a1, const char *a2, ...)
{
  return _[a1 saved];
}

id objc_msgSend_savedPartialUploadStateIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 savedPartialUploadStateIndexPath];
}

id objc_msgSend_savedSections(void *a1, const char *a2, ...)
{
  return _[a1 savedSections];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scaleToSize_addBorder_(void *a1, const char *a2, ...)
{
  return [a1 scaleToSize:addBorder:];
}

id objc_msgSend_schedule_(void *a1, const char *a2, ...)
{
  return [a1 schedule:];
}

id objc_msgSend_schedule_completion_(void *a1, const char *a2, ...)
{
  return [a1 schedule:completion:];
}

id objc_msgSend_scheduleApnSubscriptionTransactionWithPushSubscriptionRequest_(void *a1, const char *a2, ...)
{
  return [a1 scheduleApnSubscriptionTransactionWithPushSubscriptionRequest:];
}

id objc_msgSend_scheduleDefaultDeferralDeadline(void *a1, const char *a2, ...)
{
  return _[a1 scheduleDefaultDeferralDeadline];
}

id objc_msgSend_scheduleEpisodeStateGetWithFeedUrls_(void *a1, const char *a2, ...)
{
  return [a1 scheduleEpisodeStateGetWithFeedUrls:];
}

id objc_msgSend_scheduleEpisodeStatePutWithFeedUrls_(void *a1, const char *a2, ...)
{
  return [a1 scheduleEpisodeStatePutWithFeedUrls:];
}

id objc_msgSend_scheduleFeedUpdateIdleBlock_(void *a1, const char *a2, ...)
{
  return [a1 scheduleFeedUpdateIdleBlock];
}

id objc_msgSend_scheduleGetTransactionWithKeys_processor_(void *a1, const char *a2, ...)
{
  return [a1 scheduleGetTransactionWithKeys:processor:];
}

id objc_msgSend_scheduleIndexAllIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 scheduleIndexAllIfNecessary];
}

id objc_msgSend_scheduleLocalNotificationForPodcast_schedulingOptions_completion_(void *a1, const char *a2, ...)
{
  return [a1 scheduleLocalNotificationForPodcast:schedulingOptions:completion:];
}

id objc_msgSend_scheduleSetTransactionWithKeys_processor_(void *a1, const char *a2, ...)
{
  return [a1 scheduleSetTransactionWithKeys:processor:];
}

id objc_msgSend_scheduleStoreURLRequest_(void *a1, const char *a2, ...)
{
  return [a1 scheduleStoreURLRequest:];
}

id objc_msgSend_scheduleTransaction_(void *a1, const char *a2, ...)
{
  return [a1 scheduleTransaction:];
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_scoreFromModifiedDate_(void *a1, const char *a2, ...)
{
  return [a1 scoreFromModifiedDate:];
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _[a1 scrollView];
}

id objc_msgSend_scrubbing(void *a1, const char *a2, ...)
{
  return _[a1 scrubbing];
}

id objc_msgSend_searchCacheForEpisodeMatchingMediaItem_(void *a1, const char *a2, ...)
{
  return [a1 searchCacheForEpisodeMatchingMediaItem:];
}

id objc_msgSend_searchUrlForSearchText_(void *a1, const char *a2, ...)
{
  return [a1 searchUrlForSearchText:];
}

id objc_msgSend_searchableIndex(void *a1, const char *a2, ...)
{
  return _[a1 searchableIndex];
}

id objc_msgSend_searchableIndex_indexSearchableItems_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchableIndex:indexSearchableItems:completionHandler:");
}

id objc_msgSend_seasonNumber(void *a1, const char *a2, ...)
{
  return _[a1 seasonNumber];
}

id objc_msgSend_seasonNumbers(void *a1, const char *a2, ...)
{
  return _[a1 seasonNumbers];
}

id objc_msgSend_seasonSortDescriptorsForSortOrder(void *a1, const char *a2, ...)
{
  return _[a1 seasonSortDescriptorsForSortOrder];
}

id objc_msgSend_seasonTrailerInSeason_(void *a1, const char *a2, ...)
{
  return [a1 seasonTrailerInSeason:];
}

id objc_msgSend_secItemFormatToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 secItemFormatToDictionary];
}

id objc_msgSend_secondAttribute(void *a1, const char *a2, ...)
{
  return _[a1 secondAttribute];
}

id objc_msgSend_secondItem(void *a1, const char *a2, ...)
{
  return _[a1 secondItem];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_secondaryTextColorForTheme_(void *a1, const char *a2, ...)
{
  return [a1 secondaryTextColorForTheme:];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _[a1 section];
}

id objc_msgSend_sectionDidChangeContent_(void *a1, const char *a2, ...)
{
  return [a1 sectionDidChangeContent:];
}

id objc_msgSend_sectionFooterFloatingDisabled(void *a1, const char *a2, ...)
{
  return _[a1 sectionFooterFloatingDisabled];
}

id objc_msgSend_sectionFooterFont(void *a1, const char *a2, ...)
{
  return _[a1 sectionFooterFont];
}

id objc_msgSend_sectionHeaderIndexPathForItemIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 sectionHeaderIndexPathForItemIndexPath:];
}

id objc_msgSend_sectionHeaderViewForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 sectionHeaderViewForIndexPath:];
}

id objc_msgSend_sectionNameKeyPath(void *a1, const char *a2, ...)
{
  return _[a1 sectionNameKeyPath];
}

id objc_msgSend_sectionType(void *a1, const char *a2, ...)
{
  return _[a1 sectionType];
}

id objc_msgSend_sectionWillChangeContent_(void *a1, const char *a2, ...)
{
  return [a1 sectionWillChangeContent:];
}

id objc_msgSend_sections(void *a1, const char *a2, ...)
{
  return _[a1 sections];
}

id objc_msgSend_secureDownloadRenewalManager(void *a1, const char *a2, ...)
{
  return _[a1 secureDownloadRenewalManager];
}

id objc_msgSend_secureKeyLoader(void *a1, const char *a2, ...)
{
  return _[a1 secureKeyLoader];
}

id objc_msgSend_segmentsDownloadedDuration(void *a1, const char *a2, ...)
{
  return _[a1 segmentsDownloadedDuration];
}

id objc_msgSend_selectAppearancePathIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 selectAppearancePathIfNecessary];
}

id objc_msgSend_selectFeaturedTab(void *a1, const char *a2, ...)
{
  return _[a1 selectFeaturedTab];
}

id objc_msgSend_selectItemAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return [a1 selectItemAtIndexPath:animated:scrollPosition:];
}

id objc_msgSend_selectItemWithUuid_forceScroll_(void *a1, const char *a2, ...)
{
  return [a1 selectItemWithUuid:forceScroll:];
}

id objc_msgSend_selectMyPodcastsTab(void *a1, const char *a2, ...)
{
  return _[a1 selectMyPodcastsTab];
}

id objc_msgSend_selectMyPodcastsTabAndPopToRoot_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 selectMyPodcastsTabAndPopToRoot:animated:completion:];
}

id objc_msgSend_selectRoute_operation_completion_(void *a1, const char *a2, ...)
{
  return [a1 selectRoute:operation:completion:];
}

id objc_msgSend_selectRowAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return [a1 selectRowAtIndexPath:animated:scrollPosition:];
}

id objc_msgSend_selectSearchTabAndFocusSearchField(void *a1, const char *a2, ...)
{
  return _[a1 selectSearchTabAndFocusSearchField];
}

id objc_msgSend_selectUnplayedTabAndPopToRoot_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 selectUnplayedTabAndPopToRoot:animated:completion:];
}

id objc_msgSend_selectedBackgroundColorForTheme_(void *a1, const char *a2, ...)
{
  return [a1 selectedBackgroundColorForTheme:];
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _[a1 selectedIndex];
}

id objc_msgSend_selectedOptionIndex(void *a1, const char *a2, ...)
{
  return _[a1 selectedOptionIndex];
}

id objc_msgSend_selectedPlayerTime(void *a1, const char *a2, ...)
{
  return _[a1 selectedPlayerTime];
}

id objc_msgSend_selectedReferenceTime(void *a1, const char *a2, ...)
{
  return _[a1 selectedReferenceTime];
}

id objc_msgSend_selectedUuid(void *a1, const char *a2, ...)
{
  return _[a1 selectedUuid];
}

id objc_msgSend_selectionFadeDuration(void *a1, const char *a2, ...)
{
  return _[a1 selectionFadeDuration];
}

id objc_msgSend_selectorForRefreshControl(void *a1, const char *a2, ...)
{
  return _[a1 selectorForRefreshControl];
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _[a1 semanticContentAttribute];
}

id objc_msgSend_sendCommand_toDestination_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommand:toDestination:withOptions:completion:");
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return [a1 sendEvent:];
}

id objc_msgSend_sendPlaybackQueue_toDestination_withOptions_completion_(void *a1, const char *a2, ...)
{
  return [a1 sendPlaybackQueue:toDestination:withOptions:completion:];
}

id objc_msgSend_sendStopRequestForStreamingLicenseIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 sendStopRequestForStreamingLicenseIfNecessary];
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return [a1 sendSubviewToBack:];
}

id objc_msgSend_sentNotification(void *a1, const char *a2, ...)
{
  return _[a1 sentNotification];
}

id objc_msgSend_separator(void *a1, const char *a2, ...)
{
  return _[a1 separator];
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _[a1 separatorColor];
}

id objc_msgSend_separatorColorForTheme_(void *a1, const char *a2, ...)
{
  return [a1 separatorColorForTheme:];
}

id objc_msgSend_separatorInset(void *a1, const char *a2, ...)
{
  return _[a1 separatorInset];
}

id objc_msgSend_separatorInsets(void *a1, const char *a2, ...)
{
  return _[a1 separatorInsets];
}

id objc_msgSend_serialQueue(void *a1, const char *a2, ...)
{
  return _[a1 serialQueue];
}

id objc_msgSend_serializer(void *a1, const char *a2, ...)
{
  return _[a1 serializer];
}

id objc_msgSend_seriesName(void *a1, const char *a2, ...)
{
  return _[a1 seriesName];
}

id objc_msgSend_serpentId(void *a1, const char *a2, ...)
{
  return _[a1 serpentId];
}

id objc_msgSend_serpentIdFromAdamId_(void *a1, const char *a2, ...)
{
  return [a1 serpentIdFromAdamId];
}

id objc_msgSend_serverAddress(void *a1, const char *a2, ...)
{
  return _[a1 serverAddress];
}

id objc_msgSend_serverClampErrorWithTransaction_retrySeconds_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverClampErrorWithTransaction:retrySeconds:underlyingError:");
}

id objc_msgSend_serverResponse(void *a1, const char *a2, ...)
{
  return _[a1 serverResponse];
}

id objc_msgSend_serverRevisionNewerThanClientKeys(void *a1, const char *a2, ...)
{
  return _[a1 serverRevisionNewerThanClientKeys];
}

id objc_msgSend_sessionCompletionHandler(void *a1, const char *a2, ...)
{
  return _[a1 sessionCompletionHandler];
}

id objc_msgSend_sessionDelegate(void *a1, const char *a2, ...)
{
  return _[a1 sessionDelegate];
}

id objc_msgSend_sessionForBackgroundDownloads(void *a1, const char *a2, ...)
{
  return _[a1 sessionForBackgroundDownloads];
}

id objc_msgSend_sessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sessionIdentifier];
}

id objc_msgSend_sessionIdentifierDidChange(void *a1, const char *a2, ...)
{
  return _[a1 sessionIdentifierDidChange];
}

id objc_msgSend_sessionIdentifierOverride(void *a1, const char *a2, ...)
{
  return _[a1 sessionIdentifierOverride];
}

id objc_msgSend_sessionTaskStateReloaded(void *a1, const char *a2, ...)
{
  return _[a1 sessionTaskStateReloaded];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessLogEvent_(void *a1, const char *a2, ...)
{
  return [a1 setAccessLogEvent:];
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return [a1 setAccessoryType:];
}

id objc_msgSend_setAccessoryView_(void *a1, const char *a2, ...)
{
  return [a1 setAccessoryView:];
}

id objc_msgSend_setAccountAgreedTermsVersion_(void *a1, const char *a2, ...)
{
  return [a1 setAccountAgreedTermsVersion];
}

id objc_msgSend_setAccountIdentifierForLastSync_(void *a1, const char *a2, ...)
{
  return [a1 setAccountIdentifierForLastSync];
}

id objc_msgSend_setAccountOverride_(void *a1, const char *a2, ...)
{
  return [a1 setAccountOverride:];
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return [a1 setAction:];
}

id objc_msgSend_setActionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setActionBlock:];
}

id objc_msgSend_setActionButtons_(void *a1, const char *a2, ...)
{
  return [a1 setActionButtons:];
}

id objc_msgSend_setActionObject_(void *a1, const char *a2, ...)
{
  return [a1 setActionObject:];
}

id objc_msgSend_setActiveAccount_(void *a1, const char *a2, ...)
{
  return [a1 setActiveAccount:];
}

id objc_msgSend_setActiveNotificationName_(void *a1, const char *a2, ...)
{
  return [a1 setActiveNotificationName:];
}

id objc_msgSend_setActivityIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setActivityIndicator:];
}

id objc_msgSend_setAddPodcastsViewController_(void *a1, const char *a2, ...)
{
  return [a1 setAddPodcastsViewController:];
}

id objc_msgSend_setAdded_(void *a1, const char *a2, ...)
{
  return [a1 setAdded:];
}

id objc_msgSend_setAddedDate_(void *a1, const char *a2, ...)
{
  return [a1 setAddedDate:];
}

id objc_msgSend_setAddedPlaylists_(void *a1, const char *a2, ...)
{
  return [a1 setAddedPlaylists:];
}

id objc_msgSend_setAddedSubscriptions_(void *a1, const char *a2, ...)
{
  return [a1 setAddedSubscriptions:];
}

id objc_msgSend_setAdjustContentOffsetForRefreshControlAsNeeded_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustContentOffsetForRefreshControlAsNeeded:];
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontSizeToFitWidth:];
}

id objc_msgSend_setAdjustsImageWhenDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsImageWhenDisabled:];
}

id objc_msgSend_setAdjustsImageWhenHighlighted_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsImageWhenHighlighted:];
}

id objc_msgSend_setAlbum_(void *a1, const char *a2, ...)
{
  return [a1 setAlbum:];
}

id objc_msgSend_setAlertController_(void *a1, const char *a2, ...)
{
  return [a1 setAlertController:];
}

id objc_msgSend_setAllPodcastsSelected_(void *a1, const char *a2, ...)
{
  return [a1 setAllPodcastsSelected:];
}

id objc_msgSend_setAllPropertyChangeObserver_(void *a1, const char *a2, ...)
{
  return [a1 setAllPropertyChangeObserver:];
}

id objc_msgSend_setAllowKeyForValue_(void *a1, const char *a2, ...)
{
  return [a1 setAllowKeyForValue:];
}

id objc_msgSend_setAllowServerDialogs_(void *a1, const char *a2, ...)
{
  return [a1 setAllowServerDialogs:];
}

id objc_msgSend_setAllowedUnits_(void *a1, const char *a2, ...)
{
  return [a1 setAllowedUnits:];
}

id objc_msgSend_setAllowsGroupOpacity_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsGroupOpacity:];
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAlpha:];
}

id objc_msgSend_setAlwaysBounceHorizontal_(void *a1, const char *a2, ...)
{
  return [a1 setAlwaysBounceHorizontal:];
}

id objc_msgSend_setAlwaysBounceVertical_(void *a1, const char *a2, ...)
{
  return [a1 setAlwaysBounceVertical:];
}

id objc_msgSend_setAnalyticsChannel_(void *a1, const char *a2, ...)
{
  return [a1 setAnalyticsChannel:];
}

id objc_msgSend_setAnimationsEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationsEnabled:];
}

id objc_msgSend_setAppController_(void *a1, const char *a2, ...)
{
  return [a1 setAppController:];
}

id objc_msgSend_setApplicationActivities_(void *a1, const char *a2, ...)
{
  return [a1 setApplicationActivities:];
}

id objc_msgSend_setArgument_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 setArgument:atIndex:];
}

id objc_msgSend_setArrayValue_(void *a1, const char *a2, ...)
{
  return [a1 setArrayValue:];
}

id objc_msgSend_setArtist_(void *a1, const char *a2, ...)
{
  return [a1 setArtist:];
}

id objc_msgSend_setArtwork_(void *a1, const char *a2, ...)
{
  return [a1 setArtwork:];
}

id objc_msgSend_setArtworkBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkBackgroundColor:];
}

id objc_msgSend_setArtworkHeight_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkHeight:];
}

id objc_msgSend_setArtworkKey_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkKey:];
}

id objc_msgSend_setArtworkPrimaryColor_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkPrimaryColor:];
}

id objc_msgSend_setArtworkProvider_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkProvider:];
}

id objc_msgSend_setArtworkRequests_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkRequests:];
}

id objc_msgSend_setArtworkTemplateURL_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkTemplateURL:];
}

id objc_msgSend_setArtworkTextPrimaryColor_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkTextPrimaryColor:];
}

id objc_msgSend_setArtworkTextQuaternaryColor_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkTextQuaternaryColor:];
}

id objc_msgSend_setArtworkTextSecondaryColor_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkTextSecondaryColor:];
}

id objc_msgSend_setArtworkTextTertiaryColor_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkTextTertiaryColor:];
}

id objc_msgSend_setArtworkUrl_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkUrl:];
}

id objc_msgSend_setArtworkView_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkView:];
}

id objc_msgSend_setArtworkWidth_(void *a1, const char *a2, ...)
{
  return [a1 setArtworkWidth:];
}

id objc_msgSend_setAssetStatus_(void *a1, const char *a2, ...)
{
  return [a1 setAssetStatus:];
}

id objc_msgSend_setAssetURL_(void *a1, const char *a2, ...)
{
  return [a1 setAssetURL:];
}

id objc_msgSend_setAssetUrl_(void *a1, const char *a2, ...)
{
  return [a1 setAssetUrl];
}

id objc_msgSend_setAttachments_(void *a1, const char *a2, ...)
{
  return [a1 setAttachments:];
}

id objc_msgSend_setAttributeSet_(void *a1, const char *a2, ...)
{
  return [a1 setAttributeSet:];
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedText:];
}

id objc_msgSend_setAttributedTitle_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedTitle:];
}

id objc_msgSend_setAudio_(void *a1, const char *a2, ...)
{
  return [a1 setAudio:];
}

id objc_msgSend_setAuthenticatedDark_(void *a1, const char *a2, ...)
{
  return [a1 setAuthenticatedDark:];
}

id objc_msgSend_setAuthenticationNeededTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 setAuthenticationNeededTimestamp:];
}

id objc_msgSend_setAuthenticationRequest(void *a1, const char *a2, ...)
{
  return _[a1 setAuthenticationRequest];
}

id objc_msgSend_setAuthenticationType_(void *a1, const char *a2, ...)
{
  return [a1 setAuthenticationType:];
}

id objc_msgSend_setAuthor_(void *a1, const char *a2, ...)
{
  return [a1 setAuthor:];
}

id objc_msgSend_setAuthorNames_(void *a1, const char *a2, ...)
{
  return [a1 setAuthorNames:];
}

id objc_msgSend_setAuthors_(void *a1, const char *a2, ...)
{
  return [a1 setAuthors:];
}

id objc_msgSend_setAutoDownloadEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setAutoDownloadEnabled:];
}

id objc_msgSend_setAutoDownloadType_(void *a1, const char *a2, ...)
{
  return [a1 setAutoDownloadType:];
}

id objc_msgSend_setAutoDownloadsSettingsGroup_(void *a1, const char *a2, ...)
{
  return [a1 setAutoDownloadsSettingsGroup:];
}

id objc_msgSend_setAutoResumePlaybackQueueAndStartPlayback_playerController_forceLocal_reason_interactive_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoResumePlaybackQueueAndStartPlayback:playerController:forceLocal:reason:interactive:completion:");
}

id objc_msgSend_setAutocapitalizationType_(void *a1, const char *a2, ...)
{
  return [a1 setAutocapitalizationType:];
}

id objc_msgSend_setAutomaticallySuggestsEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 setAutomaticallySuggestsEpisodes:];
}

id objc_msgSend_setAutorefreshRate_(void *a1, const char *a2, ...)
{
  return [a1 setAutorefreshRate:];
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return [a1 setAutoresizingMask:];
}

id objc_msgSend_setAvailableActions_(void *a1, const char *a2, ...)
{
  return [a1 setAvailableActions:];
}

id objc_msgSend_setBackCatalog_(void *a1, const char *a2, ...)
{
  return [a1 setBackCatalog:];
}

id objc_msgSend_setBackOffUntil_(void *a1, const char *a2, ...)
{
  return [a1 setBackOffUntil:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setBackgroundImage_forToolbarPosition_barMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundImage:forToolbarPosition:barMetrics:];
}

id objc_msgSend_setBackgroundTask_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundTask:];
}

id objc_msgSend_setBackgroundTaskAssertion_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundTaskAssertion:];
}

id objc_msgSend_setBackgroundTaskId_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundTaskId:];
}

id objc_msgSend_setBackgroundTaskIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundTaskIdentifier:];
}

id objc_msgSend_setBackgroundTaskScheduler_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundTaskScheduler:];
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundView:];
}

id objc_msgSend_setBadgeNumber_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setBadgeNumber:withCompletionHandler:];
}

id objc_msgSend_setBadgeValue_(void *a1, const char *a2, ...)
{
  return [a1 setBadgeValue:];
}

id objc_msgSend_setBag_(void *a1, const char *a2, ...)
{
  return [a1 setBag:];
}

id objc_msgSend_setBagContext_(void *a1, const char *a2, ...)
{
  return [a1 setBagContext:];
}

id objc_msgSend_setBagLookupEndTime_(void *a1, const char *a2, ...)
{
  return [a1 setBagLookupEndTime:];
}

id objc_msgSend_setBagLookupStartTime_(void *a1, const char *a2, ...)
{
  return [a1 setBagLookupStartTime:];
}

id objc_msgSend_setBagLookupTask_(void *a1, const char *a2, ...)
{
  return [a1 setBagLookupTask:];
}

id objc_msgSend_setBagSpecifiedPollingInterval_(void *a1, const char *a2, ...)
{
  return [a1 setBagSpecifiedPollingInterval:];
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setBarButtonItem:];
}

id objc_msgSend_setBaseURLForGETAll_(void *a1, const char *a2, ...)
{
  return [a1 setBaseURLForGETAll];
}

id objc_msgSend_setBaseURLForPUTAll_(void *a1, const char *a2, ...)
{
  return [a1 setBaseURLForPUTAll];
}

id objc_msgSend_setBaselineAdjustment_(void *a1, const char *a2, ...)
{
  return [a1 setBaselineAdjustment:];
}

id objc_msgSend_setBlock_(void *a1, const char *a2, ...)
{
  return [a1 setBlock:];
}

id objc_msgSend_setBlurRadius_(void *a1, const char *a2, ...)
{
  return [a1 setBlurRadius:];
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return [a1 setBody:];
}

id objc_msgSend_setBookmarkTime_(void *a1, const char *a2, ...)
{
  return [a1 setBookmarkTime:];
}

id objc_msgSend_setBookmarksSyncVersion_syncType_(void *a1, const char *a2, ...)
{
  return [a1 setBookmarksSyncVersion:syncType:];
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setBool:forKey:];
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return [a1 setBorderColor:];
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return [a1 setBorderWidth:];
}

id objc_msgSend_setBounceStyle_(void *a1, const char *a2, ...)
{
  return [a1 setBounceStyle:];
}

id objc_msgSend_setButtonBlock_(void *a1, const char *a2, ...)
{
  return [a1 setButtonBlock:];
}

id objc_msgSend_setButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setButtonItem:];
}

id objc_msgSend_setButtonItemBlock_(void *a1, const char *a2, ...)
{
  return [a1 setButtonItemBlock:];
}

id objc_msgSend_setButtonLabel_(void *a1, const char *a2, ...)
{
  return [a1 setButtonLabel:];
}

id objc_msgSend_setByAddingObject_(void *a1, const char *a2, ...)
{
  return [a1 setByAddingObject:];
}

id objc_msgSend_setByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 setByAddingObjectsFromArray:];
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return [a1 setByAddingObjectsFromSet:];
}

id objc_msgSend_setByteSize_(void *a1, const char *a2, ...)
{
  return [a1 setByteSize:];
}

id objc_msgSend_setCanDeletePlaylistUUIDBlock_(void *a1, const char *a2, ...)
{
  return [a1 setCanDeletePlaylistUUIDBlock:];
}

id objc_msgSend_setCanRequestStoreSignIn_(void *a1, const char *a2, ...)
{
  return [a1 setCanRequestStoreSignIn:];
}

id objc_msgSend_setCancelType_(void *a1, const char *a2, ...)
{
  return [a1 setCancelType:];
}

id objc_msgSend_setCanceled_(void *a1, const char *a2, ...)
{
  return [a1 setCanceled:];
}

id objc_msgSend_setCancelsTouchesInView_(void *a1, const char *a2, ...)
{
  return [a1 setCancelsTouchesInView:];
}

id objc_msgSend_setCategories_(void *a1, const char *a2, ...)
{
  return [a1 setCategories:];
}

id objc_msgSend_setCategory_(void *a1, const char *a2, ...)
{
  return [a1 setCategory:];
}

id objc_msgSend_setCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCategoryIdentifier:];
}

id objc_msgSend_setCausalityObserver_(void *a1, const char *a2, ...)
{
  return [a1 setCausalityObserver:];
}

id objc_msgSend_setCell_enabled_withDescription_(void *a1, const char *a2, ...)
{
  return [a1 setCell:enabled:withDescription:];
}

id objc_msgSend_setChangeGenerator_(void *a1, const char *a2, ...)
{
  return [a1 setChangeGenerator:];
}

id objc_msgSend_setChangeHandler_(void *a1, const char *a2, ...)
{
  return [a1 setChangeHandler:];
}

id objc_msgSend_setChangeIsUserDriven_(void *a1, const char *a2, ...)
{
  return [a1 setChangeIsUserDriven:];
}

id objc_msgSend_setChannel_(void *a1, const char *a2, ...)
{
  return [a1 setChannel:];
}

id objc_msgSend_setChannelPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setChannelPredicate:];
}

id objc_msgSend_setChannelResults_(void *a1, const char *a2, ...)
{
  return [a1 setChannelResults:];
}

id objc_msgSend_setChannelStoreId_(void *a1, const char *a2, ...)
{
  return [a1 setChannelStoreId];
}

id objc_msgSend_setChapterMetadataMode_(void *a1, const char *a2, ...)
{
  return [a1 setChapterMetadataMode:];
}

id objc_msgSend_setChapters_(void *a1, const char *a2, ...)
{
  return [a1 setChapters:];
}

id objc_msgSend_setCleanedTitle_(void *a1, const char *a2, ...)
{
  return [a1 setCleanedTitle:];
}

id objc_msgSend_setClearButtonMode_(void *a1, const char *a2, ...)
{
  return [a1 setClearButtonMode:];
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setClipsToBounds:];
}

id objc_msgSend_setCloudSyncBugReporter_(void *a1, const char *a2, ...)
{
  return [a1 setCloudSyncBugReporter:];
}

id objc_msgSend_setCloudSyncController_(void *a1, const char *a2, ...)
{
  return [a1 setCloudSyncController:];
}

id objc_msgSend_setCloudSyncIsDirty_(void *a1, const char *a2, ...)
{
  return [a1 setCloudSyncIsDirty:];
}

id objc_msgSend_setCloudSyncVersion_(void *a1, const char *a2, ...)
{
  return [a1 setCloudSyncVersion:];
}

id objc_msgSend_setCollectionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCollectionIdentifier:];
}

id objc_msgSend_setCollectionView_(void *a1, const char *a2, ...)
{
  return [a1 setCollectionView:];
}

id objc_msgSend_setColorTheme_(void *a1, const char *a2, ...)
{
  return [a1 setColorTheme:];
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setCompletion:];
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionBlock:];
}

id objc_msgSend_setCompletionDate_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionDate:];
}

id objc_msgSend_setCompletions_(void *a1, const char *a2, ...)
{
  return [a1 setCompletions:];
}

id objc_msgSend_setCompositeManifest_(void *a1, const char *a2, ...)
{
  return [a1 setCompositeManifest:];
}

id objc_msgSend_setCompositingFilter_(void *a1, const char *a2, ...)
{
  return [a1 setCompositingFilter:];
}

id objc_msgSend_setConditionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setConditionBlock:];
}

id objc_msgSend_setConfig_(void *a1, const char *a2, ...)
{
  return [a1 setConfig:];
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setConfiguration:];
}

id objc_msgSend_setConsecutiveFeedFetchErrors_(void *a1, const char *a2, ...)
{
  return [a1 setConsecutiveFeedFetchErrors:];
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return [a1 setConstant:];
}

id objc_msgSend_setContainer_(void *a1, const char *a2, ...)
{
  return [a1 setContainer:];
}

id objc_msgSend_setContainerIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setContainerIdentifier:];
}

id objc_msgSend_setContainerOrder_(void *a1, const char *a2, ...)
{
  return [a1 setContainerOrder:];
}

id objc_msgSend_setContainerTitle_(void *a1, const char *a2, ...)
{
  return [a1 setContainerTitle:];
}

id objc_msgSend_setContentAttributeSet_(void *a1, const char *a2, ...)
{
  return [a1 setContentAttributeSet:];
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentCompressionResistancePriority:forAxis:];
}

id objc_msgSend_setContentCreationDate_(void *a1, const char *a2, ...)
{
  return [a1 setContentCreationDate:];
}

id objc_msgSend_setContentDescription_(void *a1, const char *a2, ...)
{
  return [a1 setContentDescription:];
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentHuggingPriority:forAxis:];
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return [a1 setContentInset:];
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return [a1 setContentMode:];
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:];
}

id objc_msgSend_setContentOffset_animated_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:animated:];
}

id objc_msgSend_setContentRating_(void *a1, const char *a2, ...)
{
  return [a1 setContentRating:];
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setContentSize:];
}

id objc_msgSend_setContentType_(void *a1, const char *a2, ...)
{
  return [a1 setContentType:];
}

id objc_msgSend_setContentURL_(void *a1, const char *a2, ...)
{
  return [a1 setContentURL:];
}

id objc_msgSend_setContentVerticalAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setContentVerticalAlignment:];
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return [a1 setContext:];
}

id objc_msgSend_setControlHitOutsets_(void *a1, const char *a2, ...)
{
  return [a1 setControlHitOutsets:];
}

id objc_msgSend_setController_(void *a1, const char *a2, ...)
{
  return [a1 setController:];
}

id objc_msgSend_setCornerCurve_(void *a1, const char *a2, ...)
{
  return [a1 setCornerCurve:];
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 setCornerRadius:];
}

id objc_msgSend_setCorrupt_(void *a1, const char *a2, ...)
{
  return [a1 setCorrupt:];
}

id objc_msgSend_setCount_(void *a1, const char *a2, ...)
{
  return [a1 setCount:];
}

id objc_msgSend_setCounterForGeneratingLibraryChangeNotifications_(void *a1, const char *a2, ...)
{
  return [a1 setCounterForGeneratingLibraryChangeNotifications:];
}

id objc_msgSend_setCurrentActivity_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentActivity:];
}

id objc_msgSend_setCurrentDeserializer_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentDeserializer:];
}

id objc_msgSend_setCurrentEpisodeDownloaded_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentEpisodeDownloaded:];
}

id objc_msgSend_setCurrentIndex_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentIndex:];
}

id objc_msgSend_setCurrentItem_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentItem:];
}

id objc_msgSend_setCurrentKVSTransaction_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentKVSTransaction:];
}

id objc_msgSend_setCurrentManifest_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentManifest:];
}

id objc_msgSend_setCurrentPlaybackSessionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentPlaybackSessionIdentifier:];
}

id objc_msgSend_setCurrentPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentPlayerItem:];
}

id objc_msgSend_setCurrentPodcastFeedURL_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentPodcastFeedURL];
}

id objc_msgSend_setCurrentShareMode_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentShareMode:];
}

id objc_msgSend_setCurrentTime_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTime:];
}

id objc_msgSend_setCurrentTransaction_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTransaction:];
}

id objc_msgSend_setCustomHeaderHeight_(void *a1, const char *a2, ...)
{
  return [a1 setCustomHeaderHeight:];
}

id objc_msgSend_setDSID_(void *a1, const char *a2, ...)
{
  return [a1 setDSID:];
}

id objc_msgSend_setDSIDCheckTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 setDSIDCheckTimestamp];
}

id objc_msgSend_setDark_(void *a1, const char *a2, ...)
{
  return [a1 setDark:];
}

id objc_msgSend_setDarkCount_(void *a1, const char *a2, ...)
{
  return [a1 setDarkCount:];
}

id objc_msgSend_setDarkCountLocal_(void *a1, const char *a2, ...)
{
  return [a1 setDarkCountLocal];
}

id objc_msgSend_setDataAccessQueue_(void *a1, const char *a2, ...)
{
  return [a1 setDataAccessQueue:];
}

id objc_msgSend_setDataDetectorTypes_(void *a1, const char *a2, ...)
{
  return [a1 setDataDetectorTypes:];
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setDataSource:];
}

id objc_msgSend_setDataSourceTransactionContext_(void *a1, const char *a2, ...)
{
  return [a1 setDataSourceTransactionContext:];
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return [a1 setDateFormat:];
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDateStyle:];
}

id objc_msgSend_setDateToFireNextTimer_(void *a1, const char *a2, ...)
{
  return [a1 setDateToFireNextTimer:];
}

id objc_msgSend_setDebugReason_(void *a1, const char *a2, ...)
{
  return [a1 setDebugReason:];
}

id objc_msgSend_setDefaultInstance_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultInstance:];
}

id objc_msgSend_setDefaultMetricsController_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultMetricsController:];
}

id objc_msgSend_setDefaultSettings_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultSettings:];
}

id objc_msgSend_setDefaultsNotifier_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultsNotifier:];
}

id objc_msgSend_setDefaultsObserver_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultsObserver:];
}

id objc_msgSend_setDeferredEpisodeUuids_(void *a1, const char *a2, ...)
{
  return [a1 setDeferredEpisodeUuids];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDeleteButton_(void *a1, const char *a2, ...)
{
  return [a1 setDeleteButton:];
}

id objc_msgSend_setDeleteButtonBlock_(void *a1, const char *a2, ...)
{
  return [a1 setDeleteButtonBlock:];
}

id objc_msgSend_setDeletePlayedEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 setDeletePlayedEpisodes:];
}

id objc_msgSend_setDeleteStationAlertController_(void *a1, const char *a2, ...)
{
  return [a1 setDeleteStationAlertController:];
}

id objc_msgSend_setDeletedEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 setDeletedEpisodes:];
}

id objc_msgSend_setDerivedPropertyValue_forKey_forPodcast_(void *a1, const char *a2, ...)
{
  return [a1 setDerivedPropertyValue:forKey:forPodcast:];
}

id objc_msgSend_setDeviceAgreedTermsVersion_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceAgreedTermsVersion:];
}

id objc_msgSend_setDeviceCapacityObserver_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceCapacityObserver:];
}

id objc_msgSend_setDictionary_(void *a1, const char *a2, ...)
{
  return [a1 setDictionary:];
}

id objc_msgSend_setDidBecomeActiveWhileMigrating_(void *a1, const char *a2, ...)
{
  return [a1 setDidBecomeActiveWhileMigrating:];
}

id objc_msgSend_setDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setDisabled:];
}

id objc_msgSend_setDisabledReason_(void *a1, const char *a2, ...)
{
  return [a1 setDisabledReason:];
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayName:];
}

id objc_msgSend_setDisplayStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayStyle:];
}

id objc_msgSend_setDisplayType_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayType:];
}

id objc_msgSend_setDomainIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDomainIdentifier:];
}

id objc_msgSend_setDouble_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setDouble:forKey:];
}

id objc_msgSend_setDownloadBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadBehavior:];
}

id objc_msgSend_setDownloadIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadIdentifier:];
}

id objc_msgSend_setDownloadManager_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadManager:];
}

id objc_msgSend_setDownloaded_(void *a1, const char *a2, ...)
{
  return [a1 setDownloaded:];
}

id objc_msgSend_setDownloadedCount_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadedCount:];
}

id objc_msgSend_setDownloadedDate_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadedDate:];
}

id objc_msgSend_setDownloadedEpisodesCount_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadedEpisodesCount:];
}

id objc_msgSend_setDownloadedQueryObserver_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadedQueryObserver:];
}

id objc_msgSend_setDownloadedUnplayedEpisodesCount_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadedUnplayedEpisodesCount:];
}

id objc_msgSend_setDownloadingCenterIconType_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadingCenterIconType:];
}

id objc_msgSend_setDownloadsSettingsGroup_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadsSettingsGroup:];
}

id objc_msgSend_setDryRun_(void *a1, const char *a2, ...)
{
  return [a1 setDryRun:];
}

id objc_msgSend_setDsidCheckTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 setDsidCheckTimestamp:];
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return [a1 setDuration:];
}

id objc_msgSend_setEarliestBeginDate_(void *a1, const char *a2, ...)
{
  return [a1 setEarliestBeginDate:];
}

id objc_msgSend_setEarliestEpisodeAvailabilityDate_(void *a1, const char *a2, ...)
{
  return [a1 setEarliestEpisodeAvailabilityDate:];
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return [a1 setEditable:];
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return [a1 setEditing:];
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return [a1 setEditing:animated:];
}

id objc_msgSend_setEditingStyleFlags_(void *a1, const char *a2, ...)
{
  return [a1 setEditingStyleFlags:];
}

id objc_msgSend_setElapsedTime_playbackRate_(void *a1, const char *a2, ...)
{
  return [a1 setElapsedTime:playbackRate:];
}

id objc_msgSend_setEligibleForHandoff_(void *a1, const char *a2, ...)
{
  return [a1 setEligibleForHandoff:];
}

id objc_msgSend_setEligibleForPublicIndexing_(void *a1, const char *a2, ...)
{
  return [a1 setEligibleForPublicIndexing:];
}

id objc_msgSend_setEligibleForSearch_(void *a1, const char *a2, ...)
{
  return [a1 setEligibleForSearch:];
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:];
}

id objc_msgSend_setEnabledActionTypes_(void *a1, const char *a2, ...)
{
  return [a1 setEnabledActionTypes:];
}

id objc_msgSend_setEnclosureURL_(void *a1, const char *a2, ...)
{
  return [a1 setEnclosureURL:];
}

id objc_msgSend_setEndedEpisodeUuids_(void *a1, const char *a2, ...)
{
  return [a1 setEndedEpisodeUuids:];
}

id objc_msgSend_setEnqueuedByAnotherUser_(void *a1, const char *a2, ...)
{
  return [a1 setEnqueuedByAnotherUser:];
}

id objc_msgSend_setEntitledDuration_(void *a1, const char *a2, ...)
{
  return [a1 setEntitledDuration:];
}

id objc_msgSend_setEntitledEnclosureURL_(void *a1, const char *a2, ...)
{
  return [a1 setEntitledEnclosureURL:];
}

id objc_msgSend_setEntitledPriceType_(void *a1, const char *a2, ...)
{
  return [a1 setEntitledPriceType:];
}

id objc_msgSend_setEntitledTranscriptIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setEntitledTranscriptIdentifier:];
}

id objc_msgSend_setEntitledTranscriptProvider_(void *a1, const char *a2, ...)
{
  return [a1 setEntitledTranscriptProvider:];
}

id objc_msgSend_setEntitledTranscriptSnippet_(void *a1, const char *a2, ...)
{
  return [a1 setEntitledTranscriptSnippet:];
}

id objc_msgSend_setEntity_(void *a1, const char *a2, ...)
{
  return [a1 setEntity:];
}

id objc_msgSend_setEpisode_(void *a1, const char *a2, ...)
{
  return [a1 setEpisode:];
}

id objc_msgSend_setEpisodeAdamID_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeAdamID:];
}

id objc_msgSend_setEpisodeAdamIds_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeAdamIds:];
}

id objc_msgSend_setEpisodeCount_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeCount:];
}

id objc_msgSend_setEpisodeDisplayGroup_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeDisplayGroup:];
}

id objc_msgSend_setEpisodeGUID_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeGUID];
}

id objc_msgSend_setEpisodeGuid_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeGuid:];
}

id objc_msgSend_setEpisodeIntents_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeIntents:];
}

id objc_msgSend_setEpisodeLevel_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeLevel:];
}

id objc_msgSend_setEpisodeLimit_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeLimit:];
}

id objc_msgSend_setEpisodeName_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeName:];
}

id objc_msgSend_setEpisodeNumber_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeNumber:];
}

id objc_msgSend_setEpisodeObservers_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeObservers:];
}

id objc_msgSend_setEpisodeOrderSettingsGroup_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeOrderSettingsGroup:];
}

id objc_msgSend_setEpisodePredicate_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodePredicate:];
}

id objc_msgSend_setEpisodeResults_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeResults:];
}

id objc_msgSend_setEpisodeSerpentID_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeSerpentID:];
}

id objc_msgSend_setEpisodeShareUrl_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeShareUrl:];
}

id objc_msgSend_setEpisodeSortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeSortDescriptors:];
}

id objc_msgSend_setEpisodeStoreId_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeStoreId:];
}

id objc_msgSend_setEpisodeTitle_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeTitle:];
}

id objc_msgSend_setEpisodeType_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeType:];
}

id objc_msgSend_setEpisodeUUID_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeUUID:];
}

id objc_msgSend_setEpisodeUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeUUIDs:];
}

id objc_msgSend_setEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeUuid:];
}

id objc_msgSend_setEpisodeUuids_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeUuids:];
}

id objc_msgSend_setEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodes:];
}

id objc_msgSend_setEpisodesToKeepSetting_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodesToKeepSetting:];
}

id objc_msgSend_setEpisodesToShow_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodesToShow:];
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return [a1 setError:];
}

id objc_msgSend_setErrorCode_(void *a1, const char *a2, ...)
{
  return [a1 setErrorCode:];
}

id objc_msgSend_setErrorDomain_(void *a1, const char *a2, ...)
{
  return [a1 setErrorDomain:];
}

id objc_msgSend_setEstimatedRowHeight_(void *a1, const char *a2, ...)
{
  return [a1 setEstimatedRowHeight:];
}

id objc_msgSend_setEventType_(void *a1, const char *a2, ...)
{
  return [a1 setEventType:];
}

id objc_msgSend_setExcludeUnentitled_(void *a1, const char *a2, ...)
{
  return [a1 setExcludeUnentitled:];
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return [a1 setExcludedActivityTypes:];
}

id objc_msgSend_setExclusionPaths_(void *a1, const char *a2, ...)
{
  return [a1 setExclusionPaths:];
}

id objc_msgSend_setExclusiveTouch_(void *a1, const char *a2, ...)
{
  return [a1 setExclusiveTouch:];
}

id objc_msgSend_setExistingDownloadedEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 setExistingDownloadedEpisodes];
}

id objc_msgSend_setExpanded_(void *a1, const char *a2, ...)
{
  return [a1 setExpanded:];
}

id objc_msgSend_setExpirationBlock_(void *a1, const char *a2, ...)
{
  return [a1 setExpirationBlock:];
}

id objc_msgSend_setExpirationDate_(void *a1, const char *a2, ...)
{
  return [a1 setExpirationDate:];
}

id objc_msgSend_setExpirationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setExpirationHandler:];
}

id objc_msgSend_setExplicit_(void *a1, const char *a2, ...)
{
  return [a1 setExplicit:];
}

id objc_msgSend_setExplicitSortOrder_(void *a1, const char *a2, ...)
{
  return [a1 setExplicitSortOrder:];
}

id objc_msgSend_setExportableSessionTypes_(void *a1, const char *a2, ...)
{
  return [a1 setExportableSessionTypes:];
}

id objc_msgSend_setExtendedLanguageTag_(void *a1, const char *a2, ...)
{
  return [a1 setExtendedLanguageTag:];
}

id objc_msgSend_setExternalFeedDownloader_(void *a1, const char *a2, ...)
{
  return [a1 setExternalFeedDownloader:];
}

id objc_msgSend_setExternalType_(void *a1, const char *a2, ...)
{
  return [a1 setExternalType:];
}

id objc_msgSend_setFairPlayInvalidationManager_(void *a1, const char *a2, ...)
{
  return [a1 setFairPlayInvalidationManager:];
}

id objc_msgSend_setFairPlayKeyLoader_(void *a1, const char *a2, ...)
{
  return [a1 setFairPlayKeyLoader:];
}

id objc_msgSend_setFairPlayKeySession_(void *a1, const char *a2, ...)
{
  return [a1 setFairPlayKeySession:];
}

id objc_msgSend_setFairPlayMigrationBackgroundTask_(void *a1, const char *a2, ...)
{
  return [a1 setFairPlayMigrationBackgroundTask:];
}

id objc_msgSend_setFatalSyncError_(void *a1, const char *a2, ...)
{
  return [a1 setFatalSyncError:];
}

id objc_msgSend_setFeedChangedDate_(void *a1, const char *a2, ...)
{
  return [a1 setFeedChangedDate:];
}

id objc_msgSend_setFeedDeleted_(void *a1, const char *a2, ...)
{
  return [a1 setFeedDeleted];
}

id objc_msgSend_setFeedProcessingQueue_(void *a1, const char *a2, ...)
{
  return [a1 setFeedProcessingQueue:];
}

id objc_msgSend_setFeedURL_(void *a1, const char *a2, ...)
{
  return [a1 setFeedURL:];
}

id objc_msgSend_setFeedUpdateBeginTime_(void *a1, const char *a2, ...)
{
  return [a1 setFeedUpdateBeginTime:];
}

id objc_msgSend_setFeedUpdateNeedsRetry_(void *a1, const char *a2, ...)
{
  return [a1 setFeedUpdateNeedsRetry:];
}

id objc_msgSend_setFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 setFeedUrl:];
}

id objc_msgSend_setFetchBatchSize_(void *a1, const char *a2, ...)
{
  return [a1 setFetchBatchSize:];
}

id objc_msgSend_setFetchLimit_(void *a1, const char *a2, ...)
{
  return [a1 setFetchLimit:];
}

id objc_msgSend_setFetchOffset_(void *a1, const char *a2, ...)
{
  return [a1 setFetchOffset:];
}

id objc_msgSend_setFetchPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setFetchPredicate:];
}

id objc_msgSend_setFetchRequest_(void *a1, const char *a2, ...)
{
  return [a1 setFetchRequest:];
}

id objc_msgSend_setFilteringDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setFilteringDisabled:];
}

id objc_msgSend_setFinished_(void *a1, const char *a2, ...)
{
  return [a1 setFinished:];
}

id objc_msgSend_setFinishedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setFinishedHandler:];
}

id objc_msgSend_setFirstTimeAvailableAsFree_(void *a1, const char *a2, ...)
{
  return [a1 setFirstTimeAvailableAsFree:];
}

id objc_msgSend_setFirstTimeAvailableAsPaid_(void *a1, const char *a2, ...)
{
  return [a1 setFirstTimeAvailableAsPaid:];
}

id objc_msgSend_setFlags_(void *a1, const char *a2, ...)
{
  return [a1 setFlags:];
}

id objc_msgSend_setFloat_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setFloat:forKey:];
}

id objc_msgSend_setFloating_(void *a1, const char *a2, ...)
{
  return [a1 setFloating:];
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return [a1 setFont:];
}

id objc_msgSend_setFooterCallback_(void *a1, const char *a2, ...)
{
  return [a1 setFooterCallback:];
}

id objc_msgSend_setFooterText_(void *a1, const char *a2, ...)
{
  return [a1 setFooterText:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setFrc_(void *a1, const char *a2, ...)
{
  return [a1 setFrc:];
}

id objc_msgSend_setFreeDuration_(void *a1, const char *a2, ...)
{
  return [a1 setFreeDuration:];
}

id objc_msgSend_setFreeEnclosureURL_(void *a1, const char *a2, ...)
{
  return [a1 setFreeEnclosureURL:];
}

id objc_msgSend_setFreePriceType_(void *a1, const char *a2, ...)
{
  return [a1 setFreePriceType:];
}

id objc_msgSend_setFreeTranscriptIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setFreeTranscriptIdentifier:];
}

id objc_msgSend_setFreeTranscriptProvider_(void *a1, const char *a2, ...)
{
  return [a1 setFreeTranscriptProvider:];
}

id objc_msgSend_setFreeTranscriptSnippet_(void *a1, const char *a2, ...)
{
  return [a1 setFreeTranscriptSnippet:];
}

id objc_msgSend_setGeneratedDate_(void *a1, const char *a2, ...)
{
  return [a1 setGeneratedDate:];
}

id objc_msgSend_setGenerator_(void *a1, const char *a2, ...)
{
  return [a1 setGenerator:];
}

id objc_msgSend_setGlobalCellularEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setGlobalCellularEnabled:];
}

id objc_msgSend_setGroup_(void *a1, const char *a2, ...)
{
  return [a1 setGroup:];
}

id objc_msgSend_setGroupFooter_(void *a1, const char *a2, ...)
{
  return [a1 setGroupFooter:];
}

id objc_msgSend_setGroupIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setGroupIdentifier:];
}

id objc_msgSend_setGroupSettings_(void *a1, const char *a2, ...)
{
  return [a1 setGroupSettings:];
}

id objc_msgSend_setGroupTitle_(void *a1, const char *a2, ...)
{
  return [a1 setGroupTitle:];
}

id objc_msgSend_setGroupingType_(void *a1, const char *a2, ...)
{
  return [a1 setGroupingType:];
}

id objc_msgSend_setGroups_(void *a1, const char *a2, ...)
{
  return [a1 setGroups:];
}

id objc_msgSend_setGuid_(void *a1, const char *a2, ...)
{
  return [a1 setGuid:];
}

id objc_msgSend_setHTTPBody_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPBody:];
}

id objc_msgSend_setHTTPMethod_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPMethod:];
}

id objc_msgSend_setHasBeenPlayed_(void *a1, const char *a2, ...)
{
  return [a1 setHasBeenPlayed:];
}

id objc_msgSend_setHasBeenSynced_(void *a1, const char *a2, ...)
{
  return [a1 setHasBeenSynced:];
}

id objc_msgSend_setHasCheckQueued_(void *a1, const char *a2, ...)
{
  return [a1 setHasCheckQueued:];
}

id objc_msgSend_setHasDeferredIndexAll_(void *a1, const char *a2, ...)
{
  return [a1 setHasDeferredIndexAll:];
}

id objc_msgSend_setHasFRCChanges_(void *a1, const char *a2, ...)
{
  return [a1 setHasFRCChanges:];
}

id objc_msgSend_setHasFetchedInitialAccount_(void *a1, const char *a2, ...)
{
  return [a1 setHasFetchedInitialAccount:];
}

id objc_msgSend_setHasIndexingOperationInProgress_(void *a1, const char *a2, ...)
{
  return [a1 setHasIndexingOperationInProgress:];
}

id objc_msgSend_setHasReportedThisEpisode_(void *a1, const char *a2, ...)
{
  return [a1 setHasReportedThisEpisode:];
}

id objc_msgSend_setHasResults_(void *a1, const char *a2, ...)
{
  return [a1 setHasResults:];
}

id objc_msgSend_setHeaderAction_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderAction:];
}

id objc_msgSend_setHeaderCallback_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderCallback:];
}

id objc_msgSend_setHeaderTitle_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderTitle:];
}

id objc_msgSend_setHeightTracksTextView_(void *a1, const char *a2, ...)
{
  return [a1 setHeightTracksTextView:];
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return [a1 setHidden:];
}

id objc_msgSend_setHidesPlayedEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 setHidesPlayedEpisodes:];
}

id objc_msgSend_setHighlighted_(void *a1, const char *a2, ...)
{
  return [a1 setHighlighted:];
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return [a1 setHost:];
}

id objc_msgSend_setITunesMatchEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setITunesMatchEnabled:];
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setIdentifier:];
}

id objc_msgSend_setIgnoreServerTrustEvaluation_(void *a1, const char *a2, ...)
{
  return [a1 setIgnoreServerTrustEvaluation:];
}

id objc_msgSend_setIgnoreSystemFilterPredicates_(void *a1, const char *a2, ...)
{
  return [a1 setIgnoreSystemFilterPredicates:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return [a1 setImage:forState:];
}

id objc_msgSend_setImageURL_(void *a1, const char *a2, ...)
{
  return [a1 setImageURL:];
}

id objc_msgSend_setImageView_(void *a1, const char *a2, ...)
{
  return [a1 setImageView:];
}

id objc_msgSend_setImportDate_(void *a1, const char *a2, ...)
{
  return [a1 setImportDate:];
}

id objc_msgSend_setImportSource_(void *a1, const char *a2, ...)
{
  return [a1 setImportSource:];
}

id objc_msgSend_setImporting_(void *a1, const char *a2, ...)
{
  return [a1 setImporting:];
}

id objc_msgSend_setIncludedResultKeys_(void *a1, const char *a2, ...)
{
  return [a1 setIncludedResultKeys:];
}

id objc_msgSend_setIncludesAllPodcasts_(void *a1, const char *a2, ...)
{
  return [a1 setIncludesAllPodcasts:];
}

id objc_msgSend_setIndex_forCount_(void *a1, const char *a2, ...)
{
  return [a1 setIndex:forCount:];
}

id objc_msgSend_setIndexAllBatchGenerator_(void *a1, const char *a2, ...)
{
  return [a1 setIndexAllBatchGenerator:];
}

id objc_msgSend_setIndexDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setIndexDelegate:];
}

id objc_msgSend_setIndexPathShifter_(void *a1, const char *a2, ...)
{
  return [a1 setIndexPathShifter:];
}

id objc_msgSend_setInformation_(void *a1, const char *a2, ...)
{
  return [a1 setInformation:];
}

id objc_msgSend_setInitialEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 setInitialEpisodeUuid:];
}

id objc_msgSend_setInitialFeedUpdateCount_(void *a1, const char *a2, ...)
{
  return [a1 setInitialFeedUpdateCount:];
}

id objc_msgSend_setInitialIndex_(void *a1, const char *a2, ...)
{
  return [a1 setInitialIndex:];
}

id objc_msgSend_setInitialIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 setInitialIndexPath:];
}

id objc_msgSend_setInitialPlayheadPosition_(void *a1, const char *a2, ...)
{
  return [a1 setInitialPlayheadPosition:];
}

id objc_msgSend_setInitialSubscribedPodcastsCount_(void *a1, const char *a2, ...)
{
  return [a1 setInitialSubscribedPodcastsCount:];
}

id objc_msgSend_setInitiatedByAnotherUser_(void *a1, const char *a2, ...)
{
  return [a1 setInitiatedByAnotherUser:];
}

id objc_msgSend_setInitiator_(void *a1, const char *a2, ...)
{
  return [a1 setInitiator:];
}

id objc_msgSend_setInstanceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setInstanceIdentifier:];
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setInteger:forKey:];
}

id objc_msgSend_setIntents_(void *a1, const char *a2, ...)
{
  return [a1 setIntents:];
}

id objc_msgSend_setInterLevelSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setInterLevelSpacing:];
}

id objc_msgSend_setInteractive_(void *a1, const char *a2, ...)
{
  return [a1 setInteractive:];
}

id objc_msgSend_setInterest_(void *a1, const char *a2, ...)
{
  return [a1 setInterest:];
}

id objc_msgSend_setInterruptEvent_(void *a1, const char *a2, ...)
{
  return [a1 setInterruptEvent:];
}

id objc_msgSend_setInvalidationManager_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidationManager:];
}

id objc_msgSend_setIsActive_(void *a1, const char *a2, ...)
{
  return [a1 setIsActive:];
}

id objc_msgSend_setIsBookmarked_(void *a1, const char *a2, ...)
{
  return [a1 setIsBookmarked:];
}

id objc_msgSend_setIsBookmarksMigrationRecoveredEpisode_(void *a1, const char *a2, ...)
{
  return [a1 setIsBookmarksMigrationRecoveredEpisode:];
}

id objc_msgSend_setIsBuiltIn_(void *a1, const char *a2, ...)
{
  return [a1 setIsBuiltIn:];
}

id objc_msgSend_setIsComplete_(void *a1, const char *a2, ...)
{
  return [a1 setIsComplete:];
}

id objc_msgSend_setIsDeviceStorageSpaceAvailableForPersistence_(void *a1, const char *a2, ...)
{
  return [a1 setIsDeviceStorageSpaceAvailableForPersistence:];
}

id objc_msgSend_setIsDirty_(void *a1, const char *a2, ...)
{
  return [a1 setIsDirty:];
}

id objc_msgSend_setIsExplicit_(void *a1, const char *a2, ...)
{
  return [a1 setIsExplicit:];
}

id objc_msgSend_setIsFolder_(void *a1, const char *a2, ...)
{
  return [a1 setIsFolder:];
}

id objc_msgSend_setIsFromITunesSync_(void *a1, const char *a2, ...)
{
  return [a1 setIsFromITunesSync:];
}

id objc_msgSend_setIsGenius_(void *a1, const char *a2, ...)
{
  return [a1 setIsGenius:];
}

id objc_msgSend_setIsHidden_(void *a1, const char *a2, ...)
{
  return [a1 setIsHidden:];
}

id objc_msgSend_setIsHiddenOrImplicitlyFollowed_(void *a1, const char *a2, ...)
{
  return [a1 setIsHiddenOrImplicitlyFollowed:];
}

id objc_msgSend_setIsInitialPrepare_(void *a1, const char *a2, ...)
{
  return [a1 setIsInitialPrepare:];
}

id objc_msgSend_setIsItunesPlaylist_(void *a1, const char *a2, ...)
{
  return [a1 setIsItunesPlaylist];
}

id objc_msgSend_setIsItunesSmartPlaylist_(void *a1, const char *a2, ...)
{
  return [a1 setIsItunesSmartPlaylist:];
}

id objc_msgSend_setIsItunesU_(void *a1, const char *a2, ...)
{
  return [a1 setIsItunesU:];
}

id objc_msgSend_setIsLoaded_(void *a1, const char *a2, ...)
{
  return [a1 setIsLoaded:];
}

id objc_msgSend_setIsManifestRestorationOngoing_(void *a1, const char *a2, ...)
{
  return [a1 setIsManifestRestorationOngoing:];
}

id objc_msgSend_setIsMigrating_(void *a1, const char *a2, ...)
{
  return [a1 setIsMigrating:];
}

id objc_msgSend_setIsMissingAsset_(void *a1, const char *a2, ...)
{
  return [a1 setIsMissingAsset:];
}

id objc_msgSend_setIsNew_(void *a1, const char *a2, ...)
{
  return [a1 setIsNew:];
}

id objc_msgSend_setIsNotSubscribeable_(void *a1, const char *a2, ...)
{
  return [a1 setIsNotSubscribeable:];
}

id objc_msgSend_setIsObserving_(void *a1, const char *a2, ...)
{
  return [a1 setIsObserving:];
}

id objc_msgSend_setIsOnTheGo_(void *a1, const char *a2, ...)
{
  return [a1 setIsOnTheGo:];
}

id objc_msgSend_setIsPlayingFullScreenVideo_(void *a1, const char *a2, ...)
{
  return [a1 setIsPlayingFullScreenVideo:];
}

id objc_msgSend_setIsPlaylistSyncDirty_(void *a1, const char *a2, ...)
{
  return [a1 setIsPlaylistSyncDirty:];
}

id objc_msgSend_setIsRunning_(void *a1, const char *a2, ...)
{
  return [a1 setIsRunning:];
}

id objc_msgSend_setIsSerialPodcast_(void *a1, const char *a2, ...)
{
  return [a1 setIsSerialPodcast:];
}

id objc_msgSend_setIsSleepingOnStartDelay_(void *a1, const char *a2, ...)
{
  return [a1 setIsSleepingOnStartDelay:];
}

id objc_msgSend_setIsSmart_(void *a1, const char *a2, ...)
{
  return [a1 setIsSmart:];
}

id objc_msgSend_setIsStopping_(void *a1, const char *a2, ...)
{
  return [a1 setIsStopping:];
}

id objc_msgSend_setIsUngroupedList_(void *a1, const char *a2, ...)
{
  return [a1 setIsUngroupedList:];
}

id objc_msgSend_setIsVideo_(void *a1, const char *a2, ...)
{
  return [a1 setIsVideo:];
}

id objc_msgSend_setItemDescription_(void *a1, const char *a2, ...)
{
  return [a1 setItemDescription:];
}

id objc_msgSend_setItemDescriptionHasHTML_(void *a1, const char *a2, ...)
{
  return [a1 setItemDescriptionHasHTML:];
}

id objc_msgSend_setItemDescriptionWithoutHTML_(void *a1, const char *a2, ...)
{
  return [a1 setItemDescriptionWithoutHTML];
}

id objc_msgSend_setItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setItemIdentifier:];
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return [a1 setItems:];
}

id objc_msgSend_setItunesSubtitle_(void *a1, const char *a2, ...)
{
  return [a1 setItunesSubtitle:];
}

id objc_msgSend_setItunesTitle_(void *a1, const char *a2, ...)
{
  return [a1 setItunesTitle:];
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return [a1 setKey:];
}

id objc_msgSend_setKeyStorage_(void *a1, const char *a2, ...)
{
  return [a1 setKeyStorage:];
}

id objc_msgSend_setKeyValueStoreController_(void *a1, const char *a2, ...)
{
  return [a1 setKeyValueStoreController:];
}

id objc_msgSend_setKeyValueStoreControllerForUrl_(void *a1, const char *a2, ...)
{
  return [a1 setKeyValueStoreControllerForUrl:];
}

id objc_msgSend_setKeyboardType_(void *a1, const char *a2, ...)
{
  return [a1 setKeyboardType:];
}

id objc_msgSend_setKeychainData_(void *a1, const char *a2, ...)
{
  return [a1 setKeychainData:];
}

id objc_msgSend_setKvsController_(void *a1, const char *a2, ...)
{
  return [a1 setKvsController:];
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return [a1 setLabel:];
}

id objc_msgSend_setLargeTitleDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setLargeTitleDisplayMode:];
}

id objc_msgSend_setLastAppUseDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastAppUseDate:];
}

id objc_msgSend_setLastBookmarkedDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastBookmarkedDate:];
}

id objc_msgSend_setLastBookmarksSyncTimestamp_syncType_(void *a1, const char *a2, ...)
{
  return [a1 setLastBookmarksSyncTimestamp:syncType:];
}

id objc_msgSend_setLastCheckTime_(void *a1, const char *a2, ...)
{
  return [a1 setLastCheckTime:];
}

id objc_msgSend_setLastDatePlayed_(void *a1, const char *a2, ...)
{
  return [a1 setLastDatePlayed:];
}

id objc_msgSend_setLastFetchedDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastFetchedDate:];
}

id objc_msgSend_setLastLaunchFromDatabase(void *a1, const char *a2, ...)
{
  return _[a1 setLastLaunchFromDatabase];
}

id objc_msgSend_setLastPlaybackPositionSaveTime_(void *a1, const char *a2, ...)
{
  return [a1 setLastPlaybackPositionSaveTime:];
}

id objc_msgSend_setLastPlaybackSaveTime_(void *a1, const char *a2, ...)
{
  return [a1 setLastPlaybackSaveTime:];
}

id objc_msgSend_setLastPlayedDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastPlayedDate:];
}

id objc_msgSend_setLastRecordedItemURL_(void *a1, const char *a2, ...)
{
  return [a1 setLastRecordedItemURL:];
}

id objc_msgSend_setLastRemovedFromUpNextDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastRemovedFromUpNextDate:];
}

id objc_msgSend_setLastStoreEpisodesInfoCheckDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastStoreEpisodesInfoCheckDate:];
}

id objc_msgSend_setLastStorePodcastInfoCheckDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastStorePodcastInfoCheckDate:];
}

id objc_msgSend_setLastSyncTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 setLastSyncTimestamp:];
}

id objc_msgSend_setLastUnfollowedDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastUnfollowedDate:];
}

id objc_msgSend_setLastUsedDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastUsedDate:];
}

id objc_msgSend_setLastUserMarkedAsPlayedDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastUserMarkedAsPlayedDate:];
}

id objc_msgSend_setLatestEpisodeAvailabilityDate_(void *a1, const char *a2, ...)
{
  return [a1 setLatestEpisodeAvailabilityDate:];
}

id objc_msgSend_setLatestEpisodeAvailabilityTime_(void *a1, const char *a2, ...)
{
  return [a1 setLatestEpisodeAvailabilityTime:];
}

id objc_msgSend_setLatestPersistentHistoryToken_(void *a1, const char *a2, ...)
{
  return [a1 setLatestPersistentHistoryToken:];
}

id objc_msgSend_setLatestUPPSubtask_(void *a1, const char *a2, ...)
{
  return [a1 setLatestUPPSubtask:];
}

id objc_msgSend_setLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setLayoutMargins:];
}

id objc_msgSend_setLayoutMarginsFollowReadableWidth_(void *a1, const char *a2, ...)
{
  return [a1 setLayoutMarginsFollowReadableWidth:];
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setLeftBarButtonItem:];
}

id objc_msgSend_setLeftView_(void *a1, const char *a2, ...)
{
  return [a1 setLeftView:];
}

id objc_msgSend_setLeftViewMode_(void *a1, const char *a2, ...)
{
  return [a1 setLeftViewMode:];
}

id objc_msgSend_setLevelCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 setLevelCornerRadius:];
}

id objc_msgSend_setLevelWidth_(void *a1, const char *a2, ...)
{
  return [a1 setLevelWidth:];
}

id objc_msgSend_setLibraryActionControllerBridge_(void *a1, const char *a2, ...)
{
  return [a1 setLibraryActionControllerBridge:];
}

id objc_msgSend_setLibraryDataProvider_(void *a1, const char *a2, ...)
{
  return [a1 setLibraryDataProvider:];
}

id objc_msgSend_setLibraryDataVersion_(void *a1, const char *a2, ...)
{
  return [a1 setLibraryDataVersion:];
}

id objc_msgSend_setLibraryEpisodesCount_(void *a1, const char *a2, ...)
{
  return [a1 setLibraryEpisodesCount:];
}

id objc_msgSend_setLibraryImageStoreType_(void *a1, const char *a2, ...)
{
  return [a1 setLibraryImageStoreType:];
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return [a1 setLineBreakMode:];
}

id objc_msgSend_setLineFragmentPadding_(void *a1, const char *a2, ...)
{
  return [a1 setLineFragmentPadding:];
}

id objc_msgSend_setListenNowEpisode_(void *a1, const char *a2, ...)
{
  return [a1 setListenNowEpisode:];
}

id objc_msgSend_setListenNowQueryObserver_(void *a1, const char *a2, ...)
{
  return [a1 setListenNowQueryObserver:];
}

id objc_msgSend_setLoadQueue_(void *a1, const char *a2, ...)
{
  return [a1 setLoadQueue:];
}

id objc_msgSend_setLocal_(void *a1, const char *a2, ...)
{
  return [a1 setLocal:];
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return [a1 setLocale:];
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return [a1 setLocation:];
}

id objc_msgSend_setLongTitles_(void *a1, const char *a2, ...)
{
  return [a1 setLongTitles:];
}

id objc_msgSend_setMagicMomentPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 setMagicMomentPlayerItem:];
}

id objc_msgSend_setMainBlock_(void *a1, const char *a2, ...)
{
  return [a1 setMainBlock:];
}

id objc_msgSend_setManifest_(void *a1, const char *a2, ...)
{
  return [a1 setManifest:];
}

id objc_msgSend_setManifest_completion_(void *a1, const char *a2, ...)
{
  return [a1 setManifest:completion:];
}

id objc_msgSend_setManifest_startPlayback_context_completion_(void *a1, const char *a2, ...)
{
  return [a1 setManifest:startPlayback:context:completion:];
}

id objc_msgSend_setManifest_startPlayback_forceLocal_context_completion_(void *a1, const char *a2, ...)
{
  return [a1 setManifest:startPlayback:forceLocal:context:completion:];
}

id objc_msgSend_setManifest_startPlayback_forceLocal_reason_interactive_completion_(void *a1, const char *a2, ...)
{
  return [a1 setManifest:startPlayback:forceLocal:reason:interactive:completion:];
}

id objc_msgSend_setManifest_startPlayback_reason_interactive_completion_(void *a1, const char *a2, ...)
{
  return [a1 setManifest:startPlayback:reason:interactive:completion:];
}

id objc_msgSend_setManifestAsDryRun_reason_completion_(void *a1, const char *a2, ...)
{
  return [a1 setManifestAsDryRun:reason:completion:];
}

id objc_msgSend_setManifestIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setManifestIdentifier:];
}

id objc_msgSend_setManifestIndex_(void *a1, const char *a2, ...)
{
  return [a1 setManifestIndex:];
}

id objc_msgSend_setMarketingPushHandler_(void *a1, const char *a2, ...)
{
  return [a1 setMarketingPushHandler:];
}

id objc_msgSend_setMaskView_(void *a1, const char *a2, ...)
{
  return [a1 setMaskView:];
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return [a1 setMaxConcurrentOperationCount:];
}

id objc_msgSend_setMaxTitleWidth_(void *a1, const char *a2, ...)
{
  return [a1 setMaxTitleWidth:];
}

id objc_msgSend_setMaximumFractionDigits_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumFractionDigits:];
}

id objc_msgSend_setMaximumLevelHeight_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumLevelHeight:];
}

id objc_msgSend_setMaximumNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumNumberOfLines:];
}

id objc_msgSend_setMediaItemDictionary_(void *a1, const char *a2, ...)
{
  return [a1 setMediaItemDictionary:];
}

id objc_msgSend_setMediaItems_(void *a1, const char *a2, ...)
{
  return [a1 setMediaItems:];
}

id objc_msgSend_setMediaLibraryId_(void *a1, const char *a2, ...)
{
  return [a1 setMediaLibraryId:];
}

id objc_msgSend_setMediaRemoteController_(void *a1, const char *a2, ...)
{
  return [a1 setMediaRemoteController:];
}

id objc_msgSend_setMediaType_(void *a1, const char *a2, ...)
{
  return [a1 setMediaType:];
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return [a1 setMessage:];
}

id objc_msgSend_setMessageLabel_(void *a1, const char *a2, ...)
{
  return [a1 setMessageLabel:];
}

id objc_msgSend_setMetadataCommandCenter_(void *a1, const char *a2, ...)
{
  return [a1 setMetadataCommandCenter:];
}

id objc_msgSend_setMetadataFirstSyncEligible_(void *a1, const char *a2, ...)
{
  return [a1 setMetadataFirstSyncEligible:];
}

id objc_msgSend_setMetadataIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setMetadataIdentifier:];
}

id objc_msgSend_setMetadataInfoCenter_(void *a1, const char *a2, ...)
{
  return [a1 setMetadataInfoCenter:];
}

id objc_msgSend_setMetadataItemsFromDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setMetadataItemsFromDataSource:];
}

id objc_msgSend_setMetadataItemsFromKVSStorage_(void *a1, const char *a2, ...)
{
  return [a1 setMetadataItemsFromKVSStorage:];
}

id objc_msgSend_setMetadataItemsToCommitToDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setMetadataItemsToCommitToDataSource:];
}

id objc_msgSend_setMetadataItemsToCommitToKVSStorage_(void *a1, const char *a2, ...)
{
  return [a1 setMetadataItemsToCommitToKVSStorage:];
}

id objc_msgSend_setMetadataTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 setMetadataTimestamp:];
}

id objc_msgSend_setMetricDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setMetricDataSource:];
}

id objc_msgSend_setMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setMetrics:];
}

id objc_msgSend_setMetricsOverlay_(void *a1, const char *a2, ...)
{
  return [a1 setMetricsOverlay:];
}

id objc_msgSend_setMetricsPlayStartPosition_(void *a1, const char *a2, ...)
{
  return [a1 setMetricsPlayStartPosition:];
}

id objc_msgSend_setMetricsPlayStartTime_(void *a1, const char *a2, ...)
{
  return [a1 setMetricsPlayStartTime:];
}

id objc_msgSend_setMigrationPresenter_(void *a1, const char *a2, ...)
{
  return [a1 setMigrationPresenter:];
}

id objc_msgSend_setMigrationToDeltaFeedUpdatesComplete(void *a1, const char *a2, ...)
{
  return _[a1 setMigrationToDeltaFeedUpdatesComplete];
}

id objc_msgSend_setMinimumInteritemSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumInteritemSpacing:];
}

id objc_msgSend_setMinimumLevelHeight_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumLevelHeight:];
}

id objc_msgSend_setMinimumLineSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumLineSpacing:];
}

id objc_msgSend_setMinimumScaleFactor_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumScaleFactor:];
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationStyle:];
}

id objc_msgSend_setModifiedDate_(void *a1, const char *a2, ...)
{
  return [a1 setModifiedDate:];
}

id objc_msgSend_setModifiedDateScore_(void *a1, const char *a2, ...)
{
  return [a1 setModifiedDateScore:];
}

id objc_msgSend_setMultipleSelectionBackgroundView_(void *a1, const char *a2, ...)
{
  return [a1 setMultipleSelectionBackgroundView:];
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return [a1 setName:];
}

id objc_msgSend_setNaturalRect_(void *a1, const char *a2, ...)
{
  return [a1 setNaturalRect:];
}

id objc_msgSend_setNeedsArtworkUpdate_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsArtworkUpdate:];
}

id objc_msgSend_setNeedsFrozenCheck_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsFrozenCheck:];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsSyncing(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsSyncing];
}

id objc_msgSend_setNeedsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdate];
}

id objc_msgSend_setNeedsUpdate_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsUpdate:];
}

id objc_msgSend_setNetworkStatus_(void *a1, const char *a2, ...)
{
  return [a1 setNetworkStatus:];
}

id objc_msgSend_setNetworkUPPEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setNetworkUPPEnabled:];
}

id objc_msgSend_setNetworkingBlocked(void *a1, const char *a2, ...)
{
  return _[a1 setNetworkingBlocked];
}

id objc_msgSend_setNetworkingBlockedUntil_(void *a1, const char *a2, ...)
{
  return [a1 setNetworkingBlockedUntil:];
}

id objc_msgSend_setNextEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 setNextEpisodeUuid:];
}

id objc_msgSend_setNoteObserver_(void *a1, const char *a2, ...)
{
  return [a1 setNoteObserver:];
}

id objc_msgSend_setNotificationCategories_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationCategories:];
}

id objc_msgSend_setNotifications_(void *a1, const char *a2, ...)
{
  return [a1 setNotifications:];
}

id objc_msgSend_setNotificationsSetting_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationsSetting:];
}

id objc_msgSend_setNowPlayingInfo_(void *a1, const char *a2, ...)
{
  return [a1 setNowPlayingInfo:];
}

id objc_msgSend_setNumMetadataItemsFromDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setNumMetadataItemsFromDataSource:];
}

id objc_msgSend_setNumMetadataItemsFromKVSStorage_(void *a1, const char *a2, ...)
{
  return [a1 setNumMetadataItemsFromKVSStorage:];
}

id objc_msgSend_setNumMetadataItemsToCommitToDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setNumMetadataItemsToCommitToDataSource:];
}

id objc_msgSend_setNumMetadataItemsToCommitToKVSStorage_(void *a1, const char *a2, ...)
{
  return [a1 setNumMetadataItemsToCommitToKVSStorage:];
}

id objc_msgSend_setNumberOfColumns_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfColumns:];
}

id objc_msgSend_setNumberOfLevels_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfLevels:];
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfLines:];
}

id objc_msgSend_setNumberOfResults_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfResults:];
}

id objc_msgSend_setNumberStyle_(void *a1, const char *a2, ...)
{
  return [a1 setNumberStyle:];
}

id objc_msgSend_setNumberValue_(void *a1, const char *a2, ...)
{
  return [a1 setNumberValue:];
}

id objc_msgSend_setObject_(void *a1, const char *a2, ...)
{
  return [a1 setObject:];
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:atIndexedSubscript:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setObjectManipulationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setObjectManipulationDelegate:];
}

id objc_msgSend_setObjects_(void *a1, const char *a2, ...)
{
  return [a1 setObjects:];
}

id objc_msgSend_setObserving_(void *a1, const char *a2, ...)
{
  return [a1 setObserving:];
}

id objc_msgSend_setOfferTypes_(void *a1, const char *a2, ...)
{
  return [a1 setOfferTypes:];
}

id objc_msgSend_setOffers_(void *a1, const char *a2, ...)
{
  return [a1 setOffers:];
}

id objc_msgSend_setOn_(void *a1, const char *a2, ...)
{
  return [a1 setOn:];
}

id objc_msgSend_setOn_animated_(void *a1, const char *a2, ...)
{
  return [a1 setOn:animated:];
}

id objc_msgSend_setOnScreenForVolumeDisplay_(void *a1, const char *a2, ...)
{
  return [a1 setOnScreenForVolumeDisplay:];
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setOpaque:];
}

id objc_msgSend_setOpen_(void *a1, const char *a2, ...)
{
  return [a1 setOpen:];
}

id objc_msgSend_setOpen_animated_(void *a1, const char *a2, ...)
{
  return [a1 setOpen:animated:];
}

id objc_msgSend_setOperationType_(void *a1, const char *a2, ...)
{
  return [a1 setOperationType:];
}

id objc_msgSend_setOptionSelectedBlock_(void *a1, const char *a2, ...)
{
  return [a1 setOptionSelectedBlock:];
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return [a1 setOptions:];
}

id objc_msgSend_setOrder_(void *a1, const char *a2, ...)
{
  return [a1 setOrder:];
}

id objc_msgSend_setOriginalPodcastFeedURL_(void *a1, const char *a2, ...)
{
  return [a1 setOriginalPodcastFeedURL];
}

id objc_msgSend_setPageType_(void *a1, const char *a2, ...)
{
  return [a1 setPageType:];
}

id objc_msgSend_setParagraphSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setParagraphSpacing:];
}

id objc_msgSend_setParagraphSpacingBefore_(void *a1, const char *a2, ...)
{
  return [a1 setParagraphSpacingBefore:];
}

id objc_msgSend_setParentMediaLibraryId_(void *a1, const char *a2, ...)
{
  return [a1 setParentMediaLibraryId:];
}

id objc_msgSend_setPartiallyOffTheTop_(void *a1, const char *a2, ...)
{
  return [a1 setPartiallyOffTheTop:];
}

id objc_msgSend_setPassthroughViews_(void *a1, const char *a2, ...)
{
  return [a1 setPassthroughViews:];
}

id objc_msgSend_setPausable_(void *a1, const char *a2, ...)
{
  return [a1 setPausable:];
}

id objc_msgSend_setPaused_(void *a1, const char *a2, ...)
{
  return [a1 setPaused:];
}

id objc_msgSend_setPendingCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setPendingCompletion:];
}

id objc_msgSend_setPendingDeferredUpdate_(void *a1, const char *a2, ...)
{
  return [a1 setPendingDeferredUpdate];
}

id objc_msgSend_setPendingDeserializations_(void *a1, const char *a2, ...)
{
  return [a1 setPendingDeserializations:];
}

id objc_msgSend_setPendingRequest_(void *a1, const char *a2, ...)
{
  return [a1 setPendingRequest:];
}

id objc_msgSend_setPendingUserDefaultArchivedData_(void *a1, const char *a2, ...)
{
  return [a1 setPendingUserDefaultArchivedData:];
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return [a1 setPermittedArrowDirections:];
}

id objc_msgSend_setPersistentID_(void *a1, const char *a2, ...)
{
  return [a1 setPersistentID:];
}

id objc_msgSend_setPersistentId_(void *a1, const char *a2, ...)
{
  return [a1 setPersistentId:];
}

id objc_msgSend_setPersistentIds_(void *a1, const char *a2, ...)
{
  return [a1 setPersistentIds:];
}

id objc_msgSend_setPersonalizeRequests_(void *a1, const char *a2, ...)
{
  return [a1 setPersonalizeRequests:];
}

id objc_msgSend_setPidToUuidMapping_(void *a1, const char *a2, ...)
{
  return [a1 setPidToUuidMapping:];
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholder:];
}

id objc_msgSend_setPlatformSyncPlayheadChangeObserverBlock_(void *a1, const char *a2, ...)
{
  return [a1 setPlatformSyncPlayheadChangeObserverBlock:];
}

id objc_msgSend_setPlayCount_(void *a1, const char *a2, ...)
{
  return [a1 setPlayCount:];
}

id objc_msgSend_setPlayReason_(void *a1, const char *a2, ...)
{
  return [a1 setPlayReason:];
}

id objc_msgSend_setPlayState_manually_forUserActionOnEpisode_saveChanges_(void *a1, const char *a2, ...)
{
  return [a1 setPlayState:manually:forUserActionOnEpisode:saveChanges:];
}

id objc_msgSend_setPlayState_manually_source_(void *a1, const char *a2, ...)
{
  return [a1 setPlayState:manually:source:];
}

id objc_msgSend_setPlayStateManuallySet_(void *a1, const char *a2, ...)
{
  return [a1 setPlayStateManuallySet:];
}

id objc_msgSend_setPlayable_(void *a1, const char *a2, ...)
{
  return [a1 setPlayable:];
}

id objc_msgSend_setPlaybackDestination_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackDestination:];
}

id objc_msgSend_setPlaybackOrder_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackOrder:];
}

id objc_msgSend_setPlaybackPositionController_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackPositionController:];
}

id objc_msgSend_setPlaybackQueue_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackQueue:];
}

id objc_msgSend_setPlaybackQueueCommand(void *a1, const char *a2, ...)
{
  return _[a1 setPlaybackQueueCommand];
}

id objc_msgSend_setPlaybackQueueController_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackQueueController:];
}

id objc_msgSend_setPlaybackQueueDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackQueueDataSource:];
}

id objc_msgSend_setPlaybackQueueForRequest_playerController_siriAssetInfo_enqueuer_savePlayHistory_startPlayback_forceLocal_isMagicMoment_completion_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackQueueForRequest:playerController:siriAssetInfo:enqueuer:savePlayHistory:startPlayback:forceLocal:isMagicMoment:completion:];
}

id objc_msgSend_setPlaybackSessionCommand(void *a1, const char *a2, ...)
{
  return _[a1 setPlaybackSessionCommand];
}

id objc_msgSend_setPlaybackSpeed_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackSpeed:];
}

id objc_msgSend_setPlaybackState_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackState:];
}

id objc_msgSend_setPlayed_manually_forUserActionOnEpisode_saveChanges_(void *a1, const char *a2, ...)
{
  return [a1 setPlayed:manually:forUserActionOnEpisode:saveChanges:];
}

id objc_msgSend_setPlayed_manually_forUserActionOnEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 setPlayed:manually:forUserActionOnEpisodeUuid:];
}

id objc_msgSend_setPlayed_manually_source_(void *a1, const char *a2, ...)
{
  return [a1 setPlayed:manually:source:];
}

id objc_msgSend_setPlayer_(void *a1, const char *a2, ...)
{
  return [a1 setPlayer:];
}

id objc_msgSend_setPlayerController_(void *a1, const char *a2, ...)
{
  return [a1 setPlayerController:];
}

id objc_msgSend_setPlayerItems_(void *a1, const char *a2, ...)
{
  return [a1 setPlayerItems:];
}

id objc_msgSend_setPlayerItemsNeedLoading_(void *a1, const char *a2, ...)
{
  return [a1 setPlayerItemsNeedLoading:];
}

id objc_msgSend_setPlayerManifestRestored_(void *a1, const char *a2, ...)
{
  return [a1 setPlayerManifestRestored:];
}

id objc_msgSend_setPlayerPath_(void *a1, const char *a2, ...)
{
  return [a1 setPlayerPath:];
}

id objc_msgSend_setPlayerRoute_(void *a1, const char *a2, ...)
{
  return [a1 setPlayerRoute:];
}

id objc_msgSend_setPlayhead_(void *a1, const char *a2, ...)
{
  return [a1 setPlayhead:];
}

id objc_msgSend_setPlayingItemProperties_(void *a1, const char *a2, ...)
{
  return [a1 setPlayingItemProperties:];
}

id objc_msgSend_setPlaylist_(void *a1, const char *a2, ...)
{
  return [a1 setPlaylist:];
}

id objc_msgSend_setPlaylistName_(void *a1, const char *a2, ...)
{
  return [a1 setPlaylistName:];
}

id objc_msgSend_setPlaylistSyncDirtyFlag_(void *a1, const char *a2, ...)
{
  return [a1 setPlaylistSyncDirtyFlag:];
}

id objc_msgSend_setPlaylistSyncVersion_(void *a1, const char *a2, ...)
{
  return [a1 setPlaylistSyncVersion:];
}

id objc_msgSend_setPlaylistUuid_(void *a1, const char *a2, ...)
{
  return [a1 setPlaylistUuid:];
}

id objc_msgSend_setPodcast_(void *a1, const char *a2, ...)
{
  return [a1 setPodcast:];
}

id objc_msgSend_setPodcastAdamID_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastAdamID];
}

id objc_msgSend_setPodcastAdamId_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastAdamId:];
}

id objc_msgSend_setPodcastFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastFeedUrl:];
}

id objc_msgSend_setPodcastName_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastName:];
}

id objc_msgSend_setPodcastPID_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastPID];
}

id objc_msgSend_setPodcastPersistentId_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastPersistentId:];
}

id objc_msgSend_setPodcastPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastPredicate:];
}

id objc_msgSend_setPodcastResults_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastResults:];
}

id objc_msgSend_setPodcastSortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastSortDescriptors:];
}

id objc_msgSend_setPodcastStoreId_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastStoreId:];
}

id objc_msgSend_setPodcastTitle_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastTitle:];
}

id objc_msgSend_setPodcastUUID_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastUUID:];
}

id objc_msgSend_setPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastUuid:];
}

id objc_msgSend_setPodcastUuids_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastUuids:];
}

id objc_msgSend_setPodcasts_(void *a1, const char *a2, ...)
{
  return [a1 setPodcasts:];
}

id objc_msgSend_setPodcastsDomainVersion_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastsDomainVersion:];
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setPredicate:];
}

id objc_msgSend_setPredictionMode_forType_(void *a1, const char *a2, ...)
{
  return [a1 setPredictionMode:forType:];
}

id objc_msgSend_setPreferredAction_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredAction:];
}

id objc_msgSend_setPreferredIntervals_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredIntervals:];
}

id objc_msgSend_setPreferredMaxLayoutWidth_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredMaxLayoutWidth:];
}

id objc_msgSend_setPresentationType_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationType:];
}

id objc_msgSend_setPresentingButton_(void *a1, const char *a2, ...)
{
  return [a1 setPresentingButton:];
}

id objc_msgSend_setPreservesSuperviewLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setPreservesSuperviewLayoutMargins:];
}

id objc_msgSend_setPreviousPlayingEpisodeUuid_(void *a1, const char *a2, ...)
{
  return [a1 setPreviousPlayingEpisodeUuid:];
}

id objc_msgSend_setPriceType_(void *a1, const char *a2, ...)
{
  return [a1 setPriceType:];
}

id objc_msgSend_setPriceTypeChangedDate_(void *a1, const char *a2, ...)
{
  return [a1 setPriceTypeChangedDate:];
}

id objc_msgSend_setPrimaryButtonCallback_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryButtonCallback:];
}

id objc_msgSend_setPrimaryCategory_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryCategory:];
}

id objc_msgSend_setPrimitiveValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setPrimitiveValue:forKey:];
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return [a1 setPriority:];
}

id objc_msgSend_setProcessAssertion_(void *a1, const char *a2, ...)
{
  return [a1 setProcessAssertion:];
}

id objc_msgSend_setProcessor_(void *a1, const char *a2, ...)
{
  return [a1 setProcessor:];
}

id objc_msgSend_setProfile_(void *a1, const char *a2, ...)
{
  return [a1 setProfile:];
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return [a1 setProgress:];
}

id objc_msgSend_setProgressType_animated_(void *a1, const char *a2, ...)
{
  return [a1 setProgressType:animated:];
}

id objc_msgSend_setPromptTitle_(void *a1, const char *a2, ...)
{
  return [a1 setPromptTitle:];
}

id objc_msgSend_setPropertiesToFetch_(void *a1, const char *a2, ...)
{
  return [a1 setPropertiesToFetch:];
}

id objc_msgSend_setPropertiesToUpdate_(void *a1, const char *a2, ...)
{
  return [a1 setPropertiesToUpdate:];
}

id objc_msgSend_setPropertyKeys_(void *a1, const char *a2, ...)
{
  return [a1 setPropertyKeys:];
}

id objc_msgSend_setProvider_(void *a1, const char *a2, ...)
{
  return [a1 setProvider:];
}

id objc_msgSend_setPubDate_(void *a1, const char *a2, ...)
{
  return [a1 setPubDate:];
}

id objc_msgSend_setQuery_(void *a1, const char *a2, ...)
{
  return [a1 setQuery:];
}

id objc_msgSend_setQueryItems_(void *a1, const char *a2, ...)
{
  return [a1 setQueryItems:];
}

id objc_msgSend_setQueryObserver_(void *a1, const char *a2, ...)
{
  return [a1 setQueryObserver:];
}

id objc_msgSend_setQueuePriority_(void *a1, const char *a2, ...)
{
  return [a1 setQueuePriority:];
}

id objc_msgSend_setQueueWithPlaybackRequestIdentifier_mrCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setQueueWithPlaybackRequestIdentifier:mrCompletion:];
}

id objc_msgSend_setQueueWithPlaybackRequestIdentifier_startPlayback_assetInfo_requesterSharedUserId_sharedUserIdFromPlayableITunesAccount_mrCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueueWithPlaybackRequestIdentifier:startPlayback:assetInfo:requesterSharedUserId:sharedUserIdFromPlayableITunesAccount:mrCompletion:");
}

id objc_msgSend_setQueuedInvocations_(void *a1, const char *a2, ...)
{
  return [a1 setQueuedInvocations:];
}

id objc_msgSend_setRadioGroup_(void *a1, const char *a2, ...)
{
  return [a1 setRadioGroup:];
}

id objc_msgSend_setReachable_(void *a1, const char *a2, ...)
{
  return [a1 setReachable:];
}

id objc_msgSend_setRecorded_(void *a1, const char *a2, ...)
{
  return [a1 setRecorded:];
}

id objc_msgSend_setRecordedPlayEventsForCurrentItem_(void *a1, const char *a2, ...)
{
  return [a1 setRecordedPlayEventsForCurrentItem:];
}

id objc_msgSend_setRefreshControl_(void *a1, const char *a2, ...)
{
  return [a1 setRefreshControl:];
}

id objc_msgSend_setRefreshing_(void *a1, const char *a2, ...)
{
  return [a1 setRefreshing:];
}

id objc_msgSend_setRelatedUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setRelatedUniqueIdentifier:];
}

id objc_msgSend_setRelationshipKeyPathsForPrefetching_(void *a1, const char *a2, ...)
{
  return [a1 setRelationshipKeyPathsForPrefetching:];
}

id objc_msgSend_setReleaseDate_(void *a1, const char *a2, ...)
{
  return [a1 setReleaseDate:];
}

id objc_msgSend_setRelevantShortcuts_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setRelevantShortcuts:completionHandler:];
}

id objc_msgSend_setRemotePlaybackQueue_completion_(void *a1, const char *a2, ...)
{
  return [a1 setRemotePlaybackQueue:completion:];
}

id objc_msgSend_setRemovePlayedDownloadsSetting_(void *a1, const char *a2, ...)
{
  return [a1 setRemovePlayedDownloadsSetting];
}

id objc_msgSend_setRemovePlayedDownloadsSetting_forPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 setRemovePlayedDownloadsSetting:forPodcastUuid:];
}

id objc_msgSend_setReportMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setReportMetrics:];
}

id objc_msgSend_setReportedItemVersionForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setReportedItemVersionForIdentifier:];
}

id objc_msgSend_setRequest_(void *a1, const char *a2, ...)
{
  return [a1 setRequest:];
}

id objc_msgSend_setRequestParams_(void *a1, const char *a2, ...)
{
  return [a1 setRequestParams:];
}

id objc_msgSend_setResettingToInitialState_(void *a1, const char *a2, ...)
{
  return [a1 setResettingToInitialState:];
}

id objc_msgSend_setResolvingError_(void *a1, const char *a2, ...)
{
  return [a1 setResolvingError:];
}

id objc_msgSend_setResponseDomainVersion_(void *a1, const char *a2, ...)
{
  return [a1 setResponseDomainVersion:];
}

id objc_msgSend_setRestorationCompletions_(void *a1, const char *a2, ...)
{
  return [a1 setRestorationCompletions:];
}

id objc_msgSend_setRestorationIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setRestorationIdentifier];
}

id objc_msgSend_setRestorationQueue_(void *a1, const char *a2, ...)
{
  return [a1 setRestorationQueue:];
}

id objc_msgSend_setResult_(void *a1, const char *a2, ...)
{
  return [a1 setResult:];
}

id objc_msgSend_setResultType_(void *a1, const char *a2, ...)
{
  return [a1 setResultType:];
}

id objc_msgSend_setResyncWhenDone_(void *a1, const char *a2, ...)
{
  return [a1 setResyncWhenDone:];
}

id objc_msgSend_setReturnKeyType_(void *a1, const char *a2, ...)
{
  return [a1 setReturnKeyType:];
}

id objc_msgSend_setReturnsDistinctResults_(void *a1, const char *a2, ...)
{
  return [a1 setReturnsDistinctResults:];
}

id objc_msgSend_setReturnsObjectsAsFaults_(void *a1, const char *a2, ...)
{
  return [a1 setReturnsObjectsAsFaults:];
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItem:];
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 setRootViewController:];
}

id objc_msgSend_setRoute_(void *a1, const char *a2, ...)
{
  return [a1 setRoute:];
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return [a1 setRowHeight:];
}

id objc_msgSend_setRunning_(void *a1, const char *a2, ...)
{
  return [a1 setRunning:];
}

id objc_msgSend_setSaveDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setSaveDelegate:];
}

id objc_msgSend_setSaved_(void *a1, const char *a2, ...)
{
  return [a1 setSaved:];
}

id objc_msgSend_setSavedEpisodesCount_(void *a1, const char *a2, ...)
{
  return [a1 setSavedEpisodesCount:];
}

id objc_msgSend_setSavedUnplayedEpisodesCount_(void *a1, const char *a2, ...)
{
  return [a1 setSavedUnplayedEpisodesCount];
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return [a1 setScheme:];
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setScrollEnabled:];
}

id objc_msgSend_setScrollsToTop_(void *a1, const char *a2, ...)
{
  return [a1 setScrollsToTop:];
}

id objc_msgSend_setSeasonNumber_(void *a1, const char *a2, ...)
{
  return [a1 setSeasonNumber:];
}

id objc_msgSend_setSectionInset_(void *a1, const char *a2, ...)
{
  return [a1 setSectionInset:];
}

id objc_msgSend_setSectionType_(void *a1, const char *a2, ...)
{
  return [a1 setSectionType:];
}

id objc_msgSend_setSecureDownloadRenewalManager_(void *a1, const char *a2, ...)
{
  return [a1 setSecureDownloadRenewalManager:];
}

id objc_msgSend_setSecureKeyLoader_(void *a1, const char *a2, ...)
{
  return [a1 setSecureKeyLoader:];
}

id objc_msgSend_setSelectedBackgroundView_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedBackgroundView:];
}

id objc_msgSend_setSelectedUuid_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedUuid];
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionStyle:];
}

id objc_msgSend_setSelectionTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionTintColor:];
}

id objc_msgSend_setSelector_(void *a1, const char *a2, ...)
{
  return [a1 setSelector:];
}

id objc_msgSend_setSentNotification_(void *a1, const char *a2, ...)
{
  return [a1 setSentNotification:];
}

id objc_msgSend_setSeparator_(void *a1, const char *a2, ...)
{
  return [a1 setSeparator:];
}

id objc_msgSend_setSeparatorInset_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorInset:];
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorStyle:];
}

id objc_msgSend_setSerialQueue_(void *a1, const char *a2, ...)
{
  return [a1 setSerialQueue:];
}

id objc_msgSend_setSerpentIdMigrationComplete_(void *a1, const char *a2, ...)
{
  return [a1 setSerpentIdMigrationComplete:];
}

id objc_msgSend_setServerRevisionNewerThanClient_(void *a1, const char *a2, ...)
{
  return [a1 setServerRevisionNewerThanClient:];
}

id objc_msgSend_setSessionCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setSessionCompletionHandler:];
}

id objc_msgSend_setSessionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setSessionDelegate:];
}

id objc_msgSend_setSessionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setSessionIdentifier:];
}

id objc_msgSend_setSessionTaskStateReloaded_(void *a1, const char *a2, ...)
{
  return [a1 setSessionTaskStateReloaded];
}

id objc_msgSend_setSettingsController_(void *a1, const char *a2, ...)
{
  return [a1 setSettingsController:];
}

id objc_msgSend_setSettingsHandler_(void *a1, const char *a2, ...)
{
  return [a1 setSettingsHandler:];
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return [a1 setShadowColor:];
}

id objc_msgSend_setShadowImage_forToolbarPosition_(void *a1, const char *a2, ...)
{
  return [a1 setShadowImage:forToolbarPosition:];
}

id objc_msgSend_setShadowOffset_(void *a1, const char *a2, ...)
{
  return [a1 setShadowOffset:];
}

id objc_msgSend_setShadowOpacity_(void *a1, const char *a2, ...)
{
  return [a1 setShadowOpacity:];
}

id objc_msgSend_setShadowRadius_(void *a1, const char *a2, ...)
{
  return [a1 setShadowRadius:];
}

id objc_msgSend_setShared_(void *a1, const char *a2, ...)
{
  return [a1 setShared:];
}

id objc_msgSend_setSharingStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSharingStyle:];
}

id objc_msgSend_setShiftedIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 setShiftedIndexPath];
}

id objc_msgSend_setShortTitles_(void *a1, const char *a2, ...)
{
  return [a1 setShortTitles:];
}

id objc_msgSend_setShortcutItems_(void *a1, const char *a2, ...)
{
  return [a1 setShortcutItems:];
}

id objc_msgSend_setShouldAuthenticate_(void *a1, const char *a2, ...)
{
  return [a1 setShouldAuthenticate:];
}

id objc_msgSend_setShouldFindSomethingToPlay_(void *a1, const char *a2, ...)
{
  return [a1 setShouldFindSomethingToPlay];
}

id objc_msgSend_setShouldIgnoreDNU_(void *a1, const char *a2, ...)
{
  return [a1 setShouldIgnoreDNU:];
}

id objc_msgSend_setShouldShowNowPlaying_(void *a1, const char *a2, ...)
{
  return [a1 setShouldShowNowPlaying:];
}

id objc_msgSend_setShouldSuppressUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 setShouldSuppressUserInfo:];
}

id objc_msgSend_setShowListShowsAllShows_(void *a1, const char *a2, ...)
{
  return [a1 setShowListShowsAllShows:];
}

id objc_msgSend_setShowPlacardForRemovePlayedEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 setShowPlacardForRemovePlayedEpisodes:];
}

id objc_msgSend_setShowPlacardForSavedEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 setShowPlacardForSavedEpisodes:];
}

id objc_msgSend_setShowPlayedEpisodes_(void *a1, const char *a2, ...)
{
  return [a1 setShowPlayedEpisodes:];
}

id objc_msgSend_setShowSettingsGroup_(void *a1, const char *a2, ...)
{
  return [a1 setShowSettingsGroup:];
}

id objc_msgSend_setShowSpecificUpsellCopy_(void *a1, const char *a2, ...)
{
  return [a1 setShowSpecificUpsellCopy:];
}

id objc_msgSend_setShowTypeInFeed_(void *a1, const char *a2, ...)
{
  return [a1 setShowTypeInFeed:];
}

id objc_msgSend_setShowTypeRadioGroup_(void *a1, const char *a2, ...)
{
  return [a1 setShowTypeRadioGroup:];
}

id objc_msgSend_setShowTypeSetting_(void *a1, const char *a2, ...)
{
  return [a1 setShowTypeSetting:];
}

id objc_msgSend_setShowsArtwork_(void *a1, const char *a2, ...)
{
  return [a1 setShowsArtwork:];
}

id objc_msgSend_setShowsDescriptionButton_(void *a1, const char *a2, ...)
{
  return [a1 setShowsDescriptionButton:];
}

id objc_msgSend_setShowsExplicitIcon_(void *a1, const char *a2, ...)
{
  return [a1 setShowsExplicitIcon:];
}

id objc_msgSend_setShowsFooterTextView_(void *a1, const char *a2, ...)
{
  return [a1 setShowsFooterTextView:];
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsHorizontalScrollIndicator:];
}

id objc_msgSend_setShowsMoreButton_(void *a1, const char *a2, ...)
{
  return [a1 setShowsMoreButton:];
}

id objc_msgSend_setShowsSeparator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsSeparator:];
}

id objc_msgSend_setShowsSeperator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsSeperator:];
}

id objc_msgSend_setShowsTouchWhenHighlighted_(void *a1, const char *a2, ...)
{
  return [a1 setShowsTouchWhenHighlighted:];
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsVerticalScrollIndicator:];
}

id objc_msgSend_setSideView_(void *a1, const char *a2, ...)
{
  return [a1 setSideView:];
}

id objc_msgSend_setSinceDomainVersion_(void *a1, const char *a2, ...)
{
  return [a1 setSinceDomainVersion:];
}

id objc_msgSend_setSingleGroup_(void *a1, const char *a2, ...)
{
  return [a1 setSingleGroup:];
}

id objc_msgSend_setSiriAnalyticsController_(void *a1, const char *a2, ...)
{
  return [a1 setSiriAnalyticsController:];
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return [a1 setSize:];
}

id objc_msgSend_setSortAscending_(void *a1, const char *a2, ...)
{
  return [a1 setSortAscending:];
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 setSortDescriptors:];
}

id objc_msgSend_setSortOrder_(void *a1, const char *a2, ...)
{
  return [a1 setSortOrder:];
}

id objc_msgSend_setSource_(void *a1, const char *a2, ...)
{
  return [a1 setSource:];
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return [a1 setSourceRect:];
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return [a1 setSourceView:];
}

id objc_msgSend_setSpecialization_(void *a1, const char *a2, ...)
{
  return [a1 setSpecialization:];
}

id objc_msgSend_setSpinner_(void *a1, const char *a2, ...)
{
  return [a1 setSpinner:];
}

id objc_msgSend_setStartDelay_(void *a1, const char *a2, ...)
{
  return [a1 setStartDelay:];
}

id objc_msgSend_setStartPlayback_(void *a1, const char *a2, ...)
{
  return [a1 setStartPlayback:];
}

id objc_msgSend_setStartedEpisodeUuids_(void *a1, const char *a2, ...)
{
  return [a1 setStartedEpisodeUuids:];
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return [a1 setState:];
}

id objc_msgSend_setStationIntents_(void *a1, const char *a2, ...)
{
  return [a1 setStationIntents:];
}

id objc_msgSend_setStopReason_(void *a1, const char *a2, ...)
{
  return [a1 setStopReason:];
}

id objc_msgSend_setStorageProvider_(void *a1, const char *a2, ...)
{
  return [a1 setStorageProvider:];
}

id objc_msgSend_setStoreBothFreeAndPaidUrlsPreviousBootup(void *a1, const char *a2, ...)
{
  return _[a1 setStoreBothFreeAndPaidUrlsPreviousBootup];
}

id objc_msgSend_setStoreCleanURL_(void *a1, const char *a2, ...)
{
  return [a1 setStoreCleanURL];
}

id objc_msgSend_setStoreCollectionId_(void *a1, const char *a2, ...)
{
  return [a1 setStoreCollectionId:];
}

id objc_msgSend_setStoreFrontIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setStoreFrontIdentifier:];
}

id objc_msgSend_setStoreIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setStoreIdentifier:];
}

id objc_msgSend_setStorePodcastDownloader_(void *a1, const char *a2, ...)
{
  return [a1 setStorePodcastDownloader:];
}

id objc_msgSend_setStoreReportingParams_(void *a1, const char *a2, ...)
{
  return [a1 setStoreReportingParams:];
}

id objc_msgSend_setStoreResponseDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setStoreResponseDelegate:];
}

id objc_msgSend_setStoreShortURL_(void *a1, const char *a2, ...)
{
  return [a1 setStoreShortURL:];
}

id objc_msgSend_setStoreTrackId_(void *a1, const char *a2, ...)
{
  return [a1 setStoreTrackId:];
}

id objc_msgSend_setStreamCacheObserverToken_(void *a1, const char *a2, ...)
{
  return [a1 setStreamCacheObserverToken:];
}

id objc_msgSend_setStreamUrl_(void *a1, const char *a2, ...)
{
  return [a1 setStreamUrl:];
}

id objc_msgSend_setStreamable_(void *a1, const char *a2, ...)
{
  return [a1 setStreamable:];
}

id objc_msgSend_setStrongDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setStrongDelegate:];
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return [a1 setStyle:];
}

id objc_msgSend_setSubscribedSetting_(void *a1, const char *a2, ...)
{
  return [a1 setSubscribedSetting:];
}

id objc_msgSend_setSubscriptionState_(void *a1, const char *a2, ...)
{
  return [a1 setSubscriptionState:];
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return [a1 setSubtitle:];
}

id objc_msgSend_setSuccess_(void *a1, const char *a2, ...)
{
  return [a1 setSuccess:];
}

id objc_msgSend_setSuggestedEpisodeUuids_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestedEpisodeUuids:];
}

id objc_msgSend_setSuggestedMediaIntents_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestedMediaIntents:];
}

id objc_msgSend_setSuggestedStationUuids_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestedStationUuids:];
}

id objc_msgSend_setSummaryArgument_(void *a1, const char *a2, ...)
{
  return [a1 setSummaryArgument:];
}

id objc_msgSend_setSummaryArgumentCount_(void *a1, const char *a2, ...)
{
  return [a1 setSummaryArgumentCount:];
}

id objc_msgSend_setSupportedPlaybackRates_(void *a1, const char *a2, ...)
{
  return [a1 setSupportedPlaybackRates:];
}

id objc_msgSend_setSupportedSessionTypes_(void *a1, const char *a2, ...)
{
  return [a1 setSupportedSessionTypes:];
}

id objc_msgSend_setSupportsContinuationStreams_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsContinuationStreams:];
}

id objc_msgSend_setSupportsLocalMedia_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsLocalMedia:];
}

id objc_msgSend_setSupportsMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsMetrics:];
}

id objc_msgSend_setSupportsPlayback_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsPlayback:];
}

id objc_msgSend_setSuppressAutoDownload_(void *a1, const char *a2, ...)
{
  return [a1 setSuppressAutoDownload:];
}

id objc_msgSend_setSuppressMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setSuppressMetrics:];
}

id objc_msgSend_setSwipeEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setSwipeEnabled:];
}

id objc_msgSend_setSwipeGesture_(void *a1, const char *a2, ...)
{
  return [a1 setSwipeGesture:];
}

id objc_msgSend_setSwipeState_(void *a1, const char *a2, ...)
{
  return [a1 setSwipeState:];
}

id objc_msgSend_setSwipeToDeleteButtonColor_(void *a1, const char *a2, ...)
{
  return [a1 setSwipeToDeleteButtonColor:];
}

id objc_msgSend_setSwipedCellIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 setSwipedCellIndexPath:];
}

id objc_msgSend_setSyncDirtyFlag_(void *a1, const char *a2, ...)
{
  return [a1 setSyncDirtyFlag:];
}

id objc_msgSend_setSyncHandler_(void *a1, const char *a2, ...)
{
  return [a1 setSyncHandler:];
}

id objc_msgSend_setSyncStartTime_(void *a1, const char *a2, ...)
{
  return [a1 setSyncStartTime:];
}

id objc_msgSend_setSyncTaskEndTime_(void *a1, const char *a2, ...)
{
  return [a1 setSyncTaskEndTime:];
}

id objc_msgSend_setSyncTaskStartTime_(void *a1, const char *a2, ...)
{
  return [a1 setSyncTaskStartTime:];
}

id objc_msgSend_setSyncType_(void *a1, const char *a2, ...)
{
  return [a1 setSyncType:];
}

id objc_msgSend_setSyncVersion_(void *a1, const char *a2, ...)
{
  return [a1 setSyncVersion:];
}

id objc_msgSend_setSyncVersionFlags_(void *a1, const char *a2, ...)
{
  return [a1 setSyncVersionFlags:];
}

id objc_msgSend_setSynchronizeTask_(void *a1, const char *a2, ...)
{
  return [a1 setSynchronizeTask:];
}

id objc_msgSend_setTabBarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setTabBarHidden:animated:];
}

id objc_msgSend_setTableFooterView_(void *a1, const char *a2, ...)
{
  return [a1 setTableFooterView:];
}

id objc_msgSend_setTableHeaderView_(void *a1, const char *a2, ...)
{
  return [a1 setTableHeaderView:];
}

id objc_msgSend_setTag_(void *a1, const char *a2, ...)
{
  return [a1 setTag:];
}

id objc_msgSend_setTapGesture_(void *a1, const char *a2, ...)
{
  return [a1 setTapGesture:];
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return [a1 setTarget:];
}

id objc_msgSend_setTask_(void *a1, const char *a2, ...)
{
  return [a1 setTask:];
}

id objc_msgSend_setTaskAssertion_(void *a1, const char *a2, ...)
{
  return [a1 setTaskAssertion:];
}

id objc_msgSend_setTaskCompletedWithSuccess_(void *a1, const char *a2, ...)
{
  return [a1 setTaskCompletedWithSuccess:];
}

id objc_msgSend_setTaskDebugDescription_(void *a1, const char *a2, ...)
{
  return [a1 setTaskDebugDescription:];
}

id objc_msgSend_setTaskInvalidationDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setTaskInvalidationDisabled:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setTextAlignment:];
}

id objc_msgSend_setTextAttributes_(void *a1, const char *a2, ...)
{
  return [a1 setTextAttributes:];
}

id objc_msgSend_setTextChanged_(void *a1, const char *a2, ...)
{
  return [a1 setTextChanged:];
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setTextColor:];
}

id objc_msgSend_setTextContainerInset_(void *a1, const char *a2, ...)
{
  return [a1 setTextContainerInset:];
}

id objc_msgSend_setTextView_(void *a1, const char *a2, ...)
{
  return [a1 setTextView:];
}

id objc_msgSend_setThreadIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setThreadIdentifier:];
}

id objc_msgSend_setThumbnailURL_(void *a1, const char *a2, ...)
{
  return [a1 setThumbnailURL:];
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return [a1 setTimeStyle:];
}

id objc_msgSend_setTimeoutIntervalForRequest_(void *a1, const char *a2, ...)
{
  return [a1 setTimeoutIntervalForRequest:];
}

id objc_msgSend_setTimeoutIntervalForResource_(void *a1, const char *a2, ...)
{
  return [a1 setTimeoutIntervalForResource:];
}

id objc_msgSend_setTimer_(void *a1, const char *a2, ...)
{
  return [a1 setTimer:];
}

id objc_msgSend_setTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 setTimestamp:];
}

id objc_msgSend_setTimestampForTransaction_(void *a1, const char *a2, ...)
{
  return [a1 setTimestampForTransaction:];
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setTintColor:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:forState:];
}

id objc_msgSend_setTitleBlock_(void *a1, const char *a2, ...)
{
  return [a1 setTitleBlock:];
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitleColor:forState:];
}

id objc_msgSend_setTitleHyphenationFactor_(void *a1, const char *a2, ...)
{
  return [a1 setTitleHyphenationFactor:];
}

id objc_msgSend_setToggle_(void *a1, const char *a2, ...)
{
  return [a1 setToggle:];
}

id objc_msgSend_setToggleChanged_(void *a1, const char *a2, ...)
{
  return [a1 setToggleChanged:];
}

id objc_msgSend_setTouchInsets_(void *a1, const char *a2, ...)
{
  return [a1 setTouchInsets:];
}

id objc_msgSend_setTrackNum_(void *a1, const char *a2, ...)
{
  return [a1 setTrackNum:];
}

id objc_msgSend_setTracksDefault_(void *a1, const char *a2, ...)
{
  return [a1 setTracksDefault:];
}

id objc_msgSend_setTransaction_(void *a1, const char *a2, ...)
{
  return [a1 setTransaction:];
}

id objc_msgSend_setTransactionAuthor_(void *a1, const char *a2, ...)
{
  return [a1 setTransactionAuthor:];
}

id objc_msgSend_setTransactionClamps_(void *a1, const char *a2, ...)
{
  return [a1 setTransactionClamps:];
}

id objc_msgSend_setTransactionDescription_(void *a1, const char *a2, ...)
{
  return [a1 setTransactionDescription:];
}

id objc_msgSend_setTransactionProcessor_(void *a1, const char *a2, ...)
{
  return [a1 setTransactionProcessor:];
}

id objc_msgSend_setTranscriptIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setTranscriptIdentifier:];
}

id objc_msgSend_setTransitioningDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setTransitioningDelegate:];
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTranslatesAutoresizingMaskIntoConstraints:];
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return [a1 setType:];
}

id objc_msgSend_setUIApplicationState_(void *a1, const char *a2, ...)
{
  return [a1 setUIApplicationState:];
}

id objc_msgSend_setUPPDomainVersion_(void *a1, const char *a2, ...)
{
  return [a1 setUPPDomainVersion:];
}

id objc_msgSend_setUPPStore_(void *a1, const char *a2, ...)
{
  return [a1 setUPPStore:];
}

id objc_msgSend_setURL_(void *a1, const char *a2, ...)
{
  return [a1 setURL:];
}

id objc_msgSend_setUberArtworkTextPrimaryColor_(void *a1, const char *a2, ...)
{
  return [a1 setUberArtworkTextPrimaryColor:];
}

id objc_msgSend_setUberArtworkTextQuaternaryColor_(void *a1, const char *a2, ...)
{
  return [a1 setUberArtworkTextQuaternaryColor:];
}

id objc_msgSend_setUberArtworkTextSecondaryColor_(void *a1, const char *a2, ...)
{
  return [a1 setUberArtworkTextSecondaryColor:];
}

id objc_msgSend_setUberArtworkTextTertiaryColor_(void *a1, const char *a2, ...)
{
  return [a1 setUberArtworkTextTertiaryColor:];
}

id objc_msgSend_setUberBackgroundImageURL_(void *a1, const char *a2, ...)
{
  return [a1 setUberBackgroundImageURL:];
}

id objc_msgSend_setUberBackgroundJoeColor_(void *a1, const char *a2, ...)
{
  return [a1 setUberBackgroundJoeColor:];
}

id objc_msgSend_setUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setUniqueIdentifier:];
}

id objc_msgSend_setUnplayedCount_(void *a1, const char *a2, ...)
{
  return [a1 setUnplayedCount:];
}

id objc_msgSend_setUnplayedTab_(void *a1, const char *a2, ...)
{
  return [a1 setUnplayedTab:];
}

id objc_msgSend_setUpNextController_(void *a1, const char *a2, ...)
{
  return [a1 setUpNextController:];
}

id objc_msgSend_setUpNextManifest_(void *a1, const char *a2, ...)
{
  return [a1 setUpNextManifest:];
}

id objc_msgSend_setUpNextQueueIntent_(void *a1, const char *a2, ...)
{
  return [a1 setUpNextQueueIntent];
}

id objc_msgSend_setUpNextResultsController_(void *a1, const char *a2, ...)
{
  return [a1 setUpNextResultsController:];
}

id objc_msgSend_setUpNotificationStatusIsAuthorizedUpdates(void *a1, const char *a2, ...)
{
  return _[a1 setUpNotificationStatusIsAuthorizedUpdates];
}

id objc_msgSend_setUpdateAvg_(void *a1, const char *a2, ...)
{
  return [a1 setUpdateAvg:];
}

id objc_msgSend_setUpdateCount_(void *a1, const char *a2, ...)
{
  return [a1 setUpdateCount:];
}

id objc_msgSend_setUpdateInterval_(void *a1, const char *a2, ...)
{
  return [a1 setUpdateInterval:];
}

id objc_msgSend_setUpdateOperationQueue_(void *a1, const char *a2, ...)
{
  return [a1 setUpdateOperationQueue:];
}

id objc_msgSend_setUpdatePodcastSizeEstimationWorkController_(void *a1, const char *a2, ...)
{
  return [a1 setUpdatePodcastSizeEstimationWorkController:];
}

id objc_msgSend_setUpdateStdDev_(void *a1, const char *a2, ...)
{
  return [a1 setUpdateStdDev:];
}

id objc_msgSend_setUpdatedDate_(void *a1, const char *a2, ...)
{
  return [a1 setUpdatedDate:];
}

id objc_msgSend_setUpdatedFeedURL_(void *a1, const char *a2, ...)
{
  return [a1 setUpdatedFeedURL:];
}

id objc_msgSend_setUppDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setUppDataSource:];
}

id objc_msgSend_setUppLastSyncTime_(void *a1, const char *a2, ...)
{
  return [a1 setUppLastSyncTime:];
}

id objc_msgSend_setUppSyncDirtyFlag_(void *a1, const char *a2, ...)
{
  return [a1 setUppSyncDirtyFlag:];
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return [a1 setUrl:];
}

id objc_msgSend_setUrlSessionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setUrlSessionDelegate:];
}

id objc_msgSend_setUserAcceptedSyncTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 setUserAcceptedSyncTimestamp];
}

id objc_msgSend_setUserAcceptedSyncTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 setUserAcceptedSyncTimestamp:];
}

id objc_msgSend_setUserCancelledSignIn(void *a1, const char *a2, ...)
{
  return _[a1 setUserCancelledSignIn];
}

id objc_msgSend_setUserCancelledSignInBackOffUntil_(void *a1, const char *a2, ...)
{
  return [a1 setUserCancelledSignInBackOffUntil];
}

id objc_msgSend_setUserDriven_(void *a1, const char *a2, ...)
{
  return [a1 setUserDriven:];
}

id objc_msgSend_setUserEpisode_(void *a1, const char *a2, ...)
{
  return [a1 setUserEpisode:];
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 setUserInfo:];
}

id objc_msgSend_setUserInfoValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setUserInfoValue:forKey:];
}

id objc_msgSend_setUserInitiated_(void *a1, const char *a2, ...)
{
  return [a1 setUserInitiated:];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractionEnabled:];
}

id objc_msgSend_setUserManifest_(void *a1, const char *a2, ...)
{
  return [a1 setUserManifest:];
}

id objc_msgSend_setUserNotificationExtensionId_(void *a1, const char *a2, ...)
{
  return [a1 setUserNotificationExtensionId:];
}

id objc_msgSend_setUti_(void *a1, const char *a2, ...)
{
  return [a1 setUti:];
}

id objc_msgSend_setUuid_(void *a1, const char *a2, ...)
{
  return [a1 setUuid:];
}

id objc_msgSend_setUuidOrder_(void *a1, const char *a2, ...)
{
  return [a1 setUuidOrder:];
}

id objc_msgSend_setUuidSet_(void *a1, const char *a2, ...)
{
  return [a1 setUuidSet:];
}

id objc_msgSend_setUuidToManagedObjectIDMap_(void *a1, const char *a2, ...)
{
  return [a1 setUuidToManagedObjectIDMap:];
}

id objc_msgSend_setUuidToPlayerItemMap_(void *a1, const char *a2, ...)
{
  return [a1 setUuidToPlayerItemMap:];
}

id objc_msgSend_setValidationManager_(void *a1, const char *a2, ...)
{
  return [a1 setValidationManager:];
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return [a1 setValue:];
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forHTTPHeaderField:];
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKey:];
}

id objc_msgSend_setValue_forKey_shareModes_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKey:shareModes:];
}

id objc_msgSend_setValue_forProperty_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forProperty:];
}

id objc_msgSend_setValue_forSettingWithIdentifier_inGroup_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forSettingWithIdentifier:inGroup:];
}

id objc_msgSend_setValueSet_(void *a1, const char *a2, ...)
{
  return [a1 setValueSet:];
}

id objc_msgSend_setValuesForKeysWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 setValuesForKeysWithDictionary:];
}

id objc_msgSend_setVc_(void *a1, const char *a2, ...)
{
  return [a1 setVc:];
}

id objc_msgSend_setVersion_(void *a1, const char *a2, ...)
{
  return [a1 setVersion:];
}

id objc_msgSend_setVersion_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setVersion:forKey:];
}

id objc_msgSend_setVerticalLayout_(void *a1, const char *a2, ...)
{
  return [a1 setVerticalLayout:];
}

id objc_msgSend_setVideo_(void *a1, const char *a2, ...)
{
  return [a1 setVideo:];
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return [a1 setView:];
}

id objc_msgSend_setViewControllers_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllers:];
}

id objc_msgSend_setVisible_(void *a1, const char *a2, ...)
{
  return [a1 setVisible:];
}

id objc_msgSend_setVolumeController_(void *a1, const char *a2, ...)
{
  return [a1 setVolumeController:];
}

id objc_msgSend_setWatchTemplate_(void *a1, const char *a2, ...)
{
  return [a1 setWatchTemplate:];
}

id objc_msgSend_setWebpageURL_(void *a1, const char *a2, ...)
{
  return [a1 setWebpageURL:];
}

id objc_msgSend_setWidthTracksTextView_(void *a1, const char *a2, ...)
{
  return [a1 setWidthTracksTextView:];
}

id objc_msgSend_setWindow_(void *a1, const char *a2, ...)
{
  return [a1 setWindow:];
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return [a1 setWithArray:];
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 setWithCapacity:];
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return [a1 setWithObject:];
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 setWithObjects:];
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return [a1 setWithSet:];
}

id objc_msgSend_setWorkQueue_(void *a1, const char *a2, ...)
{
  return [a1 setWorkQueue:];
}

id objc_msgSend_setZIndex_(void *a1, const char *a2, ...)
{
  return [a1 setZIndex:];
}

id objc_msgSend_set_layoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 set_layoutMargins:];
}

id objc_msgSend_settingAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 settingAtIndexPath:];
}

id objc_msgSend_settingFont(void *a1, const char *a2, ...)
{
  return _[a1 settingFont];
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _[a1 settings];
}

id objc_msgSend_settingsController(void *a1, const char *a2, ...)
{
  return _[a1 settingsController];
}

id objc_msgSend_settingsController_addedGroup_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 settingsController:addedGroup:atIndex:];
}

id objc_msgSend_settingsController_didChangeHeaderAction_inGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 settingsController:didChangeHeaderAction:inGroupWithIdentifier:];
}

id objc_msgSend_settingsController_didChangeSettingValueAtIndex_inGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsController:didChangeSettingValueAtIndex:inGroupWithIdentifier:");
}

id objc_msgSend_settingsController_reloadedGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsController:reloadedGroupWithIdentifier:");
}

id objc_msgSend_settingsController_removedGroupAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsController:removedGroupAtIndex:");
}

id objc_msgSend_settingsController_removedSettingAtIndex_inGroupWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsController:removedSettingAtIndex:inGroupWithIdentifier:");
}

id objc_msgSend_settingsForDownloadsGroup(void *a1, const char *a2, ...)
{
  return _[a1 settingsForDownloadsGroup];
}

id objc_msgSend_settingsForPrivateStyle_(void *a1, const char *a2, ...)
{
  return [a1 settingsForPrivateStyle:];
}

id objc_msgSend_settingsForShowGroup(void *a1, const char *a2, ...)
{
  return _[a1 settingsForShowGroup];
}

id objc_msgSend_settingsHandler(void *a1, const char *a2, ...)
{
  return _[a1 settingsHandler];
}

id objc_msgSend_setup(void *a1, const char *a2, ...)
{
  return _[a1 setup];
}

id objc_msgSend_setupActions(void *a1, const char *a2, ...)
{
  return _[a1 setupActions];
}

id objc_msgSend_setupAfterBecomingActive(void *a1, const char *a2, ...)
{
  return _[a1 setupAfterBecomingActive];
}

id objc_msgSend_setupCell(void *a1, const char *a2, ...)
{
  return _[a1 setupCell];
}

id objc_msgSend_setupPlayerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 setupPlayerNotifications];
}

id objc_msgSend_setupView(void *a1, const char *a2, ...)
{
  return _[a1 setupView];
}

id objc_msgSend_shareAction(void *a1, const char *a2, ...)
{
  return _[a1 shareAction];
}

id objc_msgSend_shareActivityItems_(void *a1, const char *a2, ...)
{
  return [a1 shareActivityItems:];
}

id objc_msgSend_shareData(void *a1, const char *a2, ...)
{
  return _[a1 shareData];
}

id objc_msgSend_shareDescription(void *a1, const char *a2, ...)
{
  return _[a1 shareDescription];
}

id objc_msgSend_shareEpisodeTitle(void *a1, const char *a2, ...)
{
  return _[a1 shareEpisodeTitle];
}

id objc_msgSend_shareFromModeForShareMode_(void *a1, const char *a2, ...)
{
  return [a1 shareFromModeForShareMode:];
}

id objc_msgSend_shareImage(void *a1, const char *a2, ...)
{
  return _[a1 shareImage];
}

id objc_msgSend_shareImageProvider(void *a1, const char *a2, ...)
{
  return _[a1 shareImageProvider];
}

id objc_msgSend_shareModeForShareFromMode_(void *a1, const char *a2, ...)
{
  return [a1 shareModeForShareFromMode:];
}

id objc_msgSend_sharePodcastTitle(void *a1, const char *a2, ...)
{
  return _[a1 sharePodcastTitle];
}

id objc_msgSend_shareProvider(void *a1, const char *a2, ...)
{
  return _[a1 shareProvider];
}

id objc_msgSend_shareSupported(void *a1, const char *a2, ...)
{
  return _[a1 shareSupported];
}

id objc_msgSend_shareURL(void *a1, const char *a2, ...)
{
  return _[a1 shareURL];
}

id objc_msgSend_shareViewControllerWithDataSource_applicationActivities_(void *a1, const char *a2, ...)
{
  return [a1 shareViewControllerWithDataSource:applicationActivities:];
}

id objc_msgSend_shareViewControllerWithEpisode_applicationActivities_selectedReferenceTime_selectedPlayerTime_currentPlayerTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareViewControllerWithEpisode:applicationActivities:selectedReferenceTime:selectedPlayerTime:currentPlayerTime:");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 sharedAnalytics];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedDocumentsDirectory(void *a1, const char *a2, ...)
{
  return _[a1 sharedDocumentsDirectory];
}

id objc_msgSend_sharedDownloaders(void *a1, const char *a2, ...)
{
  return _[a1 sharedDownloaders];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedLogger(void *a1, const char *a2, ...)
{
  return _[a1 sharedLogger];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedPlaybackController(void *a1, const char *a2, ...)
{
  return _[a1 sharedPlaybackController];
}

id objc_msgSend_sharedPlayer(void *a1, const char *a2, ...)
{
  return _[a1 sharedPlayer];
}

id objc_msgSend_sharedScheduler(void *a1, const char *a2, ...)
{
  return _[a1 sharedScheduler];
}

id objc_msgSend_shiftedIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 shiftedIndexPath];
}

id objc_msgSend_shortTitles(void *a1, const char *a2, ...)
{
  return _[a1 shortTitles];
}

id objc_msgSend_shortcutsKind(void *a1, const char *a2, ...)
{
  return _[a1 shortcutsKind];
}

id objc_msgSend_shouldAuthenticate(void *a1, const char *a2, ...)
{
  return _[a1 shouldAuthenticate];
}

id objc_msgSend_shouldContinue(void *a1, const char *a2, ...)
{
  return _[a1 shouldContinue];
}

id objc_msgSend_shouldFindSomethingToPlay(void *a1, const char *a2, ...)
{
  return _[a1 shouldFindSomethingToPlay];
}

id objc_msgSend_shouldForceAuthenticationForTransaction_(void *a1, const char *a2, ...)
{
  return [a1 shouldForceAuthenticationForTransaction];
}

id objc_msgSend_shouldHandleNotification_(void *a1, const char *a2, ...)
{
  return [a1 shouldHandleNotification:];
}

id objc_msgSend_shouldHandleNotificationResponse_(void *a1, const char *a2, ...)
{
  return [a1 shouldHandleNotificationResponse:];
}

id objc_msgSend_shouldNotContinueResult(void *a1, const char *a2, ...)
{
  return _[a1 shouldNotContinueResult];
}

id objc_msgSend_shouldPresentNowPlayingForItem_presentationType_(void *a1, const char *a2, ...)
{
  return [a1 shouldPresentNowPlayingForItem:presentationType:];
}

id objc_msgSend_shouldProcessNotification_(void *a1, const char *a2, ...)
{
  return [a1 shouldProcessNotification:];
}

id objc_msgSend_shouldShowAnnouncementNotification_(void *a1, const char *a2, ...)
{
  return [a1 shouldShowAnnouncementNotification:];
}

id objc_msgSend_shouldShowNowPlaying(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowNowPlaying];
}

id objc_msgSend_shouldShowPodcastsTermsScreen(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowPodcastsTermsScreen];
}

id objc_msgSend_shouldShowWelcome(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowWelcome];
}

id objc_msgSend_shouldSync_(void *a1, const char *a2, ...)
{
  return [a1 shouldSync:];
}

id objc_msgSend_shouldSyncFeedUpdateForNotification_(void *a1, const char *a2, ...)
{
  return [a1 shouldSyncFeedUpdateForNotification:];
}

id objc_msgSend_shouldSyncInReadOnlyMode(void *a1, const char *a2, ...)
{
  return _[a1 shouldSyncInReadOnlyMode];
}

id objc_msgSend_shouldSyncSubscriptionsForNotification_(void *a1, const char *a2, ...)
{
  return [a1 shouldSyncSubscriptionsForNotification:];
}

id objc_msgSend_shouldSyncUppForNotification_(void *a1, const char *a2, ...)
{
  return [a1 shouldSyncUppForNotification:];
}

id objc_msgSend_showActionSheetWithActions_fromButton_(void *a1, const char *a2, ...)
{
  return [a1 showActionSheetWithActions:fromButton:];
}

id objc_msgSend_showAddPodcastsSheet(void *a1, const char *a2, ...)
{
  return _[a1 showAddPodcastsSheet];
}

id objc_msgSend_showCount(void *a1, const char *a2, ...)
{
  return _[a1 showCount];
}

id objc_msgSend_showDebugUI(void *a1, const char *a2, ...)
{
  return _[a1 showDebugUI];
}

id objc_msgSend_showDialogForReason_podcastTitle_completion_(void *a1, const char *a2, ...)
{
  return [a1 showDialogForReason:podcastTitle:completion:];
}

id objc_msgSend_showInternetUnreachableDialog(void *a1, const char *a2, ...)
{
  return _[a1 showInternetUnreachableDialog];
}

id objc_msgSend_showInternetUnreachableDialogWithAcknowledmentBlock_(void *a1, const char *a2, ...)
{
  return [a1 showInternetUnreachableDialogWithAcknowledmentBlock:];
}

id objc_msgSend_showListShowsAllShowsKey(void *a1, const char *a2, ...)
{
  return _[a1 showListShowsAllShowsKey];
}

id objc_msgSend_showPlayedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 showPlayedEpisodes];
}

id objc_msgSend_showPodcastDetailForOneShowWithMultipleNotificationEpisodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPodcastDetailForOneShowWithMultipleNotificationEpisodes:");
}

id objc_msgSend_showPodcastDetailForOneShowWithOneNotificationEpisode_(void *a1, const char *a2, ...)
{
  return [a1 showPodcastDetailForOneShowWithOneNotificationEpisode:];
}

id objc_msgSend_showSearchControllerWithSearchText_(void *a1, const char *a2, ...)
{
  return [a1 showSearchControllerWithSearchText:];
}

id objc_msgSend_showSettings_changedEpisodeLimit_(void *a1, const char *a2, ...)
{
  return [a1 showSettings:changedEpisodeLimit:];
}

id objc_msgSend_showSettings_changedNotifications_(void *a1, const char *a2, ...)
{
  return [a1 showSettings:changedNotifications:];
}

id objc_msgSend_showSettings_changedRemovePlayedDownloads_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSettings:changedRemovePlayedDownloads:");
}

id objc_msgSend_showSettings_changedShowType_(void *a1, const char *a2, ...)
{
  return [a1 showSettings:changedShowType:];
}

id objc_msgSend_showSettings_changedSubscribed_(void *a1, const char *a2, ...)
{
  return [a1 showSettings:changedSubscribed:];
}

id objc_msgSend_showSettingsGroup(void *a1, const char *a2, ...)
{
  return _[a1 showSettingsGroup];
}

id objc_msgSend_showSpecificUpsellCopy(void *a1, const char *a2, ...)
{
  return _[a1 showSpecificUpsellCopy];
}

id objc_msgSend_showSubscriptionFailureDialog_error_(void *a1, const char *a2, ...)
{
  return [a1 showSubscriptionFailureDialog:error:];
}

id objc_msgSend_showType(void *a1, const char *a2, ...)
{
  return _[a1 showType];
}

id objc_msgSend_showTypeFromString_(void *a1, const char *a2, ...)
{
  return [a1 showTypeFromString:];
}

id objc_msgSend_showTypeInFeed(void *a1, const char *a2, ...)
{
  return _[a1 showTypeInFeed];
}

id objc_msgSend_showTypeInFeedResolvedValue(void *a1, const char *a2, ...)
{
  return _[a1 showTypeInFeedResolvedValue];
}

id objc_msgSend_showTypeRadioGroup(void *a1, const char *a2, ...)
{
  return _[a1 showTypeRadioGroup];
}

id objc_msgSend_showTypeSetting(void *a1, const char *a2, ...)
{
  return _[a1 showTypeSetting];
}

id objc_msgSend_showTypeUserSetting(void *a1, const char *a2, ...)
{
  return _[a1 showTypeUserSetting];
}

id objc_msgSend_showViewController_inPopoverFromButton_(void *a1, const char *a2, ...)
{
  return [a1 showViewController:inPopoverFromButton:];
}

id objc_msgSend_showWithPresentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 showWithPresentingViewController:];
}

id objc_msgSend_showsArtwork(void *a1, const char *a2, ...)
{
  return _[a1 showsArtwork];
}

id objc_msgSend_showsArtworkForStyle_(void *a1, const char *a2, ...)
{
  return [a1 showsArtworkForStyle:];
}

id objc_msgSend_showsDescriptionButton(void *a1, const char *a2, ...)
{
  return _[a1 showsDescriptionButton];
}

id objc_msgSend_showsFooterTextView(void *a1, const char *a2, ...)
{
  return _[a1 showsFooterTextView];
}

id objc_msgSend_showsMoreButton(void *a1, const char *a2, ...)
{
  return _[a1 showsMoreButton];
}

id objc_msgSend_showsPlayState(void *a1, const char *a2, ...)
{
  return _[a1 showsPlayState];
}

id objc_msgSend_showsPubDate(void *a1, const char *a2, ...)
{
  return _[a1 showsPubDate];
}

id objc_msgSend_showsSeperator(void *a1, const char *a2, ...)
{
  return _[a1 showsSeperator];
}

id objc_msgSend_sideView(void *a1, const char *a2, ...)
{
  return _[a1 sideView];
}

id objc_msgSend_sideViewFrameForContentViewSize_(void *a1, const char *a2, ...)
{
  return [a1 sideViewFrameForContentViewSize:];
}

id objc_msgSend_simulateAnyTestNotification(void *a1, const char *a2, ...)
{
  return _[a1 simulateAnyTestNotification];
}

id objc_msgSend_simulateMemoryWarning(void *a1, const char *a2, ...)
{
  return _[a1 simulateMemoryWarning];
}

id objc_msgSend_sinceDomainVersion(void *a1, const char *a2, ...)
{
  return _[a1 sinceDomainVersion];
}

id objc_msgSend_sinceDomainVersionForTransaction_(void *a1, const char *a2, ...)
{
  return [a1 sinceDomainVersionForTransaction:];
}

id objc_msgSend_siriAnalyticsController(void *a1, const char *a2, ...)
{
  return _[a1 siriAnalyticsController];
}

id objc_msgSend_siriAssetInfo(void *a1, const char *a2, ...)
{
  return _[a1 siriAssetInfo];
}

id objc_msgSend_siriDonator(void *a1, const char *a2, ...)
{
  return _[a1 siriDonator];
}

id objc_msgSend_siriDumper(void *a1, const char *a2, ...)
{
  return _[a1 siriDumper];
}

id objc_msgSend_siriMultiUserConnection(void *a1, const char *a2, ...)
{
  return _[a1 siriMultiUserConnection];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeCacheKeyForLabel_width_(void *a1, const char *a2, ...)
{
  return [a1 sizeCacheKeyForLabel:width:];
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return [a1 sizeThatFits:];
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return [a1 sizeWithAttributes:];
}

id objc_msgSend_skipBackwardCommand(void *a1, const char *a2, ...)
{
  return _[a1 skipBackwardCommand];
}

id objc_msgSend_skipForwardCommand(void *a1, const char *a2, ...)
{
  return _[a1 skipForwardCommand];
}

id objc_msgSend_sortAscending(void *a1, const char *a2, ...)
{
  return _[a1 sortAscending];
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorWithKey:ascending:];
}

id objc_msgSend_sortDescriptorWithKey_ascending_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:selector:");
}

id objc_msgSend_sortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptors];
}

id objc_msgSend_sortDescriptorsForAllPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForAllPodcasts];
}

id objc_msgSend_sortDescriptorsForDateAddedAscending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorsForDateAddedAscending:];
}

id objc_msgSend_sortDescriptorsForDownloadedDateAscending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorsForDownloadedDateAscending:];
}

id objc_msgSend_sortDescriptorsForFirstTimeAvailableAscending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorsForFirstTimeAvailableAscending];
}

id objc_msgSend_sortDescriptorsForLastBookmarkedDateAscending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorsForLastBookmarkedDateAscending:];
}

id objc_msgSend_sortDescriptorsForListenNow(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForListenNow];
}

id objc_msgSend_sortDescriptorsForManualOrder(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForManualOrder];
}

id objc_msgSend_sortDescriptorsForPlayOrder(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForPlayOrder];
}

id objc_msgSend_sortDescriptorsForPlayOrderByEpisodeNumber(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForPlayOrderByEpisodeNumber];
}

id objc_msgSend_sortDescriptorsForPlayOrderByPubDate(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForPlayOrderByPubDate];
}

id objc_msgSend_sortDescriptorsForPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorsForPodcastUuid:];
}

id objc_msgSend_sortDescriptorsForPubDateAscending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorsForPubDateAscending:];
}

id objc_msgSend_sortDescriptorsForRecentlyPlayed(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForRecentlyPlayed];
}

id objc_msgSend_sortDescriptorsForRecentlyUnfollowed(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForRecentlyUnfollowed];
}

id objc_msgSend_sortDescriptorsForSortOrder(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForSortOrder];
}

id objc_msgSend_sortDescriptorsForTitle(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForTitle];
}

id objc_msgSend_sortDescriptorsForTitle_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorsForTitle:];
}

id objc_msgSend_sortOrder(void *a1, const char *a2, ...)
{
  return _[a1 sortOrder];
}

id objc_msgSend_sortOrderAscForShowType_(void *a1, const char *a2, ...)
{
  return [a1 sortOrderAscForShowType:];
}

id objc_msgSend_sortPropertyValues(void *a1, const char *a2, ...)
{
  return _[a1 sortPropertyValues];
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return [a1 sortUsingComparator:];
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingComparator:];
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingDescriptors:];
}

id objc_msgSend_sortedArrayWithOptions_usingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayWithOptions:usingComparator:");
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_sourceList_didSelectItemUuid_atIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 sourceList:didSelectItemUuid:atIndexPath:];
}

id objc_msgSend_sourceList_didUpdateSelectedItemUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceList:didUpdateSelectedItemUuid:");
}

id objc_msgSend_spinner(void *a1, const char *a2, ...)
{
  return _[a1 spinner];
}

id objc_msgSend_splitViewController(void *a1, const char *a2, ...)
{
  return _[a1 splitViewController];
}

id objc_msgSend_standardDeviationForEpisodes_standardDeviation_average_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardDeviationForEpisodes:standardDeviation:average:");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _[a1 startAccessingSecurityScopedResource];
}

id objc_msgSend_startAllProcessors(void *a1, const char *a2, ...)
{
  return _[a1 startAllProcessors];
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _[a1 startAnimating];
}

id objc_msgSend_startBackgroundTask(void *a1, const char *a2, ...)
{
  return _[a1 startBackgroundTask];
}

id objc_msgSend_startDelay(void *a1, const char *a2, ...)
{
  return _[a1 startDelay];
}

id objc_msgSend_startDonation(void *a1, const char *a2, ...)
{
  return _[a1 startDonation];
}

id objc_msgSend_startDownloadForPodcastStoreId_triggerBy_feedUrl_useBackgroundFetch_source_(void *a1, const char *a2, ...)
{
  return [a1 startDownloadForPodcastStoreId:triggerBy:feedUrl:useBackgroundFetch:source:];
}

id objc_msgSend_startDownloadTaskForFeedURL_userInitiated_useBackgroundFetch_(void *a1, const char *a2, ...)
{
  return [a1 startDownloadTaskForFeedURL:userInitiated:useBackgroundFetch:];
}

id objc_msgSend_startIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 startIfNeeded];
}

id objc_msgSend_startKeyLoadingProcessWithKeyIdentifier_contentAdamId_isRenewal_completion_(void *a1, const char *a2, ...)
{
  return [a1 startKeyLoadingProcessWithKeyIdentifier:contentAdamId:isRenewal:completion:];
}

id objc_msgSend_startKeyRequestWithSession_completion_(void *a1, const char *a2, ...)
{
  return [a1 startKeyRequestWithSession:completion:];
}

id objc_msgSend_startLibraryUpdate(void *a1, const char *a2, ...)
{
  return _[a1 startLibraryUpdate];
}

id objc_msgSend_startListening(void *a1, const char *a2, ...)
{
  return _[a1 startListening];
}

id objc_msgSend_startNotifier(void *a1, const char *a2, ...)
{
  return _[a1 startNotifier];
}

id objc_msgSend_startObserving(void *a1, const char *a2, ...)
{
  return _[a1 startObserving];
}

id objc_msgSend_startObservingChanges(void *a1, const char *a2, ...)
{
  return _[a1 startObservingChanges];
}

id objc_msgSend_startObservingDownloadedPodcastsChanges(void *a1, const char *a2, ...)
{
  return _[a1 startObservingDownloadedPodcastsChanges];
}

id objc_msgSend_startObservingMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 startObservingMediaLibrary];
}

id objc_msgSend_startObservingPlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 startObservingPlaybackState];
}

id objc_msgSend_startPlayback(void *a1, const char *a2, ...)
{
  return _[a1 startPlayback];
}

id objc_msgSend_startProcessors_(void *a1, const char *a2, ...)
{
  return [a1 startProcessors:];
}

id objc_msgSend_startProcessorsForFeedUpdates(void *a1, const char *a2, ...)
{
  return _[a1 startProcessorsForFeedUpdates];
}

id objc_msgSend_startTimer_(void *a1, const char *a2, ...)
{
  return [a1 startTimer:];
}

id objc_msgSend_startUPPSyncTimer(void *a1, const char *a2, ...)
{
  return _[a1 startUPPSyncTimer];
}

id objc_msgSend_startedEpisodeUuids(void *a1, const char *a2, ...)
{
  return _[a1 startedEpisodeUuids];
}

id objc_msgSend_startingIndexForDisplay(void *a1, const char *a2, ...)
{
  return _[a1 startingIndexForDisplay];
}

id objc_msgSend_startupTime(void *a1, const char *a2, ...)
{
  return _[a1 startupTime];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stationIntents(void *a1, const char *a2, ...)
{
  return _[a1 stationIntents];
}

id objc_msgSend_stationUuid(void *a1, const char *a2, ...)
{
  return _[a1 stationUuid];
}

id objc_msgSend_statsDownloadIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 statsDownloadIdentifier];
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return _[a1 statusCode];
}

id objc_msgSend_statusCodeForTask_(void *a1, const char *a2, ...)
{
  return [a1 statusCodeForTask:];
}

id objc_msgSend_statusManager(void *a1, const char *a2, ...)
{
  return _[a1 statusManager];
}

id objc_msgSend_statusWithCode_(void *a1, const char *a2, ...)
{
  return [a1 statusWithCode:];
}

id objc_msgSend_statusWithCode_error_(void *a1, const char *a2, ...)
{
  return [a1 statusWithCode:error:];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _[a1 stopAccessingSecurityScopedResource];
}

id objc_msgSend_stopContext(void *a1, const char *a2, ...)
{
  return _[a1 stopContext];
}

id objc_msgSend_stopKeyRequestWithSession_completion_(void *a1, const char *a2, ...)
{
  return [a1 stopKeyRequestWithSession:completion:];
}

id objc_msgSend_stopListening(void *a1, const char *a2, ...)
{
  return _[a1 stopListening];
}

id objc_msgSend_stopNotifier(void *a1, const char *a2, ...)
{
  return _[a1 stopNotifier];
}

id objc_msgSend_stopObservingApplicationState(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingApplicationState];
}

id objc_msgSend_stopObservingChanges(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingChanges];
}

id objc_msgSend_stopObservingDownloadedPodcastsChanges(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingDownloadedPodcastsChanges];
}

id objc_msgSend_stopObservingMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingMediaLibrary];
}

id objc_msgSend_stopObservingPlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingPlaybackState];
}

id objc_msgSend_stopType(void *a1, const char *a2, ...)
{
  return _[a1 stopType];
}

id objc_msgSend_stopWithReason_initiator_(void *a1, const char *a2, ...)
{
  return [a1 stopWithReason:initiator:];
}

id objc_msgSend_storageProvider(void *a1, const char *a2, ...)
{
  return _[a1 storageProvider];
}

id objc_msgSend_storeAccountMismatchErrorWithPreviousStoreAccountText_currentStoreAccontText_transaction_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeAccountMismatchErrorWithPreviousStoreAccountText:currentStoreAccontText:transaction:underlyingError:");
}

id objc_msgSend_storeAccountSessionExpiredWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 storeAccountSessionExpiredWithTransaction:underlyingError:];
}

id objc_msgSend_storeBookkeeperPreferences(void *a1, const char *a2, ...)
{
  return _[a1 storeBookkeeperPreferences];
}

id objc_msgSend_storeCleanURL(void *a1, const char *a2, ...)
{
  return _[a1 storeCleanURL];
}

id objc_msgSend_storeCleanURLForAdamID_(void *a1, const char *a2, ...)
{
  return [a1 storeCleanURLForAdamID:];
}

id objc_msgSend_storeCollectionId(void *a1, const char *a2, ...)
{
  return _[a1 storeCollectionId];
}

id objc_msgSend_storeCollectionIdForRedirectURL_(void *a1, const char *a2, ...)
{
  return [a1 storeCollectionIdForRedirectURL:];
}

id objc_msgSend_storeGenericErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 storeGenericErrorWithTransaction:underlyingError:];
}

id objc_msgSend_storeId(void *a1, const char *a2, ...)
{
  return _[a1 storeId];
}

id objc_msgSend_storeIdFromFeedUpdateNotification_(void *a1, const char *a2, ...)
{
  return [a1 storeIdFromFeedUpdateNotification:];
}

id objc_msgSend_storeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 storeIdentifier];
}

id objc_msgSend_storeLoggedOutErrorWithPreviousStoreAccountText_transaction_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeLoggedOutErrorWithPreviousStoreAccountText:transaction:underlyingError:");
}

id objc_msgSend_storeMediaDictionariesToPlayerItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeMediaDictionariesToPlayerItems:");
}

id objc_msgSend_storeMediaDictionariesToPlayerItems_initiatedByAnotherUser_(void *a1, const char *a2, ...)
{
  return [a1 storeMediaDictionariesToPlayerItems:initiatedByAnotherUser:];
}

id objc_msgSend_storeMediaDictionaryFromStorePlatformDictionary_artworkSize_restricted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeMediaDictionaryFromStorePlatformDictionary:artworkSize:restricted:");
}

id objc_msgSend_storeMediaDictionaryFromStorePlatformDictionary_artworkSize_restricted_isNotSubscribeable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeMediaDictionaryFromStorePlatformDictionary:artworkSize:restricted:isNotSubscribeable:");
}

id objc_msgSend_storePlatformDictionaryHasChildren_(void *a1, const char *a2, ...)
{
  return [a1 storePlatformDictionaryHasChildren];
}

id objc_msgSend_storePodcastDownloader(void *a1, const char *a2, ...)
{
  return _[a1 storePodcastDownloader];
}

id objc_msgSend_storeReportingParams(void *a1, const char *a2, ...)
{
  return _[a1 storeReportingParams];
}

id objc_msgSend_storeResponseDelegate(void *a1, const char *a2, ...)
{
  return _[a1 storeResponseDelegate];
}

id objc_msgSend_storeShortURL(void *a1, const char *a2, ...)
{
  return _[a1 storeShortURL];
}

id objc_msgSend_storeTrackId(void *a1, const char *a2, ...)
{
  return _[a1 storeTrackId];
}

id objc_msgSend_storeValidationErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeValidationErrorWithTransaction:underlyingError:");
}

id objc_msgSend_storedUuid(void *a1, const char *a2, ...)
{
  return _[a1 storedUuid];
}

id objc_msgSend_storefrontIdentifierFromCountryCode_(void *a1, const char *a2, ...)
{
  return [a1 storefrontIdentifierFromCountryCode:];
}

id objc_msgSend_streamCacheObserverToken(void *a1, const char *a2, ...)
{
  return _[a1 streamCacheObserverToken];
}

id objc_msgSend_streamCacheURLAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 streamCacheURLAndReturnError:];
}

id objc_msgSend_streamURL(void *a1, const char *a2, ...)
{
  return _[a1 streamURL];
}

id objc_msgSend_streamUrl(void *a1, const char *a2, ...)
{
  return _[a1 streamUrl];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAddingPercentEncodingWithAllowedCharacters_(void *a1, const char *a2, ...)
{
  return [a1 stringByAddingPercentEncodingWithAllowedCharacters:];
}

id objc_msgSend_stringByAddingPercentEscapesUsingEncoding_(void *a1, const char *a2, ...)
{
  return [a1 stringByAddingPercentEscapesUsingEncoding:];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingFormat:];
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingPathComponent:];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringByRemovingInsignificantPrefix(void *a1, const char *a2, ...)
{
  return _[a1 stringByRemovingInsignificantPrefix];
}

id objc_msgSend_stringByRemovingNewlineCharacters(void *a1, const char *a2, ...)
{
  return _[a1 stringByRemovingNewlineCharacters];
}

id objc_msgSend_stringByRemovingPercentEscapes(void *a1, const char *a2, ...)
{
  return _[a1 stringByRemovingPercentEscapes];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return [a1 stringByReplacingOccurrencesOfString:withString:];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_options_range_(void *a1, const char *a2, ...)
{
  return [a1 stringByReplacingOccurrencesOfString:withString:options:range:];
}

id objc_msgSend_stringBySmartlyStrippingHTML(void *a1, const char *a2, ...)
{
  return _[a1 stringBySmartlyStrippingHTML];
}

id objc_msgSend_stringByStrippingHTML(void *a1, const char *a2, ...)
{
  return _[a1 stringByStrippingHTML];
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return [a1 stringByTrimmingCharactersInSet:];
}

id objc_msgSend_stringForContainerOrder_short_(void *a1, const char *a2, ...)
{
  return [a1 stringForContainerOrder:short:];
}

id objc_msgSend_stringForEpisodes_short_defaultValue_(void *a1, const char *a2, ...)
{
  return [a1 stringForEpisodes:short:defaultValue:];
}

id objc_msgSend_stringForGlobalDefaultLimit(void *a1, const char *a2, ...)
{
  return _[a1 stringForGlobalDefaultLimit];
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return [a1 stringForKey:];
}

id objc_msgSend_stringForMedia_short_(void *a1, const char *a2, ...)
{
  return [a1 stringForMedia:short:];
}

id objc_msgSend_stringForNewEpisodeCount_titleCase_(void *a1, const char *a2, ...)
{
  return [a1 stringForNewEpisodeCount:titleCase:];
}

id objc_msgSend_stringForUnplayedEpisodeCount_(void *a1, const char *a2, ...)
{
  return [a1 stringForUnplayedEpisodeCount:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:];
}

id objc_msgSend_stringFromDictionary_forKey_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDictionary:forKey:];
}

id objc_msgSend_stringFromNumber_(void *a1, const char *a2, ...)
{
  return [a1 stringFromNumber:];
}

id objc_msgSend_stringFromSeconds_(void *a1, const char *a2, ...)
{
  return [a1 stringFromSeconds:];
}

id objc_msgSend_stringFromTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 stringFromTimeInterval:];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithBytesize_(void *a1, const char *a2, ...)
{
  return [a1 stringWithBytesize:];
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return [a1 stringWithCString:encoding:];
}

id objc_msgSend_stringWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 stringWithCapacity:];
}

id objc_msgSend_stringWithDuration_unitsStyle_includeTimeRemainingPhrase_(void *a1, const char *a2, ...)
{
  return [a1 stringWithDuration:unitsStyle:includeTimeRemainingPhrase:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return [a1 stringWithString:];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}

id objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return [a1 stringWithValidatedFormat:validFormatSpecifiers:error:];
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return _[a1 style];
}

id objc_msgSend_styleForWidth_showsArtwork_(void *a1, const char *a2, ...)
{
  return [a1 styleForWidth:showsArtwork:];
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return [a1 subarrayWithRange:];
}

id objc_msgSend_subjectForShareEmailFromDataSource_(void *a1, const char *a2, ...)
{
  return [a1 subjectForShareEmailFromDataSource:];
}

id objc_msgSend_subjectForShareGenericFromDataSource_(void *a1, const char *a2, ...)
{
  return [a1 subjectForShareGenericFromDataSource:];
}

id objc_msgSend_submitTaskRequest_error_(void *a1, const char *a2, ...)
{
  return [a1 submitTaskRequest:error:];
}

id objc_msgSend_subscribeCommandStatusForErrorCode_(void *a1, const char *a2, ...)
{
  return [a1 subscribeCommandStatusForErrorCode:];
}

id objc_msgSend_subscribeFooterText_(void *a1, const char *a2, ...)
{
  return [a1 subscribeFooterText];
}

id objc_msgSend_subscribeFromCloudToPodcasts_(void *a1, const char *a2, ...)
{
  return [a1 subscribeFromCloudToPodcasts:];
}

id objc_msgSend_subscribeToLifecycleEventNotifications(void *a1, const char *a2, ...)
{
  return _[a1 subscribeToLifecycleEventNotifications];
}

id objc_msgSend_subscribeToPodcastWithFeedUrl_completion_(void *a1, const char *a2, ...)
{
  return [a1 subscribeToPodcastWithFeedUrl:completion:];
}

id objc_msgSend_subscribeToPodcastWithParams_(void *a1, const char *a2, ...)
{
  return [a1 subscribeToPodcastWithParams:];
}

id objc_msgSend_subscribeToPodcastWithStorePlatformDictionary_completion_(void *a1, const char *a2, ...)
{
  return [a1 subscribeToPodcastWithStorePlatformDictionary:completion:];
}

id objc_msgSend_subscribeToShowWithPodcastStoreId_account_completion_(void *a1, const char *a2, ...)
{
  return [a1 subscribeToShowWithPodcastStoreId:account:completion:];
}

id objc_msgSend_subscribeWithCommandURL_siriAssetInfo_requester_completion_(void *a1, const char *a2, ...)
{
  return [a1 subscribeWithCommandURL:siriAssetInfo:requester:completion:];
}

id objc_msgSend_subscribed(void *a1, const char *a2, ...)
{
  return _[a1 subscribed];
}

id objc_msgSend_subscribedSetting(void *a1, const char *a2, ...)
{
  return _[a1 subscribedSetting];
}

id objc_msgSend_subscriptionActive(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionActive];
}

id objc_msgSend_subscriptionControllerErrorDomain(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionControllerErrorDomain];
}

id objc_msgSend_subscriptionKeyForSyncType_(void *a1, const char *a2, ...)
{
  return [a1 subscriptionKeyForSyncType:];
}

id objc_msgSend_subscriptionState(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionState];
}

id objc_msgSend_subscriptionSyncProcessorSyncKeys(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionSyncProcessorSyncKeys];
}

id objc_msgSend_subscriptionsLastSyncTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionsLastSyncTimestamp];
}

id objc_msgSend_subscriptionsLastSyncTimestampFor_(void *a1, const char *a2, ...)
{
  return [a1 subscriptionsLastSyncTimestampFor:];
}

id objc_msgSend_subscriptionsSyncVersionFor_(void *a1, const char *a2, ...)
{
  return [a1 subscriptionsSyncVersionFor:];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringFromIndex:];
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _[a1 subtitle];
}

id objc_msgSend_subtitleHeightForWidth_(void *a1, const char *a2, ...)
{
  return [a1 subtitleHeightForWidth:];
}

id objc_msgSend_subtitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 subtitleLabel];
}

id objc_msgSend_subtitleMaxWidth(void *a1, const char *a2, ...)
{
  return _[a1 subtitleMaxWidth];
}

id objc_msgSend_subtitleNumberOfLines(void *a1, const char *a2, ...)
{
  return _[a1 subtitleNumberOfLines];
}

id objc_msgSend_subtitleStringForArtist_album_(void *a1, const char *a2, ...)
{
  return [a1 subtitleStringForArtist:album:];
}

id objc_msgSend_subtitleTextColor(void *a1, const char *a2, ...)
{
  return _[a1 subtitleTextColor];
}

id objc_msgSend_subtitleTextStyle(void *a1, const char *a2, ...)
{
  return _[a1 subtitleTextStyle];
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _[a1 subviews];
}

id objc_msgSend_success(void *a1, const char *a2, ...)
{
  return _[a1 success];
}

id objc_msgSend_successfulGetTransaction_withData_forKey_version_finishedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successfulGetTransaction:withData:forKey:version:finishedBlock:");
}

id objc_msgSend_successfulSetTransaction_withData_forKey_version_finishedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successfulSetTransaction:withData:forKey:version:finishedBlock:");
}

id objc_msgSend_superLayoutAttributesForSupplementaryViewOfKind_atIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 superLayoutAttributesForSupplementaryViewOfKind:atIndexPath:];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supplementaryViewForElementKind_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supplementaryViewForElementKind:atIndexPath:");
}

id objc_msgSend_supportedActivityTypes(void *a1, const char *a2, ...)
{
  return _[a1 supportedActivityTypes];
}

id objc_msgSend_supportedInterfaceOrientationsForWindow_(void *a1, const char *a2, ...)
{
  return [a1 supportedInterfaceOrientationsForWindow:];
}

id objc_msgSend_supportedShareModes(void *a1, const char *a2, ...)
{
  return _[a1 supportedShareModes];
}

id objc_msgSend_supportsBatchInsertion(void *a1, const char *a2, ...)
{
  return _[a1 supportsBatchInsertion];
}

id objc_msgSend_supportsChapterArtwork(void *a1, const char *a2, ...)
{
  return _[a1 supportsChapterArtwork];
}

id objc_msgSend_supportsEpisodeArtwork(void *a1, const char *a2, ...)
{
  return _[a1 supportsEpisodeArtwork];
}

id objc_msgSend_supportsImageStore(void *a1, const char *a2, ...)
{
  return _[a1 supportsImageStore];
}

id objc_msgSend_supportsLocalMedia(void *a1, const char *a2, ...)
{
  return _[a1 supportsLocalMedia];
}

id objc_msgSend_supportsMetrics(void *a1, const char *a2, ...)
{
  return _[a1 supportsMetrics];
}

id objc_msgSend_supportsPlayback(void *a1, const char *a2, ...)
{
  return _[a1 supportsPlayback];
}

id objc_msgSend_suppressAutomaticDownloadsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 suppressAutomaticDownloadsIfNeeded];
}

id objc_msgSend_suppressEpisodesWithBasisDate_(void *a1, const char *a2, ...)
{
  return [a1 suppressEpisodesWithBasisDate:];
}

id objc_msgSend_suppressMetrics(void *a1, const char *a2, ...)
{
  return _[a1 suppressMetrics];
}

id objc_msgSend_swipeBegan_(void *a1, const char *a2, ...)
{
  return [a1 swipeBegan:];
}

id objc_msgSend_swipeEnded_(void *a1, const char *a2, ...)
{
  return [a1 swipeEnded:];
}

id objc_msgSend_swipeState(void *a1, const char *a2, ...)
{
  return _[a1 swipeState];
}

id objc_msgSend_swipedCellIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 swipedCellIndexPath];
}

id objc_msgSend_switchBitrate(void *a1, const char *a2, ...)
{
  return _[a1 switchBitrate];
}

id objc_msgSend_switchSettingChanged_value_(void *a1, const char *a2, ...)
{
  return [a1 switchSettingChanged:value:];
}

id objc_msgSend_switchSettingWithTitle_initialValue_identifier_changeHandler_(void *a1, const char *a2, ...)
{
  return [a1 switchSettingWithTitle:initialValue:identifier:changeHandler:];
}

id objc_msgSend_switchToLibraryIfNowHasContent(void *a1, const char *a2, ...)
{
  return _[a1 switchToLibraryIfNowHasContent];
}

id objc_msgSend_swizzleMethodsForMetrics(void *a1, const char *a2, ...)
{
  return _[a1 swizzleMethodsForMetrics];
}

id objc_msgSend_sync(void *a1, const char *a2, ...)
{
  return _[a1 sync];
}

id objc_msgSend_syncAllBookkeeperKeys(void *a1, const char *a2, ...)
{
  return _[a1 syncAllBookkeeperKeys];
}

id objc_msgSend_syncCriticalBookkeeperKeysShouldSyncCleanKeys_(void *a1, const char *a2, ...)
{
  return [a1 syncCriticalBookkeeperKeysShouldSyncCleanKeys:];
}

id objc_msgSend_syncDictionaryToMetricsDictionary_(void *a1, const char *a2, ...)
{
  return [a1 syncDictionaryToMetricsDictionary:];
}

id objc_msgSend_syncDirtyFlag(void *a1, const char *a2, ...)
{
  return _[a1 syncDirtyFlag];
}

id objc_msgSend_syncEverything(void *a1, const char *a2, ...)
{
  return _[a1 syncEverything];
}

id objc_msgSend_syncEverythingIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 syncEverythingIfNeeded];
}

id objc_msgSend_syncFlagsForSyncType_(void *a1, const char *a2, ...)
{
  return [a1 syncFlagsForSyncType:];
}

id objc_msgSend_syncInProgress(void *a1, const char *a2, ...)
{
  return _[a1 syncInProgress];
}

id objc_msgSend_syncMergeIsFromCloud(void *a1, const char *a2, ...)
{
  return _[a1 syncMergeIsFromCloud];
}

id objc_msgSend_syncMultipleKeysAndProcessors_shouldSyncCleanKeys_(void *a1, const char *a2, ...)
{
  return [a1 syncMultipleKeysAndProcessors:shouldSyncCleanKeys:];
}

id objc_msgSend_syncMusicSubscriptionInformation(void *a1, const char *a2, ...)
{
  return _[a1 syncMusicSubscriptionInformation];
}

id objc_msgSend_syncNonFollowedShows(void *a1, const char *a2, ...)
{
  return _[a1 syncNonFollowedShows];
}

id objc_msgSend_syncNonFollowedShowsIfSyncDirty(void *a1, const char *a2, ...)
{
  return _[a1 syncNonFollowedShowsIfSyncDirty];
}

id objc_msgSend_syncStartTime(void *a1, const char *a2, ...)
{
  return _[a1 syncStartTime];
}

id objc_msgSend_syncStringForKey_(void *a1, const char *a2, ...)
{
  return [a1 syncStringForKey:];
}

id objc_msgSend_syncSubscriptions(void *a1, const char *a2, ...)
{
  return _[a1 syncSubscriptions];
}

id objc_msgSend_syncTaskEndTime(void *a1, const char *a2, ...)
{
  return _[a1 syncTaskEndTime];
}

id objc_msgSend_syncTaskStartTime(void *a1, const char *a2, ...)
{
  return _[a1 syncTaskStartTime];
}

id objc_msgSend_syncTermsVersion(void *a1, const char *a2, ...)
{
  return _[a1 syncTermsVersion];
}

id objc_msgSend_syncType(void *a1, const char *a2, ...)
{
  return _[a1 syncType];
}

id objc_msgSend_syncValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 syncValueForKey:];
}

id objc_msgSend_syncVersion(void *a1, const char *a2, ...)
{
  return _[a1 syncVersion];
}

id objc_msgSend_syncVersionFlags(void *a1, const char *a2, ...)
{
  return _[a1 syncVersionFlags];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_synchronizeImmediatelyWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 synchronizeImmediatelyWithCompletionBlock:];
}

id objc_msgSend_synchronizeTask(void *a1, const char *a2, ...)
{
  return _[a1 synchronizeTask];
}

id objc_msgSend_synchronizeWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 synchronizeWithCompletionHandler:];
}

id objc_msgSend_synchronouslyMarkAsHiddenAllPodcastsWithoutResettingSyncVersions(void *a1, const char *a2, ...)
{
  return _[a1 synchronouslyMarkAsHiddenAllPodcastsWithoutResettingSyncVersions];
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:];
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGrayColor];
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _[a1 systemRedColor];
}

id objc_msgSend_systemRoute(void *a1, const char *a2, ...)
{
  return _[a1 systemRoute];
}

id objc_msgSend_tabBarItem(void *a1, const char *a2, ...)
{
  return _[a1 tabBarItem];
}

id objc_msgSend_tableFooterView(void *a1, const char *a2, ...)
{
  return _[a1 tableFooterView];
}

id objc_msgSend_tableHeaderView(void *a1, const char *a2, ...)
{
  return _[a1 tableHeaderView];
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _[a1 tableView];
}

id objc_msgSend_tableView_canFocusRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 tableView:canFocusRowAtIndexPath:];
}

id objc_msgSend_tableView_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:didSelectRowAtIndexPath:");
}

id objc_msgSend_tableView_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:numberOfRowsInSection:");
}

id objc_msgSend_takeValuesFromDefaultSettings_(void *a1, const char *a2, ...)
{
  return [a1 takeValuesFromDefaultSettings:];
}

id objc_msgSend_tapGesture(void *a1, const char *a2, ...)
{
  return _[a1 tapGesture];
}

id objc_msgSend_targetForRefreshControl(void *a1, const char *a2, ...)
{
  return _[a1 targetForRefreshControl];
}

id objc_msgSend_targetXOffsetForExposedActions(void *a1, const char *a2, ...)
{
  return _[a1 targetXOffsetForExposedActions];
}

id objc_msgSend_task(void *a1, const char *a2, ...)
{
  return _[a1 task];
}

id objc_msgSend_task_didFailWithError_orStatusCode_(void *a1, const char *a2, ...)
{
  return [a1 task:didFailWithError:orStatusCode:];
}

id objc_msgSend_taskAssertion(void *a1, const char *a2, ...)
{
  return _[a1 taskAssertion];
}

id objc_msgSend_taskDebugDescription(void *a1, const char *a2, ...)
{
  return _[a1 taskDebugDescription];
}

id objc_msgSend_taskInvalidationDisabled(void *a1, const char *a2, ...)
{
  return _[a1 taskInvalidationDisabled];
}

id objc_msgSend_taskTimeout(void *a1, const char *a2, ...)
{
  return _[a1 taskTimeout];
}

id objc_msgSend_taskTimeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 taskTimeoutTimer];
}

id objc_msgSend_tearDownPlayerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 tearDownPlayerNotifications];
}

id objc_msgSend_temporaryDirectory(void *a1, const char *a2, ...)
{
  return _[a1 temporaryDirectory];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textAttributes(void *a1, const char *a2, ...)
{
  return _[a1 textAttributes];
}

id objc_msgSend_textChanged(void *a1, const char *a2, ...)
{
  return _[a1 textChanged];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _[a1 textColor];
}

id objc_msgSend_textContainer(void *a1, const char *a2, ...)
{
  return _[a1 textContainer];
}

id objc_msgSend_textContainerChangedGeometry_(void *a1, const char *a2, ...)
{
  return [a1 textContainerChangedGeometry:];
}

id objc_msgSend_textField(void *a1, const char *a2, ...)
{
  return _[a1 textField];
}

id objc_msgSend_textField_shouldChangeCharactersInRange_replacementString_(void *a1, const char *a2, ...)
{
  return [a1 textField:shouldChangeCharactersInRange:replacementString:];
}

id objc_msgSend_textFieldDidBeginEditing_(void *a1, const char *a2, ...)
{
  return [a1 textFieldDidBeginEditing:];
}

id objc_msgSend_textFieldDidEndEditing_(void *a1, const char *a2, ...)
{
  return [a1 textFieldDidEndEditing:];
}

id objc_msgSend_textFieldShouldBeginEditing_(void *a1, const char *a2, ...)
{
  return [a1 textFieldShouldBeginEditing:];
}

id objc_msgSend_textFieldShouldClear_(void *a1, const char *a2, ...)
{
  return [a1 textFieldShouldClear:];
}

id objc_msgSend_textFieldShouldEndEditing_(void *a1, const char *a2, ...)
{
  return [a1 textFieldShouldEndEditing:];
}

id objc_msgSend_textFieldShouldReturn_(void *a1, const char *a2, ...)
{
  return [a1 textFieldShouldReturn:];
}

id objc_msgSend_textFont(void *a1, const char *a2, ...)
{
  return _[a1 textFont];
}

id objc_msgSend_textForShareToNotesFromDataSource_(void *a1, const char *a2, ...)
{
  return [a1 textForShareToNotesFromDataSource];
}

id objc_msgSend_textForUnplayedShort_(void *a1, const char *a2, ...)
{
  return [a1 textForUnplayedShort];
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _[a1 textLabel];
}

id objc_msgSend_textProperties(void *a1, const char *a2, ...)
{
  return _[a1 textProperties];
}

id objc_msgSend_textRectForBounds_limitedToNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 textRectForBounds:limitedToNumberOfLines:];
}

id objc_msgSend_textSettingChanged_value_(void *a1, const char *a2, ...)
{
  return [a1 textSettingChanged:value:];
}

id objc_msgSend_textSettingWithInitialValue_placeholder_identifier_changeHandler_(void *a1, const char *a2, ...)
{
  return [a1 textSettingWithInitialValue:placeholder:identifier:changeHandler:];
}

id objc_msgSend_textStackFrameForContentViewSize_artworkFrame_sideViewFrame_(void *a1, const char *a2, ...)
{
  return [a1 textStackFrameForContentViewSize:artworkFrame:sideViewFrame:];
}

id objc_msgSend_textStackView(void *a1, const char *a2, ...)
{
  return _[a1 textStackView];
}

id objc_msgSend_textStackViewClass(void *a1, const char *a2, ...)
{
  return _[a1 textStackViewClass];
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return _[a1 textView];
}

id objc_msgSend_textViewMaxXForArtworkFrame_sideViewFrame_(void *a1, const char *a2, ...)
{
  return [a1 textViewMaxXForArtworkFrame:sideViewFrame:];
}

id objc_msgSend_textViewMinXForArtworkFrame_sideViewFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textViewMinXForArtworkFrame:sideViewFrame:");
}

id objc_msgSend_thenWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 thenWithBlock:];
}

id objc_msgSend_threadDictionary(void *a1, const char *a2, ...)
{
  return _[a1 threadDictionary];
}

id objc_msgSend_thumbRectForOffset_(void *a1, const char *a2, ...)
{
  return [a1 thumbRectForOffset:];
}

id objc_msgSend_thumbRectForOn_(void *a1, const char *a2, ...)
{
  return [a1 thumbRectForOn:];
}

id objc_msgSend_timeChapters(void *a1, const char *a2, ...)
{
  return _[a1 timeChapters];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceDate:];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeRemaining(void *a1, const char *a2, ...)
{
  return _[a1 timeRemaining];
}

id objc_msgSend_timeRemainingStringForEpisode_abbreviated_(void *a1, const char *a2, ...)
{
  return [a1 timeRemainingStringForEpisode:abbreviated:];
}

id objc_msgSend_timeString(void *a1, const char *a2, ...)
{
  return _[a1 timeString];
}

id objc_msgSend_timeout(void *a1, const char *a2, ...)
{
  return _[a1 timeout];
}

id objc_msgSend_timeoutIntervalForResource(void *a1, const char *a2, ...)
{
  return _[a1 timeoutIntervalForResource];
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _[a1 timer];
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _[a1 timestamp];
}

id objc_msgSend_timestampBoundByNow_(void *a1, const char *a2, ...)
{
  return [a1 timestampBoundByNow:];
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_tintColorForTheme_(void *a1, const char *a2, ...)
{
  return [a1 tintColorForTheme:];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleExclusionPathsForButtonViewFrame_(void *a1, const char *a2, ...)
{
  return [a1 titleExclusionPathsForButtonViewFrame:];
}

id objc_msgSend_titleFont(void *a1, const char *a2, ...)
{
  return _[a1 titleFont];
}

id objc_msgSend_titleForAlertController(void *a1, const char *a2, ...)
{
  return _[a1 titleForAlertController];
}

id objc_msgSend_titleForAlertControllerBlock(void *a1, const char *a2, ...)
{
  return _[a1 titleForAlertControllerBlock];
}

id objc_msgSend_titleForCancelAction(void *a1, const char *a2, ...)
{
  return _[a1 titleForCancelAction];
}

id objc_msgSend_titleForCurrentPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 titleForCurrentPodcasts];
}

id objc_msgSend_titleForShareFromMode_(void *a1, const char *a2, ...)
{
  return [a1 titleForShareFromMode:];
}

id objc_msgSend_titleHeightForWidth_(void *a1, const char *a2, ...)
{
  return [a1 titleHeightForWidth:];
}

id objc_msgSend_titleImage(void *a1, const char *a2, ...)
{
  return _[a1 titleImage];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_titleNumberOfLines(void *a1, const char *a2, ...)
{
  return _[a1 titleNumberOfLines];
}

id objc_msgSend_titleNumberOfLinesForStyle_(void *a1, const char *a2, ...)
{
  return [a1 titleNumberOfLinesForStyle:];
}

id objc_msgSend_titleOriginXForViewWidth_artworkFrame_buttonFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleOriginXForViewWidth:artworkFrame:buttonFrame:style:");
}

id objc_msgSend_titleOriginYForArtworkFrame_style_(void *a1, const char *a2, ...)
{
  return [a1 titleOriginYForArtworkFrame:style:];
}

id objc_msgSend_titleSizeForViewWidth_titleOrigin_artworkFrame_buttonViewFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleSizeForViewWidth:titleOrigin:artworkFrame:buttonViewFrame:style:");
}

id objc_msgSend_titleTextColor(void *a1, const char *a2, ...)
{
  return _[a1 titleTextColor];
}

id objc_msgSend_titleTextStyle(void *a1, const char *a2, ...)
{
  return _[a1 titleTextStyle];
}

id objc_msgSend_titleTextView(void *a1, const char *a2, ...)
{
  return _[a1 titleTextView];
}

id objc_msgSend_toJSONString_(void *a1, const char *a2, ...)
{
  return [a1 toJSONString];
}

id objc_msgSend_toggle(void *a1, const char *a2, ...)
{
  return _[a1 toggle];
}

id objc_msgSend_toggleDownloadForIndex_(void *a1, const char *a2, ...)
{
  return [a1 toggleDownloadForIndex:];
}

id objc_msgSend_toggleOn_(void *a1, const char *a2, ...)
{
  return [a1 toggleOn:];
}

id objc_msgSend_toggleOn_animated_(void *a1, const char *a2, ...)
{
  return [a1 toggleOn:animated:];
}

id objc_msgSend_togglePodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 togglePodcastUuid:];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_tombstone(void *a1, const char *a2, ...)
{
  return _[a1 tombstone];
}

id objc_msgSend_topAlignLabel(void *a1, const char *a2, ...)
{
  return _[a1 topAlignLabel];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topLevelPlaylistsExcludingFoldersPredicate(void *a1, const char *a2, ...)
{
  return _[a1 topLevelPlaylistsExcludingFoldersPredicate];
}

id objc_msgSend_topLevelPlaylistsPredicate(void *a1, const char *a2, ...)
{
  return _[a1 topLevelPlaylistsPredicate];
}

id objc_msgSend_topicScoresFromMediaData_(void *a1, const char *a2, ...)
{
  return [a1 topicScoresFromMediaData:];
}

id objc_msgSend_totalDuration(void *a1, const char *a2, ...)
{
  return _[a1 totalDuration];
}

id objc_msgSend_totalEpisodeCount(void *a1, const char *a2, ...)
{
  return _[a1 totalEpisodeCount];
}

id objc_msgSend_totalTimeMillis(void *a1, const char *a2, ...)
{
  return _[a1 totalTimeMillis];
}

id objc_msgSend_totalUnplayedCount(void *a1, const char *a2, ...)
{
  return _[a1 totalUnplayedCount];
}

id objc_msgSend_touchAllMigrationVersions(void *a1, const char *a2, ...)
{
  return _[a1 touchAllMigrationVersions];
}

id objc_msgSend_touchCoreDataMigrationVersion(void *a1, const char *a2, ...)
{
  return _[a1 touchCoreDataMigrationVersion];
}

id objc_msgSend_touchInsets(void *a1, const char *a2, ...)
{
  return _[a1 touchInsets];
}

id objc_msgSend_touchLibraryMigrationVersion(void *a1, const char *a2, ...)
{
  return _[a1 touchLibraryMigrationVersion];
}

id objc_msgSend_trackIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 trackIdentifiers];
}

id objc_msgSend_trackNum(void *a1, const char *a2, ...)
{
  return _[a1 trackNum];
}

id objc_msgSend_tracklist(void *a1, const char *a2, ...)
{
  return _[a1 tracklist];
}

id objc_msgSend_tracksDefault(void *a1, const char *a2, ...)
{
  return _[a1 tracksDefault];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_transaction(void *a1, const char *a2, ...)
{
  return _[a1 transaction];
}

id objc_msgSend_transaction_didProcessResponseWithDomainVersion_(void *a1, const char *a2, ...)
{
  return [a1 transaction:didProcessResponseWithDomainVersion:];
}

id objc_msgSend_transaction_willProcessResponseWithDomainVersion_(void *a1, const char *a2, ...)
{
  return [a1 transaction:willProcessResponseWithDomainVersion:];
}

id objc_msgSend_transactionCancelledErrorWithTransaction_code_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionCancelledErrorWithTransaction:code:underlyingError:");
}

id objc_msgSend_transactionCancelledErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 transactionCancelledErrorWithTransaction:underlyingError:];
}

id objc_msgSend_transactionClamps(void *a1, const char *a2, ...)
{
  return _[a1 transactionClamps];
}

id objc_msgSend_transactionDescription(void *a1, const char *a2, ...)
{
  return _[a1 transactionDescription];
}

id objc_msgSend_transactionMissingDomainErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 transactionMissingDomainErrorWithTransaction:underlyingError:];
}

id objc_msgSend_transactionMissingURLErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 transactionMissingURLErrorWithTransaction:underlyingError:];
}

id objc_msgSend_transactionNumber(void *a1, const char *a2, ...)
{
  return _[a1 transactionNumber];
}

id objc_msgSend_transactionProcessor(void *a1, const char *a2, ...)
{
  return _[a1 transactionProcessor];
}

id objc_msgSend_transactionTimeoutErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionTimeoutErrorWithTransaction:underlyingError:");
}

id objc_msgSend_transcriptIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 transcriptIdentifier];
}

id objc_msgSend_transcriptProvider(void *a1, const char *a2, ...)
{
  return _[a1 transcriptProvider];
}

id objc_msgSend_transferDuration(void *a1, const char *a2, ...)
{
  return _[a1 transferDuration];
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 transitionCoordinator];
}

id objc_msgSend_triggeredByFromFeedUpdateNotification_(void *a1, const char *a2, ...)
{
  return [a1 triggeredByFromFeedUpdateNotification];
}

id objc_msgSend_truePredicate(void *a1, const char *a2, ...)
{
  return _[a1 truePredicate];
}

id objc_msgSend_tuckHeader(void *a1, const char *a2, ...)
{
  return _[a1 tuckHeader];
}

id objc_msgSend_twitterShareURL(void *a1, const char *a2, ...)
{
  return _[a1 twitterShareURL];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uberArtworkTextPrimaryColor(void *a1, const char *a2, ...)
{
  return _[a1 uberArtworkTextPrimaryColor];
}

id objc_msgSend_uberArtworkTextQuaternaryColor(void *a1, const char *a2, ...)
{
  return _[a1 uberArtworkTextQuaternaryColor];
}

id objc_msgSend_uberArtworkTextSecondaryColor(void *a1, const char *a2, ...)
{
  return _[a1 uberArtworkTextSecondaryColor];
}

id objc_msgSend_uberArtworkTextTertiaryColor(void *a1, const char *a2, ...)
{
  return _[a1 uberArtworkTextTertiaryColor];
}

id objc_msgSend_uberBackgroundImageURL(void *a1, const char *a2, ...)
{
  return _[a1 uberBackgroundImageURL];
}

id objc_msgSend_uberBackgroundJoeColor(void *a1, const char *a2, ...)
{
  return _[a1 uberBackgroundJoeColor];
}

id objc_msgSend_uiShared(void *a1, const char *a2, ...)
{
  return _[a1 uiShared];
}

id objc_msgSend_unarchivedIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 unarchivedIdentifiers];
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return [a1 unarchivedObjectOfClass:fromData:error:];
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return [a1 unarchivedObjectOfClasses:fromData:error:];
}

id objc_msgSend_unavailableReasonForEpisode_(void *a1, const char *a2, ...)
{
  return [a1 unavailableReasonForEpisode:];
}

id objc_msgSend_unbox_(void *a1, const char *a2, ...)
{
  return [a1 unbox];
}

id objc_msgSend_uncalculatedLevel(void *a1, const char *a2, ...)
{
  return _[a1 uncalculatedLevel];
}

id objc_msgSend_unionOrderedSet_(void *a1, const char *a2, ...)
{
  return [a1 unionOrderedSet];
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return [a1 unionSet:];
}

id objc_msgSend_uniqueIdentifierForEpisodeInPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 uniqueIdentifierForEpisodeInPlayerItem:];
}

id objc_msgSend_uniqueIdentifierForObject_(void *a1, const char *a2, ...)
{
  return [a1 uniqueIdentifierForObject];
}

id objc_msgSend_uniqueIdentifierForPodcastInPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 uniqueIdentifierForPodcastInPlayerItem:];
}

id objc_msgSend_uniquePodcastUuidCount(void *a1, const char *a2, ...)
{
  return _[a1 uniquePodcastUuidCount];
}

id objc_msgSend_universalPlaybackQueueIdentifierForPodcastUuid_podcastFeedUrl_podcastStoreId_(void *a1, const char *a2, ...)
{
  return [a1 universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:];
}

id objc_msgSend_universalPlaybackQueueIdentifierForPodcastUuid_podcastFeedUrl_podcastStoreId_episodeUuid_episodeGuid_episodeStoreId_sampPlaybackOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:episodeUuid:episodeGuid:episodeStoreId:sampPlaybackOrder:");
}

id objc_msgSend_universalPlaybackQueueIdentifierForStationUuid_episodeUuid_episodeGuid_episodeStoreId_podcastFeedUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "universalPlaybackQueueIdentifierForStationUuid:episodeUuid:episodeGuid:episodeStoreId:podcastFeedUrl:");
}

id objc_msgSend_universalStore(void *a1, const char *a2, ...)
{
  return _[a1 universalStore];
}

id objc_msgSend_unknownErrorWithTransaction_underlyingError_(void *a1, const char *a2, ...)
{
  return [a1 unknownErrorWithTransaction:];
}

id objc_msgSend_unlock(void *a1, const char *a2, ...)
{
  return _[a1 unlock];
}

id objc_msgSend_unlockWithCondition_(void *a1, const char *a2, ...)
{
  return [a1 unlockWithCondition:];
}

id objc_msgSend_unplayedCount(void *a1, const char *a2, ...)
{
  return _[a1 unplayedCount];
}

id objc_msgSend_unplayedIcon(void *a1, const char *a2, ...)
{
  return _[a1 unplayedIcon];
}

id objc_msgSend_unplayedSections(void *a1, const char *a2, ...)
{
  return _[a1 unplayedSections];
}

id objc_msgSend_unplayedTab(void *a1, const char *a2, ...)
{
  return _[a1 unplayedTab];
}

id objc_msgSend_unregisterForRemoteNotifications(void *a1, const char *a2, ...)
{
  return _[a1 unregisterForRemoteNotifications];
}

id objc_msgSend_unregisterPushNotifications(void *a1, const char *a2, ...)
{
  return _[a1 unregisterPushNotifications];
}

id objc_msgSend_unsafeBookmarkEpisode_onTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 unsafeBookmarkEpisode:onTimestamp:];
}

id objc_msgSend_unsafeBookmarkEpisode_onTimestamp_shouldDownloadEpisode_from_(void *a1, const char *a2, ...)
{
  return [a1 unsafeBookmarkEpisode:onTimestamp:shouldDownloadEpisode:from:];
}

id objc_msgSend_unsafeCategoriesWithRelationshipToPodcastAdamID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsafeCategoriesWithRelationshipToPodcastAdamID:");
}

id objc_msgSend_unsafeDidBumpLastDatePlayedFor_(void *a1, const char *a2, ...)
{
  return [a1 unsafeDidBumpLastDatePlayedFor:];
}

id objc_msgSend_unsafeEnableSubscriptionOnPodcastUUID_from_context_(void *a1, const char *a2, ...)
{
  return [a1 unsafeEnableSubscriptionOnPodcastUUID:from:context:];
}

id objc_msgSend_unsafeEpisodePlayedBeyondThresholdForFirstTime_from_(void *a1, const char *a2, ...)
{
  return [a1 unsafeEpisodePlayedBeyondThresholdForFirstTime:from:];
}

id objc_msgSend_unsafeIngestFeedCategory_ctx_(void *a1, const char *a2, ...)
{
  return [a1 unsafeIngestFeedCategory:ctx:];
}

id objc_msgSend_unsafeIngestPage(void *a1, const char *a2, ...)
{
  return _[a1 unsafeIngestPage];
}

id objc_msgSend_unsafeInterestForAdamID_(void *a1, const char *a2, ...)
{
  return [a1 unsafeInterestForAdamID:];
}

id objc_msgSend_unsafeRemoveEpisodeFromBookmarks_from_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsafeRemoveEpisodeFromBookmarks:from:");
}

id objc_msgSend_unsafeRemoveFromBookmarksEpisodes_context_(void *a1, const char *a2, ...)
{
  return [a1 unsafeRemoveFromBookmarksEpisodes:context:];
}

id objc_msgSend_unsafeUpdateEpisode_forRemoteEpisodeDictionary_(void *a1, const char *a2, ...)
{
  return [a1 unsafeUpdateEpisode:forRemoteEpisodeDictionary:];
}

id objc_msgSend_unsafeUpdateEpisodeLevelsWithShowUUID_on_(void *a1, const char *a2, ...)
{
  return [a1 unsafeUpdateEpisodeLevelsWithShowUUID:];
}

id objc_msgSend_unsafeUpdateEpisodeShowTypeSpecificLevelsWithShowUUID_on_(void *a1, const char *a2, ...)
{
  return [a1 unsafeUpdateEpisodeShowTypeSpecificLevelsWithShowUUID:];
}

id objc_msgSend_unsafeUpdateRelatedFieldsIfUpNextChangedForPodcast_upNextResult_ctx_(void *a1, const char *a2, ...)
{
  return [a1 unsafeUpdateRelatedFieldsIfUpNextChangedForPodcast:upNextResult:ctx:];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongLongValue];
}

id objc_msgSend_unsubscribeFromLifecycleEventNotifications(void *a1, const char *a2, ...)
{
  return _[a1 unsubscribeFromLifecycleEventNotifications];
}

id objc_msgSend_unsupportedClient(void *a1, const char *a2, ...)
{
  return _[a1 unsupportedClient];
}

id objc_msgSend_unsuppressAutomaticDownloadsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 unsuppressAutomaticDownloadsIfNeeded];
}

id objc_msgSend_unvisitedEpisodes(void *a1, const char *a2, ...)
{
  return _[a1 unvisitedEpisodes];
}

id objc_msgSend_unvisitedPodcastsToUnsubscribeIn_mismatch_version_(void *a1, const char *a2, ...)
{
  return [a1 unvisitedPodcastsToUnsubscribeIn:mismatch:version:];
}

id objc_msgSend_upNextController(void *a1, const char *a2, ...)
{
  return _[a1 upNextController];
}

id objc_msgSend_upNextForPodcastUuid_ctx_(void *a1, const char *a2, ...)
{
  return [a1 upNextForPodcastUuid:ctx:];
}

id objc_msgSend_upNextForPodcastUuid_excludeExplicit_ctx_(void *a1, const char *a2, ...)
{
  return [a1 upNextForPodcastUuid:excludeExplicit:ctx:];
}

id objc_msgSend_upNextManifest(void *a1, const char *a2, ...)
{
  return _[a1 upNextManifest];
}

id objc_msgSend_upNextOffset(void *a1, const char *a2, ...)
{
  return _[a1 upNextOffset];
}

id objc_msgSend_upNextQueueIntent(void *a1, const char *a2, ...)
{
  return _[a1 upNextQueueIntent];
}

id objc_msgSend_upNextResultsController(void *a1, const char *a2, ...)
{
  return _[a1 upNextResultsController];
}

id objc_msgSend_update(void *a1, const char *a2, ...)
{
  return _[a1 update];
}

id objc_msgSend_updateAccountForLastSync(void *a1, const char *a2, ...)
{
  return _[a1 updateAccountForLastSync];
}

id objc_msgSend_updateActionSheet(void *a1, const char *a2, ...)
{
  return _[a1 updateActionSheet];
}

id objc_msgSend_updateActionSheetsAndPopovers(void *a1, const char *a2, ...)
{
  return _[a1 updateActionSheetsAndPopovers];
}

id objc_msgSend_updateAdamId_forEpisode_(void *a1, const char *a2, ...)
{
  return [a1 updateAdamId:forEpisode:];
}

id objc_msgSend_updateAdamIdForPodcast_withFeedURLs_(void *a1, const char *a2, ...)
{
  return [a1 updateAdamIdForPodcast:withFeedURLs:];
}

id objc_msgSend_updateAddingShowsWithStoreCollectionIds_(void *a1, const char *a2, ...)
{
  return [a1 updateAddingShowsWithStoreCollectionIds:];
}

id objc_msgSend_updateAllPlaylistsWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 updateAllPlaylistsWithCompletion:];
}

id objc_msgSend_updateAllPodcastsInBackgroundWithSource_started_(void *a1, const char *a2, ...)
{
  return [a1 updateAllPodcastsInBackgroundWithSource:started:];
}

id objc_msgSend_updateAllPodcastsTo_(void *a1, const char *a2, ...)
{
  return [a1 updateAllPodcastsTo:];
}

id objc_msgSend_updateAllPodcastsUserInitiated_forced_source_started_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAllPodcastsUserInitiated:forced:source:started:");
}

id objc_msgSend_updateArtworkForShow_useBackgroundFetch_fetchUberImage_(void *a1, const char *a2, ...)
{
  return [a1 updateArtworkForShow:useBackgroundFetch:fetchUberImage:];
}

id objc_msgSend_updateAssetStatusIcons(void *a1, const char *a2, ...)
{
  return _[a1 updateAssetStatusIcons];
}

id objc_msgSend_updateAttributes_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 updateAttributes:forIndexPath:];
}

id objc_msgSend_updateAttributes_withTopAlignmentGuide_andLastYOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAttributes:withTopAlignmentGuide:andLastYOrigin:");
}

id objc_msgSend_updateAvg(void *a1, const char *a2, ...)
{
  return _[a1 updateAvg];
}

id objc_msgSend_updateCacheForEpisode_(void *a1, const char *a2, ...)
{
  return [a1 updateCacheForEpisode:];
}

id objc_msgSend_updateCachedLayoutAttributesForElementsInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCachedLayoutAttributesForElementsInRect:");
}

id objc_msgSend_updateCellPresentationAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCellPresentationAttributes:");
}

id objc_msgSend_updateCellShadows_animated_(void *a1, const char *a2, ...)
{
  return [a1 updateCellShadows:animated:];
}

id objc_msgSend_updateColors(void *a1, const char *a2, ...)
{
  return _[a1 updateColors];
}

id objc_msgSend_updateColorsForBarsView_(void *a1, const char *a2, ...)
{
  return [a1 updateColorsForBarsView:];
}

id objc_msgSend_updateContainerOrder_(void *a1, const char *a2, ...)
{
  return [a1 updateContainerOrder:];
}

id objc_msgSend_updateCount(void *a1, const char *a2, ...)
{
  return _[a1 updateCount];
}

id objc_msgSend_updateCursorPosition_(void *a1, const char *a2, ...)
{
  return [a1 updateCursorPosition:];
}

id objc_msgSend_updateDRMKeysForDownloadsWithUrlProtocolDelegate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDRMKeysForDownloadsWithUrlProtocolDelegate:completionHandler:");
}

id objc_msgSend_updateDebugUI(void *a1, const char *a2, ...)
{
  return _[a1 updateDebugUI];
}

id objc_msgSend_updateDescriptionText(void *a1, const char *a2, ...)
{
  return _[a1 updateDescriptionText];
}

id objc_msgSend_updateDisabledReason(void *a1, const char *a2, ...)
{
  return _[a1 updateDisabledReason];
}

id objc_msgSend_updateDownloadCount(void *a1, const char *a2, ...)
{
  return _[a1 updateDownloadCount];
}

id objc_msgSend_updateEnabled(void *a1, const char *a2, ...)
{
  return _[a1 updateEnabled];
}

id objc_msgSend_updateEntitlementState(void *a1, const char *a2, ...)
{
  return _[a1 updateEntitlementState];
}

id objc_msgSend_updateEpisode_andPlayerItem_withElapsedTime_andDuration_onMediaItemWillChange_(void *a1, const char *a2, ...)
{
  return [a1 updateEpisode:andPlayerItem:withElapsedTime:andDuration:onMediaItemWillChange:];
}

id objc_msgSend_updateEpisode_withUPPMetadata_(void *a1, const char *a2, ...)
{
  return [a1 updateEpisode:withUPPMetadata:];
}

id objc_msgSend_updateEpisodeForPlayerUpdateForceSave_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateEpisodeForPlayerUpdateForceSave:");
}

id objc_msgSend_updateEpisodeObserverForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 updateEpisodeObserverForPodcast:];
}

id objc_msgSend_updateEpisodesForSettings_ctx_(void *a1, const char *a2, ...)
{
  return [a1 updateEpisodesForSettings:ctx:];
}

id objc_msgSend_updateEpisodesMetadataIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 updateEpisodesMetadataIdentifiers];
}

id objc_msgSend_updateFeedForFeedUrl_cloudSyncFeedUrl_podcastStoreId_triggerBy_userInitiated_forceBootstrap_useBackgroundFetch_source_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFeedForFeedUrl:cloudSyncFeedUrl:podcastStoreId:triggerBy:userInitiated:forceBootstrap:useBackgroundFetch:source:completion:");
}

id objc_msgSend_updateFeedForFeedUrl_cloudSyncFeedUrl_podcastStoreId_triggerBy_userInitiated_forceBootstrap_useBackgroundFetch_source_isSubscribing_feedDownloadedHook_preProcessFeedHook_postProcessFeedHook_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFeedForFeedUrl:cloudSyncFeedUrl:podcastStoreId:triggerBy:userInitiated:forceBootstrap:useBackgroundFetch:source:isSubscribing:feedDownloadedHook:preProcessFeedHook:postProcessFeedHook:completion:");
}

id objc_msgSend_updateFlagsForPodcastUuid_predicateForUnplayedTab_predicateForUserEpisodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFlagsForPodcastUuid:predicateForUnplayedTab:predicateForUserEpisodes:");
}

id objc_msgSend_updateFonts(void *a1, const char *a2, ...)
{
  return _[a1 updateFonts];
}

id objc_msgSend_updateFooterText(void *a1, const char *a2, ...)
{
  return _[a1 updateFooterText];
}

id objc_msgSend_updateFooterTextViewVisbility(void *a1, const char *a2, ...)
{
  return _[a1 updateFooterTextViewVisbility];
}

id objc_msgSend_updateGlobalDownloadPolicyIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 updateGlobalDownloadPolicyIfNecessary];
}

id objc_msgSend_updateIconView(void *a1, const char *a2, ...)
{
  return _[a1 updateIconView];
}

id objc_msgSend_updateIcons(void *a1, const char *a2, ...)
{
  return _[a1 updateIcons];
}

id objc_msgSend_updateIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 updateIdentifiers];
}

id objc_msgSend_updateIndexRequests(void *a1, const char *a2, ...)
{
  return _[a1 updateIndexRequests];
}

id objc_msgSend_updateIsCurrentPlayerItemState(void *a1, const char *a2, ...)
{
  return _[a1 updateIsCurrentPlayerItemState];
}

id objc_msgSend_updateLastTouchDate(void *a1, const char *a2, ...)
{
  return _[a1 updateLastTouchDate];
}

id objc_msgSend_updateLaunchCommandsWithConfigurationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLaunchCommandsWithConfigurationHandler:");
}

id objc_msgSend_updateLocalCacheIfNeededWithData_version_(void *a1, const char *a2, ...)
{
  return [a1 updateLocalCacheIfNeededWithData:version:];
}

id objc_msgSend_updateMacPlaybackShortcutItemsForPlaybackState_(void *a1, const char *a2, ...)
{
  return [a1 updateMacPlaybackShortcutItemsForPlaybackState:];
}

id objc_msgSend_updateMediaLibraryFromNotification_(void *a1, const char *a2, ...)
{
  return [a1 updateMediaLibraryFromNotification:];
}

id objc_msgSend_updateMediaLibraryItem_playhead_playState_playCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMediaLibraryItem:playhead:playState:playCount:");
}

id objc_msgSend_updateMetadataText(void *a1, const char *a2, ...)
{
  return _[a1 updateMetadataText];
}

id objc_msgSend_updateMoreButtonVisibility(void *a1, const char *a2, ...)
{
  return _[a1 updateMoreButtonVisibility];
}

id objc_msgSend_updateNotificationSettingsToMatchSubscription_(void *a1, const char *a2, ...)
{
  return [a1 updateNotificationSettingsToMatchSubscription:];
}

id objc_msgSend_updateNowPlayingDurationSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 updateNowPlayingDurationSnapshot];
}

id objc_msgSend_updateOperationQueue(void *a1, const char *a2, ...)
{
  return _[a1 updateOperationQueue];
}

id objc_msgSend_updateOverlayForIsNew(void *a1, const char *a2, ...)
{
  return _[a1 updateOverlayForIsNew];
}

id objc_msgSend_updatePlayStatusIcons(void *a1, const char *a2, ...)
{
  return _[a1 updatePlayStatusIcons];
}

id objc_msgSend_updatePlaybackPositionWithEpisodeStoreId_completed_position_account_completion_(void *a1, const char *a2, ...)
{
  return [a1 updatePlaybackPositionWithEpisodeStoreId:completed:position:account:completion:];
}

id objc_msgSend_updatePlaybackSettingIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updatePlaybackSettingIfNeeded];
}

id objc_msgSend_updatePlaylist_inContext_(void *a1, const char *a2, ...)
{
  return [a1 updatePlaylist:inContext:];
}

id objc_msgSend_updatePlaylistWithUuid_inContext_(void *a1, const char *a2, ...)
{
  return [a1 updatePlaylistWithUuid:inContext:];
}

id objc_msgSend_updatePlaylistWithUuid_inContext_applyAdditionalChangesBlock_(void *a1, const char *a2, ...)
{
  return [a1 updatePlaylistWithUuid:inContext:applyAdditionalChangesBlock:];
}

id objc_msgSend_updatePlaylistsWithUuids_(void *a1, const char *a2, ...)
{
  return [a1 updatePlaylistsWithUuids:];
}

id objc_msgSend_updatePlaylistsWithUuids_context_applyAdditionalChangesBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaylistsWithUuids:context:applyAdditionalChangesBlock:");
}

id objc_msgSend_updatePodcastCount(void *a1, const char *a2, ...)
{
  return _[a1 updatePodcastCount];
}

id objc_msgSend_updatePodcastSizeEstimation(void *a1, const char *a2, ...)
{
  return _[a1 updatePodcastSizeEstimation];
}

id objc_msgSend_updatePodcastSizeEstimationWorkController(void *a1, const char *a2, ...)
{
  return _[a1 updatePodcastSizeEstimationWorkController];
}

id objc_msgSend_updatePodcastWithEpisodeAdamId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePodcastWithEpisodeAdamId:completion:");
}

id objc_msgSend_updatePodcastWithStoreId_completion_(void *a1, const char *a2, ...)
{
  return [a1 updatePodcastWithStoreId:completion:];
}

id objc_msgSend_updatePodcastWithStoreId_triggerBy_userInitiated_forced_source_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePodcastWithStoreId:triggerBy:userInitiated:forced:source:completion:");
}

id objc_msgSend_updatePodcastWithUUID_userInitiated_forced_forceBootstrap_source_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePodcastWithUUID:userInitiated:forced:forceBootstrap:source:completion:");
}

id objc_msgSend_updatePodcastWithUuid_withFeed_originalFeedUrl_source_(void *a1, const char *a2, ...)
{
  return [a1 updatePodcastWithUuid:withFeed:originalFeedUrl:source:];
}

id objc_msgSend_updatePodcastsToAdd_addingPodcastIfNeeded_hasLocalPodcast_(void *a1, const char *a2, ...)
{
  return [a1 updatePodcastsToAdd:addingPodcastIfNeeded:hasLocalPodcast:];
}

id objc_msgSend_updatePodcastsToUnsubscribe_remotePodcast_localPodcast_(void *a1, const char *a2, ...)
{
  return [a1 updatePodcastsToUnsubscribe:remotePodcast:localPodcast:];
}

id objc_msgSend_updatePopover(void *a1, const char *a2, ...)
{
  return _[a1 updatePopover];
}

id objc_msgSend_updatePredicate(void *a1, const char *a2, ...)
{
  return _[a1 updatePredicate];
}

id objc_msgSend_updatePredicateDuration(void *a1, const char *a2, ...)
{
  return _[a1 updatePredicateDuration];
}

id objc_msgSend_updatePreferredSkipDurationsFromUserDefaults_forCommandCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePreferredSkipDurationsFromUserDefaults:forCommandCenter:");
}

id objc_msgSend_updateQueue(void *a1, const char *a2, ...)
{
  return _[a1 updateQueue];
}

id objc_msgSend_updateRefreshControlEnabledState(void *a1, const char *a2, ...)
{
  return _[a1 updateRefreshControlEnabledState];
}

id objc_msgSend_updateRefreshEnabledState(void *a1, const char *a2, ...)
{
  return _[a1 updateRefreshEnabledState];
}

id objc_msgSend_updateRemoteSkipPreferenceFromDefaults_(void *a1, const char *a2, ...)
{
  return [a1 updateRemoteSkipPreferenceFromDefaults:];
}

id objc_msgSend_updateRowHeight(void *a1, const char *a2, ...)
{
  return _[a1 updateRowHeight];
}

id objc_msgSend_updateSearchableIndexWithReason_searchableIndex_entityLoadingBlock_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSearchableIndexWithReason:searchableIndex:entityLoadingBlock:completion:");
}

id objc_msgSend_updateSetting_value_(void *a1, const char *a2, ...)
{
  return [a1 updateSetting:value:];
}

id objc_msgSend_updateSettingForSettingValueChangeByUpdatingCellAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSettingForSettingValueChangeByUpdatingCellAtIndexPath:");
}

id objc_msgSend_updateSettings_(void *a1, const char *a2, ...)
{
  return [a1 updateSettings:];
}

id objc_msgSend_updateSettingsForLocalPodcast_remotePodcast_ctx_(void *a1, const char *a2, ...)
{
  return [a1 updateSettingsForLocalPodcast:remotePodcast:ctx:];
}

id objc_msgSend_updateSettingsIfNeededForLocalPodcast_remotePodcast_(void *a1, const char *a2, ...)
{
  return [a1 updateSettingsIfNeededForLocalPodcast:remotePodcast:];
}

id objc_msgSend_updateShortcutItems(void *a1, const char *a2, ...)
{
  return _[a1 updateShortcutItems];
}

id objc_msgSend_updateShowSetting_forSettings_(void *a1, const char *a2, ...)
{
  return [a1 updateShowSetting:forSettings:];
}

id objc_msgSend_updateSizeIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateSizeIfNeeded];
}

id objc_msgSend_updateStateForBarsView_(void *a1, const char *a2, ...)
{
  return [a1 updateStateForBarsView:];
}

id objc_msgSend_updateStationsWithUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 updateStationsWithUUIDs:];
}

id objc_msgSend_updateStdDev(void *a1, const char *a2, ...)
{
  return _[a1 updateStdDev];
}

id objc_msgSend_updateStoreInfoForEpisodesAndPodcast_skipPodcastLastCheckDate_(void *a1, const char *a2, ...)
{
  return [a1 updateStoreInfoForEpisodesAndPodcast:skipPodcastLastCheckDate:];
}

id objc_msgSend_updateStoreInfoForEpisodesInPodcast_withEpisodeIds_andEpisodesWithGuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStoreInfoForEpisodesInPodcast:withEpisodeIds:andEpisodesWithGuid:");
}

id objc_msgSend_updateStoreInfoForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 updateStoreInfoForPodcast:];
}

id objc_msgSend_updateSubscriptionsLastSyncTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 updateSubscriptionsLastSyncTimestamp];
}

id objc_msgSend_updateSubscriptionsLastSyncTimestampFor_(void *a1, const char *a2, ...)
{
  return [a1 updateSubscriptionsLastSyncTimestampFor:];
}

id objc_msgSend_updateSubscriptionsSyncVersionFor_newValue_(void *a1, const char *a2, ...)
{
  return [a1 updateSubscriptionsSyncVersionFor:newValue:];
}

id objc_msgSend_updateTTMLIDFrom_toNewID_hasDownloadedContent_forEpisodeAdamID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTTMLIDFrom:toNewID:hasDownloadedContent:forEpisodeAdamID:");
}

id objc_msgSend_updateTitle_(void *a1, const char *a2, ...)
{
  return [a1 updateTitle:];
}

id objc_msgSend_updateTitleFontIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateTitleFontIfNeeded];
}

id objc_msgSend_updateTitleIncludingIcons(void *a1, const char *a2, ...)
{
  return _[a1 updateTitleIncludingIcons];
}

id objc_msgSend_updateTranscriptInformation_transcriptSource_(void *a1, const char *a2, ...)
{
  return [a1 updateTranscriptInformation:transcriptSource:];
}

id objc_msgSend_updateUPPEpisodeUuid_bookmarkTime_(void *a1, const char *a2, ...)
{
  return [a1 updateUPPEpisodeUuid:bookmarkTime:];
}

id objc_msgSend_updateUPPIdentifierIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateUPPIdentifierIfNeeded];
}

id objc_msgSend_updateUPPMetadata_fromUPPRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUPPMetadata:fromUPPRecord:");
}

id objc_msgSend_updateUPPTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 updateUPPTimestamp];
}

id objc_msgSend_updateUnplayedBadgeCount(void *a1, const char *a2, ...)
{
  return _[a1 updateUnplayedBadgeCount];
}

id objc_msgSend_updateUnplayedCount(void *a1, const char *a2, ...)
{
  return _[a1 updateUnplayedCount];
}

id objc_msgSend_updateWithObject_(void *a1, const char *a2, ...)
{
  return [a1 updateWithObject:];
}

id objc_msgSend_updatedEpisodeCount(void *a1, const char *a2, ...)
{
  return _[a1 updatedEpisodeCount];
}

id objc_msgSend_updatedFeedURL(void *a1, const char *a2, ...)
{
  return _[a1 updatedFeedURL];
}

id objc_msgSend_updatedObjectIDs(void *a1, const char *a2, ...)
{
  return _[a1 updatedObjectIDs];
}

id objc_msgSend_updatedProperties(void *a1, const char *a2, ...)
{
  return _[a1 updatedProperties];
}

id objc_msgSend_updaterType(void *a1, const char *a2, ...)
{
  return _[a1 updaterType];
}

id objc_msgSend_updatingCount(void *a1, const char *a2, ...)
{
  return _[a1 updatingCount];
}

id objc_msgSend_upgradeToAlternatePaidVersionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 upgradeToAlternatePaidVersionIfNeeded];
}

id objc_msgSend_upgradeToLocalEpisodeBackedItemWithEpisodeUUID_podcastUUID_(void *a1, const char *a2, ...)
{
  return [a1 upgradeToLocalEpisodeBackedItemWithEpisodeUUID:podcastUUID:];
}

id objc_msgSend_uppDataSource(void *a1, const char *a2, ...)
{
  return _[a1 uppDataSource];
}

id objc_msgSend_uppLastSyncTime(void *a1, const char *a2, ...)
{
  return _[a1 uppLastSyncTime];
}

id objc_msgSend_uppMetadataForMetadataIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 uppMetadataForMetadataIdentifier:];
}

id objc_msgSend_uppSyncDirtyFlag(void *a1, const char *a2, ...)
{
  return _[a1 uppSyncDirtyFlag];
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_uppercaseStringWithLocale_(void *a1, const char *a2, ...)
{
  return [a1 uppercaseStringWithLocale:];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_urlRawString(void *a1, const char *a2, ...)
{
  return _[a1 urlRawString];
}

id objc_msgSend_urlRequest(void *a1, const char *a2, ...)
{
  return _[a1 urlRequest];
}

id objc_msgSend_urlString(void *a1, const char *a2, ...)
{
  return _[a1 urlString];
}

id objc_msgSend_useBackgroundFetch(void *a1, const char *a2, ...)
{
  return _[a1 useBackgroundFetch];
}

id objc_msgSend_useBackgroundFetchForFeedDownloads(void *a1, const char *a2, ...)
{
  return _[a1 useBackgroundFetchForFeedDownloads];
}

id objc_msgSend_useLayoutForSkinnyPhones(void *a1, const char *a2, ...)
{
  return _[a1 useLayoutForSkinnyPhones];
}

id objc_msgSend_useSelfSizingCells(void *a1, const char *a2, ...)
{
  return _[a1 useSelfSizingCells];
}

id objc_msgSend_userAcceptedSyncTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 userAcceptedSyncTimestamp];
}

id objc_msgSend_userActivityContainsPlayhead(void *a1, const char *a2, ...)
{
  return _[a1 userActivityContainsPlayhead];
}

id objc_msgSend_userCanceledAuth(void *a1, const char *a2, ...)
{
  return _[a1 userCanceledAuth];
}

id objc_msgSend_userCancelledSignInBackOffUntil(void *a1, const char *a2, ...)
{
  return _[a1 userCancelledSignInBackOffUntil];
}

id objc_msgSend_userClampErrorWithTransaction_retrySeconds_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userClampErrorWithTransaction:retrySeconds:underlyingError:");
}

id objc_msgSend_userDefaultPropertiesAffectingPredicates(void *a1, const char *a2, ...)
{
  return _[a1 userDefaultPropertiesAffectingPredicates];
}

id objc_msgSend_userDeleted(void *a1, const char *a2, ...)
{
  return _[a1 userDeleted];
}

id objc_msgSend_userDriven(void *a1, const char *a2, ...)
{
  return _[a1 userDriven];
}

id objc_msgSend_userEpisode(void *a1, const char *a2, ...)
{
  return _[a1 userEpisode];
}

id objc_msgSend_userHasSomePodcasts(void *a1, const char *a2, ...)
{
  return _[a1 userHasSomePodcasts];
}

id objc_msgSend_userId(void *a1, const char *a2, ...)
{
  return _[a1 userId];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInfoValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 userInfoValueForKey:];
}

id objc_msgSend_userInitiated(void *a1, const char *a2, ...)
{
  return _[a1 userInitiated];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userInterfaceLayoutDirectionForSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return [a1 userInterfaceLayoutDirectionForSemanticContentAttribute:];
}

id objc_msgSend_userManifest(void *a1, const char *a2, ...)
{
  return _[a1 userManifest];
}

id objc_msgSend_userNotificationCenter_openSettingsForNotification_(void *a1, const char *a2, ...)
{
  return [a1 userNotificationCenter:openSettingsForNotification:];
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _[a1 username];
}

id objc_msgSend_usesCleanEpisodeTitles(void *a1, const char *a2, ...)
{
  return _[a1 usesCleanEpisodeTitles];
}

id objc_msgSend_uti(void *a1, const char *a2, ...)
{
  return _[a1 uti];
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _[a1 uuid];
}

id objc_msgSend_uuidOrder(void *a1, const char *a2, ...)
{
  return _[a1 uuidOrder];
}

id objc_msgSend_uuidSet(void *a1, const char *a2, ...)
{
  return _[a1 uuidSet];
}

id objc_msgSend_uuidToManagedObjectIDMap(void *a1, const char *a2, ...)
{
  return _[a1 uuidToManagedObjectIDMap];
}

id objc_msgSend_uuidToPlayerItemMap(void *a1, const char *a2, ...)
{
  return _[a1 uuidToPlayerItemMap];
}

id objc_msgSend_uuids(void *a1, const char *a2, ...)
{
  return _[a1 uuids];
}

id objc_msgSend_uuidsByRemovingDownloadCandidatesFromEpisodeUuids_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uuidsByRemovingDownloadCandidatesFromEpisodeUuids:");
}

id objc_msgSend_validate(void *a1, const char *a2, ...)
{
  return _[a1 validate];
}

id objc_msgSend_validateDataFromSuccessfulSetTransaction_forKey_(void *a1, const char *a2, ...)
{
  return [a1 validateDataFromSuccessfulSetTransaction:forKey:];
}

id objc_msgSend_validateDownloadedEpisodesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateDownloadedEpisodesWithCompletion:");
}

id objc_msgSend_validatedIdNumberFromStoreId_(void *a1, const char *a2, ...)
{
  return [a1 validatedIdNumberFromStoreId:];
}

id objc_msgSend_validationError(void *a1, const char *a2, ...)
{
  return _[a1 validationError];
}

id objc_msgSend_validationManager(void *a1, const char *a2, ...)
{
  return _[a1 validationManager];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForIndex_(void *a1, const char *a2, ...)
{
  return [a1 valueForIndex:];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:];
}

id objc_msgSend_valueForKey_shareMode_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:shareMode:];
}

id objc_msgSend_valueForProperty_(void *a1, const char *a2, ...)
{
  return [a1 valueForProperty:];
}

id objc_msgSend_valueSet(void *a1, const char *a2, ...)
{
  return _[a1 valueSet];
}

id objc_msgSend_valueWithCGSize_(void *a1, const char *a2, ...)
{
  return [a1 valueWithCGSize:];
}

id objc_msgSend_valueWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 valueWithCompletion:];
}

id objc_msgSend_vc(void *a1, const char *a2, ...)
{
  return _[a1 vc];
}

id objc_msgSend_vendorID(void *a1, const char *a2, ...)
{
  return _[a1 vendorID];
}

id objc_msgSend_verboseDisplayString(void *a1, const char *a2, ...)
{
  return _[a1 verboseDisplayString];
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _[a1 version];
}

id objc_msgSend_versionForGetTransaction_key_(void *a1, const char *a2, ...)
{
  return [a1 versionForGetTransaction:key:];
}

id objc_msgSend_versionForKey_(void *a1, const char *a2, ...)
{
  return [a1 versionForKey:];
}

id objc_msgSend_versionMismatch(void *a1, const char *a2, ...)
{
  return _[a1 versionMismatch];
}

id objc_msgSend_versionOfDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return [a1 versionOfDictionaryRepresentation];
}

id objc_msgSend_vibrantImageView(void *a1, const char *a2, ...)
{
  return _[a1 vibrantImageView];
}

id objc_msgSend_videoIcon(void *a1, const char *a2, ...)
{
  return _[a1 videoIcon];
}

id objc_msgSend_videoViewController(void *a1, const char *a2, ...)
{
  return _[a1 videoViewController];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewAction(void *a1, const char *a2, ...)
{
  return _[a1 viewAction];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_visible(void *a1, const char *a2, ...)
{
  return _[a1 visible];
}

id objc_msgSend_visibleBounds(void *a1, const char *a2, ...)
{
  return _[a1 visibleBounds];
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return _[a1 visibleCells];
}

id objc_msgSend_volumeAudioCategory(void *a1, const char *a2, ...)
{
  return _[a1 volumeAudioCategory];
}

id objc_msgSend_volumeController(void *a1, const char *a2, ...)
{
  return _[a1 volumeController];
}

id objc_msgSend_wasCanceled(void *a1, const char *a2, ...)
{
  return _[a1 wasCanceled];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_webpageURL(void *a1, const char *a2, ...)
{
  return _[a1 webpageURL];
}

id objc_msgSend_welcomeControllerDidAppear(void *a1, const char *a2, ...)
{
  return _[a1 welcomeControllerDidAppear];
}

id objc_msgSend_welcomeControllerDidDisappear(void *a1, const char *a2, ...)
{
  return _[a1 welcomeControllerDidDisappear];
}

id objc_msgSend_welcomeControllerWillDisappear(void *a1, const char *a2, ...)
{
  return _[a1 welcomeControllerWillDisappear];
}

id objc_msgSend_welcomeViewControllerClass(void *a1, const char *a2, ...)
{
  return _[a1 welcomeViewControllerClass];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_whitelistedClasses(void *a1, const char *a2, ...)
{
  return _[a1 whitelistedClasses];
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceAndNewlineCharacterSet];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 willChangeValueForKey:];
}

id objc_msgSend_willConnectScene(void *a1, const char *a2, ...)
{
  return _[a1 willConnectScene];
}

id objc_msgSend_willDeletePersistentId_(void *a1, const char *a2, ...)
{
  return [a1 willDeletePersistentId];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _[a1 windowScene];
}

id objc_msgSend_workQueue(void *a1, const char *a2, ...)
{
  return _[a1 workQueue];
}

id objc_msgSend_workQueueConcurrent(void *a1, const char *a2, ...)
{
  return _[a1 workQueueConcurrent];
}

id objc_msgSend_wrapperRevision(void *a1, const char *a2, ...)
{
  return _[a1 wrapperRevision];
}

id objc_msgSend_writeToFile_atomically_(void *a1, const char *a2, ...)
{
  return [a1 writeToFile:atomically:];
}

id objc_msgSend_writeToKeychain(void *a1, const char *a2, ...)
{
  return _[a1 writeToKeychain];
}

id objc_msgSend_writeToURL_atomically_(void *a1, const char *a2, ...)
{
  return [a1 writeToURL:atomically:];
}

id objc_msgSend_writeToURL_error_(void *a1, const char *a2, ...)
{
  return [a1 writeToURL:error:];
}