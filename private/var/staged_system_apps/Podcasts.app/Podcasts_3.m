void MTDebugActionTestCategory.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MTDebugActionTestCategory.__deallocating_deinit()
{
  return sub_1002C4DB4(type metadata accessor for MTDebugActionTestCategory);
}

uint64_t sub_1002C45C4(uint64_t a1, uint64_t a2)
{
  return sub_1002C4ED4(a1, a2, &OBJC_IVAR____TtC8Podcasts25MTDebugActionTestCategory_name);
}

uint64_t sub_1002C45D0(uint64_t a1, uint64_t a2)
{
  return sub_1002C4ED4(a1, a2, &OBJC_IVAR____TtC8Podcasts25MTDebugActionTestCategory_title);
}

uint64_t MTDebugActionTestCase.category.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_category;
  swift_beginAccess();
  return sub_100056D54(v3, a1);
}

uint64_t MTDebugActionTestCase.category.setter(long long *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_category;
  swift_beginAccess();
  sub_10004D2D8(v3);
  sub_100042FC4(a1, v3);
  return swift_endAccess();
}

uint64_t (*MTDebugActionTestCase.category.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t MTDebugActionTestCase.testName.getter()
{
  return sub_1002C4784(&OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_name);
}

uint64_t MTDebugActionTestCase.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1002C4994(a1, a2, &OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_name, (uint64_t (*)(uint64_t))&_swift_bridgeObjectRelease);
}

uint64_t (*MTDebugActionTestCase.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t MTDebugActionTestCase.testTitle.getter()
{
  return sub_1002C4784(&OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_title);
}

uint64_t sub_1002C4784(void *a1)
{
  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t MTDebugActionTestCase.title.setter(uint64_t a1, uint64_t a2)
{
  return sub_1002C4994(a1, a2, &OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_title, (uint64_t (*)(uint64_t))&_swift_bridgeObjectRelease);
}

uint64_t (*MTDebugActionTestCase.title.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t MTDebugActionTestCase.categoryName.getter()
{
  return sub_1002C4884((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of DebugActionTestCategoryProtocol.name.getter);
}

uint64_t MTDebugActionTestCase.categoryTitle.getter()
{
  return sub_1002C4884((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of DebugActionTestCategoryProtocol.title.getter);
}

uint64_t sub_1002C4884(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_category;
  swift_beginAccess();
  sub_100056D54(v3, (uint64_t)v8);
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  sub_100041A98(v8, v9);
  uint64_t v6 = a1(v4, v5);
  sub_10004D2D8((uint64_t)v8);
  return v6;
}

uint64_t MTDebugActionTestCase.handler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_handler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t MTDebugActionTestCase.handler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1002C4994(a1, a2, &OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_handler, (uint64_t (*)(uint64_t))&_swift_release);
}

uint64_t sub_1002C4994(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t))
{
  v8 = (void *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = v8[1];
  void *v8 = a1;
  v8[1] = a2;
  return a4(v9);
}

uint64_t (*MTDebugActionTestCase.handler.modify())()
{
  return j_j__swift_endAccess;
}

id MTDebugActionTestCase.init(category:name:title:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v15 = &v7[OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_category];
  *((void *)v15 + 3) = type metadata accessor for MTDebugActionTestCategory();
  *((void *)v15 + 4) = sub_1002C4B40();
  *(void *)v15 = a1;
  v16 = &v7[OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_name];
  *(void *)v16 = a2;
  *((void *)v16 + 1) = a3;
  v17 = &v7[OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_title];
  *(void *)v17 = a4;
  *((void *)v17 + 1) = a5;
  v18 = &v7[OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_handler];
  *(void *)v18 = a6;
  *((void *)v18 + 1) = a7;
  v20.receiver = v7;
  v20.super_class = (Class)type metadata accessor for MTDebugActionTestCase();
  return [super init];
}

uint64_t type metadata accessor for MTDebugActionTestCategory()
{
  return self;
}

unint64_t sub_1002C4B40()
{
  unint64_t result = qword_1005F7660;
  if (!qword_1005F7660)
  {
    type metadata accessor for MTDebugActionTestCategory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F7660);
  }
  return result;
}

uint64_t type metadata accessor for MTDebugActionTestCase()
{
  return self;
}

Swift::Void __swiftcall MTDebugActionTestCase.perform()()
{
  uint64_t v1 = (void (**)())(v0 + OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_handler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  v2();
  swift_release();
}

void MTDebugActionTestCase.init()()
{
}

id MTDebugActionTestCase.__deallocating_deinit()
{
  return sub_1002C4DB4(type metadata accessor for MTDebugActionTestCase);
}

id sub_1002C4DB4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t sub_1002C4E64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_category;
  swift_beginAccess();
  return sub_100056D54(v3, a1);
}

uint64_t sub_1002C4EBC(uint64_t a1, uint64_t a2)
{
  return sub_1002C4ED4(a1, a2, &OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_name);
}

uint64_t sub_1002C4EC8(uint64_t a1, uint64_t a2)
{
  return sub_1002C4ED4(a1, a2, &OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_title);
}

uint64_t sub_1002C4ED4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (uint64_t *)(*v3 + *a3);
  swift_beginAccess();
  uint64_t v5 = *v4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1002C4F2C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void (**)(uint64_t))(*v0 + OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_handler);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_retain();
  v3(v1);
  return swift_release();
}

uint64_t sub_1002C4F9C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

id sub_1002C4FD8()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for MTNotificationSettingsPresentationController()) init];
  qword_10061ABA0 = (uint64_t)result;
  return result;
}

Swift::Void __swiftcall MTNotificationSettingsPresentationController.presentModal(highlightedPodcastUuid:)(Swift::String_optional highlightedPodcastUuid)
{
  object = highlightedPodcastUuid.value._object;
  uint64_t countAndFlagsBits = highlightedPodcastUuid.value._countAndFlagsBits;
  uint64_t v3 = type metadata accessor for FlowPresentationHints();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FlowDestination();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id Strong = (id)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (object)
    {
      id v14 = Strong;
      sub_1001EF54C(countAndFlagsBits, (uint64_t)object, 1);

      id Strong = v14;
    }
  }
  else
  {
    *uint64_t v10 = countAndFlagsBits;
    v10[1] = (uint64_t)object;
    (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for FlowDestination.notificationSettings(_:), v7);
    v12 = (void *)UIApp;
    if (UIApp)
    {
      swift_bridgeObjectRetain();
      id v13 = v12;
      UIResponder.nearestFlowController.getter();

      if (v16)
      {
        sub_100041A98(v15, v16);
        static FlowPresentationHints.modalFormSheet.getter();
        dispatch thunk of FlowController.show(destination:hints:referrer:)();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
        sub_10004D2D8((uint64_t)v15);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
        sub_1002237DC((uint64_t)v15);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

id MTNotificationSettingsPresentationController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTNotificationSettingsPresentationController();
  return [super dealloc];
}

uint64_t type metadata accessor for MTNotificationSettingsPresentationController()
{
  return self;
}

uint64_t sub_1002C54B4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (Swift::Int *)(*(void *)(v2 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_100050684(&v17, v12, v13);
    id result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1002C5634()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v2 - 8);
  v175 = (char *)&v170 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v4 - 8);
  v179 = (char *)&v170 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100600580);
  __chkstk_darwin(v6 - 8);
  v186 = (char *)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v176 = (char *)&v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for EpisodeOffer();
  uint64_t v190 = *(void *)(v11 - 8);
  uint64_t v191 = v11;
  __chkstk_darwin(v11);
  v188 = (char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78(&qword_1005F5D20);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  v182 = (char *)&v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v180 = (char *)&v170 - v16;
  uint64_t v17 = type metadata accessor for ShowOffer();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  v185 = (char *)&v170 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v183 = (char *)&v170 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v181 = (char *)&v170 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v177 = (char *)&v170 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v192 = (char *)&v170 - v28;
  __chkstk_darwin(v27);
  v30 = (char *)&v170 - v29;
  uint64_t v31 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  v178 = (char *)&v170 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  v187 = (char *)&v170 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  v184 = (char *)&v170 - v37;
  __chkstk_darwin(v36);
  v39 = (char *)&v170 - v38;
  if (EpisodeOffer.mediaType.getter() != 3)
  {
    uint64_t v40 = EpisodeMediaType.rawValue.getter();
    uint64_t v42 = v41;
    if (v40 == EpisodeMediaType.rawValue.getter() && v42 == v43)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
    char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v44) {
      return 0;
    }
  }
  EpisodeOffer.streamUrl.getter();
  v171 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v171(v39, 0, 1, v8);
  v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v174 = v9 + 48;
  v189 = v46;
  if (v46((uint64_t)v39, 1, v8) == 1)
  {
    v48 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v47);
    v48 = v49;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v39, v8);
  }
  id v50 = [objc_allocWithZone((Class)MTPlayerItem) initWithUrl:v48];

  id v51 = v50;
  EpisodeOffer.priceType.getter();
  NSString v52 = (id)NSPersistentStringForMTEpisodePriceType();
  if (!v52)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v51 setPriceType:v52];

  id v53 = v51;
  EpisodeOffer.showOffer.getter();
  ShowOffer.displayType.getter();
  uint64_t v55 = v54;
  v56 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v193 = v18 + 8;
  v194 = v56;
  v56(v30, v17);
  if (v55)
  {
    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v57 = 0;
  }
  [v53 setPodcastDisplayType:v57];

  id v58 = v53;
  uint64_t v59 = EpisodeOffer.contentId.getter();
  if (v59 < 0)
  {
    __break(1u);
    goto LABEL_96;
  }
  [v58 setEpisodeStoreId:v59];

  id v60 = v58;
  v61 = v192;
  EpisodeOffer.showOffer.getter();
  uint64_t v62 = ShowOffer.adamId.getter();
  v194(v61, v17);
  if (v62 < 0)
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    JUMPOUT(0x1002C6B40);
  }
  [v60 setPodcastStoreId:v62];

  id v63 = v60;
  EpisodeOffer.title.getter();
  NSString v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v63 setTitle:v64];

  type metadata accessor for CoreDataFetcher();
  id v65 = v63;
  static CoreDataFetcher.episodeUuid(for:)();
  if (v66)
  {
    NSString v67 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v67 = 0;
  }
  [v65 setEpisodeUuid:v67];

  id v68 = v65;
  EpisodeOffer.guid.getter();
  if (v69)
  {
    NSString v70 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v70 = 0;
  }
  [v68 setEpisodeGuid:v70];

  id v71 = v68;
  EpisodeOffer.summary.getter();
  uint64_t v172 = v9;
  if (v72)
  {
    NSString v73 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v73 = 0;
  }
  uint64_t v74 = v9 + 56;
  [v71 setSubtitle:v73];

  id v75 = v71;
  v76 = v192;
  EpisodeOffer.showOffer.getter();
  ShowOffer.title.getter();
  v194(v76, v17);
  NSString v77 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v75 setAuthor:v77];

  id v78 = v75;
  isa = (void *)EpisodeOffer.releaseDate.getter();
  if (isa)
  {
    v80 = v180;
    LazyDate.value.getter();
    swift_release();
    uint64_t v81 = type metadata accessor for Date();
    uint64_t v82 = *(void *)(v81 - 8);
    int v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81);
    isa = 0;
    v84 = v188;
    if (v83 != 1)
    {
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v81);
    }
  }
  else
  {
    uint64_t v85 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v180, 1, 1, v85);
    v84 = v188;
  }
  [v78 setPubDate:isa];

  id v86 = v78;
  char v87 = EpisodeOffer.contentRating.getter();
  uint64_t v173 = v8;
  uint64_t v170 = v74;
  if (v87 == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v84, v1, v191);
LABEL_38:
    v96 = v177;
    EpisodeOffer.showOffer.getter();
    if (ShowOffer.contentRating.getter() == 2)
    {
      char v94 = 0;
    }
    else
    {
      uint64_t v97 = ContentRating.rawValue.getter();
      uint64_t v99 = v98;
      char v94 = 1;
      if (v97 != ContentRating.rawValue.getter() || v99 != v100) {
        char v94 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v84 = v188;
      v96 = v177;
    }
    uint64_t v92 = v17;
    v95 = v194;
    v194(v96, v17);
    goto LABEL_45;
  }
  uint64_t v88 = ContentRating.rawValue.getter();
  uint64_t v90 = v89;
  if (v88 == ContentRating.rawValue.getter() && v90 == v91)
  {
    uint64_t v92 = v17;
    swift_bridgeObjectRelease_n();
    v84 = v188;
    (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v188, v1, v191);
  }
  else
  {
    char v93 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v84 = v188;
    (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v188, v1, v191);
    if ((v93 & 1) == 0) {
      goto LABEL_38;
    }
    uint64_t v92 = v17;
  }
  char v94 = 1;
  v95 = v194;
LABEL_45:
  (*(void (**)(char *, uint64_t))(v190 + 8))(v84, v191);
  [v86 setIsExplicit:v94 & 1];

  id v101 = v86;
  [v101 setEntitled:EpisodeOffer.isEntitledOffer.getter() & 1];

  uint64_t v102 = EpisodeOffer.seasonNumber.getter();
  if (v103) {
    uint64_t v104 = 0;
  }
  else {
    uint64_t v104 = v102;
  }
  uint64_t v105 = EpisodeOffer.episodeNumber.getter();
  if (v106) {
    uint64_t v107 = 0;
  }
  else {
    uint64_t v107 = v105;
  }
  id v108 = v101;
  v109 = v181;
  EpisodeOffer.showOffer.getter();
  ShowOffer.showType.getter();
  uint64_t v191 = v92;
  v95(v109, v92);
  uint64_t v110 = ShowType.rawValue.getter();
  uint64_t v112 = v111;
  if (v110 != ShowType.rawValue.getter() || v112 != v113) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v114 = [v108 pubDate];
  if (v114)
  {
    v115 = v114;
    uint64_t v116 = (uint64_t)v182;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v117 = type metadata accessor for Date();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v116, 0, 1, v117);
  }
  else
  {
    uint64_t v118 = type metadata accessor for Date();
    uint64_t v116 = (uint64_t)v182;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v182, 1, 1, v118);
  }
  uint64_t v119 = v172;
  uint64_t v120 = (uint64_t)v186;
  type metadata accessor for AlbumStringBuilder();
  static AlbumStringBuilder.albumString(podcastTitle:episodeNumber:seasonNumber:isSerialType:pubDate:)();
  uint64_t v122 = v121;
  sub_100054B1C(v116, &qword_1005F5D20);
  if (v122)
  {
    NSString v123 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v123 = 0;
  }
  [v108 setAlbum:v123, v170];

  [v108 setSeasonNumber:v104];
  [v108 setEpisodeNumber:v107];
  id v124 = v108;
  v125 = v183;
  EpisodeOffer.showOffer.getter();
  ShowOffer.showType.getter();
  v194(v125, v191);
  uint64_t v126 = ShowType.rawValue.getter();
  uint64_t v128 = v127;
  char v129 = 1;
  if (v126 != ShowType.rawValue.getter() || v128 != v130) {
    char v129 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  [v124 setPodcastIsSerial:v129 & 1];

  char v131 = EpisodeOffer.episodeType.getter();
  uint64_t v132 = 2;
  switch(v131)
  {
    case 1:
      uint64_t v132 = 0;
      goto LABEL_66;
    case 2:
      uint64_t v132 = 1;
      goto LABEL_66;
    case 3:
      goto LABEL_67;
    default:
LABEL_66:
      [v124 setEpisodeType:v132];
LABEL_67:
      id v133 = v124;
      EpisodeOffer.summary.getter();
      if (v134)
      {
        NSString v135 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v135 = 0;
      }
      [v133 setItemDescription:v135];

      if (EpisodeOffer.mediaType.getter() == 3)
      {
        char v136 = 0;
        uint64_t v137 = v173;
      }
      else
      {
        uint64_t v138 = EpisodeMediaType.rawValue.getter();
        uint64_t v140 = v139;
        char v136 = 1;
        if (v138 != EpisodeMediaType.rawValue.getter() || v140 != v141) {
          char v136 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v137 = v173;
      }
      [v133 setIsVideo:v136 & 1];

      EpisodeOffer.reportingParams.getter();
      if (v142)
      {
        NSString v143 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v143 = 0;
      }
      [v133 setStoreReportingParams:v143];

      uint64_t v144 = (uint64_t)v184;
      EpisodeOffer.storeUrl.getter();
      if (v189(v144, 1, v137) == 1)
      {
        sub_100054B1C(v144, (uint64_t *)&unk_1005F7750);
      }
      else
      {
        v145 = v176;
        (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v176, v144, v137);
        id v146 = v133;
        URL._bridgeToObjectiveC()(v147);
        v149 = v148;
        [v146 setEpisodeShareUrl:v148];

        (*(void (**)(char *, uint64_t))(v119 + 8))(v145, v137);
      }
      uint64_t v150 = (uint64_t)v187;
      id v151 = v133;
      v152 = v185;
      EpisodeOffer.showOffer.getter();
      ShowOffer.feedUrl.getter();
      v194(v152, v191);
      if (v189(v150, 1, v137) == 1)
      {
        sub_100054B1C(v150, (uint64_t *)&unk_1005F7750);
        NSString v153 = 0;
      }
      else
      {
        URL.absoluteString.getter();
        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v150, v137);
        NSString v153 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      [v151 setPodcastFeedUrl:v153];

      id v154 = v151;
      v155 = v192;
      EpisodeOffer.showOffer.getter();
      uint64_t v156 = ShowOffer.adamId.getter();
      v194(v155, v191);
      if (v156 < 0) {
        goto LABEL_97;
      }
      [v154 setPodcastStoreId:v156];

      id v157 = v154;
      EpisodeOffer.transcriptInfo.getter();
      uint64_t v158 = type metadata accessor for TranscriptRequestInformation();
      uint64_t v159 = *(void *)(v158 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v120, 1, v158) == 1)
      {
        sub_100054B1C(v120, (uint64_t *)&unk_100600580);
        NSString v160 = 0;
      }
      else
      {
        TranscriptRequestInformation.ttmlIdentifier.getter();
        (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v120, v158);
        NSString v160 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      uint64_t v161 = (uint64_t)v179;
      [v157 setTranscriptIdentifier:v160];

      id v45 = v157;
      EpisodeOffer.artwork.getter();
      uint64_t v162 = type metadata accessor for ArtworkModel();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v162 - 8) + 48))(v161, 1, v162) == 1)
      {
        sub_100054B1C(v161, &qword_1005F76A0);
        v171(v178, 1, 1, v137);
        v163 = 0;
      }
      else
      {
        uint64_t v164 = type metadata accessor for CropCode();
        uint64_t v165 = (uint64_t)v175;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(v175, 1, 1, v164);
        ArtworkModel.config(_:mode:format:crop:retainAspectRatio:)();
        sub_100054B1C(v165, (uint64_t *)&unk_100600570);
        sub_1002DDBA0(v161, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
        v166 = v178;
        dispatch thunk of ArtworkLoaderConfig.url.getter();
        swift_release();
        v163 = 0;
        if (v189((uint64_t)v166, 1, v137) != 1)
        {
          URL._bridgeToObjectiveC()(v167);
          v163 = v168;
          (*(void (**)(char *, uint64_t))(v119 + 8))(v166, v137);
        }
      }
      [v45 setArtworkUrl:v163];

      break;
  }
  return v45;
}

void sub_1002C6B50()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (static Podcasts.isBlueMoonEnabled()())
  {
    static TaskPriority.userInitiated.getter();
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v5;
    v6[5] = v0;
    swift_retain();
    swift_retain();
    sub_1002C80F0((uint64_t)v3, (uint64_t)&unk_100600758, (uint64_t)v6);
    swift_release();
    sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_100603370);
  }
  else
  {
    id v9 = [self defaultInstance];
    [v9 playPlayerTarget];
    id v7 = v9;
  }
}

uint64_t sub_1002C6CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 88) = a4;
  *(void *)(v5 + 96) = a5;
  return _swift_task_switch(sub_1002C6CF4, 0, 0);
}

uint64_t sub_1002C6CF4()
{
  uint64_t v1 = type metadata accessor for PlaybackController.TransportCommand();
  v0[5] = v1;
  v0[6] = (uint64_t)&protocol witness table for PlaybackController.TransportCommand;
  uint64_t v2 = sub_10004A244(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, enum case for PlaybackController.TransportCommand.play(_:), v1);
  uint64_t v5 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002C6E04;
  return ((uint64_t (*)(uint64_t *, void))v5)(v0 + 2, 0);
}

uint64_t sub_1002C6E04(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1002C6F58, 0, 0);
  }
  else
  {

    sub_10004D2D8(v4 + 16);
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
}

uint64_t sub_1002C6F58()
{
  sub_10004D2D8(v0 + 16);
  type metadata accessor for MainActor();
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 120) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002C7000, v2, v1);
}

uint64_t sub_1002C7000()
{
  uint64_t v1 = *(void ***)(v0 + 112);
  swift_release();
  sub_1002C70F4(v1, v0 + 56);
  sub_100054B1C(v0 + 56, &qword_1005F5D30);
  return _swift_task_switch(sub_1002C7094, 0, 0);
}

uint64_t sub_1002C7094()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1002C70F4(void **a1, uint64_t a2)
{
  uint64_t v107 = *v2;
  uint64_t v115 = type metadata accessor for PlaybackController.PlayerError();
  uint64_t v113 = *(char **)(v115 - 8);
  uint64_t v5 = __chkstk_darwin(v115);
  uint64_t v112 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v111 = (char *)&v96 - v8;
  __chkstk_darwin(v7);
  uint64_t v114 = (uint64_t)&v96 - v9;
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_100600690);
  __chkstk_darwin(v10 - 8);
  uint64_t v100 = (uint64_t)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for PlaybackIntent.PlayerConstraint();
  uint64_t v106 = *(void *)(v102 - 8);
  uint64_t v12 = __chkstk_darwin(v102);
  uint64_t v98 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  id v101 = (char *)&v96 - v15;
  __chkstk_darwin(v14);
  id v108 = (char *)&v96 - v16;
  uint64_t v105 = type metadata accessor for PlaybackIntent();
  uint64_t v104 = *(void *)(v105 - 8);
  uint64_t v17 = *(void *)(v104 + 64);
  uint64_t v18 = __chkstk_darwin(v105);
  uint64_t v99 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v103 = (char *)&v96 - v19;
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v110 = *(void **)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for PlaybackIntent.ValidationError();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (uint64_t *)((char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = __chkstk_darwin(v25);
  v30 = (char *)&v96 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v96 - v31;
  sub_1002DA46C(a1, a2);
  uint64_t v121 = a1;
  swift_errorRetain();
  sub_100054B78(&qword_100603F70);
  if (!swift_dynamicCast())
  {
    char v44 = v111;
    uint64_t v43 = v112;
    id v45 = v113;
    swift_errorRelease();
    aBlock[0] = (uint64_t)a1;
    swift_errorRetain();
    uint64_t v47 = v114;
    uint64_t v46 = v115;
    if (swift_dynamicCast())
    {
      (*((void (**)(char *, uint64_t, uint64_t))v45 + 4))(v44, v47, v46);
      (*((void (**)(char *, char *, uint64_t))v45 + 2))(v43, v44, v46);
      if ((*((unsigned int (**)(char *, uint64_t))v45 + 11))(v43, v46) == enum case for PlaybackController.PlayerError.authenticationRequired(_:))
      {
        sub_10004D29C(0, (unint64_t *)&unk_1005FE480);
        id v48 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
        NSString v49 = String._bridgeToObjectiveC()();
        [v48 promptAccountAuthenticationWithDebugReason:v49 forced:1];

        (*((void (**)(char *, uint64_t))v45 + 1))(v44, v46);
        goto LABEL_33;
      }
      id v53 = (void (*)(char *, uint64_t))*((void *)v45 + 1);
      v53(v44, v46);
      v53(v43, v46);
    }
    goto LABEL_10;
  }
  uint64_t v33 = v110;
  uint64_t v114 = v17;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v30, v32, v23);
  (*(void (**)(void *, char *, uint64_t))(v24 + 16))(v27, v30, v23);
  int v34 = (*(uint64_t (**)(void *, uint64_t))(v24 + 88))(v27, v23);
  uint64_t v35 = v27;
  if (v34 != enum case for PlaybackIntent.ValidationError.externalMedia(_:))
  {
    if (v34 == enum case for PlaybackIntent.ValidationError.unentitled(_:))
    {
      (*(void (**)(void *, uint64_t))(v24 + 96))(v27, v23);
      uint64_t v50 = *v27;
      v116[3] = v107;
      v116[0] = v109;
      sub_100041A98((void *)(v109 + 40), *(void *)(v109 + 64));
      swift_retain();
      dispatch thunk of StoreDataProvider.fetchEpisodeUpsellAction(for:)();
      uint64_t v51 = swift_allocObject();
      swift_weakInit();
      sub_100054BBC((uint64_t)v116, (uint64_t)aBlock, &qword_1005F5D30);
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v51;
      *(void *)(v52 + 24) = v50;
      sub_100053820((uint64_t)aBlock, v52 + 32, &qword_1005F5D30);
      uint64_t v118 = (void *)type metadata accessor for SyncTaskScheduler();
      uint64_t v119 = (uint64_t (*)(char))&protocol witness table for SyncTaskScheduler;
      sub_10004A244(aBlock);
      SyncTaskScheduler.init()();
      sub_100054B78((uint64_t *)&unk_100604700);
      sub_100044200(&qword_1006006F0, (uint64_t *)&unk_100604700);
      Promise.flatMap<A>(on:_:)();
      swift_release();
      swift_release();
      sub_10004D2D8((uint64_t)aBlock);
      swift_release();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
      sub_100054B1C((uint64_t)v116, &qword_1005F5D30);
      goto LABEL_33;
    }
    if (v34 == enum case for PlaybackIntent.ValidationError.localPlaybackRequired(_:))
    {
      uint64_t v113 = v30;
      uint64_t v55 = *(void (**)(void *, uint64_t))(v24 + 96);
      uint64_t v115 = v23;
      v55(v27, v23);
      v56 = (char *)v27 + *(int *)(sub_100054B78((uint64_t *)&unk_1006006E0) + 48);
      uint64_t v110 = *(void **)(v104 + 32);
      uint64_t v111 = (char *)(v104 + 32);
      ((void (*)(char *, void *, uint64_t))v110)(v103, v27, v105);
      uint64_t v57 = v106;
      id v58 = v108;
      uint64_t v59 = v102;
      (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v108, v56, v102);
      uint64_t v60 = dispatch thunk of PlaybackController.currentRoute.getter();
      v61 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
      uint64_t v62 = v101;
      v61(v101, v58, v59);
      id v63 = *(uint64_t (**)(char *, uint64_t))(v57 + 88);
      int v64 = v63(v62, v59);
      int v65 = enum case for PlaybackIntent.PlayerConstraint.currentItemUntransferrable(_:);
      uint64_t v112 = (char *)v60;
      uint64_t v107 = v63;
      if (v64 == enum case for PlaybackIntent.PlayerConstraint.currentItemUntransferrable(_:))
      {
        (*(void (**)(char *, uint64_t))(v57 + 96))(v62, v59);
        uint64_t v66 = (uint64_t)v62;
        uint64_t v71 = v100;
        sub_100053820(v66, v100, (uint64_t *)&unk_100600690);
      }
      else
      {
        uint64_t v69 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
        NSString v70 = v62;
        uint64_t v71 = v100;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v100, 1, 1, v69);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v70, v59);
      }
      uint64_t v72 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
      uint64_t v73 = *(void *)(v72 - 8);
      int v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72);
      uint64_t v97 = v24;
      if (v74 == 1)
      {
        sub_100054B1C(v71, (uint64_t *)&unk_100600690);
        id v101 = 0;
        uint64_t v75 = v109;
      }
      else
      {
        PodcastsMediaLibrary.MediaItem.author.getter();
        uint64_t v78 = v77;
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
        if (v78)
        {
          id v101 = (char *)String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v101 = 0;
        }
        uint64_t v75 = v109;
        uint64_t v59 = v102;
      }
      v79 = v103;
      v80 = v98;
      v61(v98, v108, v59);
      int v81 = v107(v80, v59);
      if (v81 == v65)
      {
        uint64_t v114 = 1;
        uint64_t v82 = v106;
        uint64_t v83 = v105;
        uint64_t v84 = v104;
        uint64_t v85 = v99;
      }
      else
      {
        if (v81 == enum case for PlaybackIntent.PlayerConstraint.singleItemUntransferrable(_:))
        {
          uint64_t v114 = 2;
          uint64_t v82 = v106;
          uint64_t v83 = v105;
          uint64_t v84 = v104;
          uint64_t v85 = v99;
          goto LABEL_32;
        }
        uint64_t v83 = v105;
        uint64_t v84 = v104;
        uint64_t v85 = v99;
        if (v81 == enum case for PlaybackIntent.PlayerConstraint.multipleItemsUntransferrable(_:))
        {
          uint64_t v114 = 3;
          uint64_t v82 = v106;
          goto LABEL_32;
        }
        uint64_t v114 = 4;
        uint64_t v82 = v106;
        if (v81 == enum case for PlaybackIntent.PlayerConstraint.unknown(_:)) {
          goto LABEL_32;
        }
      }
      (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v59);
LABEL_32:
      uint64_t v86 = self;
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v85, v79, v83);
      uint64_t v87 = v59;
      unint64_t v88 = (*(unsigned __int8 *)(v84 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
      uint64_t v89 = v79;
      uint64_t v90 = v84;
      uint64_t v91 = swift_allocObject();
      *(void *)(v91 + 16) = v75;
      ((void (*)(unint64_t, char *, uint64_t))v110)(v91 + v88, v85, v83);
      uint64_t v119 = sub_1002DE33C;
      uint64_t v120 = v91;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100226350;
      uint64_t v118 = &unk_10055EBC0;
      uint64_t v92 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      char v93 = (void *)v86;
      char v94 = v112;
      v95 = v101;
      [v93 promptBeforePerformingIntentAsBufferedAirPlayForRoute:v112 provider:v101 queueStatus:v114 completion:v92];
      _Block_release(v92);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v108, v87);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v83);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v113, v115);
      goto LABEL_33;
    }
    if (v34 == enum case for PlaybackIntent.ValidationError.authenticationRequired(_:))
    {
      sub_10004D29C(0, (unint64_t *)&unk_1005FE480);
      id v67 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
      NSString v68 = String._bridgeToObjectiveC()();
      [v67 promptAccountAuthenticationWithDebugReason:v68 forced:1];

      (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
      goto LABEL_33;
    }
    v76 = *(void (**)(char *, uint64_t))(v24 + 8);
    v76(v30, v23);
    v76((char *)v27, v23);
LABEL_10:
    swift_errorRelease();
    sub_10004D29C(0, (unint64_t *)&unk_1006006D0);
    id v54 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
    MTEpisodeUnavailableUtil.showDialog(for:)((uint64_t)a1);

    return;
  }
  (*(void (**)(void *, uint64_t))(v24 + 96))(v27, v23);
  uint64_t v36 = v33;
  uint64_t v37 = (void (*)(char *, void *, uint64_t))v33[4];
  uint64_t v115 = v23;
  v37(v22, v35, v20);
  id v38 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v39);
  uint64_t v41 = v40;
  sub_10016E9B0((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1002DE3C0(&qword_1005F66F0, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v38 openURL:v41 options:isa completionHandler:0];

  ((void (*)(char *, uint64_t))v36[1])(v22, v20);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v115);
LABEL_33:
  swift_errorRelease();
}

uint64_t sub_1002C80F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a1, (uint64_t)v8, (uint64_t *)&unk_100603370);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_100603370);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

void sub_1002C82E4()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (static Podcasts.isBlueMoonEnabled()())
  {
    static TaskPriority.userInitiated.getter();
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v5;
    v6[5] = v0;
    swift_retain();
    swift_retain();
    sub_1002C80F0((uint64_t)v3, (uint64_t)&unk_100600748, (uint64_t)v6);
    swift_release();
    sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_100603370);
  }
  else
  {
    id v9 = [self defaultInstance];
    [v9 pausePlayerTargetWithInitiator:1];
    id v7 = v9;
  }
}

uint64_t sub_1002C846C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 88) = a4;
  *(void *)(v5 + 96) = a5;
  return _swift_task_switch(sub_1002C848C, 0, 0);
}

uint64_t sub_1002C848C()
{
  uint64_t v1 = type metadata accessor for PlaybackController.TransportCommand();
  v0[5] = v1;
  v0[6] = (uint64_t)&protocol witness table for PlaybackController.TransportCommand;
  uint64_t v2 = sub_10004A244(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, enum case for PlaybackController.TransportCommand.pause(_:), v1);
  uint64_t v5 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002C859C;
  return ((uint64_t (*)(uint64_t *, void))v5)(v0 + 2, 0);
}

uint64_t sub_1002C859C(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1002C86F0, 0, 0);
  }
  else
  {

    sub_10004D2D8(v4 + 16);
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
}

uint64_t sub_1002C86F0()
{
  sub_10004D2D8(v0 + 16);
  type metadata accessor for MainActor();
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 120) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002C8798, v2, v1);
}

uint64_t sub_1002C8798()
{
  uint64_t v1 = *(void ***)(v0 + 112);
  swift_release();
  sub_1002C70F4(v1, v0 + 56);
  sub_100054B1C(v0 + 56, &qword_1005F5D30);
  return _swift_task_switch(sub_1002DEBC8, 0, 0);
}

uint64_t sub_1002C882C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 104) = a6;
  *(double *)(v6 + 96) = a1;
  *(void *)(v6 + 88) = a5;
  return _swift_task_switch(sub_1002C8854, 0, 0);
}

uint64_t sub_1002C8854()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = type metadata accessor for PlaybackController.TransportCommand();
  v0[5] = v2;
  v0[6] = (uint64_t)&protocol witness table for PlaybackController.TransportCommand;
  *sub_10004A244(v0 + 2) = v1;
  (*(void (**)(void))(*(void *)(v2 - 8) + 104))();
  uint64_t v5 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[14] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002C8974;
  return ((uint64_t (*)(uint64_t *, void))v5)(v0 + 2, 0);
}

uint64_t sub_1002C8974(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1002C8AC8, 0, 0);
  }
  else
  {

    sub_10004D2D8(v4 + 16);
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
}

uint64_t sub_1002C8AC8()
{
  sub_10004D2D8(v0 + 16);
  type metadata accessor for MainActor();
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 128) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002C8B70, v2, v1);
}

uint64_t sub_1002C8B70()
{
  uint64_t v1 = *(void ***)(v0 + 120);
  swift_release();
  sub_1002C70F4(v1, v0 + 56);
  sub_100054B1C(v0 + 56, &qword_1005F5D30);
  return _swift_task_switch(sub_1002C8C04, 0, 0);
}

uint64_t sub_1002C8C04()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C8C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 88) = a4;
  *(void *)(v5 + 96) = a5;
  return _swift_task_switch(sub_1002C8C84, 0, 0);
}

uint64_t sub_1002C8C84()
{
  uint64_t v1 = type metadata accessor for PlaybackController.TransportCommand();
  v0[5] = v1;
  v0[6] = (uint64_t)&protocol witness table for PlaybackController.TransportCommand;
  uint64_t v2 = sub_10004A244(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, enum case for PlaybackController.TransportCommand.jumpBackward(_:), v1);
  uint64_t v5 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002C859C;
  return ((uint64_t (*)(uint64_t *, void))v5)(v0 + 2, 0);
}

uint64_t sub_1002C8D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 88) = a4;
  *(void *)(v5 + 96) = a5;
  return _swift_task_switch(sub_1002C8DB4, 0, 0);
}

uint64_t sub_1002C8DB4()
{
  uint64_t v1 = type metadata accessor for PlaybackController.TransportCommand();
  v0[5] = v1;
  v0[6] = (uint64_t)&protocol witness table for PlaybackController.TransportCommand;
  uint64_t v2 = sub_10004A244(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, enum case for PlaybackController.TransportCommand.jumpForward(_:), v1);
  uint64_t v5 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002C859C;
  return ((uint64_t (*)(uint64_t *, void))v5)(v0 + 2, 0);
}

void sub_1002C8EC4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, char a13)
{
  int v67 = a6;
  int v68 = a5;
  uint64_t v62 = a3;
  uint64_t v64 = a11;
  uint64_t v65 = a4;
  int v63 = a12 & 1;
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_100600690);
  __chkstk_darwin(v16 - 8);
  v61 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MediaIdentifier();
  uint64_t v55 = *(void *)(v18 - 8);
  uint64_t v56 = v18;
  __chkstk_darwin(v18);
  id v58 = (uint64_t *)((char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for PlaybackIntent();
  uint64_t v59 = *(void *)(v20 - 8);
  uint64_t v60 = v20;
  __chkstk_darwin(v20);
  uint64_t v57 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v54 = (uint64_t)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v53 - v25;
  uint64_t v27 = sub_100054B78((uint64_t *)&unk_1006006A0);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for PendingPlaybackMetadata();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v53 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  PendingPlaybackMetadata.init(adamId:uuid:)();
  int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30);
  uint64_t v66 = v13;
  if (v34 == 1)
  {
    sub_100054B1C((uint64_t)v29, (uint64_t *)&unk_1006006A0);
    if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0)
    {
LABEL_3:
      uint64_t v35 = swift_allocObject();
      *(unsigned char *)(v35 + 16) = 0;
      uint64_t v36 = swift_allocObject();
      *(unsigned char *)(v36 + 16) = 0;
      type metadata accessor for CoreDataFetcher();
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v36;
      *(void *)(v37 + 24) = v35;
      swift_retain();
      swift_retain();
      static CoreDataFetcher.performAndWaitWithSaveOnEpisode(with:block:)();
      swift_release();
      swift_beginAccess();
      if ((*(unsigned char *)(v35 + 16) & 1) != 0
        || (swift_beginAccess(),
            (id v38 = sub_1002D9B5C(a1, a2, v62, v68 & 1, *(unsigned __int8 *)(v36 + 16), v67 & 1)) == 0))
      {
        swift_release();
        swift_release();
      }
      else
      {
        v39 = v38;
        if (a10) {
          a9 = 3;
        }
        sub_1002C9C3C(v38, a9, 1, a1, a2, v64, v63, v65);
        swift_release();
        swift_release();
      }
      return;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v29, v30);
    sub_100041A98((void *)(v13 + 80), *(void *)(v13 + 104));
    dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0) {
      goto LABEL_3;
    }
  }
  unint64_t v41 = a2;
  uint64_t v42 = a1;
  if (v67)
  {
    uint64_t v43 = type metadata accessor for EpisodeListSettings();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v26, 1, 1, v43);
  }
  else
  {
    sub_100054BBC(v62, (uint64_t)v26, (uint64_t *)&unk_1005FEA40);
  }
  uint64_t v44 = static Set<>.default.getter();
  if (v68)
  {
    sub_100054B78(&qword_1005FEA50);
    uint64_t v45 = type metadata accessor for PlaybackIntent.Option();
    uint64_t v46 = *(void *)(v45 - 8);
    unint64_t v47 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_10046D010;
    (*(void (**)(unint64_t, void, uint64_t))(v46 + 104))(v48 + v47, enum case for PlaybackIntent.Option.smartPlay(_:), v45);
    sub_1002DA09C(v48, v44);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_10046D010;
  *(void *)(v49 + 32) = v42;
  *(void *)(v49 + 40) = v41;
  uint64_t v50 = v58;
  *id v58 = v49;
  (*(void (**)(uint64_t *, void, uint64_t))(v55 + 104))(v50, enum case for MediaIdentifier.localEpisodes(_:), v56);
  sub_100054BBC((uint64_t)v26, v54, (uint64_t *)&unk_1005FEA40);
  uint64_t v51 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v61, 1, 1, v51);
  swift_bridgeObjectRetain();
  uint64_t v52 = (uint64_t)v57;
  PlaybackIntent.init(id:listSettings:initialItem:options:)();
  sub_1002C9648(v52, v64, v63, a13 & 1, v65);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v52, v60);
  sub_100054B1C((uint64_t)v26, (uint64_t *)&unk_1005FEA40);
}

uint64_t sub_1002C9648(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5)
{
  int v28 = a3;
  int v29 = a4;
  uint64_t v27 = a2;
  uint64_t v8 = type metadata accessor for PlaybackIntent();
  uint64_t v24 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  uint64_t v25 = *(void *)(v5 + 120);
  uint64_t v26 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_100056D54(v5 + 80, (uint64_t)v31);
  sub_100054BBC(a5, (uint64_t)v30, &qword_1005F5D30);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v17 = (v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v16, v11, v24);
  unint64_t v22 = v21 + v17;
  *(void *)unint64_t v22 = v27;
  *(unsigned char *)(v22 + 8) = v28 & 1;
  *(unsigned char *)(v22 + 9) = v29;
  *(void *)(v21 + v18) = v25;
  sub_100042FC4(v31, v21 + v19);
  *(void *)(v21 + v20) = v26;
  sub_100053820((uint64_t)v30, v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8), &qword_1005F5D30);
  swift_retain();
  swift_retain();
  sub_1002C80F0((uint64_t)v14, (uint64_t)&unk_1006006B8, v21);
  swift_release();
  return sub_100054B1C((uint64_t)v14, (uint64_t *)&unk_100603370);
}

id sub_1002C98F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = (unsigned __int8 *)(a2 + 16);
  if (a1)
  {
    id v14 = [a1 podcast];
    if (v14)
    {
      uint64_t v15 = v14;
      unsigned __int8 v16 = [v14 isSerialShowTypeInFeed];
    }
    else
    {
      unsigned __int8 v16 = 0;
    }
    swift_beginAccess();
    *uint64_t v13 = v16;
    id result = [a1 isExternalType];
    if (result)
    {
      swift_beginAccess();
      *(unsigned char *)(a3 + 16) = 1;
      id result = [a1 enclosureURL];
      if (result)
      {
        unint64_t v18 = result;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        URL.init(string:)();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        {
          return (id)sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7750);
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
          id v19 = [self sharedApplication];
          URL._bridgeToObjectiveC()(v20);
          unint64_t v22 = v21;
          sub_10016E9B0((uint64_t)_swiftEmptyArrayStorage);
          type metadata accessor for OpenExternalURLOptionsKey(0);
          sub_1002DE3C0(&qword_1005F66F0, type metadata accessor for OpenExternalURLOptionsKey);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v19 openURL:v22 options:isa completionHandler:0];

          return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
        }
      }
    }
  }
  else
  {
    id result = (id)swift_beginAccess();
    *uint64_t v13 = 0;
  }
  return result;
}

void sub_1002C9C3C(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v9 = v8;
  sub_100054BBC(a8, (uint64_t)&aBlock, &qword_1005F5D30);
  if (v47)
  {
    sub_10004D29C(0, &qword_100600708);
    if (swift_dynamicCast())
    {
      unint64_t v17 = (void *)v43[0];
      unint64_t v18 = *(void **)(v9 + 128);
      type metadata accessor for AnalyticsEvent();
      id v19 = (void *)PFAnalyticsEventNamePlaybackReason;
      sub_100054B78((uint64_t *)&unk_1005F9450);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10046D010;
      *(void *)(inited + 32) = 0x6E6F73616572;
      *(void *)(inited + 40) = 0xE600000000000000;
      id v21 = v19;
      *(void *)(inited + 48) = String._bridgeToObjectiveC()();
      sub_10005A1DC(inited);
      unint64_t v22 = (void *)AnalyticsEvent.__allocating_init(name:payload:)();
      [v18 sendEvent:v22];

      id v23 = [self defaultInstance];
      uint64_t v24 = swift_allocObject();
      swift_weakInit();
      uint64_t v25 = (void *)swift_allocObject();
      v25[2] = v24;
      v25[3] = a1;
      v25[4] = v17;
      uint64_t v48 = sub_1002DE578;
      uint64_t v49 = v25;
      aBlock = _NSConcreteStackBlock;
      uint64_t v45 = 1107296256;
      uint64_t v46 = sub_1002CACA0;
      unint64_t v47 = &unk_10055ED50;
      uint64_t v26 = _Block_copy(&aBlock);
      id v27 = a1;
      id v28 = v17;
      swift_release();
      [v23 playManifest:v27 reason:4 interactive:0 completion:v26];
      _Block_release(v26);

      goto LABEL_10;
    }
    uint64_t v38 = a4;
    uint64_t v39 = a5;
    uint64_t v40 = a6;
    char v41 = a7;
  }
  else
  {
    uint64_t v38 = a4;
    uint64_t v39 = a5;
    uint64_t v40 = a6;
    char v41 = a7;
    sub_100054B1C((uint64_t)&aBlock, &qword_1005F5D30);
  }
  int v29 = *(void **)(v9 + 128);
  type metadata accessor for AnalyticsEvent();
  uint64_t v30 = (void *)PFAnalyticsEventNamePlaybackReason;
  sub_100054B78((uint64_t *)&unk_1005F9450);
  uint64_t v31 = swift_initStackObject();
  *(_OWORD *)(v31 + 16) = xmmword_10046D010;
  *(void *)(v31 + 32) = 0x6E6F73616572;
  *(void *)(v31 + 40) = 0xE600000000000000;
  sub_1002CAA18();
  id v32 = v30;
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(v31 + 48) = v33;
  sub_10005A1DC(v31);
  int v34 = (void *)AnalyticsEvent.__allocating_init(name:payload:)();
  [v29 sendEvent:v34];

  id v23 = [self defaultInstance];
  if (a3)
  {
    sub_100054BBC(a8, (uint64_t)v43, &qword_1005F5D30);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v9;
    *(void *)(v35 + 24) = sub_1002CACF4;
    *(void *)(v35 + 32) = 0;
    *(void *)(v35 + 40) = v40;
    *(unsigned char *)(v35 + 48) = v41 & 1;
    *(void *)(v35 + 56) = v38;
    *(void *)(v35 + 64) = v39;
    sub_100053820((uint64_t)v43, v35 + 72, &qword_1005F5D30);
    uint64_t v48 = sub_1002DE4F8;
    uint64_t v49 = (void *)v35;
    aBlock = _NSConcreteStackBlock;
    uint64_t v45 = 1107296256;
    uint64_t v46 = sub_1002CACA0;
    unint64_t v47 = &unk_10055ED00;
    uint64_t v36 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v9;
    *(void *)(v37 + 24) = sub_1002CACF4;
    *(void *)(v37 + 32) = 0;
    *(void *)(v37 + 40) = v40;
    *(unsigned char *)(v37 + 48) = v41 & 1;
    uint64_t v48 = sub_1002DE490;
    uint64_t v49 = (void *)v37;
    aBlock = _NSConcreteStackBlock;
    uint64_t v45 = 1107296256;
    uint64_t v46 = sub_1002CACA0;
    unint64_t v47 = &unk_10055ECB0;
    uint64_t v36 = _Block_copy(&aBlock);
  }
  swift_retain();
  swift_release();
  [v23 playManifest:a1 reason:a2 interactive:1 completion:v36];
  _Block_release(v36);
LABEL_10:
}

uint64_t sub_1002CA184@<X0>(void *a1@<X0>, BOOL *a2@<X1>, uint64_t a3@<X8>)
{
  if (!a1) {
    goto LABEL_11;
  }
  id v5 = a1;
  id v6 = [v5 podcastUuid];
  if (!v6)
  {

LABEL_11:
    uint64_t v16 = type metadata accessor for EpisodeListSettings();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v13 = v16;
    uint64_t v14 = a3;
    uint64_t v15 = 1;
    goto LABEL_12;
  }
  uint64_t v7 = v6;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v8 = [v5 podcast];
  if (!v8)
  {

    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v9 = v8;
  BOOL v10 = ([v5 isTrailer] & 1) != 0
     && (uint64_t)[v5 seasonNumber] >= 1
     && [v5 episodeNumber] == 0;
  *a2 = v10;
  MTPodcast.episodeSortType.getter();
  [v9 hidesPlayedEpisodes];
  MTPodcastHidesPlayedEpisodesResolved();
  EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();

  uint64_t v11 = type metadata accessor for EpisodeListSettings();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  uint64_t v13 = v11;
  uint64_t v14 = a3;
  uint64_t v15 = 0;
LABEL_12:

  return v12(v14, v15, 1, v13);
}

uint64_t sub_1002CA360@<X0>(void *a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    id v5 = a1;
    id v6 = [v5 podcastUuid];
    if (v6)
    {
      uint64_t v7 = v6;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v8 = [v5 podcast];
      if (v8)
      {
        uint64_t v9 = v8;
        if (([v8 hasAtLeastOneSeason] & 1) == 0)
        {
          id v21 = self;
          id v22 = [v21 predicateForEpisodesWithEpisodeNumbersGreaterThan:[v5 episodeNumber]];
          id v23 = [v21 predicateForEntitledEpisodes];
          id v24 = [v22 AND:v23];

          id v25 = [v21 predicateForAllEpisodesOnPodcastUuid:v7];
          id v26 = [v24 AND:v25];

          id v27 = *a2;
          *a2 = v26;

          id v19 = 0;
          char v20 = 2;
          goto LABEL_10;
        }
        if ([v5 hasNonZeroSeasonNumber])
        {
          BOOL v10 = self;
          id v11 = [v10 predicateForSeasonNumber:[v5 seasonNumber]];
          id v12 = [v10 predicateForEpisodesWithEpisodeNumbersGreaterThan:[v5 episodeNumber]];
          id v13 = [v11 AND:v12];

          id v14 = [v10 predicateForEntitledEpisodes];
          id v15 = [v13 AND:v14];

          id v16 = [v10 predicateForAllEpisodesOnPodcastUuid:v7];
          id v17 = [v15 AND:v16];

          unint64_t v18 = *a2;
          *a2 = v17;

          id v19 = [v5 seasonNumber];
          char v20 = 0;
LABEL_10:
          sub_1001A5A18((uint64_t)v19, v20);
          MTPodcast.episodeSortType.getter();
          [v9 hidesPlayedEpisodes];
          MTPodcastHidesPlayedEpisodesResolved();
          EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();
          sub_1001A5A58((uint64_t)v19, v20);

          uint64_t v28 = type metadata accessor for EpisodeListSettings();
          int v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
          uint64_t v30 = v28;
          uint64_t v31 = a3;
          uint64_t v32 = 0;
          goto LABEL_14;
        }
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v7 = v5;
    }
  }
  uint64_t v33 = type metadata accessor for EpisodeListSettings();
  int v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
  uint64_t v30 = v33;
  uint64_t v31 = a3;
  uint64_t v32 = 1;
LABEL_14:

  return v29(v31, v32, 1, v30);
}

uint64_t sub_1002CA78C(BOOL *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  __chkstk_darwin(v2);
  sub_10004D29C(0, (unint64_t *)&unk_1005F9460);
  uint64_t result = NSManagedObjectContext.count<A>(for:)();
  *a1 = result > 0;
  return result;
}

uint64_t sub_1002CAA18()
{
  return 0;
}

uint64_t sub_1002CAC28(void **a1, uint64_t a2, void *a3, void *a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1002DAADC(a1, a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1002CACA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_1002CACF4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id v3 = [self defaultInstance];
    [v3 seekToTime:*(double *)&a1];
  }
}

uint64_t sub_1002CAD6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void), uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a1 == 1)
  {
    uint64_t result = a3(a5, a6 & 1);
    if (!a8) {
      return result;
    }
  }
  else
  {
    sub_100041A98((void *)(a2 + 80), *(void *)(a2 + 104));
    uint64_t result = dispatch thunk of PendingPlaybackControllerProtocol.reset()();
    if (!a8) {
      return result;
    }
  }
  if (a1 == 9 || a1 == 5)
  {
    type metadata accessor for CoreDataFetcher();
    swift_allocObject();
    uint64_t v11 = swift_weakInit();
    __chkstk_darwin(v11);
    static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
    return swift_release();
  }
  return result;
}

void sub_1002CAEA0(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    if (a1)
    {
      id v7 = a1;
      [v7 reasonForNotPlayable];
      uint64_t v8 = EpisodeUnavailableReason.rawValue.getter();
      if (v8 == EpisodeUnavailableReason.rawValue.getter())
      {
        [v7 storeTrackId];
        uint64_t v9 = AdamID.init(rawValue:)();
        sub_100041A98((void *)(v6 + 40), *(void *)(v6 + 64));
        dispatch thunk of StoreDataProvider.fetchEpisodeUpsellAction(for:)();
        uint64_t v10 = swift_allocObject();
        swift_weakInit();
        sub_100054BBC(a3, (uint64_t)v14, &qword_1005F5D30);
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = v10;
        *(void *)(v11 + 24) = v9;
        sub_100053820((uint64_t)v14, v11 + 32, &qword_1005F5D30);
        uint64_t v15 = type metadata accessor for SyncTaskScheduler();
        id v16 = &protocol witness table for SyncTaskScheduler;
        sub_10004A244(v14);
        SyncTaskScheduler.init()();
        sub_100054B78((uint64_t *)&unk_100604700);
        sub_100044200(&qword_1006006F0, (uint64_t *)&unk_100604700);
        Promise.flatMap<A>(on:_:)();
        swift_release();
        swift_release();
        sub_10004D2D8((uint64_t)v14);
        uint64_t v12 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
        uint64_t v13 = static OS_dispatch_queue.main.getter();
        uint64_t v15 = v12;
        id v16 = &protocol witness table for OS_dispatch_queue;
        v14[0] = v13;
        Promise.then(perform:orCatchError:on:)();

        swift_release();
        swift_release();
        sub_10004D2D8((uint64_t)v14);
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1002CB12C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActionOutcome();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  int v6 = enum case for ActionOutcome.unsupported(_:);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (a1 == v6)
  {
    sub_10004D29C(0, (unint64_t *)&unk_1006006D0);
    id v7 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
    [v7 showDialogForReason:5 podcastTitle:0 completion:0];
  }
}

void sub_1002CB294()
{
  sub_10004D29C(0, (unint64_t *)&unk_1006006D0);
  id v0 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  [v0 showDialogForReason:5 podcastTitle:0 completion:0];
}

uint64_t sub_1002CB310(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void), uint64_t a4, uint64_t a5, char a6)
{
  if (a1 != 1)
  {
    sub_100041A98((void *)(a2 + 80), *(void *)(a2 + 104));
    dispatch thunk of PendingPlaybackControllerProtocol.reset()();
  }
  return a3(a5, a6 & 1);
}

void sub_1002CB390(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v17 = v5;
    uint64_t v11 = swift_slowAlloc();
    unint64_t v18 = a4;
    uint64_t v12 = (uint8_t *)v11;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    swift_getErrorValue();
    uint64_t v13 = Error.localizedDescription.getter();
    uint64_t v19 = sub_10004B974(v13, v14, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Playback failed with status %{public}s. Alert was presented.", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v18;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  aBlock[4] = (uint64_t)j___ss6UInt64V8PodcastsE19int64Representations5Int64Vvg;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10018FFEC;
  uint64_t aBlock[3] = (uint64_t)&unk_10055EC60;
  uint64_t v15 = _Block_copy(aBlock);
  [a4 popTemplateAnimated:1 completion:v15];
  _Block_release(v15);
}

void sub_1002CB670(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134349056;
    aBlock[0] = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Playback failed with status %{public}ld.  Alert was presented.", v12, 0xCu);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  aBlock[4] = j___ss6UInt64V8PodcastsE19int64Representations5Int64Vvg;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10018FFEC;
  uint64_t aBlock[3] = &unk_10055EDC8;
  uint64_t v13 = _Block_copy(aBlock);
  [a4 popTemplateAnimated:1 completion:v13];
  _Block_release(v13);
}

uint64_t sub_1002CB88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a4;
  uint64_t v44 = a3;
  uint64_t v39 = a1;
  uint64_t v4 = type metadata accessor for ActionOutcome();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for OSLogger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v40 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1005F88A0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (id *)((char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    goto LABEL_8;
  }
  uint64_t v38 = v16;
  if (!swift_unknownObjectWeakLoadStrong()
    || (swift_getObjectType(),
        uint64_t v17 = dispatch thunk of ActionRunnerProvider.actionRunner.getter(),
        v37[1] = v18,
        swift_unknownObjectRelease(),
        !v17))
  {
    swift_release();
LABEL_8:
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v26._uint64_t countAndFlagsBits = 0xD000000000000032;
    v26._object = (void *)0x80000001004DBF60;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    unint64_t v47 = &type metadata for AdamID;
    v46[0] = v44;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100054B1C((uint64_t)v46, &qword_1005F5D30);
    v27._object = (void *)0x80000001004DBE80;
    v27._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_100054B78((uint64_t *)&unk_100604700);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ActionOutcome.unsupported(_:), v4);
    return Promise.__allocating_init(value:)();
  }
  type metadata accessor for ActionRunnerOptions();
  swift_retain();
  BaseObjectGraph.__allocating_init(_:)();
  uint64_t v19 = v42;
  sub_100054BBC(v42, (uint64_t)v46, &qword_1005F5D30);
  v37[0] = v17;
  if (!v47)
  {
    sub_100054B1C((uint64_t)v46, &qword_1005F5D30);
    goto LABEL_10;
  }
  sub_10004D29C(0, &qword_1006006F8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    uint64_t v22 = v43;
    id v24 = v40;
    uint64_t v23 = v41;
    uint64_t v25 = v39;
    id v21 = 0;
    goto LABEL_11;
  }
  char v20 = v45;
  id v21 = (void *)UIResponder.firstViewInResponderChain.getter();

  uint64_t v22 = v43;
  id v24 = v40;
  uint64_t v23 = v41;
  uint64_t v25 = v39;
LABEL_11:
  sub_100054BBC(v19, (uint64_t)&v45, &qword_1005F5D30);
  id v29 = v21;
  ActionOrigin.init(sender:view:)();
  ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v46, (uint64_t *)&unk_100600670);
  swift_release();

  sub_100056D54(v25, (uint64_t)v46);
  sub_100054B78(&qword_1005F82A0);
  uint64_t v30 = type metadata accessor for FlowAction();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v31 = v45;
  uint64_t v32 = v38;
  dispatch thunk of FlowAction.destination.getter();
  uint64_t v33 = type metadata accessor for FlowDestination();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {
    swift_release();
    sub_100054B1C((uint64_t)v32, (uint64_t *)&unk_1005F88A0);
LABEL_18:
    uint64_t v22 = v43;
LABEL_19:
    swift_getObjectType();
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v24, enum case for ActionMetricsBehavior.fromAction(_:), v22);
    uint64_t v28 = ActionRunner.perform(_:withMetrics:asPartOf:)();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v22);
    return v28;
  }
  if ((*(unsigned int (**)(id *, uint64_t))(v34 + 88))(v32, v33) != enum case for FlowDestination.upsell(_:))
  {
    swift_release();
    (*(void (**)(id *, uint64_t))(v34 + 8))(v32, v33);
    goto LABEL_18;
  }
  (*(void (**)(id *, uint64_t))(v34 + 96))(v32, v33);

  swift_getObjectType();
  unint64_t v47 = (void *)v30;
  uint64_t v48 = sub_1002DE3C0((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
  v46[0] = v31;
  uint64_t v35 = v43;
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v24, enum case for ActionMetricsBehavior.notProcessed(_:), v43);
  swift_retain();
  uint64_t v28 = ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v35);
  sub_10004D2D8((uint64_t)v46);
  return v28;
}

void sub_1002CC0AC(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v77 = a5;
  v80 = a2;
  int v79 = a4 & 1;
  uint64_t v8 = type metadata accessor for EpisodeOffer();
  uint64_t v76 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v75 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_100600690);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MediaIdentifier();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  __chkstk_darwin(v13);
  uint64_t v72 = (uint64_t *)((char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for PlaybackIntent();
  uint64_t v73 = *(void *)(v15 - 8);
  uint64_t v74 = v15;
  __chkstk_darwin(v15);
  uint64_t v71 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ShowOffer();
  uint64_t v67 = *(void *)(v17 - 8);
  uint64_t v68 = v17;
  __chkstk_darwin(v17);
  uint64_t v66 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for URL();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  int v63 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v20 - 8);
  uint64_t v78 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100054B78((uint64_t *)&unk_1006006A0);
  __chkstk_darwin(v22 - 8);
  id v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for PendingPlaybackMetadata();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  EpisodeOffer.contentId.getter();
  PendingPlaybackMetadata.init(adamId:uuid:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_100054B1C((uint64_t)v24, (uint64_t *)&unk_1006006A0);
    if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v24, v25);
    uint64_t v62 = v8;
    sub_100041A98((void *)(v5 + 80), *(void *)(v5 + 104));
    uint64_t v8 = v62;
    dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0)
    {
LABEL_3:
      type metadata accessor for CoreDataFetcher();
      uint64_t v29 = static CoreDataFetcher.episodeUuid(for:)();
      if (v30)
      {
        uint64_t v31 = v29;
        unint64_t v32 = v30;
        if (v80) {
          BOOL v33 = v80[2] == 0;
        }
        else {
          BOOL v33 = 1;
        }
        uint64_t v44 = type metadata accessor for EpisodeListSettings();
        uint64_t v45 = (uint64_t)v78;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v78, 1, 1, v44);
        memset(v81, 0, 32);
        uint64_t v46 = EpisodeOffer.contentId.getter();
        sub_1002C8EC4(v31, v32, v45, (uint64_t)v81, 0, v33, v46, 0, 0, 1, a3, v79, 0);
        swift_bridgeObjectRelease();
        sub_100054B1C((uint64_t)v81, &qword_1005F5D30);
        sub_100054B1C(v45, (uint64_t *)&unk_1005FEA40);
        return;
      }
      if (sub_1003E54E8())
      {
        sub_10004D29C(0, (unint64_t *)&unk_1006006D0);
        id v41 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
        uint64_t v42 = v66;
        EpisodeOffer.showOffer.getter();
        ShowOffer.title.getter();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v42, v68);
        NSString v43 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v41 showDialogForReason:1 podcastTitle:v43 completion:0];

        return;
      }
      if (EpisodeOffer.mediaType.getter() == 3) {
        goto LABEL_17;
      }
      uint64_t v49 = EpisodeMediaType.rawValue.getter();
      uint64_t v51 = v50;
      if (v49 == EpisodeMediaType.rawValue.getter() && v51 == v52)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v54 & 1) == 0)
        {
LABEL_17:
          if (v80 && MTPlaybackContinuousPlaybackEnabled())
          {
            sub_100054B78((uint64_t *)&unk_1005F8260);
            uint64_t v47 = swift_allocObject();
            *(_OWORD *)(v47 + 16) = xmmword_10046D010;
            *(void *)(v47 + 32) = EpisodeOffer.contentId.getter();
            *(void *)&v81[0] = v47;
            uint64_t v48 = swift_bridgeObjectRetain();
            sub_1001B152C(v48);
            sub_1002CCB0C(*(uint64_t *)&v81[0], a3, v79, v77);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v53 = EpisodeOffer.contentId.getter();
            sub_1002CD208(v53, a3, v79, v77);
          }
          return;
        }
      }
      id v55 = [self sharedApplication];
      uint64_t v56 = v63;
      EpisodeOffer.streamUrl.getter();
      URL._bridgeToObjectiveC()(v57);
      uint64_t v59 = v58;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v56, v65);
      sub_10016E9B0((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_1002DE3C0(&qword_1005F66F0, type metadata accessor for OpenExternalURLOptionsKey);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v55 openURL:v59 options:isa completionHandler:0];

      return;
    }
  }
  sub_100054B78((uint64_t *)&unk_1005F8260);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_10046D010;
  *(void *)(v34 + 32) = EpisodeOffer.contentId.getter();
  if (v80) {
    uint64_t v35 = v80;
  }
  else {
    uint64_t v35 = _swiftEmptyArrayStorage;
  }
  *(void *)&v81[0] = v34;
  swift_bridgeObjectRetain();
  sub_1001B152C((uint64_t)v35);
  uint64_t v36 = v72;
  *uint64_t v72 = *(void *)&v81[0];
  (*(void (**)(void *, void, uint64_t))(v69 + 104))(v36, enum case for MediaIdentifier.episodes(_:), v70);
  uint64_t v37 = type metadata accessor for EpisodeListSettings();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v78, 1, 1, v37);
  uint64_t v38 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, a1, v8);
  sub_10037FC50(v38, (uint64_t)v12);
  uint64_t v39 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v12, 0, 1, v39);
  static Set<>.default.getter();
  uint64_t v40 = (uint64_t)v71;
  PlaybackIntent.init(id:listSettings:initialItem:options:)();
  sub_1002C9648(v40, a3, v79, 0, v77);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v40, v74);
}

void sub_1002CCB0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v53 = a3;
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_100600690);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v11 - 8);
  uint64_t v58 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MediaIdentifier();
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = v13;
  __chkstk_darwin(v13);
  id v55 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for PlaybackIntent();
  uint64_t v56 = *(void *)(v15 - 8);
  uint64_t v57 = v15;
  __chkstk_darwin(v15);
  char v54 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_1006006A0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PendingPlaybackMetadata();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(a1 + 16);
  PendingPlaybackMetadata.init(adamId:uuid:)();
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  uint64_t v59 = v4;
  if (v25 == 1)
  {
    sub_100054B1C((uint64_t)v19, (uint64_t *)&unk_1006006A0);
    if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0) {
      goto LABEL_3;
    }
LABEL_13:
    int v32 = v53 & 1;
    BOOL v33 = v55;
    *id v55 = a1;
    (*(void (**)(void *, void, uint64_t))(v51 + 104))(v33, enum case for MediaIdentifier.episodes(_:), v52);
    uint64_t v34 = type metadata accessor for EpisodeListSettings();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v58, 1, 1, v34);
    uint64_t v35 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v10, 1, 1, v35);
    swift_bridgeObjectRetain();
    static Set<>.default.getter();
    uint64_t v36 = (uint64_t)v54;
    PlaybackIntent.init(id:listSettings:initialItem:options:)();
    sub_1002C9648(v36, a2, v32, 0, a4);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v36, v57);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
  uint64_t v50 = v10;
  sub_100041A98((void *)(v4 + 80), *(void *)(v4 + 104));
  uint64_t v10 = v50;
  dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if (static Podcasts.isBlueMoonEnabled()()) {
    goto LABEL_13;
  }
LABEL_3:
  if (v24)
  {
    uint64_t v58 = a4;
    swift_bridgeObjectRetain();
    uint64_t v26 = 0;
    uint64_t v27 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v30 = *(void *)(a1 + 8 * v26 + 32);
      if ((AdamID.isEmpty.getter() & 1) == 0)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v60 = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1001BA628(0, v27[2] + 1, 1);
          uint64_t v27 = v60;
        }
        unint64_t v29 = v27[2];
        unint64_t v28 = v27[3];
        if (v29 >= v28 >> 1)
        {
          sub_1001BA628(v28 > 1, v29 + 1, 1);
          uint64_t v27 = v60;
        }
        v27[2] = v29 + 1;
        v27[v29 + 4] = v30;
      }
      ++v26;
    }
    while (v24 != v26);
    swift_bridgeObjectRelease();
    uint64_t v37 = v27[2];
    if (v37)
    {
      sub_1001A5874();
      swift_retain();
      uint64_t v38 = 0;
      uint64_t v39 = (char *)_swiftEmptyArrayStorage;
      do
      {
        uint64_t v60 = (void *)v27[v38 + 4];
        uint64_t v40 = BinaryInteger.description.getter();
        uint64_t v42 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v39 = sub_10004CEAC(0, *((void *)v39 + 2) + 1, 1, v39);
        }
        unint64_t v44 = *((void *)v39 + 2);
        unint64_t v43 = *((void *)v39 + 3);
        if (v44 >= v43 >> 1) {
          uint64_t v39 = sub_10004CEAC((char *)(v43 > 1), v44 + 1, 1, v39);
        }
        ++v38;
        *((void *)v39 + 2) = v44 + 1;
        uint64_t v45 = &v39[16 * v44];
        *((void *)v45 + 4) = v40;
        *((void *)v45 + 5) = v42;
      }
      while (v37 != v38);
      swift_release();
    }
    else
    {
      uint64_t v39 = (char *)_swiftEmptyArrayStorage;
    }
    swift_release();
    uint64_t v46 = (objc_class *)type metadata accessor for NetworkMediaManifest();
    objc_allocWithZone(v46);
    id v47 = objc_allocWithZone(v46);
    uint64_t v48 = (char *)sub_100211C80(0, 0, (uint64_t)v39, 0, 0, 0, 0);
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    *(void *)&v48[OBJC_IVAR___MTNetworkMediaManifest_forwardItemCount] = v24;
    sub_1002C9C3C(v48, 3, 0, 0, 0, 0, 1, v58);
  }
}

void sub_1002CD208(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  int v8 = a3 & 1;
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_100600690);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v12 - 8);
  uint64_t v49 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MediaIdentifier();
  uint64_t v43 = *(void *)(v14 - 8);
  uint64_t v44 = v14;
  __chkstk_darwin(v14);
  uint64_t v46 = (uint64_t *)((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for PlaybackIntent();
  uint64_t v47 = *(void *)(v16 - 8);
  uint64_t v48 = v16;
  __chkstk_darwin(v16);
  uint64_t v45 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78((uint64_t *)&unk_1006006A0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for PendingPlaybackMetadata();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  PendingPlaybackMetadata.init(adamId:uuid:)();
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21);
  uint64_t v50 = v4;
  if (v25 == 1)
  {
    sub_100054B1C((uint64_t)v20, (uint64_t *)&unk_1006006A0);
    if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    sub_100054B78((uint64_t *)&unk_1005F8260);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_10046D010;
    *(void *)(v36 + 32) = a1;
    uint64_t v37 = v46;
    *uint64_t v46 = v36;
    (*(void (**)(uint64_t *, void, uint64_t))(v43 + 104))(v37, enum case for MediaIdentifier.episodes(_:), v44);
    uint64_t v38 = type metadata accessor for EpisodeListSettings();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v49, 1, 1, v38);
    uint64_t v39 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v11, 1, 1, v39);
    static Set<>.default.getter();
    uint64_t v40 = (uint64_t)v45;
    PlaybackIntent.init(id:listSettings:initialItem:options:)();
    sub_1002C9648(v40, a2, v8, 0, a4);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v40, v48);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  uint64_t v42 = a1;
  sub_100041A98((void *)(v4 + 80), *(void *)(v4 + 104));
  a1 = v42;
  dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if (static Podcasts.isBlueMoonEnabled()()) {
    goto LABEL_7;
  }
LABEL_3:
  if ((AdamID.isEmpty.getter() & 1) == 0)
  {
    id v26 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:a1];
    if (v26)
    {
      uint64_t v27 = v26;
      id v28 = [v26 description];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v30;

      int v32 = (objc_class *)type metadata accessor for NetworkMediaManifest();
      objc_allocWithZone(v32);
      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_10046D010;
      *(void *)(v33 + 32) = v29;
      *(void *)(v33 + 40) = v31;
      id v34 = objc_allocWithZone(v32);
      uint64_t v35 = (void *)sub_100211C80(0, 0, v33, 0, 0, 0, 0);
      swift_getObjectType();
      swift_deallocPartialClassInstance();
      sub_1002C9C3C(v35, 3, 0, 0, 0, a2, v8, a4);
    }
  }
}

void sub_1002CD808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_100600690);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MediaIdentifier();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for PlaybackIntent();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (static Podcasts.isBlueMoonEnabled()())
  {
    *uint64_t v13 = a1;
    (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for MediaIdentifier.podcast(_:), v10);
    uint64_t v18 = type metadata accessor for EpisodeListSettings();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 1, 1, v18);
    uint64_t v19 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
    static Set<>.default.getter();
    PlaybackIntent.init(id:listSettings:initialItem:options:)();
    sub_1002C9648((uint64_t)v17, 0, 1, 0, a2);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else if ((AdamID.isEmpty.getter() & 1) == 0)
  {
    id v20 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:a1];
    if (v20)
    {
      uint64_t v21 = v20;
      id v22 = [v20 description];
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;

      id v26 = (objc_class *)type metadata accessor for NetworkMediaManifest();
      objc_allocWithZone(v26);
      id v27 = objc_allocWithZone(v26);
      uint64_t v29 = (void *)sub_100211C80(v23, v25, 0, 0, 0, 0, 0);
      swift_getObjectType();
      swift_deallocPartialClassInstance();
      sub_1002C9C3C(v29, 3, 0, 0, 0, 0, 1, a2);

      id v28 = v29;
    }
  }
}

void sub_1002CDC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a5;
  uint64_t v40 = a4;
  uint64_t v41 = a3;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_100600690);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MediaIdentifier();
  uint64_t v35 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for PlaybackIntent();
  uint64_t v34 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_1006006A0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PendingPlaybackMetadata();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (static Podcasts.isBlueMoonEnabled()())
  {
    uint64_t v24 = v35;
    uint64_t v25 = v39;
    uint64_t v26 = v14;
    uint64_t v27 = v40;
    if (v40)
    {
      *uint64_t v13 = v38;
      v13[1] = v25;
      v13[2] = v41;
      v13[3] = v27;
      (*(void (**)(void *, void, uint64_t))(v24 + 104))(v13, enum case for MediaIdentifier.station(_:), v11);
      uint64_t v28 = type metadata accessor for EpisodeListSettings();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
      uint64_t v29 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v7, 1, 1, v29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      static Set<>.default.getter();
      PlaybackIntent.init(id:listSettings:initialItem:options:)();
      sub_1002C9648((uint64_t)v16, 0, 1, 0, v36);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v26);
    }
  }
  else
  {
    NSString v30 = String._bridgeToObjectiveC()();
    if (v40)
    {
      uint64_t v31 = v40;
      NSString v32 = String._bridgeToObjectiveC()();
    }
    else
    {
      uint64_t v31 = 0;
      NSString v32 = 0;
    }
    id v33 = [self playStationUuid:v30 episodeUuid:v32];

    if (v33)
    {
      swift_bridgeObjectRetain();
      PendingPlaybackMetadata.init(adamId:uuid:)();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
      {
        sub_100054B1C((uint64_t)v19, (uint64_t *)&unk_1006006A0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
        sub_100041A98((void *)(v37 + 80), *(void *)(v37 + 104));
        dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      }
      sub_1002C9C3C(v33, 3, 1, v41, v31, 0, 1, v36);
    }
  }
}

void sub_1002CE150(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_100054B78((uint64_t *)&unk_1005FEBE0);
  BaseObjectGraph.inject<A>(_:)();
  id v6 = [v10[0] mainQueueContext];
  swift_unknownObjectRelease();
  sub_100054BBC(a2, (uint64_t)v11, &qword_1005F5D30);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = v3;
  sub_100053820((uint64_t)v11, (uint64_t)(v7 + 5), &qword_1005F5D30);
  v10[4] = sub_1002DE7A0;
  v10[5] = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = (id)1107296256;
  v10[2] = sub_10003B424;
  v10[3] = &unk_10055EF08;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v6;
  swift_retain();
  swift_release();
  [v9 performBlock:v8];
  _Block_release(v8);
}

uint64_t sub_1002CE2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[0] = a4;
  v22[1] = a3;
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_100600690);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MediaIdentifier();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for PlaybackIntent();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = NSManagedObjectContext.unsafeFromYourShowsEpisodeIdentifiers(forCategoryAdamID:)();
  if (static Podcasts.isBlueMoonEnabled()())
  {
    *uint64_t v13 = v18;
    (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for MediaIdentifier.localEpisodes(_:), v10);
    uint64_t v19 = type metadata accessor for EpisodeListSettings();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
    uint64_t v20 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
    static Set<>.default.getter();
    PlaybackIntent.init(id:listSettings:initialItem:options:)();
    sub_1002C9648((uint64_t)v17, 0, 1, 0, v22[0]);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1002CE5C8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v76 = a4;
  uint64_t v73 = a2;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  v59[1] = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for OSLogger();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v62 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v8 - 8);
  uint64_t v70 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v69 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for FlowPresentationContext();
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v11 = __chkstk_darwin(v67);
  uint64_t v71 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v65 = (char *)v59 - v13;
  uint64_t v14 = type metadata accessor for FlowDestination();
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  __chkstk_darwin(v15);
  uint64_t v16 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ActionMetricsBehavior();
  __chkstk_darwin(v20);
  uint64_t v75 = v22;
  uint64_t v23 = *(void (**)(void))(v22 + 104);
  uint64_t v74 = (char *)v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v24;
  v23();
  type metadata accessor for ActionRunnerOptions();
  swift_retain();
  BaseObjectGraph.__allocating_init(_:)();
  memset(v81, 0, sizeof(v81));
  id v25 = [a3 view];
  sub_100054BBC((uint64_t)v81, (uint64_t)v77, &qword_1005F5D30);
  id v26 = v25;
  ActionOrigin.init(sender:view:)();
  uint64_t v27 = ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v78, (uint64_t *)&unk_100600670);
  swift_release();

  sub_100054B1C((uint64_t)v81, &qword_1005F5D30);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v76, v16);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v19, v16) == enum case for PreviewingPresentationHint.inferTab(_:))
  {
    uint64_t v28 = v65;
    if (swift_unknownObjectWeakLoadStrong()
      && (swift_getObjectType(),
          uint64_t v29 = dispatch thunk of ActionRunnerProvider.actionRunner.getter(),
          swift_unknownObjectRelease(),
          v29))
    {
      sub_100054B78(&qword_100603DD0);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_10046D010;
      static FlowDestination.page(_:)();
      (*(void (**)(char *, void, uint64_t))(v66 + 104))(v28, enum case for FlowPresentationContext.pushDetail(_:), v67);
      unsigned __int8 v31 = static Link.Presentation.textFollowsTintColor.getter();
      unsigned __int8 v32 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      Link.Presentation.init(rawValue:)();
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v31) {
        Link.Presentation.init(rawValue:)();
      }
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v32) {
        Link.Presentation.init(rawValue:)();
      }
      (*(void (**)(char *, void, uint64_t))(v60 + 104))(v69, enum case for FlowDestinationPageHeader.standard(_:), v61);
      static ActionMetrics.notInstrumented.getter();
      uint64_t v33 = type metadata accessor for FlowAction();
      swift_allocObject();
      uint64_t v34 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
      *(void *)(v30 + 56) = v33;
      *(void *)(v30 + 64) = sub_1002DE3C0((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
      *(void *)(v30 + 32) = v34;
      Link.Presentation.init(rawValue:)();
      static ActionMetrics.notInstrumented.getter();
      uint64_t v35 = type metadata accessor for TabChangeAction();
      swift_allocObject();
      uint64_t v36 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
      swift_getObjectType();
      uint64_t v79 = v35;
      uint64_t v80 = sub_1002DE3C0((unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
      v78[0] = v36;
      swift_retain();
      uint64_t v37 = v74;
      ActionRunner.perform(_:withMetrics:asPartOf:)();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v72);
      return sub_10004D2D8((uint64_t)v78);
    }
    else
    {
      uint64_t v47 = v62;
      static OSLogger.actions.getter();
      sub_100054B78((uint64_t *)&unk_100603DC0);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v48._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v48._object = (void *)0x80000001004DBE60;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      uint64_t v49 = type metadata accessor for URL();
      uint64_t v79 = v49;
      uint64_t v50 = sub_10004A244(v78);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v50, v73, v49);
      LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
      sub_100054B1C((uint64_t)v78, &qword_1005F5D30);
      v51._object = (void *)0x80000001004DBE80;
      v51._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v51);
      LogMessage.init(stringInterpolation:)();
      uint64_t v52 = v64;
      Logger.error(_:)();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v52);
      return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v74, v72);
    }
  }
  else
  {
    v59[0] = v19;
    uint64_t v68 = v16;
    uint64_t v76 = v27;
    if (UIResponder.nearestActionRunner.getter())
    {
      static FlowDestination.page(_:)();
      (*(void (**)(char *, void, uint64_t))(v66 + 104))(v71, enum case for FlowPresentationContext.infer(_:), v67);
      char v39 = static Link.Presentation.textFollowsTintColor.getter();
      unsigned __int8 v40 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      Link.Presentation.init(rawValue:)();
      Link.Presentation.init(rawValue:)();
      char v41 = Link.Presentation.init(rawValue:)();
      uint64_t v42 = v68;
      if (v41 != v39) {
        Link.Presentation.init(rawValue:)();
      }
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v40) {
        Link.Presentation.init(rawValue:)();
      }
      uint64_t v43 = v72;
      (*(void (**)(char *, void, uint64_t))(v60 + 104))(v69, enum case for FlowDestinationPageHeader.standard(_:), v61);
      static ActionMetrics.notInstrumented.getter();
      uint64_t v44 = type metadata accessor for FlowAction();
      swift_allocObject();
      uint64_t v45 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
      swift_getObjectType();
      uint64_t v79 = v44;
      uint64_t v80 = sub_1002DE3C0((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
      v78[0] = v45;
      swift_retain();
      uint64_t v46 = v74;
      ActionRunner.perform(_:withMetrics:asPartOf:)();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v46, v43);
      sub_10004D2D8((uint64_t)v78);
      return (*(uint64_t (**)(void, uint64_t))(v17 + 8))(v59[0], v42);
    }
    else
    {
      int v53 = v62;
      static OSLogger.actions.getter();
      sub_100054B78((uint64_t *)&unk_100603DC0);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v54._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v54._object = (void *)0x80000001004DBE60;
      LogMessage.StringInterpolation.appendLiteral(_:)(v54);
      uint64_t v55 = type metadata accessor for URL();
      uint64_t v79 = v55;
      uint64_t v56 = sub_10004A244(v78);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v56, v73, v55);
      LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
      sub_100054B1C((uint64_t)v78, &qword_1005F5D30);
      v57._object = (void *)0x80000001004DBE80;
      v57._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v57);
      LogMessage.init(stringInterpolation:)();
      uint64_t v58 = v64;
      Logger.error(_:)();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v53, v58);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v72);
      return (*(uint64_t (**)(void, uint64_t))(v17 + 8))(v59[0], v68);
    }
  }
}

uint64_t sub_1002CF408(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  uint64_t v23 = a1;
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = sub_1002C5634();
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    return sub_100054B1C((uint64_t)v13, (uint64_t *)&unk_1005F7750);
  }
  uint64_t v19 = v18;
  v22[1] = a5;
  id v20 = [v18 episodeShareUrl];

  if (v20)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
  }
  sub_100053820((uint64_t)v11, (uint64_t)v13, (uint64_t *)&unk_1005F7750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_100054B1C((uint64_t)v13, (uint64_t *)&unk_1005F7750);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  sub_1002CE5C8(v23, (uint64_t)v17, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1002CF68C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v82 = a5;
  uint64_t v77 = a2;
  uint64_t v78 = a3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v62 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for OSLogger();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v65 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v9 - 8);
  uint64_t v75 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v74 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for FlowPresentationContext();
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v12 = __chkstk_darwin(v73);
  uint64_t v76 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v60 - v14;
  uint64_t v70 = type metadata accessor for FlowDestination();
  uint64_t v69 = *(void *)(v70 - 8);
  uint64_t v15 = __chkstk_darwin(v70);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v60 - v18;
  uint64_t v20 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ActionMetricsBehavior();
  __chkstk_darwin(v24);
  uint64_t v80 = v26;
  uint64_t v27 = *(void (**)(void))(v26 + 104);
  uint64_t v79 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = v28;
  v27();
  type metadata accessor for ActionRunnerOptions();
  swift_retain();
  BaseObjectGraph.__allocating_init(_:)();
  memset(v88, 0, sizeof(v88));
  id v29 = [a4 view];
  sub_100054BBC((uint64_t)v88, (uint64_t)v83, &qword_1005F5D30);
  id v30 = v29;
  ActionOrigin.init(sender:view:)();
  uint64_t v31 = ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)&v84, (uint64_t *)&unk_100600670);
  swift_release();

  sub_100054B1C((uint64_t)v88, &qword_1005F5D30);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v82, v20);
  if ((*(unsigned int (**)(char *, uint64_t))(v21 + 88))(v23, v20) == enum case for PreviewingPresentationHint.inferTab(_:))
  {
    unsigned __int8 v32 = v68;
    if (swift_unknownObjectWeakLoadStrong()
      && (swift_getObjectType(),
          uint64_t v33 = dispatch thunk of ActionRunnerProvider.actionRunner.getter(),
          swift_unknownObjectRelease(),
          v33))
    {
      sub_100054B78(&qword_100603DD0);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_10046D010;
      uint64_t v35 = v78;
      *(void *)uint64_t v19 = v77;
      *((void *)v19 + 1) = v35;
      *((void *)v19 + 3) = 0;
      *((void *)v19 + 4) = 0;
      *((void *)v19 + 2) = 0;
      v19[40] = 1;
      *((void *)v19 + 6) = 0;
      v19[56] = 1;
      (*(void (**)(char *, void, uint64_t))(v69 + 104))(v19, enum case for FlowDestination.episodeDetails(_:), v70);
      (*(void (**)(char *, void, uint64_t))(v72 + 104))(v32, enum case for FlowPresentationContext.pushDetail(_:), v73);
      swift_bridgeObjectRetain();
      unsigned __int8 v36 = static Link.Presentation.textFollowsTintColor.getter();
      unsigned __int8 v37 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      Link.Presentation.init(rawValue:)();
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v36) {
        Link.Presentation.init(rawValue:)();
      }
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v37) {
        Link.Presentation.init(rawValue:)();
      }
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(v74, enum case for FlowDestinationPageHeader.standard(_:), v64);
      static ActionMetrics.notInstrumented.getter();
      uint64_t v38 = type metadata accessor for FlowAction();
      swift_allocObject();
      uint64_t v39 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
      *(void *)(v34 + 56) = v38;
      *(void *)(v34 + 64) = sub_1002DE3C0((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
      *(void *)(v34 + 32) = v39;
      Link.Presentation.init(rawValue:)();
      static ActionMetrics.notInstrumented.getter();
      uint64_t v40 = type metadata accessor for TabChangeAction();
      swift_allocObject();
      uint64_t v41 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
      swift_getObjectType();
      uint64_t v86 = (void *)v40;
      uint64_t v87 = sub_1002DE3C0((unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
      uint64_t v84 = v41;
      swift_retain();
      uint64_t v42 = v79;
      ActionRunner.perform(_:withMetrics:asPartOf:)();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v42, v81);
      return sub_10004D2D8((uint64_t)&v84);
    }
    else
    {
      uint64_t v52 = v65;
      static OSLogger.actions.getter();
      sub_100054B78((uint64_t *)&unk_100603DC0);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v53._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v53._object = (void *)0x80000001004DBED0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v53);
      uint64_t v86 = &type metadata for String;
      uint64_t v84 = v77;
      uint64_t v85 = v78;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100054B1C((uint64_t)&v84, &qword_1005F5D30);
      v54._object = (void *)0x80000001004DBE80;
      v54._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v54);
      LogMessage.init(stringInterpolation:)();
      uint64_t v55 = v67;
      Logger.error(_:)();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v52, v55);
      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v79, v81);
    }
  }
  else
  {
    uint64_t v61 = v23;
    uint64_t v82 = v20;
    if (UIResponder.nearestActionRunner.getter())
    {
      uint64_t v71 = v31;
      uint64_t v44 = v78;
      *(void *)uint64_t v17 = v77;
      *((void *)v17 + 1) = v44;
      *((void *)v17 + 3) = 0;
      *((void *)v17 + 4) = 0;
      *((void *)v17 + 2) = 0;
      v17[40] = 1;
      *((void *)v17 + 6) = 0;
      v17[56] = 1;
      (*(void (**)(char *, void, uint64_t))(v69 + 104))(v17, enum case for FlowDestination.episodeDetails(_:), v70);
      (*(void (**)(char *, void, uint64_t))(v72 + 104))(v76, enum case for FlowPresentationContext.infer(_:), v73);
      swift_bridgeObjectRetain();
      char v45 = static Link.Presentation.textFollowsTintColor.getter();
      unsigned __int8 v46 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      Link.Presentation.init(rawValue:)();
      Link.Presentation.init(rawValue:)();
      char v47 = Link.Presentation.init(rawValue:)();
      uint64_t v48 = v82;
      if (v47 != v45) {
        Link.Presentation.init(rawValue:)();
      }
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v46) {
        Link.Presentation.init(rawValue:)();
      }
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(v74, enum case for FlowDestinationPageHeader.standard(_:), v64);
      static ActionMetrics.notInstrumented.getter();
      uint64_t v49 = type metadata accessor for FlowAction();
      swift_allocObject();
      uint64_t v50 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
      swift_getObjectType();
      uint64_t v86 = (void *)v49;
      uint64_t v87 = sub_1002DE3C0((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
      uint64_t v84 = v50;
      swift_retain();
      Swift::String v51 = v79;
      ActionRunner.perform(_:withMetrics:asPartOf:)();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v51, v81);
      sub_10004D2D8((uint64_t)&v84);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v61, v48);
    }
    else
    {
      uint64_t v56 = v65;
      static OSLogger.actions.getter();
      sub_100054B78((uint64_t *)&unk_100603DC0);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v57._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v57._object = (void *)0x80000001004DBED0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v57);
      uint64_t v86 = &type metadata for String;
      uint64_t v84 = v77;
      uint64_t v85 = v78;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100054B1C((uint64_t)&v84, &qword_1005F5D30);
      v58._object = (void *)0x80000001004DBE80;
      v58._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v58);
      LogMessage.init(stringInterpolation:)();
      uint64_t v59 = v67;
      Logger.error(_:)();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v56, v59);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v61, v82);
    }
  }
}

uint64_t sub_1002D052C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v23 = a5;
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v23 - v17;
  id v19 = [self episodeUrlForPodcastStoreId:a3 episodeStoreId:a2];
  if (v19)
  {
    uint64_t v20 = v19;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v21(v11, v16, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      v21(v18, v11, v12);
      sub_1002CE5C8(a1, (uint64_t)v18, a4, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  return sub_100054B1C((uint64_t)v11, (uint64_t *)&unk_1005F7750);
}

uint64_t sub_1002D078C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v23 = a1;
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v22 - v16;
  id v18 = [self podcastUrlForStoreId:a2];
  if (v18)
  {
    id v19 = v18;
    uint64_t v22 = v4;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v10, v15, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v20(v17, v10, v11);
      sub_1002CE5C8(v23, (uint64_t)v17, a3, a4);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  return sub_100054B1C((uint64_t)v10, (uint64_t *)&unk_1005F7750);
}

uint64_t sub_1002D09E8(void *a1, uint64_t a2, uint64_t a3, void *a4, char *a5, int a6)
{
  int v34 = a6;
  uint64_t v33 = a5;
  uint64_t v35 = a3;
  unsigned __int8 v36 = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v38 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    if (a1)
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      uint64_t v32 = v7;
      id v18 = a1;
      uint64_t v31 = static OS_dispatch_queue.main.getter();
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v33, v13);
      unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v20 = (char *)swift_allocObject();
      id v30 = v12;
      uint64_t v21 = v35;
      *((void *)v20 + 2) = v17;
      *((void *)v20 + 3) = v21;
      uint64_t v33 = v9;
      uint64_t v22 = v36;
      *((void *)v20 + 4) = v18;
      *((void *)v20 + 5) = v22;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v20[v19], (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
      v20[v19 + v15] = v34 & 1;
      aBlock[4] = sub_1002DDF2C;
      aBlock[5] = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003B424;
      uint64_t aBlock[3] = &unk_10055EAF8;
      uint64_t v23 = _Block_copy(aBlock);
      id v24 = v18;
      swift_retain();
      swift_retain();
      id v25 = v22;
      swift_release();
      uint64_t v26 = v30;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1002DE3C0((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
      uint64_t v27 = v32;
      uint64_t v28 = v33;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v29 = (void *)v31;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v23);
      swift_release();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v26, v38);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1002D0E30(uint64_t a1, void *a2, void *a3, char *a4, int a5)
{
  LODWORD(v88) = a5;
  uint64_t v90 = a4;
  id v91 = a3;
  uint64_t v92 = a2;
  uint64_t v89 = a1;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v84 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v78 = (char *)&v76 - v8;
  uint64_t v86 = type metadata accessor for OSLogger();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v9 = __chkstk_darwin(v86);
  uint64_t v83 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v77 = (char *)&v76 - v11;
  uint64_t v12 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v12 - 8);
  uint64_t v82 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for FlowPresentationContext();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v81 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchPredicate();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (uint64_t *)((char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  *uint64_t v26 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v24 + 104))(v26, enum case for DispatchPredicate.onQueue(_:), v23);
  char v27 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v24 + 8))(v26, v23);
  if (v27)
  {
    uint64_t v87 = v20;
    id v29 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
    id v30 = (unsigned int *)&enum case for ActionMetricsBehavior.notProcessed(_:);
    if ((v88 & 1) == 0) {
      id v30 = (unsigned int *)&enum case for ActionMetricsBehavior.fromAction(_:);
    }
    uint64_t v31 = *v30;
    unint64_t v88 = v22;
    v29(v22, v31, v19);
    type metadata accessor for ActionRunnerOptions();
    swift_retain();
    BaseObjectGraph.__allocating_init(_:)();
    memset(v99, 0, 32);
    id v32 = [v91 view];
    sub_100054BBC((uint64_t)v99, (uint64_t)v93, &qword_1005F5D30);
    id v33 = v32;
    ActionOrigin.init(sender:view:)();
    uint64_t v89 = ActionRunnerOptions.withActionOrigin(_:)();
    sub_100054B1C((uint64_t)&v94, (uint64_t *)&unk_100600670);
    swift_release();

    sub_100054B1C((uint64_t)v99, &qword_1005F5D30);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v90, v15);
    uint64_t v34 = v19;
    if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v18, v15) == enum case for PreviewingPresentationHint.inferTab(_:))
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      unsigned __int8 v36 = v92;
      uint64_t v37 = v77;
      if (Strong)
      {
        swift_getObjectType();
        uint64_t v38 = dispatch thunk of ActionRunnerProvider.actionRunner.getter();
        swift_unknownObjectRelease();
        if (v38)
        {
          uint64_t v39 = type metadata accessor for FlowAction();
          uint64_t v40 = (uint64_t)v81;
          (*(void (**)(char *, void, uint64_t))(v79 + 104))(v81, enum case for FlowPresentationContext.pushDetail(_:), v80);
          id v41 = v36;
          uint64_t v42 = (uint64_t)v82;
          static ActionMetrics.notInstrumented.getter();
          uint64_t v43 = FlowAction.init(podcast:presentationContext:actionMetrics:)(v41, v40, v42);
          if (v43)
          {
            uint64_t v44 = v43;
            sub_10004D29C(0, (unint64_t *)&qword_100603DE0);
            static UITraitCollection.interfaceMode.getter();
            sub_100054B78(&qword_100603DD0);
            uint64_t v45 = swift_allocObject();
            *(_OWORD *)(v45 + 16) = xmmword_10046D010;
            *(void *)(v45 + 56) = v39;
            uint64_t v46 = v34;
            *(void *)(v45 + 64) = sub_1002DE3C0((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
            *(void *)(v45 + 32) = v44;
            swift_retain();
            Link.Presentation.init(rawValue:)();
            static ActionMetrics.notInstrumented.getter();
            uint64_t v47 = type metadata accessor for TabChangeAction();
            swift_allocObject();
            uint64_t v48 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
            swift_getObjectType();
            uint64_t v97 = (void *)v47;
            uint64_t v98 = sub_1002DE3C0((unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
            uint64_t v94 = v48;
            swift_retain();
            uint64_t v49 = v88;
            ActionRunner.perform(_:withMetrics:asPartOf:)();
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v87 + 8))(v49, v46);
            return sub_10004D2D8((uint64_t)&v94);
          }
          swift_unknownObjectRelease();
        }
      }
      static OSLogger.actions.getter();
      sub_100054B78((uint64_t *)&unk_100603DC0);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v69._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v69._object = (void *)0x80000001004DBEA0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v69);
      uint64_t v70 = MTPodcast.adamId.getter();
      if (v71)
      {
        uint64_t v70 = 0;
        uint64_t v95 = 0;
        uint64_t v96 = 0;
        uint64_t v97 = 0;
      }
      else
      {
        uint64_t v97 = &type metadata for AdamID;
      }
      uint64_t v72 = v87;
      uint64_t v73 = v88;
      uint64_t v94 = v70;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100054B1C((uint64_t)&v94, &qword_1005F5D30);
      v74._object = (void *)0x80000001004DBE80;
      v74._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v74);
      LogMessage.init(stringInterpolation:)();
      uint64_t v75 = v86;
      Logger.error(_:)();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v37, v75);
      return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v73, v34);
    }
    else
    {
      uint64_t v90 = v18;
      uint64_t v50 = UIResponder.nearestActionRunner.getter();
      Swift::String v51 = v92;
      if (v50)
      {
        uint64_t v52 = v19;
        uint64_t v53 = type metadata accessor for FlowAction();
        uint64_t v54 = (uint64_t)v81;
        (*(void (**)(char *, void, uint64_t))(v79 + 104))(v81, enum case for FlowPresentationContext.infer(_:), v80);
        id v55 = v51;
        uint64_t v56 = (uint64_t)v82;
        static ActionMetrics.notInstrumented.getter();
        uint64_t v57 = FlowAction.init(podcast:presentationContext:actionMetrics:)(v55, v54, v56);
        if (v57)
        {
          uint64_t v58 = v57;
          swift_getObjectType();
          uint64_t v97 = (void *)v53;
          uint64_t v98 = sub_1002DE3C0((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
          uint64_t v94 = v58;
          swift_retain();
          uint64_t v59 = v88;
          ActionRunner.perform(_:withMetrics:asPartOf:)();
          swift_release();
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v52);
          sub_10004D2D8((uint64_t)&v94);
          return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v90, v15);
        }
        swift_unknownObjectRelease();
        uint64_t v34 = v52;
      }
      static OSLogger.actions.getter();
      sub_100054B78((uint64_t *)&unk_100603DC0);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v60._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v60._object = (void *)0x80000001004DBEA0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v60);
      uint64_t v61 = MTPodcast.adamId.getter();
      if (v62)
      {
        uint64_t v61 = 0;
        uint64_t v95 = 0;
        uint64_t v96 = 0;
        uint64_t v97 = 0;
      }
      else
      {
        uint64_t v97 = &type metadata for AdamID;
      }
      uint64_t v63 = v87;
      uint64_t v64 = v88;
      uint64_t v65 = v90;
      uint64_t v94 = v61;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100054B1C((uint64_t)&v94, &qword_1005F5D30);
      v66._object = (void *)0x80000001004DBE80;
      v66._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v66);
      LogMessage.init(stringInterpolation:)();
      uint64_t v67 = v86;
      uint64_t v68 = v83;
      Logger.error(_:)();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v68, v67);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v65, v15);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D1B0C(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v205 = a5;
  uint64_t v204 = a4;
  uint64_t v203 = a3;
  v206 = a1;
  uint64_t v6 = sub_100054B78(&qword_1006005B8);
  __chkstk_darwin(v6 - 8);
  v215 = (char *)&v185 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = type metadata accessor for ShowOffer();
  v214 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v195 - 8);
  __chkstk_darwin(v195);
  v192 = (char *)&v185 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v190 = (uint64_t)&v185 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v191 = (uint64_t)&v185 - v13;
  __chkstk_darwin(v12);
  uint64_t v197 = (uint64_t)&v185 - v14;
  v194 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v194);
  v213 = (uint64_t *)((char *)&v185 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v200 = type metadata accessor for InteractionContext();
  uint64_t v202 = *(void *)(v200 - 8);
  uint64_t v16 = __chkstk_darwin(v200);
  v188 = (char *)&v185 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v189 = (char *)&v185 - v19;
  __chkstk_darwin(v18);
  v201 = (char *)&v185 - v20;
  uint64_t v198 = type metadata accessor for PresentationSource();
  uint64_t v199 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  uint64_t v196 = (uint64_t)&v185 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100054B78((uint64_t *)&unk_1006005C0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v185 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  char v27 = (char *)&v185 - v26;
  uint64_t v28 = type metadata accessor for EpisodeOffer();
  uint64_t v212 = *(void *)(v28 - 8);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v185 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v185 - v33;
  __chkstk_darwin(v32);
  unsigned __int8 v36 = (char *)&v185 - v35;
  uint64_t v37 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v38 = __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v185 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v207 = v41;
  uint64_t v42 = *(void (**)(void))(v41 + 104);
  v209 = (char *)&v185 - v43;
  uint64_t v208 = v44;
  v42();
  uint64_t v45 = (void (*)(char *, uint64_t, uint64_t))a2;
  sub_100056D54(a2, (uint64_t)&v219);
  uint64_t v46 = sub_100054B78(&qword_1005F8418);
  type metadata accessor for LegacyEpisodeLockup();
  if (swift_dynamicCast())
  {
    uint64_t v47 = v205;
    uint64_t v48 = v218[0];
    uint64_t v49 = _swiftEmptyArrayStorage;
    unint64_t v217 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v50 = *(void *)(v203 + 16);
    if (v50)
    {
      uint64_t v51 = v203 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_100056D54(v51, (uint64_t)&v219);
        sub_100056D54((uint64_t)&v219, (uint64_t)v218);
        if ((swift_dynamicCast() & 1) == 0) {
          uint64_t v216 = 0;
        }
        sub_10004D2D8((uint64_t)&v219);
        if (v216)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v217 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v217 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        v51 += 40;
        --v50;
      }
      while (v50);
      swift_bridgeObjectRelease();
      uint64_t v49 = (void *)v217;
    }
    uint64_t v71 = v47;
    uint64_t v72 = (uint64_t)v209;
    uint64_t v73 = sub_1002DC3E0(v206, v48, (unint64_t)v49, v204, v71, (uint64_t)v209);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v72, v208);
  }
  else
  {
    v210 = v34;
    v211 = v31;
    uint64_t v52 = v215;
    v187 = v36;
    uint64_t v53 = v214;
    v186 = v40;
    sub_100056D54((uint64_t)v45, (uint64_t)&v219);
    int v54 = swift_dynamicCast();
    uint64_t v55 = v212;
    uint64_t v57 = v212 + 56;
    uint64_t v56 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v212 + 56);
    uint64_t v58 = v45;
    if (v54)
    {
      v215 = (char *)v46;
      v194 = v45;
      v214 = v56;
      ((void (*)(char *, void, uint64_t, uint64_t))v56)(v27, 0, 1, v28);
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
      Swift::String v60 = v187;
      v59(v187, v27, v28);
      uint64_t v61 = *(void *)(v203 + 16);
      if (v61)
      {
        v213 = (uint64_t *)v57;
        uint64_t v62 = v203 + 32;
        uint64_t v63 = (unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
        swift_bridgeObjectRetain();
        uint64_t v64 = _swiftEmptyArrayStorage;
        uint64_t v65 = (uint64_t)v211;
        Swift::String v66 = v210;
        do
        {
          sub_100056D54(v62, (uint64_t)&v219);
          sub_100056D54((uint64_t)&v219, (uint64_t)v218);
          int v67 = swift_dynamicCast();
          ((void (*)(char *, void, uint64_t, uint64_t))v214)(v25, v67 ^ 1u, 1, v28);
          sub_10004D2D8((uint64_t)&v219);
          if ((*v63)(v25, 1, v28) == 1)
          {
            sub_100054B1C((uint64_t)v25, (uint64_t *)&unk_1006005C0);
          }
          else
          {
            v59(v66, v25, v28);
            v59((char *)v65, v66, v28);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v64 = (void *)sub_1002EFFD4(0, v64[2] + 1, 1, (unint64_t)v64);
            }
            unint64_t v69 = v64[2];
            unint64_t v68 = v64[3];
            if (v69 >= v68 >> 1) {
              uint64_t v64 = (void *)sub_1002EFFD4(v68 > 1, v69 + 1, 1, (unint64_t)v64);
            }
            v64[2] = v69 + 1;
            unint64_t v70 = (unint64_t)v64
                + ((*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80))
                + *(void *)(v212 + 72) * v69;
            uint64_t v65 = (uint64_t)v211;
            v59((char *)v70, v211, v28);
            Swift::String v66 = v210;
          }
          v62 += 40;
          --v61;
        }
        while (v61);
        swift_bridgeObjectRelease();
        uint64_t v83 = v212;
      }
      else
      {
        sub_100054B78((uint64_t *)&unk_1006005A0);
        unint64_t v103 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        uint64_t v64 = (void *)swift_allocObject();
        *((_OWORD *)v64 + 1) = xmmword_10046D010;
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))((char *)v64 + v103, v60, v28);
        uint64_t v83 = v55;
      }
      uint64_t v104 = v207;
      uint64_t v105 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 16);
      uint64_t v106 = v186;
      uint64_t v107 = v208;
      v105(v186, (uint64_t)v209, v208);
      type metadata accessor for EpisodeContextActionData();
      uint64_t v108 = swift_allocObject();
      uint64_t v109 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
      *(void *)(v108 + v109) = [self sharedInstance];
      *(void *)(v108 + 16) = v64;
      *(void *)(v108 + 24) = 0;
      *(unsigned char *)(v108 + 32) = 1;
      v105((char *)(v108 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint), (uint64_t)v106, v107);
      *(unsigned char *)(v108 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
      sub_10040315C();
      uint64_t v110 = *(void (**)(char *, uint64_t))(v104 + 8);
      v110(v106, v107);
      uint64_t v111 = v196;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v196, v204, v198);
      sub_100056D54((uint64_t)v194, (uint64_t)&v219);
      uint64_t v112 = v201;
      (*(void (**)(char *, uint64_t, uint64_t))(v202 + 16))(v201, v205, v200);
      type metadata accessor for EpisodeContextActionConfiguration(0);
      swift_allocObject();
      uint64_t v113 = swift_retain();
      uint64_t v73 = sub_100210D64(v113, v111, v108, (uint64_t)&v219, v112);
      swift_release();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v187, v28);
      v110(v209, v107);
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v56)(v27, 1, 1, v28);
      sub_100054B1C((uint64_t)v27, (uint64_t *)&unk_1006005C0);
      sub_100056D54((uint64_t)v45, (uint64_t)&v219);
      uint64_t v74 = type metadata accessor for LibraryShowLockup();
      if (swift_dynamicCast())
      {
        uint64_t v75 = v218[0];
        swift_retain();
        uint64_t v76 = dispatch thunk of LegacyLockup.contextAction.getter();
        swift_release();
        uint64_t v77 = v186;
        uint64_t v78 = v213;
        v187 = (char *)v74;
        uint64_t v195 = v75;
        if (v76)
        {
          type metadata accessor for LibraryPodcastContextAction();
          if (swift_dynamicCastClass())
          {
            LibraryPodcastContextAction.groupedEpisodeListType.getter();
            uint64_t v196 = v219;
            v211 = (char *)v220;
            uint64_t v212 = *((void *)&v219 + 1);
            v210 = (char *)*((void *)&v220 + 1);
            uint64_t v203 = v221;
            uint64_t v79 = v222;
            uint64_t v80 = v223;
            uint64_t v81 = v224;
            char v82 = v225;
          }
          else
          {
            uint64_t v196 = 0;
            v211 = 0;
            uint64_t v212 = 0;
            v210 = 0;
            uint64_t v203 = 0;
            uint64_t v79 = 0;
            uint64_t v80 = 0;
            uint64_t v81 = 0;
            char v82 = -1;
          }
          uint64_t v193 = v80;
          v214 = v79;
          v215 = (char *)v81;
          swift_release();
          uint64_t v129 = v196;
          unsigned __int8 v130 = v82;
        }
        else
        {
          uint64_t v129 = 0;
          v211 = 0;
          uint64_t v212 = 0;
          v210 = 0;
          uint64_t v203 = 0;
          v214 = 0;
          uint64_t v193 = 0;
          v215 = 0;
          unsigned __int8 v130 = -1;
        }
        *uint64_t v78 = LibraryShowLockup.uuid.getter();
        v78[1] = v144;
        swift_storeEnumTagMultiPayload();
        v194 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 16);
        v145 = v77;
        v194(v77, (uint64_t)v209, v208);
        type metadata accessor for PodcastContextActionData(0);
        uint64_t v146 = swift_allocObject();
        v147 = self;
        uint64_t v148 = v129;
        uint64_t v149 = v129;
        uint64_t v196 = v129;
        uint64_t v151 = (uint64_t)v211;
        uint64_t v150 = v212;
        uint64_t v152 = v203;
        sub_1002DDB24(v149, v212, (uint64_t)v211, (char)v210, v203, (uint64_t)v214, v193, (uint64_t)v215, v130);
        *(void *)(v146 + 16) = [v147 sharedInstance];
        sub_1002DA404((uint64_t)v78, v146 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
        unsigned __int8 v153 = v130;
        uint64_t v154 = v208;
        v194((char *)(v146 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint), (uint64_t)v145, v208);
        uint64_t v155 = v146 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
        *(void *)uint64_t v155 = v148;
        *(void *)(v155 + 8) = v150;
        uint64_t v156 = v210;
        *(void *)(v155 + 16) = v151;
        *(void *)(v155 + 24) = v156;
        id v157 = v214;
        *(void *)(v155 + 32) = v152;
        *(void *)(v155 + 40) = v157;
        uint64_t v158 = v193;
        uint64_t v159 = (uint64_t)v215;
        *(void *)(v155 + 48) = v193;
        *(void *)(v155 + 56) = v159;
        *(unsigned char *)(v155 + 64) = v153;
        sub_100241BE8();
        NSString v160 = *(void (**)(char *, uint64_t))(v207 + 8);
        v160(v145, v154);
        sub_1002DDBA0((uint64_t)v213, type metadata accessor for PodcastContextActionDataType);
        uint64_t v161 = v199;
        uint64_t v162 = v197;
        uint64_t v163 = v198;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v197, v204, v198);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v161 + 56))(v162, 0, 1, v163);
        v218[3] = v187;
        v218[4] = sub_1002DE3C0(&qword_1006005D8, (void (*)(uint64_t))&type metadata accessor for LibraryShowLockup);
        v218[0] = v195;
        uint64_t v164 = v201;
        (*(void (**)(char *, uint64_t, uint64_t))(v202 + 16))(v201, v205, v200);
        type metadata accessor for PodcastContextActionConfiguration(0);
        swift_allocObject();
        uint64_t v165 = swift_retain();
        uint64_t v73 = sub_1002113D4(v165, v162, v146, (uint64_t)v218, v164);
        swift_release();
        sub_1001D624C(v196, v212, (uint64_t)v211, (char)v210, v203, (uint64_t)v214, v158, (uint64_t)v215, v153);
        v160(v209, v208);
      }
      else
      {
        sub_1002D391C((uint64_t)v45, v52);
        uint64_t v84 = v53;
        uint64_t v85 = v195;
        int v86 = v53[6](v52, 1, v195);
        uint64_t v87 = v202;
        unint64_t v88 = v186;
        uint64_t v89 = (uint64_t)v213;
        if (v86 == 1)
        {
          sub_100054B1C((uint64_t)v52, &qword_1006005B8);
          sub_100056D54((uint64_t)v58, (uint64_t)&v219);
          type metadata accessor for LegacyChannelLockup();
          if (swift_dynamicCast())
          {
            uint64_t v90 = v218[0];
            uint64_t v91 = v199;
            uint64_t v92 = v197;
            uint64_t v93 = v198;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v197, v204, v198);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v92, 0, 1, v93);
            uint64_t v94 = v206;
            swift_retain();
            swift_retain();
            uint64_t v95 = LegacyLockup.adamId.getter();
            swift_release();
            *(void *)&long long v219 = v95;
            sub_1001A5874();
            uint64_t v96 = BinaryInteger.description.getter();
            uint64_t v98 = v97;
            swift_retain();
            uint64_t v99 = LegacyLockup.title.getter();
            uint64_t v101 = v100;
            swift_release();
            uint64_t v102 = (uint64_t)v201;
            (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v201, v205, v200);
            uint64_t v73 = sub_1002D850C((uint64_t)v94, v92, v96, v98, v99, v101, v90, v102);
          }
          else
          {
            sub_100056D54((uint64_t)v58, (uint64_t)&v219);
            type metadata accessor for ChannelPowerSwooshAction();
            int v131 = swift_dynamicCast();
            uint64_t v132 = v199;
            uint64_t v133 = v198;
            if (v131)
            {
              uint64_t v134 = v218[0];
              uint64_t v135 = v197;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v197, v204, v198);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56))(v135, 0, 1, v133);
              char v136 = v206;
              swift_retain();
              uint64_t v137 = ChannelPowerSwooshAction.channelAdamId.getter();
              uint64_t v139 = v138;
              uint64_t v140 = ChannelPowerSwooshAction.channelName.getter();
              uint64_t v142 = v141;
              uint64_t v143 = (uint64_t)v201;
              (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v201, v205, v200);
              uint64_t v73 = sub_1002D88DC((uint64_t)v136, v135, v137, v139, v140, v142, v134, v143);
            }
            else
            {
              sub_100056D54((uint64_t)v58, (uint64_t)&v219);
              int v167 = swift_dynamicCast();
              uint64_t v168 = v197;
              if (v167)
              {
                uint64_t v169 = v218[0];
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16))(v197, v204, v133);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56))(v168, 0, 1, v133);
                uint64_t v170 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
                v171 = v201;
                uint64_t v172 = v200;
                v170(v201, v205, v200);
                type metadata accessor for CategoryContextActionConfiguration(0);
                *(void *)(swift_allocObject() + qword_1005FAEF0) = v169;
                uint64_t v173 = v191;
                sub_100054BBC(v168, v191, (uint64_t *)&unk_100605DC0);
                uint64_t v221 = 0;
                long long v219 = 0u;
                long long v220 = 0u;
                uint64_t v174 = v189;
                v170(v189, (uint64_t)v171, v172);
                sub_100054BBC(v173, v190, (uint64_t *)&unk_100605DC0);
                sub_100054BBC((uint64_t)&v219, (uint64_t)v218, (uint64_t *)&unk_100600590);
                v170(v188, (uint64_t)v174, v172);
                swift_retain();
                uint64_t v73 = ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)();
                v175 = *(void (**)(char *, uint64_t))(v87 + 8);
                v175(v174, v172);
                sub_100054B1C((uint64_t)&v219, (uint64_t *)&unk_100600590);
                sub_100054B1C(v173, (uint64_t *)&unk_100605DC0);
                v175(v171, v172);
                sub_100054B1C(v197, (uint64_t *)&unk_100605DC0);
              }
              else
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16))(v197, v204, v133);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56))(v168, 0, 1, v133);
                sub_100056D54((uint64_t)v58, (uint64_t)&v219);
                v176 = v201;
                (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v201, v205, v200);
                type metadata accessor for OtherContextActionConfiguration(0);
                v177 = (uint64_t *)swift_allocObject();
                uint64_t v178 = *((void *)&v220 + 1);
                uint64_t v179 = v221;
                uint64_t v180 = sub_100055EF0((uint64_t)&v219, *((uint64_t *)&v220 + 1));
                __chkstk_darwin(v180);
                v182 = (char *)&v185 - ((v181 + 15) & 0xFFFFFFFFFFFFFFF0);
                (*(void (**)(char *))(v183 + 16))(v182);
                uint64_t v184 = swift_retain();
                uint64_t v73 = sub_1002104DC(v184, v168, (uint64_t)v182, v176, v177, v178, v179);
                sub_10004D2D8((uint64_t)&v219);
              }
            }
          }
          (*(void (**)(char *, uint64_t))(v207 + 8))(v209, v208);
        }
        else
        {
          uint64_t v114 = v192;
          v84[4](v192, (uint64_t)v52, v85);
          v84[2]((char *)v89, (uint64_t)v114, v85);
          swift_storeEnumTagMultiPayload();
          uint64_t v115 = v87;
          uint64_t v116 = v207;
          uint64_t v117 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 16);
          uint64_t v118 = v84;
          uint64_t v119 = v208;
          v117(v88, (uint64_t)v209, v208);
          type metadata accessor for PodcastContextActionData(0);
          uint64_t v120 = swift_allocObject();
          v194 = v58;
          uint64_t v121 = v120;
          *(void *)(v120 + 16) = [self sharedInstance];
          sub_1002DA404(v89, v121 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
          v117((char *)(v121 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint), (uint64_t)v88, v119);
          uint64_t v122 = v121 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
          *(_OWORD *)uint64_t v122 = 0u;
          *(_OWORD *)(v122 + 16) = 0u;
          *(_OWORD *)(v122 + 32) = 0u;
          *(_OWORD *)(v122 + 48) = 0u;
          *(unsigned char *)(v122 + 64) = -1;
          sub_100241BE8();
          NSString v123 = *(void (**)(char *, uint64_t))(v116 + 8);
          v123(v88, v119);
          sub_1002DDBA0(v89, type metadata accessor for PodcastContextActionDataType);
          uint64_t v124 = v199;
          uint64_t v125 = v197;
          uint64_t v126 = v198;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v197, v204, v198);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v124 + 56))(v125, 0, 1, v126);
          sub_100056D54((uint64_t)v194, (uint64_t)&v219);
          uint64_t v127 = v201;
          (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v201, v205, v200);
          type metadata accessor for PodcastContextActionConfiguration(0);
          swift_allocObject();
          uint64_t v128 = swift_retain();
          uint64_t v73 = sub_1002113D4(v128, v125, v121, (uint64_t)&v219, v127);
          swift_release();
          ((void (*)(char *, uint64_t))v118[1])(v114, v195);
          v123(v209, v119);
        }
      }
    }
  }
  return v73;
}

char *sub_1002D3474(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a1;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v18 = sub_1002DDC38;
  uint64_t v19 = v6;
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_1002D842C;
  uint64_t v17 = &unk_10055EA30;
  uint64_t v9 = _Block_copy(&v14);
  swift_retain_n();
  swift_retain();
  swift_release();
  uint64_t v18 = sub_1002DDC88;
  uint64_t v19 = v7;
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_1002D847C;
  uint64_t v17 = &unk_10055EA58;
  uint64_t v10 = _Block_copy(&v14);
  swift_retain();
  swift_release();
  uint64_t v11 = (char *)[ObjCClassFromMetadata configurationWithIdentifier:0 previewProvider:v9 actionProvider:v10];
  swift_release();
  swift_release();
  _Block_release(v10);
  _Block_release(v9);
  *(void *)&v11[OBJC_IVAR____TtC8PodcastsP33_1E0FAAAEE761D84EC15F0A371F0F292131ContextActionsMenuConfiguration_config] = a1;
  swift_retain();
  uint64_t v12 = v11;
  swift_release();
  [v12 setPreferredMenuElementOrder:2];

  swift_release();
  return v12;
}

void *sub_1002D3690(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!sub_1002D1B0C(a1, a2, a3, a4, a5)) {
    return 0;
  }
  if (!ContextActionsConfiguration.firstShareAction()())
  {
    swift_release();
    return 0;
  }
  swift_getObjectType();
  uint64_t v5 = (void *)dispatch thunk of ShareAction.activityItemsConfiguration()();
  swift_unknownObjectRelease();
  if (v5)
  {
    sub_100054B78((uint64_t *)&unk_100600640);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1004733C0;
    *(void *)(v6 + 32) = UIActivityTypePrint;
    *(void *)(v6 + 40) = UIActivityTypeAssignToContact;
    *(void *)(v6 + 48) = UIActivityTypeAddToReadingList;
    *(void *)(v6 + 56) = UIActivityTypePostToFlickr;
    *(void *)(v6 + 64) = UIActivityTypePostToVimeo;
    *(void *)(v6 + 72) = UIActivityTypeSaveToCameraRoll;
    uint64_t v7 = (void *)UIActivityTypeCreateReminder;
    *(void *)(v6 + 80) = UIActivityTypeCreateReminder;
    uint64_t v8 = UIActivityTypePrint;
    uint64_t v9 = UIActivityTypeAssignToContact;
    uint64_t v10 = UIActivityTypeAddToReadingList;
    uint64_t v11 = UIActivityTypePostToFlickr;
    uint64_t v12 = UIActivityTypePostToVimeo;
    uint64_t v13 = UIActivityTypeSaveToCameraRoll;
    id v14 = v7;
    *(void *)(v6 + 88) = String._bridgeToObjectiveC()();
    type metadata accessor for ActivityType(0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 pui_setExcludedActivityTypes:isa];
    swift_release();
  }
  else
  {
    swift_release();
  }
  return v5;
}

id sub_1002D3834(char **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!sub_1002D1B0C(a1, a2, (uint64_t)_swiftEmptyArrayStorage, a3, a4)) {
    return 0;
  }
  ContextActionsConfiguration.swipeActions(leadingSwipe:)();
  sub_10004D29C(0, &qword_100600638);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [self configurationWithActions:isa];

  [v5 setPerformsFirstActionWithFullSwipe:1];
  [v5 _setSwipeActionsStyle:1];
  swift_release();
  return v5;
}

uint64_t sub_1002D391C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_100054B78(&qword_100600630);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ShowHero();
  uint64_t v33 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1006005B8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ShowOffer();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100056D54(a1, (uint64_t)v35);
  sub_100054B78(&qword_1005F8418);
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v16)
  {
    uint64_t v18 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56);
    v17((uint64_t)v11, 0, 1, v12);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v19(v15, v11, v12);
    uint64_t v20 = v34;
    v19(v34, v15, v12);
    return v18((uint64_t)v20, 0, 1, v12);
  }
  uint64_t v31 = v8;
  uint64_t v32 = v17;
  v17((uint64_t)v11, 1, 1, v12);
  sub_100054B1C((uint64_t)v11, &qword_1006005B8);
  sub_100056D54(a1, (uint64_t)v35);
  type metadata accessor for LegacyLockup();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    uint64_t v23 = (uint64_t)v5;
    uint64_t v24 = v33;
    sub_100056D54(a1, (uint64_t)v35);
    char v25 = swift_dynamicCast();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
    if ((v25 & 1) == 0)
    {
      uint64_t v30 = 1;
      v26(v23, 1, 1, v6);
      sub_100054B1C(v23, &qword_100600630);
      uint64_t v22 = v34;
      return v32((uint64_t)v22, v30, 1, v12);
    }
    v26(v23, 0, 1, v6);
    uint64_t v27 = v23;
    uint64_t v28 = (uint64_t)v31;
    sub_1002DDB3C(v27, (uint64_t)v31);
    uint64_t v29 = ShowHero.contextAction.getter();
    uint64_t v22 = v34;
    if (v29)
    {
      type metadata accessor for PodcastContextAction();
      if (swift_dynamicCastClass())
      {
        PodcastContextAction.podcastOffer.getter();
        swift_release();
        sub_1002DDBA0(v28, (uint64_t (*)(void))&type metadata accessor for ShowHero);
        goto LABEL_13;
      }
      swift_release();
    }
    sub_1002DDBA0(v28, (uint64_t (*)(void))&type metadata accessor for ShowHero);
    uint64_t v30 = 1;
    return v32((uint64_t)v22, v30, 1, v12);
  }
  if (!dispatch thunk of LegacyLockup.contextAction.getter())
  {
LABEL_8:
    swift_release();
    goto LABEL_9;
  }
  type metadata accessor for PodcastContextAction();
  if (!swift_dynamicCastClass())
  {
    swift_release();
    goto LABEL_8;
  }
  uint64_t v22 = v34;
  PodcastContextAction.podcastOffer.getter();
  swift_release();
  swift_release();
LABEL_13:
  uint64_t v30 = 0;
  return v32((uint64_t)v22, v30, 1, v12);
}

char *sub_1002D3D90(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v27 = v1 & 0xC000000000000001;
      uint64_t v3 = (char *)_swiftEmptyArrayStorage;
      uint64_t v4 = 4;
      uint64_t v28 = (char *)_swiftEmptyArrayStorage;
      unint64_t v25 = v1;
      uint64_t v26 = v2;
      while (1)
      {
        uint64_t v6 = v4 - 4;
        if (v27)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_30;
          }
        }
        else
        {
          swift_retain();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
        }
        swift_retain();
        uint64_t v8 = dispatch thunk of LegacyLockup.buttonAction.getter();
        swift_release();
        if (!v8)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return 0;
        }
        type metadata accessor for LibraryStationEpisodeOfferAction();
        if (swift_dynamicCastClass())
        {
          swift_retain();
          uint64_t v9 = LibraryEpisodeOfferAction.episodeUuid.getter();
          uint64_t v11 = v10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v3 = sub_10004CEAC(0, *((void *)v3 + 2) + 1, 1, v3);
          }
          unint64_t v13 = *((void *)v3 + 2);
          unint64_t v12 = *((void *)v3 + 3);
          if (v13 >= v12 >> 1) {
            uint64_t v3 = sub_10004CEAC((char *)(v12 > 1), v13 + 1, 1, v3);
          }
          *((void *)v3 + 2) = v13 + 1;
          uint64_t v14 = &v3[16 * v13];
          *((void *)v14 + 4) = v9;
          *((void *)v14 + 5) = v11;
          uint64_t v15 = LibraryStationEpisodeOfferAction.stationUuid.getter();
          uint64_t v17 = v16;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            unint64_t v1 = v25;
            uint64_t v18 = v28;
          }
          else
          {
            uint64_t v18 = sub_10004CEAC(0, *((void *)v28 + 2) + 1, 1, v28);
            unint64_t v1 = v25;
          }
          unint64_t v20 = *((void *)v18 + 2);
          unint64_t v19 = *((void *)v18 + 3);
          if (v20 >= v19 >> 1) {
            uint64_t v18 = sub_10004CEAC((char *)(v19 > 1), v20 + 1, 1, v18);
          }
          *((void *)v18 + 2) = v20 + 1;
          uint64_t v28 = v18;
          id v5 = &v18[16 * v20];
        }
        else
        {
          type metadata accessor for LibraryEpisodeOfferAction();
          if (!swift_dynamicCastClass()) {
            goto LABEL_6;
          }
          swift_retain();
          uint64_t v15 = LibraryEpisodeOfferAction.episodeUuid.getter();
          uint64_t v17 = v21;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v3 = sub_10004CEAC(0, *((void *)v3 + 2) + 1, 1, v3);
          }
          unint64_t v23 = *((void *)v3 + 2);
          unint64_t v22 = *((void *)v3 + 3);
          if (v23 >= v22 >> 1) {
            uint64_t v3 = sub_10004CEAC((char *)(v22 > 1), v23 + 1, 1, v3);
          }
          *((void *)v3 + 2) = v23 + 1;
          id v5 = &v3[16 * v23];
        }
        *((void *)v5 + 4) = v15;
        *((void *)v5 + 5) = v17;
        swift_release();
        uint64_t v2 = v26;
LABEL_6:
        swift_release();
        swift_release();
        ++v4;
        if (v7 == v2) {
          goto LABEL_33;
        }
      }
    }
  }
  uint64_t v3 = (char *)_swiftEmptyArrayStorage;
LABEL_33:
  swift_bridgeObjectRelease();
  if (!*((void *)v3 + 2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void *sub_1002D40D0(unint64_t a1)
{
  uint64_t v16 = type metadata accessor for EpisodeOffer();
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v6 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      return v6;
    }
    goto LABEL_23;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v17 = a1 & 0xC000000000000001;
  uint64_t v14 = v2 + 32;
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v7 = 4;
  uint64_t v15 = v5;
  do
  {
    uint64_t v8 = v7 - 4;
    if (v17)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v8, 1)) {
        goto LABEL_20;
      }
    }
    else
    {
      swift_retain();
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    swift_retain();
    uint64_t v10 = dispatch thunk of LegacyLockup.buttonAction.getter();
    swift_release();
    if (!v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
    type metadata accessor for EpisodeOfferAction();
    if (swift_dynamicCastClass())
    {
      swift_retain();
      EpisodeOfferAction.episodeOffer.getter();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = (void *)sub_1002EFFD4(0, v6[2] + 1, 1, (unint64_t)v6);
      }
      unint64_t v12 = v6[2];
      unint64_t v11 = v6[3];
      if (v12 >= v11 >> 1) {
        uint64_t v6 = (void *)sub_1002EFFD4(v11 > 1, v12 + 1, 1, (unint64_t)v6);
      }
      v6[2] = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v6+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v12, v4, v16);
      swift_release();
      uint64_t v5 = v15;
    }
    swift_release();
    swift_release();
    ++v7;
  }
  while (v9 != v5);
  swift_bridgeObjectRelease();
  if (v6[2]) {
    return v6;
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1002D4394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a1;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v9 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a4, v9);
  sub_100054BBC(a5, (uint64_t)v28, (uint64_t *)&unk_100600590);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v14;
  *((void *)v17 + 3) = v13;
  uint64_t v18 = v26;
  *((void *)v17 + 4) = v25;
  *((void *)v17 + 5) = v18;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v15], v12, v9);
  *(void *)&v17[v16] = v27;
  sub_100053820((uint64_t)v28, (uint64_t)&v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8], (uint64_t *)&unk_100600590);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v19 = v23;
  uint64_t v20 = v24;
  uint64_t v21 = (void *)UIViewController.registerForPreviewing(sourceView:handler:)();
  swift_release();
  swift_release();
  swift_release();
  sub_1002D4D48(v19, v20, (uint64_t)v21);
}

uint64_t sub_1002D45DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v79)(uint64_t *__return_ptr, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;

  uint64_t v74 = a8;
  uint64_t v72 = a6;
  uint64_t v78 = a5;
  uint64_t v79 = a4;
  uint64_t v9 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v73 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for InteractionContext();
  __chkstk_darwin(v12 - 8);
  uint64_t v75 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StationShowContextActionData();
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v67 - v18;
  uint64_t v20 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (uint64_t *)((char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for PresentationSource();
  uint64_t v76 = *(void *)(v23 - 8);
  uint64_t v77 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v80 = (char *)&v67 - v27;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v29 = (void *)Strong;
  swift_beginAccess();
  uint64_t v30 = swift_unknownObjectWeakLoadStrong();
  if (!v30)
  {

    return 0;
  }
  uint64_t v31 = (void *)v30;
  uint64_t v71 = v26;
  uint64_t v68 = a7;
  id v32 = v29;
  id v33 = v31;
  [v33 bounds];
  id v70 = v33;
  *uint64_t v22 = v33;
  v22[1] = v34;
  _DWORD v22[2] = v35;
  v22[3] = v36;
  v22[4] = v37;
  uint64_t v38 = enum case for PresentationSource.Position.view(_:);
  uint64_t v39 = type metadata accessor for PresentationSource.Position();
  uint64_t v40 = *(void *)(v39 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v40 + 104))(v22, v38, v39);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v22, 0, 1, v39);
  id v69 = v32;
  uint64_t v41 = PresentationSource.init(viewController:position:)();
  v79(&v81, v41);
  uint64_t v42 = v82;
  uint64_t v43 = v83;
  uint64_t v44 = v85;
  if (v81)
  {
    LODWORD(v79) = 0;
    uint64_t v42 = v81;
LABEL_9:
    uint64_t v46 = (uint64_t)v71;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = v73;
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
    v48(v11, v72, v9);
    type metadata accessor for EpisodeContextActionData();
    uint64_t v49 = swift_allocObject();
    uint64_t v50 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
    *(void *)(v49 + v50) = [self sharedInstance];
    *(void *)(v49 + 16) = v42;
    *(void *)(v49 + 24) = v43;
    *(unsigned char *)(v49 + 32) = (_BYTE)v79;
    v48((char *)(v49 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint), (uint64_t)v11, v9);
    *(unsigned char *)(v49 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
    sub_10040315C();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v9);
    uint64_t v52 = v76;
    uint64_t v51 = v77;
    uint64_t v53 = v80;
    (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v46, v80, v77);
    sub_100054BBC(v74, (uint64_t)&v81, (uint64_t *)&unk_100600590);
    uint64_t v54 = v68;
    swift_retain();
    uint64_t v55 = v75;
    id v56 = v70;
    UIView.interactionContext.getter();
    type metadata accessor for EpisodeContextActionConfiguration(0);
    swift_allocObject();
    uint64_t v45 = sub_100210D64(v54, v46, v49, (uint64_t)&v81, v55);

    swift_release();
LABEL_10:
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
    return v45;
  }
  if (v82)
  {
    LODWORD(v79) = 1;
    uint64_t v43 = 0;
    goto LABEL_9;
  }
  uint64_t v58 = (uint64_t)v71;
  if (!v83)
  {

LABEL_18:
    uint64_t v66 = v76;
    uint64_t v65 = v77;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v80, v65);
    return 0;
  }
  if (!v83[2])
  {

    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v59 = v84;
  uint64_t v61 = v83[4];
  uint64_t v60 = v83[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v44)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(&v19[*(int *)(v14 + 24)], v72, v9);
    *(void *)uint64_t v19 = v61;
    *((void *)v19 + 1) = v60;
    *((void *)v19 + 2) = v59;
    *((void *)v19 + 3) = v44;
    v19[*(int *)(v14 + 28)] = 1;
    uint64_t v52 = v76;
    uint64_t v51 = v77;
    uint64_t v53 = v80;
    (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v58, v80, v77);
    sub_1002DA404((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StationShowContextActionData);
    sub_100054BBC(v74, (uint64_t)&v81, (uint64_t *)&unk_100600590);
    uint64_t v62 = v68;
    swift_retain();
    uint64_t v63 = v75;
    id v64 = v70;
    UIView.interactionContext.getter();
    type metadata accessor for StationShowContextActionConfiguration(0);
    swift_allocObject();
    uint64_t v45 = sub_10020EBC0(v62, v58, (uint64_t)v17, (uint64_t)&v81, v63);

    sub_1002DDBA0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StationShowContextActionData);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v76 + 8))(v80, v77);
  swift_bridgeObjectRelease();

  return 0;
}

void sub_1002D4D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = [*(id *)(v3 + 136) objectForKey:a1];

  if (!v7)
  {
    id v8 = [self mapTableWithKeyOptions:5 valueOptions:0];
    [*(id *)(v3 + 136) setObject:v8 forKey:a1];
  }
  id v9 = [*(id *)(v3 + 136) objectForKey:a1];
  if (v9)
  {
    id v10 = v9;
    [v9 setObject:a3 forKey:a2];
  }
}

void sub_1002D4E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v41 = a2;
  uint64_t v39 = a7;
  uint64_t v40 = a3;
  uint64_t v38 = a1;
  uint64_t v10 = type metadata accessor for InteractionContext();
  __chkstk_darwin(v10 - 8);
  uint64_t v37 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v21 = a4;
  v21[1] = a5;
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v22(v18, a6, v15);
  type metadata accessor for PodcastContextActionData(0);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = self;
  swift_bridgeObjectRetain();
  *(void *)(v23 + 16) = [v24 sharedInstance];
  sub_1002DA404((uint64_t)v21, v23 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
  v22((char *)(v23 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint), (uint64_t)v18, v15);
  uint64_t v25 = v23 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
  *(_OWORD *)uint64_t v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(unsigned char *)(v25 + 64) = -1;
  sub_100241BE8();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_1002DDBA0((uint64_t)v21, type metadata accessor for PodcastContextActionDataType);
  uint64_t v26 = type metadata accessor for PresentationSource();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v14, 1, 1, v26);
  sub_100054BBC(v39, (uint64_t)v42, (uint64_t *)&unk_100600590);
  uint64_t v27 = v38;
  swift_retain();
  swift_retain();
  uint64_t v28 = v37;
  uint64_t v29 = v40;
  UIView.interactionContext.getter();
  type metadata accessor for PodcastContextActionConfiguration(0);
  swift_allocObject();
  uint64_t v30 = sub_1002113D4(v27, (uint64_t)v14, v23, (uint64_t)v42, v28);
  swift_release();
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v41;
  swift_unknownObjectWeakInit();
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v32;
  v34[3] = v31;
  v34[4] = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v35 = (void *)UIViewController.registerForPreviewing(sourceView:handler:)();
  swift_release();
  swift_release();
  swift_release();
  sub_1002D4D48(v33, v29, (uint64_t)v35);
  swift_release();
  swift_release();
}

void sub_1002D52E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v37 = a2;
  uint64_t v35 = a6;
  uint64_t v36 = a3;
  uint64_t v34 = a1;
  uint64_t v8 = type metadata accessor for InteractionContext();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ShowOffer();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, a4, v21);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v22(v17, a5, v14);
  type metadata accessor for PodcastContextActionData(0);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = [self sharedInstance];
  sub_1002DA404((uint64_t)v20, v23 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
  v22((char *)(v23 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint), (uint64_t)v17, v14);
  uint64_t v24 = v23 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
  *(_OWORD *)uint64_t v24 = 0u;
  *(_OWORD *)(v24 + 16) = 0u;
  *(_OWORD *)(v24 + 32) = 0u;
  *(_OWORD *)(v24 + 48) = 0u;
  *(unsigned char *)(v24 + 64) = -1;
  sub_100241BE8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1002DDBA0((uint64_t)v20, type metadata accessor for PodcastContextActionDataType);
  uint64_t v25 = type metadata accessor for PresentationSource();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 1, 1, v25);
  sub_100054BBC(v35, (uint64_t)v38, (uint64_t *)&unk_100600590);
  uint64_t v26 = v34;
  swift_retain();
  swift_retain();
  uint64_t v27 = v36;
  UIView.interactionContext.getter();
  type metadata accessor for PodcastContextActionConfiguration(0);
  swift_allocObject();
  uint64_t v28 = sub_1002113D4(v26, (uint64_t)v13, v23, (uint64_t)v38, v10);
  swift_release();
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v37;
  swift_unknownObjectWeakInit();
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v30;
  v32[3] = v29;
  v32[4] = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v33 = (void *)UIViewController.registerForPreviewing(sourceView:handler:)();
  swift_release();
  swift_release();
  swift_release();
  sub_1002D4D48(v31, v27, (uint64_t)v33);
  swift_release();
  swift_release();
}

uint64_t sub_1002D5780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for InteractionContext();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a4, (uint64_t)&v30, (uint64_t *)&unk_100600590);
  if (!v31) {
    return sub_100054B1C((uint64_t)&v30, (uint64_t *)&unk_100600590);
  }
  v29[1] = v4;
  sub_100042FC4(&v30, (uint64_t)v33);
  uint64_t v15 = type metadata accessor for PresentationSource();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_100056D54((uint64_t)v33, (uint64_t)&v30);
  swift_retain();
  UIView.interactionContext.getter();
  type metadata accessor for OtherContextActionConfiguration(0);
  uint64_t v16 = (uint64_t *)swift_allocObject();
  uint64_t v17 = v31;
  uint64_t v18 = v32;
  uint64_t v19 = sub_100055EF0((uint64_t)&v30, v31);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v21);
  uint64_t v23 = sub_1002104DC(a1, (uint64_t)v14, (uint64_t)v21, v11, v16, v17, v18);
  sub_10004D2D8((uint64_t)&v30);
  if (v23)
  {
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = v25;
    v26[3] = v24;
    v26[4] = v23;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v27 = (void *)UIViewController.registerForPreviewing(sourceView:handler:)();
    swift_release();
    swift_release();
    swift_release();
    sub_1002D4D48(a2, a3, (uint64_t)v27);
    swift_release();
  }
  return sub_10004D2D8((uint64_t)v33);
}

uint64_t sub_1002D5AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for PresentationSource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v16 = (void *)Strong;
  swift_beginAccess();
  uint64_t v17 = swift_unknownObjectWeakLoadStrong();
  if (!v17)
  {

    return 0;
  }
  uint64_t v18 = (void *)v17;
  id v30 = v16;
  id v19 = v18;
  [v19 bounds];
  *uint64_t v10 = v19;
  v10[1] = v20;
  v10[2] = v21;
  v10[3] = v22;
  v10[4] = v23;
  uint64_t v24 = enum case for PresentationSource.Position.view(_:);
  uint64_t v25 = type metadata accessor for PresentationSource.Position();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v26 + 104))(v10, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
  uint64_t v27 = v30;
  PresentationSource.init(viewController:position:)();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v14, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  dispatch thunk of ContextActionsConfiguration.presentationSource.setter();

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_retain();
  return a4;
}

void sub_1002D5DBC(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(v2 + 136) objectForKey:a1];
  if (v4)
  {
    id v8 = v4;
    id v5 = [v4 objectForKey:a2];
    if (v5)
    {
      id v6 = v5;
      UIViewController.unregisterForPreviewing(registration:)();
      [v8 removeObjectForKey:a2];

      id v7 = v6;
    }
    else
    {
      id v7 = v8;
    }
  }
}

void sub_1002D5E84(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [*(id *)(v2 + 136) objectForKey:a1];
  if (v4)
  {
    id v11 = v4;
    id v5 = [v4 objectEnumerator];
    if (v5)
    {
      id v6 = v5;
      id v7 = [v5 allObjects];

      uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v10 = v8 + 32;
        while (1)
        {
          sub_10004D328(v10, (uint64_t)v13);
          type metadata accessor for ContextActionsPresentationRegistration();
          if (!swift_dynamicCast()) {
            break;
          }
          UIViewController.unregisterForPreviewing(registration:)();

          v10 += 32;
          if (!--v9) {
            goto LABEL_7;
          }
        }
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_7:
        swift_bridgeObjectRelease();
        [*(id *)(v2 + 136) removeObjectForKey:a1];
      }
    }
    else
    {
    }
  }
}

uint64_t sub_1002D5FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v15;
  *(_OWORD *)(v8 + 88) = v14;
  *(void *)(v8 + 72) = a5;
  *(void *)(v8 + 80) = a8;
  *(unsigned char *)(v8 + 241) = a7;
  *(unsigned char *)(v8 + 240) = a6;
  *(void *)(v8 + 64) = a4;
  uint64_t v9 = type metadata accessor for Logger();
  *(void *)(v8 + 112) = v9;
  *(void *)(v8 + 120) = *(void *)(v9 - 8);
  *(void *)(v8 + 128) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for PlaybackController.QueueCommand();
  *(void *)(v8 + 136) = v10;
  *(void *)(v8 + 144) = *(void *)(v10 - 8);
  *(void *)(v8 + 152) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for PlaybackIntent();
  *(void *)(v8 + 160) = v11;
  *(void *)(v8 + 168) = *(void *)(v11 - 8);
  *(void *)(v8 + 176) = swift_task_alloc();
  *(void *)(v8 + 184) = swift_task_alloc();
  return _swift_task_switch(sub_1002D61A4, 0, 0);
}

uint64_t sub_1002D61A4()
{
  char v1 = *(unsigned char *)(v0 + 240);
  uint64_t v2 = *(void (**)(void, void, void))(*(void *)(v0 + 168) + 16);
  v2(*(void *)(v0 + 184), *(void *)(v0 + 64), *(void *)(v0 + 160));
  if ((v1 & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v22 = *(void *)(v0 + 160);
    uint64_t v23 = *(void *)(v0 + 184);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v21 = *(void *)(v0 + 176);
    sub_100054B78(&qword_1005FEA50);
    uint64_t v24 = v2;
    uint64_t v5 = type metadata accessor for PlaybackIntent.Option();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 72);
    unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10046D030;
    unint64_t v10 = v9 + v8;
    uint64_t v11 = *(void (**)(void))(v6 + 104);
    ((void (*)(unint64_t, void, uint64_t))v11)(v10, enum case for PlaybackIntent.Option.startPlayback(_:), v5);
    *(void *)(v10 + v7) = v4;
    v11();
    sub_100172B6C(v9);
    swift_setDeallocating();
    uint64_t v2 = v24;
    swift_arrayDestroy();
    swift_deallocClassInstance();
    PlaybackIntent.withOptions(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v23, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v23, v21, v22);
  }
  if (*(unsigned char *)(v0 + 241) == 1)
  {
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 144);
    v2(v12, *(void *)(v0 + 184), *(void *)(v0 + 160));
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v12, enum case for PlaybackController.QueueCommand.replace(_:), v14);
    *(void *)(v0 + 40) = v14;
    *(void *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
    uint64_t v15 = sub_10004A244((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v15, v12, v14);
    uint64_t v25 = (char *)&async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:)
        + async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:);
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v16;
    void *v16 = v0;
    v16[1] = sub_1002D651C;
    v17.n128_u64[0] = 5.0;
    return ((uint64_t (*)(uint64_t, void, __n128))v25)(v0 + 16, 0, v17);
  }
  else
  {
    id v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v19;
    *id v19 = v0;
    v19[1] = sub_1002D670C;
    uint64_t v20 = *(void *)(v0 + 184);
    return PlaybackController.performIntent(_:)(v20);
  }
}

uint64_t sub_1002D651C(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1002D69D8;
  }
  else
  {

    sub_10004D2D8(v4 + 16);
    uint64_t v5 = sub_1002D664C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002D664C()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[21];
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1002D670C(void *a1)
{
  *(void *)(*(void *)v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1002D6C40;
  }
  else
  {

    uint64_t v4 = sub_1002D6828;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002D6828()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[23], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1002D68C8()
{
  uint64_t v1 = *(void ***)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 104);
  swift_release();
  sub_1002C70F4(v1, v2);
  return _swift_task_switch(sub_1002D6948, 0, 0);
}

uint64_t sub_1002D6948()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D69D8()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_10004D2D8(v0 + 16);
  *(void *)(v0 + 224) = *(void *)(v0 + 200);
  sub_100041A98(*(void **)(v0 + 88), *(void *)(*(void *)(v0 + 88) + 24));
  dispatch thunk of PendingPlaybackControllerProtocol.reset()();
  static Logger.modernPlayback.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 56) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Unable to play intent: %@", v6, 0xCu);
    sub_100054B78((uint64_t *)&unk_1005F9F00);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v10 = *(void *)(v0 + 120);
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v11 = *(void *)(v0 + 112);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  type metadata accessor for MainActor();
  *(void *)(v0 + 232) = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002D68C8, v13, v12);
}

uint64_t sub_1002D6C40()
{
  (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 160));
  *(void *)(v0 + 224) = *(void *)(v0 + 216);
  sub_100041A98(*(void **)(v0 + 88), *(void *)(*(void *)(v0 + 88) + 24));
  dispatch thunk of PendingPlaybackControllerProtocol.reset()();
  static Logger.modernPlayback.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 56) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Unable to play intent: %@", v3, 0xCu);
    sub_100054B78((uint64_t *)&unk_1005F9F00);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 112);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  type metadata accessor for MainActor();
  *(void *)(v0 + 232) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002D68C8, v10, v9);
}

uint64_t sub_1002D6E7C(char a1)
{
  uint64_t v2 = type metadata accessor for PlaybackIntent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_100054B78(&qword_1005FEA50);
    uint64_t v7 = type metadata accessor for PlaybackIntent.Option();
    uint64_t v8 = *(void *)(v7 - 8);
    unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10046D010;
    (*(void (**)(unint64_t, void, uint64_t))(v8 + 104))(v10 + v9, enum case for PlaybackIntent.Option.forceLocalPlayback(_:), v7);
    sub_100172B6C(v10);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    PlaybackIntent.addingOptions(_:)();
    swift_bridgeObjectRelease();
    memset(v11, 0, sizeof(v11));
    sub_1002C9648((uint64_t)v6, 0, 1, 0, (uint64_t)v11);
    sub_100054B1C((uint64_t)v11, &qword_1005F5D30);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_1002D7090()
{
  sub_10018DB70(v0 + 16);
  swift_release();
  sub_10004D2D8(v0 + 40);
  sub_10004D2D8(v0 + 80);
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1002D70F8()
{
}

void sub_1002D711C()
{
}

uint64_t sub_1002D7140(double a1)
{
  uint64_t v3 = sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  static TaskPriority.userInitiated.getter();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  uint64_t v8 = *(void *)(v6 + 120);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  *(void *)(v9 + 32) = v8;
  *(double *)(v9 + 40) = a1;
  *(void *)(v9 + 48) = v6;
  swift_retain();
  swift_retain();
  sub_1002C80F0((uint64_t)v5, (uint64_t)&unk_100600738, v9);
  swift_release();
  return sub_100054B1C((uint64_t)v5, (uint64_t *)&unk_100603370);
}

uint64_t sub_1002D7280(uint64_t a1, uint64_t a2)
{
  return sub_1002D72C0(a1, a2, (uint64_t)&unk_10055EF68, (uint64_t)&unk_100600728);
}

uint64_t sub_1002D72A0(uint64_t a1, uint64_t a2)
{
  return sub_1002D72C0(a1, a2, (uint64_t)&unk_10055EF40, (uint64_t)&unk_100600718);
}

uint64_t sub_1002D72C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v4;
  static TaskPriority.userInitiated.getter();
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  uint64_t v11 = *(void *)(v9 + 120);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v11;
  v12[5] = v9;
  swift_retain();
  swift_retain();
  sub_1002C80F0((uint64_t)v8, a4, (uint64_t)v12);
  swift_release();
  return sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_100603370);
}

uint64_t sub_1002D73E0()
{
  if (static Podcasts.isBlueMoonEnabled()()) {
    return dispatch thunk of PlaybackController.isPlaying.getter() & 1;
  }
  id v1 = [self defaultInstance];
  id v2 = [v1 isTargetPlaying];

  return (uint64_t)v2;
}

uint64_t sub_1002D7454()
{
  sub_100041A98((void *)(*(void *)v0 + 80), *(void *)(*(void *)v0 + 104));
  return dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)();
}

void sub_1002D74A4(uint64_t a1, uint64_t a2)
{
}

void sub_1002D74C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, char a8, uint64_t a9, char a10, uint64_t a11, char a12, char a13)
{
}

void sub_1002D7528(uint64_t a1, uint64_t a2)
{
}

void sub_1002D755C(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5)
{
}

void sub_1002D7584(uint64_t a1, uint64_t a2)
{
}

void sub_1002D75B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1002D75DC(uint64_t a1, uint64_t a2)
{
}

void sub_1002D7600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_1002D762C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1002CE5C8(a1, a2, a3, a4);
}

uint64_t sub_1002D7650(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  return sub_1002CF408(a1, a2, a3, a4, a5);
}

uint64_t sub_1002D7674(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  return sub_1002CF68C(a1, a2, a3, a4, a5);
}

uint64_t sub_1002D7698(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  return sub_1002D052C(a1, a2, a3, a4, a5);
}

uint64_t sub_1002D76BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowOffer.storeUrl.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7750);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1002CE5C8(a1, (uint64_t)v12, a3, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1002D7874(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6)
{
  int v20 = a6;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v9 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CoreDataFetcher();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a5, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v13;
  *((void *)v16 + 3) = a1;
  *((void *)v16 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v16[v14], v12, v9);
  v16[v15] = v20;
  swift_retain();
  swift_retain();
  id v17 = a4;
  static CoreDataFetcher.fetchPodcast(with:completion:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1002D7A34(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1002D078C(a1, a2, a3, a4);
}

uint64_t sub_1002D7A58()
{
  return ModernPageViewController.init(asPartOf:with:)();
}

BOOL sub_1002D7B08(char **a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InteractionContext();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PresentationSource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static PresentationSource.topmostPresentationSource.getter();
  static InteractionContext.none.getter();
  uint64_t v12 = sub_1002D1B0C(a1, a2, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v11, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12) {
    swift_release();
  }
  return v12 != 0;
}

char *sub_1002D7CB8(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t result = (char *)sub_1002D1B0C(a1, a2, a3, a4, a5);
  if (result)
  {
    uint64_t v10 = (uint64_t)result;
    type metadata accessor for ContextActionsMenuConfiguration();
    swift_bridgeObjectRetain();
    return sub_1002D3474(v10, a7, (a6 & 1) == 0);
  }
  return result;
}

void *sub_1002D7D20(char **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!sub_1002D1B0C(a1, a2, (uint64_t)_swiftEmptyArrayStorage, a3, a4)) {
    return _swiftEmptyArrayStorage;
  }
  Class isa = ContextActionsConfiguration.menu(extraContextMenuElements:)((Swift::OpaquePointer)_swiftEmptyArrayStorage).super.super.isa;
  id v5 = [(objc_class *)isa children];

  sub_10004D29C(0, &qword_1005F7EF0);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_release();

  return (void *)v6;
}

void *sub_1002D7DD4(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1002D3690(a1, a2, a3, a4, a5);
}

id sub_1002D7DF8(char **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002D3834(a1, a2, a3, a4);
}

uint64_t sub_1002D7E1C(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1002D1B0C(a1, a2, a3, a4, a5);
  if (result)
  {
    unint64_t v6 = (unint64_t)ContextActionsConfiguration.shareSheet()();
    swift_release();
    return v6;
  }
  return result;
}

void *sub_1002D7E64(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10046D010;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  swift_bridgeObjectRetain();
  id v17 = sub_1002DCFE8(a1, v16, 0, 0, a4, a5, a6, a7, a8);
  swift_bridgeObjectRelease();
  return v17;
}

void *sub_1002D7F34(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  sub_100054B78((uint64_t *)&unk_1006005A0);
  uint64_t v14 = type metadata accessor for EpisodeOffer();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10046D010;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v17 + v16, a2, v14);
  uint64_t v18 = sub_1002DCFE8(a1, v17, 0, 1u, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1002D807C(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_1002DD388(a1, a2, a3, a4 & 1, a5, a6 & 1);
}

uint64_t sub_1002D8088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, char a18, double a19, char a20)
{
  return sub_1002DD778(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1, a19,
           a20 & 1);
}

void sub_1002D80B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

void sub_1002D80DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

void sub_1002D8100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

uint64_t sub_1002D8124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002D5780(a1, a2, a3, a4);
}

void sub_1002D8148(uint64_t a1, uint64_t a2)
{
}

void sub_1002D816C(uint64_t a1)
{
}

Class sub_1002D8190(uint64_t a1, UIMenuElementSize a2)
{
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  unint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10046D060;
  if ((unint64_t)a2 >> 62)
  {
    sub_10004D29C(0, &qword_1005F7EF0);
    swift_bridgeObjectRetain();
    uint64_t v8 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    a2 = v8;
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10004D29C(0, &qword_1005F7EF0);
  }
  sub_10004D29C(0, (unint64_t *)&unk_100600650);
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v10.value.super.Class isa = 0;
  v10.is_nil = 0;
  *(UIMenu *)(v3 + 32) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v4, (Swift::String_optional)0, v10, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, a2, v9);
  specialized Array._endMutation()();
  if (v3 >> 62)
  {
    sub_10004D29C(0, &qword_1005F7EF0);
    swift_bridgeObjectRetain();
    uint64_t v5 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10004D29C(0, &qword_1005F7EF0);
    uint64_t v5 = v3;
  }
  swift_bridgeObjectRelease();
  Class isa = ContextActionsConfiguration.menu(extraContextMenuElements:)((Swift::OpaquePointer)v5).super.super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

id sub_1002D83C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextActionsMenuConfiguration();
  return [super dealloc];
}

uint64_t type metadata accessor for ContextActionsMenuConfiguration()
{
  return self;
}

id sub_1002D842C(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  unint64_t v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

id sub_1002D847C(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_10004D29C(0, &qword_1005F7EF0);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  unint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1002D850C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a1;
  uint64_t v35 = a8;
  uint64_t v33 = a5;
  uint64_t v13 = type metadata accessor for InteractionContext();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[3] = type metadata accessor for LegacyChannelLockup();
  v38[4] = sub_1002DE3C0((unint64_t *)&unk_1006005F0, (void (*)(uint64_t))&type metadata accessor for LegacyChannelLockup);
  v38[0] = a7;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = (void **)v20;
  if (a4)
  {
    uint64_t v22 = (void *)(v20 + qword_10061AA48);
    *uint64_t v22 = a3;
    v22[1] = a4;
    uint64_t v23 = (void *)(v20 + qword_10061AA50);
    *uint64_t v23 = v33;
    v23[1] = a6;
    sub_100054BBC(a2, (uint64_t)v19, (uint64_t *)&unk_100605DC0);
    sub_100056D54((uint64_t)v38, (uint64_t)v36);
    uint64_t v24 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v35, v13);
    uint64_t v25 = sub_100055EF0((uint64_t)v36, v37);
    __chkstk_darwin(v25);
    uint64_t v27 = (void **)((char *)&v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(void **))(v28 + 16))(v27);
    uint64_t v29 = sub_1002D8CAC(v34, (uint64_t)v19, *v27, v16, v21, (uint64_t (*)(void))&type metadata accessor for LegacyChannelLockup, (unint64_t *)&unk_1006005F0, (void (*)(uint64_t))&type metadata accessor for LegacyChannelLockup);
    sub_10004D2D8((uint64_t)v36);
    id v30 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    swift_retain();
    v30(v24, v13);
    sub_10004D2D8((uint64_t)v38);
    sub_100054B1C(a2, (uint64_t *)&unk_100605DC0);
    if (v29) {
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
    sub_10004D2D8((uint64_t)v38);
    sub_100054B1C(a2, (uint64_t *)&unk_100605DC0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v29;
}

uint64_t sub_1002D88DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a1;
  uint64_t v35 = a8;
  uint64_t v33 = a5;
  uint64_t v13 = type metadata accessor for InteractionContext();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[3] = type metadata accessor for ChannelPowerSwooshAction();
  v38[4] = sub_1002DE3C0(&qword_100600628, (void (*)(uint64_t))&type metadata accessor for ChannelPowerSwooshAction);
  v38[0] = a7;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = (void **)v20;
  if (a4)
  {
    uint64_t v22 = (void *)(v20 + qword_10061AA48);
    *uint64_t v22 = a3;
    v22[1] = a4;
    uint64_t v23 = (void *)(v20 + qword_10061AA50);
    *uint64_t v23 = v33;
    v23[1] = a6;
    sub_100054BBC(a2, (uint64_t)v19, (uint64_t *)&unk_100605DC0);
    sub_100056D54((uint64_t)v38, (uint64_t)v36);
    uint64_t v24 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v35, v13);
    uint64_t v25 = sub_100055EF0((uint64_t)v36, v37);
    __chkstk_darwin(v25);
    uint64_t v27 = (void **)((char *)&v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(void **))(v28 + 16))(v27);
    uint64_t v29 = sub_1002D8CAC(v34, (uint64_t)v19, *v27, v16, v21, (uint64_t (*)(void))&type metadata accessor for ChannelPowerSwooshAction, &qword_100600628, (void (*)(uint64_t))&type metadata accessor for ChannelPowerSwooshAction);
    sub_10004D2D8((uint64_t)v36);
    id v30 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    swift_retain();
    v30(v24, v13);
    sub_10004D2D8((uint64_t)v38);
    sub_100054B1C(a2, (uint64_t *)&unk_100605DC0);
    if (v29) {
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
    sub_10004D2D8((uint64_t)v38);
    sub_100054B1C(a2, (uint64_t *)&unk_100605DC0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v29;
}

uint64_t sub_1002D8CAC(uint64_t a1, uint64_t a2, void *a3, char *a4, void **a5, uint64_t (*a6)(void), unint64_t *a7, void (*a8)(uint64_t))
{
  uint64_t v57 = a6;
  uint64_t v58 = a1;
  uint64_t v60 = a4;
  uint64_t v61 = a2;
  id v56 = *a5;
  uint64_t v12 = type metadata accessor for InteractionContext();
  uint64_t v59 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v53 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v54 = (char *)&v50 - v15;
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v51 = (uint64_t)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v52 = (uint64_t)&v50 - v19;
  uint64_t v20 = sub_100054B78(&qword_1005FAF70);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100054B78((uint64_t *)&unk_100600600);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v55 = (uint64_t)&v50 - v28;
  v64[3] = v57(0);
  v64[4] = sub_1002DE3C0(a7, a8);
  v64[0] = a3;
  swift_retain();
  if (sub_1002D932C(a3, a7, a8))
  {
    uint64_t v57 = (uint64_t (*)(void))v12;
    swift_release();
    sub_10020F110((uint64_t)v64, (uint64_t)v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
    {
      uint64_t v32 = *(int *)(v23 + 48);
      uint64_t v33 = v55;
      id v56 = (void *)(v55 + v32);
      uint64_t v34 = &v22[v32];
      uint64_t v35 = type metadata accessor for URL();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
      v50(v33, v22, v35);
      uint64_t v37 = *(void *)v34;
      uint64_t v38 = *((void *)v34 + 1);
      uint64_t v39 = v56;
      void *v56 = v37;
      v39[1] = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v27, v33, v35);
      uint64_t v40 = (char *)a5 + qword_10061AA78;
      v50((uint64_t)a5 + qword_10061AA78, v27, v35);
      uint64_t v41 = &v40[*(int *)(v23 + 48)];
      *(void *)uint64_t v41 = v37;
      *((void *)v41 + 1) = v38;
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v42 = v52;
      sub_100054BBC(v61, v52, (uint64_t *)&unk_100605DC0);
      sub_100056D54((uint64_t)v64, (uint64_t)v63);
      uint64_t v44 = v59;
      uint64_t v43 = v60;
      uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t (*)(void)))(v59 + 16);
      uint64_t v46 = v54;
      uint64_t v47 = v57;
      v45(v54, (uint64_t)v60, v57);
      sub_100054BBC(v42, v51, (uint64_t *)&unk_100605DC0);
      sub_100054BBC((uint64_t)v63, (uint64_t)v62, (uint64_t *)&unk_100600590);
      v45(v53, (uint64_t)v46, v47);
      uint64_t v31 = ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)();
      uint64_t v48 = *(void (**)(char *, uint64_t (*)(void)))(v44 + 8);
      v48(v46, v47);
      sub_100054B1C((uint64_t)v63, (uint64_t *)&unk_100600590);
      sub_100054B1C(v42, (uint64_t *)&unk_100605DC0);
      v48(v43, v47);
      sub_10004D2D8((uint64_t)v64);
      sub_100054B1C(v61, (uint64_t *)&unk_100605DC0);
      sub_100054B1C(v55, (uint64_t *)&unk_100600600);
      return v31;
    }
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t (*)(void)))(v59 + 8))(v60, v57);
    sub_10004D2D8((uint64_t)v64);
    sub_100054B1C(v61, (uint64_t *)&unk_100605DC0);
    uint64_t v29 = &qword_1005FAF70;
    uint64_t v30 = (uint64_t)v22;
  }
  else
  {
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v12);
    sub_10004D2D8((uint64_t)v64);
    uint64_t v29 = (uint64_t *)&unk_100605DC0;
    uint64_t v30 = v61;
  }
  sub_100054B1C(v30, v29);
  type metadata accessor for OtherContextActionConfiguration(0);
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1002D92E4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002D9320(uint64_t a1)
{
  return sub_1002D5AD0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1002D932C(void *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  v12[3] = *a1;
  v12[4] = sub_1002DE3C0(a2, a3);
  v12[0] = a1;
  sub_100056D54((uint64_t)v12, (uint64_t)v10);
  swift_retain();
  sub_100054B78(&qword_1005F8418);
  type metadata accessor for FlowAction();
  if (!swift_dynamicCast())
  {
    sub_100056D54((uint64_t)v12, (uint64_t)v9);
    sub_100054B78(&qword_1005FAF88);
    if (swift_dynamicCast())
    {
      sub_100042FC4(&v6, (uint64_t)v10);
      sub_100041A98(v10, v11);
      uint64_t v4 = dispatch thunk of CustomPreviewActionModel.previewAction.getter();
      sub_10004D2D8((uint64_t)v10);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v8 = 0;
      long long v6 = 0u;
      long long v7 = 0u;
      sub_100054B1C((uint64_t)&v6, (uint64_t *)&unk_100600610);
    }
    sub_100056D54((uint64_t)v12, (uint64_t)v9);
    sub_100054B78(&qword_1005FAF78);
    if (swift_dynamicCast())
    {
      sub_100042FC4(&v6, (uint64_t)v10);
      sub_100041A98(v10, v11);
      dispatch thunk of ClickableModel.clickAction.getter();
      if (v9[3])
      {
        sub_100054B78(&qword_1005F82A0);
        type metadata accessor for Action();
        if (swift_dynamicCast())
        {
          uint64_t v4 = v6;
          sub_10004D2D8((uint64_t)v10);
          goto LABEL_15;
        }
      }
      else
      {
        sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F89E0);
      }
      sub_10004D2D8((uint64_t)v10);
    }
    else
    {
      uint64_t v8 = 0;
      long long v6 = 0u;
      long long v7 = 0u;
      sub_100054B1C((uint64_t)&v6, &qword_100600620);
    }
    uint64_t v4 = 0;
    goto LABEL_15;
  }
  uint64_t v4 = v9[0];
LABEL_15:
  sub_10004D2D8((uint64_t)v12);
  return v4;
}

uint64_t sub_1002D9574(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = type metadata accessor for EpisodeListSettings();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v51 = (char *)&v45 - v13;
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  uint64_t v15 = __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  uint64_t v18 = 0;
  if ((a4 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v46 = a3;
  uint64_t v47 = v17;
  uint64_t v52 = v9;
  uint64_t v19 = v12;
  uint64_t v48 = v8;
  id v55 = 0;
  uint64_t v20 = (char *)&v45 - v16;
  uint64_t v21 = type metadata accessor for CoreDataFetcher();
  __chkstk_darwin(v21);
  *(&v45 - 2) = (char *)&v55;
  uint64_t v49 = a1;
  unint64_t v50 = a2;
  static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
  id v22 = [self sharedInstance];
  id v23 = [v22 mainOrPrivateContext];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v24 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithEntityName:v25];

  [v26 setPredicate:v55];
  [v26 setFetchLimit:1];
  char v54 = 0;
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = &v54;
  v27[3] = v23;
  v27[4] = v26;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1002DE734;
  *(void *)(v28 + 24) = v27;
  aBlock[4] = sub_10004A010;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  uint64_t aBlock[3] = &unk_10055EEB8;
  uint64_t v29 = _Block_copy(aBlock);
  id v30 = v23;
  id v31 = v26;
  swift_retain();
  swift_release();
  [v30 performBlockAndWait:v29];
  _Block_release(v29);
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v29 & 1) == 0)
  {
    uint64_t v33 = v47;
    sub_100054BBC((uint64_t)v20, v47, (uint64_t *)&unk_1005FEA40);
    uint64_t v34 = v52;
    uint64_t v8 = v48;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v33, 1, v48) == 1)
    {
      sub_100054B1C((uint64_t)v20, (uint64_t *)&unk_1005FEA40);

      a1 = v49;
      a2 = v50;
      uint64_t v35 = v33;
    }
    else
    {
      uint64_t v45 = v20;
      uint64_t v36 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v51, v33, v8);
      a1 = v49;
      a2 = v50;
      if (v54 == 1)
      {
        uint64_t v37 = (uint64_t)v19;
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v19, v36, v8);
        id v38 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest());
        uint64_t v39 = v34;
        swift_bridgeObjectRetain();
        uint64_t v40 = v8;
        id v41 = sub_1003028B4(a1, a2, v37);

        (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v40);
        sub_100054B1C((uint64_t)v45, (uint64_t *)&unk_1005FEA40);
        id v42 = v55;
        swift_release();

        return (uint64_t)v41;
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v8);
      uint64_t v35 = (uint64_t)v45;
    }
    sub_100054B1C(v35, (uint64_t *)&unk_1005FEA40);

    uint64_t v18 = sub_1002DE734;
    uint64_t v12 = v19;
    a3 = v46;
    uint64_t v9 = v52;
LABEL_9:
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
    id v43 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest());
    swift_bridgeObjectRetain();
    id v44 = sub_1003028B4(a1, a2, (uint64_t)v12);
    id v41 = v44;
    if (v44) {
      [v44 setPreserveOriginalEpisodeOrdering:1];
    }
    sub_1000536BC((uint64_t)v18);
    return (uint64_t)v41;
  }
  __break(1u);
  return result;
}

id sub_1002D9B5C(uint64_t a1, unint64_t a2, uint64_t a3, int a4, int a5, char a6)
{
  int v44 = a5;
  int v45 = a4;
  uint64_t v48 = a1;
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v47 = (uint64_t)&v43 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v43 - v15;
  uint64_t v17 = type metadata accessor for EpisodeListSettings();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v46 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  id v23 = (char *)&v43 - v22;
  __chkstk_darwin(v21);
  NSString v25 = (char *)&v43 - v24;
  if (!MTPlaybackContinuousPlaybackEnabled() || (a6 & 1) != 0)
  {
    id v31 = objc_allocWithZone((Class)MTEpisodeManifest);
    swift_bridgeObjectRetain();
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = [v31 initWithEpisodeUuid:v32];
  }
  else
  {
    unint64_t v43 = a2;
    sub_100054BBC(a3, (uint64_t)v16, (uint64_t *)&unk_1005FEA40);
    uint64_t v26 = v18;
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v27(v16, 1, v17) == 1)
    {
      sub_100054B1C((uint64_t)v16, (uint64_t *)&unk_1005FEA40);
      v50[0] = 0;
      uint64_t v28 = type metadata accessor for CoreDataFetcher();
      __chkstk_darwin(v28);
      *(&v43 - 2) = (unint64_t)v50;
      uint64_t v29 = v47;
      static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
      sub_100054BBC(v29, (uint64_t)v12, (uint64_t *)&unk_1005FEA40);
      if (v27(v12, 1, v17) == 1)
      {
        sub_100054B1C(v29, (uint64_t *)&unk_1005FEA40);
        sub_100054B1C((uint64_t)v12, (uint64_t *)&unk_1005FEA40);
        return 0;
      }
      else
      {
        uint64_t v34 = v18;
        uint64_t v35 = v46;
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v46, v12, v17);
        if ((v45 & 1) != 0 && v50[0] == 1)
        {
          id v36 = objc_allocWithZone((Class)MTEpisodeManifest);
          swift_bridgeObjectRetain();
          NSString v37 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v30 = [v36 initWithEpisodeUuid:v37];
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v35, v17);
          id v40 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest());
          unint64_t v41 = v43;
          swift_bridgeObjectRetain();
          id v30 = sub_1003028B4(v48, v41, (uint64_t)v23);
        }
        (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v17);
        sub_100054B1C(v47, (uint64_t *)&unk_1005FEA40);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v25, v16, v17);
      EpisodeListSettings.listType.getter();
      sub_1001A5FC8((uint64_t)v49, (uint64_t)v50);
      if (v50[64] == 5)
      {
        uint64_t v33 = sub_1002D9574(v48, v43, (uint64_t)v25, v44 & 1);
      }
      else
      {
        sub_1002DE698((uint64_t)v49, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v25, v17);
        id v38 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest());
        unint64_t v39 = v43;
        swift_bridgeObjectRetain();
        uint64_t v33 = (uint64_t)sub_1003028B4(v48, v39, (uint64_t)v23);
      }
      id v30 = (id)v33;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v17);
    }
  }
  return v30;
}

uint64_t sub_1002DA09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaybackIntent.Option();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v19 = a2;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v16 = *(void *)(v12 + 56);
    do
    {
      v13(v8, v15, v4);
      sub_1003F4E9C((uint64_t)v10, v8);
      (*(void (**)(char *, uint64_t))(v12 - 8))(v10, v4);
      v15 += v16;
      --v11;
    }
    while (v11);
    return v19;
  }
  return a2;
}

uint64_t sub_1002DA204()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DA24C()
{
  uint64_t v1 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  if (*(void *)(v0 + v4 + 24)) {
    sub_10004D2D8(v0 + v4);
  }

  return swift_deallocObject();
}

uint64_t sub_1002DA354(uint64_t a1)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t vars8;

  uint64_t v3 = *(void *)(type metadata accessor for PreviewingPresentationHint() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = (void (*)(uint64_t *__return_ptr, uint64_t))v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = *(void *)((char *)v1 + v5);

  return sub_1002D45DC(a1, v6, v7, v8, v9, (uint64_t)v1 + v4, v10, (uint64_t)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1002DA404(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1002DA46C(void **a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_100600700);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a2, (uint64_t)&aBlock, &qword_1005F5D30);
  if (!v43)
  {
    sub_100054B1C((uint64_t)&aBlock, &qword_1005F5D30);
    return;
  }
  sub_10004D29C(0, &qword_100600708);
  if (swift_dynamicCast())
  {
    uint64_t v11 = (void *)v46;
    aBlock = a1;
    swift_errorRetain();
    sub_100054B78(&qword_100603F70);
    uint64_t v12 = type metadata accessor for PlaybackIntent.ValidationError();
    int v13 = swift_dynamicCast();
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    if (v13)
    {
      uint64_t v15 = *(void *)(v12 - 8);
      v14(v10, 0, 1, v12);
      if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v10, v12) == enum case for PlaybackIntent.ValidationError.unentitled(_:))
      {
        uint64_t v16 = self;
        NSString v17 = String._bridgeToObjectiveC()();
        id v18 = [v16 longStringForUnavailableReason:7 podcastTitle:v17];

        if (!v18)
        {
LABEL_18:
          sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
          static OS_os_log.carPlay.getter();
          swift_errorRetain();
          swift_errorRetain();
          id v30 = Logger.logObject.getter();
          os_log_type_t v31 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v30, v31))
          {
            NSString v32 = (uint8_t *)swift_slowAlloc();
            uint64_t v33 = (void **)swift_slowAlloc();
            uint64_t v38 = v5;
            aBlock = v33;
            unint64_t v39 = v11;
            *(_DWORD *)NSString v32 = 136446210;
            swift_getErrorValue();
            uint64_t v34 = Error.localizedDescription.getter();
            uint64_t v46 = sub_10004B974(v34, v35, (uint64_t *)&aBlock);
            uint64_t v11 = v39;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v30, v31, "Playback failed with status %{public}s and a reason string could not be created.", v32, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v4);
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();

            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          }
          int v44 = UInt64.int64Representation.getter;
          uint64_t v45 = 0;
          aBlock = _NSConcreteStackBlock;
          uint64_t v41 = 1107296256;
          id v42 = sub_10018FFEC;
          unint64_t v43 = &unk_10055EC10;
          id v36 = _Block_copy(&aBlock);
          [v11 popTemplateAnimated:1 completion:v36];

          _Block_release(v36);
          return;
        }
LABEL_15:
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v27 = v26;

        aBlock = (void **)v25;
        uint64_t v41 = v27;
        sub_1001AB688();
        if (Collection.isNotEmpty.getter())
        {
          uint64_t v28 = swift_allocObject();
          *(void *)(v28 + 16) = a1;
          *(void *)(v28 + 24) = v11;
          swift_errorRetain();
          id v29 = v11;
          CPInterfaceController.showAlert(with:completion:)(v25, v27, (void (*)(uint64_t))sub_1002DE448, v28);
          swift_bridgeObjectRelease();
          swift_release();

          return;
        }
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    }
    else
    {
      v14(v10, 1, 1, v12);
      sub_100054B1C((uint64_t)v10, &qword_100600700);
    }
    id v19 = [self sharedInstance];
    if (!v19)
    {
      __break(1u);
      return;
    }
    uint64_t v20 = v19;
    unsigned __int8 v21 = [v19 isReachable];

    if (v21)
    {
      uint64_t v22 = static EpisodeUnavailableReason.Translator.episodeUnavailableReason(for:)();
      id v23 = self;
      NSString v24 = String._bridgeToObjectiveC()();
      id v18 = [v23 longStringForUnavailableReason:v22 podcastTitle:v24];

      if (!v18) {
        goto LABEL_18;
      }
    }
    else
    {
      id v18 = [self longReasonTextForNoInternet];
    }
    goto LABEL_15;
  }
}

void sub_1002DAADC(void **a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == (void **)1) {
    return;
  }
  if (a1 == (void **)9)
  {
    uint64_t v10 = self;
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v10 longStringForUnavailableReason:7 podcastTitle:v11];
  }
  else
  {
    id v13 = [a2 currentItem];
    if (v13)
    {
      uint64_t v14 = v13;
      id v15 = [v13 episode];

      if (v15)
      {
        id v16 = [a2 currentItem];
        if (v16)
        {
          NSString v17 = v16;
          id v18 = [v16 album];

          if (v18)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            id v19 = self;
            id v20 = [v19 unavailableReasonForEpisode:v15];
            NSString v21 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v22 = [v19 longStringForUnavailableReason:v20 podcastTitle:v21];

            if (v22)
            {
              uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v25 = v24;

LABEL_18:
              aBlock = (void **)v23;
              uint64_t v39 = v25;
              sub_1001AB688();
              if (Collection.isNotEmpty.getter())
              {
                uint64_t v32 = swift_allocObject();
                *(void *)(v32 + 16) = a1;
                *(void *)(v32 + 24) = a3;
                id v33 = a3;
                CPInterfaceController.showAlert(with:completion:)(v23, v25, (void (*)(uint64_t))sub_1002DE5BC, v32);
                swift_bridgeObjectRelease();
                swift_release();
                return;
              }
              swift_bridgeObjectRelease();
              goto LABEL_21;
            }

            goto LABEL_21;
          }
        }
      }
    }
    id v26 = [self sharedInstance];
    if (!v26)
    {
      __break(1u);
      return;
    }
    unint64_t v27 = v26;
    unsigned __int8 v28 = [v26 isReachable];

    id v29 = self;
    id v30 = v29;
    if ((v28 & 1) == 0)
    {
      id v15 = [v29 longReasonTextForNoInternet];
LABEL_17:
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v25 = v31;
      goto LABEL_18;
    }
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v30 longStringForUnavailableReason:5 podcastTitle:v11];
  }
  id v15 = v12;

  if (v15) {
    goto LABEL_17;
  }
LABEL_21:
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v36 = 134349056;
    aBlock = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Playback failed with status %{public}ld and a reason string could not be created.", v36, 0xCu);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v42 = j___ss6UInt64V8PodcastsE19int64Representations5Int64Vvg;
  uint64_t v43 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  id v40 = sub_10018FFEC;
  uint64_t v41 = &unk_10055ED78;
  uint64_t v37 = _Block_copy(&aBlock);
  [a3 popTemplateAnimated:1 completion:v37];
  _Block_release(v37);
}

void sub_1002DAFB0(char a1)
{
  if (os_feature_enabled_red_sun())
  {
    if (qword_10061ACE0 && *(void *)(qword_10061ACE0 + OBJC_IVAR____TtC8Podcasts11AppDelegate_nowPlayingBootstrap))
    {
      swift_retain();
      sub_1001ED5EC(a1 & 1, 0, 0);
      swift_release();
    }
  }
  else
  {
    id v2 = [self defaultInstance];
    [v2 presentNowPlayingAnimated:a1 & 1];
  }
}

void sub_1002DB094(char a1, void (*a2)(uint64_t), uint64_t a3)
{
  if (os_feature_enabled_red_sun())
  {
    if (qword_10061ACE0 && *(void *)(qword_10061ACE0 + OBJC_IVAR____TtC8Podcasts11AppDelegate_nowPlayingBootstrap))
    {
      swift_retain();
      sub_1001ED850(a1 & 1, a2, a3);
      swift_release();
    }
  }
  else if (os_feature_enabled_bluemoon())
  {
    if (a2) {
      ((void (*)(void))a2)();
    }
  }
  else
  {
    id v6 = [self defaultInstance];
    if (a2)
    {
      v7[4] = a2;
      v7[5] = a3;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      v7[2] = sub_10003B424;
      v7[3] = &unk_10055EB20;
      a2 = (void (*)(uint64_t))_Block_copy(v7);
      swift_retain();
      swift_release();
    }
    [v6 dismissNowPlayingAnimated:a1 & 1 completion:a2];
    _Block_release(a2);
  }
}

uint64_t sub_1002DB210(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  v25[1] = a2;
  uint64_t v7 = type metadata accessor for InteractionContext();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v17);
  id v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ShowOffer();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, a4, v20);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for PreviewingPresentationHint.none(_:), v13);
  type metadata accessor for PodcastContextActionData(0);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = [self sharedInstance];
  sub_1002DA404((uint64_t)v19, v21 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v21 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint, v16, v13);
  uint64_t v22 = v21 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
  *(_OWORD *)uint64_t v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  *(_OWORD *)(v22 + 32) = 0u;
  *(_OWORD *)(v22 + 48) = 0u;
  *(unsigned char *)(v22 + 64) = -1;
  sub_100241BE8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1002DDBA0((uint64_t)v19, type metadata accessor for PodcastContextActionDataType);
  uint64_t v23 = type metadata accessor for PresentationSource();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 1, 1, v23);
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  swift_retain();
  swift_retain();
  UIView.interactionContext.getter();
  type metadata accessor for PodcastContextActionConfiguration(0);
  swift_allocObject();
  sub_1002113D4(a1, (uint64_t)v12, v21, (uint64_t)v26, v9);
  swift_release();
  [a3 bounds];
  UIViewController.presentShareSheet(from:sourceRect:configuration:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1002DB5F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v30 = a3;
  uint64_t v31 = a2;
  uint64_t v29 = a1;
  uint64_t v9 = type metadata accessor for InteractionContext();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v21 = a4;
  v21[1] = a5;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for PreviewingPresentationHint.none(_:), v15);
  type metadata accessor for PodcastContextActionData(0);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = self;
  swift_bridgeObjectRetain();
  sub_1002DE698(a6, (void (*)(void, void, void, void, void, void, void, void, char))sub_1002DDB24);
  *(void *)(v22 + 16) = [v23 sharedInstance];
  sub_1002DA404((uint64_t)v21, v22 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v22 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint, v18, v15);
  sub_100053820(a6, v22 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType, (uint64_t *)&unk_100606170);
  sub_100241BE8();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_1002DDBA0((uint64_t)v21, type metadata accessor for PodcastContextActionDataType);
  uint64_t v24 = type metadata accessor for PresentationSource();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 1, 1, v24);
  uint64_t v33 = 0;
  memset(v32, 0, sizeof(v32));
  uint64_t v25 = v29;
  swift_retain();
  swift_retain();
  id v26 = v30;
  UIView.interactionContext.getter();
  type metadata accessor for PodcastContextActionConfiguration(0);
  swift_allocObject();
  sub_1002113D4(v25, (uint64_t)v14, v22, (uint64_t)v32, v11);
  swift_release();
  [v26 bounds];
  UIViewController.presentShareSheet(from:sourceRect:configuration:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1002DB9C8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v41 = a4;
  uint64_t v47 = a1;
  uint64_t v6 = type metadata accessor for InteractionContext();
  __chkstk_darwin(v6 - 8);
  uint64_t v46 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for PresentationSource();
  uint64_t v44 = *(void *)(v15 - 8);
  uint64_t v45 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  id v42 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v40 - v18;
  id v43 = a2;
  id v20 = a3;
  [v20 bounds];
  *uint64_t v14 = v20;
  v14[1] = v21;
  v14[2] = v22;
  uint64_t v14[3] = v23;
  v14[4] = v24;
  uint64_t v25 = enum case for PresentationSource.Position.view(_:);
  uint64_t v26 = type metadata accessor for PresentationSource.Position();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v27 + 104))(v14, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v14, 0, 1, v26);
  PresentationSource.init(viewController:position:)();
  sub_100054B78((uint64_t *)&unk_1006005A0);
  uint64_t v28 = type metadata accessor for EpisodeOffer();
  uint64_t v29 = *(void *)(v28 - 8);
  unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_10046D010;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 16))(v31 + v30, v41, v28);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for PreviewingPresentationHint.none(_:), v8);
  type metadata accessor for EpisodeContextActionData();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
  *(void *)(v32 + v33) = [self sharedInstance];
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = 0;
  *(unsigned char *)(v32 + 32) = 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v32 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v11, v8);
  *(unsigned char *)(v32 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 0;
  sub_10040315C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v35 = v44;
  uint64_t v34 = v45;
  uint64_t v36 = (uint64_t)v42;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v42, v19, v45);
  uint64_t v49 = 0;
  memset(v48, 0, sizeof(v48));
  uint64_t v37 = v47;
  swift_retain();
  swift_retain();
  uint64_t v38 = v46;
  UIView.interactionContext.getter();
  type metadata accessor for EpisodeContextActionConfiguration(0);
  swift_allocObject();
  sub_100210D64(v37, v36, v32, (uint64_t)v48, v38);
  swift_release();
  [v20 bounds];
  UIViewController.presentShareSheet(from:sourceRect:configuration:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v34);
}

uint64_t sub_1002DBED8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  *(void *)&long long v51 = a4;
  uint64_t v60 = a1;
  uint64_t v10 = type metadata accessor for InteractionContext();
  __chkstk_darwin(v10 - 8);
  uint64_t v59 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v12 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for PresentationSource();
  uint64_t v57 = *(void *)(v18 - 8);
  uint64_t v58 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  id v55 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v49 - v21;
  id v23 = a2;
  id v24 = a3;
  [v24 bounds];
  id v52 = v24;
  void *v17 = v24;
  v17[1] = v25;
  v17[2] = v26;
  v17[3] = v27;
  v17[4] = v28;
  uint64_t v29 = enum case for PresentationSource.Position.view(_:);
  uint64_t v30 = type metadata accessor for PresentationSource.Position();
  uint64_t v31 = *(void *)(v30 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v31 + 104))(v17, v29, v30);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v17, 0, 1, v30);
  char v54 = v22;
  id v56 = v23;
  uint64_t v32 = v50;
  PresentationSource.init(viewController:position:)();
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10046D010;
  *(void *)(v33 + 32) = v51;
  *(void *)(v33 + 40) = a5;
  if (v32)
  {
    long long v51 = xmmword_10046D010;
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v51;
    *(void *)(v34 + 32) = v49;
    *(void *)(v34 + 40) = v32;
  }
  else
  {
    uint64_t v34 = 0;
  }
  uint64_t v35 = v12;
  uint64_t v36 = *(void (**)(char *, void, uint64_t))(v12 + 104);
  uint64_t v37 = v53;
  v36(v14, enum case for PreviewingPresentationHint.none(_:), v53);
  type metadata accessor for EpisodeContextActionData();
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
  uint64_t v40 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v38 + v39) = [v40 sharedInstance];
  *(void *)(v38 + 16) = v33;
  *(void *)(v38 + 24) = v34;
  *(unsigned char *)(v38 + 32) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v38 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v14, v37);
  *(unsigned char *)(v38 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 0;
  sub_10040315C();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v37);
  uint64_t v42 = v57;
  uint64_t v41 = v58;
  id v43 = v54;
  uint64_t v44 = (uint64_t)v55;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v55, v54, v58);
  uint64_t v62 = 0;
  memset(v61, 0, sizeof(v61));
  uint64_t v45 = v60;
  swift_retain();
  swift_retain();
  uint64_t v46 = v59;
  uint64_t v47 = v52;
  UIView.interactionContext.getter();
  type metadata accessor for EpisodeContextActionConfiguration(0);
  swift_allocObject();
  sub_100210D64(v45, v44, v38, (uint64_t)v61, v46);
  swift_release();
  [v47 bounds];
  UIViewController.presentShareSheet(from:sourceRect:configuration:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v41);
}

uint64_t sub_1002DC3E0(char **a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v56 = a6;
  uint64_t v59 = a4;
  uint64_t v10 = type metadata accessor for StationShowContextActionData();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v54 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v55 = (char **)((char *)&v51 - v13);
  uint64_t v14 = type metadata accessor for InteractionContext();
  uint64_t v60 = *(void *)(v14 - 8);
  uint64_t v61 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PresentationSource();
  uint64_t v57 = *(void *)(v17 - 8);
  uint64_t v58 = v17;
  __chkstk_darwin(v17);
  uint64_t v62 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v63 = a5;
    if (v24) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v63 = a5;
    if (v23)
    {
LABEL_3:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_10046D060;
  *(void *)(v25 + 32) = a2;
  v64[0] = v25;
  specialized Array._endMutation()();
  a3 = v64[0];
  swift_retain();
LABEL_6:
  uint64_t v26 = sub_1002D3D90(a3);
  if (v26)
  {
    uint64_t v28 = (uint64_t)v26;
    uint64_t v29 = v27;
    uint64_t v53 = v16;
    uint64_t v54 = a2;
    id v55 = a1;
    swift_bridgeObjectRelease();
    char v30 = 0;
LABEL_10:
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    v32(v22, v56, v19);
    type metadata accessor for EpisodeContextActionData();
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
    *(void *)(v33 + v34) = [self sharedInstance];
    *(void *)(v33 + 16) = v28;
    *(void *)(v33 + 24) = v29;
    *(unsigned char *)(v33 + 32) = v30;
    v32((char *)(v33 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint), (uint64_t)v22, v19);
    *(unsigned char *)(v33 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
    sub_10040315C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    uint64_t v35 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v62, v59, v58);
    uint64_t v65 = type metadata accessor for LegacyEpisodeLockup();
    uint64_t v66 = sub_1002DE3C0((unint64_t *)&unk_1006005E0, (void (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup);
    uint64_t v36 = v53;
    v64[0] = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v53, v63, v61);
    type metadata accessor for EpisodeContextActionConfiguration(0);
    swift_allocObject();
    swift_retain();
    uint64_t v37 = swift_retain();
    uint64_t v38 = sub_100210D64(v37, v35, v33, (uint64_t)v64, v36);
    swift_release();
    return v38;
  }
  uint64_t result = (uint64_t)sub_1002D40D0(a3);
  if (result)
  {
    uint64_t v28 = result;
    uint64_t v53 = v16;
    uint64_t v54 = a2;
    id v55 = a1;
    swift_bridgeObjectRelease();
    uint64_t v29 = 0;
    char v30 = 1;
    goto LABEL_10;
  }
  if (!(a3 >> 62))
  {
    if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_14;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v50) {
    goto LABEL_23;
  }
LABEL_14:
  if ((a3 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v39 = dispatch thunk of LegacyLockup.buttonAction.getter();
    swift_release();
    if (!v39) {
      return 0;
    }
    type metadata accessor for StationShowContextAction();
    if (swift_dynamicCastClass())
    {
      uint64_t v40 = StationShowContextAction.stationUuid.getter();
      id v52 = v41;
      uint64_t v53 = (char *)v40;
      uint64_t v42 = StationShowContextAction.stationShowUuid.getter();
      uint64_t v44 = v43;
      uint64_t v45 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)v55 + *(int *)(v10 + 24), v56, v19);
      uint64_t v46 = v52;
      *uint64_t v45 = v53;
      v45[1] = v46;
      v45[2] = (char *)v42;
      v45[3] = v44;
      *((unsigned char *)v45 + *(int *)(v10 + 28)) = 1;
      uint64_t v47 = (uint64_t)v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v62, v59, v58);
      uint64_t v48 = v54;
      sub_1002DA404((uint64_t)v45, v54, (uint64_t (*)(void))type metadata accessor for StationShowContextActionData);
      uint64_t v65 = type metadata accessor for LegacyEpisodeLockup();
      uint64_t v66 = sub_1002DE3C0((unint64_t *)&unk_1006005E0, (void (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup);
      v64[0] = a2;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v16, v63, v61);
      type metadata accessor for StationShowContextActionConfiguration(0);
      swift_allocObject();
      swift_retain();
      uint64_t v49 = swift_retain();
      uint64_t v38 = sub_10020EBC0(v49, v47, v48, (uint64_t)v64, v16);
      swift_release();
      sub_1002DDBA0((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StationShowContextActionData);
    }
    else
    {
      swift_release();
      return 0;
    }
    return v38;
  }
  if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002DCAD0(void *a1, void *a2)
{
  type metadata accessor for ContextActionsMenuConfiguration();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v5 = *(void *)(result
                   + OBJC_IVAR____TtC8PodcastsP33_1E0FAAAEE761D84EC15F0A371F0F292131ContextActionsMenuConfiguration_config);
    if (v5)
    {
      id v6 = a1;
      swift_retain();
      [a2 setPreferredCommitStyle:dispatch thunk of ContextActionsConfiguration.preferredPreviewActionCommitStyle.getter()];
      v8[4] = j___s8ShelfKit27ContextActionsConfigurationC20performPreviewActionyyFTj;
      v8[5] = v5;
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 1107296256;
      v8[2] = sub_10003B424;
      void v8[3] = &unk_10055E9B8;
      uint64_t v7 = _Block_copy(v8);
      swift_retain();
      swift_release();
      [a2 addCompletion:v7];
      _Block_release(v7);

      return swift_release();
    }
  }
  return result;
}

void sub_1002DCBFC(uint64_t a1, void *a2)
{
  uint64_t v36 = a2;
  uint64_t v2 = type metadata accessor for PresentationSource();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = (void *)type metadata accessor for EpisodeOffer();
  uint64_t v7 = *(isa - 1);
  __chkstk_darwin(isa);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ShareSheetContentSource();
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  ShareSheetAction.shareSheetContentSource.getter();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = *v12;
    sub_10004D29C(0, (unint64_t *)&qword_1006005B0);
    uint64_t v12 = (uint64_t *)(id)v7;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    double v13 = COERCE_DOUBLE(ShareSheetAction.referenceTime.getter());
    double v15 = 0.0;
    if (v14) {
      double v16 = 0.0;
    }
    else {
      double v16 = v13;
    }
    double v17 = COERCE_DOUBLE(ShareSheetAction.playerTime.getter());
    if ((v18 & 1) == 0) {
      double v15 = v17;
    }
    uint64_t v19 = self;
    [v12 playhead];
    id v21 = [v19 shareViewControllerWithEpisode:v12 applicationActivities:isa selectedReferenceTime:v16 selectedPlayerTime:v15 currentPlayerTime:v20];

    if (v21) {
      goto LABEL_17;
    }
    __break(1u);
  }
  (*(void (**)(char *, uint64_t *, void *))(v7 + 32))(v9, v12, isa);
  id v22 = sub_1002C5634();
  if (v22)
  {
    uint64_t v23 = v22;
    sub_10004D29C(0, (unint64_t *)&qword_1006005B0);
    uint64_t v12 = v23;
    v24.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    double v25 = COERCE_DOUBLE(ShareSheetAction.referenceTime.getter());
    double v27 = 0.0;
    if (v26) {
      double v28 = 0.0;
    }
    else {
      double v28 = v25;
    }
    double v29 = COERCE_DOUBLE(ShareSheetAction.playerTime.getter());
    if ((v30 & 1) == 0) {
      double v27 = v29;
    }
    uint64_t v31 = self;
    [v12 playhead];
    id v21 = [v31 shareViewControllerWithPlayerItem:v12 applicationActivities:v24.super.isa selectedReferenceTime:v28 selectedPlayerTime:v27 currentPlayerTime:v32];

    if (v21)
    {
      (*(void (**)(char *, void *))(v7 + 8))(v9, isa);
LABEL_17:
      uint64_t v33 = v36;

      id v34 = v33;
      PresentationSource.init(view:)();
      PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return;
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, void *))(v7 + 8))(v9, isa);
  }
}

void *sub_1002DCFE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v36 = a6;
  uint64_t v37 = a8;
  uint64_t v34 = a7;
  uint64_t v38 = a1;
  id v39 = a5;
  uint64_t v35 = type metadata accessor for InteractionContext();
  uint64_t v31 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v33 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for PresentationSource();
  uint64_t v14 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  char v30 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for PreviewingPresentationHint.push(_:), v16);
  type metadata accessor for EpisodeContextActionData();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
  id v22 = self;
  sub_1001DCD9C(a2, a3, a4);
  *(void *)(v20 + v21) = [v22 sharedInstance];
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  *(unsigned char *)(v20 + 32) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v20 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v19, v16);
  *(unsigned char *)(v20 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
  sub_10040315C();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v23 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v30, v34, v32);
  sub_100056D54(v36, (uint64_t)v40);
  NSArray v24 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, v37, v35);
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  swift_allocObject();
  uint64_t v25 = v38;
  swift_retain();
  swift_retain();
  id v26 = v39;
  sub_100211074(v25, v23, v20, v26, (uint64_t)v40, v24, a9);
  swift_release();

  rawValue = ContextActionsConfiguration.transcriptSelectionActions()()._0._rawValue;
  swift_release();
  swift_release();
  return rawValue;
}

uint64_t sub_1002DD388(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v41 = a2;
  uint64_t v10 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v10 - 8);
  uint64_t v42 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for ShowOffer();
  uint64_t v12 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v40 - v19;
  id v21 = sub_1002C5634();
  if (a4) {
    double v22 = 0.0;
  }
  else {
    double v22 = *(double *)&a3;
  }
  if (a6) {
    double v23 = 0.0;
  }
  else {
    double v23 = *(double *)&a5;
  }
  id v24 = [objc_allocWithZone((Class)MTShareUtilDataSource) initWithPlayerItem:v21 selectedReferenceTime:v22 selectedPlayerTime:v23 currentPlayerTime:0.0];

  if (v24)
  {
    id v25 = [v24 shareURL];
    if (v25)
    {
      id v26 = v25;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v27 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v18, 0, 1, v27);
    }
    else
    {
      uint64_t v29 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
    }
    sub_100053820((uint64_t)v18, (uint64_t)v20, (uint64_t *)&unk_1005F7750);
  }
  else
  {
    uint64_t v28 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v20, 1, 1, v28);
  }
  uint64_t v30 = EpisodeOffer.title.getter();
  uint64_t v32 = v31;
  EpisodeOffer.showOffer.getter();
  uint64_t v33 = ShowOffer.title.getter();
  uint64_t v35 = v34;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v43);
  if (EpisodeOffer.releaseDate.getter())
  {
    uint64_t v36 = (uint64_t)v42;
    LazyDate.value.getter();
    swift_release();
  }
  else
  {
    uint64_t v37 = type metadata accessor for Date();
    uint64_t v36 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v42, 1, 1, v37);
  }
  uint64_t v38 = sub_1002E0EEC(v41, v30, v32, v33, v35, v36, (uint64_t)v20, 200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100054B1C(v36, &qword_1005F5D20);

  sub_100054B1C((uint64_t)v20, (uint64_t *)&unk_1005F7750);
  return v38;
}

uint64_t sub_1002DD778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, char a18, double a19, char a20)
{
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  uint64_t v38 = a5;
  uint64_t v15 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v37 - v19;
  id v21 = self;
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 mediaItemForEpisodeWithUUID:v22];

  if (a18) {
    a17 = 0.0;
  }
  if (a20) {
    a19 = 0.0;
  }
  id v26 = [objc_allocWithZone((Class)MTShareUtilDataSource) initWithPlayerItem:v23 selectedReferenceTime:a17 selectedPlayerTime:a19 currentPlayerTime:0.0];
  if (v26)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = [v26 shareURL];
    if (v27)
    {
      uint64_t v28 = v27;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v29 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 0, 1, v29);
    }
    else
    {
      uint64_t v31 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v18, 1, 1, v31);
    }
    sub_100053820((uint64_t)v18, (uint64_t)v20, (uint64_t *)&unk_1005F7750);
  }
  else
  {
    uint64_t v30 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v20, 1, 1, v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if (a6) {
    uint64_t v32 = a6;
  }
  else {
    uint64_t v32 = 0xE000000000000000;
  }
  if (a6) {
    uint64_t v33 = v38;
  }
  else {
    uint64_t v33 = 0;
  }
  if (a4)
  {
    uint64_t v34 = a3;
  }
  else
  {
    a4 = 0xE000000000000000;
    uint64_t v34 = 0;
  }
  uint64_t v35 = sub_1002E0EEC(v40, v34, a4, v33, v32, v39, (uint64_t)v20, 200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100054B1C((uint64_t)v20, (uint64_t *)&unk_1005F7750);
  return v35;
}

void sub_1002DDA60(char a1)
{
  if (qword_10061ACE0 && *(void *)(qword_10061ACE0 + OBJC_IVAR____TtC8Podcasts11AppDelegate_nowPlayingBootstrap))
  {
    swift_retain();
    RepublishingValueSubject.value.getter();
    if (v3)
    {
      id v2 = [v3 view];

      if (v2)
      {
        [v2 setHidden:a1 & 1];
        swift_release();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1002DDB24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 != 255) {
    sub_1001A5920(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
}

uint64_t sub_1002DDB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShowHero();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002DDBA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002DDC00()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1002DDC38()
{
  if (*(unsigned char *)(v0 + 16) == 1) {
    return (unint64_t)ContextActionsConfiguration.previewViewController()();
  }
  else {
    return 0;
  }
}

uint64_t sub_1002DDC70()
{
  return sub_1002DE640((void (*)(void))&_swift_bridgeObjectRelease);
}

Class sub_1002DDC88(uint64_t a1)
{
  return sub_1002D8190(a1, *(UIMenuElementSize *)(v1 + 16));
}

uint64_t sub_1002DDC90()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002DDCC8()
{
  uint64_t v1 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1002DDDA8(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PreviewingPresentationHint() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  uint64_t v7 = (void *)*((void *)v1 + 4);
  int v8 = v1[v4 + *(void *)(v3 + 64)];

  return sub_1002D09E8(a1, v5, v6, v7, &v1[v4], v8);
}

uint64_t sub_1002DDE44()
{
  uint64_t v1 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1002DDF2C()
{
  uint64_t v1 = *(void *)(type metadata accessor for PreviewingPresentationHint() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1002D0E30(*(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), (char *)(v0 + v2), *(unsigned __int8 *)(v0 + v2 + *(void *)(v1 + 64)));
}

uint64_t sub_1002DDFB8()
{
  uint64_t v1 = type metadata accessor for PlaybackIntent();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  sub_10004D2D8(v0 + v4);
  swift_release();
  uint64_t v5 = v0 + ((((v4 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*(void *)(v5 + 24)) {
    sub_10004D2D8(v5);
  }

  return swift_deallocObject();
}

uint64_t sub_1002DE0E0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PlaybackIntent() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v14 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  char v9 = *(unsigned char *)(v1 + v5 + 8);
  char v10 = *(unsigned char *)(v1 + v5 + 9);
  uint64_t v11 = *(void *)(v1 + ((v5 + 17) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_10005B794;
  return sub_1002D5FFC(a1, v14, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1002DE270()
{
  uint64_t v1 = type metadata accessor for PlaybackIntent();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1002DE33C(char a1)
{
  type metadata accessor for PlaybackIntent();

  return sub_1002D6E7C(a1);
}

uint64_t sub_1002DE3B4(uint64_t a1)
{
  return sub_1002CB88C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_1002DE3C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002DE408()
{
  swift_errorRelease();

  return swift_deallocObject();
}

void sub_1002DE448(uint64_t a1, uint64_t a2)
{
  sub_1002CB390(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1002DE450()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DE490(uint64_t a1)
{
  return sub_1002CB310(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t, void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
}

uint64_t sub_1002DE4A0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96)) {
    sub_10004D2D8(v0 + 72);
  }

  return swift_deallocObject();
}

uint64_t sub_1002DE4F8(uint64_t a1)
{
  return sub_1002CAD6C(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t, void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_1002DE530()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DE578(void **a1)
{
  return sub_1002CAC28(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1002DE584()
{
  return swift_deallocObject();
}

void sub_1002DE5BC(uint64_t a1, uint64_t a2)
{
  sub_1002CB670(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1002DE5C4(void *a1)
{
  sub_1002CAEA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002DE5D0()
{
  swift_release();
  if (*(void *)(v0 + 56)) {
    sub_10004D2D8(v0 + 32);
  }

  return swift_deallocObject();
}

uint64_t sub_1002DE618()
{
  return swift_deallocObject();
}

uint64_t sub_1002DE628()
{
  return sub_1002DE640((void (*)(void))&_swift_release);
}

uint64_t sub_1002DE640(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return swift_deallocObject();
}

id sub_1002DE688(void *a1)
{
  return sub_1002C98F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002DE690@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002CA184(a1, *(BOOL **)(v2 + 16), a2);
}

uint64_t sub_1002DE698(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 64);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v4);
  return a1;
}

uint64_t sub_1002DE6EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002CA360(a1, *(void ***)(v2 + 16), a2);
}

uint64_t sub_1002DE6F4()
{
  return swift_deallocObject();
}

uint64_t sub_1002DE734()
{
  return sub_1002CA78C(*(BOOL **)(v0 + 16));
}

uint64_t sub_1002DE740()
{
  return swift_deallocObject();
}

uint64_t sub_1002DE750()
{
  swift_release();
  if (*(void *)(v0 + 64)) {
    sub_10004D2D8(v0 + 40);
  }

  return swift_deallocObject();
}

uint64_t sub_1002DE7A0()
{
  return sub_1002CE2BC(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5));
}

uint64_t sub_1002DE7B4()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10005B794;
  *(_OWORD *)(v2 + 88) = v3;
  return _swift_task_switch(sub_1002C8DB4, 0, 0);
}

uint64_t sub_1002DE864()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10005B794;
  *(_OWORD *)(v2 + 88) = v3;
  return _swift_task_switch(sub_1002C8C84, 0, 0);
}

uint64_t sub_1002DE910()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DE958()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10005B794;
  v5[13] = v4;
  v5[12] = v3;
  v5[11] = v2;
  return _swift_task_switch(sub_1002C8854, 0, 0);
}

uint64_t sub_1002DEA20()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10005B794;
  *(_OWORD *)(v2 + 88) = v3;
  return _swift_task_switch(sub_1002C848C, 0, 0);
}

uint64_t sub_1002DEAD0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DEB18()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000B8F0;
  *(_OWORD *)(v2 + 88) = v3;
  return _swift_task_switch(sub_1002C6CF4, 0, 0);
}

void sub_1002DEC28()
{
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  id v1 = [self topLevelPlaylistsExcludingFoldersPredicate];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = objc_allocWithZone((Class)MTUuidQueryObserver);
  id v3 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithEntityName:v4 predicate:v3];

  if (v5)
  {
    *(void *)(v0 + 16) = v5;
    [v5 startObserving];
    id v6 = [*(id *)(v0 + 16) uuids];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v9 = *(void *)(v8 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 24) = v9;
      char v10 = *(void **)(v0 + 16);
      uint64_t v11 = swift_allocObject();
      swift_weakInit();
      v15[4] = sub_1002DF43C;
      v15[5] = v11;
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 1107296256;
      v15[2] = sub_1002DEF64;
      void v15[3] = &unk_10055F0E8;
      uint64_t v12 = _Block_copy(v15);
      id v13 = v10;
      swift_release();
      id v14 = [v13 addResultsChangedHandler:v12];

      _Block_release(v12);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002DEE34()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    swift_beginAccess();
    uint64_t v2 = swift_weakLoadStrong();
    uint64_t v3 = v2;
    if (v2)
    {
      id v4 = *(id *)(v2 + 16);
      swift_release();
      id v5 = [v4 uuids];

      if (!v5)
      {
        __break(1u);
        return;
      }
      uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v3 = *(void *)(v6 + 16);
      swift_bridgeObjectRelease();
    }
    *(void *)(v1 + 24) = v3;
    swift_beginAccess();
    uint64_t v7 = *(void (**)(uint64_t))(v1 + 32);
    if (v7)
    {
      swift_retain();
      v7(v3);
      sub_1000536BC((uint64_t)v7);
    }
    swift_release();
  }
}

uint64_t sub_1002DEF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  id v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v5 = 0;
  if (a3) {
LABEL_3:
  }
    uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_4:
  swift_retain();
  v4(v5, v3);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002DF01C()
{
  [*(id *)(v0 + 16) stop];

  sub_1000536BC(*(void *)(v0 + 32));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StationCountObserver()
{
  return self;
}

uint64_t (*sub_1002DF090())(void *)
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  if (v2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = sub_1002DF444;
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_10004ACDC(v2);
  return v5;
}

uint64_t sub_1002DF12C(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_1002DF158(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    uint64_t v6 = sub_1001B572C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *v2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 32);
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 40) = v5;
  return sub_1000536BC(v8);
}

uint64_t sub_1002DF1F0(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

void (*sub_1002DF228(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 32);
  if (v5)
  {
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = sub_1002DF3D8;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  v3[3] = v8;
  v3[4] = v7;
  return sub_1002DF2E8;
}

void sub_1002DF2E8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (v3)
  {
    if (a2) {
      uint64_t v4 = sub_1001B5550;
    }
    else {
      uint64_t v4 = sub_1001B572C;
    }
    uint64_t v5 = v2[4];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = v2[5];
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  swift_endAccess();

  free(v2);
}

uint64_t sub_1002DF3A0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DF3D8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1002DF404()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1002DF43C()
{
}

uint64_t sub_1002DF458()
{
  uint64_t v1 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsFieldInclusionRequest();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v8 - 8);
  uint64_t v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MetricsData();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v42 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v43 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration);
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *v16;
  if (*v16)
  {
    uint64_t v40 = type metadata accessor for FlowAction();
    sub_100054B78((uint64_t *)&unk_1006027F0);
    unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v20 = swift_allocObject();
    uint64_t v38 = v20;
    *(_OWORD *)(v20 + 16) = xmmword_10046D010;
    unint64_t v34 = v20 + v19;
    swift_retain();
    uint64_t v21 = static MetricsTargetID.manageFavoriteCategories.getter();
    uint64_t v35 = v4;
    uint64_t v29 = v21;
    static MetricsTargetType.button.getter();
    uint64_t v36 = v3;
    uint64_t v30 = v7;
    uint64_t v39 = v18;
    static MetricsActionType.navigate.getter();
    uint64_t v33 = v11;
    uint64_t v37 = v13;
    static MetricsActionContext.contextual.getter();
    uint64_t v32 = v10;
    uint64_t v22 = type metadata accessor for URL();
    uint64_t v23 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v41, 1, 1, v22);
    uint64_t v31 = v14;
    static MetricsDataConfiguration.default.getter();
    id v24 = v42;
    static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
    sub_1002DFF70((uint64_t)v45, (uint64_t)v51);
    sub_100053884((uint64_t)v51);
    uint64_t v50 = v46;
    sub_1000537F4((uint64_t)&v50);
    uint64_t v49 = v47;
    sub_1000537F4((uint64_t)&v49);
    sub_1000536BC(v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100054B1C(v23, (uint64_t *)&unk_1005F7750);
    id v25 = v30;
    static MetricsFieldInclusionRequest.impressionsSnapshot.getter();
    MetricsData.removingIncludedField(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v25, v35);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v32);
    ScalarDictionary.init()();
    id v26 = v43;
    ActionMetrics.init(data:custom:)();
    uint64_t v27 = v40;
    uint64_t v28 = static FlowAction.manageCategoriesPage(actionMetrics:)();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v37);
    v44[3] = v27;
    v44[4] = sub_1002DFFD8((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
    v44[0] = v28;
    swift_retain();
    ContextActionsConfiguration.perform(_:)();
    swift_release();
    swift_release();
    swift_release();
    return sub_10004D2D8((uint64_t)v44);
  }
  return result;
}

uint64_t sub_1002DF9E4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_contextActionType, &qword_1005F9A58);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1002DFAB4()
{
  return type metadata accessor for ManageFavoriteCategoriesContextAction();
}

uint64_t type metadata accessor for ManageFavoriteCategoriesContextAction()
{
  uint64_t result = qword_100600880;
  if (!qword_100600880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002DFB08()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1002DFBF4()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0x80000001004D6810;
  v1._object = (void *)0x80000001004D67E0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000029;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x100000000000001DLL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002DFCA4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1002DFCAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1002DFD20@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_contextActionType, a1);
}

BOOL sub_1002DFD34()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration);
  swift_beginAccess();
  BOOL result = 0;
  if (*v1)
  {
    type metadata accessor for CategoryContextActionConfiguration(0);
    if (swift_dynamicCastClass()) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1002DFDA8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_1002DFE10()
{
  return swift_retain();
}

uint64_t sub_1002DFE5C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1002DFEB0())()
{
  return j__swift_endAccess;
}

uint64_t sub_1002DFF18(uint64_t a1)
{
  uint64_t result = sub_1002DFFD8(&qword_100608C80, (void (*)(uint64_t))type metadata accessor for ManageFavoriteCategoriesContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002DFF70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F76D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002DFFD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TabChangeOpenAppLocationActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a3;
  v3[9] = a1;
  v3[10] = a2;
  uint64_t v4 = type metadata accessor for ActionMetricsBehavior();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  type metadata accessor for ActionMetrics();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for MainActor();
  v3[17] = static MainActor.shared.getter();
  uint64_t v5 = sub_100054B78(&qword_1005F7E60);
  uint64_t v6 = (void *)swift_task_alloc();
  v3[18] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1002E0190;
  return BaseObjectGraph.inject<A>(_:)(v3 + 7, v5, v5);
}

uint64_t sub_1002E0190()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_1002E0520;
  }
  else {
    uint64_t v4 = sub_1002E02EC;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1002E02EC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v10 = v0[9];
  swift_release();
  OpenAppLocationAction.location.getter();
  AppLocation.navigationTab.getter();
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  uint64_t v4 = type metadata accessor for TabChangeAction();
  swift_allocObject();
  uint64_t v5 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
  swift_getObjectType();
  v0[5] = v4;
  v0[6] = sub_1002E0694((unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
  v0[2] = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for ActionMetricsBehavior.notProcessed(_:), v2);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_10004D2D8((uint64_t)(v0 + 2));
  uint64_t v6 = enum case for ActionOutcome.performed(_:);
  uint64_t v7 = type metadata accessor for ActionOutcome();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v10, v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1002E0520()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E059C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10000B8F0;
  return TabChangeOpenAppLocationActionImplementation.perform(_:asPartOf:)(a1, a2, a3);
}

uint64_t sub_1002E064C()
{
  return sub_1002E0694(&qword_100600938, (void (*)(uint64_t))&type metadata accessor for OpenAppLocationAction);
}

uint64_t sub_1002E0694(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002E06DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002E0740();

  return AsyncActionImplementation.perform(_:asPartOf:)(a1, a2, a3, v6);
}

ValueMetadata *type metadata accessor for TabChangeOpenAppLocationActionImplementation()
{
  return &type metadata for TabChangeOpenAppLocationActionImplementation;
}

unint64_t sub_1002E0740()
{
  unint64_t result = qword_100600940;
  if (!qword_100600940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100600940);
  }
  return result;
}

uint64_t sub_1002E0794()
{
  sub_100054B78((uint64_t *)&unk_100608B20);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10046D020;
  sub_100056D54(v0 + 24, (uint64_t)v36);
  uint64_t v2 = *(void *)(v0 + 64);
  type metadata accessor for PlayTranscriptSelectionContextAction();
  swift_allocObject();
  swift_retain();
  uint64_t v3 = sub_100269DB8(v36, v2);
  uint64_t v4 = sub_1002E0E94(&qword_1005FD7F0, (void (*)(uint64_t))type metadata accessor for PlayTranscriptSelectionContextAction);
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v4;
  type metadata accessor for CopyTranscriptSelectionContextAction();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  id v6 = [self mainBundle];
  v37._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 2037411651;
  v7._object = (void *)0xE400000000000000;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v37._uint64_t countAndFlagsBits = 0;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v37);

  *(Swift::String *)(v5 + 32) = v9;
  *(_OWORD *)(v5 + 48) = xmmword_100474340;
  *(void *)(v5 + 64) = 0xEA0000000000636FLL;
  uint64_t v10 = v5 + OBJC_IVAR____TtC8Podcasts36CopyTranscriptSelectionContextAction_metricsLabel;
  uint64_t v11 = enum case for MetricsLabel.copyTranscriptSelection(_:);
  uint64_t v12 = type metadata accessor for MetricsLabel();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);
  v13(v10, v11, v12);
  uint64_t v14 = v5 + OBJC_IVAR____TtC8Podcasts36CopyTranscriptSelectionContextAction_referenceTime;
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  uint64_t v15 = v5 + OBJC_IVAR____TtC8Podcasts36CopyTranscriptSelectionContextAction_playerTime;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = v5 + OBJC_IVAR____TtC8Podcasts36CopyTranscriptSelectionContextAction_shareLink;
  uint64_t v17 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(void *)(v5 + OBJC_IVAR____TtC8Podcasts36CopyTranscriptSelectionContextAction_selectedText) = 0;
  uint64_t v18 = sub_1002E0E94(&qword_1005FF698, (void (*)(uint64_t))type metadata accessor for CopyTranscriptSelectionContextAction);
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 56) = v18;
  sub_100054B78(&qword_1005FF788);
  swift_retain();
  BaseObjectGraph.inject<A>(_:)();
  swift_release();
  type metadata accessor for ShareEpisodeContextAction();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 72) = 0;
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  *(unsigned char *)(v19 + 80) = 1;
  *(void *)(v19 + 88) = 0;
  *(unsigned char *)(v19 + 96) = 1;
  v13(v19 + OBJC_IVAR____TtC8Podcasts25ShareEpisodeContextAction_metricsLabel, enum case for MetricsLabel.share(_:), v12);
  sub_100042FC4(v36, v19 + 32);
  uint64_t v20 = sub_1002E0E94(&qword_1006009F8, (void (*)(uint64_t))type metadata accessor for ShareEpisodeContextAction);
  *(void *)(v1 + 64) = v19;
  *(void *)(v1 + 72) = v20;
  type metadata accessor for ViewTranscriptContextAction();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  uint64_t v22 = v21 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
  uint64_t v23 = type metadata accessor for TranscriptRequestInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = sub_1002E0E94(&qword_100600A00, (void (*)(uint64_t))type metadata accessor for ViewTranscriptContextAction);
  *(void *)(v1 + 80) = v21;
  *(void *)(v1 + 88) = v24;
  type metadata accessor for ReportConcernContextAction();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 24) = 0;
  *(void *)(v25 + 32) = 0;
  *(void *)(v25 + 16) = 0;
  *(unsigned char *)(v25 + 40) = -1;
  *(void *)(v25 + 48) = 0;
  *(void *)(v25 + 56) = 0;
  *(void *)(v25 + 64) = 0xD000000000000016;
  *(void *)(v25 + 72) = 0x80000001004DC0D0;
  v13(v25 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_metricsLabel, enum case for MetricsLabel.reportPodcast(_:), v12);
  uint64_t v26 = v25 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_contextActionType;
  uint64_t v27 = enum case for ContextActionType.report(_:);
  uint64_t v28 = type metadata accessor for ContextActionType();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 104))(v26, v27, v28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  uint64_t v30 = sub_1002E0E94((unint64_t *)&qword_100608C20, (void (*)(uint64_t))type metadata accessor for ReportConcernContextAction);
  *(void *)(v1 + 96) = v25;
  *(void *)(v1 + 104) = v30;
  if ([self isRunningOnInternalOS])
  {
    type metadata accessor for TranscriptionErrorTTRContextAction();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = 0;
    *(void *)(v31 + 24) = 0;
    *(void *)(v31 + 32) = 0xD000000000000019;
    *(void *)(v31 + 40) = 0x80000001004DC0F0;
    *(_OWORD *)(v31 + 48) = xmmword_100474350;
    *(void *)(v31 + 64) = 0xE800000000000000;
    v13(v31 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_metricsLabel, v11, v12);
    uint64_t v32 = (void *)(v31 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText);
    *uint64_t v32 = 0;
    v32[1] = 0;
    uint64_t v33 = (void *)(v31 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp);
    *uint64_t v33 = 0;
    v33[1] = 0;
    uint64_t v1 = (uint64_t)sub_1002F0008((void *)1, 6, 1, (void *)v1);
    uint64_t v34 = sub_1002E0E94(&qword_100600A08, (void (*)(uint64_t))type metadata accessor for TranscriptionErrorTTRContextAction);
    *(void *)(v1 + 16) = 6;
    *(void *)(v1 + 112) = v31;
    *(void *)(v1 + 120) = v34;
  }
  return v1;
}

uint64_t sub_1002E0E04()
{
  swift_release();
  sub_10004D2D8(v0 + 24);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TranscriptsContextActionsProviderImplementation()
{
  return self;
}

uint64_t sub_1002E0E70()
{
  return sub_1002E0794();
}

uint64_t sub_1002E0E94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CopyTranscriptSelectionProvider()
{
  return &type metadata for CopyTranscriptSelectionProvider;
}

uint64_t sub_1002E0EEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v58 = a6;
  uint64_t v59 = a7;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v10 - 8);
  uint64_t v60 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v61 = *(void *)(v12 - 8);
  uint64_t v62 = v12;
  __chkstk_darwin(v12);
  uint64_t v53 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CharacterSet();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CharacterSet.whitespacesAndNewlines.getter();
  Class isa = CharacterSet._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  id v19 = [a1 attributedStringByTrimmingCharactersInCharacterSet:isa];

  if (!v19) {
    id v19 = a1;
  }
  v67._uint64_t countAndFlagsBits = 0;
  v67._object = (void *)0xE000000000000000;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = 0;
  uint64_t v22 = (void *)static NSAttributedStringKey.contentType.getter();
  id v23 = [v19 length];
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = &v67;
  v24[3] = v19;
  v24[4] = v20;
  v24[5] = a8;
  v24[6] = v21;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1002E1CDC;
  *(void *)(v25 + 24) = v24;
  aBlock[4] = sub_1002E1E00;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002E1E28;
  uint64_t aBlock[3] = &unk_10055F270;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [v27 enumerateAttribute:v22 inRange:0 options:v23 usingBlock:v26];

  _Block_release(v26);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v23)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    if (*(unsigned char *)(v21 + 16) == 1)
    {
      v29._uint64_t countAndFlagsBits = 0x5DA680E25BLL;
      v29._object = (void *)0xA500000000000000;
      String.append(_:)(v29);
    }
    Swift::String v65 = v67;
    swift_bridgeObjectRetain();
    uint64_t v30 = String.init<A>(_:)();
    uint64_t v32 = v31;
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v67._uint64_t countAndFlagsBits = 10256610;
    v67._object = (void *)0xA300000000000000;
    v33._uint64_t countAndFlagsBits = v30;
    v33._object = v32;
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v34._uint64_t countAndFlagsBits = 10322146;
    v34._object = (void *)0xA300000000000000;
    String.append(_:)(v34);
    swift_bridgeObjectRelease();
    v65._uint64_t countAndFlagsBits = 10;
    v65._object = (void *)0xE100000000000000;
    uint64_t v63 = 2570;
    unint64_t v64 = 0xE200000000000000;
    sub_1001AA530();
    uint64_t v35 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    Swift::String v37 = v36;
    swift_bridgeObjectRelease();
    v67._uint64_t countAndFlagsBits = v35;
    v67._object = v37;
    uint64_t v38 = sub_1002E1EC0(v54, v55, v56, v57, v58);
    uint64_t v40 = v39;
    v41._uint64_t countAndFlagsBits = 10;
    v41._object = (void *)0xE100000000000000;
    String.append(_:)(v41);
    v65._uint64_t countAndFlagsBits = 10;
    v65._object = (void *)0xE100000000000000;
    v42._uint64_t countAndFlagsBits = v38;
    v42._object = v40;
    String.append(_:)(v42);
    swift_bridgeObjectRelease();
    String.append(_:)(v65);
    swift_bridgeObjectRelease();
    uint64_t v43 = v60;
    sub_100054BBC(v59, v60, (uint64_t *)&unk_1005F7750);
    uint64_t v45 = v61;
    uint64_t v44 = v62;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v43, 1, v62) == 1)
    {
      sub_100054B1C(v43, (uint64_t *)&unk_1005F7750);
    }
    else
    {
      uint64_t v46 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v53, v43, v44);
      v47._uint64_t countAndFlagsBits = URL.absoluteString.getter();
      v65._uint64_t countAndFlagsBits = 10;
      v65._object = (void *)0xE100000000000000;
      String.append(_:)(v47);
      swift_bridgeObjectRelease();
      String.append(_:)(v65);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
    }
    id v48 = [self mainBundle];
    v68._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    v68._object = (void *)0x80000001004DC150;
    v49._object = (void *)0x80000001004DC130;
    v49._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v50._uint64_t countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    Swift::String v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, v68);

    v65._uint64_t countAndFlagsBits = 10;
    v65._object = (void *)0xE100000000000000;
    String.append(_:)(v51);
    swift_bridgeObjectRelease();
    String.append(_:)(v65);
    swift_bridgeObjectRelease();

    return v67._countAndFlagsBits;
  }
  return result;
}

uint64_t sub_1002E15CC()
{
  return swift_deallocObject();
}

uint64_t sub_1002E15DC()
{
  return swift_deallocObject();
}

uint64_t sub_1002E15EC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a2 title];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0xE000000000000000;
  }
  id v16 = [a2 author];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0xE000000000000000;
  }
  id v21 = [a2 pubDate];
  if (v21)
  {
    uint64_t v22 = v21;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v23 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
  }
  else
  {
    uint64_t v24 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
  }
  uint64_t v25 = sub_1002E0EEC(a1, v13, v15, v18, v20, (uint64_t)v10, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100054B1C((uint64_t)v10, &qword_1005F5D20);
  return v25;
}

uint64_t sub_1002E17EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v53 = a5;
  uint64_t v16 = type metadata accessor for CharacterSet();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a1, (uint64_t)&v56, &qword_1005F5D30);
  if (!v58) {
    return sub_100054B1C((uint64_t)&v56, &qword_1005F5D30);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if (v54)
    {
      id v21 = [a6 attributedSubstringFromRange:a2, a3];
      id v22 = [v21 string];

      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v25 = v24;

      uint64_t v26 = HIBYTE(v25) & 0xF;
      if ((v25 & 0x2000000000000000) == 0) {
        uint64_t v26 = v23;
      }
      uint64_t v27 = 7;
      if (((v25 >> 60) & ((v23 & 0x800000000000000) == 0)) != 0) {
        uint64_t v27 = 11;
      }
      uint64_t v28 = v27 | (v26 << 16);
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v28;
      v56._uint64_t countAndFlagsBits = v23;
      v56._object = (void *)v25;
      uint64_t v54 = 15;
      uint64_t v55 = v28;
      uint64_t v30 = (void *)swift_allocObject();
      v30[2] = a7;
      v30[3] = a8;
      v30[4] = v29;
      v30[5] = a9;
      v30[6] = a4;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_100054B78(&qword_100600A10);
      sub_1001AA530();
      sub_1002E22E0();
      StringProtocol.enumerateSubstrings<A>(in:options:_:)();
      swift_release();
      swift_beginAccess();
      uint64_t v31 = String.subscript.getter();
      Swift::String v33 = v32;
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      v56._uint64_t countAndFlagsBits = v31;
      v56._object = v33;
      uint64_t v57 = v35;
      uint64_t v58 = v37;
      sub_1002E233C();
      String.append<A>(contentsOf:)();
      swift_release();
    }
    else
    {
      uint64_t v38 = (void *)v53[1];
      v56._uint64_t countAndFlagsBits = *v53;
      v56._object = v38;
      sub_1001AB688();
      if (Collection.isNotEmpty.getter())
      {
        v39._uint64_t countAndFlagsBits = 10;
        v39._object = (void *)0xE100000000000000;
        String.append(_:)(v39);
      }
      id v40 = [a6 attributedSubstringFromRange:a2, a3, v53];
      id v41 = [v40 string];

      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v43;

      v56._uint64_t countAndFlagsBits = v42;
      v56._object = v44;
      static CharacterSet.whitespacesAndNewlines.getter();
      sub_1001AA530();
      uint64_t v45 = StringProtocol.trimmingCharacters(in:)();
      Swift::String v47 = v46;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      swift_bridgeObjectRelease();
      id v48 = [self mainBundle];
      v59._object = (void *)0xE100000000000000;
      v49._uint64_t countAndFlagsBits = 0x4E4F4C4F43;
      v49._object = (void *)0xE500000000000000;
      v50._uint64_t countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      v59._uint64_t countAndFlagsBits = 58;
      Swift::String v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, v59);

      v56._uint64_t countAndFlagsBits = v45;
      v56._object = v47;
      swift_bridgeObjectRetain();
      String.append(_:)(v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v52._uint64_t countAndFlagsBits = 10;
      v52._object = (void *)0xE100000000000000;
      String.append(_:)(v52);
      swift_bridgeObjectRelease();
      String.append(_:)(v56);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002E1C94()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002E1CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E17EC(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48));
}

uint64_t sub_1002E1D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned char *a12)
{
  uint64_t v15 = (void *)(a8 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v17 = *(void *)(a8 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    void *v15 = v19;
    if (v19 == a9)
    {
      swift_beginAccess();
      *(void *)(a10 + 16) = a4;
    }
    uint64_t result = swift_beginAccess();
    if (*v15 > a9)
    {
      uint64_t result = swift_beginAccess();
      *(unsigned char *)(a11 + 16) = 1;
      *a7 = 1;
      *a12 = 1;
    }
  }
  return result;
}

uint64_t sub_1002E1DF0()
{
  return swift_deallocObject();
}

uint64_t sub_1002E1E00()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1002E1E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_100054B1C((uint64_t)&v11, &qword_1005F5D30);
}

uint64_t sub_1002E1EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a5, (uint64_t)v12, &qword_1005F5D20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100054B1C((uint64_t)v12, &qword_1005F5D20);
    id v17 = [self mainBundle];
    v33._object = (void *)0xE000000000000000;
    v18._uint64_t countAndFlagsBits = 0x4F48535F4D4F5246;
    v18._object = (void *)0xEC00000050455F57;
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v33._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v33);

    sub_100054B78(&qword_1005F7720);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_10046D030;
    *(void *)(v20 + 56) = &type metadata for String;
    unint64_t v21 = sub_10004DA4C();
    *(void *)(v20 + 32) = a3;
    *(void *)(v20 + 40) = a4;
    *(void *)(v20 + 96) = &type metadata for String;
    *(void *)(v20 + 104) = v21;
    *(void *)(v20 + 64) = v21;
    *(void *)(v20 + 72) = a1;
    *(void *)(v20 + 80) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    id v23 = [self mainBundle];
    v34._object = (void *)0xE000000000000000;
    v24._object = (void *)0x80000001004DC180;
    v24._uint64_t countAndFlagsBits = 0xD000000000000011;
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v34._uint64_t countAndFlagsBits = 0;
    v32[1] = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v34)._countAndFlagsBits;

    sub_100054B78(&qword_1005F7720);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_10046D050;
    *(void *)(v26 + 56) = &type metadata for String;
    unint64_t v27 = sub_10004DA4C();
    uint64_t v28 = a3;
    unint64_t v29 = v27;
    *(void *)(v26 + 32) = v28;
    *(void *)(v26 + 40) = a4;
    *(void *)(v26 + 96) = &type metadata for String;
    *(void *)(v26 + 104) = v27;
    *(void *)(v26 + 64) = v27;
    *(void *)(v26 + 72) = a1;
    *(void *)(v26 + 80) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Swift::String v30 = Date.lessVerboseDisplayStringWithoutTime()();
    *(void *)(v26 + 136) = &type metadata for String;
    *(void *)(v26 + 144) = v29;
    *(Swift::String *)(v26 + 112) = v30;
    uint64_t v22 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v22;
}

uint64_t sub_1002E2264()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002E22AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  return sub_1002E1D0C(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(unsigned char **)(v7 + 48));
}

unint64_t sub_1002E22E0()
{
  unint64_t result = qword_100600A18;
  if (!qword_100600A18)
  {
    sub_100044244(&qword_100600A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100600A18);
  }
  return result;
}

unint64_t sub_1002E233C()
{
  unint64_t result = qword_100600A20;
  if (!qword_100600A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100600A20);
  }
  return result;
}

id sub_1002E2390(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005FE890);
  __chkstk_darwin(v8 - 8);
  uint64_t v115 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v111 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v85 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  Swift::String v18 = (char *)&v85 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v85 - v19;
  uint64_t v21 = sub_100054B78(&qword_1005F5D20);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v114 = (uint64_t)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  Swift::String v25 = (char *)&v85 - v24;
  uint64_t v26 = sub_100054B78(&qword_1005F76A0);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v113 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v112 = (uint64_t)&v85 - v30;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v85 - v31;
  id v33 = [a1 uuid];
  if (!v33)
  {
LABEL_9:
    swift_bridgeObjectRelease();

    return v33;
  }
  uint64_t v116 = a3;
  uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;

  id v117 = [a1 podcast];
  if (v117)
  {
    uint64_t v109 = v35;
    id v33 = [a1 podcastUuid];
    if (v33)
    {
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v104 = v37;
      uint64_t v105 = v36;

      [a1 duration];
      uint64_t v103 = MTEpisode.contentId.getter();
      int v93 = v38;
      id v39 = [a1 bestTitle];
      if (v39)
      {
        id v40 = v39;
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v101 = v42;
        uint64_t v102 = v41;
      }
      else
      {
        unint64_t v101 = 0xE000000000000000;
        uint64_t v102 = 0;
      }
      id v43 = [a1 numberedTitle];
      if (v43)
      {
        uint64_t v44 = v43;
        uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v46 = v45;
      }
      else
      {
        uint64_t v100 = 0;
        unint64_t v46 = 0xE000000000000000;
      }
      id v47 = [a1 podcast];
      if (v47)
      {
        id v48 = v47;
        MTPodcast.artworkModel.getter();
      }
      else
      {
        uint64_t v49 = type metadata accessor for ArtworkModel();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v32, 1, 1, v49);
      }
      uint64_t v106 = a2;
      uint64_t v107 = v4;
      unsigned int v98 = [a1 isExplicit];
      id v50 = [a1 bestSummary];
      if (v50)
      {
        Swift::String v51 = v50;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        id v52 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
        uint64_t v97 = LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)();
      }
      else
      {
        uint64_t v97 = 0;
      }
      [a1 pubDate];
      if (v53 <= 0.0)
      {
        uint64_t v55 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v25, 1, 1, v55);
      }
      else
      {
        [a1 pubDate];
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v54 = type metadata accessor for Date();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v25, 0, 1, v54);
      }
      if ([a1 isVideo])
      {
        int v56 = 1;
      }
      else if ([a1 isExternalType])
      {
        int v56 = 2;
      }
      else
      {
        int v56 = 0;
      }
      int v96 = v56;
      id v57 = [v117 title];
      if (v57)
      {
        uint64_t v58 = v57;
        uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v94 = v59;
      }
      else
      {
        uint64_t v95 = 0;
        uint64_t v94 = 0;
      }
      uint64_t v60 = &selRef_pendingTransactions;
      id v61 = [a1 podcast];
      id v89 = v61;
      if (v61)
      {
        uint64_t v62 = v61;
        [v61 storeCollectionId];

        uint64_t v92 = AdamID.init(rawValue:)();
      }
      else
      {
        uint64_t v92 = 0;
      }
      id v63 = [a1 assetURL];
      uint64_t v108 = v32;
      if (v63)
      {
        unint64_t v64 = v63;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        URL.init(string:)();
        swift_bridgeObjectRelease();
        uint64_t v65 = type metadata accessor for URL();
        uint64_t v66 = *(void *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v18, 1, v65) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v20, v18, v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v20, 0, 1, v65);
          uint64_t v32 = v108;
          uint64_t v60 = &selRef_pendingTransactions;
          goto LABEL_39;
        }
        sub_100054B1C((uint64_t)v18, (uint64_t *)&unk_1005F7750);
        uint64_t v32 = v108;
        uint64_t v60 = &selRef_pendingTransactions;
      }
      uint64_t v67 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v20, 1, 1, v67);
LABEL_39:
      v93 &= 1u;
      id v91 = [a1 entitlementState];
      id v68 = [a1 v60[149]];
      if (v68
        && (id v69 = v68, v70 = [v68 channel], v69, v70)
        && (id v71 = [v70 subscriptionName], v70, v71))
      {
        uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v87 = v72;
      }
      else
      {
        uint64_t v88 = 0;
        uint64_t v87 = 0;
      }
      id v90 = [a1 storeTrackId];
      id v73 = [a1 v60[149]];
      unint64_t v99 = v46;
      if (v73
        && (uint64_t v74 = v73, v75 = [v73 channel], v74, v75))
      {
        uint64_t v76 = (uint64_t)v32;
        uint64_t v77 = v15;
        uint64_t v78 = (uint64_t)v25;
        uint64_t v79 = (uint64_t)v111;
        id v80 = [v75 name];

        if (v80)
        {
          uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v85 = v81;

LABEL_50:
          LODWORD(v111) = v89 == 0;
          sub_100054BBC(v76, v112, &qword_1005F76A0);
          MTEpisode.artworkModel.getter();
          sub_100054BBC(v78, v114, &qword_1005F5D20);
          uint64_t v82 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v77, 1, 1, v82);
          sub_100054BBC((uint64_t)v20, v79, (uint64_t *)&unk_1005F7750);
          uint64_t v83 = type metadata accessor for EpisodeListenNowReason();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v115, 1, 1, v83);
          [a1 hasFreeVersion];
          [a1 upNextScore];
          id v33 = (id)dispatch thunk of StationEpisode.__allocating_init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:stationUuid:adamId:channelAdamId:channelName:artwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)();

          sub_100054B1C((uint64_t)v20, (uint64_t *)&unk_1005F7750);
          sub_100054B1C(v78, &qword_1005F5D20);
          sub_100054B1C((uint64_t)v108, &qword_1005F76A0);
          return v33;
        }
      }
      else
      {
        uint64_t v76 = (uint64_t)v32;
        uint64_t v77 = v15;
        uint64_t v78 = (uint64_t)v25;
        uint64_t v79 = (uint64_t)v111;
      }
      uint64_t v86 = 0;
      uint64_t v85 = 0;
      goto LABEL_50;
    }
    swift_bridgeObjectRelease();

    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return 0;
}

void sub_1002E2F28()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v1 = Strong;
  if (Strong)
  {
    id v2 = *(id *)(Strong + 16);
    swift_release();
    id v3 = [v2 uuids];

    if (!v3)
    {
      __break(1u);
      return;
    }
    uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v1 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v5 = swift_weakLoadStrong();
  if (!v5 || (uint64_t v6 = *(void *)(v5 + 24), swift_release(), v1 != v6))
  {
    swift_beginAccess();
    uint64_t v7 = swift_weakLoadStrong();
    if (v7)
    {
      uint64_t v8 = v7;
      *(void *)(v7 + 24) = v1;
      swift_beginAccess();
      uint64_t v9 = *(void (**)(uint64_t))(v8 + 32);
      if (v9)
      {
        swift_retain();
        v9(v1);
        sub_1000536BC((uint64_t)v9);
      }
      swift_release();
    }
  }
}

uint64_t (*sub_1002E3088())()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  if (v2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = sub_1002E3338;
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_10004ACDC(v2);
  return v5;
}

void (*sub_1002E3124(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 32);
  if (v5)
  {
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = sub_1002E32DC;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  v3[3] = v8;
  v3[4] = v7;
  return sub_1002E31E4;
}

void sub_1002E31E4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (v3)
  {
    if (a2) {
      uint64_t v4 = sub_1002E32D4;
    }
    else {
      uint64_t v4 = (uint64_t (*)(uint64_t))sub_1002E3334;
    }
    uint64_t v5 = v2[4];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = v2[5];
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  swift_endAccess();

  free(v2);
}

uint64_t sub_1002E329C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002E32D4(uint64_t a1)
{
  return sub_1002DF1F0(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1002E32DC(void *a1)
{
  return sub_1002DF12C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1002E32E4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1002E331C()
{
}

void sub_1002E333C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (void *)((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t *v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    type metadata accessor for CoreDataFetcher();
    uint64_t v17 = self;
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v17 predicateForPodcastUUID:v18];

    __chkstk_darwin(v20);
    v28[-6] = a1;
    v28[-5] = a2;
    v28[-4] = a3;
    v28[-3] = a4;
    v28[-2] = a5;
    static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)();

    uint64_t v21 = v28[2];
    char v22 = v29;
    char v23 = v30;
    char v24 = v31;
    uint64_t v25 = v32;
    int v26 = v33;
    long long v27 = v34;
    *(void *)a6 = v28[1];
    *(void *)(a6 + 8) = v21;
    *(unsigned char *)(a6 + 16) = v22;
    *(unsigned char *)(a6 + 17) = v23;
    *(unsigned char *)(a6 + 18) = v24;
    *(void *)(a6 + 24) = v25;
    *(_DWORD *)(a6 + 32) = v26;
    *(_OWORD *)(a6 + 40) = v27;
  }
  else
  {
    __break(1u);
  }
}

void sub_1002E3570(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a1;
  if (a1)
  {
    uint64_t v6 = *(unsigned __int8 *)(a2 + 18);
    if (v6 == 1)
    {
      swift_getObjectType();
      id v7 = v3;
      dispatch thunk of MTNotificationManagerProtocol.requestNotificationPermissionsIfNeeded()();
    }
    else
    {
      id v16 = a1;
    }
    [v3 setNotifications:v6];
    [v3 setShowTypeSetting:*(void *)(a2 + 24)];
    [v3 setHidesPlayedEpisodes:*(unsigned int *)(a2 + 32)];
    [v3 setEpisodeLimit:*(void *)(a2 + 40)];
    [v3 setDeletePlayedEpisodes:*(void *)(a2 + 48)];
    unsigned int v17 = [v3 subscribed];
    int v18 = *(unsigned __int8 *)(a2 + 17);
    if (v17 != v18) {
      sub_1002E3BF0(v3, v18);
    }
    id v19 = [v3 managedObjectContext];
    [v19 saveInCurrentBlock];

    id v20 = v3;
    unsigned __int8 v24 = [v20 notifications];
    id v21 = [v20 title];
    if (v21)
    {
      char v22 = v21;
      uint64_t v3 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v23;
    }
    else
    {
      uint64_t v3 = 0;
      unint64_t v13 = 0xE000000000000000;
    }
    unsigned __int8 v9 = [v20 isSerialShowTypeInFeed];
    unsigned __int8 v10 = [v20 subscribed];
    uint64_t v15 = (uint64_t)[v20 showTypeSetting];
    unsigned int v12 = [v20 hidesPlayedEpisodes];
    id v8 = [v20 episodeLimit];
    uint64_t v14 = (uint64_t)[v20 deletePlayedEpisodes];

    unsigned __int8 v11 = v24;
  }
  else
  {
    id v8 = (id)MTPodcastEpisodeLimit.intValue.getter();
    unsigned __int8 v9 = 0;
    unsigned __int8 v10 = 0;
    unsigned __int8 v11 = 0;
    unsigned int v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    uint64_t v14 = 0xFFFFFFFFLL;
    uint64_t v15 = 1;
  }
  *(void *)a3 = v3;
  *(void *)(a3 + 8) = v13;
  *(unsigned char *)(a3 + 16) = v9;
  *(unsigned char *)(a3 + 17) = v10;
  *(unsigned char *)(a3 + 18) = v11;
  *(void *)(a3 + 24) = v15;
  *(_DWORD *)(a3 + 32) = v12;
  *(void *)(a3 + 40) = v8;
  *(void *)(a3 + 48) = v14;
}

__n128 sub_1002E37D8@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for CoreDataFetcher();
  uint64_t v2 = self;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 predicateForPodcastUUID:v3];

  static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)();
  __n128 result = v13;
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 17) = v9;
  *(unsigned char *)(a1 + 18) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v12;
  *(__n128 *)(a1 + 40) = v13;
  return result;
}

double sub_1002E38EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002E333C(a1, *v2, v2[1], v2[2], v2[3], (uint64_t)v6);
  long long v4 = v6[1];
  *(_OWORD *)a2 = v6[0];
  *(_OWORD *)(a2 + 16) = v4;
  double result = *(double *)&v7;
  *(_OWORD *)(a2 + 32) = v7;
  *(void *)(a2 + 48) = v8;
  return result;
}

void sub_1002E3940(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002E3570(a1, *(void *)(v2 + 16), a2);
}

void sub_1002E3950(uint64_t a1)
{
  sub_10004D29C(0, (unint64_t *)&unk_1005FF040);
  id v2 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  sub_10027726C(a1);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 reportWithType:4 userInfo:isa location:@"psst" reason:0];
}

void sub_1002E3A24(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    id v5 = a1;
    unsigned __int8 v6 = [v5 notifications];
    if (a2)
    {
      LOBYTE(v21) = v6;
    }
    else
    {
      id v16 = [self _applePodcastsFoundationSharedUserDefaults];
      unsigned int v17 = [v16 BOOLForKey:kMTDidPromptForNotificationsPermissionsKey];

      unsigned int v21 = [v5 notifications] & v17;
    }
    id v18 = [v5 title];
    if (v18)
    {
      id v19 = v18;
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v20;
    }
    else
    {
      uint64_t v8 = 0;
      unint64_t v13 = 0xE000000000000000;
    }
    unsigned __int8 v9 = [v5 isSerialShowTypeInFeed];
    unsigned __int8 v10 = [v5 subscribed];
    uint64_t v15 = (uint64_t)[v5 showTypeSetting];
    unsigned int v12 = [v5 hidesPlayedEpisodes];
    id v7 = [v5 episodeLimit];
    uint64_t v14 = (uint64_t)[v5 deletePlayedEpisodes];

    char v11 = v21;
  }
  else
  {
    id v7 = (id)MTPodcastEpisodeLimit.intValue.getter();
    uint64_t v8 = 0;
    unsigned __int8 v9 = 0;
    unsigned __int8 v10 = 0;
    char v11 = 0;
    unsigned int v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    uint64_t v14 = 0xFFFFFFFFLL;
    uint64_t v15 = 1;
  }
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v13;
  *(unsigned char *)(a3 + 16) = v9;
  *(unsigned char *)(a3 + 17) = v10;
  *(unsigned char *)(a3 + 18) = v11;
  *(void *)(a3 + 24) = v15;
  *(_DWORD *)(a3 + 32) = v12;
  *(void *)(a3 + 40) = v7;
  *(void *)(a3 + 48) = v14;
}

void sub_1002E3BF0(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned __int8 v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unsigned __int8 v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 managedObjectContext];
  if (v11)
  {
    unsigned int v12 = v11;
    if (a2)
    {
      if (qword_1005F5AE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v13 = (id)static PodcastsStateCoordinator.shared;
      NSString v14 = String._bridgeToObjectiveC()();
      [v13 unsafeEnableSubscriptionOnPodcastUUID:v14 from:3 context:v12];

      [a1 markPlaylistsForUpdate];
      id v15 = [a1 dictionaryRepresentation];
      uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      unsigned int v17 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v16;
      aBlock[4] = sub_1002E404C;
      aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003B424;
      uint64_t aBlock[3] = &unk_10055F420;
      id v19 = _Block_copy(aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v19);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      if (qword_1005F5AE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v20 = (id)static PodcastsStateCoordinator.shared;
      NSString v21 = String._bridgeToObjectiveC()();
      [v20 disableSubscriptionOnPodcastUUID:v21 from:3 context:v12];
    }
  }
}

uint64_t sub_1002E4014()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1002E404C()
{
  sub_1002E3950(*(void *)(v0 + 16));
}

double sub_1002E4054@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002E3A24(a1, 0, (uint64_t)v5);
  long long v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  double result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(void *)(a2 + 48) = v7;
  return result;
}

uint64_t destroy for ShowSettingsController()
{
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ShowSettingsController(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for ShowSettingsController(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  return a1;
}

uint64_t assignWithTake for ShowSettingsController(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for ShowSettingsController()
{
  return &type metadata for ShowSettingsController;
}

BOOL sub_1002E4204()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v8 = type metadata accessor for InteractionContext();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  swift_beginAccess();
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    dispatch thunk of ContextActionsConfiguration.context.getter();
    swift_release();
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v12 = InteractionContext.Page.isRecentlyUnfollowedPage.getter();
    sub_1002E60C4((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
    if (v12) {
      return 0;
    }
  }
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  sub_1002E57D0(v18);
  sub_100053820((uint64_t)v18, (uint64_t)v19, qword_1005F7C08);
  if (v20 != 3)
  {
    sub_1001AC5DC((uint64_t)v19, (uint64_t)v21);
    sub_1001AC5DC((uint64_t)v21, (uint64_t)v22);
    if (v23 < 3)
    {
      sub_1001AC638((uint64_t)v18);
      return 1;
    }
    char v15 = v22[0];
    sub_1001AC638((uint64_t)v18);
    return (v15 & 1) == 0;
  }
  sub_1002E4B28((uint64_t)v4);
  uint64_t v13 = type metadata accessor for URL();
  BOOL v14 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v4, 1, v13) != 1;
  sub_100054B1C((uint64_t)v4, (uint64_t *)&unk_1005F7750);
  return v14;
}

uint64_t sub_1002E44B4()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002E57D0(v6);
  uint64_t result = sub_100053820((uint64_t)v6, (uint64_t)v7, qword_1005F7C08);
  if (v8 != 3)
  {
    sub_1001AC5DC((uint64_t)v7, (uint64_t)v9);
    sub_1001AC5DC((uint64_t)v9, (uint64_t)v10);
    if (v11 < 3 || (v10[0] & 1) != 0)
    {
      sub_1002E5374();
      sub_100041A98((void *)(v0 + 32), *(void *)(v0 + 56));
      sub_1002E4B28((uint64_t)v3);
      sub_1002E5138();
      sub_1002E48E8();
      sub_1002E4670();
      dispatch thunk of LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1001AC638((uint64_t)v6);
      return sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_1005F7750);
    }
    else
    {
      sub_100041A98((void *)(v0 + 32), *(void *)(v0 + 56));
      sub_1002E4670();
      dispatch thunk of LibraryActionControllerProtocol.subscribe(podcast:displaySuccessHUD:)();
      swift_release();
      return sub_1001AC638((uint64_t)v6);
    }
  }
  return result;
}

uint64_t sub_1002E4670()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (!*(void *)(v0 + 24)) {
    goto LABEL_9;
  }
  swift_retain();
  dispatch thunk of ContextActionsConfiguration.context.getter();
  swift_release();
  InteractionContext.page.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_1002E60C4((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_1005F80A0);
  sub_100054B1C((uint64_t)&v8[*(int *)(v11 + 64)], (uint64_t *)&unk_1005FEA40);
  if (v10)
  {
LABEL_9:
    char v19 = 1;
    return v19 & 1;
  }
  uint64_t v22 = v9;
  sub_1001A5874();
  uint64_t v12 = BinaryInteger.description.getter();
  uint64_t v14 = v13;
  if (!*(void *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v15 = v12;
  swift_retain();
  uint64_t v16 = sub_100241804();
  uint64_t v18 = v17;
  swift_release();
  if (v15 == v16 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
    char v19 = 0;
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v19 = v21 ^ 1;
  }
  return v19 & 1;
}

uint64_t sub_1002E48E8()
{
  uint64_t v1 = type metadata accessor for ShowOffer();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v18 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = *(void *)(v0 + 16);
  if (!v14) {
    return 0;
  }
  uint64_t v15 = v14 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  sub_1001AC690(v15, (uint64_t)v11);
  sub_1001AC6F4((uint64_t)v11, (uint64_t)v13);
  sub_1001AC690((uint64_t)v13, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1002E60C4((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
    swift_bridgeObjectRelease();
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  uint64_t v16 = ShowOffer.dzcPageLocation.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1002E60C4((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
  return v16;
}

uint64_t sub_1002E4B28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowOffer();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&aBlock[-1] - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&aBlock[-1] - v17;
  uint64_t v19 = *(void *)(v1 + 16);
  if (v19)
  {
    uint64_t v20 = v19 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess();
    sub_1001AC690(v20, (uint64_t)v16);
    sub_1001AC6F4((uint64_t)v16, (uint64_t)v18);
    sub_1001AC690((uint64_t)v18, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
      ShowOffer.feedUrl.getter();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return sub_1002E60C4((uint64_t)v18, type metadata accessor for PodcastContextActionDataType);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_100241558();
      if (v24)
      {
        uint64_t v25 = (void *)v24;
        uint64_t v26 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 1, 1, v26);
        id v27 = [v25 managedObjectContext];
        if (v27)
        {
          uint64_t v28 = v27;
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = v25;
          *(void *)(v29 + 24) = v9;
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = sub_1002E60AC;
          *(void *)(v30 + 24) = v29;
          aBlock[4] = sub_100018840;
          aBlock[5] = v30;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100018818;
          uint64_t aBlock[3] = &unk_10055F630;
          char v31 = _Block_copy(aBlock);
          id v32 = v28;
          id v33 = v25;
          swift_retain();
          swift_release();
          [v32 performBlockAndWait:v31];
          _Block_release(v31);

          sub_1002E60C4((uint64_t)v18, type metadata accessor for PodcastContextActionDataType);
          char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          uint64_t result = swift_release();
          if (isEscapingClosureAtFileLocation)
          {
            __break(1u);
          }
          else
          {
            sub_100053820((uint64_t)v9, a1, (uint64_t *)&unk_1005F7750);
            return swift_release();
          }
        }
        else
        {
          sub_1002E60C4((uint64_t)v18, type metadata accessor for PodcastContextActionDataType);

          return sub_100053820((uint64_t)v9, a1, (uint64_t *)&unk_1005F7750);
        }
      }
      else
      {
        sub_1002E60C4((uint64_t)v18, type metadata accessor for PodcastContextActionDataType);
        uint64_t v35 = type metadata accessor for URL();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a1, 1, 1, v35);
      }
    }
  }
  else
  {
    uint64_t v22 = type metadata accessor for URL();
    unint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return v23(a1, 1, 1, v22);
  }
  return result;
}

id sub_1002E5064(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 feedURL];
  if (result)
  {
    uint64_t v8 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    URL.init(string:)();
    swift_bridgeObjectRelease();
    return (id)sub_100222E1C((uint64_t)v6, a2);
  }
  return result;
}

uint64_t sub_1002E5138()
{
  uint64_t v1 = type metadata accessor for ShowOffer();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v18 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = *(void *)(v0 + 16);
  if (!v14) {
    return 0;
  }
  uint64_t v15 = v14 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  sub_1001AC690(v15, (uint64_t)v11);
  sub_1001AC6F4((uint64_t)v11, (uint64_t)v13);
  sub_1001AC690((uint64_t)v13, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1002E60C4((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
    swift_bridgeObjectRelease();
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  uint64_t v16 = ShowOffer.adamId.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1002E60C4((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
  return v16;
}

uint64_t sub_1002E5374()
{
  uint64_t v1 = type metadata accessor for ShowOffer();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)aBlock - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)aBlock - v12;
  uint64_t v14 = *(void *)(v0 + 16);
  if (!v14) {
    goto LABEL_18;
  }
  uint64_t v15 = v14 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  sub_1001AC690(v15, (uint64_t)v11);
  sub_1001AC6F4((uint64_t)v11, (uint64_t)v13);
  sub_1001AC690((uint64_t)v13, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    if (ShowOffer.contentRating.getter() == 2)
    {
      char v16 = 0;
    }
    else
    {
      uint64_t v28 = ContentRating.rawValue.getter();
      uint64_t v30 = v29;
      char v16 = 1;
      if (v28 != ContentRating.rawValue.getter() || v30 != v31) {
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_1002E60C4((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
    return v16 & 1;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_100241558();
  if (!v17)
  {
    sub_1002E60C4((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
LABEL_18:
    char v16 = 0;
    return v16 & 1;
  }
  uint64_t v18 = v17;
  char v34 = 0;
  id v19 = [v17 managedObjectContext];
  if (!v19)
  {
    sub_1002E60C4((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);

    goto LABEL_18;
  }
  uint64_t v20 = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = &v34;
  *(void *)(v21 + 24) = v18;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1002E6034;
  *(void *)(v22 + 24) = v21;
  aBlock[4] = sub_10004A010;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  uint64_t aBlock[3] = &unk_10055F5B8;
  unint64_t v23 = _Block_copy(aBlock);
  id v24 = v20;
  id v25 = v18;
  swift_retain();
  swift_release();
  [v24 performBlockAndWait:v23];
  _Block_release(v23);

  sub_1002E60C4((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    char v16 = v34;
    swift_release();
    return v16 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002E57D0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowOffer();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t result = __chkstk_darwin(v11);
  char v16 = (char *)&v24 - v15;
  uint64_t v17 = *(void *)(v1 + 16);
  if (v17)
  {
    uint64_t v18 = v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess();
    sub_1001AC690(v18, (uint64_t)v13);
    sub_1001AC6F4((uint64_t)v13, (uint64_t)v16);
    sub_1001AC690((uint64_t)v16, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
      ShowOffer.adamId.getter();
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v32 = 2;
      dispatch thunk of PodcastStateController.stateMachine(for:initialState:)();
      dispatch thunk of PodcastStateMachine.currentState.getter();
      uint64_t v19 = v25;
      uint64_t v20 = v26;
      uint64_t v21 = v27;
      uint64_t v22 = v28;
      uint64_t v24 = v3;
      uint64_t v23 = v29;
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v32 = 2;
      dispatch thunk of PodcastStateController.stateMachine(for:initialState:)();
      swift_bridgeObjectRelease();
      dispatch thunk of PodcastStateMachine.currentState.getter();
      uint64_t v19 = v25;
      uint64_t v20 = v26;
      uint64_t v21 = v27;
      uint64_t v22 = v28;
      uint64_t v23 = v29;
      swift_release();
    }
    uint64_t result = sub_1002E60C4((uint64_t)v16, type metadata accessor for PodcastContextActionDataType);
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v21 = 3;
  }
  *a1 = v19;
  a1[1] = v20;
  a1[2] = v21;
  a1[3] = v22;
  a1[4] = v23;
  return result;
}

uint64_t sub_1002E5A94()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 32);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts29SubscribePodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1002E5B54()
{
  return type metadata accessor for SubscribePodcastContextAction();
}

uint64_t type metadata accessor for SubscribePodcastContextAction()
{
  uint64_t result = qword_100600B48;
  if (!qword_100600B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002E5BA8()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002E5C5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts29SubscribePodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1002E5CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.subscribe(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_1002E5DB0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

void *sub_1002E5E10(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1002E5E70(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1002E5ED0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1002E5F30(uint64_t a1)
{
  uint64_t result = sub_1002E5FB8(&qword_100600C80);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002E5F74(uint64_t a1)
{
  uint64_t result = sub_1002E5FB8(&qword_100600C88);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002E5FB8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SubscribePodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002E5FFC()
{
  return swift_deallocObject();
}

id sub_1002E6034()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id result = [*(id *)(v0 + 24) isExplicit];
  *uint64_t v1 = (_BYTE)result;
  return result;
}

uint64_t sub_1002E6064()
{
  return swift_deallocObject();
}

uint64_t sub_1002E6074()
{
  return swift_deallocObject();
}

id sub_1002E60AC()
{
  return sub_1002E5064(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1002E60B4()
{
  return swift_deallocObject();
}

uint64_t sub_1002E60C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002E612C(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_1002E6158()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B19C(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_pageURL, (uint64_t)v3);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_1005F7750);
    static ASKConstants.PodcastCatalogUrl.getter();
LABEL_9:
    swift_bridgeObjectRelease();
    char v12 = 0;
    return v12 & 1;
  }
  uint64_t v6 = URL.absoluteString.getter();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  uint64_t v9 = static ASKConstants.PodcastCatalogUrl.getter();
  if (!v8) {
    goto LABEL_9;
  }
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n();
    char v12 = 1;
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12 & 1;
}

uint64_t (*sub_1002E62F4())()
{
  uint64_t v1 = (uint64_t (**)())(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler);
  if (v2)
  {
    uint64_t v3 = *(uint64_t (**)())(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler);
  }
  else
  {
    uint64_t v4 = *(uint64_t (**)())(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_didSelectItemSubject);
    uint64_t v3 = sub_1001C0E14;
    *uint64_t v1 = sub_1001C0E14;
    v1[1] = v4;
    swift_retain_n();
    sub_1000536BC(0);
  }
  sub_10004ACDC(v2);
  return v3;
}

uint64_t sub_1002E6390()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005F8B20);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005FBC00);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_1005F8B30);
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "CarPlayStoreProvider: Fetch content called.", v17, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v31 = StorePageProvider.pageContent.getter();
  swift_allocObject();
  swift_weakInit();
  sub_100054B78(&qword_1005F5BC0);
  sub_100054B78(&qword_1005F7800);
  sub_100044200((unint64_t *)&unk_1005F8B50, &qword_1005F5BC0);
  Publisher.compactMap<A>(_:)();
  swift_release();
  swift_release();
  sub_100044200((unint64_t *)&unk_1005FBC10, (uint64_t *)&unk_1005F8B20);
  uint64_t v18 = v26;
  Publisher.removeDuplicates(by:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v18);
  uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_updatePlayStateSubject);
  sub_100054B78((uint64_t *)&unk_1005F8B00);
  sub_100044200((unint64_t *)&unk_1005F8B60, (uint64_t *)&unk_1005FBC00);
  sub_100044200(&qword_1005F9F40, (uint64_t *)&unk_1005F8B00);
  uint64_t v19 = v28;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v19);
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1002E8FC0;
  *(void *)(v21 + 24) = v20;
  sub_100044200(&qword_1005F8B78, &qword_1005F8B30);
  uint64_t v22 = v30;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v22);
  swift_beginAccess();
  sub_100054B78((uint64_t *)&unk_1005F9ED0);
  sub_100044200(qword_1005F8BB0, (uint64_t *)&unk_1005F9ED0);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1002E6984@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v91 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v90 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for Logger();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v87 = (uint64_t (**)(char *, uint64_t))((char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v94 = type metadata accessor for ModernShelf.ItemPresentation();
  id v80 = *(void (***)(char *, char *, uint64_t))(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for ModernShelf();
  uint64_t v92 = *(void *)(v93 - 8);
  uint64_t v12 = __chkstk_darwin(v93);
  uint64_t v84 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v78 - v14;
  uint64_t v16 = type metadata accessor for ModernPage();
  __chkstk_darwin(v16);
  uint64_t v82 = (uint64_t)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PageContent();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v86 = result;
  if (!result) {
    goto LABEL_25;
  }
  sub_1001C6A68(a1, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v83 = a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v93 = v7;
    *(void *)&long long v94 = v6;
    swift_release();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    id v43 = v87;
    static OS_os_log.carPlay.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v46 = 136315138;
      swift_getErrorValue();
      uint64_t v47 = Error.localizedDescription.getter();
      uint64_t v96 = sub_10004B974(v47, v48, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Failed to load Browse store page with error: %s", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t))(v88 + 8))(v43, v89);
    uint64_t v49 = self;
    id v50 = [v49 mainBundle];
    v97._object = (void *)0xEE0064616F6C206FLL;
    v51._uint64_t countAndFlagsBits = 0x545F44454C494146;
    v51._object = (void *)0xEE0044414F4C5F4FLL;
    v52._uint64_t countAndFlagsBits = 0;
    v52._object = (void *)0xE000000000000000;
    v97._uint64_t countAndFlagsBits = 0x742064656C696146;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v97);

    id v53 = [v49 mainBundle];
    v98._object = (void *)0xEC00000079727465;
    v54._uint64_t countAndFlagsBits = 0x525F4F545F504154;
    v54._object = (void *)0xEC00000059525445;
    v55._uint64_t countAndFlagsBits = 0;
    v55._object = (void *)0xE000000000000000;
    v98._uint64_t countAndFlagsBits = 0x72206F7420706154;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v98);

    id v56 = objc_allocWithZone((Class)CPListItem);
    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v59 = [v56 initWithText:v57 detailText:v58];

    aBlock[4] = (uint64_t)sub_1002E9C8C;
    aBlock[5] = v86;
    uint64_t v96 = (uint64_t)v59;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001BF99C;
    uint64_t aBlock[3] = (uint64_t)&unk_10055F6F8;
    uint64_t v60 = _Block_copy(aBlock);
    swift_retain();
    id v61 = v59;
    swift_release();
    [v61 setHandler:v60];
    _Block_release(v60);

    uint64_t v62 = v90;
    uint64_t v63 = v93;
    swift_storeEnumTagMultiPayload();
    unint64_t v64 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
    uint64_t v65 = (uint64_t)v62;
    uint64_t v66 = v94;
    sub_1001C6ACC(v65, v94, type metadata accessor for CarPlayTemplateInfo.TemplateType);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v66, 0, 1, v63);
    uint64_t v67 = (uint64_t)&v64[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
    swift_beginAccess();
    sub_1001BF934(v66, v67);
    swift_endAccess();
    v64[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
    sub_10004D29C(0, &qword_1005F88B0);
    id v68 = NSString.init(stringLiteral:)();
    id v69 = v64;
    sub_1001BFA4C((uint64_t)v68, (uint64_t)v64);

    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v70 = swift_allocObject();
    long long v94 = xmmword_10046D060;
    *(_OWORD *)(v70 + 16) = xmmword_10046D060;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v94;
    uint64_t v72 = (void *)v96;
    *(void *)(inited + 32) = v96;
    aBlock[0] = inited;
    specialized Array._endMutation()();
    unint64_t v73 = aBlock[0];
    id v74 = objc_allocWithZone((Class)CPListSection);
    id v75 = v72;
    sub_1001C04A0(v73);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v77 = [v74 initWithItems:isa];

    *(void *)(v70 + 32) = v77;
    aBlock[0] = v70;
    specialized Array._endMutation()();
    PassthroughSubject.send(_:)();
    swift_errorRelease();
    swift_release();

    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = 0;
    a2 = v83;
    goto LABEL_29;
  }
  uint64_t v23 = v86;
  if (EnumCaseMultiPayload != 3)
  {
    swift_release();
    uint64_t result = sub_1001C6B34((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for PageContent);
LABEL_25:
    uint64_t v26 = 0;
LABEL_29:
    *a2 = v26;
    return result;
  }
  uint64_t v24 = v82;
  sub_1001C6ACC((uint64_t)v20, v82, (uint64_t (*)(void))&type metadata accessor for ModernPage);
  uint64_t v25 = *(void *)(v24 + *(int *)(v16 + 24));
  uint64_t v26 = _swiftEmptyArrayStorage;
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v27 = *(char **)(v25 + 16);
  uint64_t v85 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_unsupportedSectionIds;
  uint64_t v81 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_supportedItemModelTypes;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  id v90 = v27;
  if (!v27)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1001C6B34(v82, (uint64_t (*)(void))&type metadata accessor for ModernPage);
    uint64_t result = swift_release();
    goto LABEL_29;
  }
  uint64_t v28 = 0;
  uint64_t v88 = v92 + 16;
  uint64_t v29 = (void (**)(char *, void))(v80 + 1);
  id v80 = (void (**)(char *, char *, uint64_t))(v92 + 32);
  uint64_t v87 = (uint64_t (**)(char *, uint64_t))(v92 + 8);
  uint64_t v89 = v25;
  while ((unint64_t)v28 < *(void *)(v25 + 16))
  {
    unint64_t v30 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    uint64_t v91 = *(void *)(v92 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v92 + 16))(v15, v25 + v30 + v91 * (void)v28, v93);
    if ((ModernShelf.hideFromCarPlay.getter() & 1) != 0
      || (uint64_t v31 = *(void *)(v23 + v85),
          uint64_t v32 = ModernShelf.id.getter(),
          LOBYTE(v31) = sub_10030A84C(v32, v33, v31),
          swift_bridgeObjectRelease(),
          (v31 & 1) != 0)
      || (uint64_t v34 = *(void *)(v23 + v81), (v35 = *(void *)(v34 + 16)) == 0))
    {
LABEL_14:
      uint64_t result = (*v87)(v15, v93);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = 32;
      while (1)
      {
        uint64_t v37 = *(void *)(v34 + v36);
        ModernShelf.itemPresentation.getter();
        ModernShelf.ItemPresentation.itemKind.getter();
        (*v29)(v11, v94);
        if (v37 == ModernShelf.ItemKind.modelType.getter()) {
          break;
        }
        v36 += 16;
        if (!--v35)
        {
          swift_bridgeObjectRelease();
          a2 = v83;
          uint64_t v23 = v86;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
      int v38 = *v80;
      (*v80)(v84, v15, v93);
      uint64_t v39 = aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA794(0, *(void *)(v39 + 16) + 1, 1);
        uint64_t v39 = aBlock[0];
      }
      a2 = v83;
      uint64_t v23 = v86;
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      unint64_t v42 = v41 + 1;
      if (v41 >= v40 >> 1)
      {
        uint64_t v79 = v38;
        sub_1001BA794(v40 > 1, v41 + 1, 1);
        unint64_t v42 = v41 + 1;
        int v38 = v79;
        uint64_t v39 = aBlock[0];
      }
      *(void *)(v39 + 16) = v42;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v38)(v39 + v30 + v41 * v91, v84, v93);
      aBlock[0] = v39;
    }
    ++v28;
    uint64_t v25 = v89;
    if (v28 == v90)
    {
      uint64_t v26 = (void *)aBlock[0];
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002E76E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7768);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v56 = type metadata accessor for ModernShelf();
  uint64_t v10 = *(void *)(v56 - 8);
  uint64_t v11 = __chkstk_darwin(v56);
  Swift::String v55 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v48 - v13;
  uint64_t v15 = *a1;
  uint64_t v16 = *a2;
  int64_t v17 = *(void *)(v15 + 16);
  uint64_t v18 = _swiftEmptyArrayStorage;
  Swift::String v54 = v7;
  if (v17)
  {
    uint64_t v48 = v16;
    NSString v57 = _swiftEmptyArrayStorage;
    sub_1001BA7D0(0, v17, 0);
    uint64_t v49 = v10;
    uint64_t v19 = v10 + 16;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v21 = v15 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v51 = *(void *)(v19 + 56);
    Swift::String v52 = v20;
    id v53 = (void (*)(char *, uint64_t, uint64_t))v19;
    id v50 = (void (**)(char *, uint64_t))(v19 - 8);
    do
    {
      v52(v14, v21, v56);
      ModernShelf.header.getter();
      uint64_t v22 = type metadata accessor for Header();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v22) == 1)
      {
        sub_100054B1C((uint64_t)v9, &qword_1005F7768);
        uint64_t v24 = 0;
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v24 = Header.title.getter();
        uint64_t v25 = v26;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v22);
      }
      (*v50)(v14, v56);
      uint64_t v18 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA7D0(0, v18[2] + 1, 1);
        uint64_t v18 = v57;
      }
      unint64_t v28 = v18[2];
      unint64_t v27 = v18[3];
      if (v28 >= v27 >> 1)
      {
        sub_1001BA7D0(v27 > 1, v28 + 1, 1);
        uint64_t v18 = v57;
      }
      v18[2] = v28 + 1;
      uint64_t v29 = &v18[2 * v28];
      v29[4] = v24;
      v29[5] = v25;
      v21 += v51;
      --v17;
    }
    while (v17);
    uint64_t v7 = v54;
    uint64_t v16 = v48;
    uint64_t v10 = v49;
  }
  int64_t v30 = *(void *)(v16 + 16);
  uint64_t v31 = _swiftEmptyArrayStorage;
  if (v30)
  {
    NSString v57 = _swiftEmptyArrayStorage;
    sub_1001BA7D0(0, v30, 0);
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v32 = v10 + 16;
    uint64_t v34 = v16 + ((*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64));
    Swift::String v52 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 56);
    id v53 = v33;
    uint64_t v35 = (void (**)(char *, uint64_t))(v32 - 8);
    do
    {
      uint64_t v36 = v32;
      v53(v55, v34, v56);
      ModernShelf.header.getter();
      uint64_t v37 = type metadata accessor for Header();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v7, 1, v37) == 1)
      {
        sub_100054B1C((uint64_t)v7, &qword_1005F7768);
        uint64_t v39 = 0;
        uint64_t v40 = 0;
      }
      else
      {
        uint64_t v39 = Header.title.getter();
        unint64_t v41 = v7;
        uint64_t v40 = v42;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
      }
      (*v35)(v55, v56);
      uint64_t v31 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA7D0(0, v31[2] + 1, 1);
        uint64_t v31 = v57;
      }
      unint64_t v44 = v31[2];
      unint64_t v43 = v31[3];
      if (v44 >= v43 >> 1)
      {
        sub_1001BA7D0(v43 > 1, v44 + 1, 1);
        uint64_t v31 = v57;
      }
      long long v31[2] = v44 + 1;
      os_log_type_t v45 = &v31[2 * v44];
      v45[4] = v39;
      v45[5] = v40;
      v34 += (uint64_t)v52;
      --v30;
      uint64_t v7 = v54;
      uint64_t v32 = v36;
    }
    while (v30);
  }
  char v46 = sub_10019F6F8((uint64_t)v18, (uint64_t)v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v46 & 1;
}

uint64_t sub_1002E7BD8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    char v4 = sub_1002E6158();
    swift_retain();
    if (v4)
    {
      uint64_t v5 = swift_bridgeObjectRetain();
      sub_1002E9000(v5, v3, v3, a1);
      swift_release_n();
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_1002E96C0(a1, v3, v3);
      return swift_release_n();
    }
  }
  return result;
}

uint64_t sub_1002E7C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _swiftEmptyArrayStorage;
  unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1)
  {
    swift_unknownObjectRetain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v27 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a3 + 16);
  if (v11)
  {
    v26[0] = v6;
    uint64_t v12 = *(void *)(type metadata accessor for ModernShelf() - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v14 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain();
    do
    {
      if (sub_1002E83C4(v13, a2))
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)v27;
    uint64_t v6 = v26[0];
  }
  sub_1001B187C((unint64_t)v10);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  unint64_t v15 = v28;
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134217984;
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "CarPlayStoreProvider: Browse root section total items count is %ld.", v18, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10046D060;
  swift_beginAccess();
  unint64_t v21 = v28;
  id v22 = objc_allocWithZone((Class)CPListSection);
  sub_1001C04A0(v21);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v24 = [v22 initWithItems:isa];

  *(void *)(v20 + 32) = v24;
  v26[1] = v20;
  specialized Array._endMutation()();
  PassthroughSubject.send(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002E80C0(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134217984;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "CarPlayStoreProvider: Non-Browse root section total items count is %ld.", v8, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046D060;
  id v11 = objc_allocWithZone((Class)CPListSection);
  unint64_t v12 = swift_bridgeObjectRetain();
  sub_1001C04A0(v12);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v11 initWithItems:isa];

  *(void *)(v10 + 32) = v14;
  uint64_t v17 = v10;
  specialized Array._endMutation()();
  PassthroughSubject.send(_:)();
  return swift_bridgeObjectRelease();
}

void sub_1002E8384(void *a1)
{
  id v1 = a1;
  PassthroughSubject.send(_:)();
}

id sub_1002E83C4(uint64_t a1, uint64_t a2)
{
  v34[1] = a2;
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v5 - 8);
  os_log_type_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Header();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ModernShelf.itemPresentation.getter();
  ModernShelf.ItemPresentation.itemKind.getter();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v16 = ModernShelf.ItemKind.rawValue.getter();
  uint64_t v18 = v17;
  if (v16 == ModernShelf.ItemKind.rawValue.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      ModernShelf.header.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_100054B1C((uint64_t)v7, &qword_1005F7768);
      }
      else
      {
        id v24 = v11;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        uint64_t v25 = Header.title.getter();
        if (v26)
        {
          uint64_t v27 = v26;
          v34[0] = v25;
          unint64_t v28 = v4;
          Header.primaryAction.getter();
          uint64_t v29 = type metadata accessor for Header.PrimaryAction();
          uint64_t v30 = *(void *)(v29 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v4, 1, v29) == 1)
          {
            swift_bridgeObjectRelease();
            sub_100054B1C((uint64_t)v4, (uint64_t *)&unk_100600E60);
          }
          else
          {
            uint64_t v31 = Header.PrimaryAction.action.getter();
            (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
            if (v31)
            {
              type metadata accessor for FlowAction();
              if (swift_dynamicCastClass())
              {
                uint64_t v32 = sub_1002E62F4();
                id v22 = sub_1001BEDF8(v34[0], v27, 0, 0, 0, (uint64_t)v32, v33);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
                return v22;
              }
              swift_release();
            }
            swift_bridgeObjectRelease();
          }
        }
        (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
      }
    }
  }
  return 0;
}

uint64_t sub_1002E8814()
{
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_pageURL, (uint64_t *)&unk_1005F7750);
  swift_release();
  sub_10004D2D8(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeDataProvider);
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000536BC(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler));
  return v0;
}

uint64_t sub_1002E8908()
{
  sub_1002E8814();

  return swift_deallocClassInstance();
}

uint64_t sub_1002E8960()
{
  return type metadata accessor for CarPlayStoreProvider();
}

uint64_t type metadata accessor for CarPlayStoreProvider()
{
  uint64_t result = qword_100600D28;
  if (!qword_100600D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002E89B4()
{
  sub_10000927C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1002E8A88(uint64_t a1, uint64_t a2)
{
  return sub_10022A68C(a1, a2, (uint64_t)&OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeSectionsSubject, &qword_1005F8AF0, &qword_1005F8AF8);
}

uint64_t sub_1002E8AA4(uint64_t a1, uint64_t a2)
{
  return sub_10022A68C(a1, a2, (uint64_t)&OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_didSelectItemSubject, (uint64_t *)&unk_1005F8AE0, &qword_1005F8990);
}

void sub_1002E8AC0()
{
}

uint64_t sub_1002E8AF4()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t sub_1002E8B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeSectionsSubject;
  sub_100054B78(&qword_1005F8AF0);
  swift_allocObject();
  *(void *)(v4 + v11) = PassthroughSubject.init()();
  uint64_t v12 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_didSelectItemSubject;
  sub_100054B78((uint64_t *)&unk_1005F8AE0);
  swift_allocObject();
  *(void *)(v4 + v12) = PassthroughSubject.init()();
  uint64_t v13 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_unsupportedSectionIds;
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D030;
  *(void *)(inited + 32) = static String.pageHighlightShelfID.getter();
  *(void *)(inited + 40) = v15;
  *(void *)(inited + 48) = static String.loadingShelfID.getter();
  *(void *)(inited + 56) = v16;
  Swift::Int v17 = sub_1001729C8(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  *(void *)(v5 + v13) = v17;
  uint64_t v18 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_supportedItemModelTypes;
  sub_100054B78((uint64_t *)&unk_100600E20);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10046D050;
  uint64_t v20 = type metadata accessor for LegacyEpisodeLockup();
  uint64_t v21 = sub_1002E8F38(&qword_1005FBBE8, (void (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup);
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v21;
  uint64_t v22 = type metadata accessor for LegacyLockup();
  uint64_t v23 = sub_1002E8F38(&qword_100600E30, (void (*)(uint64_t))&type metadata accessor for LegacyLockup);
  *(void *)(v19 + 48) = v22;
  *(void *)(v19 + 56) = v23;
  uint64_t v24 = type metadata accessor for Showcase();
  uint64_t v25 = sub_1002E8F38((unint64_t *)&unk_100600E38, (void (*)(uint64_t))&type metadata accessor for Showcase);
  *(void *)(v19 + 64) = v24;
  *(void *)(v19 + 72) = v25;
  *(void *)(v5 + v18) = v19;
  uint64_t v26 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_updatePlayStateSubject;
  sub_100054B78((uint64_t *)&unk_1005F8B00);
  swift_allocObject();
  *(void *)(v5 + v26) = CurrentValueSubject.init(_:)();
  *(void *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_subscriptions) = _swiftEmptyArrayStorage;
  uint64_t v27 = (void *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler);
  *uint64_t v27 = 0;
  v27[1] = 0;
  sub_10003B19C(a2, v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_pageURL);
  uint64_t v28 = v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo;
  long long v29 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)a4;
  *(_OWORD *)(v28 + 16) = v29;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(a4 + 32);
  *(void *)(v28 + 48) = *(void *)(a4 + 48);
  sub_10003B19C(a2, (uint64_t)v10);
  type metadata accessor for StorePageProvider();
  swift_allocObject();
  swift_retain();
  swift_retain();
  *(void *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storePageProvider) = StorePageProvider.init(asPartOf:pageURL:page:)();
  sub_100054B78((uint64_t *)&unk_1005F8B10);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v32, v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeDataProvider);
  sub_100054B78(&qword_1005F7050);
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_playStateController) = *(void *)&v32[0];
  sub_100054B78((uint64_t *)&unk_1005F74C0);
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_downloadStateController) = *(void *)&v32[0];
  sub_100054B78((uint64_t *)&unk_1005FBBF0);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v32, v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider);
  swift_retain();
  StorePageProvider.viewDidLoad()();
  swift_release();
  sub_1002E6390();
  sub_100054B1C(a2, (uint64_t *)&unk_1005F7750);
  return v5;
}

uint64_t sub_1002E8F38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002E8F80()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002E8FB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1002E6984(a1, a2);
}

uint64_t sub_1002E8FC0(uint64_t a1)
{
  return sub_1002E7BD8(a1);
}

uint64_t sub_1002E8FC8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002E9000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v8 - 8);
  unint64_t v64 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v10 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for ModernShelf();
  uint64_t v13 = *(void *)(v68 - 8);
  uint64_t v14 = __chkstk_darwin(v68);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v63 = (char *)&v57 - v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  *(void *)(v18 + 24) = a4;
  uint64_t v19 = *(void *)(a1 + 16);
  if (!v19)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  uint64_t v60 = v18;
  uint64_t v57 = a2;
  uint64_t v58 = v13;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v20 = v13 + 16;
  uint64_t v22 = a3;
  uint64_t v23 = a1 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
  uint64_t v24 = a1;
  uint64_t v25 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v65 = *(void *)(v20 + 56);
  uint64_t v66 = v21;
  uint64_t v61 = v22;
  swift_retain();
  uint64_t v62 = a4;
  swift_bridgeObjectRetain();
  uint64_t v59 = v24;
  swift_bridgeObjectRetain();
  uint64_t v26 = v68;
  while (1)
  {
    v66(v16, v23, v26);
    ModernShelf.itemPresentation.getter();
    ModernShelf.ItemPresentation.itemKind.getter();
    (*v25)(v12, v67);
    uint64_t v27 = ModernShelf.ItemKind.rawValue.getter();
    uint64_t v29 = v28;
    if (v27 == ModernShelf.ItemKind.rawValue.getter() && v29 == v30) {
      break;
    }
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_10;
    }
    uint64_t v26 = v68;
    (*(void (**)(char *, uint64_t))(v20 - 8))(v16, v68);
    v23 += v65;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      a3 = v61;
      a4 = v62;
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v32 = v58 + 32;
  uint64_t v33 = v63;
  uint64_t v34 = v16;
  uint64_t v35 = v68;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v63, v34, v68);
  uint64_t v36 = ModernShelf.items.getter();
  (*(void (**)(char *, uint64_t))(v32 - 24))(v33, v35);
  unint64_t v37 = (unint64_t)sub_1003E5128(v36);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v39 = v60;
  a3 = v61;
  a4 = v62;
  uint64_t v40 = (uint64_t)v64;
  if (!v37) {
    goto LABEL_28;
  }
  *(void *)&v69[0] = _swiftEmptyArrayStorage;
  if (!(v37 >> 62))
  {
    uint64_t v41 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v41) {
      goto LABEL_13;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    os_log_type_t v45 = _swiftEmptyArrayStorage;
LABEL_25:
    *(void *)&v69[0] = v45;
    sub_100054B78(&qword_100600E48);
    sub_100044200((unint64_t *)&unk_100600E50, &qword_100600E48);
    if (Collection.isNotEmpty.getter())
    {
      uint64_t v46 = v57;
      uint64_t v47 = *(void *)(v57 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_didSelectItemSubject);
      uint64_t v48 = self;
      swift_retain();
      id v49 = [v48 mainBundle];
      v71._object = (void *)0xE000000000000000;
      v50._uint64_t countAndFlagsBits = 0x6465727574616546;
      v50._object = (void *)0xE800000000000000;
      v51._uint64_t countAndFlagsBits = 0;
      v51._object = (void *)0xE000000000000000;
      v71._uint64_t countAndFlagsBits = 0;
      Swift::String v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, (Swift::String_optional)0, (NSBundle)v49, v51, v71);

      long long v53 = *(_OWORD *)(v46 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 16);
      v69[0] = *(_OWORD *)(v46 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo);
      v69[1] = v53;
      v69[2] = *(_OWORD *)(v46 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 32);
      uint64_t v70 = *(void *)(v46 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 48);
      Swift::String v54 = (void *)(v46 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider);
      Swift::String v55 = sub_1002E62F4();
      sub_10039BE30((unsigned int (**)(char *, uint64_t, uint64_t))v52._countAndFlagsBits, (uint64_t)v52._object, (uint64_t)v69, v54, (uint64_t)v55, v56, (uint64_t)sub_1002E9C84, v47, (uint64_t)sub_1002E9C7C, v39, (unint64_t)v45);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_release();
LABEL_28:
    sub_1002E7C90(0, a3, a4);
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_24;
  }
LABEL_13:
  if (v41 >= 1)
  {
    for (uint64_t i = 0; i != v41; ++i)
    {
      if ((v37 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      Showcase.showArtwork.getter();
      uint64_t v43 = type metadata accessor for ArtworkModel();
      int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v40, 1, v43);
      sub_100054B1C(v40, &qword_1005F76A0);
      if (v44 == 1)
      {
        swift_release();
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    os_log_type_t v45 = *(void **)&v69[0];
    a3 = v61;
    a4 = v62;
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002E96C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModernShelf();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain_n();
  if ((sub_1002E6158() & 1) == 0)
  {
    uint64_t v42 = a3;
    uint64_t v10 = _swiftEmptyArrayStorage;
    *(void *)&long long v46 = _swiftEmptyArrayStorage;
    uint64_t v11 = *(void *)(a1 + 16);
    if (v11)
    {
      uint64_t v41 = a2;
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      uint64_t v12 = v7 + 16;
      uint64_t v13 = v14;
      uint64_t v15 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
      uint64_t v16 = *(void *)(v12 + 56);
      uint64_t v40 = a1;
      swift_bridgeObjectRetain();
      do
      {
        v13(v9, v15, v6);
        uint64_t v17 = ModernShelf.items.getter();
        (*(void (**)(char *, uint64_t))(v12 - 8))(v9, v6);
        sub_1001B1E64(v17);
        v15 += v16;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      uint64_t v18 = (void *)v46;
      a2 = v41;
      uint64_t v19 = v42;
      uint64_t v10 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v18 = _swiftEmptyArrayStorage;
      uint64_t v19 = v42;
    }
    *(void *)&long long v46 = v18;
    sub_100054B78(&qword_100600E70);
    sub_100044200(&qword_100600E78, &qword_100600E70);
    if (Collection.isNotEmpty.getter())
    {
      unint64_t v45 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v20 = v18[2];
      if (v20)
      {
        uint64_t v21 = (uint64_t)(v18 + 4);
        swift_bridgeObjectRetain();
        uint64_t v22 = v20;
        do
        {
          sub_100056D54(v21, (uint64_t)&v46);
          sub_100056D54((uint64_t)&v46, (uint64_t)v43);
          sub_100054B78(&qword_1005F8430);
          type metadata accessor for LegacyEpisodeLockup();
          if ((swift_dynamicCast() & 1) == 0) {
            uint64_t v44 = 0;
          }
          sub_10004D2D8((uint64_t)&v46);
          if (v44)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          v21 += 40;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        uint64_t v23 = (void *)v45;
        uint64_t v19 = v42;
      }
      else
      {
        uint64_t v23 = _swiftEmptyArrayStorage;
      }
      *(void *)&long long v46 = v23;
      sub_100054B78((uint64_t *)&unk_1005FBC30);
      sub_100044200((unint64_t *)&unk_1005F7E40, (uint64_t *)&unk_1005FBC30);
      if (Collection.isNotEmpty.getter())
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeDataProvider;
        uint64_t v25 = *(void *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_playStateController);
        uint64_t v26 = *(void *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_downloadStateController);
        uint64_t v27 = (void *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider);
        long long v28 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 16);
        long long v46 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo);
        long long v47 = v28;
        long long v48 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 32);
        uint64_t v49 = *(void *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 48);
        uint64_t v29 = sub_1002E62F4();
        uint64_t v31 = v30;
        swift_retain();
        sub_1003872F0(v24, v25, v26, v27, (uint64_t)&v46, (uint64_t)v29, v31, (uint64_t)v23, v19);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v45 = (unint64_t)_swiftEmptyArrayStorage;
        if (v20)
        {
          uint64_t v32 = (uint64_t)(v18 + 4);
          swift_bridgeObjectRetain();
          do
          {
            sub_100056D54(v32, (uint64_t)&v46);
            sub_100056D54((uint64_t)&v46, (uint64_t)v43);
            sub_100054B78(&qword_1005F8430);
            type metadata accessor for LegacyLockup();
            if ((swift_dynamicCast() & 1) == 0) {
              uint64_t v44 = 0;
            }
            sub_10004D2D8((uint64_t)&v46);
            if (v44)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v32 += 40;
            --v20;
          }
          while (v20);
          swift_bridgeObjectRelease();
          uint64_t v10 = (void *)v45;
        }
        swift_bridgeObjectRelease();
        uint64_t v33 = (void *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeDataProvider);
        uint64_t v34 = (void *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider);
        long long v35 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 16);
        long long v46 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo);
        long long v47 = v35;
        long long v48 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 32);
        uint64_t v49 = *(void *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 48);
        uint64_t v36 = sub_1002E62F4();
        uint64_t v38 = v37;
        swift_retain();
        sub_1003889BC(v33, v34, (uint64_t)&v46, (uint64_t)v36, v38, (unint64_t)v10, v19);
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1002E80C0((unint64_t)_swiftEmptyArrayStorage);
    }
  }
  return swift_release_n();
}

uint64_t sub_1002E9C3C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002E9C7C(uint64_t a1)
{
  return sub_1002E7C90(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1002E9C84(void *a1)
{
}

uint64_t sub_1002E9C8C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = sub_1002E62F4();
  ((void (*)(uint64_t))v4)(a1);
  uint64_t v5 = swift_release();
  return a2(v5);
}

uint64_t sub_1002E9CE8()
{
  sub_1002E9E24();
  id v1 = [self sharedInstance];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = v2;
  v3[3] = sub_1002875F8;
  v3[4] = 0;
  aBlock[4] = sub_10020C75C;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10026924C;
  uint64_t aBlock[3] = &unk_10055F7C0;
  uint64_t v4 = _Block_copy(aBlock);
  swift_retain_n();
  swift_release();
  [v1 reportAConcernURLWithCompletion:v4];
  _Block_release(v4);

  return swift_release();
}

uint64_t sub_1002E9E24()
{
  uint64_t v1 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsFieldInclusionRequest();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MetricsData();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v14 - 8);
  uint64_t result = swift_beginAccess();
  if (*(void *)(v0 + 48))
  {
    if (!*(unsigned char *)(v0 + 40))
    {
      uint64_t v16 = *(void *)(v0 + 24);
      sub_100054B78((uint64_t *)&unk_1006027F0);
      uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
      uint64_t v25 = v4;
      uint64_t v18 = (v17 + 32) & ~v17;
      uint64_t v19 = swift_allocObject();
      uint64_t v26 = v19;
      *(_OWORD *)(v19 + 16) = xmmword_10046D010;
      uint64_t v24 = v19 + v18;
      v29[0] = v16;
      sub_1001A5874();
      swift_retain();
      v21[4] = BinaryInteger.description.getter();
      v21[3] = static MetricsTargetType.button.getter();
      v21[2] = static MetricsActionType.report.getter();
      uint64_t v23 = v3;
      v21[1] = static MetricsActionContext.contextual.getter();
      uint64_t v22 = v11;
      uint64_t v20 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
      static MetricsDataConfiguration.default.getter();
      static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
      sub_1002DFF70((uint64_t)v29, (uint64_t)v32);
      sub_100053884((uint64_t)v32);
      uint64_t v31 = v29[2];
      sub_1000537F4((uint64_t)&v31);
      uint64_t v30 = v29[3];
      sub_1000537F4((uint64_t)&v30);
      sub_1000536BC(v29[4]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
      static MetricsFieldInclusionRequest.impressionsSnapshot.getter();
      MetricsData.removingIncludedField(_:)();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v25);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v10);
      ScalarDictionary.init()();
      ActionMetrics.init(data:custom:)();
      void v28[3] = type metadata accessor for EmptyAction();
      v28[4] = (uint64_t)&protocol witness table for EmptyAction;
      sub_10004A244(v28);
      EmptyAction.init(actionMetrics:)();
      ContextActionsConfiguration.perform(_:)();
      swift_release();
      swift_release();
      return sub_10004D2D8((uint64_t)v28);
    }
  }
  return result;
}

void sub_1002EA2D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 16) = 0;
  char v5 = *(unsigned char *)(v0 + 40);
  *(unsigned char *)(v0 + 40) = -1;
  sub_1002EAA84(v2, v3, v4, v5);
  swift_beginAccess();
  if (*(void *)(v0 + 48))
  {
    type metadata accessor for CategoryContextActionConfiguration(0);
    if (swift_dynamicCastClass())
    {
      uint64_t v6 = static ContentReference.category(adamID:)();
      uint64_t v7 = *(void *)(v0 + 16);
      uint64_t v8 = *(void **)(v0 + 24);
      uint64_t v9 = *(void *)(v0 + 32);
      *(void *)(v0 + 16) = v6;
      *(void *)(v0 + 24) = v10;
      *(void *)(v0 + 32) = v11;
      LOBYTE(v6) = *(unsigned char *)(v0 + 40);
      *(unsigned char *)(v0 + 40) = v12;
      sub_1002EAA84(v7, v8, v9, v6);
      return;
    }
    type metadata accessor for ChannelContextActionConfiguration(0);
    if (swift_dynamicCastClass())
    {
      swift_bridgeObjectRetain();
      swift_retain();
      AdamID.init(_:)();
      if ((v13 & 1) == 0)
      {
        unsigned __int8 v14 = static ContentReference.channel(adamID:)();
LABEL_13:
        unsigned __int8 v21 = v14;
        uint64_t v22 = v15;
        uint64_t v23 = v16;
        char v24 = v17;
        swift_release();
        uint64_t v25 = *(void *)(v1 + 16);
        uint64_t v26 = *(void **)(v1 + 24);
        uint64_t v27 = *(void *)(v1 + 32);
        *(void *)(v1 + 16) = v21;
        *(void *)(v1 + 24) = v22;
        *(void *)(v1 + 32) = v23;
        char v28 = *(unsigned char *)(v1 + 40);
        *(unsigned char *)(v1 + 40) = v24;
        sub_1002EAA84(v25, v26, v27, v28);
        return;
      }
    }
    else
    {
      type metadata accessor for EpisodeContextActionConfiguration(0);
      if (swift_dynamicCastClass())
      {
        swift_retain();
        swift_retain();
        sub_100402DA8();
        char v19 = v18;
        swift_release();
        if ((v19 & 1) == 0)
        {
          unsigned __int8 v14 = static ContentReference.episode(adamID:)();
          goto LABEL_13;
        }
      }
      else
      {
        type metadata accessor for PodcastContextActionConfiguration(0);
        if (!swift_dynamicCastClass()) {
          return;
        }
        swift_retain();
        swift_retain();
        sub_100241804();
        swift_release();
        AdamID.init(_:)();
        if ((v20 & 1) == 0)
        {
          unsigned __int8 v14 = static ContentReference.show(adamID:)();
          goto LABEL_13;
        }
      }
    }
    swift_release();
  }
}

uint64_t sub_1002EA4F0()
{
  sub_1002EAA84(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_contextActionType, &qword_1005F9A58);

  return swift_deallocClassInstance();
}

uint64_t sub_1002EA5C8()
{
  return type metadata accessor for ReportConcernContextAction();
}

uint64_t type metadata accessor for ReportConcernContextAction()
{
  uint64_t result = qword_100600EA8;
  if (!qword_100600EA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002EA61C()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1002EA710()
{
  id v0 = [self mainBundle];
  v5._uint64_t countAndFlagsBits = 0xD000000000000025;
  v5._object = (void *)0x80000001004D6850;
  v1._object = (void *)0x80000001004D6830;
  v1._uint64_t countAndFlagsBits = 0xD000000000000010;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002EA7C4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1002EA7F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1002EA868@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_contextActionType, a1);
}

void sub_1002EA884(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  swift_retain();
  swift_release();
  sub_1002EA2D4();
}

uint64_t sub_1002EA8E4()
{
  return swift_retain();
}

uint64_t sub_1002EA91C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*sub_1002EA964())()
{
  return j__swift_endAccess;
}

unint64_t sub_1002EA9C4(uint64_t a1)
{
  unint64_t result = sub_1002EA9EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1002EA9EC()
{
  unint64_t result = qword_100608C20;
  if (!qword_100608C20)
  {
    type metadata accessor for ReportConcernContextAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100608C20);
  }
  return result;
}

uint64_t sub_1002EAA44()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1002EAA84(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    sub_1001EE720(a2, a3, a4);
  }
}

uint64_t sub_1002EAAA4()
{
  uint64_t result = type metadata accessor for OperationResult();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_1002EAB94()
{
}

void sub_1002EAC14()
{
  uint64_t v1 = swift_isaMask & *(void *)v0;
  unint64_t v2 = &v0[*(void *)(v1 + 0x198)];
  uint64_t v3 = type metadata accessor for OperationResult();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(char *))(*(void *)(*(void *)(v1 + 384) - 8) + 8))(&v0[*(void *)((swift_isaMask & *(void *)v0)
                                                                                                  + 0x1A0)]);
  swift_release();
  uint64_t v4 = *(void **)&v0[*(void *)((swift_isaMask & *(void *)v0) + 0x1B0)];
}

id sub_1002EAD64()
{
  long long v2 = *(_OWORD *)((swift_isaMask & *v0) + 0x170);
  long long v3 = *(_OWORD *)((swift_isaMask & *v0) + 0x180);
  uint64_t v4 = *(void *)((swift_isaMask & *v0) + 0x190);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for StorageOperation();
  return [super dealloc:v2, v3, v4];
}

uint64_t sub_1002EADFC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002EAE34()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1002EAE74()
{
}

uint64_t sub_1002EAEA4()
{
  char v1 = *(unsigned char *)(v0 + 32);
  long long v2 = (objc_class *)[self mainBundle];
  if (v1)
  {
    unint64_t v3 = 0xD00000000000001CLL;
    unint64_t v11 = 0x80000001004DC390;
    unint64_t v4 = 0x80000001004DC370;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    unint64_t v8 = 0xD00000000000001CLL;
  }
  else
  {
    unint64_t v11 = 0x80000001004DC3D0;
    unint64_t v4 = 0x80000001004DC3B0;
    unint64_t v3 = 0xD000000000000011;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    unint64_t v8 = 0xD000000000000011;
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002EAFA8()
{
  uint64_t v1 = type metadata accessor for QueueModelSection();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(v0 + 16);
  if (!v5 || *(unsigned char *)(v5 + 32) != 3) {
    goto LABEL_15;
  }
  unint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = *(void *)(v5 + 24);
  if (!(v6 >> 62))
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result)
  {
LABEL_14:
    sub_1001DCDF8(v6, v7, 3u);
LABEL_15:
    char v14 = 0;
    return v14 & 1;
  }
LABEL_6:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v6 + 32);
LABEL_9:
    unint64_t v11 = v10;
    sub_1001DCDF8(v6, v7, 3u);
    char v12 = *(unsigned char *)(v0 + 32);
    swift_retain();
    dispatch thunk of PlaybackController.queueController.getter();
    swift_release();
    char v13 = *(void (**)(char *, void, uint64_t))(v2 + 104);
    if (v12)
    {
      v13(v4, enum case for QueueModelSection.softQueue(_:), v1);
      char v14 = dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)();
      swift_release();
    }
    else
    {
      v13(v4, enum case for QueueModelSection.hardQueue(_:), v1);
      char v14 = dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)();

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v14 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002EB1D4()
{
  uint64_t result = static Podcasts.isBlueMoonEnabled()();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v2 = *(void *)(v0 + 16);
  if (!v2 || *(unsigned char *)(v2 + 32) != 3) {
    return result;
  }
  unint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_6;
    }
LABEL_14:
    return sub_1001DCDF8(v3, v4, 3u);
  }
  uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v6 = *(id *)(v3 + 32);
  }
  uint64_t v7 = v6;
  sub_1001DCDF8(v3, v4, 3u);
  swift_retain();
  dispatch thunk of PlaybackController.queueController.getter();
  swift_release();
  id v8 = [v7 contentItemIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(identifier:)();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002EB358()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoveFromQueueContextAction()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for RemoveFromQueueType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002EB498);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoveFromQueueType()
{
  return &type metadata for RemoveFromQueueType;
}

unint64_t sub_1002EB4D4()
{
  unint64_t result = qword_100601178;
  if (!qword_100601178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601178);
  }
  return result;
}

uint64_t sub_1002EB52C()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_1002EB534()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1002EB564@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  unsigned int v6 = (unsigned int *)&enum case for MetricsLabel.removeFromSoftQueue(_:);
  if (!v3) {
    unsigned int v6 = (unsigned int *)&enum case for MetricsLabel.removeFromHardQueue(_:);
  }
  uint64_t v7 = *v6;

  return v5(a1, v7, v4);
}

uint64_t sub_1002EB5E8@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v5 = (unsigned int *)&enum case for ContextActionType.removeFromSoftQueue(_:);
  if (!v3) {
    uint64_t v5 = (unsigned int *)&enum case for ContextActionType.removeFromHardQueue(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(a1, *v5, v4);
  unsigned int v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);

  return v6(a1, 0, 1, v4);
}

uint64_t sub_1002EB6D8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

void *sub_1002EB738(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1002EB798(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1002EB7F8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1002EB858(uint64_t a1)
{
  uint64_t result = sub_1002EB8E0(&qword_100601180);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002EB89C(uint64_t a1)
{
  uint64_t result = sub_1002EB8E0(&qword_100601188);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002EB8E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RemoveFromQueueContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1002EB920()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78(&qword_1005FBC48);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PodcastStateModel();
  v26[0] = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for InteractionContext();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (!*(void *)(v0 + 104)
    || (swift_retain(),
        dispatch thunk of ContextActionsConfiguration.context.getter(),
        swift_release(),
        InteractionContext.page.getter(),
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14),
        char v18 = InteractionContext.Page.isRecentlyUnfollowedPage.getter(),
        sub_1002E60C4((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page),
        (v18 & 1) == 0))
  {
    uint64_t v19 = *(void *)(v1 + 96);
    if (v19)
    {
      uint64_t v20 = v19 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
      swift_beginAccess();
      sub_1001AC690(v20, (uint64_t)v10);
      unsigned __int8 v21 = (void *)sub_100241558();
      sub_1002E60C4((uint64_t)v10, type metadata accessor for PodcastContextActionDataType);
      if (v21)
      {
        id v22 = v21;
        PodcastStateModel.init(podcast:)();
        uint64_t v23 = v26[0];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26[0] + 48))(v4, 1, v5) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v7, v4, v5);
          char v25 = PodcastStateModel.sanitizedState()();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);

          return v25 == 1;
        }

        sub_100054B1C((uint64_t)v4, &qword_1005FBC48);
      }
    }
  }
  return 0;
}

uint64_t sub_1002EBCF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PresentationSource();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = v1[12];
  if (!v17) {
    return result;
  }
  uint64_t v39 = v3;
  uint64_t v18 = v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  sub_1001AC690(v18, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_1002E60C4((uint64_t)v16, type metadata accessor for PodcastContextActionDataType);
  }
  uint64_t v20 = *v16;
  unint64_t v19 = v16[1];
  swift_beginAccess();
  if (!v1[13])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_9;
  }
  swift_retain();
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_100605DC0);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  static Logger.podcastsStatesCoordination.getter();
  swift_bridgeObjectRetain_n();
  unsigned __int8 v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    int v35 = v23;
    uint64_t v25 = v24;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v41 = v36;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v38 = v20;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10004B974(v38, v19, &v41);
    uint64_t v34[2] = (os_log_t)&v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v37 = (uint8_t *)v25;
    *(_WORD *)(v25 + 12) = 2080;
    v34[1] = (os_log_t)(v25 + 14);
    id v26 = [self callStackSymbols];
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    v34[0] = v21;

    uint64_t v27 = Array.description.getter();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_10004B974(v27, v29, &v41);
    uint64_t v31 = v37;
    uint64_t v40 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v32 = v34[0];
    _os_log_impl((void *)&_mh_execute_header, v34[0], (os_log_type_t)v35, "RemovePodcastContextAction.handler() - removing podcast %s %s", v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v2);
  sub_100041A98(v1 + 2, v1[5]);
  uint64_t v33 = (void *)dispatch thunk of LibraryRemovalControllerProtocol.removeShowFromLibraryAlertController(uuid:)();
  swift_bridgeObjectRelease();
  if (v33)
  {
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1002EC254()
{
  sub_10004D2D8(v0 + 16);
  sub_10004D2D8(v0 + 56);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_contextActionType, &qword_1005F9A58);

  return swift_deallocClassInstance();
}

uint64_t sub_1002EC334()
{
  return type metadata accessor for RemovePodcastContextAction();
}

uint64_t type metadata accessor for RemovePodcastContextAction()
{
  uint64_t result = qword_1006011B8;
  if (!qword_1006011B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002EC388()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1002EC480()
{
  return swift_retain();
}

uint64_t sub_1002EC488(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return swift_release();
}

uint64_t sub_1002EC498()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0xA9000000000000A6;
  v1._uint64_t countAndFlagsBits = 0x455F45564F4D4552;
  v1._object = (void *)0xEF53495350494C4CLL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x80E265766F6D6552;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002EC550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1002EC5C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_contextActionType, a1);
}

uint64_t sub_1002EC5E0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

uint64_t sub_1002EC640()
{
  return swift_retain();
}

uint64_t sub_1002EC678(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 104) = a1;
  return swift_release();
}

uint64_t (*sub_1002EC6C0())()
{
  return j__swift_endAccess;
}

void *sub_1002EC714(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1002EC774(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1002EC7D4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1002EC834(uint64_t a1)
{
  uint64_t result = sub_1002EC8BC((unint64_t *)&unk_100608C50);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002EC878(uint64_t a1)
{
  uint64_t result = sub_1002EC8BC(&qword_1006012C0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002EC8BC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RemovePodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002EC900()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts30AddToQueueEpisodeContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1002EC9B8()
{
  return type metadata accessor for AddToQueueEpisodeContextAction();
}

uint64_t type metadata accessor for AddToQueueEpisodeContextAction()
{
  uint64_t result = qword_1006012F0;
  if (!qword_1006012F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002ECA0C()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002ECAB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts30AddToQueueEpisodeContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1002ECB2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.addEpisodeToQueue(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

void sub_1002ECC04(uint64_t a1@<X8>)
{
  id v2 = [self systemOrangeColor];
  id v3 = [self mainBundle];
  v7._object = (void *)0xE000000000000000;
  v4._uint64_t countAndFlagsBits = 0x51206F7420646441;
  v4._object = (void *)0xEC00000065756575;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v7);

  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0xD000000000000028;
  *(void *)(a1 + 16) = 0x80000001004D8170;
  *(Swift::String *)(a1 + 24) = v6;
}

uint64_t sub_1002ECCF4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

void *sub_1002ECD54(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1002ECDB4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1002ECE14(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1002ECE74(uint64_t a1)
{
  uint64_t result = sub_1002ECF40(&qword_100608B70);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002ECEB8(uint64_t a1)
{
  uint64_t result = sub_1002ECF40(&qword_1006013F0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002ECEFC(uint64_t a1)
{
  uint64_t result = sub_1002ECF40(&qword_1006013F8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002ECF40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AddToQueueEpisodeContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002ECF84(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1936484398;
  }
  else {
    uint64_t v3 = 0x7261646E6174732ELL;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000064;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1936484398;
  }
  else {
    uint64_t v5 = 0x7261646E6174732ELL;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1002ED028(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000018;
  unint64_t v3 = 0x80000001004D1E60;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x656C62616E457369;
    }
    else {
      unint64_t v5 = 1701667182;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000064;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000018;
  unint64_t v6 = 0x80000001004D1E60;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0x656C62616E457369;
    }
    else {
      unint64_t v2 = 1701667182;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xE900000000000064;
    }
    else {
      unint64_t v3 = 0xE400000000000000;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1002ED130(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x6B63616279616C70;
    }
    else {
      uint64_t v2 = 0x6465636E61766461;
    }
    unint64_t v3 = 0xE800000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x6B63616279616C70;
      }
      else {
        uint64_t v5 = 0x6465636E61766461;
      }
      unint64_t v6 = 0xE800000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6C6172656E6567;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6C6172656E6567)
  {
LABEL_15:
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1002ED24C(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x6F65646976;
  }
  else {
    uint64_t v2 = 0x6F69647561;
  }
  if (a2) {
    uint64_t v3 = 0x6F65646976;
  }
  else {
    uint64_t v3 = 0x6F69647561;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1002ED2C4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6465776F6C6C6F66;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6465776F6C6C6F66;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x7972617262696CLL;
      break;
    case 2:
      unint64_t v3 = 0x80000001004D1DC0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x65726F7473;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x7972617262696CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000001004D1DC0;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x65726F7473) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1002ED454(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000011;
  }
  else {
    unint64_t v3 = 0xD000000000000012;
  }
  if (v2) {
    unint64_t v4 = 0x80000001004D1DE0;
  }
  else {
    unint64_t v4 = 0x80000001004D1E00;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000011;
  }
  else {
    unint64_t v5 = 0xD000000000000012;
  }
  if (a2) {
    unint64_t v6 = 0x80000001004D1E00;
  }
  else {
    unint64_t v6 = 0x80000001004D1DE0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1002ED4FC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 0xD000000000000011;
  }
  if (v2) {
    unint64_t v4 = 0x80000001004D1E20;
  }
  else {
    unint64_t v4 = 0x80000001004D1E40;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 0xD000000000000011;
  }
  if (a2) {
    unint64_t v6 = 0x80000001004D1E40;
  }
  else {
    unint64_t v6 = 0x80000001004D1E20;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1002ED5A8(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000033;
  unint64_t v4 = 0x80000001004D1B10;
  switch(a1)
  {
    case 1:
      unint64_t v5 = "com.apple.podcasts.downloads.episodes.restore";
      goto LABEL_4;
    case 2:
      unint64_t v5 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_4:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD00000000000002DLL;
      break;
    case 3:
      unint64_t v3 = 0xD00000000000002FLL;
      unint64_t v4 = 0x80000001004D1BB0;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD000000000000033;
  unint64_t v7 = 0x80000001004D1B10;
  switch(a2)
  {
    case 1:
      char v8 = "com.apple.podcasts.downloads.episodes.restore";
      goto LABEL_9;
    case 2:
      char v8 = "com.apple.podcasts.downloads.episodes.headers";
LABEL_9:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v6 = 0xD00000000000002DLL;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0x80000001004D1BB0;
      if (v3 == 0xD00000000000002FLL) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v3 != v6) {
        goto LABEL_15;
      }
LABEL_13:
      if (v4 == v7) {
        char v9 = 1;
      }
      else {
LABEL_15:
      }
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1002ED720()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts22PreferencesWindowState__toolbarItemType;
  uint64_t v2 = sub_100054B78(&qword_100601508);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1002ED7C4()
{
  return type metadata accessor for PreferencesWindowState();
}

uint64_t type metadata accessor for PreferencesWindowState()
{
  uint64_t result = qword_100601430;
  if (!qword_100601430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002ED818()
{
  sub_1002ED8A8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1002ED8A8()
{
  if (!qword_100601440)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100601440);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PreferencesWindowState.ToolbarItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002ED9CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferencesWindowState.ToolbarItemType()
{
  return &type metadata for PreferencesWindowState.ToolbarItemType;
}

unint64_t sub_1002EDA08()
{
  unint64_t result = qword_1006014F0;
  if (!qword_1006014F0)
  {
    sub_100044244(&qword_1006014F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006014F0);
  }
  return result;
}

uint64_t sub_1002EDA64@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PreferencesWindowState();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002EDAA4(char *a1, unsigned __int8 *a2)
{
  return sub_1002ED130(*a1, *a2);
}

Swift::Int sub_1002EDAB0()
{
  return Hasher._finalize()();
}

uint64_t sub_1002EDB54()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002EDBE4()
{
  return Hasher._finalize()();
}

unint64_t sub_1002EDC84@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002EDD88(*a1);
  *a2 = result;
  return result;
}

void sub_1002EDCB4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x6B63616279616C70;
  if (v2 != 1) {
    uint64_t v4 = 0x6465636E61766461;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6C6172656E6567;
  }
  if (!v5) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

void sub_1002EDD14(void *a1@<X8>)
{
  *a1 = &off_100554578;
}

unint64_t sub_1002EDD28()
{
  unint64_t result = qword_100601500;
  if (!qword_100601500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601500);
  }
  return result;
}

void *sub_1002EDD7C()
{
  return &protocol witness table for ObservableObjectPublisher;
}

unint64_t sub_1002EDD88(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100554510, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

void *MTPodcast.lockupString(with:)(uint64_t a1)
{
  Swift::String v2 = v1;
  uint64_t v4 = type metadata accessor for ShowLockupStyle.LockupStyleOptions();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v32 - v19;
  __chkstk_darwin(v18);
  os_log_type_t v22 = (char *)&v32 - v21;
  if ([v2 subscribed])
  {
    id v23 = [v2 showTypeInFeedResolvedValue];
    id v24 = [v2 newEpisodesCount];
    if (v23 == (id)2)
    {
      if (v24 || [v2 newTrailersCount])
      {
        char v25 = ShowLockupStyle.LockupStyleOptions.followedSerialShowStyle.getter();
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v20, a1, v4);
        if (v25 == 16) {
          char v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter();
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
      }
      else
      {
        char v25 = ShowLockupStyle.LockupStyleOptions.followedSerialShowFallbackStyle.getter();
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v22, a1, v4);
        if (v25 == 16) {
          char v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter();
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
      }
LABEL_13:
      char v26 = v25;
      return MTPodcast.lockupString(with:)(v26);
    }
    if (!v24 && ![v2 newTrailersCount])
    {
      char v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowFallbackStyle.getter();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v17, a1, v4);
      if (v25 == 16) {
        char v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
      goto LABEL_13;
    }
    char v26 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter();
  }
  else
  {
    if ([v2 newEpisodesCount] || objc_msgSend(v2, "newTrailersCount"))
    {
      char v25 = ShowLockupStyle.LockupStyleOptions.unfollowedShowStyle.getter();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
      if (v25 == 16) {
        char v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      goto LABEL_13;
    }
    char v28 = ShowLockupStyle.LockupStyleOptions.unfollowedShowFallbackStyle.getter();
    unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v29(v14, a1, v4);
    if (v28 == 16)
    {
      char v30 = ShowLockupStyle.LockupStyleOptions.unfollowedShowStyle.getter();
      v29(v11, (uint64_t)v14, v4);
      if (v30 == 16) {
        char v30 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter();
      }
      uint64_t v31 = *(void (**)(char *, uint64_t))(v5 + 8);
      v31(v11, v4);
      v31(v14, v4);
      char v26 = v30;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
      char v26 = v28;
    }
  }
  return MTPodcast.lockupString(with:)(v26);
}

void *MTPodcast.lockupString(with:)(char a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v102 - v8;
  uint64_t v10 = _swiftEmptyArrayStorage;
  switch(a1)
  {
    case 1:
      [v1 latestEpisodeAvailabilityTime];
      if (v23 <= 0.0) {
        return _swiftEmptyArrayStorage;
      }
      [v1 latestEpisodeAvailabilityTime];
      Date.init()();
      Date.init()();
      uint64_t v24 = static AbbreviatedTimeIntervalFormatter.string(from:relativeTo:currentYearReferenceDate:)();
      uint64_t v26 = v25;
      uint64_t v27 = *(void (**)(char *, uint64_t))(v4 + 8);
      v27(v7, v3);
      v27(v9, v3);
      if ((uint64_t)[v1 newEpisodesCount] < 1) {
        goto LABEL_35;
      }
      unint64_t v28 = 0xD000000000000029;
      unint64_t v29 = "NEW_EPISODES_AND_LAST_UPDATED_DATE_FORMAT";
      goto LABEL_12;
    case 2:
      [v1 latestEpisodeAvailabilityTime];
      if (v30 <= 0.0) {
        return _swiftEmptyArrayStorage;
      }
      [v1 latestEpisodeAvailabilityTime];
      Date.init()();
      Date.init()();
      uint64_t v24 = static AbbreviatedTimeIntervalFormatter.string(from:relativeTo:currentYearReferenceDate:)();
      uint64_t v26 = v31;
      uint64_t v32 = *(void (**)(char *, uint64_t))(v4 + 8);
      v32(v7, v3);
      v32(v9, v3);
      if ((uint64_t)[v1 newEpisodesCount] >= 1)
      {
        unint64_t v28 = 0xD00000000000002ALL;
        unint64_t v29 = "MORE_EPISODES_AND_LAST_UPDATED_DATE_FORMAT";
LABEL_12:
        unint64_t v33 = (unint64_t)(v29 - 32) | 0x8000000000000000;
        v34._uint64_t countAndFlagsBits = 0;
        v34._object = (void *)0xE000000000000000;
        PFLocalizedString(_:comment:)(*(Swift::String *)&v28, v34);
        sub_100054B78(&qword_1005F7720);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_10046D010;
        id v36 = [v1 newEpisodesCount];
        goto LABEL_37;
      }
LABEL_35:
      if ((uint64_t)[v1 newTrailersCount] > 0)
      {
        v88._uint64_t countAndFlagsBits = 0xD000000000000029;
        v88._object = (void *)0x80000001004DC4E0;
        v89._uint64_t countAndFlagsBits = 0;
        v89._object = (void *)0xE000000000000000;
        PFLocalizedString(_:comment:)(v88, v89);
        sub_100054B78(&qword_1005F7720);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_10046D010;
        id v36 = [v1 newTrailersCount];
LABEL_37:
        *(void *)(v35 + 56) = &type metadata for Int64;
        *(void *)(v35 + 64) = &protocol witness table for Int64;
        *(void *)(v35 + 32) = v36;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100054B78((uint64_t *)&unk_1005F83F0);
        uint64_t v10 = (void *)swift_allocObject();
        long long v102 = xmmword_10046D010;
        *((_OWORD *)v10 + 1) = xmmword_10046D010;
        sub_100054B78(&qword_1005F7720);
        uint64_t v90 = swift_allocObject();
        *(_OWORD *)(v90 + 16) = v102;
        *(void *)(v90 + 56) = &type metadata for String;
        *(void *)(v90 + 64) = sub_10004DA4C();
        *(void *)(v90 + 32) = v24;
        *(void *)(v90 + 40) = v26;
        uint64_t v91 = String.init(format:_:)();
        uint64_t v93 = v92;
        swift_bridgeObjectRelease();
        v10[4] = v91;
        v10[5] = v93;
        return v10;
      }
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    case 3:
    case 4:
      [v1 latestEpisodeAvailabilityTime];
      if (v11 <= 0.0) {
        return _swiftEmptyArrayStorage;
      }
      [v1 latestEpisodeAvailabilityTime];
      Date.init()();
      Date.init()();
      uint64_t v12 = static AbbreviatedTimeIntervalFormatter.string(from:relativeTo:currentYearReferenceDate:)();
      uint64_t v14 = v13;
      uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
      v15(v7, v3);
      v15(v9, v3);
      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      long long v102 = xmmword_10046D010;
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      uint64_t v16 = 0xD000000000000016;
      unint64_t v17 = 0x80000001004DC570;
      goto LABEL_30;
    case 5:
      [v1 addedDate];
      if (v37 <= 0.0) {
        return _swiftEmptyArrayStorage;
      }
      [v1 addedDate];
      id v39 = [objc_allocWithZone((Class)NSDate) initWithTimeIntervalSinceReferenceDate:v38];
      id v40 = [v39 microUnabbreviatedFriendlyDisplayString];

      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v43 = v42;

      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      v10[4] = v41;
      v10[5] = v43;
      return v10;
    case 6:
      [v1 addedDate];
      if (v44 <= 0.0) {
        return _swiftEmptyArrayStorage;
      }
      [v1 addedDate];
      id v46 = [objc_allocWithZone((Class)NSDate) initWithTimeIntervalSinceReferenceDate:v45];
      id v47 = [v46 microUnabbreviatedFriendlyDisplayString];

      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v48;

      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      long long v102 = xmmword_10046D010;
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      uint64_t v49 = 0x776F6C6C6F46;
      goto LABEL_19;
    case 7:
      [v1 latestEpisodeAvailabilityTime];
      if (v50 <= 0.0) {
        return _swiftEmptyArrayStorage;
      }
      [v1 latestEpisodeAvailabilityTime];
      id v52 = [objc_allocWithZone((Class)NSDate) initWithTimeIntervalSinceReferenceDate:v51];
      id v53 = [v52 microUnabbreviatedFriendlyDisplayString];

      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v54;

      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      long long v102 = xmmword_10046D010;
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      uint64_t v49 = 0x696669646F4DLL;
LABEL_19:
      uint64_t v16 = v49 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
      unint64_t v17 = 0xEB00000000402520;
      goto LABEL_30;
    case 8:
      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      long long v102 = xmmword_10046D010;
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      v55._object = (void *)0x80000001004DC4C0;
      v55._uint64_t countAndFlagsBits = 0xD000000000000015;
      v56._uint64_t countAndFlagsBits = 0;
      v56._object = (void *)0xE000000000000000;
      PFLocalizedString(_:comment:)(v55, v56);
      sub_100054B78(&qword_1005F7720);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = v102;
      id v58 = [v1 downloadedEpisodesCount];
      goto LABEL_25;
    case 9:
      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      long long v102 = xmmword_10046D010;
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      v59._object = (void *)0x80000001004DC4C0;
      v59._uint64_t countAndFlagsBits = 0xD000000000000015;
      v60._uint64_t countAndFlagsBits = 0;
      v60._object = (void *)0xE000000000000000;
      PFLocalizedString(_:comment:)(v59, v60);
      sub_100054B78(&qword_1005F7720);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = v102;
      id v58 = [v1 downloadedUnplayedEpisodesCount];
      goto LABEL_25;
    case 10:
      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      long long v102 = xmmword_10046D010;
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      v61._object = (void *)0x80000001004DC4C0;
      v61._uint64_t countAndFlagsBits = 0xD000000000000015;
      v62._uint64_t countAndFlagsBits = 0;
      v62._object = (void *)0xE000000000000000;
      PFLocalizedString(_:comment:)(v61, v62);
      sub_100054B78(&qword_1005F7720);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = v102;
      id v58 = [v1 savedEpisodesCount];
      goto LABEL_25;
    case 11:
      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      long long v102 = xmmword_10046D010;
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      v63._object = (void *)0x80000001004DC4C0;
      v63._uint64_t countAndFlagsBits = 0xD000000000000015;
      v64._uint64_t countAndFlagsBits = 0;
      v64._object = (void *)0xE000000000000000;
      PFLocalizedString(_:comment:)(v63, v64);
      sub_100054B78(&qword_1005F7720);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = v102;
      id v58 = [v1 savedUnplayedEpisodesCount];
      goto LABEL_25;
    case 12:
      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      long long v102 = xmmword_10046D010;
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      v65._object = (void *)0x80000001004DC4C0;
      v65._uint64_t countAndFlagsBits = 0xD000000000000015;
      v66._uint64_t countAndFlagsBits = 0;
      v66._object = (void *)0xE000000000000000;
      PFLocalizedString(_:comment:)(v65, v66);
      sub_100054B78(&qword_1005F7720);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = v102;
      id v58 = [v1 libraryEpisodesCount];
LABEL_25:
      *(void *)(v57 + 56) = &type metadata for Int64;
      *(void *)(v57 + 64) = &protocol witness table for Int64;
      *(void *)(v57 + 32) = v58;
      uint64_t v67 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v69 = v68;
      swift_bridgeObjectRelease();
      goto LABEL_31;
    case 13:
      id v70 = [v1 category];
      if (v70)
      {
        Swift::String v71 = v70;
        uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v74 = v73;

        sub_100054B78((uint64_t *)&unk_1005F83F0);
        uint64_t v10 = (void *)swift_allocObject();
        *((_OWORD *)v10 + 1) = xmmword_10046D010;
        v10[4] = v72;
        v10[5] = v74;
      }
      return v10;
    case 14:
      [v1 lastUnfollowedDate];
      if (v75 <= 0.0) {
        return _swiftEmptyArrayStorage;
      }
      [v1 lastUnfollowedDate];
      id v77 = [objc_allocWithZone((Class)NSDate) initWithTimeIntervalSinceReferenceDate:v76];
      id v78 = [v77 microUnabbreviatedFriendlyDisplayString];

      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v79;

      sub_100054B78((uint64_t *)&unk_1005F83F0);
      uint64_t v10 = (void *)swift_allocObject();
      long long v102 = xmmword_10046D010;
      *((_OWORD *)v10 + 1) = xmmword_10046D010;
      uint64_t v16 = 0x776F6C6C6F666E55;
      unint64_t v17 = 0xED00004025206465;
LABEL_30:
      v80._uint64_t countAndFlagsBits = 0;
      v80._object = (void *)0xE000000000000000;
      PFLocalizedString(_:comment:)(*(Swift::String *)&v16, v80);
      sub_100054B78(&qword_1005F7720);
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = v102;
      *(void *)(v81 + 56) = &type metadata for String;
      *(void *)(v81 + 64) = sub_10004DA4C();
      *(void *)(v81 + 32) = v12;
      *(void *)(v81 + 40) = v14;
      uint64_t v67 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v69 = v82;
      swift_bridgeObjectRelease();
LABEL_31:
      swift_bridgeObjectRelease();
      v10[4] = v67;
      v10[5] = v69;
      return v10;
    case 15:
      return v10;
    default:
      id v18 = [v1 author];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;
      }
      else
      {
        uint64_t v20 = 0;
        uint64_t v22 = 0;
      }
      id v83 = [v1 provider];
      if (v83)
      {
        uint64_t v84 = v83;
        uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v87 = v86;
      }
      else
      {
        uint64_t v85 = 0;
        uint64_t v87 = 0;
      }
      sub_100054B78(&qword_1005F8280);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10046D030;
      *(void *)(inited + 32) = v20;
      *(void *)(inited + 40) = v22;
      *(void *)(inited + 48) = v85;
      *(void *)(inited + 56) = v87;
      if (!v22)
      {
        uint64_t v10 = _swiftEmptyArrayStorage;
        if (!v87) {
          goto LABEL_50;
        }
        goto LABEL_45;
      }
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_10004CEAC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v96 = v10[2];
      unint64_t v95 = v10[3];
      if (v96 >= v95 >> 1) {
        uint64_t v10 = sub_10004CEAC((char *)(v95 > 1), v96 + 1, 1, (char *)v10);
      }
      v10[2] = v96 + 1;
      Swift::String v97 = &v10[2 * v96];
      v97[4] = v20;
      v97[5] = v22;
      if (v87)
      {
LABEL_45:
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_10004CEAC(0, v10[2] + 1, 1, (char *)v10);
        }
        unint64_t v99 = v10[2];
        unint64_t v98 = v10[3];
        if (v99 >= v98 >> 1) {
          uint64_t v10 = sub_10004CEAC((char *)(v98 > 1), v99 + 1, 1, (char *)v10);
        }
        v10[2] = v99 + 1;
        uint64_t v100 = &v10[2 * v99];
        v100[4] = v85;
        v100[5] = v87;
      }
LABEL_50:
      swift_release();
      return v10;
  }
}

uint64_t sub_1002EEF68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_100601560, (uint64_t (*)(void))&type metadata accessor for ArtworkModel, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t sub_1002EEF9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_1006015A8, (uint64_t (*)(void))&type metadata accessor for GroupedSearchResultsPage.Result, (uint64_t (*)(void))&type metadata accessor for GroupedSearchResultsPage.Result);
}

uint64_t sub_1002EEFD0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    id v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100054B78(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  id v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1002F0C74(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1002EF250(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100054B78(&qword_1005F76B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002F0224(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1002EF360(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002EF5FC(a1, a2, a3, a4, &qword_1005F7658, &qword_1005F7670);
}

void *sub_1002EF374(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002EFB94(a1, a2, a3, a4, &qword_1005F82F0);
}

void *sub_1002EF380(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100054B78((uint64_t *)&unk_1005F8260);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002F0330(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1002EF490(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002EFEA4(a1, a2, a3, a4, &qword_1005F82D8);
}

uint64_t sub_1002EF4A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_1005F9000, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

void *sub_1002EF4D8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100054B78((uint64_t *)&unk_1005F8330);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002F0620(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1002EF5E8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002EF5FC(a1, a2, a3, a4, (uint64_t *)&unk_1005F8340, (uint64_t *)&unk_1005F7F40);
}

void *sub_1002EF5FC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_100054B78(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002F0514(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002EF72C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_1006015A0, (uint64_t (*)(void))&type metadata accessor for HeaderButtonItem, (uint64_t (*)(void))&type metadata accessor for HeaderButtonItem);
}

void *sub_1002EF760(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002EF5FC(a1, a2, a3, a4, &qword_1005F8428, &qword_1005F8430);
}

uint64_t sub_1002EF774(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_1005F7838, (uint64_t (*)(void))&type metadata accessor for ModernShelf, (uint64_t (*)(void))&type metadata accessor for ModernShelf);
}

void *sub_1002EF7A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100054B78(&qword_100601528);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002F0714(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1002EF8B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100054B78(&qword_1005F8308);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002F041C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002EF9DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_1005FB068, (uint64_t (*)(void))&type metadata accessor for MediaRequest.IncludeExtendTypes, (uint64_t (*)(void))&type metadata accessor for MediaRequest.IncludeExtendTypes);
}

void *sub_1002EFA10(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100054B78(&qword_100601550);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002F0820(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002EFB20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_1005FBE60, (uint64_t (*)(void))&type metadata accessor for ActionMenu.Child, (uint64_t (*)(void))&type metadata accessor for ActionMenu.Child);
}

uint64_t sub_1002EFB54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_100601598, (uint64_t (*)(void))&type metadata accessor for RemoteInterest, (uint64_t (*)(void))&type metadata accessor for RemoteInterest);
}

void *sub_1002EFB88(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002EFB94(a1, a2, a3, a4, &qword_1005F82E8);
}

void *sub_1002EFB94(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_100054B78(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      _OWORD v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      size_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002F0330(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002EFCA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_100601590, (uint64_t (*)(void))&type metadata accessor for DownloadedAsset, (uint64_t (*)(void))&type metadata accessor for DownloadedAsset);
}

void *sub_1002EFCD4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100054B78(&qword_100601538);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002F092C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002EFDF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_100601588, (uint64_t (*)(void))&type metadata accessor for RemoteNonFollowedShow, (uint64_t (*)(void))&type metadata accessor for RemoteNonFollowedShow);
}

uint64_t sub_1002EFE28(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, (uint64_t *)&unk_1005FD2A0, (uint64_t (*)(void))&type metadata accessor for MediaLibraryPid, (uint64_t (*)(void))&type metadata accessor for MediaLibraryPid);
}

uint64_t sub_1002EFE5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_100601580, (uint64_t (*)(void))&type metadata accessor for ArtworkRequest, (uint64_t (*)(void))&type metadata accessor for ArtworkRequest);
}

void *sub_1002EFE90(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002EFEA4(a1, a2, a3, a4, &qword_1005F8328);
}

void *sub_1002EFEA4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_100054B78(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      _OWORD v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002F0A24(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002EFFD4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, (uint64_t *)&unk_1006005A0, (uint64_t (*)(void))&type metadata accessor for EpisodeOffer, (uint64_t (*)(void))&type metadata accessor for EpisodeOffer);
}

void *sub_1002F0008(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000492C4(a1, a2, a3, a4, (uint64_t *)&unk_100608B20, &qword_100601510);
}

void *sub_1002F001C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000492C4(a1, a2, a3, a4, &qword_100601570, &qword_100601548);
}

uint64_t sub_1002F0030(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_100601578, (uint64_t (*)(void))&type metadata accessor for FeedUpdateRequest, (uint64_t (*)(void))&type metadata accessor for FeedUpdateRequest);
}

void *sub_1002F0064(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002EF5FC(a1, a2, a3, a4, &qword_1005F82C8, &qword_1005F82D0);
}

uint64_t sub_1002F0078(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, (uint64_t *)&unk_1006027F0, (uint64_t (*)(void))&type metadata accessor for MetricsData, (uint64_t (*)(void))&type metadata accessor for MetricsData);
}

void *sub_1002F00AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100054B78(&qword_100601568);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002F0330(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002F01BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_100601520, (uint64_t (*)(void))&type metadata accessor for URLTrackIdentifier, (uint64_t (*)(void))&type metadata accessor for URLTrackIdentifier);
}

uint64_t sub_1002F01F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002EEFD0(a1, a2, a3, a4, &qword_100601518, (uint64_t (*)(void))&type metadata accessor for MediaIdentifier, (uint64_t (*)(void))&type metadata accessor for MediaIdentifier);
}

uint64_t sub_1002F0224(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100054B78(&qword_1005F76C0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1002F0330(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F041C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F0514(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_100054B78(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F0620(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F0714(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100054B78(&qword_100601530);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F0820(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100054B78(&qword_100601558);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F092C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F0A24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F0B18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100054B78((uint64_t *)&unk_1005F82B0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F0C74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1002F0DD0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MoveOperationError(0);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002F2828(v0, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      unint64_t v9 = 0xD000000000000012;
      sub_1002F24C8((uint64_t)v7);
    }
    else
    {
      unint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      unint64_t v16 = 0xD000000000000013;
      unint64_t v17 = 0x80000001004DC830;
      swift_getErrorValue();
      v12._uint64_t countAndFlagsBits = Error.localizedDescription.getter();
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
      v13._uint64_t countAndFlagsBits = 46;
      v13._object = (void *)0xE100000000000000;
      String.append(_:)(v13);
      swift_errorRelease();
      return v16;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease();
    unint64_t v16 = 0xD00000000000002ALL;
    unint64_t v17 = 0x80000001004DC870;
    v10._uint64_t countAndFlagsBits = URL.path.getter();
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    v11._uint64_t countAndFlagsBits = 46;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    unint64_t v9 = v16;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v9;
}

void sub_1002F1048()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_source];
  uint64_t v3 = type metadata accessor for URL();
  sub_1002F2060(&qword_100601640, (void (*)(uint64_t))&type metadata accessor for URL);
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {
    uint64_t v4 = *(void (**)(id *))&v0[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
    if (v4)
    {
      uint64_t v98 = sub_100054B78(&qword_100607FD0);
      id v96 = 0;
      char v97 = 0;
      swift_retain();
      v4(&v96);
      sub_1000536BC((uint64_t)v4);
      sub_10004D2D8((uint64_t)&v96);
    }
LABEL_4:
    sub_100049E74();
    return;
  }
  char v95 = 0;
  if (!URL.isPackagedMedia()())
  {
    id v5 = [self defaultManager];
    URL.path.getter();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v7 = [v5 fileExistsAtPath:v6 isDirectory:&v95];

    if (!v7 || (v95 & 1) != 0)
    {
      static os_log_type_t.error.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_10046D010;
      uint64_t v9 = URL.path.getter();
      uint64_t v11 = v10;
      *(void *)(v8 + 56) = &type metadata for String;
      *(void *)(v8 + 64) = sub_10004DA4C();
      *(void *)(v8 + 32) = v9;
      *(void *)(v8 + 40) = v11;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      type metadata accessor for MoveOperationError(0);
      sub_1002F2060(&qword_100601648, (void (*)(uint64_t))type metadata accessor for MoveOperationError);
      uint64_t v12 = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(v13, v2, v3);
      swift_storeEnumTagMultiPayload();
      uint64_t v14 = v12;
LABEL_30:
      sub_10041985C(v14, 1);
      goto LABEL_31;
    }
  }
  uint64_t v15 = self;
  id v16 = [v15 defaultManager];
  URL.path.getter();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v18 = [v16 fileExistsAtPath:v17];

  long long v94 = v2;
  id v92 = v15;
  if (v18)
  {
    uint64_t v90 = v3;
    static os_log_type_t.error.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10046D010;
    uint64_t v20 = URL.path.getter();
    uint64_t v22 = v21;
    *(void *)(v19 + 56) = &type metadata for String;
    unint64_t v23 = sub_10004DA4C();
    *(void *)(v19 + 64) = v23;
    *(void *)(v19 + 32) = v20;
    *(void *)(v19 + 40) = v22;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    static os_log_type_t.default.getter();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_10046D010;
    uint64_t v25 = URL.path.getter();
    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 64) = v23;
    *(void *)(v24 + 32) = v25;
    *(void *)(v24 + 40) = v26;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v27 = [v15 defaultManager];
    URL.path.getter();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v96 = 0;
    LODWORD(v22) = [v27 removeItemAtPath:v28 error:&v96];

    if (v22)
    {
      id v29 = v96;
    }
    else
    {
      id v30 = v96;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      static os_log_type_t.error.getter();
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_10046D010;
      uint64_t v32 = URL.path.getter();
      *(void *)(v31 + 56) = &type metadata for String;
      *(void *)(v31 + 64) = v23;
      *(void *)(v31 + 32) = v32;
      *(void *)(v31 + 40) = v33;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    uint64_t v2 = v94;
    uint64_t v3 = v90;
  }
  os_log_type_t v34 = static os_log_type_t.default.getter();
  uint64_t v35 = *(NSObject **)&v1[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_log];
  id v36 = v1;
  uint64_t v93 = v36;
  if (os_log_type_enabled(v35, v34))
  {
    double v37 = v36;
    uint64_t v38 = swift_slowAlloc();
    id v96 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v39 = URL.description.getter();
    sub_10004B974(v39, v40, (uint64_t *)&v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    uint64_t v41 = URL.description.getter();
    sub_10004B974(v41, v42, (uint64_t *)&v96);
    uint64_t v2 = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v34, "Copy file from %s to destination %s.", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v43 = sub_10017B1BC();
  if (v44)
  {
    os_log_type_t v80 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v80))
    {
      uint64_t v81 = v36;
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      id v96 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v82 = 136446210;
      uint64_t v83 = URL.description.getter();
      sub_10004B974(v83, v84, (uint64_t *)&v96);
      uint64_t v2 = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v80, "Failed to copy file to destination %{public}s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    type metadata accessor for MoveOperationError(0);
    sub_1002F2060(&qword_100601648, (void (*)(uint64_t))type metadata accessor for MoveOperationError);
    uint64_t v85 = swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(v86, v2, v3);
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = v85;
    goto LABEL_30;
  }
  uint64_t v61 = v43;
  static os_log_type_t.default.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = xmmword_10046D010;
  *(void *)(v62 + 56) = &type metadata for UInt64;
  *(void *)(v62 + 64) = &protocol witness table for UInt64;
  *(void *)(v62 + 32) = v61;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v63 = [v92 defaultManager];
  URL._bridgeToObjectiveC()(v64);
  Swift::String v66 = v65;
  URL._bridgeToObjectiveC()(v67);
  uint64_t v69 = v68;
  id v96 = 0;
  unsigned int v70 = [v63 moveItemAtURL:v66 toURL:v68 error:&v96];

  id v71 = v96;
  if (v70)
  {
    uint64_t v72 = *(void (**)(id *))&v93[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
    if (v72)
    {
      uint64_t v98 = sub_100054B78(&qword_100607FD0);
      id v96 = 0;
      char v97 = 0;
      id v73 = v71;
      sub_10004ACDC((uint64_t)v72);
      v72(&v96);
      sub_1000536BC((uint64_t)v72);
      sub_10004D2D8((uint64_t)&v96);
    }
    else
    {
      id v89 = v96;
    }
    goto LABEL_4;
  }
  id v87 = v96;
  uint64_t v88 = _convertNSErrorToError(_:)();

  swift_willThrow();
  uint64_t v91 = v88;
  swift_getErrorValue();
  uint64_t v45 = Error.localizedDescription.getter();
  uint64_t v47 = v46;
  static os_log_type_t.error.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_10046D050;
  uint64_t v49 = URL.path.getter();
  uint64_t v51 = v50;
  *(void *)(v48 + 56) = &type metadata for String;
  unint64_t v52 = sub_10004DA4C();
  *(void *)(v48 + 64) = v52;
  *(void *)(v48 + 32) = v49;
  *(void *)(v48 + 40) = v51;
  uint64_t v53 = URL.path.getter();
  *(void *)(v48 + 96) = &type metadata for String;
  *(void *)(v48 + 104) = v52;
  *(void *)(v48 + 72) = v53;
  *(void *)(v48 + 80) = v54;
  *(void *)(v48 + 136) = &type metadata for String;
  *(void *)(v48 + 144) = v52;
  *(void *)(v48 + 112) = v45;
  *(void *)(v48 + 120) = v47;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.default.getter();
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_10046D010;
  uint64_t v56 = URL.description.getter();
  *(void *)(v55 + 56) = &type metadata for String;
  *(void *)(v55 + 64) = v52;
  *(void *)(v55 + 32) = v56;
  *(void *)(v55 + 40) = v57;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v58 = [v92 defaultManager];
  URL.path.getter();
  NSString v59 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v96 = 0;
  LODWORD(v55) = [v58 removeItemAtPath:v59 error:&v96];

  if (v55)
  {
    id v60 = v96;
  }
  else
  {
    id v74 = v96;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static os_log_type_t.error.getter();
    uint64_t v75 = swift_allocObject();
    *(_OWORD *)(v75 + 16) = xmmword_10046D010;
    uint64_t v76 = URL.path.getter();
    *(void *)(v75 + 56) = &type metadata for String;
    *(void *)(v75 + 64) = v52;
    *(void *)(v75 + 32) = v76;
    *(void *)(v75 + 40) = v77;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  type metadata accessor for MoveOperationError(0);
  sub_1002F2060(&qword_100601648, (void (*)(uint64_t))type metadata accessor for MoveOperationError);
  uint64_t v78 = swift_allocError();
  uint64_t *v79 = v91;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_10041985C(v78, 1);
  swift_errorRelease();
LABEL_31:
  swift_errorRelease();
}

void sub_1002F1DC0()
{
  sub_100050358(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input), *(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input + 8));
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_destination;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_source, v2);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_log);
}

uint64_t sub_1002F1F4C()
{
  return type metadata accessor for MoveFileOperation(0);
}

uint64_t type metadata accessor for MoveFileOperation(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1006015F8);
}

uint64_t sub_1002F1F74()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002F2020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input);
  *(void *)a1 = v3;
  char v4 = *(unsigned char *)(v2 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  return sub_10005036C(v3, v4);
}

uint64_t type metadata accessor for MoveOperationError(uint64_t a1)
{
  return sub_10004F778(a1, qword_1006016C0);
}

uint64_t sub_1002F2060(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1002F20A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v8 = *a2;
      swift_errorRetain();
      *a1 = v8;
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1002F2200(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    return swift_errorRelease();
  }
  else if (result <= 1)
  {
    uint64_t v3 = type metadata accessor for URL();
    char v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1002F22A8(void *a1, uint64_t *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v5 = *a2;
    swift_errorRetain();
    *a1 = v5;
  }
  else
  {
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1002F23B0(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1002F24C8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v5 = *a2;
      swift_errorRetain();
      *a1 = v5;
    }
    else
    {
      uint64_t v4 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1002F24C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoveOperationError(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1002F2524(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1002F2630(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1002F24C8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1002F274C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1002F27E0()
{
  return sub_1002F2060(&qword_100601648, (void (*)(uint64_t))type metadata accessor for MoveOperationError);
}

uint64_t sub_1002F2828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoveOperationError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1002F288C()
{
}

uint64_t sub_1002F28D0()
{
  unint64_t v1 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x180);
  uint64_t v2 = type metadata accessor for OperationResult();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_release();
}

uint64_t sub_1002F29A0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002F29D8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1002F2A10()
{
}

uint64_t sub_1002F2A40()
{
  return StaticString.description.getter();
}

uint64_t RunOnceMigrationStep.migrationKey.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(a2 + 8) + 8))();

  return StaticString.description.getter();
}

uint64_t RunOnceMigrationStep.requiresMigration.getter(uint64_t a1, uint64_t a2)
{
  id v4 = [self standardUserDefaults];
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(a2) = [v4 BOOLForKey:v5];

  return a2 ^ 1;
}

uint64_t sub_1002F2B2C(uint64_t a1, uint64_t a2)
{
  return sub_1002F3960(a1, a2, (uint64_t (*)(void, void, void))sub_1002F2B58);
}

void sub_1002F2B58(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[0] = StaticString.description.getter();
  v34[1] = v9;
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = 0x726F7272652ELL;
  v10._object = (void *)0xE600000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  sub_1002B8164();
  if (v3)
  {
    uint64_t v32 = v5;
    uint64_t v33 = v8;
    uint64_t v31 = v6;
    uint64_t v11 = self;
    id v12 = [v11 standardUserDefaults];
    StaticString.description.getter();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setBool:0 forKey:v13];

    id v14 = [v11 standardUserDefaults];
    v34[0] = v3;
    swift_errorRetain();
    sub_100054B78(&qword_100603F70);
    String.init<A>(describing:)();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v14 setObject:v15 forKey:v16];

    if ((a3 & 0x100) != 0)
    {
      uint64_t v22 = v33;
      static Logger.database.getter();
      swift_errorRetain();
      swift_errorRetain();
      unint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        v34[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136315394;
        uint64_t v26 = _typeName(_:qualified:)();
        uint64_t v35 = sub_10004B974(v26, v27, v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v25 + 12) = 2080;
        uint64_t v35 = v3;
        swift_errorRetain();
        uint64_t v28 = String.init<A>(describing:)();
        uint64_t v35 = sub_10004B974(v28, v29, v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Failed migration step silently: %s: %s.", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v32);
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v32);
      }
    }
    else
    {
      swift_willThrow();
    }
  }
  else
  {
    NSString v17 = self;
    id v18 = [v17 standardUserDefaults];
    StaticString.description.getter();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v18 setBool:1 forKey:v19];

    id v20 = [v17 standardUserDefaults];
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 removeObjectForKey:v21];
  }
}

void sub_1002F301C()
{
  uint64_t v12 = StaticString.description.getter();
  uint64_t v13 = v0;
  swift_bridgeObjectRetain();
  v1._uint64_t countAndFlagsBits = 0x726F7272652ELL;
  v1._object = (void *)0xE600000000000000;
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  id v2 = [self sharedInstance:v12 v13];
  id v3 = [v2 privateQueueContext];

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  NSString v16 = sub_1002F3A10;
  uint64_t v17 = v4;
  uint64_t v12 = (uint64_t)_NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  id v14 = sub_10003B424;
  NSString v15 = &unk_10055FD40;
  uint64_t v5 = _Block_copy(&v12);
  id v6 = v3;
  swift_release();
  [v6 performBlockAndWaitWithSave:v5];
  _Block_release(v5);

  uint64_t v7 = self;
  id v8 = [v7 standardUserDefaults];
  StaticString.description.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setBool:1 forKey:v9];

  id v10 = [v7 standardUserDefaults];
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 removeObjectForKey:v11];
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RunOnceMigrationStep.performMigration()()
{
  uint64_t v4 = v1;
  uint64_t v5 = v0;
  uint64_t v41 = *(void *)(v0 - 8);
  __chkstk_darwin();
  unint64_t v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v42 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v43 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
  uint64_t v47 = v9(v5, v4);
  uint64_t v48 = v10;
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = 0x726F7272652ELL;
  v11._object = (void *)0xE600000000000000;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  uint64_t v44 = v47;
  uint64_t v45 = v48;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v4 + 32);
  uint64_t v46 = v5;
  v12(v5, v4);
  if (v3)
  {
    uint64_t v39 = v7;
    uint64_t v13 = self;
    id v14 = [v13 standardUserDefaults];
    uint64_t v15 = v46;
    v9(v46, v4);
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v14 setBool:0 forKey:v16];

    id v17 = [v13 standardUserDefaults];
    uint64_t v47 = v3;
    swift_errorRetain();
    uint64_t v18 = sub_100054B78(&qword_100603F70);
    String.init<A>(describing:)();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v17 setObject:v19 forKey:v20];

    if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v15, v4))
    {
      NSString v21 = v43;
      static Logger.database.getter();
      unint64_t v23 = v40;
      uint64_t v22 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v2, v46);
      swift_errorRetain();
      swift_errorRetain();
      os_log_type_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v44 = v18;
        uint64_t v27 = v22;
        uint64_t v28 = v26;
        uint64_t v45 = swift_slowAlloc();
        uint64_t v47 = v45;
        *(_DWORD *)uint64_t v28 = 136315394;
        uint64_t v29 = v46;
        swift_getDynamicType();
        uint64_t v30 = _typeName(_:qualified:)();
        uint64_t v49 = sub_10004B974(v30, v31, &v47);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v29);
        *(_WORD *)(v28 + 12) = 2080;
        uint64_t v49 = v3;
        swift_errorRetain();
        uint64_t v32 = String.init<A>(describing:)();
        uint64_t v49 = sub_10004B974(v32, v33, &v47);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed migration step silently: %s: %s.", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v39);
      }
      else
      {
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v46);
        swift_errorRelease();
        swift_errorRelease();

        (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v39);
      }
    }
    else
    {
      swift_willThrow();
    }
  }
  else
  {
    os_log_type_t v34 = self;
    id v35 = [v34 standardUserDefaults];
    v9(v46, v4);
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v35 setBool:1 forKey:v36];

    id v37 = [v34 standardUserDefaults];
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v37 removeObjectForKey:v38];
  }
}

id RunOnceMigrationStep.userDefaults.getter()
{
  id v0 = [self standardUserDefaults];

  return v0;
}

uint64_t sub_1002F389C()
{
  id v0 = [self standardUserDefaults];
  StaticString.description.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v2 = [v0 BOOLForKey:v1];

  return v2 ^ 1;
}

uint64_t sub_1002F3934(uint64_t a1, uint64_t a2)
{
  return sub_1002F3960(a1, a2, (uint64_t (*)(void, void, void))sub_1002F301C);
}

uint64_t sub_1002F3960(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void))
{
  if (*(unsigned char *)(v3 + 17)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return a3(*(void *)v3, *(void *)(v3 + 8), v4 | *(unsigned __int8 *)(v3 + 16));
}

uint64_t sub_1002F399C(void (*a1)(void))
{
  a1();

  return _typeName(_:qualified:)();
}

uint64_t sub_1002F39D8()
{
  return swift_deallocObject();
}

uint64_t sub_1002F3A10()
{
  return sub_100391D4C(*(void **)(v0 + 16));
}

ValueMetadata *type metadata accessor for LegacyPlayEpisodeIntentImplementation()
{
  return &type metadata for LegacyPlayEpisodeIntentImplementation;
}

uint64_t sub_1002F3A2C()
{
  return sub_1002F7DCC((unint64_t *)&unk_1006017B0, (void (*)(uint64_t))&type metadata accessor for PlayEpisodeIntent);
}

uint64_t sub_1002F3A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for EpisodeEntity();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t PodcastForEpisodeIntent = type metadata accessor for FetchPodcastForEpisodeIntent();
  v4[9] = PodcastForEpisodeIntent;
  v4[10] = *(void *)(PodcastForEpisodeIntent - 8);
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_1002F3B94, 0, 0);
}

uint64_t sub_1002F3B94()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  int v4 = (void *)v0[3];
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  sub_100041A98(v4, v5);
  PlayEpisodeIntent.episode.getter();
  EpisodeEntity.adamID.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  FetchPodcastForEpisodeIntent.init(episodeAdamID:)();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[12] = v7;
  uint64_t v8 = sub_1002F7DCC(&qword_100601808, (void (*)(uint64_t))&type metadata accessor for FetchPodcastForEpisodeIntent);
  void *v7 = v0;
  v7[1] = sub_1002F3CEC;
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[5];
  uint64_t v12 = v0[2];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v12, v9, v11, v10, v8, v5, v6);
}

uint64_t sub_1002F3CEC()
{
  uint64_t v2 = *(void *)(*v1 + 88);
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *v1;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_1002F3EA4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1002F3EA4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F3F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for EpisodeEntity();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t EpisodeOffersIntent = type metadata accessor for FetchEpisodeOffersIntent();
  v4[9] = EpisodeOffersIntent;
  v4[10] = *(void *)(EpisodeOffersIntent - 8);
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_1002F4034, 0, 0);
}

uint64_t sub_1002F4034()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = (void *)v0[3];
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  sub_100041A98(v4, v5);
  sub_100054B78((uint64_t *)&unk_1005F8260);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10046D010;
  PlayEpisodeIntent.episode.getter();
  uint64_t v8 = EpisodeEntity.adamID.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(v7 + 32) = v8;
  FetchEpisodeOffersIntent.init(adamIDs:)();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[12] = v9;
  uint64_t v10 = sub_1002F7DCC(&qword_100601800, (void (*)(uint64_t))&type metadata accessor for FetchEpisodeOffersIntent);
  *uint64_t v9 = v0;
  v9[1] = sub_1002F41C0;
  uint64_t v11 = v0[11];
  uint64_t v12 = v0[9];
  uint64_t v13 = v0[5];
  uint64_t v14 = v0[2];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v14, v11, v13, v12, v10, v5, v6);
}

uint64_t sub_1002F41C0()
{
  uint64_t v2 = *(void *)(*v1 + 88);
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *v1;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_1002F7E14, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1002F4378(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin();
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EpisodeListSettings();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  memset(v9, 0, sizeof(v9));
  sub_1002C8EC4(a2, a3, (uint64_t)v6, (uint64_t)v9, 0, 0, 0, 1, 0, 1, 0, 1, 0);
  sub_100054B1C((uint64_t)v9, &qword_1005F5D30);
  return sub_100054B1C((uint64_t)v6, (uint64_t *)&unk_1005FEA40);
}

void sub_1002F44AC(uint64_t *a1@<X8>)
{
  sub_100054B78((uint64_t *)&unk_1005F8250);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10046D010;
  *(void *)(v3 + 32) = EpisodeEntity.preferredIdentifier()();
  *(void *)(v3 + 40) = v4;
  *(unsigned char *)(v3 + 48) = v5;
  unint64_t v6 = NSManagedObjectContext.episodes(for:sortDescriptors:limit:)();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      if ((v6 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v7 = *(id *)(v6 + 32);
      }
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      uint64_t v9 = (uint64_t)[v8 entitlementState];

      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = 2;
LABEL_10:
    *a1 = v9;
  }
}

uint64_t sub_1002F45FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006017C0 + dword_1006017C0);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_1002A1E0C;
  return v8(a2, a3);
}

uint64_t sub_1002F46B4(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for EpisodeEntity();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[9] = v5;
  v2[10] = *(void *)(v5 + 64);
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_1002F47D8, 0, 0);
}

uint64_t sub_1002F47D8()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v14 = v0[7];
  unint64_t v6 = (void *)v0[4];
  uint64_t v5 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[3], v2);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  v0[12] = v8;
  *(void *)(v8 + 16) = v6;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v1, v2);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v14, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
  id v9 = v6;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[13] = v10;
  type metadata accessor for MTEpisodeEntitlementState(0);
  *uint64_t v10 = v0;
  v10[1] = sub_1002F4968;
  uint64_t v12 = v0[7];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v12, sub_1002F7D5C, v8, v11);
}

uint64_t sub_1002F4968()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1002F4B74;
  }
  else {
    uint64_t v5 = sub_1002F4AFC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002F4AFC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1002F4B74()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F4BE4(uint64_t a1, uint64_t a2)
{
  v2[227] = a2;
  v2[221] = a1;
  uint64_t v3 = type metadata accessor for EpisodeOffer();
  v2[233] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[239] = v4;
  v2[245] = *(void *)(v4 + 64);
  v2[251] = swift_task_alloc();
  v2[257] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for PlayEpisodeIntent();
  v2[258] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[259] = v6;
  v2[260] = *(void *)(v6 + 64);
  v2[261] = swift_task_alloc();
  v2[262] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchWorkgroup();
  v2[263] = v7;
  v2[264] = *(void *)(v7 - 8);
  v2[265] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for TaskPriority();
  v2[266] = v8;
  v2[267] = *(void *)(v8 - 8);
  v2[268] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for EpisodeEntity();
  v2[269] = v9;
  v2[270] = *(void *)(v9 - 8);
  v2[271] = swift_task_alloc();
  v2[272] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for EpisodeController();
  uint64_t v11 = (void *)swift_task_alloc();
  v2[273] = v11;
  void *v11 = v2;
  v11[1] = sub_1002F4EB8;
  return BaseObjectGraph.inject<A>(_:)(v2 + 215, v10, v10);
}

uint64_t sub_1002F4EB8()
{
  *(void *)(*(void *)v1 + 2192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002F71E4;
  }
  else {
    uint64_t v2 = sub_1002F4FCC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002F4FCC()
{
  v0[275] = v0[215];
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_100609320);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[276] = v2;
  void *v2 = v0;
  v2[1] = sub_1002F5094;
  return BaseObjectGraph.inject<A>(_:)(v0 + 177, v1, v1);
}

uint64_t sub_1002F5094()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 2216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1002F72B4, 0, 0);
  }
  else
  {
    uint64_t v3 = sub_100054B78((uint64_t *)&unk_1005FEBE0);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 2224) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1002F5234;
    return BaseObjectGraph.inject<A>(_:)(v2 + 1624, v3, v3);
  }
}

uint64_t sub_1002F5234()
{
  *(void *)(*(void *)v1 + 2232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002F738C;
  }
  else {
    uint64_t v2 = sub_1002F5348;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002F5348()
{
  uint64_t v1 = *(void *)(v0 + 2176);
  uint64_t v2 = *(void *)(v0 + 2160);
  uint64_t v3 = *(void *)(v0 + 2152);
  *(void *)(v0 + 2240) = *(void *)(v0 + 1624);
  PlayEpisodeIntent.episode.getter();
  uint64_t v4 = EpisodeEntity.uuid.getter();
  uint64_t v6 = v5;
  *(void *)(v0 + 2248) = v4;
  *(void *)(v0 + 2256) = v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 2264) = v7;
  *(void *)(v0 + 2272) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v1, v3);
  if (v6)
  {
    PlayEpisodeIntent.episode.getter();
    uint64_t ObjectType = swift_getObjectType();
    j___sScTss5NeverORszABRs_rlE15currentPriorityScPvgZ();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 2280) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1002F56BC;
    uint64_t v10 = *(void *)(v0 + 2144);
    return NSManagedObjectContextProvider.managedObjectContext(for:)(v10, ObjectType);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 2096);
    uint64_t v25 = *(void *)(v0 + 2088);
    uint64_t v12 = *(void *)(v0 + 2080);
    uint64_t v13 = *(void *)(v0 + 2072);
    uint64_t v14 = *(void *)(v0 + 2064);
    uint64_t v15 = *(void *)(v0 + 1816);
    uint64_t v16 = *(void *)(v0 + 1768);
    uint64_t v24 = v16;
    sub_100056D54(v0 + 1416, v0 + 1336);
    unint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v23(v11, v16, v14);
    unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v18 = (v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v0 + 2336) = v19;
    sub_100042FC4((long long *)(v0 + 1336), v19 + 16);
    NSString v20 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32);
    v20(v19 + v17, v11, v14);
    *(void *)(v19 + v18) = v15;
    swift_retain();
    swift_retain();
    type metadata accessor for ServerPodcastBase();
    swift_asyncLet_begin();
    sub_100056D54(v0 + 1416, v0 + 1496);
    v23(v25, v24, v14);
    uint64_t v21 = swift_allocObject();
    *(void *)(v0 + 2344) = v21;
    sub_100042FC4((long long *)(v0 + 1496), v21 + 16);
    v20(v21 + v17, v25, v14);
    *(void *)(v21 + v18) = v15;
    swift_retain();
    swift_retain();
    sub_100044244(&qword_1006017E8);
    swift_asyncLet_begin();
    return _swift_asyncLet_get_throwing(v0 + 16, v0 + 1672, sub_1002F600C, v0 + 1584);
  }
}

uint64_t sub_1002F56BC(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = *(void *)(*v1 + 2144);
  uint64_t v5 = *(void *)(*v1 + 2136);
  uint64_t v6 = *(void *)(*v1 + 2128);
  uint64_t v7 = *v1;
  v3[286] = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v3[287] = v8;
  void *v8 = v7;
  v8[1] = sub_1002F5870;
  uint64_t v9 = v3[271];
  return sub_1002F46B4(v9, a1);
}

uint64_t sub_1002F5870(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[288] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)v4[286];
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v4[283];
  if (v1)
  {
    v6(v4[271], v4[269]);

    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1002F5CA8;
  }
  else
  {
    uint64_t v8 = v4[271];
    uint64_t v9 = v4[269];

    v4[289] = a1;
    v6(v8, v9);
    uint64_t v7 = sub_1002F5A14;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1002F5A14()
{
  if (v0[289] > 1uLL)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = type metadata accessor for PlaybackController.FairPlayKeyServerError();
    sub_1002F7DCC(&qword_1005FEB28, (void (*)(uint64_t))&type metadata accessor for PlaybackController.FairPlayKeyServerError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for PlaybackController.FairPlayKeyServerError.notEntitled(_:), v6);
    swift_willThrow();
    swift_release();
    swift_unknownObjectRelease();
    sub_10004D2D8((uint64_t)(v0 + 177));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v1 = v0[282];
    uint64_t v2 = v0[281];
    uint64_t v3 = v0[275];
    static DispatchWorkgroup.swiftConcurrency.getter();
    uint64_t v4 = (void *)swift_allocObject();
    v0[290] = v4;
    v4[2] = v3;
    v4[3] = v2;
    v4[4] = v1;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[291] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1002F5D98;
    return DispatchWorkgroup.runThreadBlocking<A>(operation:)();
  }
}

uint64_t sub_1002F5CA8()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + 1416);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F5D98()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2120);
  uint64_t v2 = *(void *)(*(void *)v0 + 2112);
  uint64_t v3 = *(void *)(*(void *)v0 + 2104);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1002F5F0C, 0, 0);
}

uint64_t sub_1002F5F0C()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004D2D8(v0 + 1416);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1002F600C()
{
  *(void *)(v1 + 2352) = v0;
  if (v0) {
    uint64_t v2 = sub_1002F7470;
  }
  else {
    uint64_t v2 = sub_1002F6040;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002F6040()
{
  uint64_t v1 = *(void *)(v0 + 1672);
  if (!*(void *)(v1 + 16))
  {
    uint64_t v7 = v0 + 1456;
    uint64_t v8 = type metadata accessor for PlaybackController.PlayerError();
    sub_1002F7DCC((unint64_t *)&unk_1005FEB70, (void (*)(uint64_t))&type metadata accessor for PlaybackController.PlayerError);
    *(void *)(v0 + 2416) = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for PlaybackController.PlayerError.noInternet(_:), v8);
    swift_willThrow();
    uint64_t v10 = sub_1002F7020;
LABEL_9:
    return _swift_asyncLet_finish(v0 + 16, v0 + 1672, v10, v7);
  }
  uint64_t v2 = *(void *)(v0 + 2056);
  uint64_t v3 = *(void *)(v0 + 1912);
  uint64_t v4 = *(void *)(v0 + 1864);
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  v3 += 16;
  int v6 = *(_DWORD *)(v3 + 64);
  *(_DWORD *)(v0 + 2424) = v6;
  *(void *)(v0 + 2360) = v5;
  *(void *)(v0 + 2368) = v3 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v2, v1 + ((v6 + 32) & ~(unint64_t)v6), v4);
  if (EpisodeOffer.priceType.getter() == 2)
  {
    return _swift_asyncLet_get_throwing(v0 + 656, v0 + 1576, sub_1002F642C, v0 + 1920);
  }
  if (sub_1003E54E8())
  {
    uint64_t v7 = v0 + 1824;
    uint64_t v11 = *(void *)(v0 + 2056);
    uint64_t v12 = *(void *)(v0 + 1912);
    uint64_t v13 = *(void *)(v0 + 1864);
    uint64_t v14 = type metadata accessor for PlaybackIntent.ValidationError();
    sub_1002F7DCC(&qword_1006017F0, (void (*)(uint64_t))&type metadata accessor for PlaybackIntent.ValidationError);
    *(void *)(v0 + 2408) = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, enum case for PlaybackIntent.ValidationError.restricted(_:), v14);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    uint64_t v10 = sub_1002F6E5C;
    goto LABEL_9;
  }
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2360);
  uint64_t v17 = *(unsigned __int8 *)(v0 + 2424);
  uint64_t v18 = *(void *)(v0 + 2200);
  uint64_t v19 = *(void *)(v0 + 2056);
  uint64_t v20 = *(void *)(v0 + 2008);
  uint64_t v21 = *(void *)(v0 + 1912);
  uint64_t v22 = *(void *)(v0 + 1864);
  static DispatchWorkgroup.swiftConcurrency.getter();
  v16(v20, v19, v22);
  uint64_t v23 = swift_allocObject();
  *(void *)(v0 + 2392) = v23;
  *(void *)(v23 + 16) = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v23 + ((v17 + 24) & ~v17), v20, v22);
  swift_retain();
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 2400) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_1002F6A8C;
  return DispatchWorkgroup.runThreadBlocking<A>(operation:)();
}

uint64_t sub_1002F642C()
{
  *(void *)(v1 + 2376) = v0;
  if (v0) {
    uint64_t v2 = sub_1002F7654;
  }
  else {
    uint64_t v2 = sub_1002F6460;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002F6460()
{
  id v1 = *(id *)(v0 + 1576);
  uint64_t v2 = ServerPodcastBase.relationships.getter();

  if (!v2) {
    goto LABEL_16;
  }
  uint64_t v3 = PodcastRelationships.channel.getter();
  swift_release();
  if (!v3) {
    goto LABEL_16;
  }
  unint64_t v4 = PodcastChannelRelationshipContainer.data.getter();
  swift_release();
  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v24)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    id v7 = 0;
    goto LABEL_17;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return DispatchWorkgroup.runThreadBlocking<A>(operation:)();
    }
    id v5 = *(id *)(v4 + 32);
  }
  int v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = v6;
  ServerChannel.attributes.getter();

  LOBYTE(v6) = ChannelAttributes.isSubscribed.getter();
  swift_release();
  if ((v6 & 1) == 0)
  {
LABEL_17:
    uint64_t v8 = v0 + 1776;
    uint64_t v25 = *(void *)(v0 + 2056);
    uint64_t v26 = *(void *)(v0 + 1912);
    uint64_t v27 = *(void *)(v0 + 1864);
    uint64_t v28 = type metadata accessor for PlaybackController.FairPlayKeyServerError();
    sub_1002F7DCC(&qword_1005FEB28, (void (*)(uint64_t))&type metadata accessor for PlaybackController.FairPlayKeyServerError);
    *(void *)(v0 + 2384) = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v29, enum case for PlaybackController.FairPlayKeyServerError.notEntitled(_:), v28);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    uint64_t v14 = sub_1002F68C8;
    goto LABEL_18;
  }

  if ((sub_1003E54E8() & 1) == 0)
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2360);
    uint64_t v16 = *(unsigned __int8 *)(v0 + 2424);
    uint64_t v17 = *(void *)(v0 + 2200);
    uint64_t v18 = *(void *)(v0 + 2056);
    uint64_t v19 = *(void *)(v0 + 2008);
    uint64_t v20 = *(void *)(v0 + 1912);
    uint64_t v21 = *(void *)(v0 + 1864);
    static DispatchWorkgroup.swiftConcurrency.getter();
    v15(v19, v18, v21);
    uint64_t v22 = swift_allocObject();
    *(void *)(v0 + 2392) = v22;
    *(void *)(v22 + 16) = v17;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v22 + ((v16 + 24) & ~v16), v19, v21);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 2400) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1002F6A8C;
    return DispatchWorkgroup.runThreadBlocking<A>(operation:)();
  }
  uint64_t v8 = v0 + 1824;
  uint64_t v9 = *(void *)(v0 + 2056);
  uint64_t v10 = *(void *)(v0 + 1912);
  uint64_t v11 = *(void *)(v0 + 1864);
  uint64_t v12 = type metadata accessor for PlaybackIntent.ValidationError();
  sub_1002F7DCC(&qword_1006017F0, (void (*)(uint64_t))&type metadata accessor for PlaybackIntent.ValidationError);
  *(void *)(v0 + 2408) = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, enum case for PlaybackIntent.ValidationError.restricted(_:), v12);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  uint64_t v14 = sub_1002F6E5C;
LABEL_18:
  return _swift_asyncLet_finish(v0 + 16, v0 + 1672, v14, v8);
}

uint64_t sub_1002F68C8()
{
  return _swift_task_switch(sub_1002F68E4, 0, 0);
}

uint64_t sub_1002F68E4()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_1002F6964, v0 + 1680);
}

uint64_t sub_1002F6964()
{
  return _swift_task_switch(sub_1002F6980, 0, 0);
}

uint64_t sub_1002F6980()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + 1416);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F6A8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2120);
  uint64_t v2 = *(void *)(*(void *)v0 + 2112);
  uint64_t v3 = *(void *)(*(void *)v0 + 2104);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1002F6C00, 0, 0);
}

uint64_t sub_1002F6C00()
{
  (*(void (**)(void, void))(v0[239] + 8))(v0[257], v0[233]);
  return _swift_asyncLet_finish(v0 + 2, v0 + 209, sub_1002F6C94, v0 + 216);
}

uint64_t sub_1002F6C94()
{
  return _swift_task_switch(sub_1002F6CB0, 0, 0);
}

uint64_t sub_1002F6CB0()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_1002F6D30, v0 + 1376);
}

uint64_t sub_1002F6D30()
{
  return _swift_task_switch(sub_1002F6D4C, 0, 0);
}

uint64_t sub_1002F6D4C()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + 1416);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1002F6E5C()
{
  return _swift_task_switch(sub_1002F6E78, 0, 0);
}

uint64_t sub_1002F6E78()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_1002F6EF8, v0 + 1872);
}

uint64_t sub_1002F6EF8()
{
  return _swift_task_switch(sub_1002F6F14, 0, 0);
}

uint64_t sub_1002F6F14()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + 1416);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F7020()
{
  return _swift_task_switch(sub_1002F703C, 0, 0);
}

uint64_t sub_1002F703C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_1002F70BC, v0 + 1296);
}

uint64_t sub_1002F70BC()
{
  return _swift_task_switch(sub_1002F70D8, 0, 0);
}

uint64_t sub_1002F70D8()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + 1416);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F71E4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F72B4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F738C()
{
  swift_release();
  sub_10004D2D8(v0 + 1416);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F7470()
{
  return _swift_asyncLet_finish(v0 + 16, v0 + 1672, sub_1002F7490, v0 + 1632);
}

uint64_t sub_1002F7490()
{
  return _swift_task_switch(sub_1002F74AC, 0, 0);
}

uint64_t sub_1002F74AC()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_1002F752C, v0 + 1536);
}

uint64_t sub_1002F752C()
{
  return _swift_task_switch(sub_1002F7548, 0, 0);
}

uint64_t sub_1002F7548()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + 1416);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F7654()
{
  (*(void (**)(void, void))(v0[239] + 8))(v0[257], v0[233]);
  return _swift_asyncLet_finish(v0 + 2, v0 + 209, sub_1002F76E8, v0 + 246);
}

uint64_t sub_1002F76E8()
{
  return _swift_task_switch(sub_1002F7704, 0, 0);
}

uint64_t sub_1002F7704()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_1002F7784, v0 + 2016);
}

uint64_t sub_1002F7784()
{
  return _swift_task_switch(sub_1002F77A0, 0, 0);
}

uint64_t sub_1002F77A0()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + 1416);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F78B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PlayEpisodeIntent() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + 16;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000B8F0;
  return sub_1002F3A74(a1, v6, v7, v8);
}

uint64_t sub_1002F79CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PlayEpisodeIntent() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + 16;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10005B794;
  return sub_1002F3F14(a1, v6, v7, v8);
}

uint64_t sub_1002F7AE4()
{
  uint64_t v1 = type metadata accessor for EpisodeOffer();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1002F7BB0()
{
  uint64_t v1 = *(void *)(type metadata accessor for EpisodeOffer() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  memset(v4, 0, sizeof(v4));
  sub_1002CC0AC(v2, 0, 0, 1, (uint64_t)v4);
  return sub_100054B1C((uint64_t)v4, &qword_1005F5D30);
}

uint64_t sub_1002F7C44()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002F7C84()
{
  return sub_1002F4378(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1002F7C90()
{
  uint64_t v1 = type metadata accessor for EpisodeEntity();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1002F7D5C(uint64_t *a1@<X8>)
{
}

uint64_t sub_1002F7DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1002F7E18(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = objc_allocWithZone((Class)MTPropertyChangeQueryObserver);
  id v7 = a1;
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v6 initWithEntityName:v8 predicate:v7];

  if (v9)
  {
    *(void *)(v3 + 16) = v9;
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10046D050;
    *(void *)(v10 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v10 + 40) = v11;
    *(void *)(v10 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v10 + 56) = v12;
    *(void *)(v10 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v10 + 72) = v13;
    void aBlock[6] = v10;
    sub_1001B0FD0(a2);
    id v14 = *(id *)(v3 + 16);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v14 setPropertyKeys:isa];

    [*(id *)(v3 + 16) startObserving];
    id v16 = [*(id *)(v3 + 16) uuids];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRelease();

      uint64_t v19 = *(void *)(v18 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v3 + 24) = v19;
      uint64_t v20 = *(void **)(v3 + 16);
      uint64_t v21 = swift_allocObject();
      swift_weakInit();
      aBlock[4] = sub_1002F855C;
      aBlock[5] = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001F3C04;
      uint64_t aBlock[3] = &unk_10055FF40;
      uint64_t v22 = _Block_copy(aBlock);
      id v23 = v20;
      swift_release();
      id v24 = [v23 addResultsChangedHandler:v22];

      _Block_release(v22);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1002F80DC(unint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    if (a1)
    {
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        a1 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if ((a1 & 0x8000000000000000) != 0)
        {
          uint64_t result = _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
      }
      else
      {
        a1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    if (a1 != *(void *)(v3 + 24))
    {
      *(void *)(v3 + 24) = a1;
      swift_beginAccess();
      uint64_t v4 = *(void (**)(unint64_t))(v3 + 32);
      if (v4)
      {
        swift_retain();
        v4(a1);
        sub_1000536BC((uint64_t)v4);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for EpisodeCountObserver()
{
  return self;
}

uint64_t (*sub_1002F8240())()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  if (v2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    unint64_t v5 = sub_1002E3338;
  }
  else
  {
    unint64_t v5 = 0;
  }
  sub_10004ACDC(v2);
  return v5;
}

uint64_t sub_1002F82DC(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    id v6 = sub_1002E3334;
  }
  else
  {
    id v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *v2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 32);
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 40) = v5;
  return sub_1000536BC(v8);
}

void (*sub_1002F8374(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 32);
  if (v5)
  {
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = sub_1002E32DC;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  v3[3] = v8;
  v3[4] = v7;
  return sub_1002F8434;
}

void sub_1002F8434(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (v3)
  {
    if (a2) {
      uint64_t v4 = sub_1002E32D4;
    }
    else {
      uint64_t v4 = (uint64_t (*)(uint64_t))sub_1002E3334;
    }
    uint64_t v5 = v2[4];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = v2[5];
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  swift_endAccess();

  free(v2);
}

uint64_t sub_1002F84EC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002F8524()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002F855C(unint64_t a1)
{
  return sub_1002F80DC(a1);
}

void *sub_1002F8574(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  return sub_1002F858C(a1, a2, a3);
}

void *sub_1002F858C(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = _swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v4 = v15;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

BOOL sub_1002F8738(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002F878C(a1, WitnessTable);
}

BOOL sub_1002F878C(uint64_t a1, uint64_t a2)
{
  if (dispatch thunk of ContextAction.configuration.getter())
  {
    type metadata accessor for NowPlayingContextActionConfiguration();
    uint64_t v4 = swift_dynamicCastClass();
    swift_release();
    if (v4)
    {
      if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0) {
        return 0;
      }
    }
  }
  char v5 = static Podcasts.isBlueMoonEnabled()();
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  if (v5)
  {
    if ((v6 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
      dispatch thunk of PlaybackController.queueController.getter();
      swift_release();
      char v7 = dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter();
      swift_release();
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
  }
  else if ((v6 & 1) == 0)
  {
    id v8 = [self defaultInstance];
    id v9 = [v8 upNextController];

    LODWORD(v8) = [v9 hasItemsInQueue];
    if (!v8) {
      return 0;
    }
  }
  uint64_t v10 = *((void *)sub_1002F9400(a1, a2) + 2);
  swift_bridgeObjectRelease();
  if (v10) {
    return 1;
  }
  unint64_t v11 = (unint64_t)sub_1002F9794(a1, a2);
  uint64_t v12 = v11 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (v12 > 0) {
    return 1;
  }
  unint64_t v14 = sub_1002F999C(a1, a2);
  if (v14 >> 62) {
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v15 > 0;
}

uint64_t sub_1002F89B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002F8A04(a1, WitnessTable);
}

uint64_t sub_1002F8A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  char v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  unint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2) & 1;
  uint64_t result = sub_1002F9EA8(v12, a1, a2);
  if (result)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    unint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = v12;
    aBlock[4] = sub_1002FAAE0;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003B424;
    uint64_t aBlock[3] = &unk_100560008;
    uint64_t v16 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10002FC48();
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_10002FBEC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_1002F8CC0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002F8D14(a1, WitnessTable);
}

uint64_t sub_1002F8D14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EpisodeOffer();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  unsigned __int8 v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(a1, v13);
  if (result)
  {
    if (*(unsigned char *)(result + 32) == 1)
    {
      uint64_t v38 = v13;
      uint64_t v39 = v6;
      uint64_t v40 = v5;
      uint64_t v41 = a1;
      uint64_t v42 = v2;
      uint64_t v16 = *(void *)(result + 16);
      uint64_t v15 = *(void *)(result + 24);
      unint64_t v17 = _swiftEmptyArrayStorage;
      unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v18 = *(void *)(v16 + 16);
      if (v18)
      {
        uint64_t v34 = v15;
        uint64_t v35 = v16;
        uint64_t v36 = result;
        id v37 = v8;
        uint64_t v43 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
        unint64_t v19 = v16 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        uint64_t v20 = *(void *)(v10 + 72);
        swift_bridgeObjectRetain();
        do
        {
          v43(v12, v19, v9);
          id v21 = sub_1002C5634();
          if (v21)
          {
            id v22 = v21;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          v19 += v20;
          --v18;
        }
        while (v18);
        sub_1001DCDF8(v35, v34, 1u);
        unint64_t v17 = (void *)v44;
        uint64_t result = v36;
        uint64_t v8 = v37;
      }
      uint64_t v24 = v39;
      uint64_t v23 = v40;
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
      uint64_t v26 = result;
      v25(v8, result + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v40);
      char v27 = *(unsigned char *)(v26 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron);
      type metadata accessor for EpisodeContextActionData();
      uint64_t v28 = swift_allocObject();
      uint64_t v29 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
      *(void *)(v28 + v29) = [self sharedInstance];
      *(void *)(v28 + 16) = v17;
      *(void *)(v28 + 24) = 0;
      *(unsigned char *)(v28 + 32) = 2;
      v25((char *)(v28 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint), (uint64_t)v8, v23);
      *(unsigned char *)(v28 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = v27;
      sub_10040315C();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v23);
      uint64_t v30 = v38;
      uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 24);
      uint64_t v32 = swift_retain();
      v31(v32, v41, v30);
      swift_release();
      return swift_release();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

BOOL sub_1002F90E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002F9134(a1, WitnessTable);
}

BOOL sub_1002F9134(uint64_t a1, uint64_t a2)
{
  if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0) {
    return 0;
  }
  char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  dispatch thunk of PlaybackController.queueController.getter();
  swift_release();
  char v5 = dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter();
  swift_release();
  if (v4)
  {
    if (v5) {
      return 0;
    }
  }
  else if ((v5 & 1) == 0)
  {
    return 0;
  }
  uint64_t v7 = *((void *)sub_1002F9400(a1, a2) + 2);
  swift_bridgeObjectRelease();
  if (v7) {
    return 1;
  }
  unint64_t v8 = (unint64_t)sub_1002F9794(a1, a2);
  uint64_t v9 = v8 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (v9 > 0) {
    return 1;
  }
  unint64_t v10 = sub_1002F999C(a1, a2);
  if (v10 >> 62) {
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v11 > 0;
}

BOOL sub_1002F92B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002F878C(a1, WitnessTable);
}

uint64_t sub_1002F9304(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002F8A04(a1, WitnessTable);
}

uint64_t sub_1002F9358(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002F8D14(a1, WitnessTable);
}

BOOL sub_1002F93AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1002F9134(a1, WitnessTable);
}

char *sub_1002F9400(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 16))();
  if (!v2) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v3 = *(void *)(v2 + 24);
  int v5 = *(unsigned __int8 *)(v2 + 32);
  sub_1001DCD9C(v4, v3, v5);
  swift_release();
  if (v5)
  {
    sub_1001DCDF8(v4, v3, v5);
    return (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v4 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = 0;
    uint64_t v6 = (char *)_swiftEmptyArrayStorage;
LABEL_20:
    sub_1000536BC((uint64_t)v24);
    return v6;
  }
  unint64_t v8 = 0;
  id v26 = self;
  uint64_t v25 = (char *)_swiftEmptyArrayStorage;
  uint64_t v9 = (uint64_t *)(v4 + 40);
  while (1)
  {
    uint64_t v10 = *(v9 - 1);
    uint64_t v11 = *v9;
    swift_bridgeObjectRetain();
    id v12 = [v26 sharedInstance];
    id v13 = [v12 mainOrPrivateContext];

    char v30 = 1;
    char v29 = 1;
    char v28 = 0;
    unint64_t v14 = (void *)swift_allocObject();
    v14[2] = v13;
    uint64_t v14[3] = v10;
    v14[4] = v11;
    v14[5] = &v30;
    v14[6] = &v29;
    v14[7] = &v28;
    swift_bridgeObjectRetain();
    id v15 = v13;
    sub_1000536BC((uint64_t)v8);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1002FAAB0;
    *(void *)(v16 + 24) = v14;
    aBlock[4] = sub_10004A010;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018818;
    uint64_t aBlock[3] = &unk_10055FFB8;
    unint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v15 performBlockAndWait:v17];
    _Block_release(v17);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = (char *)swift_release();
    if (isEscapingClosureAtFileLocation) {
      break;
    }
    if ((v30 & 1) != 0 || v29 == 1 || (v28 & 1) == 0)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = sub_10004CEAC(0, *((void *)v25 + 2) + 1, 1, v25);
      }
      unint64_t v22 = *((void *)v20 + 2);
      unint64_t v21 = *((void *)v20 + 3);
      if (v22 >= v21 >> 1) {
        uint64_t v20 = sub_10004CEAC((char *)(v21 > 1), v22 + 1, 1, v20);
      }
      *((void *)v20 + 2) = v22 + 1;
      uint64_t v25 = v20;
      uint64_t v23 = &v20[16 * v22];
      *((void *)v23 + 4) = v10;
      *((void *)v23 + 5) = v11;
    }
    v9 += 2;
    unint64_t v8 = sub_1002FAAB0;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_1002FAAB0;
      uint64_t v6 = v25;
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

void *sub_1002F9794(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 16))();
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v4 = *(void *)(v2 + 16);
  uint64_t v3 = *(void *)(v2 + 24);
  int v5 = *(unsigned __int8 *)(v2 + 32);
  sub_1001DCD9C(v4, v3, v5);
  swift_release();
  if (v5 != 2)
  {
    uint64_t v12 = v4;
    uint64_t v13 = v3;
    unsigned __int8 v14 = v5;
LABEL_21:
    sub_1001DCDF8(v12, v13, v14);
    return _swiftEmptyArrayStorage;
  }
  if (!(v4 >> 62))
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  sub_1001DCDF8(v4, v3, 2u);
  if (!v6)
  {
LABEL_20:
    uint64_t v12 = v4;
    uint64_t v13 = v3;
    unsigned __int8 v14 = 2;
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v15 = v3;
  uint64_t result = (void *)type metadata accessor for RestrictionsController();
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v10 = v9;
      if (((static RestrictionsController.isExplicitContentAllowed.getter() & 1) != 0
         || (objc_msgSend(v10, "isExplicit", v15) & 1) == 0)
        && (objc_msgSend(v10, "isEntitled", v15) & 1) != 0)
      {
        id v11 = v10;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    sub_1001DCDF8(v4, v15, 2u);
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002F999C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 16))();
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (!v5) {
    return (uint64_t)v6;
  }
  if (*(unsigned char *)(v5 + 32) != 3) {
    goto LABEL_25;
  }
  unint64_t v7 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v25 = _swiftEmptyArrayStorage;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v9)
  {
LABEL_20:
    sub_1001DCDF8(v7, v8, 3u);
    uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_21:
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2) & 1) == 0)
    {
      __chkstk_darwin();
      v21[2] = a1;
      v21[3] = a2;
      v21[4] = v2;
      uint64_t v6 = sub_1002F858C((uint64_t (*)(id *))sub_1002FAA4C, v21, (unint64_t)v6);
      swift_release();
      return (uint64_t)v6;
    }
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    dispatch thunk of PlaybackController.queueController.getter();
    swift_release();
    uint64_t ItemContent = dispatch thunk of PlaybackController.QueueController.hardQueueFirstItemContentID.getter();
    uint64_t v19 = v18;
    swift_release();
    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1002FA88C((unint64_t)v6, ItemContent, v19);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      return (uint64_t)v20;
    }
LABEL_25:
    swift_release();
    return (uint64_t)v6;
  }
LABEL_5:
  uint64_t v22 = v8;
  uint64_t v23 = a1;
  uint64_t v24 = v2;
  if (v9 >= 1)
  {
    uint64_t v11 = 0;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v7 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      unsigned __int8 v14 = (void *)MPCPlayerResponseItem.podcastEpisode.getter();
      if (v14)
      {
        uint64_t v15 = v14;
        if (([v14 isExplicitEpisode] & 1) == 0)
        {

LABEL_17:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          goto LABEL_8;
        }
        type metadata accessor for RestrictionsController();
        char v16 = static RestrictionsController.isExplicitContentAllowed.getter();

        if (v16) {
          goto LABEL_17;
        }
      }

LABEL_8:
      if (v9 == ++v11)
      {
        sub_1001DCDF8(v7, v22, 3u);
        uint64_t v6 = v25;
        a1 = v23;
        uint64_t v2 = v24;
        goto LABEL_21;
      }
    }
  }
  __break(1u);
  return result;
}

void sub_1002F9C74(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned char *a5, unsigned __int8 *a6)
{
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [a1 episodeForUuid:v10];

  if (v11)
  {
    type metadata accessor for RestrictionsController();
    if (static RestrictionsController.isExplicitContentAllowed.getter()) {
      unsigned __int8 v12 = 0;
    }
    else {
      unsigned __int8 v12 = [v11 isExplicit];
    }
    *a4 = v12;
    *a5 = [v11 isExternalType];
    unsigned __int8 v13 = [v11 isEntitled];

    *a6 = v13;
  }
}

BOOL sub_1002F9D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for QueueModelSection();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  dispatch thunk of PlaybackController.queueController.getter();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for QueueModelSection.hardQueue(_:), v6);
  char v10 = dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (v10 & 1) == 0;
}

uint64_t sub_1002F9EA8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for PlaybackController.QueueCommand.Location();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  char v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (uint64_t)&v71 - v11;
  __chkstk_darwin();
  unsigned __int8 v14 = (char *)&v71 - v13;
  uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 16);
  uint64_t v80 = a2;
  uint64_t v81 = v3;
  uint64_t result = v15(a2);
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v76 = v10;
    uint64_t v77 = v8;
    int v78 = a1;
    uint64_t v19 = *(void *)(result + 16);
    uint64_t v18 = *(void *)(result + 24);
    switch(*(unsigned char *)(result + 32))
    {
      case 1:
        swift_release();
        return 0;
      case 2:
        swift_bridgeObjectRetain();
        if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0)
        {
          BOOL v49 = (v78 & 1) == 0;
          uint64_t v50 = self;
          sub_1002F9794(v80, a3);
          sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
          v45.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v50 insertPlayerItems:v45.super.isa intoPlaybackQueueAtPosition:v49];
          uint64_t v46 = v19;
          uint64_t v47 = v18;
          unsigned __int8 v48 = 2;
          goto LABEL_35;
        }
        uint64_t v73 = v7;
        uint64_t v23 = v80;
        (*(void (**)(uint64_t, uint64_t))(a3 + 24))(v80, a3);
        dispatch thunk of PlaybackController.queueController.getter();
        swift_release();
        unint64_t v24 = (unint64_t)sub_1002F9794(v23, a3);
        uint64_t v7 = v24;
        uint64_t v72 = v17;
        uint64_t v74 = v19;
        uint64_t v75 = v18;
        if (v24 >> 62) {
          goto LABEL_61;
        }
        uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v25) {
          goto LABEL_11;
        }
        goto LABEL_62;
      case 3:
        swift_bridgeObjectRetain();
        unint64_t v35 = sub_1002F999C(v80, a3);
        unint64_t v82 = v35;
        if (v35 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        }
        else
        {
          uint64_t v12 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
        }
        uint64_t v74 = v19;
        uint64_t v75 = v18;
        uint64_t v73 = v7;
        if (v12)
        {
          uint64_t v72 = v17;
          uint64_t v79 = v12;
          if (v12 < 1)
          {
            __break(1u);
            goto LABEL_60;
          }
          uint64_t v36 = 0;
          id v37 = *(void (**)(uint64_t, uint64_t))(a3 + 24);
          uint64_t v71 = (a3 + 24) & 0xFFFFFFFFFFFFLL | 0x73EA000000000000;
          unint64_t v38 = v82;
          unint64_t v39 = v82 & 0xC000000000000001;
          do
          {
            if (v39) {
              id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v40 = *(id *)(v38 + 8 * v36 + 32);
            }
            uint64_t v41 = v40;
            ++v36;
            v37(v80, a3);
            dispatch thunk of PlaybackController.queueController.getter();
            swift_release();
            id v42 = [v41 contentItemIdentifier];
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(identifier:)();
            swift_release();
            swift_bridgeObjectRelease();
            unint64_t v38 = v82;
          }
          while (v79 != v36);
          swift_bridgeObjectRelease();
          uint64_t v19 = v74;
          uint64_t v18 = v75;
          uint64_t v12 = v79;
        }
        else
        {
          swift_bridgeObjectRelease();
          id v37 = *(void (**)(uint64_t, uint64_t))(a3 + 24);
        }
        v37(v80, a3);
        uint64_t v7 = dispatch thunk of PlaybackController.queueController.getter();
        swift_release();
        if (!v12) {
          goto LABEL_54;
        }
        if (v12 >= 1)
        {
          unint64_t v51 = v82;
          unint64_t v52 = v82 & 0xC000000000000001;
          swift_bridgeObjectRetain();
          uint64_t v53 = 0;
          uint64_t v54 = _swiftEmptyArrayStorage;
          do
          {
            if (v52) {
              id v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v55 = *(id *)(v51 + 8 * v53 + 32);
            }
            uint64_t v56 = v55;
            uint64_t v57 = MPCPlayerResponseItem.podcastEpisode.getter();
            if (v57)
            {
              id v58 = (void *)v57;
              uint64_t v59 = MPModelObject.adamID.getter();
              char v61 = v60;

              if ((v61 & 1) == 0)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v54 = sub_1002EF380(0, v54[2] + 1, 1, v54);
                }
                unint64_t v63 = v54[2];
                unint64_t v62 = v54[3];
                if (v63 >= v62 >> 1) {
                  uint64_t v54 = sub_1002EF380((void *)(v62 > 1), v63 + 1, 1, v54);
                }
                v54[2] = v63 + 1;
                v54[v63 + 4] = v59;
              }
              unint64_t v51 = v82;
            }
            else
            {
            }
            ++v53;
          }
          while (v12 != v53);
          swift_bridgeObjectRelease();
          uint64_t v19 = v74;
          uint64_t v18 = v75;
LABEL_54:
          swift_bridgeObjectRelease();
          Swift::String v64 = (unsigned int *)&enum case for PlaybackController.QueueCommand.Location.queueTail(_:);
          if (v78) {
            Swift::String v64 = (unsigned int *)&enum case for PlaybackController.QueueCommand.Location.queueHead(_:);
          }
          Swift::String v66 = v76;
          uint64_t v65 = v77;
          uint64_t v67 = v73;
          (*(void (**)(char *, void, uint64_t))(v77 + 104))(v76, *v64, v73);
          dispatch thunk of PlaybackController.QueueController.addToQueue(adamIds:location:)();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1001DCDF8(v19, v18, 3u);
          (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
          return 0;
        }
LABEL_60:
        __break(1u);
LABEL_61:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        if (v25)
        {
LABEL_11:
          if (v25 < 1)
          {
            __break(1u);
            JUMPOUT(0x1002FA788);
          }
          uint64_t v26 = 0;
          char v27 = _swiftEmptyArrayStorage;
          do
          {
            if ((v7 & 0xC000000000000001) != 0) {
              id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v28 = *(id *)(v7 + 8 * v26 + 32);
            }
            char v29 = v28;
            uint64_t v30 = IMPlayerItem.adamID.getter();
            char v32 = v31;

            if ((v32 & 1) == 0)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v27 = sub_1002EF380(0, v27[2] + 1, 1, v27);
              }
              unint64_t v34 = v27[2];
              unint64_t v33 = v27[3];
              if (v34 >= v33 >> 1) {
                char v27 = sub_1002EF380((void *)(v33 > 1), v34 + 1, 1, v27);
              }
              v27[2] = v34 + 1;
              v27[v34 + 4] = v30;
            }
            ++v26;
          }
          while (v25 != v26);
        }
LABEL_62:
        swift_bridgeObjectRelease_n();
        uint64_t v68 = (unsigned int *)&enum case for PlaybackController.QueueCommand.Location.queueTail(_:);
        if (v78) {
          uint64_t v68 = (unsigned int *)&enum case for PlaybackController.QueueCommand.Location.queueHead(_:);
        }
        uint64_t v69 = v77;
        uint64_t v70 = v73;
        (*(void (**)(uint64_t, void, uint64_t))(v77 + 104))(v12, *v68, v73);
        dispatch thunk of PlaybackController.QueueController.addToQueue(adamIds:location:)();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1001DCDF8(v74, v75, 2u);
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v12, v70);
LABEL_65:
        uint64_t result = 1;
        break;
      default:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (static Podcasts.isBlueMoonEnabled()())
        {
          uint64_t v20 = v80;
          (*(void (**)(uint64_t, uint64_t))(a3 + 24))(v80, a3);
          dispatch thunk of PlaybackController.queueController.getter();
          swift_release();
          sub_1002F9400(v20, a3);
          uint64_t v21 = v77;
          uint64_t v22 = (unsigned int *)&enum case for PlaybackController.QueueCommand.Location.queueTail(_:);
          if (v78) {
            uint64_t v22 = (unsigned int *)&enum case for PlaybackController.QueueCommand.Location.queueHead(_:);
          }
          (*(void (**)(char *, void, uint64_t))(v77 + 104))(v14, *v22, v7);
          dispatch thunk of PlaybackController.QueueController.addToQueue(uuids:location:)();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          sub_1001DCDF8(v19, v18, 0);
          (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v7);
        }
        else
        {
          BOOL v43 = (v78 & 1) == 0;
          unint64_t v44 = self;
          sub_1002F9400(v80, a3);
          v45.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v44 insertEpisodeUuids:v45.super.isa intoPlaybackQueueAtPosition:v43];
          uint64_t v46 = v19;
          uint64_t v47 = v18;
          unsigned __int8 v48 = 0;
LABEL_35:
          sub_1001DCDF8(v46, v47, v48);

          swift_release();
        }
        goto LABEL_65;
    }
  }
  return result;
}

void sub_1002FA798(char a1)
{
  type metadata accessor for HUDViewController.HUDType();
  __chkstk_darwin();
  unint64_t v4 = (unsigned int *)&enum case for HUDViewController.HUDType.addToQueue(_:);
  if (a1) {
    unint64_t v4 = (unsigned int *)&enum case for HUDViewController.HUDType.playNext(_:);
  }
  (*(void (**)(char *, void))(v3 + 104))((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *v4);
  id v5 = objc_allocWithZone((Class)type metadata accessor for HUDViewController());
  uint64_t v6 = (void *)HUDViewController.init(type:)();
  dispatch thunk of HUDViewController.present()();
}

void *sub_1002FA88C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_20;
        }
        uint64_t v10 = v5;
        id v11 = [v7 contentItemIdentifier];
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v16)
          {
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
        }
        ++v6;
        uint64_t v5 = v10;
        if (v9 == v10) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

BOOL sub_1002FAA4C(uint64_t a1)
{
  return sub_1002F9D48(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1002FAA70()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1002FAAB0()
{
  sub_1002F9C74(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 **)(v0 + 40), *(unsigned char **)(v0 + 48), *(unsigned __int8 **)(v0 + 56));
}

uint64_t sub_1002FAAC0()
{
  return swift_deallocObject();
}

uint64_t sub_1002FAAD0()
{
  return swift_deallocObject();
}

void sub_1002FAAE0()
{
  sub_1002FA798(*(unsigned char *)(v0 + 16));
}

uint64_t sub_1002FAAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v19 = (char *)&v37 - v18;
  int v20 = *(unsigned __int8 *)(a2 + 16);
  if (v20) {
    return v20 ^ 1u;
  }
  uint64_t v46 = v17;
  uint64_t v45 = result;
  uint64_t v40 = v9;
  uint64_t v41 = v8;
  uint64_t v42 = v5;
  int v44 = v20;
  uint64_t v43 = v4;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v21 = (void *)UIApp;
  if (UIApp)
  {
    unint64_t v52 = UInt64.int64Representation.getter;
    uint64_t v53 = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v50 = sub_10003B424;
    unint64_t v51 = &unk_100560378;
    uint64_t v22 = _Block_copy(&aBlock);
    id v23 = v21;
    id v24 = [v23 beginBackgroundTaskWithExpirationHandler:v22];
    _Block_release(v22);

    uint64_t v25 = *(void *)(a1 + 48);
    swift_beginAccess();
    *(void *)(a1 + 56) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    char v27 = (void *)swift_allocObject();
    v27[2] = a1;
    v27[3] = v24;
    v27[4] = v26;
    v27[5] = UInt64.int64Representation.getter;
    v27[6] = 0;
    swift_retain_n();
    swift_retain_n();
    sub_1002B096C((uint64_t)&aBlock);
    if (v51)
    {
      sub_100042FC4(&aBlock, (uint64_t)v48);
      sub_1000566BC();
      uint64_t v38 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      id v37 = v7;
      id v28 = *(void (**)(char *, uint64_t))(v46 + 8);
      v46 += 8;
      unint64_t v39 = v28;
      v28(v15, v45);
      uint64_t v29 = swift_allocObject();
      swift_weakInit();
      sub_100056D54((uint64_t)v48, (uint64_t)v47);
      uint64_t v30 = (void *)swift_allocObject();
      sub_100042FC4(v47, (uint64_t)(v30 + 2));
      v30[7] = v29;
      v30[8] = a1;
      v30[9] = sub_1002FCB18;
      v30[10] = v27;
      unint64_t v52 = sub_1002FCABC;
      uint64_t v53 = v30;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v50 = sub_10003B424;
      unint64_t v51 = &unk_1005603F0;
      char v31 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      char v32 = v19;
      unint64_t v33 = v11;
      unint64_t v34 = v37;
      uint64_t v35 = v43;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v36 = (void *)v38;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v31);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v35);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
      v39(v32, v45);
      sub_10004D2D8((uint64_t)v48);
    }
    else
    {
      sub_1002B0F90((uint64_t)&aBlock);
      sub_1002FC360(a1, (uint64_t)v24);
    }
    swift_release_n();
    swift_release();
    swift_release();
    int v20 = v44;
    return v20 ^ 1u;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002FB10C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchTime();
  __chkstk_darwin();
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin();
  uint64_t v17 = (char *)&v35 - v16;
  int v18 = *(unsigned __int8 *)(a2 + 16);
  if (v18) {
    return v18 ^ 1u;
  }
  uint64_t v44 = v15;
  uint64_t v43 = result;
  uint64_t v38 = v9;
  uint64_t v39 = v8;
  uint64_t v40 = v5;
  int v42 = v18;
  uint64_t v41 = v4;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v19 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v50 = UInt64.int64Representation.getter;
    unint64_t v51 = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    unsigned __int8 v48 = sub_10003B424;
    BOOL v49 = &unk_100560210;
    int v20 = _Block_copy(&aBlock);
    id v21 = v19;
    id v22 = [v21 beginBackgroundTaskWithExpirationHandler:v20];
    _Block_release(v20);

    uint64_t v23 = *(void *)(a1 + 48);
    swift_beginAccess();
    *(void *)(a1 + 56) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = (void *)swift_allocObject();
    void v25[2] = a1;
    v25[3] = v22;
    v25[4] = v24;
    v25[5] = UInt64.int64Representation.getter;
    v25[6] = 0;
    swift_retain_n();
    swift_retain_n();
    sub_1002B096C((uint64_t)&aBlock);
    if (v49)
    {
      sub_100042FC4(&aBlock, (uint64_t)v46);
      sub_1000566BC();
      uint64_t v36 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v35 = v7;
      uint64_t v26 = *(void (**)(char *, uint64_t))(v44 + 8);
      v44 += 8;
      id v37 = v26;
      v26(v13, v43);
      uint64_t v27 = swift_allocObject();
      swift_weakInit();
      sub_100056D54((uint64_t)v46, (uint64_t)v45);
      id v28 = (void *)swift_allocObject();
      sub_100042FC4(v45, (uint64_t)(v28 + 2));
      v28[7] = v27;
      v28[8] = a1;
      v28[9] = sub_1002FCB18;
      v28[10] = v25;
      uint64_t v50 = sub_1002FCABC;
      unint64_t v51 = v28;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      unsigned __int8 v48 = sub_10003B424;
      BOOL v49 = &unk_100560288;
      uint64_t v29 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      uint64_t v30 = v17;
      char v31 = v11;
      char v32 = v35;
      uint64_t v33 = v41;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      unint64_t v34 = (void *)v36;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v33);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v39);
      v37(v30, v43);
      sub_10004D2D8((uint64_t)v46);
    }
    else
    {
      sub_1002B0F90((uint64_t)&aBlock);
      sub_1002FC360(a1, (uint64_t)v22);
    }
    swift_release_n();
    swift_release();
    swift_release();
    int v18 = v42;
    return v18 ^ 1u;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002FB728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchTime();
  __chkstk_darwin();
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin();
  uint64_t v17 = (char *)&v35 - v16;
  int v18 = *(unsigned __int8 *)(a2 + 16);
  if (v18) {
    return v18 ^ 1u;
  }
  uint64_t v44 = v15;
  uint64_t v43 = result;
  uint64_t v38 = v9;
  uint64_t v39 = v8;
  uint64_t v40 = v5;
  int v42 = v18;
  uint64_t v41 = v4;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v19 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v50 = UInt64.int64Representation.getter;
    unint64_t v51 = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    unsigned __int8 v48 = sub_10003B424;
    BOOL v49 = &unk_100560170;
    int v20 = _Block_copy(&aBlock);
    id v21 = v19;
    id v22 = [v21 beginBackgroundTaskWithExpirationHandler:v20];
    _Block_release(v20);

    uint64_t v23 = *(void *)(a1 + 48);
    swift_beginAccess();
    *(void *)(a1 + 56) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = (void *)swift_allocObject();
    void v25[2] = a1;
    v25[3] = v22;
    v25[4] = v24;
    v25[5] = UInt64.int64Representation.getter;
    v25[6] = 0;
    swift_retain_n();
    swift_retain_n();
    sub_1002B096C((uint64_t)&aBlock);
    if (v49)
    {
      sub_100042FC4(&aBlock, (uint64_t)v46);
      sub_1000566BC();
      uint64_t v36 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v35 = v7;
      uint64_t v26 = *(void (**)(char *, uint64_t))(v44 + 8);
      v44 += 8;
      id v37 = v26;
      v26(v13, v43);
      uint64_t v27 = swift_allocObject();
      swift_weakInit();
      sub_100056D54((uint64_t)v46, (uint64_t)v45);
      id v28 = (void *)swift_allocObject();
      sub_100042FC4(v45, (uint64_t)(v28 + 2));
      v28[7] = v27;
      v28[8] = a1;
      v28[9] = sub_1002FCB18;
      v28[10] = v25;
      uint64_t v50 = sub_1002FCABC;
      unint64_t v51 = v28;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      unsigned __int8 v48 = sub_10003B424;
      BOOL v49 = &unk_1005601E8;
      uint64_t v29 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      uint64_t v30 = v17;
      char v31 = v11;
      char v32 = v35;
      uint64_t v33 = v41;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      unint64_t v34 = (void *)v36;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v33);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v39);
      v37(v30, v43);
      sub_10004D2D8((uint64_t)v46);
    }
    else
    {
      sub_1002B0F90((uint64_t)&aBlock);
      sub_1002FC360(a1, (uint64_t)v22);
    }
    swift_release_n();
    swift_release();
    swift_release();
    int v18 = v42;
    return v18 ^ 1u;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002FBD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchTime();
  __chkstk_darwin();
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin();
  uint64_t v17 = (char *)&v35 - v16;
  int v18 = *(unsigned __int8 *)(a2 + 16);
  if (v18) {
    return v18 ^ 1u;
  }
  uint64_t v44 = v15;
  uint64_t v43 = result;
  uint64_t v38 = v9;
  uint64_t v39 = v8;
  uint64_t v40 = v5;
  int v42 = v18;
  uint64_t v41 = v4;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v19 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v50 = UInt64.int64Representation.getter;
    unint64_t v51 = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    unsigned __int8 v48 = sub_10003B424;
    BOOL v49 = &unk_1005600D0;
    int v20 = _Block_copy(&aBlock);
    id v21 = v19;
    id v22 = [v21 beginBackgroundTaskWithExpirationHandler:v20];
    _Block_release(v20);

    uint64_t v23 = *(void *)(a1 + 48);
    swift_beginAccess();
    *(void *)(a1 + 56) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = (void *)swift_allocObject();
    void v25[2] = a1;
    v25[3] = v22;
    v25[4] = v24;
    v25[5] = UInt64.int64Representation.getter;
    v25[6] = 0;
    swift_retain_n();
    swift_retain_n();
    sub_1002B096C((uint64_t)&aBlock);
    if (v49)
    {
      sub_100042FC4(&aBlock, (uint64_t)v46);
      sub_1000566BC();
      uint64_t v36 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v35 = v7;
      uint64_t v26 = *(void (**)(char *, uint64_t))(v44 + 8);
      v44 += 8;
      id v37 = v26;
      v26(v13, v43);
      uint64_t v27 = swift_allocObject();
      swift_weakInit();
      sub_100056D54((uint64_t)v46, (uint64_t)v45);
      id v28 = (void *)swift_allocObject();
      sub_100042FC4(v45, (uint64_t)(v28 + 2));
      v28[7] = v27;
      v28[8] = a1;
      v28[9] = sub_1002FCB18;
      v28[10] = v25;
      uint64_t v50 = sub_1002FCABC;
      unint64_t v51 = v28;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      unsigned __int8 v48 = sub_10003B424;
      BOOL v49 = &unk_100560148;
      uint64_t v29 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      uint64_t v30 = v17;
      char v31 = v11;
      char v32 = v35;
      uint64_t v33 = v41;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      unint64_t v34 = (void *)v36;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v33);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v39);
      v37(v30, v43);
      sub_10004D2D8((uint64_t)v46);
    }
    else
    {
      sub_1002B0F90((uint64_t)&aBlock);
      sub_1002FC360(a1, (uint64_t)v22);
    }
    swift_release_n();
    swift_release();
    swift_release();
    int v18 = v42;
    return v18 ^ 1u;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002FC360(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(a1 + 56) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t result = UIApp;
  if (UIApp)
  {
    [UIApp endBackgroundTask:a2];
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      *(unsigned char *)(result + 16) = 0;
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FC410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_beginAccess();
  *(void *)(a1 + 56) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t result = UIApp;
  if (UIApp)
  {
    [UIApp endBackgroundTask:a2];
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      *(unsigned char *)(Strong + 16) = 0;
      uint64_t Strong = swift_release();
    }
    return a4(Strong);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FC4D8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  id v28 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v23 - v15;
  sub_1002B096C((uint64_t)&aBlock);
  if (v31)
  {
    sub_100042FC4(&aBlock, (uint64_t)v35);
    sub_1000566BC();
    uint64_t v23 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
    v24(v14, v11);
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    sub_100056D54((uint64_t)v35, (uint64_t)v34);
    int v18 = (void *)swift_allocObject();
    sub_100042FC4(v34, (uint64_t)(v18 + 2));
    v18[7] = v17;
    v18[8] = a1;
    v18[9] = v28;
    v18[10] = a3;
    char v32 = sub_1002FCABC;
    uint64_t v33 = v18;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v30 = sub_10003B424;
    char v31 = &unk_100560080;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_10002FC48();
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_10002FBEC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    int v20 = (void *)v23;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
    v24(v16, v11);
    return sub_10004D2D8((uint64_t)v35);
  }
  else
  {
    uint64_t v22 = sub_1002B0F90((uint64_t)&aBlock);
    return v28(v22);
  }
}

uint64_t sub_1002FC8F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_100041A98(a1, v9);
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  uint64_t v12 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v10 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(sub_1002FCB08, v11, v9, v10);

  return swift_release();
}

uint64_t sub_1002FC9D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1002FC4D8(a2, a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1002FCA4C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTTestActionRunner()
{
  return self;
}

uint64_t sub_1002FCA80()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002FCAC0()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002FCB08()
{
  return sub_1002FC9D0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

void *sub_1002FCB30(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_20:
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v9 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_17:
            __break(1u);
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_20;
          }
          uint64_t v8 = *(void *)(a1 + 8 * i + 32);
          swift_retain();
          unint64_t v9 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_17;
          }
        }
        BOOL v10 = *(void *)(v8 + 16) == a2 && *(void *)(v8 + 24) == a3;
        if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
          swift_release();
        }
        if (v9 == v6) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1002FCCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  unint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v48 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchTime();
  __chkstk_darwin();
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin();
  int v18 = *(unsigned __int8 *)(a2 + 16);
  if (v18) {
    return v18 ^ 1u;
  }
  uint64_t v46 = (char *)&v37 - v16;
  uint64_t v38 = v12;
  uint64_t v39 = v17;
  uint64_t v47 = v15;
  uint64_t v40 = v9;
  uint64_t v41 = v10;
  uint64_t v42 = v7;
  uint64_t v43 = v6;
  int v45 = v18;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v19 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v54 = UInt64.int64Representation.getter;
    id v55 = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v52 = sub_10003B424;
    uint64_t v53 = &unk_1005602D8;
    int v20 = _Block_copy(&aBlock);
    swift_retain();
    id v21 = v19;
    id v22 = [v21 beginBackgroundTaskWithExpirationHandler:v20];
    _Block_release(v20);

    uint64_t v23 = *(void *)(a1 + 48);
    swift_beginAccess();
    *(void *)(a1 + 56) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = (void *)swift_allocObject();
    void v25[2] = a1;
    v25[3] = v22;
    v25[4] = v24;
    v25[5] = sub_1002FD574;
    v25[6] = a3;
    swift_retain_n();
    swift_retain_n();
    uint64_t v44 = a3;
    swift_retain_n();
    sub_1002B096C((uint64_t)&aBlock);
    if (v53)
    {
      sub_100042FC4(&aBlock, (uint64_t)v50);
      sub_1000566BC();
      uint64_t v37 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v39 = *(void *)(v39 + 8);
      ((void (*)(char *, uint64_t))v39)(v14, v47);
      uint64_t v26 = swift_allocObject();
      swift_weakInit();
      sub_100056D54((uint64_t)v50, (uint64_t)v49);
      uint64_t v27 = (void *)swift_allocObject();
      sub_100042FC4(v49, (uint64_t)(v27 + 2));
      v27[7] = v26;
      v27[8] = a1;
      v27[9] = sub_1002FCB18;
      v27[10] = v25;
      uint64_t v54 = sub_1002FCABC;
      id v55 = v27;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      unint64_t v52 = sub_10003B424;
      uint64_t v53 = &unk_100560350;
      id v28 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      uint64_t v29 = v38;
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      uint64_t v30 = v40;
      uint64_t v31 = v43;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      char v32 = v46;
      uint64_t v33 = (void *)v37;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v28);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v41);
      ((void (*)(char *, uint64_t))v39)(v32, v47);
      sub_10004D2D8((uint64_t)v50);
      swift_release_n();
      swift_release_n();
      swift_release();
LABEL_9:
      swift_release();
      int v18 = v45;
      return v18 ^ 1u;
    }
    sub_1002B0F90((uint64_t)&aBlock);
    *(void *)(a1 + 56) = _swiftEmptyArrayStorage;
    uint64_t v34 = v44;
    swift_retain();
    swift_bridgeObjectRelease();
    if (UIApp)
    {
      [UIApp endBackgroundTask:v22];
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        *(unsigned char *)(Strong + 16) = 0;
        swift_release();
      }
      swift_beginAccess();
      *(void *)(v34 + 16) = 0;
      swift_release_n();
      swift_release();
      swift_release();
      swift_release_n();
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1002FD3C4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  unint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = (unint64_t)sub_1002FCB30(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5 >> 62)
  {
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_3;
    }
LABEL_10:
    return swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = *(void *)(v5 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  type metadata accessor for MTTestActionRunner();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 0;
  *(void *)(v8 + 16) = v9;
  swift_retain();
  swift_retain();
  sub_1002FCCB4(v7, v9, v8);
  swift_release();
  swift_release_n();

  return swift_release();
}

uint64_t sub_1002FD53C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002FD574()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = 0;
  return swift_release();
}

uint64_t sub_1002FD5BC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002FD604()
{
  return sub_1002FC410(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1002FD618()
{
  sub_10004D2D8(v0 + 16);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002FD668()
{
  return sub_1002FC8F0(v0 + 2, v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_1002FD6B0()
{
  sub_100054B78((uint64_t *)&unk_1005F8260);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D020;
  *(void *)(inited + 32) = static AdamID.parse(_:)();
  *(void *)(inited + 40) = static AdamID.parse(_:)();
  *(void *)(inited + 48) = static AdamID.parse(_:)();
  *(void *)(inited + 56) = static AdamID.parse(_:)();
  *(void *)(inited + 64) = static AdamID.parse(_:)();
  Swift::Int v1 = sub_100172884(inited);
  uint64_t result = swift_setDeallocating();
  qword_1006019D0 = v1;
  return result;
}

uint64_t sub_1002FD854()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!v3
    || (v15[0] = v3,
        type metadata accessor for ContextActionsConfiguration(),
        swift_retain(),
        sub_100054B78(&qword_100601AF8),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    return sub_100054B1C((uint64_t)&v12, &qword_100601AF0);
  }
  if (!*((void *)&v13 + 1)) {
    return sub_100054B1C((uint64_t)&v12, &qword_100601AF0);
  }
  sub_100042FC4(&v12, (uint64_t)v15);
  uint64_t v4 = v16;
  sub_100041A98(v15, v16);
  unint64_t v5 = sub_100210150(v4);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = v5;
    sub_100056D54((uint64_t)v15, (uint64_t)&v12);
    type metadata accessor for ChannelContextActionConfiguration(0);
    if (swift_dynamicCast())
    {
      swift_release();
      char v8 = 1;
    }
    else
    {
      char v8 = 5;
    }
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestContentKind) = v8;
    uint64_t v10 = v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID;
    *(void *)uint64_t v10 = v7;
    *(unsigned char *)(v10 + 8) = 0;
    InterestStateController.stateMachine(for:)();
    char v11 = InterestStateMachine.currentState.getter();
    swift_release();
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestState) = v11;
  }
  return sub_10004D2D8((uint64_t)v15);
}

uint64_t sub_1002FD9F0()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID + 8)) {
    goto LABEL_20;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestState) == 4) {
    goto LABEL_20;
  }
  Swift::UInt64 v1 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID);
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess();
  if (*v2)
  {
    type metadata accessor for PodcastContextActionConfiguration(0);
    if (swift_dynamicCastClass()) {
      goto LABEL_20;
    }
  }
  uint64_t v3 = ContentKind.rawValue.getter();
  uint64_t v5 = v4;
  if (v3 == ContentKind.rawValue.getter() && v5 == v6) {
    goto LABEL_16;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_17;
  }
  uint64_t v9 = ContentKind.rawValue.getter();
  uint64_t v11 = v10;
  if (v9 == ContentKind.rawValue.getter() && v11 == v12)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
LABEL_17:
    if (qword_1005F5AB0 != -1) {
      swift_once();
    }
    if (!sub_10030A984(v1, qword_1006019D0)) {
      goto LABEL_22;
    }
LABEL_20:
    char v15 = 0;
    return v15 & 1;
  }
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_17;
  }
LABEL_22:
  uint64_t v17 = InterestState.rawValue.getter();
  uint64_t v19 = v18;
  char v15 = 1;
  if (v17 != InterestState.rawValue.getter() || v19 != v20)
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21)
    {
      char v15 = 1;
      return v15 & 1;
    }
    uint64_t v22 = InterestState.rawValue.getter();
    uint64_t v24 = v23;
    if (v22 == InterestState.rawValue.getter() && v24 == v25) {
      char v15 = 1;
    }
    else {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_1002FDC80()
{
  uint64_t v1 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsFieldInclusionRequest();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for MetricsData();
  uint64_t v10 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v13 - 8);
  char v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for FavoriteInterestAction();
  uint64_t v39 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  uint64_t result = swift_beginAccess();
  if (*v18)
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID + 8) & 1) == 0)
    {
      uint64_t v35 = v15;
      uint64_t v33 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID);
      uint64_t v20 = v33;
      int v36 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestContentKind);
      sub_100054B78((uint64_t *)&unk_1006027F0);
      unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v22 = swift_allocObject();
      uint64_t v34 = v22;
      *(_OWORD *)(v22 + 16) = xmmword_10046D010;
      unint64_t v32 = v22 + v21;
      v43[0] = v20;
      sub_1001A5874();
      swift_retain();
      void v29[2] = BinaryInteger.description.getter();
      uint64_t v23 = static MetricsTargetType.button.getter();
      uint64_t v31 = v3;
      v29[1] = v23;
      v29[0] = static MetricsActionType.favorite.getter();
      static MetricsActionContext.contextual.getter();
      uint64_t v30 = v6;
      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
      static MetricsDataConfiguration.default.getter();
      static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
      sub_1002DFF70((uint64_t)v43, (uint64_t)v46);
      sub_100053884((uint64_t)v46);
      uint64_t v45 = v43[2];
      sub_1000537F4((uint64_t)&v45);
      uint64_t v44 = v43[3];
      sub_1000537F4((uint64_t)&v44);
      sub_1000536BC(v43[4]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
      uint64_t v25 = v30;
      static MetricsFieldInclusionRequest.impressionsSnapshot.getter();
      MetricsData.removingIncludedField(_:)();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v41);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v38);
      ScalarDictionary.init()();
      ActionMetrics.init(data:custom:)();
      FavoriteInterestAction.init(adamID:interestContentKind:actionMetrics:)();
      uint64_t v26 = v37;
      v42[3] = v37;
      v42[4] = sub_1002FE7CC(&qword_100601AE8, (void (*)(uint64_t))&type metadata accessor for FavoriteInterestAction);
      uint64_t v27 = sub_10004A244(v42);
      uint64_t v28 = v39;
      (*(void (**)(uint64_t *, char *, uint64_t))(v39 + 16))(v27, v17, v26);
      ContextActionsConfiguration.perform(_:)();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v26);
      return sub_10004D2D8((uint64_t)v42);
    }
  }
  return result;
}

uint64_t sub_1002FE264()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_contextActionType, &qword_1005F9A58);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1002FE354()
{
  return type metadata accessor for FavoriteContextAction();
}

uint64_t type metadata accessor for FavoriteContextAction()
{
  uint64_t result = qword_100601A18;
  if (!qword_100601A18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002FE3A8()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1002FE4C0()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0xE800000000000000;
  v1._object = (void *)0x80000001004D6890;
  v1._uint64_t countAndFlagsBits = 0xD000000000000015;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x657469726F766146;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002FE56C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1002FE5E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_contextActionType, a1);
}

uint64_t sub_1002FE600(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  return sub_1002FD854();
}

uint64_t sub_1002FE66C()
{
  return swift_retain();
}

uint64_t sub_1002FE6B8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1002FE70C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1002FE774(uint64_t a1)
{
  uint64_t result = sub_1002FE7CC((unint64_t *)&unk_100608C70, (void (*)(uint64_t))type metadata accessor for FavoriteContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002FE7CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002FE814(unsigned __int8 *a1, char *a2)
{
  return sub_1002ED2C4(*a1, *a2);
}

Swift::Int sub_1002FE820()
{
  return sub_100174410();
}

uint64_t sub_1002FE828()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002FE8EC()
{
  return sub_100174798();
}

unint64_t sub_1002FE8F4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100302638(*a1);
  *a2 = result;
  return result;
}

void sub_1002FE924(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x6465776F6C6C6F66;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x7972617262696CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000012;
      a1[1] = 0x80000001004D1DC0;
      break;
    case 3:
      *a1 = 0x65726F7473;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1002FE9C0(uint64_t a1)
{
  unint64_t v2 = sub_10030253C();

  return EnumStringConvertible<>.description.getter(a1, v2);
}

void sub_1002FE9FC(uint64_t a1, Swift::UInt a2, char a3)
{
  Swift::UInt v3 = a2;
  switch(a3)
  {
    case 1:
      Hasher._combine(_:)(1uLL);
      break;
    case 2:
      Hasher._combine(_:)(2uLL);
      break;
    case 3:
      Hasher._combine(_:)(3uLL);
      break;
    case 4:
      Swift::UInt v3 = a2 + 4;
      break;
    default:
      Hasher._combine(_:)(0);
      break;
  }
  Hasher._combine(_:)(v3);
}

Swift::Int sub_1002FEA94()
{
  Swift::UInt v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  sub_1002FE9FC((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1002FEAE4(uint64_t a1)
{
  sub_1002FE9FC(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_1002FEAF0()
{
  Swift::UInt v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  sub_1002FE9FC((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

BOOL sub_1002FEB3C(uint64_t a1, uint64_t a2)
{
  return sub_100301BFC(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_1002FEB54(char *a1, char *a2)
{
  return sub_1002ED454(*a1, *a2);
}

Swift::Int sub_1002FEB60()
{
  return sub_10017438C();
}

uint64_t sub_1002FEB68()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002FEBD8()
{
  return sub_100174718();
}

uint64_t sub_1002FEBE0@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100554620;
  return sub_1002FED04(v2, a1, a2);
}

void sub_1002FEBEC(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000011;
  if (!*v1) {
    unint64_t v2 = 0xD000000000000012;
  }
  unint64_t v3 = 0x80000001004D1E00;
  if (!*v1) {
    unint64_t v3 = 0x80000001004D1DE0;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1002FEC2C(uint64_t a1)
{
  unint64_t v2 = sub_100302590();

  return EnumStringConvertible<>.description.getter(a1, v2);
}

uint64_t sub_1002FEC68(char *a1, char *a2)
{
  return sub_1002ED4FC(*a1, *a2);
}

Swift::Int sub_1002FEC74()
{
  return sub_100174304();
}

uint64_t sub_1002FEC7C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002FECF0()
{
  return sub_100174694();
}

uint64_t sub_1002FECF8@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100554670;
  return sub_1002FED04(v2, a1, a2);
}

uint64_t sub_1002FED04@<X0>(Swift::OpaquePointer cases@<0:X3>, Swift::String *a2@<X0>, char *a3@<X8>)
{
  Swift::Int v4 = _findStringSwitchCase(cases:string:)(cases, *a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 == 1) {
    char v6 = 1;
  }
  else {
    char v6 = 2;
  }
  if (!v4) {
    char v6 = 0;
  }
  *a3 = v6;
  return result;
}

void sub_1002FED60(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000010;
  }
  else {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x80000001004D1E20;
  if (*v1) {
    unint64_t v3 = 0x80000001004D1E40;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1002FEDA4(uint64_t a1)
{
  unint64_t v2 = sub_1003025E4();

  return EnumStringConvertible<>.description.getter(a1, v2);
}

uint64_t sub_1002FEDE0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = 0x697469736E617254;
  if (a3) {
    uint64_t v4 = 0x3A6E6F28706F6F6CLL;
  }
  uint64_t v13 = v4;
  unint64_t v5 = 0xE100000000000000;
  sub_10021C058();
  v6._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 46;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_bridgeObjectRetain();
    v8._uint64_t countAndFlagsBits = Array.description.getter();
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9._uint64_t countAndFlagsBits = 41;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    uint64_t v10 = 0x746365666665202CLL;
    unint64_t v5 = 0xEB00000000203A73;
  }
  else
  {
    uint64_t v10 = 41;
  }
  unint64_t v11 = v5;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1002FEF34()
{
  return sub_1002FEDE0(*v0, *((void *)v0 + 1), v0[16]);
}

uint64_t sub_1002FEF44()
{
  sub_10004D2D8(v0 + 16);

  sub_10004D2D8(v0 + 64);
  sub_10004D2D8(v0 + 104);

  return swift_deallocClassInstance();
}

uint64_t sub_1002FEF94(void *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  Swift::String v9 = *(void **)(v8 - 8);
  uint64_t v81 = v8;
  unint64_t v82 = v9;
  __chkstk_darwin();
  unint64_t v11 = &v74[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  unint64_t v84 = &v74[-v12];
  sub_100054B78(&qword_1005FBC48);
  __chkstk_darwin();
  uint64_t v14 = &v74[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for PodcastStateModel();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = &v74[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v19 = a1;
  PodcastStateModel.init(podcast:)();
  uint64_t v20 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v83 = v15;
  if (v20(v14, 1, v15) == 1)
  {
    sub_100301E9C((uint64_t)v14);
    goto LABEL_6;
  }
  uint64_t v21 = a4;
  uint64_t v22 = v80;
  uint64_t v77 = v11;
  uint64_t v78 = a2;
  unsigned int v79 = a3;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v18, v14, v83);
  id v23 = [v19 managedObjectContext];
  if (v23)
  {
    uint64_t v24 = v23;
    unint64_t v84 = (unsigned char *)v16;
    uint64_t v25 = v22;
    uint64_t v26 = v22 + 2;
    uint64_t v27 = v22[5];
    uint64_t v28 = v22[6];
    sub_100041A98(v26, v27);
    char v29 = (*(uint64_t (**)(unsigned char *, void *, uint64_t, void, uint64_t, uint64_t, uint64_t))(v28 + 8))(v18, v24, v78, v79, v21, v27, v28);
    uint64_t v59 = v58;
    sub_10030169C(v19, v29);
    if (v59)
    {
      uint64_t v76 = v18;
      uint64_t v60 = *(void *)(v59 + 16);
      if (v60)
      {
        id v75 = v24;
        swift_bridgeObjectRetain();
        unint64_t v82 = v25 + 8;
        swift_beginAccess();
        uint64_t v81 = v59;
        char v61 = (unsigned char *)(v59 + 40);
        unint64_t v62 = v84;
        while (1)
        {
          if (*v61)
          {
            if (*v61 != 1)
            {
              switch(*((void *)v61 - 1))
              {
                case 1:
                  uint64_t v65 = v25[11];
                  uint64_t v66 = v25[12];
                  sub_100041A98(v82, v65);
                  uint64_t v67 = *(void *)(v65 - 8);
                  __chkstk_darwin();
                  uint64_t v69 = &v74[-((v68 + 15) & 0xFFFFFFFFFFFFFFF0)];
                  (*(void (**)(unsigned char *))(v67 + 16))(v69);
                  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v66);
                  (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v69, v65);
                  PassthroughSubject.send(_:)();
                  swift_release();
                  unint64_t v62 = v84;
                  break;
                case 2:
                  uint64_t v70 = v25[16];
                  uint64_t v71 = v25[17];
                  sub_100041A98(v25 + 13, v70);
                  (*(void (**)(id, uint64_t, uint64_t))(v71 + 8))(v19, v70, v71);
                  break;
                case 3:
                  uint64_t v72 = v25[16];
                  uint64_t v73 = v25[17];
                  sub_100041A98(v25 + 13, v72);
                  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v73 + 16))(v19, 1, v72, v73);
                  break;
                case 4:
                  [v19 setIsTransitioningFromImplicit:1];
                  break;
                default:
                  id v64 = (id)v25[7];
                  SyncKeysRepository.isNonFollowedShowsSyncDirty.setter();

                  break;
              }
              goto LABEL_23;
            }
            id v63 = (id)v25[7];
            SyncKeysRepository.markBookmarksSyncDirty(_:for:)();
          }
          else
          {
            id v63 = (id)v25[7];
            SyncKeysRepository.markSubscriptionSyncDirty(_:for:)();
          }

LABEL_23:
          v61 += 16;
          if (!--v60)
          {

            swift_bridgeObjectRelease_n();
            goto LABEL_36;
          }
        }
      }
      swift_bridgeObjectRelease();

      unint64_t v62 = v84;
LABEL_36:
      uint64_t v18 = v76;
    }
    else
    {

      unint64_t v62 = v84;
    }
    return (*((uint64_t (**)(unsigned char *, uint64_t))v62 + 1))(v18, v83);
  }
  (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v83);
LABEL_6:
  uint64_t v30 = v84;
  static Logger.podcastsStatesCoordination.getter();
  id v31 = v19;
  unint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v85[0] = v35;
    *(_DWORD *)uint64_t v34 = 136381699;
    id v36 = [v31 title];
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v39;
    }
    else
    {
      uint64_t v38 = 0x6C746974206F6E3CLL;
      unint64_t v40 = 0xEA00000000003E65;
    }
    id v86 = (id)sub_10004B974(v38, v40, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    id v42 = [v31 uuid];
    uint64_t v83 = v35;
    if (v42)
    {
      uint64_t v43 = v42;
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v46 = v45;
    }
    else
    {
      unint64_t v46 = 0xE700000000000000;
      uint64_t v44 = 0x3E7974706D653CLL;
    }
    id v86 = (id)sub_10004B974(v44, v46, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 22) = 2080;
    id v86 = [v31 managedObjectContext];
    sub_100054B78((uint64_t *)&unk_100603900);
    uint64_t v47 = String.init<A>(describing:)();
    id v86 = (id)sub_10004B974(v47, v48, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 32) = 2049;
    id v49 = [v31 storeCollectionId];

    id v86 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v34 + 42) = 2081;
    id v50 = [v31 feedURL];
    if (v50)
    {
      unint64_t v51 = v50;
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v54 = v53;

      uint64_t v55 = v52;
      uint64_t v56 = v81;
      uint64_t v57 = v84;
    }
    else
    {
      unint64_t v54 = 0xE700000000000000;
      uint64_t v56 = v81;
      uint64_t v57 = v84;
      uint64_t v55 = 0x3E7974706D653CLL;
    }
    id v86 = (id)sub_10004B974(v55, v54, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Unable to create PodcastStateModel from Podcast, or Podcast without a valid managedObjectContext. Podcast: %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s.", (uint8_t *)v34, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return ((uint64_t (*)(unsigned char *, uint64_t))v82[1])(v57, v56);
  }
  else
  {

    return ((uint64_t (*)(unsigned char *, uint64_t))v82[1])(v30, v81);
  }
}

void sub_1002FFDD0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5, NSObject *a6)
{
  os_log_t v111 = a6;
  LODWORD(v110) = a5;
  uint64_t v109 = a4;
  uint64_t v8 = type metadata accessor for PodcastStateModel();
  uint64_t v117 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v108 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v107 = (char *)&v101 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v115 = (char *)&v101 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v104 = (char *)&v101 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v105 = (char *)&v101 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v101 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v114 = (char *)&v101 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v113 = (char *)&v101 - v26;
  __chkstk_darwin(v25);
  uint64_t v112 = (char *)&v101 - v27;
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  __chkstk_darwin(v30);
  uint64_t v106 = (char *)&v101 - v31;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  os_log_type_t v33 = (void *)Strong;
  uint64_t v103 = v29;
  uint64_t v36 = PodcastStateModel.id.getter();
  uint64_t v116 = v33;
  if (v35)
  {
    uint64_t v37 = v34;
    if (v35 == 1)
    {
      NSString v38 = String._bridgeToObjectiveC()();
      sub_10021C03C(v36, v37, 1u);
      id v39 = [a3 podcastForUuid:v38];
    }
    else
    {
      NSString v38 = String._bridgeToObjectiveC()();
      sub_10021C03C(v36, v37, 2u);
      id v39 = [a3 podcastForFeedUrl:v38];
    }
    unint64_t v40 = (char *)v39;

    os_log_type_t v33 = v116;
    if (v40) {
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v41 = v22;
    id v42 = a3;
    uint64_t v43 = v106;
    static Logger.podcastsStatesCoordination.getter();
    uint64_t v44 = v117;
    unint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 16);
    v45(v112, a2, v8);
    v45(v113, a2, v8);
    v45(v114, a2, v8);
    uint64_t v115 = v41;
    v45(v41, a2, v8);
    unint64_t v46 = v105;
    v45(v105, a2, v8);
    uint64_t v47 = v43;
    id v48 = v42;
    id v49 = Logger.logObject.getter();
    int v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, (os_log_type_t)v50))
    {
      LODWORD(v110) = v50;
      os_log_t v111 = v49;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      v118[0] = v109;
      *(_DWORD *)uint64_t v51 = 136316419;
      id v52 = [v48 name];
      uint64_t v102 = v28;
      if (v52)
      {
        unint64_t v53 = v52;
        uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v56 = v55;
      }
      else
      {
        unint64_t v56 = 0xE500000000000000;
        uint64_t v54 = 0x3E6C696E3CLL;
      }
      uint64_t v83 = v112;
      uint64_t v119 = sub_10004B974(v54, v56, v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2081;
      uint64_t v84 = PodcastStateModel.id.getter();
      uint64_t v86 = v85;
      unsigned __int8 v88 = v87;
      uint64_t v89 = PodcastIdentifier.description.getter();
      unint64_t v91 = v90;
      sub_10021C03C(v84, v86, v88);
      uint64_t v119 = sub_10004B974(v89, v91, v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v92 = *(void (**)(char *, uint64_t))(v117 + 8);
      v92(v83, v8);
      *(_WORD *)(v51 + 22) = 2080;
      uint64_t v93 = v113;
      uint64_t v94 = PodcastStateModel.uuid.getter();
      uint64_t v119 = sub_10004B974(v94, v95, v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v92(v93, v8);
      *(_WORD *)(v51 + 32) = 1024;
      id v96 = v114;
      int v97 = PodcastStateModel.isHidden.getter() & 1;
      v92(v96, v8);
      LODWORD(v119) = v97;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v51 + 38) = 1024;
      uint64_t v98 = v115;
      LODWORD(v96) = PodcastStateModel.isFollowed.getter() & 1;
      v92(v98, v8);
      LODWORD(v119) = v96;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v51 + 44) = 1024;
      unint64_t v99 = v105;
      LODWORD(v93) = PodcastStateModel.isImplicitlyFollowed.getter() & 1;
      v92(v99, v8);
      LODWORD(v119) = v93;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_t v100 = v111;
      _os_log_impl((void *)&_mh_execute_header, v111, (os_log_type_t)v110, "Unable to find corresponding MTPodcast in context %s for PodcastStateModel with ID: %{private}s, uuid: %s, isHidden: %{BOOL}d, isFollowed: %{BOOL}d, isImplicitlyFollowed: %{BOOL}d.", (uint8_t *)v51, 0x32u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      (*(void (**)(char *, uint64_t))(v103 + 8))(v106, v102);
    }
    else
    {
      unint64_t v82 = *(void (**)(char *, uint64_t))(v44 + 8);
      v82(v46, v8);
      v82(v115, v8);
      v82(v114, v8);

      swift_release();
      v82(v112, v8);
      v82(v113, v8);

      (*(void (**)(char *, uint64_t))(v103 + 8))(v47, v28);
    }
    return;
  }
  unint64_t v40 = (char *)[a3 podcastForStoreId:v36];
  if (!v40) {
    goto LABEL_6;
  }
LABEL_11:
  uint64_t v114 = v40;
  uint64_t v102 = v28;
  uint64_t v57 = v33 + 2;
  uint64_t v58 = v33;
  uint64_t v59 = v33[5];
  uint64_t v60 = v33[6];
  sub_100041A98(v57, v59);
  char v61 = (*(uint64_t (**)(uint64_t, void *, uint64_t, void, os_log_t, uint64_t, uint64_t))(v60 + 8))(a2, a3, v109, v110, v111, v59, v60);
  uint64_t v113 = 0;
  uint64_t v63 = v62;
  id v64 = v114;
  sub_10030169C(v114, v61);
  uint64_t v65 = v58;
  if (v63)
  {
    uint64_t v66 = *(void *)(v63 + 16);
    if (v66)
    {
      uint64_t v67 = v58 + 13;
      uint64_t v68 = v58 + 8;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      for (unint64_t i = (unsigned char *)(v63 + 40); ; i += 16)
      {
        if (*i)
        {
          if (*i != 1)
          {
            switch(*((void *)i - 1))
            {
              case 1:
                uint64_t v72 = v65[11];
                uint64_t v73 = v65[12];
                uint64_t v74 = sub_100041A98(v68, v72);
                uint64_t v75 = *(void *)(v72 - 8);
                __chkstk_darwin(v74);
                uint64_t v77 = (char *)&v101 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
                (*(void (**)(char *))(v75 + 16))(v77);
                (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v73);
                (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v72);
                uint64_t v65 = v116;
                PassthroughSubject.send(_:)();
                swift_release();
                break;
              case 2:
                uint64_t v78 = v65[16];
                uint64_t v79 = v65[17];
                sub_100041A98(v67, v78);
                (*(void (**)(char *, uint64_t, uint64_t))(v79 + 8))(v114, v78, v79);
                break;
              case 3:
                uint64_t v80 = v65[16];
                uint64_t v81 = v65[17];
                sub_100041A98(v67, v80);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 16))(v114, 1, v80, v81);
                break;
              case 4:
                [v114 setIsTransitioningFromImplicit:1];
                break;
              default:
                id v71 = (id)v65[7];
                SyncKeysRepository.isNonFollowedShowsSyncDirty.setter();

                break;
            }
            goto LABEL_16;
          }
          id v70 = (id)v65[7];
          SyncKeysRepository.markBookmarksSyncDirty(_:for:)();
        }
        else
        {
          id v70 = (id)v65[7];
          SyncKeysRepository.markSubscriptionSyncDirty(_:for:)();
        }

LABEL_16:
        if (!--v66)
        {
          swift_release();

          swift_bridgeObjectRelease_n();
          return;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
}

uint64_t sub_100300DBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v41 = a4;
  sub_100054B78(&qword_1005FBC48);
  __chkstk_darwin();
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PodcastStateModel();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  v35[6] = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)v35 - v12;
  __chkstk_darwin();
  uint64_t v15 = (char *)v35 - v14;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  __chkstk_darwin();
  uint64_t v37 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v20 = (char *)v35 - v19;
  __chkstk_darwin();
  uint64_t v22 = (char *)v35 - v21;
  uint64_t v38 = a2;
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [a1 podcastForUuid:v23];

  if (v24)
  {
    id v36 = v24;
    PodcastStateModel.init(podcast:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_100301E9C((uint64_t)v8);
      static Logger.podcastsStatesCoordination.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      swift_bridgeObjectRetain_n();
      uint64_t v26 = Logger.logObject.getter();
      if (os_log_type_enabled(v26, v25))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_10004B974(v38, a3, &v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v26, v25, "Failed to create PodcastStateModel from show %s for current podcast state lookup.", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v20, v39);
      char v31 = 4;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
      char v33 = PodcastStateModel.sanitizedState()();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
      v34(v13, v9);

      switch(v33)
      {
        case 1:
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v15, v9);
          char v31 = 1;
          break;
        case 2:
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v15, v9);
          char v31 = 2;
          break;
        case 3:
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v15, v9);
          goto LABEL_9;
        default:
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v15, v9);
          char v31 = 0;
          break;
      }
    }
  }
  else
  {
    static Logger.podcastsStatesCoordination.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v29 = Logger.logObject.getter();
    if (os_log_type_enabled(v29, v28))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_10004B974(v38, a3, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      char v31 = 3;
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v29, v28, "Failed to locate show %s for current podcast state lookup.", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v22, v39);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v22, v39);
LABEL_9:
      char v31 = 3;
    }
  }
  *uint64_t v41 = v31;
  return result;
}

id sub_10030169C(id a1, char a2)
{
  switch(a2)
  {
    case 1:
      [a1 setSubscribed:0];
      goto LABEL_6;
    case 2:
      [a1 setSubscribed:0];
      [a1 setIsImplicitlyFollowed:1];
      goto LABEL_7;
    case 3:
      [a1 setSubscribed:0];
      [a1 setIsImplicitlyFollowed:0];
      uint64_t v4 = v2[16];
      uint64_t v5 = v2[17];
      sub_100041A98(v2 + 13, v4);
      return (id)(*(uint64_t (**)(id, uint64_t, uint64_t))(v5 + 24))(a1, v4, v5);
    default:
      [a1 setSubscribed:1];
LABEL_6:
      [a1 setIsImplicitlyFollowed:0];
LABEL_7:
      return [a1 setHidden:0];
  }
}

uint64_t sub_1003017E8(uint64_t a1, unint64_t a2)
{
  return sub_100301DBC(a2);
}

unint64_t sub_1003017F0(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x776F6C6C6F666E75;
      goto LABEL_7;
    case 2:
      uint64_t v4 = 0x6B72616D6B6F6F62;
      goto LABEL_9;
    case 3:
      uint64_t v4 = 0x616D6B6F6F626E75;
LABEL_9:
      uint64_t v9 = v4;
      uint64_t v6 = MTBookmarksSyncType.description.getter();
      goto LABEL_10;
    case 4:
      unint64_t result = 0x64616F6C6E776F64;
      switch(a1)
      {
        case 1:
          unint64_t result = 0x6F4465766F6D6572;
          break;
        case 2:
          unint64_t result = 0xD000000000000016;
          break;
        case 3:
          unint64_t result = 0xD000000000000010;
          break;
        case 4:
          unint64_t result = 0xD000000000000014;
          break;
        case 5:
          unint64_t result = 0xD00000000000001CLL;
          break;
        case 6:
          unint64_t result = 0xD000000000000013;
          break;
        case 7:
          unint64_t result = 0xD000000000000015;
          break;
        case 8:
          unint64_t result = 0xD000000000000029;
          break;
        case 9:
          unint64_t result = 0xD000000000000017;
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v3 = 0x28776F6C6C6F66;
LABEL_7:
      uint64_t v9 = v3;
      uint64_t v6 = MTSubscriptionSyncType.description.getter();
LABEL_10:
      String.append(_:)(*(Swift::String *)&v6);
      swift_bridgeObjectRelease();
      v8._uint64_t countAndFlagsBits = 41;
      v8._object = (void *)0xE100000000000000;
      String.append(_:)(v8);
      return v9;
  }
}

unint64_t sub_100301A50()
{
  return sub_1003017F0(*(void *)v0, *(unsigned char *)(v0 + 8));
}

unint64_t sub_100301A5C(uint64_t a1, char a2)
{
  if (!a2)
  {
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease();
    v7[0] = 0xD000000000000012;
    v7[1] = 0x80000001004DCC30;
    uint64_t v3 = MTSubscriptionSyncType.description.getter();
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    strcpy((char *)v7, "syncBookmarks(");
    HIBYTE(v7[1]) = -18;
    uint64_t v3 = MTBookmarksSyncType.description.getter();
LABEL_5:
    String.append(_:)(*(Swift::String *)&v3);
    swift_bridgeObjectRelease();
    v5._uint64_t countAndFlagsBits = 41;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    return v7[0];
  }
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0x6546657461647075;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100301BF0()
{
  return sub_100301A5C(*(void *)v0, *(unsigned char *)(v0 + 8));
}

BOOL sub_100301BFC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  switch(a2)
  {
    case 1:
      if (a4 == 1) {
        return a1 == a3;
      }
      return 0;
    case 2:
      if (a4 != 2) {
        return 0;
      }
      return a1 == a3;
    case 3:
      if (a4 == 3) {
        return a1 == a3;
      }
      return 0;
    case 4:
      switch(a1)
      {
        case 1:
          if (a4 != 4 || a3 != 1) {
            return 0;
          }
          break;
        case 2:
          if (a4 != 4 || a3 != 2) {
            return 0;
          }
          break;
        case 3:
          if (a4 != 4 || a3 != 3) {
            return 0;
          }
          break;
        case 4:
          if (a4 != 4 || a3 != 4) {
            return 0;
          }
          break;
        case 5:
          if (a4 != 4 || a3 != 5) {
            return 0;
          }
          break;
        case 6:
          if (a4 != 4 || a3 != 6) {
            return 0;
          }
          break;
        case 7:
          if (a4 != 4 || a3 != 7) {
            return 0;
          }
          break;
        case 8:
          if (a4 != 4 || a3 != 8) {
            return 0;
          }
          break;
        case 9:
          if (a4 != 4 || a3 != 9) {
            return 0;
          }
          break;
        default:
          if (a4 != 4 || a3 != 0) {
            return 0;
          }
          break;
      }
      return 1;
    default:
      return !a4 && a1 == a3;
  }
}

uint64_t sub_100301DBC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    sub_1002FEF94(v5, 4, 4u, 3);
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

uint64_t sub_100301E9C(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005FBC48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.EpisodesState.PlayState()
{
  return &type metadata for PodcastsStateTransitions.EpisodesState.PlayState;
}

unsigned char *_s8Podcasts24PodcastsStateTransitionsC13EpisodesStateV12LibraryStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100301FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.EpisodesState.LibraryState()
{
  return &type metadata for PodcastsStateTransitions.EpisodesState.LibraryState;
}

unsigned char *storeEnumTagSinglePayload for PodcastsStateTransitions.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003020E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.State()
{
  return &type metadata for PodcastsStateTransitions.State;
}

uint64_t initializeWithTake for CarPlayNowPlayingPlayContext(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastsStateTransitions.Event(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastsStateTransitions.Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1003021BC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1003021D4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.Event()
{
  return &type metadata for PodcastsStateTransitions.Event;
}

uint64_t getEnumTagSinglePayload for PodcastsStateTransitions.Effect(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastsStateTransitions.Effect(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100302288(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1003022A0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.Effect()
{
  return &type metadata for PodcastsStateTransitions.Effect;
}

unint64_t sub_1003022CC()
{
  unint64_t result = qword_100601BB8;
  if (!qword_100601BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601BB8);
  }
  return result;
}

unint64_t sub_100302328()
{
  unint64_t result = qword_100601BC0;
  if (!qword_100601BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601BC0);
  }
  return result;
}

unint64_t sub_100302380()
{
  unint64_t result = qword_100601BC8;
  if (!qword_100601BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601BC8);
  }
  return result;
}

unint64_t sub_1003023DC()
{
  unint64_t result = qword_100601BD0;
  if (!qword_100601BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601BD0);
  }
  return result;
}

unint64_t sub_100302434()
{
  unint64_t result = qword_100601BD8;
  if (!qword_100601BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601BD8);
  }
  return result;
}

unint64_t sub_100302490()
{
  unint64_t result = qword_100601BE0;
  if (!qword_100601BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601BE0);
  }
  return result;
}

unint64_t sub_1003024E8()
{
  unint64_t result = qword_100601BE8;
  if (!qword_100601BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601BE8);
  }
  return result;
}

unint64_t sub_10030253C()
{
  unint64_t result = qword_100601BF0;
  if (!qword_100601BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601BF0);
  }
  return result;
}

unint64_t sub_100302590()
{
  unint64_t result = qword_100601BF8;
  if (!qword_100601BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601BF8);
  }
  return result;
}

unint64_t sub_1003025E4()
{
  unint64_t result = qword_100601C00;
  if (!qword_100601C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601C00);
  }
  return result;
}

unint64_t sub_100302638(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005545A0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

_WORD *initializeBufferWithCopyOfBuffer for PodcastsStateTransitions.EpisodesState(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastsStateTransitions.EpisodesState(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastsStateTransitions.EpisodesState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003027F0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.EpisodesState()
{
  return &type metadata for PodcastsStateTransitions.EpisodesState;
}

id sub_100302830()
{
  return [*(id *)(v0 + 32) currentConstant];
}

uint64_t sub_100302840()
{
  swift_bridgeObjectRelease();

  sub_10026D994(v0 + 48);

  return swift_deallocClassInstance();
}

uint64_t _s14descr10054BDA9C7SectionCMa()
{
  return self;
}

id sub_1003028B4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    BOOL v7 = &v4[OBJC_IVAR___MTSwiftEpisodeListManifest_settings];
    uint64_t v8 = type metadata accessor for EpisodeListSettings();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a3, v8);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v10 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v10 initWithEntityName:v11];

    uint64_t v13 = (void *)EpisodeListSettings.playPredicate.getter();
    [v12 setPredicate:v13];

    EpisodeListSettings.sort.getter();
    EpisodeSortType.playDescriptors.getter();
    sub_1000099EC();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v12 setSortDescriptors:isa];

    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v20.receiver = v4;
    v20.super_class = (Class)type metadata accessor for EpisodeListManifest();
    id v16 = [super initWithInitialEpisodeUuid:v15 fetchRequest:v12];

    id v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
    if (v17) {
  }
    }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for EpisodeListSettings();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a3, v18);
    type metadata accessor for EpisodeListManifest();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v17;
}

id sub_100302B94()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeListManifest();
  return [super dealloc];
}

uint64_t sub_100302C38()
{
  return type metadata accessor for EpisodeListManifest();
}

void *sub_100302C84()
{
  Swift::UInt v1 = v0;
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  type metadata accessor for EpisodeListSettings();
  sub_100303870(&qword_100601D78);
  uint64_t v2 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v4 = v3;
  swift_release();
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for EpisodeListManifest();
  [super activity];
  uint64_t v6 = v5;
  if (v5)
  {
    id v7 = v5;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    NSString v9 = String._bridgeToObjectiveC()();
    [v7 setValue:isa forKey:v9];
  }
  id v10 = [v1 explicitSortOrder];
  if (!v10)
  {
    uint64_t v14 = v2;
    unint64_t v15 = v4;
LABEL_11:
    sub_10021A410(v14, v15);
    return v6;
  }

  swift_allocObject();
  JSONEncoder.init()();
  id v11 = [v1 explicitSortOrder];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v23 = v13;
  sub_100054B78(&qword_100601D80);
  sub_1003038B4();
  uint64_t v16 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v18 = v17;
  swift_release();
  swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_10021A410(v2, v4);
    uint64_t v14 = v16;
    unint64_t v15 = v18;
    goto LABEL_11;
  }
  id v19 = v6;
  Class v20 = Data._bridgeToObjectiveC()().super.isa;
  NSString v21 = String._bridgeToObjectiveC()();
  [v19 setValue:v20 forKey:v21];
  sub_10021A410(v2, v4);
  sub_10021A410(v16, v18);

  return v6;
}

uint64_t sub_100302F78(uint64_t a1, unint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin();
  id v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for EpisodeListSettings();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  unint64_t v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  if (!a2) {
    return ((uint64_t (*)(void))a4)(0);
  }
  id v48 = (char *)v43 - v16;
  id v49 = a4;
  swift_bridgeObjectRetain();
  id v17 = [a3 userInfo];
  if (!v17)
  {
    long long v54 = 0u;
    long long v55 = 0u;
    swift_bridgeObjectRelease();
    a4 = v49;
LABEL_13:
    sub_100054B1C((uint64_t)&v54, &qword_1005F5D30);
    return ((uint64_t (*)(void))a4)(0);
  }
  unint64_t v18 = v17;
  uint64_t v46 = a1;
  uint64_t v47 = v13;
  uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v50 = 0xD00000000000001ELL;
  unint64_t v51 = 0x80000001004DCD20;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v19 + 16))
  {
    unint64_t v20 = sub_100226C5C((uint64_t)&v52);
    a4 = v49;
    if (v21)
    {
      sub_10004D328(*(void *)(v19 + 56) + 32 * v20, (uint64_t)&v54);
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
    }
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
    a4 = v49;
  }
  sub_100172F18((uint64_t)&v52);
  swift_bridgeObjectRelease();
  if (!*((void *)&v55 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (swift_dynamicCast())
  {
    uint64_t v45 = a5;
    uint64_t v22 = v52;
    unint64_t v23 = v53;
    uint64_t v24 = type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_100303870(&qword_100601D70);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    v43[1] = v24;
    unint64_t v44 = v23;
    swift_release();
    uint64_t v26 = v47;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v11, 0, 1, v12);
    uint64_t v27 = v48;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v48, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v15, v27, v12);
    id v28 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest());
    id v29 = sub_1003028B4(v46, a2, (uint64_t)v15);
    id v30 = [a3 userInfo];
    if (v30)
    {
      char v31 = v30;
      uint64_t v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v50 = 0xD000000000000014;
      unint64_t v51 = 0x80000001004DCD40;
      AnyHashable.init<A>(_:)();
      uint64_t v33 = v22;
      unint64_t v34 = v44;
      if (*(void *)(v32 + 16) && (unint64_t v35 = sub_100226C5C((uint64_t)&v52), (v36 & 1) != 0))
      {
        sub_10004D328(*(void *)(v32 + 56) + 32 * v35, (uint64_t)&v54);
      }
      else
      {
        long long v54 = 0u;
        long long v55 = 0u;
      }
      sub_100172F18((uint64_t)&v52);
      swift_bridgeObjectRelease();
      if (*((void *)&v55 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v38 = v52;
          unint64_t v37 = v53;
          swift_allocObject();
          JSONDecoder.init()();
          sub_100054B78((uint64_t *)&unk_100603260);
          sub_10021CB1C(&qword_1005FB178);
          dispatch thunk of JSONDecoder.decode<A>(_:from:)();
          swift_release();
          if (!v29)
          {
            sub_10021A410(v38, v37);
            swift_bridgeObjectRelease();
            uint64_t v39 = 0;
            unint64_t v34 = v44;
            goto LABEL_30;
          }
          id v41 = v29;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v41 setExplicitSortOrder:isa];
          sub_10021A410(v38, v37);

          unint64_t v34 = v44;
          goto LABEL_28;
        }
LABEL_27:
        if (!v29)
        {
          uint64_t v39 = 0;
          goto LABEL_30;
        }
LABEL_28:
        uint64_t v39 = v29;
LABEL_30:
        id v40 = v29;
        v49(v39);
        sub_10021A410(v33, v34);

        return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v12);
      }
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
      uint64_t v33 = v22;
      unint64_t v34 = v44;
    }
    sub_100054B1C((uint64_t)&v54, &qword_1005F5D30);
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(void))a4)(0);
}

uint64_t sub_100303620(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  swift_retain();
  v2(v3, v5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003037EC()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_100303824()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100303864(uint64_t a1, unint64_t a2)
{
  return sub_100302F78(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100303870(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EpisodeListSettings();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003038B4()
{
  unint64_t result = qword_100601D88;
  if (!qword_100601D88)
  {
    sub_100044244(&qword_100601D80);
    sub_10021CB1C(&qword_1005FB160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601D88);
  }
  return result;
}

void *sub_10030394C(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100601D98);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URLQueryItem();
  uint64_t v6 = __chkstk_darwin(v5);
  char v31 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v28 = (char *)&v28 - v9;
  uint64_t v29 = v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v33 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  unint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  id v30 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  unint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v32 = _swiftEmptyArrayStorage;
  if (v13) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    int64_t v19 = v16 + 1;
    if (!__OFADD__(v16, 1))
    {
      if (v19 < v35)
      {
        unint64_t v20 = *(void *)(v33 + 8 * v19);
        ++v16;
        if (v20) {
          goto LABEL_23;
        }
        int64_t v16 = v19 + 1;
        if (v19 + 1 >= v35) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v16);
        if (v20) {
          goto LABEL_23;
        }
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v35) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v16);
        if (v20) {
          goto LABEL_23;
        }
        int64_t v16 = v19 + 3;
        if (v19 + 3 >= v35) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v16);
        if (v20)
        {
LABEL_23:
          unint64_t v13 = (v20 - 1) & v20;
          for (unint64_t i = __clz(__rbit64(v20)) + (v16 << 6); *(void *)(*(void *)(a1 + 56) + 16 * i + 8); unint64_t i = v17 | (v16 << 6))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            URLQueryItem.init(name:value:)();
            (*v14)(v4, 0, 1, v5);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((*v34)(v4, 1, v5) == 1) {
              goto LABEL_6;
            }
            uint64_t v22 = *v30;
            unint64_t v23 = v28;
            (*v30)(v28, v4, v5);
            v22(v31, v23, v5);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v32 = (void *)sub_1002EF4A4(0, v32[2] + 1, 1, (unint64_t)v32);
            }
            unint64_t v25 = v32[2];
            unint64_t v24 = v32[3];
            if (v25 >= v24 >> 1) {
              uint64_t v32 = (void *)sub_1002EF4A4(v24 > 1, v25 + 1, 1, (unint64_t)v32);
            }
            uint64_t v26 = v31;
            uint64_t v27 = v32;
            long long v32[2] = v25 + 1;
            unint64_t result = (void *)((uint64_t (*)(char *, char *, uint64_t))v22)((char *)v27+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v25, v26, v5);
            if (!v13) {
              goto LABEL_8;
            }
LABEL_7:
            unint64_t v17 = __clz(__rbit64(v13));
            v13 &= v13 - 1;
          }
          (*v14)(v4, 1, 1, v5);
LABEL_6:
          unint64_t result = (void *)sub_100054B1C((uint64_t)v4, &qword_100601D98);
          if (!v13) {
            continue;
          }
          goto LABEL_7;
        }
        int64_t v21 = v19 + 4;
        if (v21 < v35)
        {
          unint64_t v20 = *(void *)(v33 + 8 * v21);
          if (v20)
          {
            int64_t v16 = v21;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v16 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_34;
            }
            if (v16 >= v35) {
              break;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v16);
            ++v21;
            if (v20) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_32:
      swift_release();
      return v32;
    }
    break;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100303DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100054B78(&qword_1005FD6C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URLComponents();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    type metadata accessor for ChannelContextActionConfiguration(0);
    if (swift_dynamicCastClass())
    {
      swift_retain();
      sub_100304184(a3);
LABEL_10:
      return swift_release();
    }
    type metadata accessor for EpisodeContextActionConfiguration(0);
    if (swift_dynamicCastClass())
    {
      swift_retain();
      sub_1003044A0(a3);
      goto LABEL_10;
    }
    type metadata accessor for PodcastContextActionConfiguration(0);
    if (swift_dynamicCastClass())
    {
      swift_retain();
      sub_100304718(a2, a3);
      goto LABEL_10;
    }
    type metadata accessor for NowPlayingContextActionConfiguration();
    if (swift_dynamicCastClass())
    {
      swift_retain();
      sub_100304FBC(a2, a3);
      goto LABEL_10;
    }
    type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
    uint64_t v14 = swift_dynamicCastClass();
    if (v14)
    {
      if (*(void *)(v14 + qword_1005FAD60))
      {
        swift_retain();
        if (sub_100305544())
        {
          URLComponents.init(url:resolvingAgainstBaseURL:)();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
          {
            sub_100054B1C((uint64_t)v8, &qword_1005FD6C8);
            uint64_t v15 = type metadata accessor for URL();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
            swift_bridgeObjectRetain();
            URLComponents.queryItems.setter();
            URLComponents.url.getter();
            (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          }
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_retain();
      }
      uint64_t v18 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 1, 1, v18);
      goto LABEL_10;
    }
  }
  uint64_t v16 = type metadata accessor for URL();
  unint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);

  return v17(a3, 1, 1, v16);
}

uint64_t sub_100304184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v2 = sub_100054B78(&qword_1005FD6C8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URLComponents();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + qword_10061AA50);
  uint64_t v9 = *(void *)(v1 + qword_10061AA50 + 8);
  uint64_t v11 = *(void *)(v1 + qword_10061AA48);
  uint64_t v12 = *(void *)(v1 + qword_10061AA48 + 8);
  sub_100054B78(&qword_100601D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046DD10;
  *(void *)(inited + 32) = 0x4E65646F73697065;
  *(void *)(inited + 40) = 0xEB00000000656D61;
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0;
  *(void *)(inited + 64) = 0x4965646F73697065;
  *(void *)(inited + 72) = 0xE900000000000064;
  *(void *)(inited + 80) = 0;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 96) = 0x4E74736163646F70;
  *(void *)(inited + 104) = 0xEB00000000656D61;
  *(void *)(inited + 112) = 0;
  *(void *)(inited + 120) = 0;
  *(void *)(inited + 128) = 0x4974736163646F70;
  *(void *)(inited + 136) = 0xE900000000000064;
  *(void *)(inited + 144) = 0;
  *(void *)(inited + 152) = 0;
  *(void *)(inited + 160) = 0x4E6C656E6E616863;
  *(void *)(inited + 168) = 0xEB00000000656D61;
  *(void *)(inited + 176) = v10;
  *(void *)(inited + 184) = v9;
  *(void *)(inited + 192) = 0x496C656E6E616863;
  *(void *)(inited + 200) = 0xE900000000000064;
  *(void *)(inited + 208) = v11;
  *(void *)(inited + 216) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_10016F0B8(inited);
  sub_10030394C(v14);
  swift_bridgeObjectRelease();
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100054B1C((uint64_t)v4, &qword_1005FD6C8);
    uint64_t v15 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v18, 1, 1, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    swift_bridgeObjectRetain();
    URLComponents.queryItems.setter();
    URLComponents.url.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003044A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100054B78(&qword_1005FD6C8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URLComponents();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  unint64_t v9 = sub_100305544();
  swift_release();
  if (v9)
  {
    URLComponents.init(url:resolvingAgainstBaseURL:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100054B1C((uint64_t)v4, &qword_1005FD6C8);
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      swift_bridgeObjectRetain();
      URLComponents.queryItems.setter();
      URLComponents.url.getter();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a1, 1, 1, v11);
  }
}

uint64_t sub_100304718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v77 = a2;
  uint64_t v3 = type metadata accessor for ShowOffer();
  uint64_t v73 = *(void (***)(char *, char *, char *))(v3 - 8);
  uint64_t v74 = (char *)v3;
  __chkstk_darwin(v3);
  uint64_t v72 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005FD6C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v71 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v70 - v8;
  uint64_t v78 = type metadata accessor for URLComponents();
  uint64_t v75 = *(void *)(v78 - 8);
  uint64_t v10 = __chkstk_darwin(v78);
  uint64_t v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (void (**)(char *, char *, char *))((char *)&v70 - v13);
  uint64_t v15 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v70 - v19;
  uint64_t v21 = qword_1005FADD0;
  uint64_t v22 = *(void *)(v2 + qword_1005FADD0) + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  sub_1001AC690(v22, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v24 = v72;
    unint64_t v23 = v73;
    unint64_t v25 = v74;
    v73[4](v72, v20, v74);
    uint64_t v26 = ShowOffer.title.getter();
    uint64_t v28 = v27;
    uint64_t v80 = ShowOffer.adamId.getter();
    sub_1001A5874();
    uint64_t v29 = BinaryInteger.description.getter();
    uint64_t v31 = v30;
    sub_100054B78(&qword_100601D90);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046DD10;
    *(void *)(inited + 32) = 0x4E65646F73697065;
    *(void *)(inited + 40) = 0xEB00000000656D61;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0x4965646F73697065;
    *(void *)(inited + 72) = 0xE900000000000064;
    *(void *)(inited + 80) = 0;
    *(void *)(inited + 88) = 0;
    *(void *)(inited + 96) = 0x4E74736163646F70;
    *(void *)(inited + 104) = 0xEB00000000656D61;
    *(void *)(inited + 112) = v26;
    *(void *)(inited + 120) = v28;
    *(void *)(inited + 128) = 0x4974736163646F70;
    *(void *)(inited + 136) = 0xE900000000000064;
    *(void *)(inited + 144) = v29;
    *(void *)(inited + 152) = v31;
    *(void *)(inited + 160) = 0x4E6C656E6E616863;
    *(void *)(inited + 168) = 0xEB00000000656D61;
    *(void *)(inited + 176) = 0;
    *(void *)(inited + 184) = 0;
    *(void *)(inited + 192) = 0x496C656E6E616863;
    *(void *)(inited + 200) = 0xE900000000000064;
    *(void *)(inited + 208) = 0;
    *(void *)(inited + 216) = 0;
    unint64_t v33 = sub_10016F0B8(inited);
    sub_10030394C(v33);
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t)v71;
    URLComponents.init(url:resolvingAgainstBaseURL:)();
    uint64_t v35 = v75;
    uint64_t v36 = v78;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v34, 1, v78) == 1)
    {
      sub_100054B1C(v34, &qword_1005FD6C8);
      uint64_t v37 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v77, 1, 1, v37);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v12, v34, v36);
      swift_bridgeObjectRetain();
      URLComponents.queryItems.setter();
      URLComponents.url.getter();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
    }
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, char *))v23[1])(v24, v25);
  }
  else
  {
    uint64_t v73 = v14;
    uint64_t v74 = v9;
    uint64_t v38 = v78;
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void *)(v2 + v21) + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess();
    sub_1001AC690(v39, (uint64_t)v18);
    id v40 = (void *)sub_100241558();
    sub_1001AC758((uint64_t)v18);
    if (v40)
    {
      id v41 = [v40 title];
      if (v41)
      {
        uint64_t v42 = v41;
        uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v70 = v44;
        id v71 = (char *)v43;
      }
      else
      {
        uint64_t v70 = 0;
        id v71 = 0;
      }
      [v40 storeCollectionId:v70];
      uint64_t v79 = AdamID.init(rawValue:)();
      sub_1001A5874();
      uint64_t v47 = BinaryInteger.description.getter();
      id v49 = v48;
      id v50 = [v40 channel];
      uint64_t v72 = v49;
      if (v50
        && (unint64_t v51 = v50, v52 = [v50 name], v51, v52))
      {
        uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v55 = v54;
      }
      else
      {
        uint64_t v53 = 0;
        uint64_t v55 = 0;
      }
      id v56 = [v40 channel];
      uint64_t v57 = v56;
      if (v56)
      {
        [v56 storeId];

        uint64_t v79 = AdamID.init(rawValue:)();
        uint64_t v57 = (void *)BinaryInteger.description.getter();
        uint64_t v59 = v58;
      }
      else
      {
        uint64_t v59 = 0;
      }
      uint64_t v60 = v77;
      uint64_t v61 = v38;
      uint64_t v62 = v75;
      sub_100054B78(&qword_100601D90);
      uint64_t v63 = swift_initStackObject();
      *(_OWORD *)(v63 + 16) = xmmword_10046DD10;
      *(void *)(v63 + 32) = 0x4E65646F73697065;
      *(void *)(v63 + 40) = 0xEB00000000656D61;
      *(void *)(v63 + 48) = 0;
      *(void *)(v63 + 56) = 0;
      *(void *)(v63 + 64) = 0x4965646F73697065;
      *(void *)(v63 + 72) = 0xE900000000000064;
      *(void *)(v63 + 80) = 0;
      *(void *)(v63 + 88) = 0;
      *(void *)(v63 + 96) = 0x4E74736163646F70;
      *(void *)(v63 + 104) = 0xEB00000000656D61;
      uint64_t v64 = v70;
      *(void *)(v63 + 112) = v71;
      *(void *)(v63 + 120) = v64;
      *(void *)(v63 + 128) = 0x4974736163646F70;
      *(void *)(v63 + 136) = 0xE900000000000064;
      uint64_t v65 = v72;
      *(void *)(v63 + 144) = v47;
      *(void *)(v63 + 152) = v65;
      *(void *)(v63 + 160) = 0x4E6C656E6E616863;
      *(void *)(v63 + 168) = 0xEB00000000656D61;
      *(void *)(v63 + 176) = v53;
      *(void *)(v63 + 184) = v55;
      *(void *)(v63 + 192) = 0x496C656E6E616863;
      *(void *)(v63 + 200) = 0xE900000000000064;
      *(void *)(v63 + 208) = v57;
      *(void *)(v63 + 216) = v59;
      unint64_t v66 = sub_10016F0B8(v63);
      sub_10030394C(v66);
      swift_bridgeObjectRelease();
      uint64_t v67 = (uint64_t)v74;
      URLComponents.init(url:resolvingAgainstBaseURL:)();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v67, 1, v61) == 1)
      {
        sub_100054B1C(v67, &qword_1005FD6C8);
        uint64_t v68 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v60, 1, 1, v68);
      }
      else
      {
        uint64_t v69 = v73;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))((char *)v73, v67, v61);
        swift_bridgeObjectRetain();
        URLComponents.queryItems.setter();
        URLComponents.url.getter();
        (*(void (**)(void (**)(char *, char *, char *), uint64_t))(v62 + 8))(v69, v61);
      }

      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v46 = type metadata accessor for URL();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v77, 1, 1, v46);
    }
  }
}

uint64_t sub_100304FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005FD6C8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URLComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)dispatch thunk of NowPlayingContextActionConfiguration.modelObject.getter();
  id v12 = [v11 author];

  uint64_t v52 = a1;
  if (v12 && (id v13 = [v12 name], v12, v13))
  {
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v15;
    uint64_t v50 = v14;
  }
  else
  {
    uint64_t v49 = 0;
    uint64_t v50 = 0;
  }
  type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
  uint64_t v16 = swift_dynamicCastClass();
  if (v16) {
    swift_retain();
  }
  uint64_t v17 = (void *)dispatch thunk of NowPlayingContextActionConfiguration.modelObject.getter();
  id v18 = [v17 title];

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v48 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v48 = 0;
  }
  uint64_t v21 = (void *)dispatch thunk of NowPlayingContextActionConfiguration.modelObject.getter();
  id v22 = [v21 podcast];

  if (!v22 || (v30 = MPModelObject.adamID.getter(), char v32 = v31, v22, (v32 & 1) != 0))
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v51 = v16;
    if (!v16) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v53 = v30;
    sub_1001A5874();
    uint64_t v33 = BinaryInteger.description.getter();
    uint64_t v35 = v34;
    uint64_t v51 = v16;
    if (!v16)
    {
LABEL_13:
      uint64_t started = 0;
      unsigned __int8 v37 = 1;
      goto LABEL_16;
    }
  }
  swift_retain();
  uint64_t started = NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime.getter();
  uint64_t v38 = v6;
  uint64_t v39 = v19;
  id v40 = v10;
  uint64_t v41 = v8;
  uint64_t v42 = v7;
  uint64_t v43 = a2;
  char v45 = v44;
  swift_release();
  unsigned __int8 v37 = v45 & 1;
  a2 = v43;
  uint64_t v7 = v42;
  uint64_t v8 = v41;
  uint64_t v10 = v40;
  uint64_t v19 = v39;
  uint64_t v6 = v38;
LABEL_16:
  sub_1003060F0(v19, v48, 0, 0, v50, v49, v33, v35, 0.0, v23, v24, v25, v26, v27, v28, v29, 0, 0, 0,
    0,
    *(double *)&started,
    v37);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100054B1C((uint64_t)v6, &qword_1005FD6C8);
    uint64_t v46 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(a2, 1, 1, v46);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    swift_bridgeObjectRetain();
    URLComponents.queryItems.setter();
    URLComponents.url.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1003053A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100303DA0(a2, a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7750);
    return a3(a1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    a3((uint64_t)v12);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

unint64_t sub_100305544()
{
  uint64_t v72 = 0;
  memset(v71, 0, sizeof(v71));
  unint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 32);
  switch(v3)
  {
    case 1u:
      if (*(void *)(v1 + 16))
      {
        uint64_t v7 = type metadata accessor for EpisodeOffer();
        uint64_t v8 = *(void *)(v7 - 8);
        unint64_t v9 = v1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        uint64_t v69 = v7;
        uint64_t v70 = &off_1005608A8;
        uint64_t v10 = sub_10004A244(v68);
        (*(void (**)(uint64_t *, unint64_t, uint64_t))(v8 + 16))(v10, v9, v7);
        goto LABEL_20;
      }
      goto LABEL_26;
    case 2u:
      if (v1 >> 62)
      {
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v11)
        {
LABEL_8:
          if ((v1 & 0xC000000000000001) != 0)
          {
            id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_11;
          }
          if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v12 = *(id *)(v1 + 32);
LABEL_11:
            uint64_t v4 = (uint64_t)v12;
            sub_1001DCDF8(v1, v2, 2u);
            uint64_t v5 = sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
            uint64_t v6 = &off_1005608E8;
            goto LABEL_12;
          }
          __break(1u);
LABEL_32:
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_18;
        }
      }
      uint64_t v17 = v1;
      uint64_t v18 = v2;
      unsigned __int8 v19 = 2;
LABEL_25:
      sub_1001DCDF8(v17, v18, v19);
      goto LABEL_26;
    case 3u:
      if (v1 >> 62)
      {
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_15;
        }
LABEL_24:
        uint64_t v17 = v1;
        uint64_t v18 = v2;
        unsigned __int8 v19 = 3;
        goto LABEL_25;
      }
      uint64_t v13 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v13) {
        goto LABEL_24;
      }
LABEL_15:
      if ((v1 & 0xC000000000000001) != 0) {
        goto LABEL_32;
      }
      if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        JUMPOUT(0x100305A4CLL);
      }
      id v14 = *(id *)(v1 + 32);
LABEL_18:
      uint64_t v15 = v14;
      sub_1001DCDF8(v1, v2, 3u);
      uint64_t v16 = MPCPlayerResponseItem.podcastEpisode.getter();

      if (v16)
      {
        uint64_t v69 = sub_10004D29C(0, (unint64_t *)&unk_1005FCE50);
        uint64_t v70 = &off_100560928;
        v68[0] = v16;
LABEL_20:
        sub_100054B1C((uint64_t)v71, (uint64_t *)&unk_100601DA0);
        sub_100306460((uint64_t)v68, (uint64_t)v71);
      }
LABEL_26:
      sub_1003063F8((uint64_t)v71, (uint64_t)&v66);
      if (v67)
      {
        sub_100042FC4(&v66, (uint64_t)v68);
        uint64_t v20 = v69;
        uint64_t v21 = v70;
        sub_100041A98(v68, v69);
        uint64_t v22 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v21[1])(v20, v21);
        uint64_t v64 = v23;
        uint64_t v65 = v22;
        uint64_t v24 = v69;
        double v25 = v70;
        sub_100041A98(v68, v69);
        uint64_t v26 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v25[2])(v24, v25);
        uint64_t v62 = v27;
        uint64_t v63 = v26;
        uint64_t v28 = v69;
        double v29 = v70;
        sub_100041A98(v68, v69);
        uint64_t v61 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v29[3])(v28, v29);
        uint64_t v31 = v30;
        uint64_t v32 = v69;
        uint64_t v33 = v70;
        sub_100041A98(v68, v69);
        uint64_t v34 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v33[4])(v32, v33);
        uint64_t v36 = v35;
        uint64_t v38 = v69;
        unsigned __int8 v37 = v70;
        sub_100041A98(v68, v69);
        uint64_t v39 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v37[5])(v38, v37);
        uint64_t v41 = v40;
        uint64_t v42 = v69;
        uint64_t v43 = v70;
        sub_100041A98(v68, v69);
        uint64_t v44 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v43[6])(v42, v43);
        uint64_t v46 = v45;
        uint64_t v47 = v69;
        uint64_t v48 = v70;
        sub_100041A98(v68, v69);
        double v49 = COERCE_DOUBLE(((uint64_t (*)(uint64_t, _UNKNOWN **))v48[7])(v47, v48));
        unint64_t v59 = sub_1003060F0(v65, v64, v63, v62, v61, v31, v34, v36, v51, v52, v53, v54, v55, v56, v57, v58, v39, v41, v44,
                v46,
                v49,
                v50 & 1);
        sub_100054B1C((uint64_t)v71, (uint64_t *)&unk_100601DA0);
        sub_10004D2D8((uint64_t)v68);
      }
      else
      {
        sub_100054B1C((uint64_t)v71, (uint64_t *)&unk_100601DA0);
        sub_100054B1C((uint64_t)&v66, (uint64_t *)&unk_100601DA0);
        return 0;
      }
      return v59;
    default:
      sub_1001DCD9C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
      uint64_t v4 = sub_10040241C((void *)v1, v2, v3);
      sub_1001DCDF8(v1, v2, v3);
      if (!v4) {
        goto LABEL_26;
      }
      uint64_t v5 = sub_10004D29C(0, (unint64_t *)&qword_100603220);
      uint64_t v6 = &off_100560868;
LABEL_12:
      uint64_t v69 = v5;
      uint64_t v70 = v6;
      v68[0] = v4;
      goto LABEL_20;
  }
}

id sub_100305A5C()
{
  id result = [v0 podcast];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result channel];

    if (v3)
    {
      [v3 storeId];

      AdamID.init(rawValue:)();
      sub_1001A5874();
      return (id)BinaryInteger.description.getter();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100305B0C(uint64_t a1, uint64_t a2)
{
  return sub_100305E30(a1, a2, (SEL *)&selRef_storeTrackId);
}

uint64_t sub_100305B18(uint64_t a1, uint64_t a2)
{
  return sub_100305FD4(a1, a2, (SEL *)&selRef_podcast, (SEL *)&selRef_title);
}

id sub_100305B2C()
{
  id result = [*v0 podcast];
  if (result)
  {
    uint64_t v2 = result;
    [result storeCollectionId];

    AdamID.init(rawValue:)();
    sub_1001A5874();
    return (id)BinaryInteger.description.getter();
  }
  return result;
}

id sub_100305BB0()
{
  return sub_100305A5C();
}

double sub_100305BD4()
{
  [*v0 playhead];
  return v1;
}

uint64_t sub_100305C08()
{
  return BinaryInteger.description.getter();
}

uint64_t sub_100305C4C()
{
  uint64_t v0 = type metadata accessor for ShowOffer();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  EpisodeOffer.showOffer.getter();
  uint64_t v4 = ShowOffer.title.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_100305D2C()
{
  uint64_t v0 = type metadata accessor for ShowOffer();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  id v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  EpisodeOffer.showOffer.getter();
  uint64_t v4 = ShowOffer.adamId.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6[1] = v4;
  sub_1001A5874();
  return BinaryInteger.description.getter();
}

uint64_t sub_100305E18(uint64_t a1, uint64_t a2)
{
  return sub_100305E30(a1, a2, (SEL *)&selRef_episodeStoreId);
}

uint64_t sub_100305E24(uint64_t a1, uint64_t a2)
{
  return sub_100305E30(a1, a2, (SEL *)&selRef_podcastStoreId);
}

uint64_t sub_100305E30(uint64_t a1, uint64_t a2, SEL *a3)
{
  [*v3 *a3];
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_100305E7C()
{
  [*v0 channelStoreId];
  AdamID.init(rawValue:)();
  sub_1001A5874();
  return BinaryInteger.description.getter();
}

double sub_100305ED4()
{
  [*v0 playhead];
  return result;
}

uint64_t sub_100305F00()
{
  id v1 = [*v0 title];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100305F68()
{
  MPModelObject.adamID.getter();
  if (v0) {
    return 0;
  }
  sub_1001A5874();
  return BinaryInteger.description.getter();
}

uint64_t sub_100305FC0(uint64_t a1, uint64_t a2)
{
  return sub_100305FD4(a1, a2, (SEL *)&selRef_author, (SEL *)&selRef_name);
}

uint64_t sub_100305FD4(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  id v6 = [*v4 *a3];
  uint64_t v7 = v6;
  if (!v6) {
    return 0;
  }
  id v8 = [v6 *a4];

  if (!v8) {
    return 0;
  }
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v9;
}

id sub_100306068()
{
  id result = [*v0 podcast];
  if (result)
  {
    uint64_t v2 = result;
    MPModelObject.adamID.getter();
    char v4 = v3;

    if (v4)
    {
      return 0;
    }
    else
    {
      sub_1001A5874();
      return (id)BinaryInteger.description.getter();
    }
  }
  return result;
}

unint64_t sub_1003060F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,double a21,unsigned __int8 a22)
{
  uint64_t v36 = a8;
  int v38 = a22;
  uint64_t v37 = a20;
  uint64_t v34 = type metadata accessor for URLQueryItem();
  uint64_t v33 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v35 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_100601D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046DD10;
  *(void *)(inited + 32) = 0x4E65646F73697065;
  *(void *)(inited + 40) = 0xEB00000000656D61;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 64) = 0x4965646F73697065;
  *(void *)(inited + 72) = 0xE900000000000064;
  *(void *)(inited + 80) = a3;
  *(void *)(inited + 88) = a4;
  *(void *)(inited + 96) = 0x4E74736163646F70;
  *(void *)(inited + 104) = 0xEB00000000656D61;
  *(void *)(inited + 112) = a5;
  *(void *)(inited + 120) = a6;
  *(void *)(inited + 128) = 0x4974736163646F70;
  *(void *)(inited + 136) = 0xE900000000000064;
  uint64_t v23 = v36;
  *(void *)(inited + 144) = a7;
  *(void *)(inited + 152) = v23;
  *(void *)(inited + 160) = 0x4E6C656E6E616863;
  *(void *)(inited + 168) = 0xEB00000000656D61;
  *(void *)(inited + 176) = a17;
  *(void *)(inited + 184) = a18;
  *(void *)(inited + 192) = 0x496C656E6E616863;
  *(void *)(inited + 200) = 0xE900000000000064;
  uint64_t v24 = v37;
  *(void *)(inited + 208) = a19;
  *(void *)(inited + 216) = v24;
  unint64_t v25 = sub_10016F0B8(inited);
  unint64_t v26 = (unint64_t)sub_10030394C(v25);
  swift_bridgeObjectRelease();
  if ((v38 & 1) == 0 && a21 != 0.0)
  {
    Double.description.getter();
    uint64_t v27 = v35;
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v26 = sub_1002EF4A4(0, *(void *)(v26 + 16) + 1, 1, v26);
    }
    uint64_t v28 = v34;
    uint64_t v29 = v33;
    unint64_t v31 = *(void *)(v26 + 16);
    unint64_t v30 = *(void *)(v26 + 24);
    if (v31 >= v30 >> 1) {
      unint64_t v26 = sub_1002EF4A4(v30 > 1, v31 + 1, 1, v26);
    }
    *(void *)(v26 + 16) = v31 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v26+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v31, v27, v28);
  }
  return v26;
}

uint64_t sub_1003063F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_100601DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100306460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_100601DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003064C8(uint64_t a1)
{
  return sub_1003064E0(a1, "Unknown error in migration - %s");
}

uint64_t sub_1003064D4(uint64_t a1)
{
  return sub_1003064E0(a1, "Error saving - %s");
}

uint64_t sub_1003064E0(uint64_t a1, const char *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = __chkstk_darwin(v4);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_1001C0DD4();
    swift_errorRetain();
    static OS_os_log.classKit.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v16 = a2;
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v17 = a1;
      uint64_t v18 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v15 = v11 + 4;
      swift_errorRetain();
      sub_100054B78(&qword_100603F70);
      uint64_t v13 = String.init<A>(describing:)();
      uint64_t v17 = sub_10004B974(v13, v14, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v16, v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

id UIAppSettingsBridge.open(destination:)(char a1, id a2)
{
  if (a1) {
    return [a2 openGlobalSettings];
  }
  else {
    return _sSo13UIApplicationC8PodcastsE18openGlobalSettings19deepLinkDestinationy0B2UI0de4DeepG5StateC0H0O_tF_0();
  }
}

id sub_100306754(char a1)
{
  if (a1) {
    return [*v1 openGlobalSettings];
  }
  else {
    return _sSo13UIApplicationC8PodcastsE18openGlobalSettings19deepLinkDestinationy0B2UI0de4DeepG5StateC0H0O_tF_0();
  }
}

ValueMetadata *type metadata accessor for UIAppSettingsBridge()
{
  return &type metadata for UIAppSettingsBridge;
}

void sub_10030677C()
{
  id v1 = *v0;
  PerformanceTestCase.name.getter();
  id v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 finishedTest:v2];
}

void sub_1003067E8()
{
  id v1 = *v0;
  PerformanceTestCase.name.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = String._bridgeToObjectiveC()();
  [v1 failedTest:v2 withFailure:v3];
}

uint64_t sub_100306884(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v52 = *(void *)(v7 - 8);
  __chkstk_darwin();
  char v50 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for DispatchQoS();
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for DispatchTime();
  uint64_t v47 = *(void *)(v55 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  double v54 = (char *)&v42 - v12;
  sub_100054B78(&qword_100601E10);
  __chkstk_darwin();
  unint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PerformanceTestCase();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin();
  uint64_t result = __chkstk_darwin();
  uint64_t v56 = (uint64_t)&v42 - v20;
  if (!a3)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v46 = v19;
  if (!a4)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  PerformanceTestCase.init(name:options:)();
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  if (v21 == 1)
  {
    sub_100054B1C((uint64_t)v14, &qword_100601E10);
    return v21 != 1;
  }
  uint64_t v45 = v7;
  uint64_t v44 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32);
  uint64_t result = v44(v56, v14, v15);
  if (a1)
  {
    uint64_t v22 = self;
    id v23 = a1;
    id v24 = [v22 standardUserDefaults];
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v24 stringForKey:v25];

    if (v26)
    {

      sub_1000566BC();
      uint64_t v42 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      int v43 = v21;
      uint64_t v47 = *(void *)(v47 + 8);
      ((void (*)(char *, uint64_t))v47)(v11, v55);
      uint64_t v27 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v46, v56, v15);
      unint64_t v28 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      unint64_t v29 = (v17 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v30 = swift_allocObject();
      unint64_t v31 = v53;
      *(void *)(v30 + 16) = v53;
      v44(v30 + v28, v27, v15);
      *(void *)(v30 + v29) = v23;
      aBlock[4] = sub_100307394;
      aBlock[5] = v30;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003B424;
      uint64_t aBlock[3] = &unk_1005609B8;
      uint64_t v32 = _Block_copy(aBlock);
      id v33 = v23;
      id v34 = v31;
      swift_release();
      uint64_t v35 = v48;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      uint64_t v36 = v50;
      uint64_t v37 = v45;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      int v38 = v54;
      uint64_t v39 = (void *)v42;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v37);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v51);
      ((void (*)(char *, uint64_t))v47)(v38, v55);
      int v21 = v43;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v56, v15);
    }
    else
    {
      id v40 = v23;
      uint64_t v41 = v56;
      sub_100306FDC(v56, v40, (uint64_t)v53);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v41, v15);
    }
    return v21 != 1;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100306FDC(uint64_t a1, void *a2, uint64_t a3)
{
  sub_100054B78(&qword_100601E18);
  __chkstk_darwin();
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[3] = &type metadata for UIAppPerformanceTestRunner;
  v26[4] = sub_100307458();
  v26[0] = a2;
  uint64_t v7 = a3 + OBJC_IVAR____TtC8Podcasts11AppDelegate_pptViewHierarchyProxy;
  swift_beginAccess();
  sub_100054BBC(v7, (uint64_t)v6, &qword_100601E18);
  uint64_t v8 = type metadata accessor for PPTViewControllerProxy();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    id v11 = a2;
    PPTViewControllerProxy.prepareForTesting(testCase:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    sub_100054BBC((uint64_t)v25, (uint64_t)&v20, &qword_100601E28);
    if (v21)
    {
      sub_100042FC4(&v20, (uint64_t)&v22);
      sub_100041A98(&v22, v24);
      dispatch thunk of PerformanceTestable.perform(testCase:runner:)();
      sub_100054B1C((uint64_t)v25, &qword_100601E28);
      sub_10004D2D8((uint64_t)&v22);
    }
    else
    {
      sub_100054B1C((uint64_t)&v20, &qword_100601E28);
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      sub_100054BBC((uint64_t)v25, (uint64_t)&v22, &qword_100601E28);
      sub_100054B78(&qword_100601E28);
      uint64_t v12 = String.init<A>(describing:)();
      unint64_t v14 = v13;
      swift_bridgeObjectRelease();
      uint64_t v22 = v12;
      unint64_t v23 = v14;
      v15._object = (void *)0x80000001004DCDD0;
      v15._uint64_t countAndFlagsBits = 0xD000000000000023;
      String.append(_:)(v15);
      uint64_t v16 = (void *)v26[0];
      PerformanceTestCase.name.getter();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v18 = String._bridgeToObjectiveC()();
      [v16 failedTest:v17 withFailure:v18];
      swift_bridgeObjectRelease();

      sub_100054B1C((uint64_t)v25, &qword_100601E28);
    }
    return sub_10004D2D8((uint64_t)v26);
  }
  return result;
}

uint64_t sub_1003072AC()
{
  uint64_t v1 = type metadata accessor for PerformanceTestCase();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100307394()
{
  uint64_t v1 = *(void *)(type metadata accessor for PerformanceTestCase() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + v2;
  id v5 = *(id *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_100306FDC(v4, v5, v3);
}

unint64_t sub_100307458()
{
  unint64_t result = qword_100601E20;
  if (!qword_100601E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601E20);
  }
  return result;
}

ValueMetadata *type metadata accessor for UIAppPerformanceTestRunner()
{
  return &type metadata for UIAppPerformanceTestRunner;
}

uint64_t sub_1003074BC()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + 16);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100307E08;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100560A58;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unint64_t v13 = _swiftEmptyArrayStorage;
  sub_10004AD7C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10005666C((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_10030777C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = *(void *)(Strong + OBJC_IVAR____TtC8Podcasts9Debouncer_worker);
    swift_retain();
    swift_release();
    if (v1)
    {
      dispatch thunk of DispatchWorkItem.cancel()();
      swift_release();
    }
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10030782C();
    return swift_release();
  }
  return result;
}

uint64_t sub_10030782C()
{
  uint64_t v1 = type metadata accessor for DispatchTime();
  uint64_t v15 = *(void *)(v1 - 8);
  uint64_t v16 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100307E00;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100560A30;
  _Block_copy(aBlock);
  NSString v17 = _swiftEmptyArrayStorage;
  sub_10004AD7C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  swift_retain();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10005666C((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v9 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  *(void *)(v0 + OBJC_IVAR____TtC8Podcasts9Debouncer_worker) = v9;
  swift_retain();
  swift_release();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v15 + 8);
  id v11 = v4;
  uint64_t v12 = v16;
  v10(v11, v16);
  OS_dispatch_queue.asyncAfter(deadline:execute:)();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v10)(v6, v12);
}

uint64_t sub_100307B30()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(Strong + OBJC_IVAR____TtC8Podcasts9Debouncer_worker) = 0;
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v2 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC8Podcasts9Debouncer_action);
    swift_retain();
    uint64_t v3 = swift_release();
    v2(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_100307BF0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts9Debouncer_delay;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100307CBC()
{
  return type metadata accessor for Debouncer();
}

uint64_t type metadata accessor for Debouncer()
{
  uint64_t result = qword_100601E68;
  if (!qword_100601E68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100307D10()
{
  uint64_t result = type metadata accessor for DispatchTimeInterval();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100307DC8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100307E00()
{
  return sub_100307B30();
}

uint64_t sub_100307E08()
{
  return sub_10030777C();
}

uint64_t sub_100307E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  uint64_t v18 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  sub_1000566BC();
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_10004AD7C((unint64_t *)&qword_1005F5BE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100054B78((uint64_t *)&unk_1005F7A60);
  sub_10005666C((unint64_t *)&qword_1005F5BF0, (uint64_t *)&unk_1005F7A60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v18);
  *(void *)(v3 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v3 + OBJC_IVAR____TtC8Podcasts9Debouncer_worker) = 0;
  uint64_t v10 = (void *)(v3 + OBJC_IVAR____TtC8Podcasts9Debouncer_action);
  uint64_t v11 = v20;
  *uint64_t v10 = v19;
  v10[1] = v11;
  uint64_t v12 = v3 + OBJC_IVAR____TtC8Podcasts9Debouncer_delay;
  uint64_t v13 = type metadata accessor for DispatchTimeInterval();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v21, v13);
  swift_retain();
  sub_10030782C();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
  return v4;
}

id AppDownloadedEffectApplicator.init(library:podcastsStateCoordinator:)(void *a1, void *a2)
{
  uint64_t v4 = self;
  id v5 = a1;
  id v6 = a2;
  id v7 = [v4 sharedInstance];
  id v8 = [v7 privateQueueContext];

  return v5;
}

uint64_t AppDownloadedEffectApplicator.apply(effect:to:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  unint64_t v28 = a4;
  unint64_t v29 = a5;
  id v25 = a3;
  uint64_t v27 = a2;
  uint64_t v7 = type metadata accessor for DownloadEnvironment();
  uint64_t v26 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DownloadedAssetEffect();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v27, v7);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + *(unsigned __int8 *)(v8 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a3;
  uint64_t v18 = v28;
  uint64_t v19 = v29;
  *((void *)v17 + 3) = v28;
  *((void *)v17 + 4) = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v17[v15], v14, v11);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], v10, v26);
  sub_100054B78(&qword_100601F30);
  swift_allocObject();
  id v20 = v25;
  id v21 = v18;
  id v22 = v19;
  uint64_t v30 = Future.init(_:)();
  sub_1003085B8();
  uint64_t v23 = Publisher.eraseToAnyPublisher()();
  swift_release();
  return v23;
}

uint64_t sub_100308444(uint64_t a1, uint64_t a2, uint8_t *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  v19[0] = a1;
  sub_100054B78(&qword_100601F40);
  __chkstk_darwin();
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v15 = (char *)v19 - v14;
  __chkstk_darwin();
  uint64_t v17 = (char *)v19 - v16;
  sub_100308614(a6, a7, a3, a4, a5, (uint64_t)v13);
  swift_storeEnumTagMultiPayload();
  sub_10030954C((uint64_t)v13, (uint64_t)v15);
  sub_10030954C((uint64_t)v15, (uint64_t)v17);
  ((void (*)(char *))v19[0])(v17);
  return sub_1003095B4((uint64_t)v17);
}

unint64_t sub_1003085B8()
{
  unint64_t result = qword_100601F38;
  if (!qword_100601F38)
  {
    sub_100044244(&qword_100601F30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601F38);
  }
  return result;
}

uint64_t sub_100308614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint8_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v77 = a5;
  uint64_t v78 = a4;
  uint64_t v79 = a3;
  v72[1] = a2;
  uint64_t v80 = a6;
  uint64_t v74 = type metadata accessor for URL();
  uint64_t v75 = *(void *)(v74 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v76 = (char *)v72 - v9;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v82 = v10;
  uint64_t v83 = v11;
  __chkstk_darwin();
  uint64_t v13 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v73 = (char *)v72 - v14;
  __chkstk_darwin();
  uint64_t v16 = (char *)v72 - v15;
  __chkstk_darwin();
  uint64_t v18 = (char *)v72 - v17;
  uint64_t v19 = *(void *)(type metadata accessor for DownloadedAssetEffect() - 8);
  __chkstk_darwin();
  id v21 = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v23 = (char *)v72 - v22;
  __chkstk_darwin();
  id v25 = (void *)((char *)v72 - v24);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  uint64_t v84 = a1;
  uint64_t v85 = v26;
  uint64_t v27 = a1;
  uint64_t v29 = v28;
  uint64_t v86 = v19 + 16;
  v26((uint64_t)v72 - v24, v27, v28);
  int v30 = (*(uint64_t (**)(uint64_t *, uint64_t))(v19 + 88))(v25, v29);
  if (v30 == enum case for DownloadedAssetEffect.removeDownload(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v19 + 96))(v25, v29);
    uint64_t v32 = *v25;
    unint64_t v31 = v25[1];
    static Logger.database.getter();
    swift_bridgeObjectRetain_n();
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      v87[0] = swift_slowAlloc();
      v72[0] = v29;
      *(_DWORD *)uint64_t v35 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_10004B974(v32, v31, v87);
      uint64_t v29 = v72[0];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Removing download for episode %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v83 + 8))(v16, v82);
    uint64_t v42 = v85;
    int v43 = v79;
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D010;
    *(void *)(inited + 32) = v32;
    *(void *)(inited + 40) = v31;
    sub_1001729C8(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [(uint8_t *)v43 removeDownloadAssetsForEpisodeUuids:isa];

    return v42(v80, v84, v29);
  }
  else if (v30 == enum case for DownloadedAssetEffect.download(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v19 + 96))(v25, v29);
    uint64_t v37 = *v25;
    unint64_t v36 = v25[1];
    static Logger.database.getter();
    swift_bridgeObjectRetain_n();
    int v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v72[0] = v29;
      uint64_t v40 = v37;
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      v87[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_10004B974(v40, v36, v87);
      uint64_t v29 = v72[0];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Downloading episode %s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v37 = v40;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v83 + 8))(v18, v82);
    double v58 = v85;
    PodcastsStateCoordinator.downloadEpisode(withUUID:isFromSaving:from:in:)(v37, v36, 0, 3, v77);
    swift_bridgeObjectRelease();
    return v58(v80, v84, v29);
  }
  else if (v30 == enum case for DownloadedAssetEffect.delete(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v19 + 96))(v25, v29);
    uint64_t v47 = v75;
    uint64_t v48 = v76;
    uint64_t v49 = v74;
    (*(void (**)(char *, uint64_t *, uint64_t))(v75 + 32))(v76, v25, v74);
    char v50 = v73;
    static Logger.database.getter();
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v8, v48, v49);
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v51, v52))
    {
      double v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v72[0] = v29;
      v87[0] = v54;
      *(_DWORD *)double v53 = 136315138;
      uint64_t v79 = v53 + 4;
      uint64_t v55 = URL.path.getter();
      uint64_t v88 = sub_10004B974(v55, v56, v87);
      uint64_t v49 = v74;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      double v57 = *(void (**)(char *, uint64_t))(v47 + 8);
      v57(v8, v49);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Removing asset at path: %s", v53, 0xCu);
      swift_arrayDestroy();
      uint64_t v29 = v72[0];
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      double v57 = *(void (**)(char *, uint64_t))(v47 + 8);
      v57(v8, v49);
    }

    (*(void (**)(char *, uint64_t))(v83 + 8))(v50, v82);
    uint64_t v67 = v81;
    uint64_t v68 = v76;
    DownloadEnvironment.fileStorage.getter();
    sub_100041A98(v87, v87[3]);
    dispatch thunk of FileManaging.removeItem(at:)();
    v57(v68, v49);
    if (v67)
    {
      return sub_10004D2D8((uint64_t)v87);
    }
    else
    {
      sub_10004D2D8((uint64_t)v87);
      return v85(v80, v84, v29);
    }
  }
  else
  {
    unint64_t v59 = v13;
    static Logger.database.getter();
    v85((uint64_t)v23, v84, v29);
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      v87[0] = v80;
      uint64_t v81 = v59;
      *(_DWORD *)uint64_t v62 = 136315138;
      uint64_t v79 = v62 + 4;
      v85((uint64_t)v21, (uint64_t)v23, v29);
      uint64_t v63 = String.init<A>(describing:)();
      uint64_t v88 = sub_10004B974(v63, v64, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v65 = v23;
      long long v66 = *(void (**)(char *, uint64_t))(v19 + 8);
      v66(v65, v29);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "An uncovered recovery case for download state was encountered: %s", v62, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v83 + 8))(v81, v82);
    }
    else
    {
      uint64_t v69 = v23;
      long long v66 = *(void (**)(char *, uint64_t))(v19 + 8);
      v66(v69, v29);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v13, v82);
    }
    uint64_t v70 = (void (*)(uint64_t, uint64_t, uint64_t))v85;
    type metadata accessor for ApplicationDownloadEffectApplicatorError();
    sub_100309660();
    swift_allocError();
    v70(v71, v84, v29);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return ((uint64_t (*)(uint64_t *, uint64_t))v66)(v25, v29);
  }
}

uint64_t sub_1003091CC(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v26 = type metadata accessor for DownloadEnvironment();
  uint64_t v3 = *(void *)(v26 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DownloadedAssetEffect();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)v2;
  id v23 = *(id *)(v2 + 8);
  id v9 = v23;
  id v21 = *(void **)(v2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v24, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v26);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (v7 + *(unsigned __int8 *)(v3 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = v10;
  *((void *)v13 + 3) = v9;
  uint64_t v14 = v21;
  *((void *)v13 + 4) = v21;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v13[v11], v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v13[v12], v22, v26);
  sub_100054B78(&qword_100601F30);
  swift_allocObject();
  id v15 = v10;
  id v16 = v23;
  id v17 = v14;
  uint64_t v27 = Future.init(_:)();
  sub_1003085B8();
  uint64_t v18 = Publisher.eraseToAnyPublisher()();
  swift_release();
  return v18;
}

ValueMetadata *type metadata accessor for AppDownloadedEffectApplicator()
{
  return &type metadata for AppDownloadedEffectApplicator;
}

uint64_t sub_100309460(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for DownloadedAssetEffect() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for DownloadEnvironment() - 8);
  id v9 = (uint8_t *)v2[2];
  uint64_t v10 = v2[3];
  unint64_t v11 = (void *)v2[4];
  uint64_t v12 = (uint64_t)v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_100308444(a1, a2, v9, v10, v11, (uint64_t)v2 + v6, v12);
}

uint64_t sub_10030954C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100601F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003095B4(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100601F40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ApplicationDownloadEffectApplicatorError()
{
  uint64_t result = qword_100601FC8;
  if (!qword_100601FC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100309660()
{
  unint64_t result = qword_100601F48;
  if (!qword_100601F48)
  {
    type metadata accessor for ApplicationDownloadEffectApplicatorError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100601F48);
  }
  return result;
}

uint64_t *sub_1003096B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_100054B78(&qword_100601F50) + 48);
      uint64_t v8 = *(uint64_t *)((char *)a2 + v7);
      swift_errorRetain();
      *(uint64_t *)((char *)a1 + v7) = v8;
    }
    else
    {
      uint64_t v10 = type metadata accessor for DownloadedAssetEffect();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100309808(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    sub_100054B78(&qword_100601F50);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v4 = type metadata accessor for DownloadedAssetEffect();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
}

uint64_t sub_1003098E0(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(sub_100054B78(&qword_100601F50) + 48);
    uint64_t v6 = *(void *)(a2 + v5);
    swift_errorRetain();
    *(void *)(a1 + v5) = v6;
  }
  else
  {
    uint64_t v7 = type metadata accessor for DownloadedAssetEffect();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1003099D8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100309AE0(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(sub_100054B78(&qword_100601F50) + 48);
      uint64_t v6 = *(void *)(a2 + v5);
      swift_errorRetain();
      *(void *)(a1 + v5) = v6;
    }
    else
    {
      uint64_t v7 = type metadata accessor for DownloadedAssetEffect();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100309AE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ApplicationDownloadEffectApplicatorError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100309B3C(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = sub_100054B78(&qword_100601F50);
    *(void *)(a1 + *(int *)(v5 + 48)) = *(void *)(a2 + *(int *)(v5 + 48));
  }
  else
  {
    uint64_t v6 = type metadata accessor for DownloadedAssetEffect();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100309C2C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100309AE0(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = sub_100054B78(&qword_100601F50);
      *(void *)(a1 + *(int *)(v5 + 48)) = *(void *)(a2 + *(int *)(v5 + 48));
    }
    else
    {
      uint64_t v6 = type metadata accessor for DownloadedAssetEffect();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100309D2C()
{
  uint64_t result = type metadata accessor for DownloadedAssetEffect();
  if (v1 <= 0x3F)
  {
    v3[4] = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_100309E04(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10004D29C(0, &qword_1005FE2F0);
    sub_10028C560();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v16 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_37;
    }
    sub_10004D29C(0, &qword_1005FE2F0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v17;
    swift_unknownObjectRelease();
    uint64_t v11 = v3;
    uint64_t v9 = v4;
    if (!v17) {
      goto LABEL_37;
    }
LABEL_33:
    self;
    if (swift_dynamicCastObjCClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
    uint64_t v3 = v11;
    unint64_t v4 = v9;
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v11 = v3;
LABEL_32:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v8) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v16 + 8 * v13);
    uint64_t v11 = v3 + 1;
    if (!v14)
    {
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v16 + 8 * v11);
      if (!v14)
      {
        uint64_t v11 = v3 + 3;
        if (v3 + 3 >= v8) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v16 + 8 * v11);
        if (!v14)
        {
          uint64_t v11 = v3 + 4;
          if (v3 + 4 >= v8) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v16 + 8 * v11);
          if (!v14)
          {
            uint64_t v11 = v3 + 5;
            if (v3 + 5 >= v8) {
              goto LABEL_37;
            }
            unint64_t v14 = *(void *)(v16 + 8 * v11);
            if (!v14)
            {
              uint64_t v15 = v3 + 6;
              while (v8 != v15)
              {
                unint64_t v14 = *(void *)(v16 + 8 * v15++);
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_31;
                }
              }
LABEL_37:
              sub_10004E644();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void *sub_10030A120()
{
  id v1 = [v0 connectedScenes];
  unint64_t v2 = sub_10004D29C(0, &qword_1005FE2F0);
  sub_10028C560();
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v3 & 0xC000000000000001) != 0)
  {
    unint64_t v4 = (unint64_t *)&_swiftEmptySetSingleton;
    __CocoaSet.makeIterator()();
    uint64_t v5 = __CocoaSet.Iterator.next()();
    if (v5)
    {
      do
      {
        uint64_t v28 = v5;
        swift_dynamicCast();
        if (objc_msgSend(v29, "activationState", v28))
        {
        }
        else
        {
          unint64_t v6 = *((void *)&_swiftEmptySetSingleton + 2);
          if (*((void *)&_swiftEmptySetSingleton + 3) <= v6) {
            sub_1003F6280(v6 + 1);
          }
          Swift::Int v7 = NSObject._rawHashValue(seed:)(*((void *)&_swiftEmptySetSingleton + 5));
          int64_t v8 = (char *)&_swiftEmptySetSingleton + 56;
          uint64_t v9 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
          unint64_t v10 = v7 & ~v9;
          unint64_t v11 = v10 >> 6;
          if (((-1 << v10) & ~*((void *)&_swiftEmptySetSingleton + (v10 >> 6) + 7)) != 0)
          {
            unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*((void *)&_swiftEmptySetSingleton + (v10 >> 6) + 7))) | v10 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v13 = 0;
            unint64_t v14 = (unint64_t)(63 - v9) >> 6;
            do
            {
              if (++v11 == v14 && (v13 & 1) != 0)
              {
                __break(1u);
                goto LABEL_39;
              }
              BOOL v15 = v11 == v14;
              if (v11 == v14) {
                unint64_t v11 = 0;
              }
              v13 |= v15;
              uint64_t v16 = *(void *)&v8[8 * v11];
            }
            while (v16 == -1);
            unint64_t v12 = __clz(__rbit64(~v16)) + (v11 << 6);
          }
          *(void *)&v8[(v12 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v12;
          *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v12) = v29;
          ++*((void *)&_swiftEmptySetSingleton + 2);
        }
        uint64_t v5 = __CocoaSet.Iterator.next()();
      }
      while (v5);
      unint64_t v4 = (unint64_t *)&_swiftEmptySetSingleton;
    }
    swift_release();
  }
  else
  {
    unint64_t v4 = sub_10030A500(v3);
  }
  sub_100309E04((uint64_t)v4);
  unint64_t v2 = v17;
  swift_release();
  if (v2 >> 62) {
    goto LABEL_40;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_41:
    swift_bridgeObjectRelease();
    return 0;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_28:
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    id v20 = [v19 windows];

    sub_10004D29C(0, (unint64_t *)&unk_100602000);
    unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v2 >> 62) {
      goto LABEL_46;
    }
    uint64_t v21 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v21) {
      goto LABEL_37;
    }
LABEL_30:
    uint64_t v22 = 4;
    while (1)
    {
      id v23 = (v2 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v2 + 8 * v22);
      uint64_t v24 = v23;
      uint64_t v25 = v22 - 3;
      if (__OFADD__(v22 - 4, 1)) {
        break;
      }
      if ([v23 isKeyWindow])
      {
        swift_bridgeObjectRelease_n();
        return v24;
      }

      ++v22;
      if (v25 == v21) {
        goto LABEL_37;
      }
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v26) {
      goto LABEL_41;
    }
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v18 = *(id *)(v2 + 32);
    goto LABEL_28;
  }
  __break(1u);
LABEL_46:
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  if (v21) {
    goto LABEL_30;
  }
LABEL_37:
  swift_bridgeObjectRelease_n();
  return 0;
}

unint64_t *sub_10030A500(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    unint64_t v6 = sub_10030A664((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    Swift::Int v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    unint64_t v6 = sub_10030A664((unint64_t *)v7, v4, v2);
    swift_release();
    swift_slowDealloc();
  }
  return v6;
}

unint64_t *sub_10030A664(unint64_t *result, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    uint64_t result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) activationState];
    if (!result)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_1003D002C(v4, a2, v5, a3);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t *FeedManager.shared.unsafeMutableAddressor()
{
  if (qword_1005F5AB8 != -1) {
    swift_once();
  }
  return &static FeedManager.shared;
}

uint64_t sub_10030A84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      int64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          int64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_10030A984(Swift::UInt64 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_10030AA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    goto LABEL_9;
  }
  Hasher.init(_seed:)();
  EpisodeStateIdentifier.hash(into:)();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v8 = a4 + 56;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)(a4 + 48) + 24 * v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_1001DD838(*(void *)v9, v11, v12);
  char v13 = static EpisodeStateIdentifier.== infix(_:_:)();
  sub_1001DD848(v10, v11, v12);
  if (v13)
  {
    char v14 = 1;
    return v14 & 1;
  }
  uint64_t v15 = ~v6;
  unint64_t v16 = (v7 + 1) & v15;
  if (((*(void *)(v8 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
  {
LABEL_9:
    char v14 = 0;
    return v14 & 1;
  }
  do
  {
    uint64_t v17 = *(void *)(a4 + 48) + 24 * v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    sub_1001DD838(*(void *)v17, v19, v20);
    char v14 = static EpisodeStateIdentifier.== infix(_:_:)();
    sub_1001DD848(v18, v19, v20);
    if (v14) {
      break;
    }
    unint64_t v16 = (v16 + 1) & v15;
  }
  while (((*(void *)(v8 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
  return v14 & 1;
}

BOOL sub_10030AC24(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = static Hasher._hash(seed:_:)();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_10030ACF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

id static FeedManager.shared.getter()
{
  if (qword_1005F5AB8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static FeedManager.shared;

  return v0;
}

uint64_t sub_10030AE94(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  unint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  BOOL v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)&v2[OBJC_IVAR___MTFeedManager_queue];
  char v13 = (void *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_10030D528;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100560F68;
  uint64_t v14 = _Block_copy(aBlock);
  unint64_t v15 = v2;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  sub_10004ADC4((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_10030B168(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v5 = a1 + OBJC_IVAR___MTFeedManager__system;
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR___MTFeedManager__system);
  if (v6)
  {
    uint64_t v8 = *(void *)(v5 + 8);
    uint64_t v7 = *(void *)(v5 + 16);
    swift_unknownObjectRetain();
    swift_retain();
    a2(v6, v8, v7);
    return sub_10003B4E8(v6);
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a2;
    *(void *)(v11 + 24) = a3;
    BOOL v12 = (void **)(a1 + OBJC_IVAR___MTFeedManager__pendingBlocks);
    swift_beginAccess();
    char v13 = *v12;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char *v12 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v13 = sub_1002F001C(0, v13[2] + 1, 1, v13);
      char *v12 = v13;
    }
    unint64_t v16 = v13[2];
    unint64_t v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      char v13 = sub_1002F001C((void *)(v15 > 1), v16 + 1, 1, v13);
      char *v12 = v13;
    }
    v13[2] = v16 + 1;
    BOOL v17 = &v13[2 * v16];
    v17[4] = sub_10030D56C;
    v17[5] = v11;
    return swift_endAccess();
  }
}

uint64_t FeedManager.isUpdatingPublisher.getter()
{
  uint64_t v0 = sub_100054B78(&qword_100602010);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  char v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Subscribers.Demand.unlimited.getter();
  sub_100054B78((uint64_t *)&unk_100602020);
  sub_100054B78((uint64_t *)&unk_1005FCA40);
  sub_100044200((unint64_t *)&unk_100602030, (uint64_t *)&unk_100602020);
  sub_100044200(&qword_100603460, (uint64_t *)&unk_1005FCA40);
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  sub_100044200((unint64_t *)&unk_100602040, &qword_100602010);
  uint64_t v4 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_10030B4C0()
{
  uint64_t v1 = v0;
  uint64_t updated = type metadata accessor for FeedUpdateType();
  uint64_t v3 = *(void *)(updated - 8);
  __chkstk_darwin(updated);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    id v11 = [self defaultCenter];
    [v11 postNotificationName:@"MTFeedUpdateDidEndUpdatingAllFeeds" object:v1];

    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for FeedUpdateType.batch(_:), updated);
    FeedUpdateType.endInterval(for:success:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, updated);
    sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
    id v12 = [self sharedInstance];
    id v13 = [v12 importContext];

    static MTPodcast.recalculateAvailabilityDates(in:completion:)();
    sub_10004D29C(0, (unint64_t *)&unk_1005FBA00);
    id v14 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
    NSString v15 = String._bridgeToObjectiveC()();
    [v14 processNotificationsWithReason:v15];
  }
  else
  {
    __break(1u);
  }
}

id FeedManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedManager();
  return [super dealloc];
}

void sub_10030B948(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

void sub_10030B9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v4 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = (id)v4;
  (*(void (**)(uint64_t))(a3 + 16))(a3);
}

void sub_10030BA28()
{
  id v0 = [self sharedInstance];
  if (v0)
  {
    id v1 = v0;
    [v0 showInternetUnreachableDialog];
  }
  else
  {
    __break(1u);
  }
}

uint64_t FeedManager.isUpdatingShow(url:storeID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a1;
  uint64_t v3 = sub_100054B78(&qword_100602060);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_100602068);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_100602020);
  UninitializedCurrentValueSubject.value.getter();
  uint64_t v13 = v29;
  if (v29)
  {
    uint64_t v26 = v3;
    uint64_t v27 = v4;
    swift_retain();
    dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter();
    swift_release();
    ReadOnlyCurrentValueSubject.value.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    BOOL v14 = sub_10030AC24(a2, v29);
    swift_bridgeObjectRelease();
    if (v14)
    {
      sub_10003B4E8(v13);
      return 1;
    }
    sub_10003B19C(v28, (uint64_t)v8);
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
    {
      sub_10003B4E8(v13);
      sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7750);
    }
    else
    {
      uint64_t v18 = URL.absoluteString.getter();
      unint64_t v20 = v19;
      uint64_t v21 = v8;
      uint64_t v22 = v18;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
      uint64_t v23 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0) {
        uint64_t v23 = v22 & 0xFFFFFFFFFFFFLL;
      }
      if (v23)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter();
        swift_unknownObjectRelease();
        uint64_t v24 = v26;
        ReadOnlyCurrentValueSubject.value.getter();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v24);
        char v25 = sub_10030A84C(v22, v20, v29);
        sub_10003B4E8(v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v25) {
          return 1;
        }
      }
      else
      {
        sub_10003B4E8(v13);
        swift_bridgeObjectRelease();
      }
    }
  }
  return 0;
}

uint64_t FeedManager.handleEventsForBackgroundURLSession(for:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  void v9[5] = a3;
  v9[6] = a4;
  id v10 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10030AE94((uint64_t)sub_10030C9B8, (uint64_t)v9);

  return swift_release();
}

void sub_10030C134(void *a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v2 initWithEntityName:v3];

  id v4 = [self truePredicate];
  [v11 setPredicate:v4];

  sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
  unint64_t v5 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v10 = v5;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v6) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v6) {
      goto LABEL_11;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = 0;
  do
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v10 + 8 * v7 + 32);
    }
    uint64_t v9 = v8;
    ++v7;
    [v8 setNextSyncToken:0 v11];
    [v9 setBootstrapGeneration:0];
    [v9 setUpdatedDate:0.0];
  }
  while (v6 != v7);
LABEL_11:
  swift_bridgeObjectRelease();
  [a1 saveInCurrentBlock];
}

void sub_10030C354(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  unint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.feedUpdate.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Migrating to delta updater, deleting nextSyncTokens and bootstrapGenerations", v8, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithEntityName:v10];

  id v12 = [self truePredicate];
  [v11 setPredicate:v12];

  sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
  unint64_t v13 = NSManagedObjectContext.fetch<A>(_:)();
  id v18 = a1;
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_5;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    [v18 saveInCurrentBlock];

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_12;
  }
LABEL_5:
  if (v14 >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v16 = *(id *)(v13 + 8 * v15 + 32);
      }
      uint64_t v17 = v16;
      ++v15;
      [v16 setUpdatedDate:0.0];
      [v17 setFeedUniquenessHash:0];
      [v17 setNextSyncToken:0];
      [v17 setBootstrapGeneration:0];
    }
    while (v14 != v15);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t FeedManager.isUpdating.getter()
{
  uint64_t v0 = sub_100054B78(&qword_100602068);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78(&qword_100602060);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  os_log_type_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_100602020);
  UninitializedCurrentValueSubject.value.getter();
  if (v13)
  {
    swift_getObjectType();
    dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter();
    ReadOnlyCurrentValueSubject.value.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = v13;
    sub_100054B78(&qword_100602070);
    sub_100044200(&qword_100602078, &qword_100602070);
    char v8 = Collection.isNotEmpty.getter();
    swift_bridgeObjectRelease();
    if (v8)
    {
      swift_unknownObjectRelease();
      swift_release();
      char v9 = 1;
    }
    else
    {
      dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter();
      ReadOnlyCurrentValueSubject.value.getter();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v11[1] = v12;
      sub_100054B78(&qword_100602080);
      sub_100044200(&qword_100602088, &qword_100602080);
      char v9 = Collection.isNotEmpty.getter();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_10030C99C()
{
  return sub_10001705C((uint64_t (*)(void))&type metadata accessor for FeedUpdateRequest);
}

uint64_t sub_10030C9BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v38 = *(void *)(v13 - 8);
  uint64_t v39 = v13;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v34 - v16;
  uint64_t aBlock = swift_getObjectType();
  uint64_t v41 = a2;
  swift_unknownObjectRetain();
  sub_100054B78((uint64_t *)&unk_100602210);
  uint64_t v18 = String.init<A>(describing:)();
  unint64_t v20 = v19;
  uint64_t aBlock = a4;
  uint64_t v41 = a5;
  uint64_t v46 = v18;
  unint64_t v47 = v19;
  sub_1001AA530();
  if (StringProtocol.contains<A>(_:)())
  {
    uint64_t v21 = (void (**)(void))[a1 sessionCompletionHandler];
    uint64_t v22 = &selRef_setPropertiesToUpdate_;
    if (v21)
    {
      uint64_t v23 = v21;
      uint64_t v37 = a6;
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.feedUpdate.getter();
      swift_bridgeObjectRetain();
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v36 = a7;
        uint64_t aBlock = v27;
        *(_DWORD *)uint64_t v26 = 136315138;
        uint64_t v35 = (uint64_t)(v26 + 4);
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_10004B974(v18, v20, &aBlock);
        uint64_t v22 = &selRef_setPropertiesToUpdate_;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "handleEventsForBackgroundURLSession being called BEFORE URLSessionDidFinishEventsForBackgroundURLSession for %s.  Invoking existing completionHandler.", v26, 0xCu);
        swift_arrayDestroy();
        a7 = v36;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v39);
      a6 = v37;
      v23[2](v23);
      _Block_release(v23);
      [a1 v22[74]];
      if (a6) {
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (a6)
      {
LABEL_14:
        uint64_t v44 = a6;
        uint64_t v45 = a7;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v41 = 1107296256;
        uint64_t v42 = sub_10003B424;
        int v43 = &unk_100560FB8;
        uint64_t v32 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        goto LABEL_15;
      }
    }
    uint64_t v32 = 0;
LABEL_15:
    [a1 v22[74] v32];
    _Block_release(v32);
    return swift_unknownObjectRelease();
  }
  uint64_t v37 = a6;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.feedUpdate.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t aBlock = v35;
    *(_DWORD *)uint64_t v30 = 136315394;
    uint64_t v36 = a7;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_10004B974(a4, a5, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_10004B974(v18, v20, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Mismatch between updater used for backgroundURLSession: %s and the current FeedManager system: %s. Proceeding to just call the background session completionHandler.", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v15, v39);
  if (v37) {
    v37(v31);
  }
  return swift_unknownObjectRelease();
}

void _s8Podcasts11FeedManagerC10resetCacheyyFZ_0()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self sharedInstance];
  id v5 = [v4 importContext];

  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.feedUpdate.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    char v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Feature Flag StoreBothFreeAndPaidUrls was changed since last bootup. Clearing feed update cache.", v8, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  aBlock[4] = sub_10030D4E0;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100560F18;
  NSString v10 = _Block_copy(aBlock);
  id v11 = v5;
  swift_release();
  [v11 performBlock:v10];
  _Block_release(v10);
}

void _s8Podcasts11FeedManagerC014migrateToDeltaB6SystemyyFZ_0()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 importContext];

  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  v5[4] = sub_10030D4D8;
  v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_10003B424;
  v5[3] = &unk_100560EC8;
  uint64_t v3 = _Block_copy(v5);
  id v4 = v1;
  swift_release();
  [v4 performBlock:v3];
  _Block_release(v3);
}

void *assignWithCopy for FeedManager.System(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FeedManager.System(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t sub_10030D360()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_10030D39C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C9BC(a1, a2, a3, *(void *)(v3 + 24), *(void *)(v3 + 32), *(void (**)(void))(v3 + 40), *(void *)(v3 + 48));
}

void sub_10030D3A8(char a1, uint64_t a2)
{
  sub_10030B948(a1, a2, *(void *)(v2 + 16));
}

void sub_10030D3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(v3 + 16);
  id v6 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, id, uint64_t))(v5 + 16))(v5, v6, a3);
}

id sub_10030D410()
{
  id v1 = (void *)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();

  return v1;
}

void sub_10030D458(uint64_t a1, uint64_t a2)
{
  sub_10030B9B8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10030D460()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void *sub_10030D498()
{
  return &protocol witness table for String;
}

uint64_t sub_10030D4A4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

void *sub_10030D4B4()
{
  return &protocol witness table for Int64;
}

uint64_t sub_10030D4C0()
{
  return sub_10001705C((uint64_t (*)(void))&type metadata accessor for FeedManagerBagConfiguration);
}

void sub_10030D4D8()
{
  sub_10030C354(*(void **)(v0 + 16));
}

void sub_10030D4E0()
{
  sub_10030C134(*(void **)(v0 + 16));
}

uint64_t sub_10030D4E8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10030D528()
{
  return sub_10030B168(*(void *)(v0 + 16), *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10030D534()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10030D56C(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, a1[1], a1[2]);
}

uint64_t sub_10030D5A0()
{
  return sub_100044200(&qword_100602078, &qword_100602070);
}

uint64_t sub_10030D5DC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000552AC(&qword_100602070, &qword_100602078, a1);
}

uint64_t sub_10030D604()
{
  return sub_100044200(&qword_100602088, &qword_100602080);
}

uint64_t sub_10030D640@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000552AC(&qword_100602080, &qword_100602088, a1);
}

uint64_t sub_10030D668()
{
  return swift_deallocObject();
}

void sub_10030D6F4(uint64_t a1)
{
  uint64_t v36 = a1;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v35 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for TextFieldAlertSheet.Style();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin();
  uint64_t v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ModalSheet.Action.ActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  os_log_type_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100470E80;
  uint64_t v9 = self;
  id v10 = [v9 mainBundle];
  v38._object = (void *)0xE000000000000000;
  v11._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v11._object = (void *)0xE600000000000000;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v38._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v38);

  uint64_t v13 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v13(v7, enum case for ModalSheet.Action.ActionType.cancel(_:), v4);
  type metadata accessor for ModalSheet.Action();
  swift_allocObject();
  *(void *)(v8 + 32) = ModalSheet.Action.init(title:type:handler:)();
  id v14 = [v9 mainBundle];
  v39._object = (void *)0xE000000000000000;
  v15._uint64_t countAndFlagsBits = 0x776F6C6C6F46;
  v15._object = (void *)0xE600000000000000;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v39._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v39);

  v13(v7, enum case for ModalSheet.Action.ActionType.primary(_:), v4);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v31;
  *(void *)(v17 + 16) = v31;
  swift_allocObject();
  id v19 = v18;
  *(void *)(v8 + 40) = ModalSheet.Action.init(title:type:handler:)();
  uint64_t v37 = v8;
  specialized Array._endMutation()();
  id v20 = [v9 mainBundle];
  v40._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  v40._object = (void *)0x80000001004DD010;
  v21._object = (void *)0x80000001004DCFF0;
  v21._uint64_t countAndFlagsBits = 0xD000000000000013;
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v40);

  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, enum case for TextFieldAlertSheet.Style.multiline(_:), v34);
  id v23 = objc_allocWithZone((Class)type metadata accessor for TextFieldAlertSheet());
  uint64_t v24 = (uint64_t)v35;
  os_log_type_t v25 = (void *)TextFieldAlertSheet.init(title:style:size:actions:)();
  sub_10003B19C(v36, v24);
  uint64_t v26 = type metadata accessor for URL();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26) == 1)
  {
    sub_100222D54(v24);
  }
  else
  {
    URL.absoluteString.getter();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v26);
  }
  dispatch thunk of TextFieldAlertSheet.text.setter();
  [v25 setModalPresentationStyle:2];
  id v28 = [v19 presentingViewController];
  if (v28)
  {
    os_log_type_t v29 = v28;
    [v28 presentViewController:v25 animated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10030DC64(void *a1, void *a2)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin();
  os_log_type_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  __chkstk_darwin();
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  Swift::String v12 = (char *)&v29 - v11;
  uint64_t v13 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  Swift::String v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TextFieldAlertSheet();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    id v31 = a1;
    uint64_t v29 = dispatch thunk of TextFieldAlertSheet.text.getter();
    uint64_t v19 = v18;
    dispatch thunk of ModalSheet.dismiss()();
    sub_1000566BC();
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchQoS.QoSClass.default(_:), v13);
    uint64_t v30 = static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v33 = *(void *)(v33 + 8);
    id v20 = v10;
    uint64_t v21 = v34;
    ((void (*)(char *, uint64_t))v33)(v20, v34);
    Swift::String v22 = (void *)swift_allocObject();
    id v23 = v32;
    uint64_t v24 = v29;
    _DWORD v22[2] = v32;
    v22[3] = v24;
    v22[4] = v19;
    aBlock[4] = sub_10030E908;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003B424;
    uint64_t aBlock[3] = &unk_1005610D0;
    os_log_type_t v25 = _Block_copy(aBlock);
    id v26 = v23;
    static DispatchQoS.unspecified.getter();
    Swift::String v38 = _swiftEmptyArrayStorage;
    sub_10002FC48();
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_10002FBEC();
    uint64_t v27 = v36;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v28 = (void *)v30;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v27, v3);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v37);
    ((void (*)(char *, uint64_t))v33)(v12, v21);
    return swift_release();
  }
  return result;
}

void sub_10030E0D8(id a1, uint64_t a2, NSString a3)
{
  if (a3) {
    a3 = String._bridgeToObjectiveC()();
  }
  id v4 = a3;
  [a1 performSubscribe:];
}

void sub_10030E254()
{
  uint64_t v0 = type metadata accessor for TextFieldAlertSheet.Style();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin();
  uint64_t v27 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for ModalSheet.Action.ActionType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100470E80;
  os_log_type_t v7 = self;
  id v8 = [v7 mainBundle];
  v31._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v9._object = (void *)0xE600000000000000;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v31._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v31);

  uint64_t v11 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v11(v5, enum case for ModalSheet.Action.ActionType.cancel(_:), v2);
  type metadata accessor for ModalSheet.Action();
  swift_allocObject();
  *(void *)(v6 + 32) = ModalSheet.Action.init(title:type:handler:)();
  id v12 = [v7 mainBundle];
  v32._object = (void *)0xE000000000000000;
  v13._uint64_t countAndFlagsBits = 0x616C502065766153;
  v13._object = (void *)0xED00007473696C79;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v32._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v32);

  v11(v5, enum case for ModalSheet.Action.ActionType.primary(_:), v2);
  uint64_t v15 = swift_allocObject();
  Swift::String v16 = v26;
  *(void *)(v15 + 16) = v26;
  swift_allocObject();
  id v17 = v16;
  *(void *)(v6 + 40) = ModalSheet.Action.init(title:type:handler:)();
  uint64_t v30 = v6;
  specialized Array._endMutation()();
  id v18 = [v7 mainBundle];
  v33._object = (void *)0xE000000000000000;
  v19._object = (void *)0x80000001004D7CE0;
  v19._uint64_t countAndFlagsBits = 0xD000000000000012;
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v33);

  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for TextFieldAlertSheet.Style.singleline(_:), v29);
  id v21 = objc_allocWithZone((Class)type metadata accessor for TextFieldAlertSheet());
  Swift::String v22 = (void *)TextFieldAlertSheet.init(title:style:size:actions:)();
  id v23 = [v17 presentingViewController];
  if (v23)
  {
    uint64_t v24 = v23;
    [v23 presentViewController:v22 animated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

void sub_10030E6A0(void *a1, void *a2)
{
  type metadata accessor for TextFieldAlertSheet();
  if (!swift_dynamicCastClass()) {
    return;
  }
  id v8 = a1;
  uint64_t v4 = dispatch thunk of TextFieldAlertSheet.text.getter();
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a2 presentStationWithTitle:v7];

    dispatch thunk of ModalSheet.dismiss()();
LABEL_7:

    return;
  }

  swift_bridgeObjectRelease();
}

id sub_10030E828()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MacAddPodcastOrStationController();
  [super dealloc];
}

uint64_t type metadata accessor for MacAddPodcastOrStationController()
{
  return self;
}

uint64_t sub_10030E880()
{
  return swift_deallocObject();
}

void sub_10030E8B8(void *a1)
{
  sub_10030E6A0(a1, *(void **)(v1 + 16));
}

uint64_t sub_10030E8C0(void *a1)
{
  return sub_10030DC64(a1, *(void **)(v1 + 16));
}

uint64_t sub_10030E8C8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10030E908()
{
  sub_10030E0D8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(NSString *)(v0 + 32));
}

void *sub_10030E918(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_100312D6C(a1, a2, (uint64_t)a3);
  swift_release();

  return v4;
}

uint64_t sub_10030E964(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100054B78(&qword_100602368);
    objc_super v2 = (unsigned char *)static _SetStorage.allocate(capacity:)();
  }
  else
  {
    objc_super v2 = &_swiftEmptySetSingleton;
  }
  uint64_t v24 = a1 + 56;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v23 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v8 << 6);
    int64_t v12 = v8;
LABEL_28:
    sub_100172EBC(*(void *)(a1 + 48) + 40 * v11, (uint64_t)&v26);
    type metadata accessor for ServerCategory();
    if ((swift_dynamicCast() & 1) == 0 || !v25)
    {
      swift_release_n();
      sub_10004E644();
      swift_release();
      return 0;
    }
    sub_1003132EC(&qword_100602360, (void (*)(uint64_t))&type metadata accessor for ServerCategory);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v16 = -1 << v2[32];
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)&v6[8 * (v17 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v17) & ~*(void *)&v6[8 * (v17 >> 6)])) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v19 = 0;
      unint64_t v20 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v20 && (v19 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v21 = v18 == v20;
        if (v18 == v20) {
          unint64_t v18 = 0;
        }
        v19 |= v21;
        uint64_t v22 = *(void *)&v6[8 * v18];
      }
      while (v22 == -1);
      unint64_t v9 = __clz(__rbit64(~v22)) + (v18 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    *(void *)(*((void *)v2 + 6) + 8 * v9) = v25;
    ++*((void *)v2 + 2);
    int64_t v8 = v12;
    unint64_t v5 = v10;
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v13 >= v23) {
    goto LABEL_40;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v13);
  int64_t v12 = v8 + 1;
  if (v14) {
    goto LABEL_27;
  }
  int64_t v12 = v8 + 2;
  if (v8 + 2 >= v23) {
    goto LABEL_40;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v12);
  if (v14) {
    goto LABEL_27;
  }
  int64_t v12 = v8 + 3;
  if (v8 + 3 >= v23) {
    goto LABEL_40;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v12);
  if (v14) {
    goto LABEL_27;
  }
  int64_t v12 = v8 + 4;
  if (v8 + 4 >= v23) {
    goto LABEL_40;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v12);
  if (v14)
  {
LABEL_27:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    goto LABEL_28;
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v23)
  {
LABEL_40:
    swift_release();
    sub_10004E644();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14)
  {
    int64_t v12 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v23) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t *CategoryIngester.__allocating_init(libraryImageProvider:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_100055EF0(a1, v3);
  uint64_t v6 = sub_1003130C0(v5, v1, v3, v4);
  sub_10004D2D8(a1);
  return v6;
}

uint64_t *CategoryIngester.init(libraryImageProvider:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  sub_100055EF0(a1, v3);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  int64_t v8 = sub_10030F170((uint64_t)v6, v1, v3, v4);
  sub_10004D2D8(a1);
  return v8;
}

uint64_t CategoryIngester.unsafeIngestNewCategory(ctx:feedCategory:)(NSObject *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_100312838(a1, a2, v2, ObjectType);
}

uint64_t CategoryIngester.unsafeIngestCategory(category:feedCategory:ctx:)(void *a1, void *a2, NSObject *a3)
{
  swift_getObjectType();

  return sub_100310F18(a1, a2, a3, v3);
}

uint64_t CategoryIngester.unsafeIngestFeedCategory(_:ctx:)(void *a1, NSObject *a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_10030F690(a1, a2, v2, ObjectType);
}

uint64_t CategoryIngester.deinit()
{
  sub_10004D2D8(v0 + 16);
  return v0;
}

uint64_t sub_10030F140@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t *sub_10030F170(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  a2[5] = a3;
  a2[6] = a4;
  uint64_t v7 = sub_10004A244(a2 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v7, a1, a3);
  return a2;
}

uint64_t sub_10030F1E0(void *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v39 = *(void *)(v6 - 8);
  __chkstk_darwin();
  int64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v34 - v9;
  id v11 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  AdamID.init(_:)();
  if ((v12 & 1) != 0 || (uint64_t v13 = NSManagedObjectContext.unsafeCategory(forAdamID:)()) == 0)
  {
    static Logger.interests.getter();
    swift_unknownObjectRetain_n();
    int64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v36 = a3;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      Swift::String v38 = a2;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v35 = v25 + 4;
      id v26 = [a1 identifier];
      uint64_t v37 = v6;
      id v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v30 = v29;

      uint64_t v31 = v28;
      a3 = v36;
      uint64_t v40 = sub_10004B974(v31, v30, &v41);
      a2 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[Categories] Could not find an existing category for %s. Ingesting a new category.", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v37);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v6);
    }
    swift_retain();
    uint64_t v32 = sub_100312300(a2, a1, a3);
  }
  else
  {
    unint64_t v14 = (void *)v13;
    static Logger.interests.getter();
    swift_unknownObjectRetain_n();
    int64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      Swift::String v38 = a2;
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v41 = v36;
      uint64_t v35 = v17;
      *(_DWORD *)unint64_t v17 = 136315138;
      id v18 = [a1 identifier:v17 + 4];
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v37 = v6;
      uint64_t v20 = v19;
      unint64_t v22 = v21;

      uint64_t v40 = sub_10004B974(v20, v22, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      a2 = v38;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Categories] Found an existing category for %s. Ingesting an existing category.", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v37);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v6);
    }
    swift_retain();
    uint64_t v32 = sub_10030FB28(v14, a1, a2, a3);
  }
  swift_release();
  return v32;
}

uint64_t sub_10030F690(void *a1, NSObject *a2, uint64_t a3, NSObject *a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v12 = (char *)v35 - v11;
  id v13 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  AdamID.init(_:)();
  if ((v14 & 1) != 0 || (uint64_t v15 = NSManagedObjectContext.unsafeCategory(forAdamID:)()) == 0)
  {
    static Logger.interests.getter();
    swift_unknownObjectRetain_n();
    os_log_type_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      Swift::String v38 = a4;
      id v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v43 = v37;
      uint64_t v39 = a3;
      *(_DWORD *)id v26 = 136315138;
      uint64_t v36 = v26 + 4;
      id v27 = a2;
      id v28 = [a1 identifier];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v31 = v30;

      a2 = v27;
      uint64_t v32 = v29;
      a4 = v38;
      uint64_t v42 = sub_10004B974(v32, v31, &v43);
      a3 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[Categories] Could not find an existing category for %s. Ingesting a new category.", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
    swift_unknownObjectRetain();
    uint64_t v33 = sub_100312838(a2, a1, a3, (uint64_t)a4);
  }
  else
  {
    os_log_type_t v16 = (void *)v15;
    Swift::String v38 = a2;
    static Logger.interests.getter();
    swift_unknownObjectRetain_n();
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v43 = v37;
      uint64_t v36 = v19;
      *(_DWORD *)uint64_t v19 = 136315138;
      v35[1] = v19 + 4;
      id v20 = [a1 identifier];
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = a3;
      unint64_t v23 = v22;

      uint64_t v42 = sub_10004B974(v21, v23, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      a3 = v39;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[Categories] Found an existing category for %s. Ingesting an existing category.", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
    swift_unknownObjectRetain();
    uint64_t v33 = sub_100310F18(v16, a1, v38, a3);
  }
  swift_unknownObjectRelease();
  return v33;
}

uint64_t sub_10030FB28(void *a1, void *a2, NSObject *a3, uint64_t a4)
{
  uint64_t v142 = a4;
  uint64_t v148 = a3;
  type metadata accessor for NetworkTaskPriority();
  __chkstk_darwin();
  uint64_t v140 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin();
  char v136 = (char *)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for ArtworkRequest();
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin();
  uint64_t v137 = (char *)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ArtworkModel();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v135 = (uint64_t)&v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v135 - v14;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v149 = v16;
  uint64_t v150 = v17;
  __chkstk_darwin();
  v147 = (char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v143 = (char *)&v135 - v19;
  __chkstk_darwin();
  uint64_t v146 = (char *)&v135 - v20;
  __chkstk_darwin();
  v145 = (char *)&v135 - v21;
  __chkstk_darwin();
  unint64_t v23 = (char *)&v135 - v22;
  id v24 = [a2 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v25 = AdamID.init(_:)();
  if (v26)
  {
    static Logger.interests.getter();
    uint64_t v34 = a1;
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 134217984;
      *(void *)&v151[0] = [v34 adamID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[Categories] Cannot ingest feed category because there is no adamID in the feed category object: %llu", v37, 0xCu);
      swift_slowDealloc();
      uint64_t v34 = v35;
    }
    else
    {
    }
    uint64_t v38 = v149;

    (*(void (**)(char *, uint64_t))(v150 + 8))(v23, v38);
    return 0;
  }
  id v27 = (void *)v25;
  [a1 setAdamID:v25];
  NSString v28 = [a2 name];
  if (!v28)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [a1 setName:v28];

  id v29 = [a2 url];
  [a1 setUrl:v29];

  id v30 = [a2 color];
  [a1 setColor:v30];

  type metadata accessor for ServerArtwork();
  swift_retain();
  id v144 = a2;
  if (ServerArtwork.__allocating_init(from:)())
  {
    id v31 = v144;
    id v32 = [v144 artworkPrimaryColor];
    [a1 setArtworkPrimaryColor:v32];

    id v33 = [v31 artworkTemplateURL];
    [a1 setArtworkTemplateURL:v33];

    swift_retain();
    ArtworkModel.init(serverArtwork:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      swift_release();
      sub_1003131C4((uint64_t)v10);
    }
    else
    {
      sub_100313224((uint64_t)v10, (uint64_t)v15);
      ServerArtwork.height.getter();
      if ((v40 & 1) == 0)
      {
        Class isa = Int._bridgeToObjectiveC()().super.super.isa;
        MTCategory.setArtworkHeightNumber(_:)((NSNumber)isa);
      }
      ServerArtwork.width.getter();
      if ((v42 & 1) == 0)
      {
        Class v43 = Int._bridgeToObjectiveC()().super.super.isa;
        MTCategory.setArtworkWidthNumber(_:)((NSNumber)v43);
      }
      sub_100313288((uint64_t)v15, v135);
      ArtworkModel.size.getter();
      uint64_t v44 = type metadata accessor for CropCode();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v136, 1, 1, v44);
      uint64_t v152 = 0;
      memset(v151, 0, sizeof(v151));
      static NetworkTaskPriority.dispatchQueuePriority()();
      uint64_t v45 = v137;
      ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)();
      sub_100041A98((void *)(v142 + 16), *(void *)(v142 + 40));
      dispatch thunk of ImageProvider.prefetch(artwork:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v138 + 8))(v45, v139);
      sub_10022D86C((uint64_t)v15);
    }
  }
  uint64_t v46 = v145;
  static Logger.interests.getter();
  uint64_t v39 = a1;
  unint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v141 = v27;
  if (v49)
  {
    uint64_t v50 = swift_slowAlloc();
    *(void *)&v151[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136315394;
    id v51 = [v39 name];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v54 = v53;

    unsigned __int8 v153 = (void *)sub_10004B974(v52, v54, (uint64_t *)v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2080;
    unsigned __int8 v153 = v141;
    sub_1001A5874();
    uint64_t v55 = BinaryInteger.description.getter();
    unsigned __int8 v153 = (void *)sub_10004B974(v55, v56, (uint64_t *)v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "[Categories] Ingested category %s with adamID: %s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    id v27 = v141;
    swift_slowDealloc();
    swift_slowDealloc();

    double v57 = *(char **)(v150 + 8);
    double v58 = v145;
  }
  else
  {

    double v57 = *(char **)(v150 + 8);
    double v58 = v46;
  }
  uint64_t v59 = v149;
  ((void (*)(char *, uint64_t))v57)(v58, v149);
  uint64_t v60 = v147;
  uint64_t v62 = v143;
  id v61 = v144;
  uint64_t v63 = NSManagedObjectContext.unsafeInterest(forAdamID:)();
  if (v63)
  {
    unint64_t v64 = v63;
    [v63 setCategory:v39];
    [v39 setInterest:v64];
    static Logger.interests.getter();
    uint64_t v65 = v39;
    long long v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      v145 = v39;
      *(void *)&v151[0] = v69;
      *(_DWORD *)uint64_t v68 = 136315394;
      id v70 = [v65 name];
      uint64_t v140 = v57;
      id v71 = v70;
      uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v74 = v73;

      uint64_t v75 = v72;
      uint64_t v62 = v143;
      unsigned __int8 v153 = (void *)sub_10004B974(v75, v74, (uint64_t *)v151);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      uint64_t v76 = v141;
      unsigned __int8 v153 = v141;
      sub_1001A5874();
      uint64_t v77 = BinaryInteger.description.getter();
      unsigned __int8 v153 = (void *)sub_10004B974(v77, v78, (uint64_t *)v151);
      uint64_t v59 = v149;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_type_t v79 = v67;
      id v27 = v76;
      double v57 = v140;
      _os_log_impl((void *)&_mh_execute_header, v66, v79, "[Categories] Related category %s with adamID: %s to MTInterest.", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      uint64_t v39 = v145;
      swift_slowDealloc();
      uint64_t v60 = v147;
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v57)(v146, v59);
    }
    else
    {

      ((void (*)(char *, uint64_t))v57)(v146, v59);
      id v27 = v141;
    }
    id v61 = v144;
  }
  if ([v61 parent])
  {
    type metadata accessor for ServerCategory();
    uint64_t v80 = swift_dynamicCastClass();
    if (v80
      && (uint64_t v81 = v80,
          swift_unknownObjectRetain(),
          uint64_t v82 = (void *)sub_10030F1E0(v81, v148, v142),
          swift_unknownObjectRelease(),
          v82))
    {
      uint64_t v83 = v57;
      [v39 setParent:v82];
      static Logger.interests.getter();
      id v84 = v82;
      v145 = v39;
      uint64_t v85 = v39;
      id v86 = v84;
      unsigned __int8 v87 = v85;
      id v88 = v86;
      uint64_t v89 = Logger.logObject.getter();
      os_log_type_t v90 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v89, v90))
      {
        uint64_t v91 = swift_slowAlloc();
        uint64_t v146 = (char *)swift_slowAlloc();
        *(void *)&v151[0] = v146;
        *(_DWORD *)uint64_t v91 = 136315906;
        id v92 = [v87 name];
        uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v95 = v94;

        unsigned __int8 v153 = (void *)sub_10004B974(v93, v95, (uint64_t *)v151);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v91 + 12) = 2080;
        unsigned __int8 v153 = v141;
        sub_1001A5874();
        uint64_t v96 = BinaryInteger.description.getter();
        unsigned __int8 v153 = (void *)sub_10004B974(v96, v97, (uint64_t *)v151);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v91 + 22) = 2080;
        id v98 = [v88 name];
        uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v101 = v100;

        unsigned __int8 v153 = (void *)sub_10004B974(v99, v101, (uint64_t *)v151);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v91 + 32) = 2048;
        uint64_t v102 = [v88 adamID];

        unsigned __int8 v153 = v102;
        uint64_t v59 = v149;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        _os_log_impl((void *)&_mh_execute_header, v89, v90, "[Categories] Related category %s with adamID: %s to parent category %s with adamID: %llu.", (uint8_t *)v91, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        id v27 = v141;
        swift_slowDealloc();
        swift_unknownObjectRelease();

        double v57 = *(char **)(v150 + 8);
        ((void (*)(char *, uint64_t))v57)(v143, v59);
      }
      else
      {

        swift_unknownObjectRelease();
        double v57 = v83;
        ((void (*)(char *, uint64_t))v83)(v62, v59);
      }
      uint64_t v60 = v147;
      id v61 = v144;
      uint64_t v39 = v145;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  id v103 = [v61 children];
  uint64_t v104 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v105 = sub_10030E964(v104);
  swift_bridgeObjectRelease();
  if (!v105)
  {
LABEL_52:
    uint64_t v134 = v39;
    return (uint64_t)v39;
  }
  if ((v105 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter() >= 1) {
      goto LABEL_35;
    }
    goto LABEL_49;
  }
  if (*(uint64_t *)(v105 + 16) < 1)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
LABEL_35:
  uint64_t v106 = v142;
  swift_retain();
  unint64_t v107 = (unint64_t)sub_10030E918(v105, v106, v148);
  swift_bridgeObjectRelease();
  unint64_t v108 = swift_bridgeObjectRetain();
  sub_100404778(v108);
  swift_bridgeObjectRelease();
  type metadata accessor for MTCategory();
  sub_1003132EC((unint64_t *)&qword_100602358, (void (*)(uint64_t))&type metadata accessor for MTCategory);
  Class v109 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v39 setChildren:v109];

  static Logger.interests.getter();
  uint64_t v110 = v39;
  swift_bridgeObjectRetain();
  os_log_t v111 = Logger.logObject.getter();
  int v112 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v111, (os_log_type_t)v112))
  {

    swift_bridgeObjectRelease_n();
    ((void (*)(char *, uint64_t))v57)(v60, v59);
    goto LABEL_52;
  }
  LODWORD(v146) = v112;
  uint64_t v148 = v111;
  uint64_t v140 = v57;
  v145 = v39;
  uint64_t v113 = swift_slowAlloc();
  id v144 = (id)swift_slowAlloc();
  *(void *)&v151[0] = v144;
  *(_DWORD *)uint64_t v113 = 136315650;
  id v114 = [v110 name];
  uint64_t v115 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v117 = v116;

  unsigned __int8 v153 = (void *)sub_10004B974(v115, v117, (uint64_t *)v151);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  *(_WORD *)(v113 + 12) = 2080;
  unsigned __int8 v153 = v27;
  sub_1001A5874();
  uint64_t v118 = BinaryInteger.description.getter();
  unsigned __int8 v153 = (void *)sub_10004B974(v118, v119, (uint64_t *)v151);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v113 + 22) = 2080;
  if (v107 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v120 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v120 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v121 = (void (*)(char *, uint64_t))v140;
  if (!v120)
  {
LABEL_51:
    uint64_t v130 = Array.description.getter();
    unint64_t v132 = v131;
    swift_bridgeObjectRelease();
    unsigned __int8 v153 = (void *)sub_10004B974(v130, v132, (uint64_t *)v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v133 = v148;
    _os_log_impl((void *)&_mh_execute_header, v148, (os_log_type_t)v146, "[Categories] Related category %s with adamID: %s to children categories with adamID's: %s.", (uint8_t *)v113, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v121(v147, v149);
    uint64_t v39 = v145;
    goto LABEL_52;
  }
  unsigned __int8 v153 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001BA94C(0, v120 & ~(v120 >> 63), 0);
  if ((v120 & 0x8000000000000000) == 0)
  {
    uint64_t v123 = 0;
    uint64_t v124 = v153;
    do
    {
      if ((v107 & 0xC000000000000001) != 0) {
        id v125 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v125 = *(id *)(v107 + 8 * v123 + 32);
      }
      uint64_t v126 = v125;
      id v127 = [v125 adamID];

      unsigned __int8 v153 = v124;
      unint64_t v129 = v124[2];
      unint64_t v128 = v124[3];
      if (v129 >= v128 >> 1)
      {
        sub_1001BA94C(v128 > 1, v129 + 1, 1);
        uint64_t v124 = v153;
      }
      ++v123;
      v124[2] = v129 + 1;
      v124[v129 + 4] = v127;
    }
    while (v120 != v123);
    uint64_t v121 = (void (*)(char *, uint64_t))v140;
    goto LABEL_51;
  }
  __break(1u);
  return result;
}

uint64_t sub_100310F18(void *a1, void *a2, NSObject *a3, uint64_t a4)
{
  uint64_t v152 = a4;
  uint64_t v156 = a3;
  type metadata accessor for NetworkTaskPriority();
  __chkstk_darwin();
  uint64_t v149 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin();
  v145 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ArtworkRequest();
  uint64_t v147 = *(void *)(v8 - 8);
  uint64_t v148 = v8;
  __chkstk_darwin();
  uint64_t v146 = (char *)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ArtworkModel();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v143 = (uint64_t)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v144 = (uint64_t)&v143 - v15;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v157 = v16;
  uint64_t v158 = v17;
  __chkstk_darwin();
  uint64_t v150 = (char *)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v155 = (char *)&v143 - v19;
  __chkstk_darwin();
  uint64_t v154 = (char *)&v143 - v20;
  __chkstk_darwin();
  uint64_t v22 = (char *)&v143 - v21;
  __chkstk_darwin();
  id v24 = (char *)&v143 - v23;
  id v25 = [a2 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v26 = AdamID.init(_:)();
  if (v27)
  {
    static Logger.interests.getter();
    os_log_type_t v36 = a1;
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 134217984;
      *(void *)&v159[0] = [v36 adamID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v37, v38, "[Categories] Cannot ingest feed category because there is no adamID in the feed category object: %llu", v39, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      uint64_t v37 = v36;
    }
    uint64_t v40 = v157;

    (*(void (**)(char *, uint64_t))(v158 + 8))(v24, v40);
    return 0;
  }
  uint64_t v28 = v26;
  [a1 setAdamID:v26];
  NSString v29 = [a2 name];
  if (!v29)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [a1 setName:v29];

  id v30 = [a2 url];
  [a1 setUrl:v30];

  id v31 = [a2 color];
  [a1 setColor:v31];

  type metadata accessor for ServerArtwork();
  swift_unknownObjectRetain();
  id v153 = a2;
  id v32 = v22;
  if (ServerArtwork.__allocating_init(from:)())
  {
    id v33 = v153;
    id v34 = [v153 artworkPrimaryColor];
    [a1 setArtworkPrimaryColor:v34];

    id v35 = [v33 artworkTemplateURL];
    [a1 setArtworkTemplateURL:v35];

    swift_retain();
    ArtworkModel.init(serverArtwork:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      swift_release();
      sub_1003131C4((uint64_t)v11);
    }
    else
    {
      uint64_t v42 = v144;
      sub_100313224((uint64_t)v11, v144);
      ServerArtwork.height.getter();
      if ((v43 & 1) == 0)
      {
        Class isa = Int._bridgeToObjectiveC()().super.super.isa;
        MTCategory.setArtworkHeightNumber(_:)((NSNumber)isa);
      }
      ServerArtwork.width.getter();
      if ((v45 & 1) == 0)
      {
        Class v46 = Int._bridgeToObjectiveC()().super.super.isa;
        MTCategory.setArtworkWidthNumber(_:)((NSNumber)v46);
      }
      sub_100313288(v42, v143);
      ArtworkModel.size.getter();
      uint64_t v47 = type metadata accessor for CropCode();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v145, 1, 1, v47);
      uint64_t v160 = 0;
      memset(v159, 0, sizeof(v159));
      static NetworkTaskPriority.dispatchQueuePriority()();
      os_log_type_t v48 = v146;
      ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)();
      sub_100041A98((void *)(v152 + 16), *(void *)(v152 + 40));
      dispatch thunk of ImageProvider.prefetch(artwork:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v147 + 8))(v48, v148);
      sub_10022D86C(v42);
    }
  }
  static Logger.interests.getter();
  uint64_t v41 = a1;
  BOOL v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  BOOL v51 = os_log_type_enabled(v49, v50);
  uint64_t v151 = (void *)v28;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc();
    *(void *)&v159[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 136315394;
    id v53 = [v41 name];
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v149 = v32;
    uint64_t v55 = v41;
    uint64_t v56 = v54;
    unint64_t v58 = v57;

    uint64_t v59 = v56;
    uint64_t v41 = v55;
    uint64_t v161 = (void *)sub_10004B974(v59, v58, (uint64_t *)v159);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2080;
    uint64_t v161 = v151;
    sub_1001A5874();
    uint64_t v60 = BinaryInteger.description.getter();
    uint64_t v161 = (void *)sub_10004B974(v60, v61, (uint64_t *)v159);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "[Categories] Ingested category %s with adamID: %s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    uint64_t v28 = (uint64_t)v151;
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v62 = *(void (**)(char *, uint64_t))(v158 + 8);
    uint64_t v63 = v149;
  }
  else
  {

    uint64_t v62 = *(void (**)(char *, uint64_t))(v158 + 8);
    uint64_t v63 = v32;
  }
  uint64_t v64 = v157;
  v62(v63, v157);
  id v66 = v153;
  uint64_t v65 = v154;
  os_log_type_t v67 = v155;
  uint64_t v68 = NSManagedObjectContext.unsafeInterest(forAdamID:)();
  if (v68)
  {
    uint64_t v69 = v68;
    uint64_t v149 = (char *)v62;
    [v68 setCategory:v41];
    [v41 setInterest:v69];
    static Logger.interests.getter();
    id v70 = v41;
    id v71 = v65;
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v148 = swift_slowAlloc();
      *(void *)&v159[0] = v148;
      *(_DWORD *)uint64_t v74 = 136315394;
      uint64_t v75 = v41;
      id v76 = [v70 name];
      uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v79 = v78;

      uint64_t v41 = v75;
      uint64_t v80 = v77;
      os_log_type_t v67 = v155;
      uint64_t v161 = (void *)sub_10004B974(v80, v79, (uint64_t *)v159);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2080;
      uint64_t v161 = v151;
      sub_1001A5874();
      uint64_t v81 = BinaryInteger.description.getter();
      uint64_t v161 = (void *)sub_10004B974(v81, v82, (uint64_t *)v159);
      uint64_t v64 = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "[Categories] Related category %s with adamID: %s to MTInterest.", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      uint64_t v28 = (uint64_t)v151;
      swift_slowDealloc();
      id v66 = v153;
      swift_slowDealloc();

      uint64_t v83 = v154;
    }
    else
    {

      uint64_t v83 = v71;
    }
    uint64_t v62 = (void (*)(char *, uint64_t))v149;
    ((void (*)(char *, uint64_t))v149)(v83, v64);
  }
  if ([v66 parent])
  {
    type metadata accessor for ServerCategory();
    uint64_t v84 = swift_dynamicCastClass();
    if (v84
      && (uint64_t v85 = (void *)v84,
          swift_unknownObjectRetain(),
          id v86 = (void *)sub_10030F1E0(v85, v156, v152),
          swift_unknownObjectRelease(),
          v86))
    {
      [v41 setParent:v86];
      static Logger.interests.getter();
      id v87 = v86;
      uint64_t v154 = v41;
      id v88 = v41;
      id v89 = v87;
      os_log_type_t v90 = v88;
      id v91 = v89;
      id v92 = Logger.logObject.getter();
      os_log_type_t v93 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = swift_slowAlloc();
        uint64_t v149 = (char *)swift_slowAlloc();
        *(void *)&v159[0] = v149;
        *(_DWORD *)uint64_t v94 = 136315906;
        id v95 = [v90 name];
        uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v98 = v97;

        uint64_t v161 = (void *)sub_10004B974(v96, v98, (uint64_t *)v159);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 12) = 2080;
        uint64_t v161 = v151;
        sub_1001A5874();
        uint64_t v99 = BinaryInteger.description.getter();
        uint64_t v161 = (void *)sub_10004B974(v99, v100, (uint64_t *)v159);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 22) = 2080;
        id v101 = [v91 name];
        uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v104 = v103;

        uint64_t v161 = (void *)sub_10004B974(v102, v104, (uint64_t *)v159);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 32) = 2048;
        uint64_t v105 = [v91 adamID];

        uint64_t v161 = v105;
        uint64_t v64 = v157;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        os_log_type_t v106 = v93;
        uint64_t v28 = (uint64_t)v151;
        _os_log_impl((void *)&_mh_execute_header, v92, v106, "[Categories] Related category %s with adamID: %s to parent category %s with adamID: %llu.", (uint8_t *)v94, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_unknownObjectRelease();

        uint64_t v62 = *(void (**)(char *, uint64_t))(v158 + 8);
        v62(v155, v64);
      }
      else
      {

        swift_unknownObjectRelease();
        v62(v67, v64);
        uint64_t v28 = (uint64_t)v151;
      }
      id v66 = v153;
      uint64_t v41 = v154;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  id v107 = [v66 children];
  uint64_t v108 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v109 = sub_10030E964(v108);
  swift_bridgeObjectRelease();
  if (!v109)
  {
LABEL_53:
    uint64_t v142 = v41;
    return (uint64_t)v41;
  }
  if ((v109 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter() > 0) {
      goto LABEL_35;
    }
    goto LABEL_49;
  }
  if (*(uint64_t *)(v109 + 16) <= 0)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
LABEL_35:
  uint64_t v149 = (char *)v62;
  uint64_t v110 = v152;
  swift_retain();
  os_log_t v111 = v156;
  unint64_t v112 = (unint64_t)sub_100312D6C(v109, v110, (uint64_t)v111);
  swift_bridgeObjectRelease();
  swift_release();

  unint64_t v113 = swift_bridgeObjectRetain();
  sub_100404778(v113);
  swift_bridgeObjectRelease();
  type metadata accessor for MTCategory();
  sub_1003132EC((unint64_t *)&qword_100602358, (void (*)(uint64_t))&type metadata accessor for MTCategory);
  Class v114 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v41 setChildren:v114];

  uint64_t v115 = v150;
  static Logger.interests.getter();
  unint64_t v116 = v41;
  swift_bridgeObjectRetain();
  unint64_t v117 = Logger.logObject.getter();
  int v118 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v117, (os_log_type_t)v118))
  {

    swift_bridgeObjectRelease_n();
    char v136 = v115;
    uint64_t v137 = v64;
LABEL_52:
    ((void (*)(char *, uint64_t))v149)(v136, v137);
    goto LABEL_53;
  }
  LODWORD(v155) = v118;
  uint64_t v156 = v117;
  uint64_t v154 = v41;
  uint64_t v119 = swift_slowAlloc();
  id v153 = (id)swift_slowAlloc();
  *(void *)&v159[0] = v153;
  *(_DWORD *)uint64_t v119 = 136315650;
  uint64_t v120 = (void *)v28;
  id v121 = [v116 name];
  uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v124 = v123;

  uint64_t v161 = (void *)sub_10004B974(v122, v124, (uint64_t *)v159);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  *(_WORD *)(v119 + 12) = 2080;
  uint64_t v161 = v120;
  sub_1001A5874();
  uint64_t v125 = BinaryInteger.description.getter();
  uint64_t v161 = (void *)sub_10004B974(v125, v126, (uint64_t *)v159);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v119 + 22) = 2080;
  if (v112 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v127 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v127 = *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v41 = v154;
  if (!v127)
  {
LABEL_51:
    uint64_t v138 = Array.description.getter();
    unint64_t v140 = v139;
    swift_bridgeObjectRelease();
    uint64_t v161 = (void *)sub_10004B974(v138, v140, (uint64_t *)v159);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v141 = v156;
    _os_log_impl((void *)&_mh_execute_header, v156, (os_log_type_t)v155, "[Categories] Related category %s with adamID: %s to children categories with adamID's: %s.", (uint8_t *)v119, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v137 = v157;
    char v136 = v150;
    goto LABEL_52;
  }
  uint64_t v161 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001BA94C(0, v127 & ~(v127 >> 63), 0);
  if ((v127 & 0x8000000000000000) == 0)
  {
    uint64_t v129 = 0;
    uint64_t v130 = v161;
    do
    {
      if ((v112 & 0xC000000000000001) != 0) {
        id v131 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v131 = *(id *)(v112 + 8 * v129 + 32);
      }
      unint64_t v132 = v131;
      id v133 = [v131 adamID];

      uint64_t v161 = v130;
      unint64_t v135 = v130[2];
      unint64_t v134 = v130[3];
      if (v135 >= v134 >> 1)
      {
        sub_1001BA94C(v134 > 1, v135 + 1, 1);
        uint64_t v130 = v161;
      }
      ++v129;
      v130[2] = v135 + 1;
      v130[v135 + 4] = v133;
    }
    while (v127 != v129);
    uint64_t v41 = v154;
    goto LABEL_51;
  }
  __break(1u);
  return result;
}

uint64_t sub_100312300(NSObject *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)v43 - v10;
  uint64_t v12 = self;
  kMTCategoryEntityName.getter();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v12 insertNewObjectForEntityForName:v13 inManagedObjectContext:a1];

  type metadata accessor for MTCategory();
  uint64_t v15 = swift_dynamicCastClass();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    static Logger.interests.getter();
    swift_retain_n();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v46 = v7;
      uint64_t v21 = v20;
      uint64_t v45 = swift_slowAlloc();
      uint64_t v51 = v45;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v49 = v6;
      id v22 = [a2 name];
      uint64_t v48 = a3;
      id v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int v44 = v19;
      uint64_t v25 = v24;
      uint64_t v47 = a1;
      unint64_t v27 = v26;

      uint64_t v50 = sub_10004B974(v25, v27, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v43[1] = v21 + 14;
      id v28 = [a2 identifier];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v31 = v30;

      uint64_t v32 = v29;
      a1 = v47;
      a3 = v48;
      uint64_t v50 = sub_10004B974(v32, v31, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v44, "[Categories] Created new MTCategory %s with adamID: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v49);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    }
    swift_retain();
    uint64_t v41 = sub_10030FB28(v16, a2, a1, a3);

    swift_release();
  }
  else
  {

    static Logger.interests.getter();
    swift_retain_n();
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v51 = v48;
      uint64_t v49 = v6;
      *(_DWORD *)id v35 = 136315138;
      uint64_t v47 = (v35 + 4);
      uint64_t v36 = v7;
      id v37 = [a2 identifier];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v39;

      uint64_t v50 = sub_10004B974(v38, v40, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "[Categories] Cannot create MTCategory for adamID: %s.", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v49);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return 0;
  }
  return v41;
}

uint64_t sub_100312838(NSObject *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = (uint8_t *)a3;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v42 - v11;
  NSString v13 = self;
  kMTCategoryEntityName.getter();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v48 = a1;
  id v15 = [v13 insertNewObjectForEntityForName:v14 inManagedObjectContext:a1];

  type metadata accessor for MTCategory();
  uint64_t v16 = swift_dynamicCastClass();
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    static Logger.interests.getter();
    swift_unknownObjectRetain_n();
    os_log_type_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v45 = a4;
      uint64_t v22 = v21;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v51 = v44;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v47 = v7;
      id v23 = [a2 name];
      uint64_t v46 = v8;
      id v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int v43 = v20;
      unint64_t v27 = v26;

      uint64_t v50 = sub_10004B974(v25, v27, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      id v28 = [a2 identifier:v22 + 14];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v31 = v30;

      uint64_t v50 = sub_10004B974(v29, v31, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v43, "[Categories] Created new MTCategory %s with adamID: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v47);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    }
    swift_unknownObjectRetain();
    uint64_t v40 = sub_100310F18(v17, a2, v48, (uint64_t)v49);

    swift_unknownObjectRelease();
  }
  else
  {

    static Logger.interests.getter();
    swift_unknownObjectRetain_n();
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v46 = v8;
      uint64_t v51 = v35;
      uint64_t v47 = v7;
      *(_DWORD *)os_log_type_t v34 = 136315138;
      uint64_t v49 = v34 + 4;
      id v36 = [a2 identifier];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v39 = v38;

      uint64_t v50 = sub_10004B974(v37, v39, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[Categories] Cannot create MTCategory for adamID: %s.", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v47);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    return 0;
  }
  return v40;
}

void *sub_100312D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for ServerCategory();
    sub_1003132EC(&qword_100602360, (void (*)(uint64_t))&type metadata accessor for ServerCategory);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v24;
    uint64_t v22 = v25;
    uint64_t v7 = v26;
    int64_t v8 = v27;
    unint64_t v9 = v28;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v22 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    int64_t v8 = 0;
  }
  int64_t v21 = (unint64_t)(v7 + 64) >> 6;
  while (v5 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_36;
    }
    type metadata accessor for ServerCategory();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v16 = v23;
    swift_unknownObjectRelease();
    int64_t v15 = v8;
    uint64_t v13 = v9;
    if (!v23) {
      goto LABEL_36;
    }
LABEL_26:
    uint64_t v19 = sub_10030F1E0(v16, a3, a2);
    uint64_t result = (void *)swift_release();
    int64_t v8 = v15;
    unint64_t v9 = v13;
    if (v19)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = (void *)specialized Array._endMutation()();
      int64_t v8 = v15;
      unint64_t v9 = v13;
    }
  }
  if (v9)
  {
    uint64_t v13 = (v9 - 1) & v9;
    unint64_t v14 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v15 = v8;
LABEL_25:
    uint64_t v16 = *(void *)(*(void *)(v5 + 48) + 8 * v14);
    swift_retain();
    if (!v16) {
      goto LABEL_36;
    }
    goto LABEL_26;
  }
  int64_t v15 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v15 >= v21) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v22 + 8 * v15);
    if (!v17)
    {
      int64_t v18 = v8 + 2;
      if (v8 + 2 >= v21) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v22 + 8 * v18);
      if (v17) {
        goto LABEL_23;
      }
      int64_t v18 = v8 + 3;
      if (v8 + 3 >= v21) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v22 + 8 * v18);
      if (v17) {
        goto LABEL_23;
      }
      int64_t v18 = v8 + 4;
      if (v8 + 4 >= v21) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v22 + 8 * v18);
      if (v17)
      {
LABEL_23:
        int64_t v15 = v18;
      }
      else
      {
        int64_t v15 = v8 + 5;
        if (v8 + 5 >= v21) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v22 + 8 * v15);
        if (!v17)
        {
          int64_t v20 = v8 + 6;
          while (v21 != v20)
          {
            unint64_t v17 = *(void *)(v22 + 8 * v20++);
            if (v17)
            {
              int64_t v15 = v20 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_10004E644();
          return _swiftEmptyArrayStorage;
        }
      }
    }
LABEL_24:
    uint64_t v13 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v15 << 6);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1003130C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin();
  unint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v10[5] = a3;
  id v10[6] = a4;
  uint64_t v11 = sub_10004A244(v10 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(v11, v9, a3);
  return v10;
}

uint64_t sub_1003131C4(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F76A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100313224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100313288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003132EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100313334()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!v3
    || (v13[0] = v3,
        type metadata accessor for ContextActionsConfiguration(),
        swift_retain(),
        sub_100054B78(&qword_100601AF8),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    return sub_100054B1C((uint64_t)&v10, &qword_100601AF0);
  }
  if (!*((void *)&v11 + 1)) {
    return sub_100054B1C((uint64_t)&v10, &qword_100601AF0);
  }
  sub_100042FC4(&v10, (uint64_t)v13);
  uint64_t v4 = v14;
  sub_100041A98(v13, v14);
  uint64_t v5 = sub_100210150(v4);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_adamID;
    *(void *)uint64_t v7 = v5;
    *(unsigned char *)(v7 + 8) = 0;
    InterestStateController.stateMachine(for:)();
    char v8 = InterestStateMachine.currentState.getter();
    swift_release();
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestState) = v8;
  }
  return sub_10004D2D8((uint64_t)v13);
}

uint64_t sub_100313474()
{
  uint64_t v1 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_adamID + 8) & 1) != 0
    || *(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestState) == 4)
  {
    goto LABEL_3;
  }
  char v6 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess();
  if (!*v6) {
    goto LABEL_11;
  }
  type metadata accessor for PodcastContextActionConfiguration(0);
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7) {
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)(v7 + qword_1005FADD0) + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  sub_1001AC690(v8, (uint64_t)v3);
  swift_retain();
  swift_retain();
  unint64_t v9 = (void *)sub_100241558();
  sub_1001AC758((uint64_t)v3);
  if (!v9)
  {
    swift_release();
    swift_release();
    goto LABEL_11;
  }
  unsigned __int8 v10 = [v9 subscribed];
  swift_release();
  swift_release();

  if ((v10 & 1) == 0)
  {
LABEL_11:
    uint64_t v11 = InterestState.rawValue.getter();
    uint64_t v13 = v12;
    char v4 = 1;
    if (v11 != InterestState.rawValue.getter() || v13 != v14)
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16)
      {
        char v4 = 1;
        return v4 & 1;
      }
      uint64_t v17 = InterestState.rawValue.getter();
      uint64_t v19 = v18;
      if (v17 == InterestState.rawValue.getter() && v19 == v20) {
        char v4 = 1;
      }
      else {
        char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v4 & 1;
  }
LABEL_3:
  char v4 = 0;
  return v4 & 1;
}

uint64_t sub_1003136CC()
{
  uint64_t v1 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsFieldInclusionRequest();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  __chkstk_darwin(v4);
  char v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for MetricsData();
  uint64_t v10 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v13 - 8);
  int64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SuggestLessInterestAction();
  uint64_t v38 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  uint64_t result = swift_beginAccess();
  if (*v18)
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_adamID + 8) & 1) == 0)
    {
      uint64_t v20 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_adamID);
      uint64_t v35 = v20;
      sub_100054B78((uint64_t *)&unk_1006027F0);
      unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v22 = swift_allocObject();
      uint64_t v34 = v22;
      *(_OWORD *)(v22 + 16) = xmmword_10046D010;
      unint64_t v33 = v22 + v21;
      v42[0] = v20;
      sub_1001A5874();
      swift_retain();
      void v29[3] = BinaryInteger.description.getter();
      uint64_t v23 = static MetricsTargetType.button.getter();
      uint64_t v32 = v3;
      void v29[2] = v23;
      v29[1] = static MetricsActionType.suggestLess.getter();
      unint64_t v31 = v15;
      static MetricsActionContext.contextual.getter();
      unint64_t v30 = v6;
      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
      static MetricsDataConfiguration.default.getter();
      static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
      sub_1002DFF70((uint64_t)v42, (uint64_t)v45);
      sub_100053884((uint64_t)v45);
      uint64_t v44 = v42[2];
      sub_1000537F4((uint64_t)&v44);
      uint64_t v43 = v42[3];
      sub_1000537F4((uint64_t)&v43);
      sub_1000536BC(v42[4]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
      uint64_t v25 = v30;
      static MetricsFieldInclusionRequest.impressionsSnapshot.getter();
      MetricsData.removingIncludedField(_:)();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v40);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v37);
      ScalarDictionary.init()();
      ActionMetrics.init(data:custom:)();
      SuggestLessInterestAction.init(adamID:force:actionMetrics:)();
      uint64_t v26 = v36;
      v41[3] = v36;
      v41[4] = sub_1003141FC(&qword_100602478, (void (*)(uint64_t))&type metadata accessor for SuggestLessInterestAction);
      int64_t v27 = sub_10004A244(v41);
      uint64_t v28 = v38;
      (*(void (**)(uint64_t *, char *, uint64_t))(v38 + 16))(v27, v17, v26);
      ContextActionsConfiguration.perform(_:)();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v26);
      return sub_10004D2D8((uint64_t)v41);
    }
  }
  return result;
}

uint64_t sub_100313C98()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_contextActionType, &qword_1005F9A58);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100313D88()
{
  return type metadata accessor for SuggestLessContextAction();
}

uint64_t type metadata accessor for SuggestLessContextAction()
{
  uint64_t result = qword_1006023B0;
  if (!qword_1006023B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100313DDC()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100313EE8()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0xEC0000007373654CLL;
  v1._object = (void *)0x80000001004D68B0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000019;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x2074736567677553;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100313F9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100314010@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_contextActionType, a1);
}

uint64_t sub_100314030(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  return sub_100313334();
}

uint64_t sub_10031409C()
{
  return swift_retain();
}

uint64_t sub_1003140E8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_10031413C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1003141A4(uint64_t a1)
{
  uint64_t result = sub_1003141FC(&qword_100608C90, (void (*)(uint64_t))type metadata accessor for SuggestLessContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003141FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_10031424C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_100314294()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t sub_1003142D8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100315AEC(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10031430C(unint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v21 = type metadata accessor for BugReportFrequency();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin();
  Swift::String v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BugReport.Domain();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  unint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BugReport.ErrorKind();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastsSystem();
  __chkstk_darwin();
  (*(void (**)(char *, void))(v15 + 104))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for PodcastsSystem.cloudSync(_:));
  if (a1 >= 6)
  {
    v23[0] = a1;
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *(unsigned int *)*(&off_1005611B0 + a1), v10);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for BugReport.Domain.podcasts(_:), v6);
    id v16 = objc_allocWithZone((Class)type metadata accessor for BugReport());
    uint64_t v17 = (void *)BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)();
    sub_100056D54(v20 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter, (uint64_t)v23);
    sub_100041A98(v23, v23[3]);
    uint64_t v18 = v21;
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for BugReportFrequency.hourly(_:), v21);
    if (!v22) {
      sub_10016E860((uint64_t)_swiftEmptyArrayStorage);
    }
    swift_bridgeObjectRetain();
    dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
    return sub_10004D2D8((uint64_t)v23);
  }
  return result;
}

uint64_t sub_100314750(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  unint64_t v48 = a4;
  unint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v7 = type metadata accessor for BugReportFrequency();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin();
  unint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BugReport.Domain();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for BugReport.ErrorKind();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastsSystem();
  __chkstk_darwin();
  (*(void (**)(char *, void))(v19 + 104))((char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for PodcastsSystem.cloudSync(_:));
  if (a1 >= 6)
  {
    v56[0] = a1;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *(unsigned int *)*(&off_1005611B0 + a1), v14);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for BugReport.Domain.podcasts(_:), v10);
    id v20 = objc_allocWithZone((Class)type metadata accessor for BugReport());
    uint64_t v21 = (void *)BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)();
    if (a5) {
      unint64_t v22 = a5;
    }
    else {
      unint64_t v22 = sub_10016E860((uint64_t)_swiftEmptyArrayStorage);
    }
    *(void *)&long long v54 = 0x6575737369;
    *((void *)&v54 + 1) = 0xE500000000000000;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    unint64_t v23 = 0xD000000000000015;
    unint64_t v24 = 0x80000001004DD1D0;
    switch(a1)
    {
      case 0uLL:
        goto LABEL_12;
      case 1uLL:
        unint64_t v23 = 0xD00000000000001CLL;
        uint64_t v25 = "wipingLocalDataFromRemoteKey";
        goto LABEL_11;
      case 2uLL:
        unint64_t v23 = 0xD000000000000017;
        uint64_t v25 = "syncAuthenticationError";
        goto LABEL_11;
      case 3uLL:
        unint64_t v23 = 0xD00000000000001FLL;
        uint64_t v25 = "mergeConflictInReadOnlySyncMode";
        goto LABEL_11;
      case 4uLL:
        unint64_t v23 = 0xD000000000000022;
        uint64_t v25 = "tryingToPutSyncWhileInReadOnlyMode";
        goto LABEL_11;
      case 5uLL:
        unint64_t v23 = 0xD000000000000029;
        uint64_t v25 = "readOnlyModeInDeviceWithRecentlyUnfollows";
LABEL_11:
        unint64_t v24 = (unint64_t)(v25 - 32) | 0x8000000000000000;
LABEL_12:
        *(void *)&long long v54 = v23;
        *((void *)&v54 + 1) = v24;
        swift_bridgeObjectRetain();
        v26._uint64_t countAndFlagsBits = 45;
        v26._object = (void *)0xE100000000000000;
        String.append(_:)(v26);
        swift_bridgeObjectRelease();
        long long v27 = v54;
        unint64_t v28 = v46;
        uint64_t v29 = sub_1003159A4(v46);
        unint64_t v31 = v30;
        long long v54 = v27;
        swift_bridgeObjectRetain();
        v32._uint64_t countAndFlagsBits = v29;
        v32._object = v31;
        String.append(_:)(v32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v55 = &type metadata for String;
        sub_10004D384(&v54, v53);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v52 = v22;
        sub_10027F164(v53, (uint64_t)v56, isUniquelyReferenced_nonNull_native);
        unint64_t v34 = v52;
        swift_bridgeObjectRelease();
        sub_100172F18((uint64_t)v56);
        *(void *)&long long v54 = 7955819;
        *((void *)&v54 + 1) = 0xE300000000000000;
        AnyHashable.init<A>(_:)();
        uint64_t v35 = sub_1003159A4(v28);
        uint64_t v55 = &type metadata for String;
        *(void *)&long long v54 = v35;
        *((void *)&v54 + 1) = v36;
        sub_10004D384(&v54, v53);
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v52 = v34;
        sub_10027F164(v53, (uint64_t)v56, v37);
        unint64_t v38 = v52;
        swift_bridgeObjectRelease();
        sub_100172F18((uint64_t)v56);
        *(void *)&long long v54 = 0x6E6F6973726576;
        *((void *)&v54 + 1) = 0xE700000000000000;
        AnyHashable.init<A>(_:)();
        uint64_t v55 = &type metadata for String;
        uint64_t v39 = 7104878;
        if (v48)
        {
          uint64_t v39 = v47;
          unint64_t v40 = v48;
        }
        else
        {
          unint64_t v40 = 0xE300000000000000;
        }
        *(void *)&long long v54 = v39;
        *((void *)&v54 + 1) = v40;
        sub_10004D384(&v54, v53);
        swift_bridgeObjectRetain();
        char v41 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v52 = v38;
        sub_10027F164(v53, (uint64_t)v56, v41);
        swift_bridgeObjectRelease();
        sub_100172F18((uint64_t)v56);
        sub_100041A98((void *)(v49 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter), *(void *)(v49 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter + 24));
        uint64_t v43 = v50;
        uint64_t v42 = v51;
        (*(void (**)(char *, void, uint64_t))(v50 + 104))(v9, enum case for BugReportFrequency.hourly(_:), v51);
        dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)();

        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v9, v42);
      default:
        *(void *)&long long v54 = a1;
        break;
    }
  }
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  JUMPOUT(0x100314D98);
}

uint64_t sub_100314DC0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  unint64_t v7 = a5;
  if (a4)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;
    if (!v7) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v10 = 0;
  unint64_t v12 = 0;
  if (a5) {
LABEL_3:
  }
    unint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_4:
  id v13 = a1;
  sub_100314750(a3, a6, v10, v12, v7);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100315074(void *a1, void *a2)
{
  id v4 = [a1 keys];
  if (v4)
  {
    Swift::String v5 = v4;
    uint64_t v6 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  id v7 = [a1 sinceDomainVersion];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0;
  }
  sub_100054B78(&qword_1005F6CB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D010;
  AnyHashable.init<A>(_:)();
  id v13 = [a2 description];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 80) = v16;
  unint64_t v17 = sub_10016E860(inited);
  sub_100315200(2uLL, (uint64_t)v6, v9, v11, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100315200(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  unint64_t v39 = a4;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v7 = type metadata accessor for BugReportFrequency();
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BugReport.Domain();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  id v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for BugReport.ErrorKind();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  unint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastsSystem();
  __chkstk_darwin();
  (*(void (**)(char *, void))(v19 + 104))((char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for PodcastsSystem.cloudSync(_:));
  if (a1 >= 6)
  {
    v47[0] = a1;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *(unsigned int *)*(&off_1005611B0 + a1), v14);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for BugReport.Domain.podcasts(_:), v10);
    id v20 = objc_allocWithZone((Class)type metadata accessor for BugReport());
    uint64_t v21 = (void *)BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)();
    if (a5) {
      unint64_t v22 = a5;
    }
    else {
      unint64_t v22 = sub_10016E860((uint64_t)_swiftEmptyArrayStorage);
    }
    *(void *)&long long v45 = 0x6575737369;
    *((void *)&v45 + 1) = 0xE500000000000000;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    unint64_t v23 = 0xD000000000000015;
    unint64_t v24 = 0x80000001004DD1D0;
    switch(a1)
    {
      case 0uLL:
        goto LABEL_12;
      case 1uLL:
        unint64_t v23 = 0xD00000000000001CLL;
        uint64_t v25 = "wipingLocalDataFromRemoteKey";
        goto LABEL_11;
      case 2uLL:
        unint64_t v23 = 0xD000000000000017;
        uint64_t v25 = "syncAuthenticationError";
        goto LABEL_11;
      case 3uLL:
        unint64_t v23 = 0xD00000000000001FLL;
        uint64_t v25 = "mergeConflictInReadOnlySyncMode";
        goto LABEL_11;
      case 4uLL:
        unint64_t v23 = 0xD000000000000022;
        uint64_t v25 = "tryingToPutSyncWhileInReadOnlyMode";
        goto LABEL_11;
      case 5uLL:
        unint64_t v23 = 0xD000000000000029;
        uint64_t v25 = "readOnlyModeInDeviceWithRecentlyUnfollows";
LABEL_11:
        unint64_t v24 = (unint64_t)(v25 - 32) | 0x8000000000000000;
LABEL_12:
        unint64_t v46 = &type metadata for String;
        *(void *)&long long v45 = v23;
        *((void *)&v45 + 1) = v24;
        sub_10004D384(&v45, v44);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v43 = v22;
        sub_10027F164(v44, (uint64_t)v47, isUniquelyReferenced_nonNull_native);
        unint64_t v27 = v43;
        swift_bridgeObjectRelease();
        sub_100172F18((uint64_t)v47);
        *(void *)&long long v45 = 1937335659;
        *((void *)&v45 + 1) = 0xE400000000000000;
        AnyHashable.init<A>(_:)();
        unint64_t v46 = (void *)sub_100054B78((uint64_t *)&unk_100603260);
        *(void *)&long long v45 = v37;
        sub_10004D384(&v45, v44);
        swift_bridgeObjectRetain();
        char v28 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v43 = v27;
        sub_10027F164(v44, (uint64_t)v47, v28);
        unint64_t v29 = v43;
        swift_bridgeObjectRelease();
        sub_100172F18((uint64_t)v47);
        *(void *)&long long v45 = 0x6E6F6973726576;
        *((void *)&v45 + 1) = 0xE700000000000000;
        AnyHashable.init<A>(_:)();
        unint64_t v46 = &type metadata for String;
        uint64_t v30 = 7104878;
        if (v39) {
          uint64_t v30 = v38;
        }
        unint64_t v31 = 0xE300000000000000;
        if (v39) {
          unint64_t v31 = v39;
        }
        *(void *)&long long v45 = v30;
        *((void *)&v45 + 1) = v31;
        sub_10004D384(&v45, v44);
        swift_bridgeObjectRetain();
        char v32 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v43 = v29;
        sub_10027F164(v44, (uint64_t)v47, v32);
        swift_bridgeObjectRelease();
        sub_100172F18((uint64_t)v47);
        sub_100041A98((void *)(v40 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter), *(void *)(v40 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter + 24));
        uint64_t v34 = v41;
        uint64_t v33 = v42;
        (*(void (**)(char *, void, uint64_t))(v41 + 104))(v9, enum case for BugReportFrequency.hourly(_:), v42);
        dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)();

        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v9, v33);
      default:
        *(void *)&long long v45 = a1;
        break;
    }
  }
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  JUMPOUT(0x1003157F4);
}

uint64_t type metadata accessor for CloudSyncBugReporter()
{
  return self;
}

unint64_t sub_1003158BC(uint64_t a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    case 5:
      unint64_t result = 0xD000000000000029;
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x10031598CLL);
  }
  return result;
}

uint64_t sub_1003159A4(unint64_t a1)
{
  if (a1 >= 6)
  {
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    return static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return result;
}

unint64_t sub_100315A0C()
{
  return sub_1003158BC(*v0);
}

uint64_t sub_100315A14()
{
  return sub_1003159A4(*v0);
}

ValueMetadata *type metadata accessor for CloudSyncBugReportingIssue()
{
  return &type metadata for CloudSyncBugReportingIssue;
}

ValueMetadata *type metadata accessor for CloudSyncBugReportingKey()
{
  return &type metadata for CloudSyncBugReportingKey;
}

unint64_t sub_100315A40()
{
  unint64_t result = qword_1006024B0;
  if (!qword_1006024B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006024B0);
  }
  return result;
}

unint64_t sub_100315A98()
{
  unint64_t result = qword_1006024B8;
  if (!qword_1006024B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006024B8);
  }
  return result;
}

unint64_t sub_100315AEC(unint64_t result)
{
  if (result > 5) {
    return 0;
  }
  return result;
}

BOOL sub_100315B00()
{
  uint64_t v1 = type metadata accessor for StationShowContextActionData();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005FD628);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData;
  swift_beginAccess();
  sub_100316AE8(v7, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1))
  {
    sub_100316B50((uint64_t)v6);
  }
  else
  {
    sub_10021165C((uint64_t)v6, (uint64_t)v4);
    sub_100316B50((uint64_t)v6);
    uint64_t v9 = (void *)sub_10021F088();
    sub_1002116C0((uint64_t)v4);
    if (v9)
    {
      id v10 = [v9 episodes];

      if (v10)
      {
        id v11 = [v10 count];

        return (uint64_t)v11 > 0;
      }
    }
  }
  return 0;
}

uint64_t sub_100315CC0()
{
  sub_100054B78(&qword_1005FD628);
  __chkstk_darwin();
  uint64_t v2 = (char *)&aBlock[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for StationShowContextActionData();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin();
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&aBlock[-1] - v7;
  uint64_t v9 = v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData;
  swift_beginAccess();
  sub_100316AE8(v9, (uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_100316B50((uint64_t)v2);
  }
  sub_10021F440((uint64_t)v2, (uint64_t)v8);
  id v11 = [self sharedInstance];
  id v12 = [v11 mainOrPrivateContext];

  sub_10021165C((uint64_t)v8, (uint64_t)v6);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  sub_10021F440((uint64_t)v6, v14 + v13);
  aBlock[4] = sub_100316CB4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_1005612D8;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v12;
  swift_release();
  [v16 performBlockAndWaitWithSave:v15];
  _Block_release(v15);

  return sub_1002116C0((uint64_t)v8);
}

void sub_100315F68(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v9 = [a1 playlistForUuid:v2];

  if (v9)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [a1 podcastPlaylistSettingsForUuid:v3];

    if (v4)
    {
      id v5 = [v4 podcast];
      if (v5)
      {
        id v6 = v5;
        [v9 setIncludesAllPodcasts:0];
        [v9 removePodcastEpisodes:v6 shouldSave:0];

        uint64_t v7 = v4;
        id v4 = v6;
      }
      else
      {
        uint64_t v7 = v9;
      }

      uint64_t v8 = v4;
    }
    else
    {
      uint64_t v8 = v9;
    }
  }
}

uint64_t sub_1003160A0()
{
  uint64_t v1 = type metadata accessor for StationShowContextActionData();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  id v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005FD628);
  __chkstk_darwin();
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData;
  swift_beginAccess();
  sub_100316AE8(v7, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1))
  {
    sub_100316B50((uint64_t)v6);
    return 0;
  }
  sub_10021165C((uint64_t)v6, (uint64_t)v4);
  sub_100316B50((uint64_t)v6);
  id v10 = (void *)sub_10021F088();
  sub_1002116C0((uint64_t)v4);
  if (!v10) {
    return 0;
  }
  id v11 = [v10 episodes];

  if (!v11) {
    return 0;
  }
  id v12 = [v11 count];

  id v13 = [self mainBundle];
  v18._object = (void *)0xE000000000000000;
  v14._object = (void *)0x80000001004DD230;
  v14._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v18);

  sub_100054B78(&qword_1005F7720);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10046D010;
  *(void *)(v16 + 56) = &type metadata for Int;
  *(void *)(v16 + 64) = &protocol witness table for Int;
  *(void *)(v16 + 32) = v12;
  uint64_t v8 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100316344()
{
  sub_100316B50(v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100316404()
{
  return type metadata accessor for DeleteStationShowContextAction();
}

uint64_t type metadata accessor for DeleteStationShowContextAction()
{
  uint64_t result = qword_1006024E8;
  if (!qword_1006024E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100316458()
{
  sub_10031652C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for MetricsLabel();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10031652C()
{
  if (!qword_1006024F8)
  {
    type metadata accessor for StationShowContextActionData();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006024F8);
    }
  }
}

uint64_t sub_100316584(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData;
  swift_beginAccess();
  sub_100316A80(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1003165E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100316658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.deleteStation(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_100316738(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_10026882C(a1, a2, WitnessTable);
}

uint64_t sub_100316798()
{
  return swift_retain();
}

uint64_t sub_1003167E4(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_100316838())()
{
  return j__swift_endAccess;
}

void *sub_100316894(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1003168F4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_100316954(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1003169B4(uint64_t a1)
{
  uint64_t result = sub_100316A3C((unint64_t *)&unk_100608C30);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003169F8(uint64_t a1)
{
  uint64_t result = sub_100316A3C(&qword_1006025E8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100316A3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DeleteStationShowContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100316A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005FD628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100316AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005FD628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100316B50(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005FD628);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100316BB0()
{
  uint64_t v1 = (int *)(type metadata accessor for StationShowContextActionData() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[8];
  uint64_t v4 = type metadata accessor for PreviewingPresentationHint();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

void sub_100316CB4()
{
  type metadata accessor for StationShowContextActionData();
  uint64_t v1 = *(void **)(v0 + 16);

  sub_100315F68(v1);
}

ValueMetadata *type metadata accessor for LegacyPlayStationIntentImplementation()
{
  return &type metadata for LegacyPlayStationIntentImplementation;
}

uint64_t sub_100316D28(void *a1)
{
  sub_100041A98(a1, a1[3]);
  memset(v2, 0, sizeof(v2));
  dispatch thunk of EpisodeControllerProtocol.play(stationUuid:episodeUuid:from:)();
  return sub_100054B1C((uint64_t)v2, &qword_1005F5D30);
}

void sub_100316DB8(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v17)(void **__return_ptr, _OWORD *);
  void *v18;
  void (*v19)(long long *__return_ptr, void *);
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  unsigned char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  unsigned char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  char *v43;
  void *v44;
  _OWORD v45[2];
  long long v46;
  uint64_t v47;
  void v48[5];
  void *v49;

  uint64_t v7 = sub_100054B78(&qword_100602618);
  __chkstk_darwin();
  id v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a1 objectWithID:a2];
  self;
  id v11 = (void *)swift_dynamicCastObjCClass();
  if (!v11)
  {

    sub_1003183D4();
    swift_allocError();
    *unint64_t v31 = 1;
    swift_willThrow();
    return;
  }
  id v12 = [v11 episodes];
  if (v12)
  {
    uint64_t v42 = v10;
    unint64_t v39 = a3;
    uint64_t v40 = v3;
    id v13 = v12;
    NSOrderedSet.makeIterator()();
    uint64_t v41 = v13;

    Swift::String v14 = &v9[*(int *)(sub_100054B78(&qword_100602620) + 44)];
    *(void *)Swift::String v14 = sub_1003171DC;
    *((void *)v14 + 1) = 0;
    Swift::String v15 = &v9[*(int *)(sub_100054B78(&qword_100602628) + 36)];
    *(void *)Swift::String v15 = sub_1003172F4;
    *((void *)v15 + 1) = 0;
    uint64_t v16 = &v9[*(int *)(v7 + 44)];
    *(void *)uint64_t v16 = sub_100317304;
    *((void *)v16 + 1) = 0;
    type metadata accessor for NSFastEnumerationIterator();
    sub_10005E4B0((unint64_t *)&qword_100602630, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
    dispatch thunk of IteratorProtocol.next()();
    uint64_t v17 = *(void (**)(void **__return_ptr, _OWORD *))v14;
    sub_100004C04((uint64_t)v48, (uint64_t)&v46);
    if (v47)
    {
      unint64_t v43 = (char *)_swiftEmptyArrayStorage;
      do
      {
        sub_10004D384(&v46, v45);
        v17(&v44, v45);
        Swift::String v18 = v44;
        sub_10004D2D8((uint64_t)v45);
        uint64_t v49 = v18;
        if ((*(uint64_t (**)(void **))v15)(&v49))
        {
          uint64_t v19 = *(void (**)(long long *__return_ptr, void *))v16;
          v48[0] = v18;
          v19(&v46, v48);

          id v20 = (void *)v46;
          uint64_t v21 = [(id)v46 uuid];
          if (v21)
          {
            unint64_t v22 = v21;
            unint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v37 = v24;
            uint64_t v38 = v23;

            uint64_t v25 = v43;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v25 = sub_10004CEAC(0, *((void *)v25 + 2) + 1, 1, v25);
            }
            unint64_t v27 = *((void *)v25 + 2);
            Swift::String v26 = *((void *)v25 + 3);
            unint64_t v43 = v25;
            if (v27 >= v26 >> 1) {
              unint64_t v43 = sub_10004CEAC((char *)(v26 > 1), v27 + 1, 1, v43);
            }
            char v28 = v43;
            *((void *)v43 + 2) = v27 + 1;
            unint64_t v29 = &v28[16 * v27];
            uint64_t v30 = v37;
            *((void *)v29 + 4) = v38;
            *((void *)v29 + 5) = v30;
          }
          else
          {
          }
        }
        else
        {
        }
        dispatch thunk of IteratorProtocol.next()();
        uint64_t v17 = *(void (**)(void **__return_ptr, _OWORD *))v14;
        sub_100004C04((uint64_t)v48, (uint64_t)&v46);
      }
      while (v47);
    }
    else
    {
      unint64_t v43 = (char *)_swiftEmptyArrayStorage;
    }
    sub_100054B1C((uint64_t)v9, &qword_100602618);

    if (*((void *)v43 + 2))
    {
      char v32 = *((void *)v43 + 4);
      uint64_t v33 = *((void *)v43 + 5);
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      uint64_t v34 = v39;
      uint8_t *v39 = v32;
      v34[1] = v33;
      return;
    }
    swift_bridgeObjectRelease();
    id v10 = v42;
  }
  sub_1003183D4();
  swift_allocError();
  *uint64_t v35 = 2;
  swift_willThrow();
}

uint64_t sub_1003171DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_10004D328(a1, (uint64_t)&v4);
  sub_1003184DC();
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    *a2 = 0;
  }
  return result;
}

uint64_t sub_10031723C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100602600 + dword_100602600);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1002A1E0C;
  return v8(a2, a3);
}

BOOL sub_1003172F4(void *a1)
{
  return *a1 != 0;
}

id sub_100317304@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = *a1;
  if (result)
  {
    *a2 = result;
    return result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100317318(uint64_t a1, uint64_t a2)
{
  v2[17] = a1;
  v2[18] = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkgroup();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for StationEntity();
  v2[25] = v5;
  v2[26] = *(void *)(v5 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TaskPriority();
  v2[29] = v6;
  v2[30] = *(void *)(v6 - 8);
  v2[31] = swift_task_alloc();
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1006033C0);
  uint64_t v8 = (void *)swift_task_alloc();
  v2[32] = v8;
  void *v8 = v2;
  v8[1] = sub_100317560;
  return BaseObjectGraph.inject<A>(_:)(v2 + 2, v7, v7);
}

uint64_t sub_100317560()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10031828C, 0, 0);
  }
  else
  {
    uint64_t v3 = sub_100054B78((uint64_t *)&unk_1005FEBE0);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 272) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_100317700;
    return BaseObjectGraph.inject<A>(_:)(v2 + 128, v3, v3);
  }
}

uint64_t sub_100317700()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10031832C;
  }
  else {
    uint64_t v2 = sub_100317814;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100317814()
{
  v0[36] = v0[16];
  uint64_t ObjectType = swift_getObjectType();
  j___sScTss5NeverORszABRs_rlE15currentPriorityScPvgZ();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[37] = v2;
  void *v2 = v0;
  v2[1] = sub_1003178DC;
  uint64_t v3 = v0[31];
  return NSManagedObjectContextProvider.managedObjectContext(for:)(v3, ObjectType);
}

uint64_t sub_1003178DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 248);
  uint64_t v3 = *(void *)(*(void *)v1 + 240);
  uint64_t v4 = *(void *)(*(void *)v1 + 232);
  *(void *)(*(void *)v1 + 304) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_100317A58, 0, 0);
}

uint64_t sub_100317A58()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  PlayStationIntent.station.getter();
  uint64_t v4 = StationEntity.uuid.getter();
  uint64_t v6 = v5;
  v0[14] = v4;
  v0[15] = v5;
  v0[39] = v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v1, v2);
  if (v6)
  {
    uint64_t v8 = v0[27];
    uint64_t v9 = v0[25];
    PlayStationIntent.station.getter();
    uint64_t v10 = (void *)StationEntity.objectID.getter();
    v0[40] = v10;
    v7(v8, v9);
    if (v10)
    {
      id v11 = (void *)v0[38];
      uint64_t v13 = v0[23];
      uint64_t v12 = v0[24];
      uint64_t v14 = v0[22];
      uint64_t v15 = swift_allocObject();
      v0[41] = v15;
      *(void *)(v15 + 16) = v11;
      *(void *)(v15 + 24) = v10;
      (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v12, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v14);
      id v16 = v11;
      id v17 = v10;
      Swift::String v18 = (void *)swift_task_alloc();
      v0[42] = v18;
      void *v18 = v0;
      v18[1] = sub_100317CCC;
      uint64_t v19 = v0[24];
      return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 12, v19, sub_100318468, v15, &type metadata for String);
    }
    swift_bridgeObjectRelease();
  }
  id v20 = (void *)v0[38];
  sub_1003183D4();
  swift_allocError();
  *uint64_t v21 = 0;
  swift_willThrow();

  sub_10004D2D8((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_100317CCC()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 184);
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  uint64_t v4 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  if (v0)
  {
    (*v4)(v2[24], v2[22]);
    swift_release();
    uint64_t v5 = sub_1003181CC;
  }
  else
  {
    uint64_t v6 = v2[24];
    uint64_t v7 = v2[22];
    v2[44] = v2[14];
    (*v4)(v6, v7);
    swift_release();
    uint64_t v5 = sub_100317E64;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100317E64()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  static DispatchWorkgroup.swiftConcurrency.getter();
  sub_100056D54(v0 + 16, v0 + 56);
  uint64_t v5 = (void *)swift_allocObject();
  *(void *)(v0 + 360) = v5;
  sub_100042FC4((long long *)(v0 + 56), (uint64_t)(v5 + 2));
  v5[7] = v1;
  v5[8] = v2;
  v5[9] = v3;
  v5[10] = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100317F8C;
  return DispatchWorkgroup.runThreadBlocking<A>(operation:)();
}

uint64_t sub_100317F8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  uint64_t v3 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100318100, 0, 0);
}

uint64_t sub_100318100()
{
  uint64_t v1 = *(void **)(v0 + 320);

  sub_10004D2D8(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_1003181CC()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v2 = (void *)v0[38];
  swift_bridgeObjectRelease();

  sub_10004D2D8((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10031828C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10031832C()
{
  sub_10004D2D8(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1003183D4()
{
  unint64_t result = qword_100602608;
  if (!qword_100602608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100602608);
  }
  return result;
}

uint64_t sub_100318428()
{
  return swift_deallocObject();
}

void sub_100318468(void *a1@<X8>)
{
  sub_100316DB8(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100318484()
{
  sub_10004D2D8(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003184CC()
{
  return sub_100316D28((void *)(v0 + 16));
}

unint64_t sub_1003184DC()
{
  unint64_t result = qword_100603220;
  if (!qword_100603220)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100603220);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LegacyPlayStationIntentImplementation.PlayStationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003185E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyPlayStationIntentImplementation.PlayStationError()
{
  return &type metadata for LegacyPlayStationIntentImplementation.PlayStationError;
}

unint64_t sub_100318624()
{
  unint64_t result = qword_100602640;
  if (!qword_100602640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100602640);
  }
  return result;
}

uint64_t sub_100318678()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001004DD280;
  v1._uint64_t countAndFlagsBits = 0x1000000000000011;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

BOOL sub_100318718()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  Swift::String v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (!*(void *)(v0 + 16)) {
    return 0;
  }
  type metadata accessor for CategoryContextActionConfiguration(0);
  if (!swift_dynamicCastClass()) {
    return 0;
  }
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
  swift_beginAccess();
  sub_10003B19C(v3, (uint64_t)v2);
  uint64_t v4 = type metadata accessor for URL();
  BOOL v5 = (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4) != 1;
  sub_100054B1C((uint64_t)v2, (uint64_t *)&unk_1005F7750);
  return v5;
}

id sub_100318850()
{
  sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin();
  Swift::String v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100318A08();
  id result = sub_100374888(0);
  if (result)
  {
    uint64_t v4 = result;
    swift_beginAccess();
    if (*(void *)(v0 + 16))
    {
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
      swift_release();
      uint64_t v5 = type metadata accessor for PresentationSource();
      uint64_t v6 = *(void *)(v5 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
      {
        PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)();

        return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v2, v5);
      }
    }
    else
    {
      uint64_t v7 = type metadata accessor for PresentationSource();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
    }

    return (id)sub_100054B1C((uint64_t)v2, (uint64_t *)&unk_100605DC0);
  }
  return result;
}

uint64_t sub_100318A08()
{
  uint64_t v1 = v0;
  type metadata accessor for ScalarDictionary();
  __chkstk_darwin();
  uint64_t v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsFieldInclusionRequest();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for MetricsData();
  uint64_t v10 = *(void *)(v27 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  uint64_t result = swift_beginAccess();
  if (*(void *)(v1 + 16))
  {
    if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_categoryAdamID + 8) & 1) == 0)
    {
      Swift::String v26 = v3;
      uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_categoryAdamID);
      sub_100054B78((uint64_t *)&unk_1006027F0);
      uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
      uint64_t v24 = v4;
      uint64_t v16 = (v15 + 32) & ~v15;
      uint64_t v17 = swift_allocObject();
      uint64_t v25 = v17;
      *(_OWORD *)(v17 + 16) = xmmword_10046D010;
      uint64_t v23 = v17 + v16;
      v29[0] = v14;
      sub_1001A5874();
      swift_retain();
      v20[4] = BinaryInteger.description.getter();
      v20[3] = v18;
      v20[2] = static MetricsTargetType.button.getter();
      v20[1] = static MetricsActionType.share.getter();
      static MetricsActionContext.contextual.getter();
      uint64_t v22 = v5;
      uint64_t v21 = v10;
      uint64_t v19 = v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
      swift_beginAccess();
      sub_10003B19C(v19, (uint64_t)v9);
      static MetricsDataConfiguration.default.getter();
      static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
      sub_1002DFF70((uint64_t)v29, (uint64_t)v32);
      sub_100053884((uint64_t)v32);
      uint64_t v31 = v29[2];
      sub_1000537F4((uint64_t)&v31);
      uint64_t v30 = v29[3];
      sub_1000537F4((uint64_t)&v30);
      sub_1000536BC(v29[4]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
      static MetricsFieldInclusionRequest.impressionsSnapshot.getter();
      MetricsData.removingIncludedField(_:)();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v24);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v27);
      ScalarDictionary.init()();
      ActionMetrics.init(data:custom:)();
      void v28[3] = type metadata accessor for EmptyAction();
      v28[4] = (uint64_t)&protocol witness table for EmptyAction;
      sub_10004A244(v28);
      EmptyAction.init(actionMetrics:)();
      ContextActionsConfiguration.perform(_:)();
      swift_release();
      swift_release();
      return sub_10004D2D8((uint64_t)v28);
    }
  }
  return result;
}

uint64_t sub_100318EE0()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v2 = (char *)&aBlock[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  if (*(void *)(v0 + 16))
  {
    type metadata accessor for CategoryContextActionConfiguration(0);
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      uint64_t v4 = result;
      uint64_t v5 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
      uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_managedContextProvider);
      swift_retain();
      id v7 = [v6 mainQueueContext];
      id v8 = [v6 mainQueueContext];
      uint64_t v9 = (void *)swift_allocObject();
      _OWORD v9[2] = v8;
      v9[3] = v4;
      v9[4] = v2;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_100319684;
      *(void *)(v10 + 24) = v9;
      aBlock[4] = sub_10004A010;
      aBlock[5] = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100018818;
      uint64_t aBlock[3] = &unk_100561450;
      uint64_t v11 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      [v7 performBlockAndWait:v11];

      _Block_release(v11);
      LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if (v7)
      {
        __break(1u);
      }
      else
      {
        uint64_t v12 = v0 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_categoryAdamID;
        *(void *)uint64_t v12 = *(void *)(v4 + qword_1005FAEF0);
        *(unsigned char *)(v12 + 8) = 0;
        uint64_t v13 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
        swift_beginAccess();
        sub_1003196A0((uint64_t)v2, v13);
        swift_endAccess();
        id v14 = [self mainBundle];
        v20._object = (void *)0xE000000000000000;
        v15._object = (void *)0x80000001004DD280;
        v15._uint64_t countAndFlagsBits = 0x1000000000000011;
        v16._uint64_t countAndFlagsBits = 0;
        v16._object = (void *)0xE000000000000000;
        v20._uint64_t countAndFlagsBits = 0;
        Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v20);
        swift_release();

        *(Swift::String *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle) = v17;
        swift_bridgeObjectRelease();
        sub_100054B1C((uint64_t)v2, (uint64_t *)&unk_1005F7750);
        return swift_release();
      }
    }
  }
  return result;
}

void *sub_100319254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v7 = (char *)&v15 - v6;
  uint64_t result = NSManagedObjectContext.unsafeCategory(forAdamID:)();
  if (result)
  {
    uint64_t v9 = result;
    id v10 = [result url];
    if (v10)
    {
      uint64_t v11 = v10;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      URL.init(string:)();
      swift_bridgeObjectRelease();
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v5, 1, v12) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v7, v5, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
        goto LABEL_7;
      }
      sub_100054B1C((uint64_t)v5, (uint64_t *)&unk_1005F7750);
    }
    uint64_t v14 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
LABEL_7:

    return (void *)sub_100222E1C((uint64_t)v7, a3);
  }
  return result;
}

uint64_t sub_100319468()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100319478()
{
  swift_release();
  sub_10004D2D8(v0 + 24);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link, (uint64_t *)&unk_1005F7750);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_contextActionType, &qword_1005F9A58);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1003195A4()
{
  return type metadata accessor for ShareCategoryContextAction();
}

uint64_t type metadata accessor for ShareCategoryContextAction()
{
  uint64_t result = qword_100602688;
  if (!qword_100602688) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003195F8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100319644()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_100319684()
{
  return sub_100319254(v0[2], v0[3], v0[4]);
}

uint64_t sub_100319690()
{
  return swift_deallocObject();
}

uint64_t sub_1003196A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F7750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100319708(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      return swift_release();
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        return swift_release();
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          return swift_release();
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            return swift_release();
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = sub_1001B2090(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5) {
    return swift_release();
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      return swift_release();
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100319868(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  int64_t v7 = v6;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  char v9 = a3 & 1;
  uint64_t v10 = type metadata accessor for FlowPresentationHints();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for FlowDestination();
  uint64_t v13 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v15 = (uint64_t *)((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v16 = objc_allocWithZone((Class)type metadata accessor for MTTestActionContentPickerViewController());
  Swift::String v17 = sub_10031A130(v9);
  v17[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_allowsMultipleSelection] = a4;
  uint64_t v41 = type metadata accessor for MTTestActionContentPickerPresenter();
  uint64_t v42 = &off_100561690;
  v40[0] = v7;
  uint64_t v18 = (uint64_t)&v17[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate];
  swift_beginAccess();
  swift_retain();
  sub_100321B68((uint64_t)v40, v18);
  swift_endAccess();
  id v19 = [v17 navigationItem];
  NSString v20 = String._bridgeToObjectiveC()();
  [v19 setTitle:v20];

  id v21 = [v17 navigationItem];
  id v22 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v7 action:"pickerDoneWithSender:"];
  [v21 setRightBarButtonItem:v22];

  id v23 = [v17 navigationItem];
  id v24 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:v7 action:"pickerCancelWithSender:"];
  [v23 setLeftBarButtonItem:v24];

  id v25 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v17];
  [v25 setModalPresentationStyle:2];
  Swift::String v26 = (void *)v7[2];
  void v7[2] = v17;
  uint64_t v27 = v17;

  uint64_t v28 = v37;
  uint64_t v29 = v7[3];
  uint64_t v30 = v39;
  v7[3] = v38;
  v7[4] = v30;
  swift_retain();
  sub_1000536BC(v29);
  void *v15 = v25;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for FlowDestination.viewController(_:), v28);
  uint64_t v31 = (void *)UIApp;
  if (UIApp)
  {
    id v32 = v25;
    id v33 = v31;
    UIResponder.nearestFlowController.getter();

    if (v41)
    {
      sub_100041A98(v40, v41);
      static FlowPresentationHints.default.getter();
      dispatch thunk of FlowController.show(destination:hints:referrer:)();

      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
      (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v28);
      sub_10004D2D8((uint64_t)v40);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100319C74()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = v0;
    id v3 = v1;
    uint64_t v4 = sub_10031A27C();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v2;
    *(void *)(v5 + 24) = v4;
    v7[4] = sub_100321BD4;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    void v7[2] = sub_10003B424;
    v7[3] = &unk_100561B20;
    uint64_t v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
    [v3 dismissViewControllerAnimated:1 completion:v6];
    _Block_release(v6);
  }
}

void sub_100319D88()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v0;
    *(void *)(v2 + 24) = _swiftEmptyArrayStorage;
    v5[4] = sub_100321B1C;
    v5[5] = v2;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    _OWORD v5[2] = sub_10003B424;
    v5[3] = &unk_100561AD0;
    id v3 = _Block_copy(v5);
    id v4 = v1;
    swift_retain();
    swift_release();
    [v4 dismissViewControllerAnimated:1 completion:v3];
    _Block_release(v3);
  }
}

uint64_t sub_100319E98(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (a3)
  {
    swift_retain();
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    uint64_t v5 = swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    uint64_t v5 = swift_retain();
  }
  a4(v5);
  swift_release();
  return sub_100054B1C((uint64_t)v7, &qword_1005F5D30);
}

void sub_100319F28(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 24);
  if (v3)
  {
    swift_retain();
    v3(a2);
    sub_1000536BC((uint64_t)v3);
  }
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_100319F9C()
{
  sub_1000536BC(*(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTTestActionContentPickerPresenter()
{
  return self;
}

id sub_10031A130(char a1)
{
  char v2 = a1 & 1;
  id v3 = &v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_allowsMultipleSelection] = 1;
  v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_pickerType] = a1 & 1;
  v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_showsHeaders] = !(a1 & 1);
  v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_showsCellArtwork] = a1 & 1;
  id v4 = v1;
  *(void *)&v4[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource] = sub_10031A210(v2);
  id v5 = [objc_allocWithZone((Class)UITableViewController) initWithStyle:0];
  *(void *)&v4[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_tableViewController] = v5;

  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for MTTestActionContentPickerViewController();
  return [super initWithNibName:0 bundle:0];
}

void *sub_10031A210(char a1)
{
  if (a1) {
    type metadata accessor for ShowsDataSource();
  }
  else {
    type metadata accessor for EpisodeDataSource();
  }
  uint64_t v1 = (void *)swift_allocObject();
  v1[2] = _swiftEmptyArrayStorage;
  v1[3] = sub_10016F1DC((uint64_t)_swiftEmptyArrayStorage);
  v1[4] = sub_10016F300((uint64_t)_swiftEmptyArrayStorage);
  return v1;
}

char *sub_10031A27C()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_10025C72C(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = v1[2];
  if (v2)
  {
    uint64_t v3 = (uint64_t)(v1 + 4);
    swift_retain();
    id v4 = (char *)_swiftEmptyArrayStorage;
    do
    {
      sub_100056D54(v3, (uint64_t)v14);
      uint64_t v5 = v15;
      uint64_t v6 = v16;
      sub_100041A98(v14, v15);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
      uint64_t v9 = v8;
      sub_10004D2D8((uint64_t)v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v4 = sub_10004CEAC(0, *((void *)v4 + 2) + 1, 1, v4);
      }
      unint64_t v11 = *((void *)v4 + 2);
      unint64_t v10 = *((void *)v4 + 3);
      if (v11 >= v10 >> 1) {
        id v4 = sub_10004CEAC((char *)(v10 > 1), v11 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v11 + 1;
      uint64_t v12 = &v4[16 * v11];
      *((void *)v12 + 4) = v7;
      *((void *)v12 + 5) = v9;
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_release_n();
  }
  else
  {
    swift_release();
    return (char *)_swiftEmptyArrayStorage;
  }
  return v4;
}

id sub_10031A3F8(uint64_t a1)
{
  return sub_10031EE2C(a1, type metadata accessor for MTTestActionContentPickerViewController);
}

uint64_t type metadata accessor for MTTestActionContentPickerViewController()
{
  return self;
}

__n128 sub_10031A498()
{
  __asm { FMOV            V0.2D, #8.0 }
  xmmword_100602800 = (__int128)result;
  *(__n128 *)&qword_100602810 = result;
  return result;
}

int64x2_t sub_10031A4AC()
{
  int64x2_t result = vdupq_n_s64(0x4045000000000000uLL);
  xmmword_100602820 = (__int128)result;
  return result;
}

uint64_t type metadata accessor for HeaderMetrics()
{
  return self;
}

__n128 sub_10031A4E8()
{
  __asm { FMOV            V0.2D, #8.0 }
  xmmword_100602830 = (__int128)result;
  *(__n128 *)&qword_100602840 = result;
  return result;
}

int64x2_t sub_10031A4FC()
{
  int64x2_t result = vdupq_n_s64(0x4045000000000000uLL);
  xmmword_100602850 = (__int128)result;
  return result;
}

uint64_t type metadata accessor for CellMetrics()
{
  return self;
}

id sub_10031A538()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_tableViewController];
  id result = [v2 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_27;
  }
  id v4 = result;
  type metadata accessor for EpisodeCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v6 = String._bridgeToObjectiveC()();
  [v4 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v6];

  id result = [v2 tableView];
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = result;
  type metadata accessor for ShowCell();
  uint64_t v8 = swift_getObjCClassFromMetadata();
  NSString v9 = String._bridgeToObjectiveC()();
  [v7 registerClass:v8 forCellReuseIdentifier:v9];

  id result = [v2 tableView];
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v10 = result;
  type metadata accessor for SectionHeader();
  uint64_t v11 = swift_getObjCClassFromMetadata();
  NSString v12 = String._bridgeToObjectiveC()();
  [v10 registerClass:v11 forHeaderFooterViewReuseIdentifier:v12];

  id result = [v2 tableView];
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v13 = result;
  id result = [v1 view];
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v14 = result;
  [result bounds];
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;

  [v13 setFrame:v16, v18, v20, v22];
  id result = [v2 tableView];
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  id v23 = result;
  [result setAutoresizingMask:18];

  id result = [v2 tableView];
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v24 = result;
  [result setEditing:1];

  id result = [v2 tableView];
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v25 = result;
  [result setAllowsSelectionDuringEditing:1];

  id result = [v2 tableView];
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  Swift::String v26 = result;
  [result setDataSource:v1];

  id result = [v2 tableView];
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v27 = result;
  [result setDelegate:v1];

  id result = [v2 tableView];
  if (!result)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v28 = result;
  [result setAllowsMultipleSelection:v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_allowsMultipleSelection]];

  if (v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_showsCellArtwork] == 1)
  {
    id result = [v2 tableView];
    if (!result)
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v29 = result;
    if (qword_1005F5AD8 != -1) {
      swift_once();
    }
    double v30 = *((double *)&xmmword_100602850 + 1);
    if (qword_1005F5AD0 != -1) {
      swift_once();
    }
    [v29 setEstimatedRowHeight:v30 + *(double *)&xmmword_100602830 + *(double *)&qword_100602840];

    id result = [v2 tableView];
    if (!result) {
      goto LABEL_40;
    }
    uint64_t v31 = result;
    id result = [v2 tableView];
    if (!result)
    {
LABEL_41:
      __break(1u);
      return result;
    }
    id v32 = result;
    [result estimatedRowHeight];
    double v34 = v33;

    [v31 setRowHeight:v34];
  }
  [v1 addChildViewController:v2];
  id result = [v1 view];
  if (!result) {
    goto LABEL_37;
  }
  uint64_t v35 = result;
  id result = [v2 view];
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v36 = result;
  [v35 addSubview:result];

  uint64_t v37 = *(void *)&v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource];
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v39 = swift_allocObject();
  *(unsigned char *)(v39 + 16) = 1;
  *(void *)(v39 + 32) = 0;
  *(void *)(v39 + 40) = 0;
  *(void *)(v39 + 24) = v38;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_100321BD8;
  *(void *)(v40 + 24) = v39;
  uint64_t v41 = *(void (**)(uint64_t (*)(), uint64_t))(*(void *)v37 + 208);
  swift_retain();
  swift_retain();
  v41(sub_1001DCE78, v40);
  swift_release();
  swift_release();

  return (id)swift_release();
}

uint64_t sub_10031ABEC(void *a1)
{
  sub_10031F260((uint64_t)v9);
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v4 = [a1 dequeueReusableCellWithIdentifier:v2 forIndexPath:isa];

  type metadata accessor for ContentCell();
  uint64_t v5 = swift_dynamicCastClassUnconditional();
  sub_100054BBC((uint64_t)v9, (uint64_t)v8, &qword_1005FDDA0);
  uint64_t v6 = v5 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
  swift_beginAccess();
  sub_100321A60((uint64_t)v8, v6);
  swift_endAccess();
  sub_10031D6E0();
  sub_100054B1C((uint64_t)v8, &qword_1005FDDA0);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability) = sub_10031ADA4((uint64_t)v9);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked) = sub_10031B0DC((uint64_t)v9) & 1;
  sub_10031D6E0();
  sub_100054B1C((uint64_t)v9, &qword_1005FDDA0);
  return v5;
}

uint64_t sub_10031ADA4(uint64_t a1)
{
  uint64_t v3 = 2 * (*(void *)(a1 + 24) != 0);
  sub_100054BBC(a1, (uint64_t)&v18, &qword_1005FDDA0);
  if (*((void *)&v19 + 1))
  {
    sub_100054B78(&qword_1005F82D0);
    type metadata accessor for EpisodeData();
    if (swift_dynamicCast())
    {
      uint64_t v4 = v1 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate;
      swift_beginAccess();
      sub_100054BBC(v4, (uint64_t)v15, &qword_100603228);
      if (v16)
      {
        sub_100054B78(&qword_100603240);
        sub_100054B78(&qword_100603258);
        if (swift_dynamicCast())
        {
          if (*((void *)&v19 + 1))
          {
            uint64_t v5 = *sub_100041A98(&v18, *((uint64_t *)&v19 + 1));
            uint64_t v6 = swift_retain();
            uint64_t v3 = sub_100320F00(v6, v5);
            swift_release_n();
LABEL_14:
            sub_10004D2D8((uint64_t)&v18);
            return v3;
          }
        }
        else
        {
          uint64_t v20 = 0;
          long long v18 = 0u;
          long long v19 = 0u;
        }
      }
      else
      {
        sub_100054B1C((uint64_t)v15, &qword_100603228);
        long long v18 = 0u;
        long long v19 = 0u;
        uint64_t v20 = 0;
      }
      swift_release();
      uint64_t v13 = (uint64_t *)&unk_100603230;
      goto LABEL_22;
    }
  }
  else
  {
    sub_100054B1C((uint64_t)&v18, &qword_1005FDDA0);
  }
  sub_100054BBC(a1, (uint64_t)&v18, &qword_1005FDDA0);
  if (!*((void *)&v19 + 1))
  {
    uint64_t v13 = &qword_1005FDDA0;
    goto LABEL_22;
  }
  sub_100054B78(&qword_1005F82D0);
  uint64_t v7 = type metadata accessor for ShowData();
  if (swift_dynamicCast())
  {
    uint64_t v8 = v15[0];
    uint64_t v9 = v1 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate;
    swift_beginAccess();
    sub_100054BBC(v9, (uint64_t)v15, &qword_100603228);
    if (v16)
    {
      sub_100054B78(&qword_100603240);
      sub_100054B78((uint64_t *)&unk_100603248);
      if (swift_dynamicCast())
      {
        uint64_t v10 = *((void *)&v19 + 1);
        if (*((void *)&v19 + 1))
        {
          uint64_t v11 = v20;
          sub_100041A98(&v18, *((uint64_t *)&v19 + 1));
          uint64_t v16 = v7;
          double v17 = &off_1005615F8;
          v15[0] = v8;
          NSString v12 = *(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v11 + 8);
          swift_retain();
          uint64_t v3 = v12(v1, v15, v10, v11);
          swift_release();
          sub_10004D2D8((uint64_t)v15);
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v20 = 0;
        long long v18 = 0u;
        long long v19 = 0u;
      }
    }
    else
    {
      sub_100054B1C((uint64_t)v15, &qword_100603228);
      long long v18 = 0u;
      long long v19 = 0u;
      uint64_t v20 = 0;
    }
    swift_release();
    uint64_t v13 = (uint64_t *)&unk_100603238;
LABEL_22:
    sub_100054B1C((uint64_t)&v18, v13);
  }
  return v3;
}

uint64_t sub_10031B0DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource);
  sub_100054BBC(a1, (uint64_t)&v12, &qword_1005FDDA0);
  if (v13)
  {
    sub_100042FC4(&v12, (uint64_t)v14);
    swift_beginAccess();
    uint64_t v3 = *(void *)(v2 + 32);
    uint64_t v4 = v15;
    uint64_t v5 = v16;
    sub_100041A98(v14, v15);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    uint64_t v7 = v6(v4, v5);
    if (*(void *)(v3 + 16))
    {
      sub_100051E78(v7, v8);
      char v10 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v10 = 0;
    }
    sub_10004D2D8((uint64_t)v14);
  }
  else
  {
    sub_100054B1C((uint64_t)&v12, &qword_1005FDDA0);
    char v10 = 0;
  }
  return v10 & 1;
}

void sub_10031B324(void *a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 22;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_showsHeaders) == 1)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [a1 dequeueReusableHeaderFooterViewWithIdentifier:v7];

    if (v8)
    {
      type metadata accessor for SectionHeader();
      uint64_t v9 = swift_dynamicCastClassUnconditional();
      IndexPath.init(row:section:)();
      sub_10031F260((uint64_t)v12);
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
      uint64_t v10 = v9 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection;
      swift_beginAccess();
      sub_100321A60((uint64_t)v12, v10);
      swift_endAccess();
      sub_10031E958();
      sub_100054B1C((uint64_t)v12, &qword_1005FDDA0);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10031B568(void *a1)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [a1 cellForRowAtIndexPath:isa];

  if (v10)
  {
    type metadata accessor for ContentCell();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = v3 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
      swift_beginAccess();
      sub_100054BBC(v5, (uint64_t)&v11, &qword_1005FDDA0);
      if (v12)
      {
        sub_100042FC4(&v11, (uint64_t)v13);
        sub_100056D54((uint64_t)v13, (uint64_t)&v11);
        char v6 = sub_10031B0DC((uint64_t)&v11);
        sub_100054B1C((uint64_t)&v11, &qword_1005FDDA0);
        if ((v6 & 1) != 0
          || *(unsigned char *)(v4 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability) != 1)
        {
          sub_10031B838((v6 ^ 1) & 1, v4, (uint64_t)v13);

          sub_10004D2D8((uint64_t)v13);
        }
        else
        {
          uint64_t v7 = swift_allocObject();
          swift_unknownObjectWeakInit();
          sub_100056D54((uint64_t)v13, (uint64_t)&v11);
          uint64_t v8 = swift_allocObject();
          *(void *)(v8 + 16) = v4;
          *(void *)(v8 + 24) = v7;
          sub_100042FC4(&v11, v8 + 32);
          id v9 = v10;
          swift_retain();
          sub_10031BDBC((uint64_t)v13, (void (*)(uint64_t))sub_10032191C, v8);

          swift_release();
          sub_10004D2D8((uint64_t)v13);
          swift_release();
        }
      }
      else
      {

        sub_100054B1C((uint64_t)&v11, &qword_1005FDDA0);
      }
    }
    else
    {
    }
  }
}

void sub_10031B7A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == 2)
  {
    *(unsigned char *)(a2 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability) = 2;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v7 = (void *)Strong;
      sub_10031B838(1, a2, a4);
    }
  }
}

void sub_10031B838(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  char v5 = a1;
  if ((a1 & 1) == 0
    || (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_allowsMultipleSelection) & 1) != 0)
  {
    goto LABEL_52;
  }
  uint64_t v39 = a3;
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource);
  v49[0] = _swiftEmptyArrayStorage;
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_100319708(v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = _swiftEmptyArrayStorage[2];
  if (v8)
  {
    uint64_t v38 = v3;
    id v9 = &_swiftEmptyArrayStorage[4];
    id v10 = (uint64_t *)(v6 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_100056D54((uint64_t)v9, (uint64_t)v49);
      sub_100054BBC((uint64_t)v49, (uint64_t)&v43, &qword_1005FDDA0);
      if (*((void *)&v44 + 1))
      {
        sub_100042FC4(&v43, (uint64_t)v46);
        uint64_t v11 = v47;
        uint64_t v12 = v48;
        sub_100041A98(v46, v47);
        uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
        uint64_t v15 = v14;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v16 = sub_100051E78(v13, v15);
        char v18 = v17;
        swift_bridgeObjectRelease();
        if (v18)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v20 = *v10;
          uint64_t v42 = *v10;
          *id v10 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100281E20();
            uint64_t v20 = v42;
          }
          swift_bridgeObjectRelease();
          sub_100042FC4((long long *)(*(void *)(v20 + 56) + 40 * v16), (uint64_t)&v43);
          sub_10027EC4C(v16, v20);
          *id v10 = v20;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v45 = 0;
          long long v43 = 0u;
          long long v44 = 0u;
        }
        sub_100054B1C((uint64_t)&v43, &qword_1005FDDA0);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_10004D2D8((uint64_t)v46);
      }
      else
      {
        sub_100054B1C((uint64_t)&v43, &qword_1005FDDA0);
      }
      sub_100054B1C((uint64_t)v49, &qword_1005FDDA0);
      v9 += 5;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
    uint64_t v3 = v38;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v21 = [*(id *)(v3 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_tableViewController) tableView:v38];
  if (v21)
  {
    double v22 = v21;
    id v23 = [v21 visibleCells];
    sub_10004D29C(0, (unint64_t *)&unk_100603270);
    unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v49[0] = _swiftEmptyArrayStorage;
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v25)
      {
LABEL_19:
        if (v25 < 1)
        {
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        for (uint64_t i = 0; i != v25; ++i)
        {
          if ((v24 & 0xC000000000000001) != 0) {
            id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v27 = *(id *)(v24 + 8 * i + 32);
          }
          uint64_t v28 = v27;
          type metadata accessor for ContentCell();
          if (swift_dynamicCastClass())
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v29 = v49[0];
        if ((v49[0] & 0x8000000000000000) != 0) {
          goto LABEL_49;
        }
LABEL_32:
        if ((v29 & 0x4000000000000000) == 0)
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          type metadata accessor for ContentCell();
          if (swift_dynamicCastMetatype() || (uint64_t v34 = *(void *)(v29 + 16)) == 0)
          {
LABEL_34:
            swift_release();
          }
          else
          {
            uint64_t v35 = 0;
            while (swift_dynamicCastClass())
            {
              if (v34 == ++v35) {
                goto LABEL_34;
              }
            }
            swift_release();
            v29 |= 1uLL;
          }
LABEL_35:
          if (v29 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
            if (v30)
            {
LABEL_37:
              if (v30 >= 1)
              {
                uint64_t v31 = 0;
                do
                {
                  if ((v29 & 0xC000000000000001) != 0) {
                    id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    id v32 = *(id *)(v29 + 8 * v31 + 32);
                  }
                  double v33 = v32;
                  ++v31;
                  *((unsigned char *)v32 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked) = 0;
                  sub_10031D6E0();
                }
                while (v30 != v31);
                goto LABEL_51;
              }
              goto LABEL_54;
            }
          }
          else
          {
            uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v30) {
              goto LABEL_37;
            }
          }
LABEL_51:

          swift_bridgeObjectRelease_n();
          uint64_t v4 = a2;
          char v5 = a1;
          a3 = v39;
LABEL_52:
          sub_100056D54(a3, (uint64_t)v49);
          char v37 = v5 & 1;
          sub_10031F3B8(v37, (uint64_t)v49);
          sub_100054B1C((uint64_t)v49, &qword_1005FDDA0);
          *(unsigned char *)(v4 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked) = v37;
          sub_10031D6E0();
          return;
        }
LABEL_49:
        type metadata accessor for ContentCell();
        swift_bridgeObjectRetain();
        uint64_t v36 = _bridgeCocoaArray<A>(_:)();
        swift_release_n();
        unint64_t v29 = v36;
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v25) {
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_49;
    }
    goto LABEL_32;
  }
LABEL_55:
  __break(1u);
}

uint64_t sub_10031BDBC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  sub_100056D54(a1, (uint64_t)&v24);
  uint64_t v7 = sub_10031ADA4((uint64_t)&v24);
  sub_100054B1C((uint64_t)&v24, &qword_1005FDDA0);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100056D54(a1, (uint64_t)&v24);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(unsigned char *)(v9 + 40) = v7;
  sub_100042FC4(&v24, v9 + 48);
  uint64_t v10 = (uint64_t)v3 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate;
  swift_beginAccess();
  sub_100054BBC(v10, (uint64_t)v19, &qword_100603228);
  uint64_t v11 = v20;
  swift_retain();
  if (!v11)
  {
    sub_100054B1C((uint64_t)v19, &qword_100603228);
    long long v21 = 0u;
    long long v22 = 0u;
    id v23 = 0;
    goto LABEL_8;
  }
  sub_100054B78(&qword_100603240);
  sub_100054B78(&qword_100603258);
  if ((swift_dynamicCast() & 1) == 0)
  {
    id v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    goto LABEL_8;
  }
  if (!*((void *)&v22 + 1))
  {
LABEL_8:
    sub_100054B1C((uint64_t)&v21, &qword_100603230);
    goto LABEL_9;
  }
  sub_100042FC4(&v21, (uint64_t)&v24);
  sub_100056D54(a1, (uint64_t)&v21);
  sub_100054B78(&qword_1005F82D0);
  type metadata accessor for EpisodeData();
  if (swift_dynamicCast())
  {
    uint64_t v12 = v19[0];
    sub_100041A98(&v24, v25);
    swift_retain();
    sub_1003204E8(v3, v12, (void (*)(uint64_t))sub_100321970, v9);
    swift_release();
    swift_release_n();
    return sub_10004D2D8((uint64_t)&v24);
  }
  sub_10004D2D8((uint64_t)&v24);
LABEL_9:
  sub_100054BBC(v10, (uint64_t)v19, &qword_100603228);
  if (!v20)
  {
    sub_100054B1C((uint64_t)v19, &qword_100603228);
    long long v21 = 0u;
    long long v22 = 0u;
    id v23 = 0;
    goto LABEL_17;
  }
  sub_100054B78(&qword_100603240);
  sub_100054B78((uint64_t *)&unk_100603248);
  if ((swift_dynamicCast() & 1) == 0)
  {
    id v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    goto LABEL_17;
  }
  if (!*((void *)&v22 + 1))
  {
LABEL_17:
    sub_100054B1C((uint64_t)&v21, &qword_100603238);
    goto LABEL_18;
  }
  sub_100042FC4(&v21, (uint64_t)&v24);
  sub_100056D54(a1, (uint64_t)&v21);
  sub_100054B78(&qword_1005F82D0);
  uint64_t v13 = type metadata accessor for ShowData();
  if (swift_dynamicCast())
  {
    uint64_t v14 = v19[0];
    uint64_t v15 = v25;
    uint64_t v16 = v26;
    sub_100041A98(&v24, v25);
    *((void *)&v22 + 1) = v13;
    id v23 = &off_1005615F8;
    *(void *)&long long v21 = v14;
    char v17 = *(void (**)(void *, long long *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v16 + 16);
    swift_retain();
    v17(v3, &v21, sub_100321970, v9, v15, v16);
    swift_release();
    swift_release();
    sub_10004D2D8((uint64_t)&v21);
    return sub_10004D2D8((uint64_t)&v24);
  }
  sub_10004D2D8((uint64_t)&v24);
LABEL_18:
  a2(v7);
  return swift_release();
}

uint64_t sub_10031C364(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v18 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = a4;
  aBlock[4] = sub_100321A50;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100561A30;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_10004ACDC(a3);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v18);
}

void sub_10031C63C(char a1, uint64_t a2, void (*a3)(void))
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      char v5 = (void *)Strong;
      id v6 = objc_retain(*(id *)(Strong
                             + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_tableViewController));

      id v7 = [v6 tableView];
      if (!v7)
      {
        __break(1u);
        return;
      }
      [v7 reloadData];
    }
  }
  if (a3) {
    a3();
  }
}

uint64_t sub_10031C6FC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a2(a4);
  }
  uint64_t v10 = (char *)Strong;
  sub_100056D54(a5, (uint64_t)v19);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  sub_100042FC4(v19, (uint64_t)(v11 + 3));
  v11[8] = a2;
  v11[9] = a3;
  uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource];
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = sub_100321A24;
  *(void *)(v14 + 40) = v11;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100321A38;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = *(void (**)(uint64_t (*)(), uint64_t))(*(void *)v12 + 208);
  char v17 = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v16(sub_1001DCE78, v15);
  swift_release();

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10031C8DC(uint64_t a1, void *a2, void (*a3)(void))
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  sub_100041A98(a2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v8 = v7;
  *(void *)&v23[0] = _swiftEmptyArrayStorage;
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_100319708(v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = _swiftEmptyArrayStorage[2];
  if (v10)
  {
    uint64_t v19 = a3;
    uint64_t v11 = *(void *)&v23[0] + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100056D54(v11, (uint64_t)&v20);
      uint64_t v12 = v21;
      uint64_t v13 = v22;
      sub_100041A98(&v20, v21);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13) == v6 && v14 == v8) {
        break;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_12;
      }
      sub_10004D2D8((uint64_t)&v20);
      v11 += 40;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        a3 = v19;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    sub_100042FC4(&v20, (uint64_t)v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v19;
  }
  else
  {
LABEL_10:
    uint64_t v24 = 0;
    memset(v23, 0, sizeof(v23));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = sub_10031ADA4((uint64_t)v23);
  a3(v17);
  return sub_100054B1C((uint64_t)v23, &qword_1005FDDA0);
}

id sub_10031CAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability] = 2;
  uint64_t v6 = v3;
  NSString v7 = String._bridgeToObjectiveC()();
  uint64_t v8 = self;
  id v9 = [v8 imageNamed:v7];

  if (v9)
  {
    id v10 = [v9 imageWithRenderingMode:2];
  }
  else
  {
    id v10 = 0;
  }
  *(void *)&v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkImage] = v10;
  uint64_t v11 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_notCheckedImage;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v8 imageNamed:v12];

  *(void *)&v6[v11] = v13;
  v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked] = 0;
  uint64_t v14 = &v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData];
  *(_OWORD *)uint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((void *)v14 + 4) = 0;
  id v15 = [self buttonWithType:0];
  *(void *)&v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkButton] = v15;
  [v15 setHidden:1];
  id v16 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v17 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_titleLabel;
  *(void *)&v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_titleLabel] = v16;
  uint64_t v18 = self;
  id v19 = v16;
  id v20 = [v18 preferredFontForTextStyle:UIFontTextStyleBody];
  [v19 setFont:v20];

  [*(id *)&v6[v17] setLineBreakMode:4];
  uint64_t ObjectType = swift_getObjectType();
  char v22 = (*(uint64_t (**)(void))(ObjectType + 168))();
  id v23 = 0;
  if (v22) {
    id v23 = sub_1003214C8();
  }
  *(void *)&v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_artworkView] = v23;

  if (a3)
  {
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v24 = 0;
  }
  v28.receiver = v6;
  v28.super_class = (Class)type metadata accessor for ContentCell();
  id v25 = [super initWithStyle:a1 reuseIdentifier:v24];

  id v26 = v25;
  sub_10031CE20();

  return v26;
}

void sub_10031CE20()
{
  if (qword_1005F5AD0 != -1) {
    swift_once();
  }
  long long v1 = xmmword_100602830;
  double v2 = *(double *)&qword_100602840;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkButton];
  [v0 addSubview:v3];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v3 leadingAnchor];
  id v5 = [v0 layoutMarginsGuide];
  id v6 = [v5 leadingAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6 constant:0.0];
  [v7 setActive:1];

  id v8 = [v3 centerYAnchor];
  id v9 = [v0 centerYAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  [v10 setActive:1];
  LODWORD(v11) = 1148846080;
  [v3 setContentCompressionResistancePriority:1 forAxis:v11];
  LODWORD(v12) = 1148846080;
  [v3 setContentCompressionResistancePriority:0 forAxis:v12];
  id v13 = *(void **)&v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_artworkView];
  uint64_t v14 = &selRef_block;
  if (!v13) {
    goto LABEL_7;
  }
  id v15 = v13;
  [v0 addSubview:v15];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [v15 widthAnchor];
  if (qword_1005F5AD8 != -1) {
    swift_once();
  }
  id v17 = [v16 constraintEqualToConstant:*(double *)&xmmword_100602850];

  [v17 setActive:1];
  id v18 = [v15 heightAnchor];
  id v19 = objc_retainAutoreleasedReturnValue(objc_msgSend(v18, "constraintEqualToConstant:", *((double *)&xmmword_100602850
                                                                                           + 1)));

  [v19 setActive:1];
  id v20 = [v15 leadingAnchor];
  id v21 = [v3 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:*((double *)&v1 + 1)];

  [v22 setActive:1];
  id v23 = [v15 centerYAnchor];
  id v24 = [v0 contentView];
  id v25 = [v24 centerYAnchor];

  id v26 = [v23 constraintEqualToAnchor:v25];
  [v26 setActive:1];

  id v27 = [v15 topAnchor];
  id v28 = [v0 contentView];
  id v29 = [v28 topAnchor];

  id v30 = [v27 constraintEqualToAnchor:v29 constant:*(double *)&v1];
  [v30 setActive:1];

  id v31 = [v15 bottomAnchor];
  id v32 = [v0 contentView];
  id v33 = [v32 bottomAnchor];

  uint64_t v14 = &selRef_block;
  id v34 = [v31 constraintEqualToAnchor:v33 constant:-v2];

  [v34 setActive:1];
  id v35 = [v15 trailingAnchor];
  if (!v35) {
LABEL_7:
  }
    id v35 = [v3 trailingAnchor];
  uint64_t v36 = *(void **)&v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_titleLabel];
  [v0 addSubview:v36];
  [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v37 = [v36 leadingAnchor];
  id v38 = [v37 constraintEqualToAnchor:v35 constant:*((double *)&v1 + 1)];

  [v38 setActive:1];
  id v39 = [v36 trailingAnchor];
  id v40 = [v0 layoutMarginsGuide];
  id v41 = [v40 trailingAnchor];

  id v42 = [v39 constraintLessThanOrEqualToAnchor:v41 constant:0.0];
  [v42 setActive:1];

  id v43 = [v36 topAnchor];
  id v44 = [v0 layoutMarginsGuide];
  id v45 = [v44 topAnchor];

  id v46 = [v43 constraintEqualToAnchor:v45 constant:0.0];
  [v46 setActive:1];

  id v47 = [v36 v14[11]];
  id v48 = [v0 layoutMarginsGuide];
  id v49 = [v48 v14[11]];

  id v50 = [v47 constraintEqualToAnchor:v49 constant:0.0];
  [v50 setActive:1];
}

void sub_10031D6E0()
{
  uint64_t v1 = v0;
  double v2 = *(void **)(v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_titleLabel);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
  swift_beginAccess();
  sub_100054BBC(v3, (uint64_t)v16, &qword_1005FDDA0);
  uint64_t v4 = v17;
  if (v17)
  {
    uint64_t v5 = v18;
    sub_100041A98(v16, v17);
    uint64_t v6 = *(void *)(v4 - 8);
    __chkstk_darwin();
    id v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *))(v6 + 16))(v8);
    sub_100054B1C((uint64_t)v16, &qword_1005FDDA0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v4);
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100054B1C((uint64_t)v16, &qword_1005FDDA0);
    NSString v9 = 0;
  }
  [v2 setText:v9];

  uint64_t v10 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability) == 2) {
    double v11 = 1.0;
  }
  else {
    double v11 = 0.5;
  }
  [v2 setAlpha:v11];
  double v12 = *(void **)(v1 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkButton);
  [v12 setHidden:*(unsigned char *)(v1 + v10) == 0];
  if (*(unsigned char *)(v1 + v10) == 2) {
    double v13 = 1.0;
  }
  else {
    double v13 = 0.5;
  }
  [v12 setAlpha:v13];
  if (([v12 isHidden] & 1) == 0)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked)) {
      uint64_t v14 = &OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkImage;
    }
    else {
      uint64_t v14 = &OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_notCheckedImage;
    }
    [v12 setImage:*(void *)(v1 + *v14) forStates:0];
  }
  sub_10031D970();
}

void sub_10031D970()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_artworkView);
  if (v1)
  {
    uint64_t v2 = v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
    swift_beginAccess();
    sub_100054BBC(v2, (uint64_t)aBlock, &qword_1005FDDA0);
    uint64_t v3 = v21;
    if (v21)
    {
      uint64_t v4 = v22;
      sub_100041A98(aBlock, (uint64_t)v21);
      uint64_t v5 = *(v3 - 1);
      __chkstk_darwin();
      uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v5 + 16))(v7);
      id v8 = v1;
      sub_100054B1C((uint64_t)aBlock, &qword_1005FDDA0);
      (*((void (**)(void *, id (*)(uint64_t, uint64_t, uint64_t)))v4 + 4))(v3, v4);
      (*(void (**)(char *, void *))(v5 + 8))(v7, v3);
      sub_10004D29C(0, &qword_1005F6FE0);
      uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      id v10 = [ObjCClassFromMetadata defaultStore];
      NSString v11 = String._bridgeToObjectiveC()();
      if (qword_1005F5AD8 != -1) {
        swift_once();
      }
      NSString v12 = [v10 imageInMemoryForKey:v11 size:xmmword_100602850];

      if (v12)
      {
        swift_bridgeObjectRelease();
        [v8 setImage:v12];
      }
      else
      {
        id v13 = [ObjCClassFromMetadata defaultStore];
        NSString v12 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        long long v14 = xmmword_100602850;
        uint64_t v15 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v15;
        *(void *)(v16 + 24) = v8;
        id v22 = sub_1003218CC;
        uint64_t v23 = v16;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10031DF3C;
        id v21 = &unk_100561878;
        uint64_t v17 = _Block_copy(aBlock);
        id v18 = v8;
        swift_release();
        [v13 asyncImageForKey:v12 size:v17 completionHandler:v14];
        _Block_release(v17);
      }
    }
    else
    {
      NSString v12 = v1;
      sub_100054B1C((uint64_t)aBlock, &qword_1005FDDA0);
      [v12 setImage:0];
    }
  }
}

id sub_10031DD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  swift_beginAccess();
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v10 = result;
    uint64_t v11 = (uint64_t)result + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
    swift_beginAccess();
    sub_100054BBC(v11, (uint64_t)v23, &qword_1005FDDA0);

    uint64_t v12 = v24;
    if (!v24) {
      return (id)sub_100054B1C((uint64_t)v23, &qword_1005FDDA0);
    }
    uint64_t v13 = v25;
    sub_100041A98(v23, v24);
    uint64_t v14 = *(void *)(v12 - 8);
    __chkstk_darwin();
    uint64_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
    (*(void (**)(char *))(v14 + 16))(v16);
    sub_100054B1C((uint64_t)v23, &qword_1005FDDA0);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    if (v17 == a2 && v19 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id result = (id)swift_bridgeObjectRelease();
      if ((v21 & 1) == 0) {
        return result;
      }
    }
    return [a5 setImage:a1];
  }
  return result;
}

void sub_10031DF3C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  swift_retain();
  id v7 = a2;
  v3(a2, v4, v6);
  swift_release();
  swift_bridgeObjectRelease();
}

id sub_10031DFD0()
{
  return sub_10031EE2C(0, type metadata accessor for ContentCell);
}

uint64_t type metadata accessor for ContentCell()
{
  return self;
}

id sub_10031E0C8()
{
  return sub_10031EE2C(0, type metadata accessor for EpisodeCell);
}

uint64_t type metadata accessor for EpisodeCell()
{
  return self;
}

id sub_10031E120(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return [super initWithCoder:a3];
}

id sub_10031E188(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  if (a4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)a5(0);
  id v9 = [super initWithStyle:a3 reuseIdentifier:v8];

  return v9;
}

id sub_10031E224()
{
  return sub_10031EE2C(0, type metadata accessor for ShowCell);
}

uint64_t type metadata accessor for ShowCell()
{
  return self;
}

char *sub_10031E2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = &v2[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  uint64_t v5 = v2;
  *(void *)&v5[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_imageView] = sub_1003214C8();
  id v6 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v5[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_podcastTitleLabel] = v6;
  id v7 = self;
  id v8 = v6;
  id v9 = [v7 boldSystemFontOfSize:20.0];
  [v8 setFont:v9];

  if (a2)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v48.receiver = v5;
  v48.super_class = (Class)type metadata accessor for SectionHeader();
  [super initWithReuseIdentifier:v10];

  uint64_t v12 = (char *)v11;
  id v13 = [v12 contentView];
  uint64_t v14 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_imageView;
  [v13 addSubview:*(void *)&v12[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_imageView]];

  id v15 = [v12 contentView];
  uint64_t v16 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_podcastTitleLabel;
  [v15 addSubview:*(void *)&v12[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_podcastTitleLabel]];

  if (qword_1005F5AC0 != -1) {
    swift_once();
  }
  long long v17 = xmmword_100602800;
  double v19 = *(double *)&qword_100602810;
  double v18 = unk_100602818;
  [*(id *)&v12[v14] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v20 = [*(id *)&v12[v14] widthAnchor];
  if (qword_1005F5AC8 != -1) {
    swift_once();
  }
  id v21 = [v20 constraintEqualToConstant:*(double *)&xmmword_100602820];

  [v21 setActive:1];
  id v22 = [*(id *)&v12[v14] heightAnchor];
  id v23 = objc_retainAutoreleasedReturnValue(objc_msgSend(v22, "constraintEqualToConstant:", *((double *)&xmmword_100602820
                                                                                           + 1)));

  [v23 setActive:1];
  id v24 = [*(id *)&v12[v14] leadingAnchor];
  id v25 = [v12 contentView];
  id v26 = [v25 leadingAnchor];

  id v27 = [v24 constraintEqualToAnchor:v26 constant:*((double *)&v17 + 1)];
  [v27 setActive:1];

  id v28 = [*(id *)&v12[v14] topAnchor];
  id v29 = [v12 contentView];
  id v30 = [v29 topAnchor];

  id v31 = [v28 constraintEqualToAnchor:v30 constant:*(double *)&v17];
  [v31 setActive:1];

  id v32 = [*(id *)&v12[v14] bottomAnchor];
  id v33 = [v12 contentView];
  id v34 = [v33 bottomAnchor];

  id v35 = [v32 constraintEqualToAnchor:v34 constant:-v19];
  [v35 setActive:1];

  [*(id *)&v12[v16] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v36 = [*(id *)&v12[v16] centerYAnchor];
  id v37 = [v12 contentView];
  id v38 = [v37 centerYAnchor];

  id v39 = [v36 constraintEqualToAnchor:v38];
  [v39 setActive:1];

  id v40 = [*(id *)&v12[v16] leadingAnchor];
  id v41 = [*(id *)&v12[v14] trailingAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41 constant:*((double *)&v17 + 1)];

  [v42 setActive:1];
  id v43 = [*(id *)&v12[v16] trailingAnchor];
  id v44 = [v12 contentView];
  id v45 = [v44 trailingAnchor];

  id v46 = [v43 constraintEqualToAnchor:v45 constant:v18];
  [v46 setActive:1];

  return v12;
}

uint64_t sub_10031E958()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection;
  swift_beginAccess();
  sub_100054BBC(v2, (uint64_t)&v16, &qword_1005FDDA0);
  if (!v18) {
    return sub_100054B1C((uint64_t)&v16, &qword_1005FDDA0);
  }
  sub_100042FC4(&v16, (uint64_t)v21);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_podcastTitleLabel);
  uint64_t v4 = v22;
  uint64_t v5 = v23;
  sub_100041A98(v21, v22);
  id v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v7 = v3;
  v6(v4, v5);
  swift_bridgeObjectRetain();
  swift_release();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v8];

  sub_10004D29C(0, &qword_1005F6FE0);
  id v9 = [(id)swift_getObjCClassFromMetadata() defaultStore];
  uint64_t v10 = v22;
  uint64_t v11 = v23;
  sub_100041A98(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  double v19 = sub_100321838;
  uint64_t v20 = v13;
  *(void *)&long long v16 = _NSConcreteStackBlock;
  *((void *)&v16 + 1) = 1107296256;
  long long v17 = sub_10031DF3C;
  double v18 = &unk_100561800;
  uint64_t v14 = _Block_copy(&v16);
  swift_release();
  [v9 asyncImageForKey:v12 completionHandler:v14];
  _Block_release(v14);

  return sub_10004D2D8((uint64_t)v21);
}

void sub_10031EBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (void *)Strong;
    uint64_t v8 = Strong + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection;
    swift_beginAccess();
    sub_100054BBC(v8, (uint64_t)v23, &qword_1005FDDA0);

    uint64_t v9 = v24;
    if (!v24)
    {
      sub_100054B1C((uint64_t)v23, &qword_1005FDDA0);
      return;
    }
    uint64_t v10 = v25;
    sub_100041A98(v23, v24);
    uint64_t v11 = *(void *)(v9 - 8);
    __chkstk_darwin();
    uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
    (*(void (**)(char *))(v11 + 16))(v13);
    sub_100054B1C((uint64_t)v23, &qword_1005FDDA0);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    if (v14 == a2 && v16 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        return;
      }
    }
    swift_beginAccess();
    uint64_t v19 = swift_unknownObjectWeakLoadStrong();
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      id v21 = objc_retain(*(id *)(v19
                              + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_imageView));

      [v21 setImage:a1];
    }
  }
}

id sub_10031EE10()
{
  return sub_10031EE2C(0, type metadata accessor for SectionHeader);
}

id sub_10031EE2C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for SectionHeader()
{
  return self;
}

uint64_t sub_10031EEEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShowData()
{
  return self;
}

uint64_t sub_10031EF58()
{
  return swift_retain();
}

uint64_t sub_10031EF60()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10031EF94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10031EFC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EpisodeData()
{
  return self;
}

uint64_t sub_10031F03C()
{
  return swift_retain();
}

uint64_t sub_10031F048()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)v0 + 48) + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_10031F080()
{
}

unint64_t sub_10031F0DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(row:section:)();
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(v1 + 16);
    if (result < *(void *)(v7 + 16))
    {
      uint64_t v8 = v7 + 16 * result;
      uint64_t v10 = *(void *)(v8 + 32);
      uint64_t v9 = *(void *)(v8 + 40);
      uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
      swift_bridgeObjectRetain();
      v11(v5, v2);
      uint64_t v12 = *(void *)(v1 + 24);
      if (*(void *)(v12 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v13 = sub_100051E78(v10, v9);
        if (v14)
        {
          uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v16 = *(void *)(v15 + 16);
          swift_bridgeObjectRelease();
          return v16;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10031F260@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(v1 + 16);
  if (result >= *(void *)(v4 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)(v1 + 24);
  if (!*(void *)(v5 + 16))
  {
LABEL_14:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  uint64_t v6 = v4 + 16 * result;
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(v6 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_100051E78(v8, v7);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    unint64_t result = swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)(*(void *)(v5 + 56) + 8 * v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (IndexPath.row.getter() < 0 || IndexPath.row.getter() >= *(void *)(v11 + 16)) {
    goto LABEL_13;
  }
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result >= *(void *)(v11 + 16))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  sub_100056D54(v11 + 40 * result + 32, a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10031F3B8(char a1, uint64_t a2)
{
  sub_100054BBC(a2, (uint64_t)&v12, &qword_1005FDDA0);
  if (!v13) {
    return sub_100054B1C((uint64_t)&v12, &qword_1005FDDA0);
  }
  sub_100042FC4(&v12, (uint64_t)v14);
  uint64_t v3 = v15;
  uint64_t v4 = v16;
  sub_100041A98(v14, v15);
  if (a1)
  {
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
    uint64_t v7 = v6;
    sub_100056D54((uint64_t)v14, (uint64_t)&v12);
    swift_beginAccess();
    sub_100276DB4((uint64_t)&v12, v5, v7);
    swift_endAccess();
  }
  else
  {
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
    uint64_t v11 = v10;
    swift_beginAccess();
    sub_10027D94C(v9, v11, (uint64_t)&v12);
    sub_100054B1C((uint64_t)&v12, &qword_1005FDDA0);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return sub_10004D2D8((uint64_t)v14);
}

uint64_t sub_10031F538()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContentDataSource()
{
  return self;
}

uint64_t sub_10031F5A4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithKey:v5 ascending:1 selector:"localizedStandardCompare:"];

  id v7 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 initWithKey:v8 ascending:0];

  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100470E80;
  *(void *)(v10 + 32) = v6;
  *(void *)(v10 + 40) = v9;
  uint64_t v17 = v10;
  specialized Array._endMutation()();
  uint64_t v11 = v17;
  uint64_t v17 = 4;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v21 = 0;
  char v22 = 9;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  void v13[3] = a1;
  v13[4] = a2;
  id v14 = v6;
  id v15 = v9;
  swift_retain();
  sub_10004ACDC(a1);
  sub_100320B98((uint64_t)&v17, 0, v11, (uint64_t)sub_100320B64, (uint64_t)v13);

  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_10031F7AC(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v48 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      if (v2 >= 1)
      {
        uint64_t v4 = 0;
        uint64_t v43 = v2;
        unint64_t v44 = v1 & 0xC000000000000001;
        unint64_t v42 = v1;
        while (1)
        {
          if (v44) {
            id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v5 = *(id *)(v1 + 8 * v4 + 32);
          }
          id v6 = v5;
          type metadata accessor for EpisodeData();
          uint64_t v7 = swift_allocObject();
          id v8 = v6;
          id v9 = [v8 podcast];
          type metadata accessor for ShowData();
          uint64_t v10 = swift_allocObject();
          if (!v9) {
            goto LABEL_7;
          }
          id v45 = (void *)v7;
          id v11 = v9;
          id v12 = [v11 uuid];
          if (!v12) {
            goto LABEL_6;
          }
          uint64_t v13 = v12;
          uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v16 = v15;

          id v17 = [v11 title];
          if (!v17) {
            break;
          }
          long long v18 = v17;
          uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v21 = v20;

          *(void *)(v10 + 32) = v14;
          *(void *)(v10 + 40) = v16;
          *(void *)(v10 + 48) = v19;
          *(void *)(v10 + 56) = v21;
          *(void *)(v10 + 16) = v14;
          *(void *)(v10 + 24) = v16;
          swift_bridgeObjectRetain();
          *(unsigned char *)(v10 + 64) = [v11 subscribed];
          unsigned __int8 v22 = [v11 notifications];

          *(unsigned char *)(v10 + 65) = v22;
          id v23 = [v8 uuid];
          if (v23)
          {
            uint64_t v24 = v23;
            uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v27 = v26;

            id v28 = [v8 bestTitle];
            unint64_t v1 = v42;
            if (v28)
            {
              id v29 = v28;
              uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v32 = v31;

              long long v45[2] = v25;
              v45[3] = v27;
              v45[4] = v30;
              v45[5] = v32;
              uint64_t v34 = *(void *)(v10 + 32);
              uint64_t v33 = *(void *)(v10 + 40);
              v45[6] = v10;
              v45[7] = v34;
              v45[8] = v33;
              swift_bridgeObjectRetain();
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
              uint64_t v2 = v43;
              goto LABEL_9;
            }
            swift_release();

            swift_bridgeObjectRelease();
          }
          else
          {
            swift_release();

            unint64_t v1 = v42;
          }
          uint64_t v2 = v43;
LABEL_8:
          swift_deallocPartialClassInstance();
LABEL_9:
          if (v2 == ++v4)
          {
            swift_bridgeObjectRelease();
            unint64_t v35 = v48;
            goto LABEL_27;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v2 = v43;
LABEL_6:

LABEL_7:
        swift_deallocPartialClassInstance();

        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_42;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_27:
  unint64_t v36 = sub_10016F1DC((uint64_t)_swiftEmptyArrayStorage);
  id v47 = _swiftEmptyArrayStorage;
  unint64_t v48 = v36;
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v37 = result;
    if (result) {
      goto LABEL_29;
    }
LABEL_37:
    swift_bridgeObjectRelease_n();
    id v40 = _swiftEmptyArrayStorage;
    goto LABEL_38;
  }
  uint64_t v37 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v37) {
    goto LABEL_37;
  }
LABEL_29:
  if (v37 < 1)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  uint64_t v38 = 0;
  do
  {
    if ((v35 & 0xC000000000000001) != 0)
    {
      uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v39 = *(void *)(v35 + 8 * v38 + 32);
      swift_retain();
    }
    ++v38;
    uint64_t v46 = v39;
    sub_1003215BC(&v46, (uint64_t *)&v48, (uint64_t *)&v47);
    swift_release();
  }
  while (v37 != v38);
  swift_bridgeObjectRelease_n();
  id v40 = v47;
  unint64_t v36 = v48;
LABEL_38:
  *(void *)(v41 + 16) = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v41 + 24) = v36;
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for EpisodeDataSource()
{
  return self;
}

uint64_t sub_10031FC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  id v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  swift_retain();
  sub_10004ACDC(a1);
  sub_1003208B4(0, (uint64_t)sub_1003204B4, (uint64_t)v5);
  swift_release();

  return swift_release();
}

uint64_t sub_10031FD3C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, void (*a6)(uint64_t))
{
  if (result)
  {
    uint64_t v8 = result;
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      a6(v8);
      uint64_t result = swift_release();
    }
    if (a4) {
      return a4(result);
    }
  }
  return result;
}

uint64_t sub_10031FDD8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void), uint64_t a4, unint64_t *a5)
{
  sub_10004D29C(0, a5);
  uint64_t v6 = NSManagedObjectContext.fetch<A>(_:)();
  a3(v6, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10031FEBC(unint64_t a1)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_19:
    *(void *)(v1 + 16) = &off_1005546C0;
    swift_bridgeObjectRelease();
    sub_100054B78((uint64_t *)&unk_100603210);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D010;
    strcpy((char *)(inited + 32), "All Podcasts");
    *(unsigned char *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    uint64_t v24 = sub_1001B8180((unint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    *(void *)(inited + 48) = v24;
    *(void *)(v1 + 24) = sub_10016F1DC(inited);
    return swift_bridgeObjectRelease();
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_18;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v25 = v1;
    unint64_t v26 = v2;
    uint64_t v5 = 0;
    unint64_t v6 = v2 & 0xC000000000000001;
    while (1)
    {
      if (v6) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      type metadata accessor for ShowData();
      uint64_t v9 = swift_allocObject();
      id v10 = v8;
      id v11 = [v10 uuid];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        id v16 = [v10 title];
        if (v16)
        {
          id v17 = v16;
          uint64_t v18 = v3;
          unint64_t v19 = v6;
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v22 = v21;

          *(void *)(v9 + 32) = v13;
          *(void *)(v9 + 40) = v15;
          *(void *)(v9 + 48) = v20;
          *(void *)(v9 + 56) = v22;
          *(void *)(v9 + 16) = v13;
          *(void *)(v9 + 24) = v15;
          swift_bridgeObjectRetain();
          *(unsigned char *)(v9 + 64) = [v10 subscribed];
          LOBYTE(v22) = [v10 notifications];

          *(unsigned char *)(v9 + 65) = v22;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          unint64_t v6 = v19;
          uint64_t v3 = v18;
          unint64_t v2 = v26;
          goto LABEL_7;
        }
        swift_bridgeObjectRelease();
      }

      swift_deallocPartialClassInstance();
LABEL_7:
      if (v3 == ++v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v25;
        goto LABEL_19;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ShowsDataSource()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for MTTestActionContentPickerViewController.Selectability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10032028CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MTTestActionContentPickerViewController.Selectability()
{
  return &type metadata for MTTestActionContentPickerViewController.Selectability;
}

unsigned char *storeEnumTagSinglePayload for MTTestActionContentPickerViewController.EntityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100320390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MTTestActionContentPickerViewController.EntityType()
{
  return &type metadata for MTTestActionContentPickerViewController.EntityType;
}

unint64_t sub_1003203CC()
{
  unint64_t result = qword_100603200;
  if (!qword_100603200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100603200);
  }
  return result;
}

unint64_t sub_100320424()
{
  unint64_t result = qword_100603208;
  if (!qword_100603208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100603208);
  }
  return result;
}

uint64_t sub_100320478()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003204B4(uint64_t a1, uint64_t a2)
{
  return sub_10031FD3C(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32), (void (*)(uint64_t))sub_10031FEBC);
}

uint64_t sub_1003204E8(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v34 = type metadata accessor for EpisodeData();
  unint64_t v35 = &off_100561598;
  v33[0] = a2;
  uint64_t v8 = *(void *)(*sub_100041A98(v33, v34) + 48);
  uint64_t v31 = type metadata accessor for ShowData();
  uint64_t v32 = &off_1005615F8;
  v30[0] = v8;
  uint64_t v9 = *sub_100041A98(v30, v31);
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_10032105C(v9);
  if (v11)
  {
    String.append(_:)(*(Swift::String *)&v10);
    swift_bridgeObjectRelease();
    NSString v12 = String._bridgeToObjectiveC()();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [self alertControllerWithTitle:v12 message:v13 preferredStyle:1];

    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = self;
    id v17 = [v16 actionWithTitle:v15 style:1 handler:0];

    [v14 addAction:v17];
    if ((*(unsigned char *)(*sub_100041A98(v30, v31) + 65) & 1) == 0)
    {
      uint64_t v18 = swift_allocObject();
      swift_weakInit();
      sub_100056D54((uint64_t)v30, (uint64_t)v29);
      unint64_t v19 = (void *)swift_allocObject();
      long long v19[2] = v18;
      sub_100042FC4(v29, (uint64_t)(v19 + 3));
      v19[8] = a3;
      v19[9] = a4;
      swift_retain();
      swift_retain();
      NSString v20 = String._bridgeToObjectiveC()();
      v28[4] = sub_1003219CC;
      uint64_t v28[5] = v19;
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 1107296256;
      v28[2] = sub_1001F2B1C;
      void v28[3] = &unk_100561968;
      uint64_t v21 = _Block_copy(v28);
      swift_release();
      id v22 = [v16 actionWithTitle:v20 style:0 handler:v21];
      _Block_release(v21);
      swift_release();

      [v14 addAction:v22];
    }
    [a1 presentViewController:v14 animated:1 completion:0];
  }
  else
  {
    id v23 = sub_100041A98(v30, v31);
    Swift::Int v24 = *(void *)(*v23 + 32);
    Swift::Int v25 = *(void *)(*v23 + 40);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100050684((Swift::Int *)v29, v24, v25);
    swift_endAccess();
    uint64_t v26 = swift_bridgeObjectRelease();
    a3(v26);
  }
  sub_10004D2D8((uint64_t)v30);
  return sub_10004D2D8((uint64_t)v33);
}

void sub_1003208B4(char a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CoreDataFetcher();
  id v6 = [(id)static CoreDataFetcher.contextProvider.getter() privateQueueContext];
  swift_unknownObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithEntityName:v8];

  id v10 = [self predicateForNotHiddenNotImplicitlyFollowedPodcasts];
  [v9 setPredicate:v10];

  ShowsSortType.sortDescriptors.getter(a1);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8120);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 setSortDescriptors:isa];

  NSString v12 = (void *)swift_allocObject();
  v12[2] = v6;
  v12[3] = v9;
  v12[4] = a2;
  void v12[5] = a3;
  void v16[4] = sub_100320AE8;
  v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10003B424;
  void v16[3] = &unk_100561710;
  NSString v13 = _Block_copy(v16);
  id v14 = v6;
  id v15 = v9;
  swift_retain();
  swift_release();
  [v14 performBlock:v13];
  _Block_release(v13);
}

uint64_t sub_100320AE8()
{
  return sub_10031FDD8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t, void))(v0 + 32), *(void *)(v0 + 40), (unint64_t *)&qword_1005F71F0);
}

uint64_t sub_100320B1C()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100320B64(uint64_t a1, uint64_t a2)
{
  return sub_10031FD3C(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32), (void (*)(uint64_t))sub_10031F7AC);
}

void sub_100320B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a4;
  uint64_t v22 = type metadata accessor for EpisodeListSettings();
  uint64_t v8 = *(void *)(v22 - 8);
  __chkstk_darwin();
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CoreDataFetcher();
  id v11 = [(id)static CoreDataFetcher.contextProvider.getter() privateQueueContext];
  swift_unknownObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithEntityName:v13];

  sub_1001C69A8(a1);
  EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();
  id v15 = (void *)EpisodeListSettings.predicate.getter();
  [v14 setPredicate:v15];

  sub_10004D29C(0, (unint64_t *)&qword_1005F8120);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v14 setSortDescriptors:isa];

  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    [v14 setFetchLimit:a2];
    id v17 = (void *)swift_allocObject();
    void v17[2] = v11;
    v17[3] = v14;
    v17[4] = v21;
    v17[5] = a5;
    aBlock[4] = sub_100320ED0;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003B424;
    void aBlock[3] = &unk_1005617B0;
    uint64_t v18 = _Block_copy(aBlock);
    id v19 = v11;
    id v20 = v14;
    swift_retain();
    swift_release();
    [v19 performBlock:v18];
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  }
}

uint64_t sub_100320E88()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100320ED0()
{
  return sub_10031FDD8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t, void))(v0 + 32), *(void *)(v0 + 40), (unint64_t *)&qword_100603220);
}

uint64_t sub_100320F00(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = type metadata accessor for EpisodeData();
  id v17 = &off_100561598;
  v15[0] = a1;
  uint64_t v4 = *(void *)(*sub_100041A98(v15, v16) + 48);
  uint64_t v13 = type metadata accessor for ShowData();
  id v14 = &off_1005615F8;
  v12[0] = v4;
  if (*(unsigned char *)(*sub_100041A98(v12, v13) + 64) == 1)
  {
    swift_beginAccess();
    uint64_t v5 = *(void *)(a2 + 40);
    id v6 = sub_100041A98(v12, v13);
    uint64_t v7 = *(void *)(*v6 + 32);
    uint64_t v8 = *(void *)(*v6 + 40);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned __int8 v9 = sub_10030A84C(v7, v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(*sub_100041A98(v12, v13) + 65) | v9)) {
      uint64_t v10 = 2;
    }
    else {
      uint64_t v10 = 1;
    }
  }
  else
  {
    swift_retain();
    swift_retain();
    uint64_t v10 = 0;
  }
  sub_10004D2D8((uint64_t)v12);
  sub_10004D2D8((uint64_t)v15);
  return v10;
}

uint64_t sub_10032105C(uint64_t a1)
{
  uint64_t v22 = type metadata accessor for ShowData();
  id v23 = &off_1005615F8;
  v21[0] = a1;
  if (*(unsigned char *)(*sub_100041A98(v21, v22) + 64) == 1)
  {
    swift_retain();
    uint64_t v2 = (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    swift_retain();
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease();
    int v3 = sub_100041A98(v21, v22);
    uint64_t v4 = *(void *)(*v3 + 48);
    uint64_t v5 = *(void **)(*v3 + 56);
    swift_bridgeObjectRetain();
    v6._uint64_t countAndFlagsBits = v4;
    v6._object = v5;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    v7._uint64_t countAndFlagsBits = 39;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    uint64_t v2 = sub_10004CEAC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v9 = *((void *)v2 + 2);
    unint64_t v8 = *((void *)v2 + 3);
    if (v9 >= v8 >> 1) {
      uint64_t v2 = sub_10004CEAC((char *)(v8 > 1), v9 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v9 + 1;
    uint64_t v10 = &v2[16 * v9];
    *((void *)v10 + 4) = 0xD000000000000012;
    *((void *)v10 + 5) = 0x80000001004DD9B0;
  }
  if ((*(unsigned char *)(*sub_100041A98(v21, v22) + 65) & 1) == 0)
  {
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    id v12 = sub_100041A98(v21, v22);
    uint64_t v13 = *(void *)(*v12 + 48);
    id v14 = *(void **)(*v12 + 56);
    swift_bridgeObjectRetain();
    v15._uint64_t countAndFlagsBits = v13;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = 39;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_10004CEAC(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v18 = *((void *)v2 + 2);
    unint64_t v17 = *((void *)v2 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v2 = sub_10004CEAC((char *)(v17 > 1), v18 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v18 + 1;
    id v19 = &v2[16 * v18];
    *((void *)v19 + 4) = 0xD00000000000001CLL;
    *((void *)v19 + 5) = 0x80000001004DD9D0;
    goto LABEL_14;
  }
  if (*((void *)v2 + 2))
  {
LABEL_14:
    sub_100054B78((uint64_t *)&unk_100603260);
    sub_100044200((unint64_t *)&qword_1005F8138, (uint64_t *)&unk_100603260);
    uint64_t v11 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = 0;
LABEL_15:
  sub_10004D2D8((uint64_t)v21);
  return v11;
}

void sub_100321348()
{
  v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability] = 2;
  NSString v1 = String._bridgeToObjectiveC()();
  uint64_t v2 = self;
  id v3 = [v2 imageNamed:v1];

  if (v3)
  {
    id v4 = [v3 imageWithRenderingMode:2];
  }
  else
  {
    id v4 = 0;
  }
  *(void *)&v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkImage] = v4;
  uint64_t v5 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_notCheckedImage;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v2 imageNamed:v6];

  *(void *)&v0[v5] = v7;
  v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked] = 0;
  unint64_t v8 = &v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData];
  *(_OWORD *)unint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1003214C8()
{
  id v0 = [objc_allocWithZone((Class)UIImageView) init];
  id v1 = [v0 layer];
  [v1 setCornerRadius:3.0];
  id v2 = [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.08];
  id v3 = [v2 CGColor];

  [v1 setBorderColor:v3];
  [v1 setBorderWidth:sub_100321840()];
  [v0 setClipsToBounds:1];

  return v0;
}

uint64_t sub_1003215BC(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(*a1 + 48);
  uint64_t v8 = *(void *)(v6 + 32);
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v9 = *a2;
  uint64_t v10 = *(void *)(*a2 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_100051E78(v8, v7);
    if (v12)
    {
      uint64_t v13 = *(void **)(*(void *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1002F0064(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_1002F0064((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  uint64_t v24 = type metadata accessor for EpisodeData();
  Swift::Int v25 = &off_1005615B8;
  *(void *)&long long v23 = v5;
  v13[2] = v15 + 1;
  sub_100042FC4(&v23, (uint64_t)&v13[5 * v15 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v23 = *a2;
  *a2 = 0x8000000000000000;
  sub_10027FE9C((uint64_t)v13, v8, v7, isUniquelyReferenced_nonNull_native);
  *a2 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v13[2];
  swift_bridgeObjectRelease();
  if (v17 != 1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = *a3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v18;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10004CEAC(0, *(void *)(v18 + 16) + 1, 1, (char *)v18);
    uint64_t v18 = result;
    *a3 = result;
  }
  unint64_t v21 = *(void *)(v18 + 16);
  unint64_t v20 = *(void *)(v18 + 24);
  if (v21 >= v20 >> 1)
  {
    uint64_t result = (uint64_t)sub_10004CEAC((char *)(v20 > 1), v21 + 1, 1, (char *)v18);
    uint64_t v18 = result;
    *a3 = result;
  }
  *(void *)(v18 + 16) = v21 + 1;
  unint64_t v22 = v18 + 16 * v21;
  *(void *)(v22 + 32) = v8;
  *(void *)(v22 + 40) = v7;
  return result;
}

uint64_t sub_100321800()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100321838(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

double sub_100321840()
{
  id v0 = +[UIScreen mainScreen];
  [v0 scale];
  double v2 = v1;

  return 1.0 / v2;
}

uint64_t sub_10032188C()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1003218CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10031DD24(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1003218D4()
{
  swift_release();
  sub_10004D2D8(v0 + 32);

  return swift_deallocObject();
}

void sub_10032191C(char a1)
{
  sub_10031B7A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_100321928()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 48);

  return swift_deallocObject();
}

uint64_t sub_100321970()
{
  return sub_10031C6FC(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), v0 + 48);
}

uint64_t sub_100321984()
{
  swift_release();
  sub_10004D2D8(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003219CC(uint64_t a1)
{
  return sub_100360024(a1, *(void *)(v1 + 16), (void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 64));
}

uint64_t sub_1003219DC()
{
  sub_10004D2D8(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100321A24()
{
  return sub_10031C8DC(*(void *)(v0 + 16), (void *)(v0 + 24), *(void (**)(void))(v0 + 64));
}

uint64_t sub_100321A38()
{
  return sub_10031C364(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_100321A50()
{
  sub_10031C63C(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32));
}

uint64_t sub_100321A60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005FDDA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100321ACC()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_100321B1C()
{
  sub_100319F28(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100321B28()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100321B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100603228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_100321C28()
{
  id v1 = [objc_allocWithZone(v0) init];
  type metadata accessor for PlaybackController();
  type metadata accessor for BaseObjectGraph();
  double v2 = (char *)v1;
  inject<A, B>(_:from:)();
  *(void *)&v2[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController] = v7[0];
  swift_release();
  sub_100054B78((uint64_t *)&unk_1006033C0);
  inject<A, B>(_:from:)();
  uint64_t v3 = (uint64_t)&v2[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController];
  swift_beginAccess();
  sub_100039D84((uint64_t)v7, v3, (uint64_t *)&unk_1006033A0);
  swift_endAccess();
  sub_100054B78((uint64_t *)&unk_1005F8B10);
  inject<A, B>(_:from:)();
  uint64_t v4 = (uint64_t)&v2[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_storeDataProvider];
  swift_beginAccess();
  sub_100039D84((uint64_t)v7, v4, (uint64_t *)&unk_1005FB890);
  swift_endAccess();
  id v5 = [self sharedTemplate];
  [v5 addObserver:v2];

  sub_100322024();
  sub_100322398();

  swift_release();
  return v2;
}

id sub_100321DC8()
{
  if (static Podcasts.isBlueMoonEnabled()())
  {
    if (!*(void *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController)) {
      return 0;
    }
    swift_retain();
    id v1 = (id)dispatch thunk of PlaybackController.nowPlayingItem.getter();
    swift_release();
    if (v1)
    {
      id v2 = [v1 podcast];

      if (v2)
      {
        uint64_t v3 = MPModelObject.uuid.getter();
LABEL_9:
        id v1 = (id)v3;

        return v1;
      }
      return 0;
    }
  }
  else
  {
    id v4 = [self defaultInstance];
    id v1 = [v4 currentItem];

    if (v1)
    {
      id v2 = [v1 podcastUuid];

      if (v2)
      {
        uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        goto LABEL_9;
      }
      return 0;
    }
  }
  return v1;
}

uint64_t sub_100321EE8()
{
  uint64_t v1 = v0;
  if (static Podcasts.isBlueMoonEnabled()())
  {
    uint64_t v2 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController;
    if (!*(void *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController)) {
      return 0;
    }
    swift_retain();
    dispatch thunk of PlaybackController.queueController.getter();
    swift_release();
    char v3 = dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter();
    swift_release();
    if (v3) {
      return 1;
    }
    if (*(void *)(v1 + v2))
    {
      swift_retain();
      dispatch thunk of PlaybackController.queueController.getter();
      swift_release();
      char v10 = dispatch thunk of PlaybackController.QueueController.hasSoftQueue.getter();
      swift_release();
      return v10 & 1;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    id v5 = [self defaultInstance];
    id v6 = [v5 compositeManifest];

    uint64_t result = (uint64_t)[v6 currentIndex];
    id v7 = (id)(result + 1);
    if (result == -1)
    {
      __break(1u);
    }
    else
    {
      id v8 = [v6 count];

      return (uint64_t)v8 < 0 || v7 != v8;
    }
  }
  return result;
}

void sub_100322024()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Setting up the Now Playing template.", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v7 = self;
  id v8 = [v7 sharedTemplate];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10046D060;
  *(void *)(v9 + 32) = sub_1003234A0();
  v20[1] = v9;
  specialized Array._endMutation()();
  sub_10004D29C(0, &qword_100603368);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 updateNowPlayingButtons:isa];

  id v11 = [v7 sharedTemplate];
  sub_100321DC8();
  uint64_t v13 = v12;
  if (v12) {
    swift_bridgeObjectRelease();
  }
  [v11 setAlbumArtistButtonEnabled:v13 != 0];

  id v14 = [v7 sharedTemplate];
  [v14 setUpNextButtonEnabled:sub_100321EE8() & 1];

  id v15 = [v7 sharedTemplate];
  id v16 = [self mainBundle];
  v21._object = (void *)0xEC0000007478654ELL;
  v17._uint64_t countAndFlagsBits = 0x49545F4555455551;
  v17._object = (void *)0xEB00000000454C54;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0x20676E6979616C50;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v21);

  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setUpNextTitle:v19];
}

void sub_100322398()
{
  uint64_t v67 = sub_100054B78(&qword_1006033D0);
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)v53 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100054B78(&qword_1006033D8);
  uint64_t v68 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  id v66 = (char *)v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100054B78(&qword_1006033E0);
  uint64_t v70 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v69 = (char *)v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100054B78(&qword_1006033E8);
  uint64_t v74 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  os_log_type_t v73 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78(&qword_1006033F0);
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v77 = v4;
  __chkstk_darwin(v4);
  uint64_t v75 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100054B78((uint64_t *)&unk_1006033F8);
  uint64_t v78 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  id v7 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78(&qword_1005FA1B0);
  unint64_t v79 = *(void (***)(char *, uint64_t))(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1005FE9B0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  Swift::String v17 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78(&qword_100603408);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  Swift::String v21 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (static Podcasts.isBlueMoonEnabled()())
  {
    uint64_t v56 = v17;
    uint64_t v57 = v15;
    uint64_t v58 = v14;
    uint64_t v59 = v21;
    uint64_t v60 = v19;
    uint64_t v55 = v18;
    unint64_t v61 = v10;
    long long v54 = v7;
    uint64_t v22 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController;
    if (*(void *)(v80 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController))
    {
      swift_retain();
      dispatch thunk of PlaybackController.$nowPlayingItem.getter();
      swift_release();
      sub_100044200(&qword_100603410, &qword_1005FA1B0);
      long long v23 = v56;
      Publisher.removeDuplicates(by:)();
      v79[1](v13, v11);
      sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      id v81 = (id)static OS_dispatch_queue.main.getter();
      uint64_t v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = (uint64_t)v61;
      unint64_t v79 = *(void (***)(char *, uint64_t))(v25 + 56);
      _OWORD v53[2] = v25 + 56;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v79)(v61, 1, 1, v24);
      sub_100044200((unint64_t *)&unk_1005FE9E0, (uint64_t *)&unk_1005FE9B0);
      uint64_t v27 = sub_1001A5458((unint64_t *)&qword_1005F8B80, (unint64_t *)&qword_1005F8B70);
      id v28 = v59;
      uint64_t v29 = v58;
      v53[1] = v27;
      Publisher.receive<A>(on:options:)();
      sub_100054B1C(v26, &qword_1005F9F20);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v23, v29);
      swift_allocObject();
      uint64_t v30 = v80;
      swift_unknownObjectWeakInit();
      sub_100044200(&qword_100603418, &qword_100603408);
      uint64_t v31 = v55;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v28, v31);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      if (*(void *)(v30 + v22))
      {
        swift_retain();
        uint64_t v32 = v73;
        dispatch thunk of PlaybackController.$tracklist.getter();
        swift_release();
        sub_100044200(&qword_100603420, &qword_1006033E8);
        sub_10032B8EC();
        uint64_t v33 = v75;
        uint64_t v34 = v72;
        Publisher<>.removeDuplicates()();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v32, v34);
        id v81 = (id)static OS_dispatch_queue.main.getter();
        uint64_t v35 = (uint64_t)v61;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v79)(v61, 1, 1, v24);
        sub_100044200(&qword_100603448, &qword_1006033F0);
        unint64_t v36 = v54;
        uint64_t v37 = v77;
        Publisher.receive<A>(on:options:)();
        sub_100054B1C(v35, &qword_1005F9F20);

        (*(void (**)(char *, uint64_t))(v76 + 8))(v33, v37);
        swift_allocObject();
        uint64_t v38 = v80;
        swift_unknownObjectWeakInit();
        sub_100044200((unint64_t *)&unk_100603450, (uint64_t *)&unk_1006033F8);
        uint64_t v39 = v71;
        Publisher<>.sink(receiveValue:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v78 + 8))(v36, v39);
        swift_beginAccess();
        AnyCancellable.store(in:)();
        swift_endAccess();
        swift_release();
        if (*(void *)(v38 + v22))
        {
          swift_retain();
          id v40 = (void *)dispatch thunk of PlaybackController.isPlayingPublisher.getter();
          swift_release();
          id v81 = v40;
          sub_100054B78((uint64_t *)&unk_1005FCA40);
          sub_100044200(&qword_100603460, (uint64_t *)&unk_1005FCA40);
          uint64_t v41 = v64;
          Publisher<>.removeDuplicates()();
          swift_release();
          *(void *)(swift_allocObject() + 16) = 0x403E000000000000;
          sub_100054B78(&qword_100603468);
          sub_100044200(&qword_100603470, &qword_1006033D0);
          uint64_t v43 = v66;
          uint64_t v42 = v67;
          Publisher.map<A>(_:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v42);
          sub_100044200(&qword_100603478, &qword_1006033D8);
          sub_100044200(&qword_100603480, &qword_100603468);
          unint64_t v44 = v69;
          uint64_t v45 = v63;
          Publisher<>.switchToLatest()();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v43, v45);
          swift_allocObject();
          swift_unknownObjectWeakInit();
          sub_100044200(&qword_100603488, &qword_1006033E0);
          uint64_t v46 = v62;
          Publisher<>.sink(receiveValue:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v70 + 8))(v44, v46);
          swift_beginAccess();
          AnyCancellable.store(in:)();
          swift_endAccess();
          swift_release();
        }
      }
    }
  }
  else
  {
    id v47 = self;
    id v48 = [v47 defaultCenter];
    uint64_t v49 = v80;
    id v50 = v48;
    [v48 addObserver:v80 selector:"manifestContentsDidChange" name:IMPlayerManifestDidChange object:0];

    id v51 = [v47 defaultCenter];
    [v51 addObserver:v49 selector:"nowPlayingItemDidChange" name:IMAVPlayerNotification_MediaItemDidChange object:0];

    unint64_t v79 = (void (**)(char *, uint64_t))[v47 defaultCenter];
    [v79 addObserver:v49 selector:"playerPeriodicUpdate" name:IMAVPlayerNotification_PeriodicUpdate object:0];
    unint64_t v52 = v79;
  }
}

id sub_10032318C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1003231D4();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return [super dealloc];
}

void sub_1003231D4()
{
  id v1 = [self sharedTemplate];
  [v1 removeObserver:v0];

  if (static Podcasts.isBlueMoonEnabled()())
  {
    uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions);
    swift_beginAccess();
    void *v2 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_super v3 = self;
    id v4 = [v3 defaultCenter];
    [v4 removeObserver:v0 name:IMPlayerManifestDidChange object:0];

    id v5 = [v3 defaultCenter];
    [v5 removeObserver:v0 name:IMAVPlayerNotification_MediaItemDidChange object:0];

    id v6 = [v3 defaultCenter];
    [v6 removeObserver:v0 name:IMAVPlayerNotification_PeriodicUpdate object:0];
  }
}

id sub_1003234A0()
{
  uint64_t v1 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController____lazy_storage___playbackRateButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController____lazy_storage___playbackRateButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController____lazy_storage___playbackRateButton);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v5 = objc_allocWithZone((Class)CPNowPlayingPlaybackRateButton);
    v11[4] = sub_10032B514;
    v11[5] = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    void v11[2] = sub_1001F2B1C;
    v11[3] = &unk_100561C58;
    id v6 = _Block_copy(v11);
    swift_retain();
    swift_release();
    id v7 = [v5 initWithHandler:v6];
    _Block_release(v6);
    swift_release();
    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_1003235E0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100323634();
  }
}

void sub_100323634()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Podcasts();
  void v12[3] = v4;
  v12[4] = sub_100022F34((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  id v5 = sub_10004A244(v12);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, enum case for Podcasts.blueMooniOS(_:), v4);
  LOBYTE(v4) = isFeatureEnabled(_:)();
  sub_10004D2D8((uint64_t)v12);
  if (v4)
  {
    static TaskPriority.userInitiated.getter();
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 0, 1, v6);
    id v7 = (void *)swift_allocObject();
    _OWORD v7[2] = 0;
    v7[3] = 0;
    v7[4] = v0;
    id v8 = v0;
    sub_10001201C((uint64_t)v3, (uint64_t)&unk_100603388, (uint64_t)v7);
    swift_release();
  }
  else
  {
    id v9 = [self defaultInstance];
    id v10 = [v9 player];

    [v10 setPlaybackSpeed:[self incrementPlaybackSpeed:[v10 playbackSpeed]]];
  }
}

uint64_t sub_100323868(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    uint64_t v3 = MPModelObject.adamID.getter();
    char v5 = v4 & 1;
    if (v2)
    {
LABEL_3:
      uint64_t v6 = MPModelObject.adamID.getter();
      unsigned int v8 = v7 & 1;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v3 = 0;
    char v5 = 1;
    if (v2) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = 0;
  unsigned int v8 = 1;
LABEL_6:
  if (v5) {
    return v8;
  }
  else {
    return (v3 == v6) & ~v8;
  }
}

uint64_t sub_1003238E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unsigned int v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Now Playing item did change called.", v8, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(v1 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime) = 0;
  id v9 = *(void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback);
  if (v9)
  {
    uint64_t v10 = swift_retain();
    v9(v10);
    sub_1000536BC((uint64_t)v9);
  }
  sub_100322024();
  return CurrentValueSubject.send(_:)();
}

void sub_100323A98(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v5 = (void *)Strong;
    a3();
  }
}

void sub_100323AF4()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Now Playing manifest contents did change called.", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v7 = [self sharedTemplate];
  [v7 setUpNextButtonEnabled:sub_100321EE8() & 1];
}

uint64_t sub_100323C98@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_100603490);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_100603498);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    sub_10004D29C(0, &qword_1006034A8);
    id v11 = [self mainRunLoop];
    uint64_t v12 = type metadata accessor for NSRunLoop.SchedulerOptions();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
    uint64_t v13 = static NSTimer.publish(every:tolerance:on:in:options:)();

    sub_100054B1C((uint64_t)v10, &qword_100603498);
    uint64_t v18 = v13;
    type metadata accessor for NSTimer.TimerPublisher();
    sub_100022F34(&qword_1006034B0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
    uint64_t v14 = ConnectablePublisher.autoconnect()();
    swift_release();
    uint64_t v18 = v14;
    sub_100054B78(&qword_1006034B8);
    sub_100044200((unint64_t *)&unk_1006034C0, &qword_1006034B8);
    uint64_t v15 = Publisher.eraseToAnyPublisher()();
    uint64_t result = swift_release();
  }
  else
  {
    type metadata accessor for Date();
    Empty.init(completeImmediately:)();
    sub_100044200(&qword_1006034A0, &qword_100603490);
    uint64_t v15 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *a2 = v15;
  return result;
}

void sub_100323FA8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100323FFC();
  }
}

void sub_100323FFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - v7;
  if (static Podcasts.isBlueMoonEnabled()())
  {
    if (*(void *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController))
    {
      swift_retain();
      double v9 = COERCE_DOUBLE(PlaybackController.currentTime.getter());
      char v11 = v10;
      swift_release();
      if ((v11 & 1) == 0)
      {
        uint64_t v12 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime;
        if (v9 - *(double *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime) > 30.0)
        {
          sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
          static OS_os_log.carPlay.getter();
          uint64_t v13 = Logger.logObject.getter();
          os_log_type_t v14 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v13, v14))
          {
            uint64_t v15 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v15 = 0;
            _os_log_impl((void *)&_mh_execute_header, v13, v14, "Now Playing player periodic did have a significant time change.", v15, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          uint64_t v16 = *(void (**)(uint64_t))(v1
                                               + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback);
          if (v16)
          {
            uint64_t v17 = swift_retain();
            v16(v17);
            sub_1000536BC((uint64_t)v16);
          }
          *(double *)(v1 + v12) = v9;
        }
      }
    }
  }
  else
  {
    uint64_t v18 = self;
    id v19 = [v18 defaultInstance];
    [v19 currentTime];
    double v21 = v20;

    uint64_t v22 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime;
    if (v21 - *(double *)(v1 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime) > 30.0)
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.carPlay.getter();
      long long v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Now Playing player periodic did have a significant time change.", v25, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      uint64_t v26 = *(void (**)(uint64_t))(v1
                                           + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback);
      if (v26)
      {
        uint64_t v27 = swift_retain();
        v26(v27);
        sub_1000536BC((uint64_t)v26);
      }
      id v28 = [v18 defaultInstance];
      [v28 currentTime];
      uint64_t v30 = v29;

      *(void *)(v1 + v22) = v30;
    }
  }
}

void sub_100324388(uint64_t a1, uint64_t a2, void *a3)
{
  v5[4] = UInt64.int64Representation.getter;
  v5[5] = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_10018FFEC;
  v5[3] = &unk_100561CD0;
  uint64_t v4 = _Block_copy(v5);
  [a3 popTemplateAnimated:1 completion:v4];
  _Block_release(v4);
}

id sub_10032450C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_analyticsChannel;
  id v3 = objc_allocWithZone((Class)PFCoreAnalyticsChannel);
  uint64_t v4 = v0;
  *(void *)&v0[v2] = [v3 init];
  uint64_t v5 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackItemDidChangeSubject;
  sub_100054B78((uint64_t *)&unk_1005F8B00);
  swift_allocObject();
  *(void *)&v4[v5] = CurrentValueSubject.init(_:)();
  *(void *)&v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController] = 0;
  uint64_t v6 = &v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  uint64_t v7 = &v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_storeDataProvider];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions] = &_swiftEmptySetSingleton;
  uint64_t v8 = &v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  double v9 = &v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateAlbumArtistButtonTappedCallback];
  *(void *)double v9 = 0;
  *((void *)v9 + 1) = 0;
  char v10 = &v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateUpNextButtonTappedCallback];
  *(void *)char v10 = 0;
  *((void *)v10 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_significantChangeAmountInSeconds] = 0x403E000000000000;
  *(void *)&v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController____lazy_storage___playbackRateButton] = 0;

  v12.receiver = v4;
  v12.super_class = ObjectType;
  return [super init];
}

uint64_t type metadata accessor for CarPlayNowPlayingController()
{
  return self;
}

void sub_10032476C(void *a1, uint64_t a2, char a3, id a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = sub_1003DCD10(a3);
  uint64_t v33 = v11;
  uint64_t v34 = a2;
  if (v14 == 0x6669636570736E75 && v15 == 0xEB00000000646569)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      id v29 = *(id *)(v6 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_analyticsChannel);
      type metadata accessor for AnalyticsEvent();
      uint64_t v17 = (void *)PFAnalyticsEventNameCarPlayPlaybackSource;
      sub_100054B78((uint64_t *)&unk_1005F9450);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10046D010;
      strcpy((char *)(inited + 32), "playbackSource");
      *(unsigned char *)(inited + 47) = -18;
      sub_1003DCD10(a3);
      id v19 = v17;
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      *(void *)(inited + 48) = v20;
      sub_10005A1DC(inited);
      double v21 = (void *)AnalyticsEvent.__allocating_init(name:payload:)();
      [v29 sendEvent:v21];
    }
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    id v29 = a4;
    os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v24 = 136315138;
    unint64_t v25 = sub_1003DCD10(a3);
    uint64_t v35 = sub_10004B974(v25, v26, &v36);
    a4 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Initiate playback called from source: %s.", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v33);
  switch((char)v34)
  {
    case 1:
      sub_100327918((uint64_t)a1);
      break;
    case 2:
      sub_10032752C(a1, a4);
      sub_1001ED3B4(a1, 2);
      break;
    case 3:
      sub_100327BD8((uint64_t)a1, a4, v30, v31);
      break;
    default:
      uint64_t v27 = swift_retain();
      sub_100324B88(v27, a4);
      sub_1001ED3B4(a1, 0);
      break;
  }
}

void sub_100324B88(uint64_t a1, void *a2)
{
  uint64_t v293 = type metadata accessor for EpisodeOffer();
  uint64_t v292 = *(void *)(v293 - 8);
  __chkstk_darwin(v293);
  v291 = (char *)&v276 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  v294 = (char *)&v276 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  v300 = (char *)&v276 - v10;
  __chkstk_darwin(v9);
  v296 = (char *)&v276 - v11;
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005F88A0);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (id *)((char *)&v276 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  v278 = (char *)&v276 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  v280 = (char *)&v276 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v279 = (char *)&v276 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v282 = (char *)&v276 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v281 = (char *)&v276 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v285 = (char *)&v276 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v286 = (char *)&v276 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  v283 = (char *)&v276 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v284 = (char *)&v276 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v288 = (char *)&v276 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v289 = (char *)&v276 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v287 = (char *)&v276 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v295 = (char *)&v276 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v290 = (char *)&v276 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v298 = (char *)&v276 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v297 = (char *)&v276 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  id v51 = (char *)&v276 - v50;
  uint64_t v52 = __chkstk_darwin(v49);
  v299 = (char *)&v276 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v304 = (char *)&v276 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  v301 = (char *)&v276 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  v303 = (char *)&v276 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v62 = (char *)&v276 - v61;
  uint64_t v63 = __chkstk_darwin(v60);
  v305 = (char *)&v276 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v67 = (char *)&v276 - v66;
  __chkstk_darwin(v65);
  uint64_t v69 = (char *)&v276 - v68;
  uint64_t v70 = v2 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController;
  swift_beginAccess();
  sub_10032B630(v70, (uint64_t)&v310);
  if (!v311)
  {
    sub_100054B1C((uint64_t)&v310, (uint64_t *)&unk_1006033A0);
    sub_10032A2F0(a2);
    return;
  }
  uint64_t v306 = v15;
  uint64_t v71 = v16;
  sub_100042FC4(&v310, (uint64_t)&v313);
  uint64_t v308 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v72 = Logger.logObject.getter();
  os_log_type_t v73 = static os_log_type_t.default.getter();
  BOOL v74 = os_log_type_enabled(v72, v73);
  v302 = a2;
  if (v74)
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v75 = 0;
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "Attempting to initiate playback for play action.", v75, 2u);
    a2 = v302;
    swift_slowDealloc();
  }

  uint64_t v77 = v71 + 8;
  uint64_t v76 = *(void (**)(char *, uint64_t))(v71 + 8);
  uint64_t v78 = v306;
  v307 = v76;
  v76(v69, v306);
  type metadata accessor for FlowAction();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for LibraryPlayAction();
    v305 = (char *)swift_dynamicCastClass();
    if (v305)
    {
      swift_retain();
      static OS_os_log.carPlay.getter();
      id v86 = Logger.logObject.getter();
      os_log_type_t v87 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v86, v87))
      {
        id v88 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v88 = 0;
        _os_log_impl((void *)&_mh_execute_header, v86, v87, "Attempting to initiate playback for LibraryPlayAction.", v88, 2u);
        swift_slowDealloc();
      }

      id v89 = v62;
      os_log_type_t v90 = v307;
      v307(v89, v78);
      id v91 = v303;
      static OS_os_log.carPlay.getter();
      swift_retain_n();
      id v92 = Logger.logObject.getter();
      os_log_type_t v93 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v310 = swift_slowAlloc();
        *(_DWORD *)uint64_t v94 = 136315138;
        uint64_t v95 = LibraryPlayAction.episodeUuid.getter();
        uint64_t v309 = sub_10004B974(v95, v96, (uint64_t *)&v310);
        os_log_type_t v90 = v307;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v92, v93, "LibraryPlayAction has episode uuid: %s.", v94, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v90(v303, v78);
      }
      else
      {

        swift_release_n();
        v90(v91, v78);
      }
      Class v114 = v301;
      static OS_os_log.carPlay.getter();
      swift_retain_n();
      uint64_t v115 = Logger.logObject.getter();
      os_log_type_t v116 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v115, v116))
      {
        unint64_t v117 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v310 = swift_slowAlloc();
        *(_DWORD *)unint64_t v117 = 136315138;
        uint64_t v118 = LibraryPlayAction.episodeAdamId.getter();
        if (v119)
        {
          unint64_t v122 = 0xE300000000000000;
          uint64_t v120 = 7104878;
        }
        else
        {
          uint64_t v309 = v118;
          sub_1001A5874();
          uint64_t v120 = BinaryInteger.description.getter();
          unint64_t v122 = v121;
        }
        uint64_t v78 = v306;
        uint64_t v309 = sub_10004B974(v120, v122, (uint64_t *)&v310);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "LibraryPlayAction has episode adamId: %s.", v117, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v123 = v114;
        uint64_t v124 = v78;
        os_log_type_t v90 = v307;
      }
      else
      {

        swift_release_n();
        unint64_t v123 = v114;
        uint64_t v78 = v306;
        uint64_t v124 = v306;
      }
      v90(v123, v124);
      static OS_os_log.carPlay.getter();
      swift_retain();
      uint64_t v125 = Logger.logObject.getter();
      os_log_type_t v126 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v125, v126))
      {
        uint64_t v127 = (uint8_t *)swift_slowAlloc();
        uint64_t v277 = v77;
        *(_DWORD *)uint64_t v127 = 67109120;
        uint64_t v128 = v78;
        uint64_t v129 = v296;
        LibraryPlayAction.settings.getter();
        uint64_t v130 = type metadata accessor for EpisodeListSettings();
        BOOL v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v130 - 8) + 48))(v129, 1, v130) != 1;
        uint64_t v132 = (uint64_t)v129;
        uint64_t v78 = v128;
        sub_100054B1C(v132, (uint64_t *)&unk_1005FEA40);
        LODWORD(v310) = v131;
        os_log_type_t v90 = v307;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v125, v126, "LibraryPlayAction has episode settings: %{BOOL}d.", v127, 8u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      v90(v304, v78);
      uint64_t v133 = LibraryPlayAction.episodeUuid.getter();
      unint64_t v135 = v134;
      swift_bridgeObjectRelease();
      uint64_t v136 = HIBYTE(v135) & 0xF;
      if ((v135 & 0x2000000000000000) == 0) {
        uint64_t v136 = v133 & 0xFFFFFFFFFFFFLL;
      }
      if (v136)
      {
        sub_100041A98(&v313, v314);
        LibraryPlayAction.episodeUuid.getter();
        uint64_t v137 = v300;
        LibraryPlayAction.settings.getter();
        uint64_t v311 = sub_10004D29C(0, &qword_100600708);
        *(void *)&long long v310 = v302;
        id v138 = v302;
        LibraryPlayAction.episodeAdamId.getter();
        EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:timestamp:waitForEngine:)();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v139 = (uint64_t)v137;
LABEL_58:
        sub_100054B1C(v139, (uint64_t *)&unk_1005FEA40);
LABEL_59:
        sub_100054B1C((uint64_t)&v310, &qword_1005F5D30);
        goto LABEL_60;
      }
      static OS_os_log.carPlay.getter();
      unint64_t v140 = Logger.logObject.getter();
      os_log_type_t v141 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v140, v141))
      {
        uint64_t v142 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v142 = 0;
        _os_log_impl((void *)&_mh_execute_header, v140, v141, "Error: Attempted to initiate LibraryPlayAction playback for an episode with an empty uuid.", v142, 2u);
        swift_slowDealloc();
      }

      uint64_t v143 = v299;
      goto LABEL_64;
    }
    type metadata accessor for LibraryPlayPauseAction();
    if (swift_dynamicCastClass())
    {
      swift_retain();
      static OS_os_log.carPlay.getter();
      unint64_t v103 = Logger.logObject.getter();
      os_log_type_t v104 = static os_log_type_t.default.getter();
      BOOL v105 = os_log_type_enabled(v103, v104);
      os_log_type_t v90 = v307;
      if (v105)
      {
        os_log_type_t v106 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v106 = 0;
        _os_log_impl((void *)&_mh_execute_header, v103, v104, "Attempting to initiate playback for LibraryPlayPauseAction.", v106, 2u);
        swift_slowDealloc();
      }

      v90(v51, v78);
      id v107 = v297;
      static OS_os_log.carPlay.getter();
      swift_retain_n();
      uint64_t v108 = Logger.logObject.getter();
      os_log_type_t v109 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v108, v109))
      {
        uint64_t v110 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v310 = swift_slowAlloc();
        *(_DWORD *)uint64_t v110 = 136315138;
        uint64_t v111 = LibraryPlayPauseAction.episodeUuid.getter();
        uint64_t v309 = sub_10004B974(v111, v112, (uint64_t *)&v310);
        os_log_type_t v90 = v307;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v108, v109, "LibraryPlayPauseAction has episode uuid: %s.", v110, 0xCu);
        swift_arrayDestroy();
        uint64_t v78 = v306;
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v113 = v297;
      }
      else
      {

        swift_release_n();
        unint64_t v113 = v107;
      }
      v90(v113, v78);
      static OS_os_log.carPlay.getter();
      swift_retain();
      uint64_t v156 = Logger.logObject.getter();
      os_log_type_t v157 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v156, v157))
      {
        uint64_t v158 = (uint8_t *)swift_slowAlloc();
        uint64_t v277 = v77;
        *(_DWORD *)uint64_t v158 = 67109120;
        uint64_t v159 = (uint64_t)v294;
        LibraryPlayPauseAction.settings.getter();
        uint64_t v160 = type metadata accessor for EpisodeListSettings();
        BOOL v161 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 48))(v159, 1, v160) != 1;
        sub_100054B1C(v159, (uint64_t *)&unk_1005FEA40);
        LODWORD(v310) = v161;
        os_log_type_t v90 = v307;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v156, v157, "LibraryPlayPauseAction has episode settings: %{BOOL}d.", v158, 8u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      v90(v298, v78);
      uint64_t v162 = LibraryPlayPauseAction.episodeUuid.getter();
      unint64_t v164 = v163;
      swift_bridgeObjectRelease();
      uint64_t v165 = HIBYTE(v164) & 0xF;
      if ((v164 & 0x2000000000000000) == 0) {
        uint64_t v165 = v162 & 0xFFFFFFFFFFFFLL;
      }
      if (v165)
      {
        sub_100041A98(&v313, v314);
        LibraryPlayPauseAction.episodeUuid.getter();
        v166 = v300;
        LibraryPlayPauseAction.settings.getter();
        uint64_t v311 = sub_10004D29C(0, &qword_100600708);
        *(void *)&long long v310 = v302;
        id v167 = v302;
        EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:timestamp:waitForEngine:)();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v139 = (uint64_t)v166;
        goto LABEL_58;
      }
      uint64_t v168 = v290;
      static OS_os_log.carPlay.getter();
      uint64_t v169 = Logger.logObject.getter();
      os_log_type_t v170 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v169, v170))
      {
        v171 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v171 = 0;
        _os_log_impl((void *)&_mh_execute_header, v169, v170, "Error: Attempted to initiate LibraryPlayPauseAction playback for an episode with an empty uuid.", v171, 2u);
        swift_slowDealloc();
      }

      uint64_t v143 = v168;
LABEL_64:
      v90(v143, v78);
      uint64_t v155 = v302;
LABEL_49:
      sub_10032A2F0(v155);
      swift_release();
      goto LABEL_60;
    }
    type metadata accessor for PlayPauseAction();
    uint64_t v144 = swift_dynamicCastClass();
    v145 = v307;
    uint64_t v277 = v77;
    if (v144)
    {
      swift_retain();
      uint64_t v146 = v295;
      static OS_os_log.carPlay.getter();
      swift_retain_n();
      uint64_t v147 = Logger.logObject.getter();
      os_log_type_t v148 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v147, v148))
      {
        uint64_t v149 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v310 = swift_slowAlloc();
        *(_DWORD *)uint64_t v149 = 136315138;
        uint64_t v309 = PlayPauseAction.contentId.getter();
        sub_1001A5874();
        uint64_t v150 = BinaryInteger.description.getter();
        uint64_t v309 = sub_10004B974(v150, v151, (uint64_t *)&v310);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v147, v148, "Attempting to initiate playback for PlayPauseAction with contentId %s.", v149, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v307(v295, v306);
      }
      else
      {

        swift_release_n();
        v145(v146, v78);
      }
      uint64_t v173 = v302;
      sub_100041A98(&v313, v314);
      uint64_t v184 = v291;
      PlayPauseAction.episodeOffer.getter();
      goto LABEL_72;
    }
    type metadata accessor for PlayPauseStationAction();
    uint64_t v172 = swift_dynamicCastClass();
    uint64_t v173 = v302;
    if (v172)
    {
      swift_retain();
      uint64_t v174 = v287;
      static OS_os_log.carPlay.getter();
      v175 = Logger.logObject.getter();
      os_log_type_t v176 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v175, v176))
      {
        v177 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v177 = 0;
        _os_log_impl((void *)&_mh_execute_header, v175, v176, "Attempting to initiate playback for PlayPauseStationAction.", v177, 2u);
        swift_slowDealloc();
      }

      v145(v174, v78);
      uint64_t v178 = v289;
      static OS_os_log.carPlay.getter();
      swift_retain_n();
      uint64_t v179 = Logger.logObject.getter();
      os_log_type_t v180 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v179, v180))
      {
        uint64_t v181 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v310 = swift_slowAlloc();
        *(_DWORD *)uint64_t v181 = 136315138;
        uint64_t v182 = PlayPauseStationAction.stationUuid.getter();
        uint64_t v309 = sub_10004B974(v182, v183, (uint64_t *)&v310);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v179, v180, "PlayPauseStationAction has station uuid: %s.", v181, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v307(v289, v306);
      }
      else
      {

        swift_release_n();
        v145(v178, v78);
      }
      uint64_t v196 = v288;
      static OS_os_log.carPlay.getter();
      swift_retain_n();
      uint64_t v197 = Logger.logObject.getter();
      os_log_type_t v198 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v197, v198))
      {
        uint64_t v199 = (uint8_t *)swift_slowAlloc();
        uint64_t v309 = swift_slowAlloc();
        *(_DWORD *)uint64_t v199 = 136315138;
        *(void *)&long long v310 = PlayPauseStationAction.episodeUuid.getter();
        *((void *)&v310 + 1) = v200;
        sub_100054B78(&qword_1005F93A0);
        uint64_t v201 = String.init<A>(describing:)();
        *(void *)&long long v310 = sub_10004B974(v201, v202, &v309);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v197, v198, "PlayPauseStationAction has episode uuid: %s.", v199, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v203 = v288;
      }
      else
      {

        swift_release_n();
        uint64_t v203 = v196;
      }
      uint64_t v204 = v306;
      v307(v203, v306);
      uint64_t v205 = PlayPauseStationAction.stationUuid.getter();
      unint64_t v207 = v206;
      swift_bridgeObjectRelease();
      uint64_t v208 = HIBYTE(v207) & 0xF;
      if ((v207 & 0x2000000000000000) == 0) {
        uint64_t v208 = v205 & 0xFFFFFFFFFFFFLL;
      }
      if (!v208)
      {
        PlayPauseStationAction.episodeUuid.getter();
        uint64_t v210 = v209;
        swift_bridgeObjectRelease();
        if (!v210) {
          goto LABEL_92;
        }
        uint64_t v211 = PlayPauseStationAction.episodeUuid.getter();
        if (v212)
        {
          uint64_t v213 = v211;
          unint64_t v214 = v212;
          swift_bridgeObjectRelease();
          uint64_t v215 = HIBYTE(v214) & 0xF;
          if ((v214 & 0x2000000000000000) == 0) {
            uint64_t v215 = v213 & 0xFFFFFFFFFFFFLL;
          }
          if (!v215)
          {
LABEL_92:
            static OS_os_log.carPlay.getter();
            uint64_t v216 = Logger.logObject.getter();
            os_log_type_t v217 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v216, v217))
            {
              v218 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v218 = 0;
              _os_log_impl((void *)&_mh_execute_header, v216, v217, "Error: Attempted to initiate PlayPauseStationAction playback for an episode with an empty stationUuid and episodeUuid.", v218, 2u);
              swift_slowDealloc();
            }

            long long v219 = (uint64_t *)&v312;
LABEL_115:
            v307((char *)*(v219 - 32), v204);
            sub_10032A2F0(v302);
            swift_release();
            goto LABEL_60;
          }
        }
      }
      sub_100041A98(&v313, v314);
      PlayPauseStationAction.stationUuid.getter();
      PlayPauseStationAction.episodeUuid.getter();
    }
    else
    {
      type metadata accessor for PlayStationAction();
      if (!swift_dynamicCastClass())
      {
        type metadata accessor for PlayAction();
        if (!swift_dynamicCastClass())
        {
          type metadata accessor for PlayQueueAction();
          if (!swift_dynamicCastClass())
          {
            v256 = v278;
            static OS_os_log.carPlay.getter();
            v257 = Logger.logObject.getter();
            os_log_type_t v258 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v257, v258))
            {
              v259 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v259 = 0;
              _os_log_impl((void *)&_mh_execute_header, v257, v258, "Error: Attempted to initiate playback for a non supported play action.", v259, 2u);
              swift_slowDealloc();
            }

            v145(v256, v78);
            sub_10032A2F0(v173);
            goto LABEL_60;
          }
          swift_retain();
          v249 = v279;
          static OS_os_log.carPlay.getter();
          swift_retain_n();
          v250 = Logger.logObject.getter();
          os_log_type_t v251 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v250, v251))
          {
            v252 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v310 = swift_slowAlloc();
            *(_DWORD *)v252 = 136315138;
            uint64_t v309 = PlayQueueAction.contentId.getter();
            sub_1001A5874();
            uint64_t v253 = BinaryInteger.description.getter();
            uint64_t v309 = sub_10004B974(v253, v254, (uint64_t *)&v310);
            v145 = v307;
            uint64_t v173 = v302;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v250, v251, "Attempting to initiate playback for PlayQueueAction with contentId %s.", v252, 0xCu);
            swift_arrayDestroy();
            uint64_t v78 = v306;
            swift_slowDealloc();
            swift_slowDealloc();

            v255 = v279;
          }
          else
          {

            swift_release_n();
            v255 = v249;
          }
          v145(v255, v78);
          v260 = v280;
          static OS_os_log.carPlay.getter();
          swift_retain_n();
          v261 = Logger.logObject.getter();
          int v262 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v261, (os_log_type_t)v262))
          {
            LODWORD(v305) = v262;
            uint64_t v308 = a1;
            v263 = (uint8_t *)swift_slowAlloc();
            v304 = (char *)swift_slowAlloc();
            *(void *)&long long v310 = v304;
            *(_DWORD *)v263 = 136315138;
            uint64_t v264 = PlayQueueAction.queueEpisodeIds.getter();
            uint64_t v265 = *(void *)(v264 + 16);
            if (v265)
            {
              v266 = sub_1002EF380(0, 1, 1, _swiftEmptyArrayStorage);
              v267 = (uint64_t *)(v264 + 32);
              unint64_t v268 = v266[2];
              do
              {
                uint64_t v270 = *v267++;
                uint64_t v269 = v270;
                unint64_t v271 = v266[3];
                if (v268 >= v271 >> 1) {
                  v266 = sub_1002EF380((void *)(v271 > 1), v268 + 1, 1, v266);
                }
                v266[2] = v268 + 1;
                v266[v268++ + 4] = v269;
                --v265;
              }
              while (v265);
            }
            swift_bridgeObjectRelease();
            uint64_t v272 = Array.description.getter();
            unint64_t v274 = v273;
            swift_bridgeObjectRelease();
            uint64_t v309 = sub_10004B974(v272, v274, (uint64_t *)&v310);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v261, (os_log_type_t)v305, "PlayQueueAction has queueEpisodeIds: %s.", v263, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v307(v280, v306);
            uint64_t v173 = v302;
          }
          else
          {

            swift_release_n();
            v145(v260, v78);
          }
          sub_100041A98(&v313, v314);
          uint64_t v184 = v291;
          PlayQueueAction.episodeOffer.getter();
          PlayQueueAction.queueEpisodeIds.getter();
          uint64_t v311 = sub_10004D29C(0, &qword_100600708);
          *(void *)&long long v310 = v173;
          id v275 = v173;
          dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:queueEpisodesIds:timestamp:sender:)();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_73;
        }
        swift_retain();
        long long v220 = v282;
        static OS_os_log.carPlay.getter();
        swift_retain_n();
        uint64_t v221 = Logger.logObject.getter();
        os_log_type_t v222 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v221, v222))
        {
          uint64_t v223 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v310 = swift_slowAlloc();
          *(_DWORD *)uint64_t v223 = 136315138;
          uint64_t v309 = PlayAction.contentId.getter();
          sub_1001A5874();
          uint64_t v224 = BinaryInteger.description.getter();
          uint64_t v309 = sub_10004B974(v224, v225, (uint64_t *)&v310);
          uint64_t v173 = v302;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v221, v222, "Attempting to initiate playback for PlayAction with contentId %s.", v223, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v307(v282, v306);
        }
        else
        {

          swift_release_n();
          v145(v220, v78);
        }
        sub_100041A98(&v313, v314);
        uint64_t v184 = v291;
        PlayAction.episodeOffer.getter();
LABEL_72:
        uint64_t v311 = sub_10004D29C(0, &qword_100600708);
        *(void *)&long long v310 = v173;
        id v185 = v173;
        dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:sender:)();
        swift_release();
LABEL_73:
        (*(void (**)(char *, uint64_t))(v292 + 8))(v184, v293);
        goto LABEL_59;
      }
      swift_retain();
      v186 = v283;
      static OS_os_log.carPlay.getter();
      v187 = Logger.logObject.getter();
      os_log_type_t v188 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v187, v188))
      {
        v189 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v189 = 0;
        _os_log_impl((void *)&_mh_execute_header, v187, v188, "Attempting to initiate playback for PlayStationAction.", v189, 2u);
        swift_slowDealloc();
      }

      v145(v186, v78);
      uint64_t v190 = v286;
      static OS_os_log.carPlay.getter();
      swift_retain_n();
      uint64_t v191 = Logger.logObject.getter();
      os_log_type_t v192 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v191, v192))
      {
        uint64_t v193 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v310 = swift_slowAlloc();
        *(_DWORD *)uint64_t v193 = 136315138;
        uint64_t v194 = PlayStationAction.stationUuid.getter();
        uint64_t v309 = sub_10004B974(v194, v195, (uint64_t *)&v310);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v191, v192, "PlayStationAction has station uuid: %s.", v193, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v307(v286, v306);
      }
      else
      {

        swift_release_n();
        v145(v190, v78);
      }
      v226 = v285;
      static OS_os_log.carPlay.getter();
      swift_retain_n();
      v227 = Logger.logObject.getter();
      os_log_type_t v228 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v227, v228))
      {
        v229 = (uint8_t *)swift_slowAlloc();
        uint64_t v309 = swift_slowAlloc();
        *(_DWORD *)v229 = 136315138;
        *(void *)&long long v310 = PlayStationAction.episodeUuid.getter();
        *((void *)&v310 + 1) = v230;
        sub_100054B78(&qword_1005F93A0);
        uint64_t v231 = String.init<A>(describing:)();
        *(void *)&long long v310 = sub_10004B974(v231, v232, &v309);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v227, v228, "PlayStationAction has episode uuid: %s.", v229, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v233 = v285;
      }
      else
      {

        swift_release_n();
        v233 = v226;
      }
      uint64_t v204 = v306;
      v307(v233, v306);
      uint64_t v234 = PlayStationAction.stationUuid.getter();
      unint64_t v236 = v235;
      swift_bridgeObjectRelease();
      uint64_t v237 = HIBYTE(v236) & 0xF;
      if ((v236 & 0x2000000000000000) == 0) {
        uint64_t v237 = v234 & 0xFFFFFFFFFFFFLL;
      }
      if (!v237)
      {
        PlayStationAction.episodeUuid.getter();
        uint64_t v240 = v239;
        swift_bridgeObjectRelease();
        if (!v240) {
          goto LABEL_112;
        }
        uint64_t v241 = PlayStationAction.episodeUuid.getter();
        if (v242)
        {
          uint64_t v243 = v241;
          unint64_t v244 = v242;
          swift_bridgeObjectRelease();
          uint64_t v245 = HIBYTE(v244) & 0xF;
          if ((v244 & 0x2000000000000000) == 0) {
            uint64_t v245 = v243 & 0xFFFFFFFFFFFFLL;
          }
          if (!v245)
          {
LABEL_112:
            static OS_os_log.carPlay.getter();
            v246 = Logger.logObject.getter();
            os_log_type_t v247 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v246, v247))
            {
              v248 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v248 = 0;
              _os_log_impl((void *)&_mh_execute_header, v246, v247, "Error: Attempted to initiate PlayStationAction playback for an episode with an empty stationUuid and episodeUuid.", v248, 2u);
              swift_slowDealloc();
            }

            long long v219 = &v311;
            goto LABEL_115;
          }
        }
      }
      sub_100041A98(&v313, v314);
      PlayStationAction.stationUuid.getter();
      PlayStationAction.episodeUuid.getter();
    }
    uint64_t v311 = sub_10004D29C(0, &qword_100600708);
    *(void *)&long long v310 = v302;
    id v238 = v302;
    dispatch thunk of EpisodeControllerProtocol.play(stationUuid:episodeUuid:from:)();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  swift_retain();
  static OS_os_log.carPlay.getter();
  unint64_t v79 = Logger.logObject.getter();
  os_log_type_t v80 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v79, v80))
  {
    id v81 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v81 = 0;
    _os_log_impl((void *)&_mh_execute_header, v79, v80, "Attempting to initiate playback for FlowAction.", v81, 2u);
    swift_slowDealloc();
  }

  unint64_t v82 = v307;
  v307(v67, v78);
  dispatch thunk of FlowAction.destination.getter();
  uint64_t v83 = type metadata accessor for FlowDestination();
  uint64_t v84 = *(void *)(v83 - 8);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v84 + 48))(v14, 1, v83) == 1)
  {
    sub_100054B1C((uint64_t)v14, (uint64_t *)&unk_1005F88A0);
    uint64_t v85 = v305;
    goto LABEL_46;
  }
  if ((*(unsigned int (**)(id *, uint64_t))(v84 + 88))(v14, v83) != enum case for FlowDestination.upsell(_:))
  {
    (*(void (**)(id *, uint64_t))(v84 + 8))(v14, v83);
    uint64_t v85 = v305;
    goto LABEL_46;
  }
  (*(void (**)(id *, uint64_t))(v84 + 96))(v14, v83);

  unint64_t v97 = self;
  NSString v98 = String._bridgeToObjectiveC()();
  id v99 = [v97 longStringForUnavailableReason:7 podcastTitle:v98];

  uint64_t v85 = v305;
  if (!v99)
  {
LABEL_46:
    static OS_os_log.carPlay.getter();
    uint64_t v152 = Logger.logObject.getter();
    os_log_type_t v153 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v152, v153))
    {
      uint64_t v154 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v154 = 0;
      _os_log_impl((void *)&_mh_execute_header, v152, v153, "Error: Could not form a valid upsell alert message.", v154, 2u);
      swift_slowDealloc();
    }

    v82(v85, v78);
    uint64_t v155 = a2;
    goto LABEL_49;
  }
  uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v102 = v101;

  *(void *)&long long v310 = v100;
  *((void *)&v310 + 1) = v102;
  sub_1001AB688();
  if ((Collection.isNotEmpty.getter() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  sub_10032A04C(v100, v102, a2);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_60:
  sub_10004D2D8((uint64_t)&v313);
}

uint64_t sub_10032752C(void *a1, void *a2)
{
  id v3 = v2;
  id v32 = a2;
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_100603370);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v34 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_analyticsChannel];
  type metadata accessor for AnalyticsEvent();
  uint64_t v12 = (void *)PFAnalyticsEventNamePlaybackReason;
  sub_100054B78((uint64_t *)&unk_1005F9450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D010;
  *(void *)(inited + 32) = 0x6E6F73616572;
  *(void *)(inited + 40) = 0xE600000000000000;
  id v14 = v12;
  *(void *)(inited + 48) = String._bridgeToObjectiveC()();
  sub_10005A1DC(inited);
  uint64_t v15 = (void *)AnalyticsEvent.__allocating_init(name:payload:)();
  [v11 sendEvent:v15];

  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v16 = a1;
  uint64_t v33 = v10;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v31 = v3;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v30 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    uint64_t v35 = v16;
    uint64_t v21 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v30 = v16;

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Playing item from queue: %@", v20, 0xCu);
    sub_100054B78((uint64_t *)&unk_1005F9F00);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v3 = v31;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v17 = v16;
  }

  (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v8);
  uint64_t v22 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 1, 1, v22);
  type metadata accessor for MainActor();
  uint64_t v23 = v16;
  id v24 = v3;
  id v25 = v32;
  uint64_t v26 = static MainActor.shared.getter();
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = v26;
  v27[3] = &protocol witness table for MainActor;
  v27[4] = v24;
  v27[5] = v23;
  v27[6] = v25;
  sub_10001201C((uint64_t)v7, (uint64_t)&unk_1006033B8, (uint64_t)v27);
  return swift_release();
}

void sub_100327918(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_analyticsChannel);
  type metadata accessor for AnalyticsEvent();
  uint64_t v8 = (void *)PFAnalyticsEventNamePlaybackReason;
  sub_100054B78((uint64_t *)&unk_1005F9450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D010;
  *(void *)(inited + 32) = 0x6E6F73616572;
  *(void *)(inited + 40) = 0xE600000000000000;
  id v10 = v8;
  *(void *)(inited + 48) = String._bridgeToObjectiveC()();
  sub_10005A1DC(inited);
  uint64_t v11 = (void *)AnalyticsEvent.__allocating_init(name:payload:)();
  [v7 sendEvent:v11];

  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v14 = 134217984;
    uint64_t v19 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Playing item from queue with index %lu", v14, 0xCu);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v15 = self;
  id v16 = [v15 defaultInstance];
  id v17 = [v16 compositeManifest];

  [v17 setCurrentIndex:a1];
  id v18 = [v15 defaultInstance];
  [v18 playLocalPlayer];
}

void sub_100327BD8(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v41 - v13;
  uint64_t v15 = v4 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController;
  swift_beginAccess();
  sub_10032B630(v15, (uint64_t)&v51);
  if (v52)
  {
    uint64_t v45 = v4;
    uint64_t v46 = v9;
    uint64_t v44 = a3;
    sub_100042FC4(&v51, (uint64_t)v53);
    uint64_t v16 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v41 = v16;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v42 = a4;
      uint64_t v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v43 = a2;
      *(void *)&long long v51 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      *(void *)&long long v48 = a1;
      sub_1001A5874();
      uint64_t v22 = BinaryInteger.description.getter();
      *(void *)&long long v48 = sub_10004B974(v22, v23, (uint64_t *)&v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Attempting to initiate playback for a show smart play episode with show adam ID %s.", v20, 0xCu);
      swift_arrayDestroy();
      a2 = v43;
      swift_slowDealloc();
      a4 = v42;
      swift_slowDealloc();
    }

    uint64_t v24 = v46;
    id v25 = *(void (**)(char *, uint64_t))(v47 + 8);
    v25(v14, v46);
    if (AdamID.isEmpty.getter())
    {
      static OS_os_log.carPlay.getter();
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Error: Attempted to initiate show smart play episode playback for a show with an empty adamId.", v28, 2u);
        swift_slowDealloc();
      }

      v25(v12, v24);
      sub_10032A2F0(a2);
      sub_10004D2D8((uint64_t)v53);
    }
    else
    {
      uint64_t v30 = v45 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_storeDataProvider;
      swift_beginAccess();
      if (*(void *)(v30 + 24))
      {
        sub_100056D54(v30, (uint64_t)&v51);
        swift_endAccess();
        sub_100041A98(&v51, v52);
        dispatch thunk of StoreDataProvider.fetchSmartPlayEpisodeAdamID(for:)();
        uint64_t v31 = swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_100056D54((uint64_t)v53, (uint64_t)&v48);
        id v32 = (void *)swift_allocObject();
        uint64_t v33 = a1;
        uint64_t v34 = (uint64_t)v44;
        long long v32[2] = a1;
        v32[3] = v34;
        v32[4] = a4;
        v32[5] = v31;
        v32[6] = a2;
        sub_100042FC4(&v48, (uint64_t)(v32 + 7));
        uint64_t v35 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v36 = (void *)swift_allocObject();
        long long v36[2] = v33;
        v36[3] = v34;
        v36[4] = a4;
        v36[5] = v35;
        v36[6] = a2;
        uint64_t v37 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
        sub_10004ACDC(v34);
        id v38 = a2;
        sub_10004ACDC(v34);
        id v39 = v38;
        swift_retain();
        uint64_t v40 = static OS_dispatch_queue.main.getter();
        uint64_t v49 = v37;
        uint64_t v50 = &protocol witness table for OS_dispatch_queue;
        *(void *)&long long v48 = v40;
        Promise.then(perform:orCatchError:on:)();
        swift_release();
        swift_release();
        swift_release();
        sub_10004D2D8((uint64_t)&v48);
        sub_10004D2D8((uint64_t)v53);
        swift_release();
        sub_10004D2D8((uint64_t)&v51);
      }
      else
      {
        sub_10004D2D8((uint64_t)v53);
        swift_endAccess();
      }
    }
  }
  else
  {
    uint64_t v29 = sub_100054B1C((uint64_t)&v51, (uint64_t *)&unk_1006033A0);
    if (a3) {
      a3(v29);
    }
    sub_10032A2F0(a2);
  }
}

uint64_t sub_100328178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[14] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[15] = v9;
  v6[16] = v8;
  return _swift_task_switch(sub_100328270, v9, v8);
}

uint64_t sub_100328270()
{
  if (*(void *)(v0[8] + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController))
  {
    swift_retain();
    v0[17] = dispatch thunk of PlaybackController.queueController.getter();
    swift_release();
    uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of PlaybackController.QueueController.changeToItemAndPlay(_:)
                                         + async function pointer to dispatch thunk of PlaybackController.QueueController.changeToItemAndPlay(_:));
    uint64_t v1 = (void *)swift_task_alloc();
    v0[18] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100328394;
    uint64_t v2 = v0[9];
    return v5(v2);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100328394()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = sub_100328518;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = sub_1003284B0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003284B0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100328518()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  swift_release();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  id v2 = v1;
  swift_errorRetain();
  id v3 = v2;
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v21 = *(void *)(v0 + 104);
    uint64_t v6 = *(void **)(v0 + 72);
    uint64_t v7 = swift_slowAlloc();
    log = v4;
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    *(void *)(v0 + 40) = v6;
    id v9 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v6;

    *(_WORD *)(v7 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v10 = Error.localizedDescription.getter();
    *(void *)(v0 + 56) = sub_10004B974(v10, v11, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v5, "Failed to play item from queue: %@, error: %s.", (uint8_t *)v7, 0x16u);
    sub_100054B78((uint64_t *)&unk_1005F9F00);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v12 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v15 = *(void **)(v0 + 72);

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  sub_10032A2F0(*(void **)(v0 + 80));
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

void sub_100328834(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v47 = a4;
  long long v48 = a6;
  uint64_t v50 = a3;
  uint64_t v49 = type metadata accessor for Logger();
  uint64_t v51 = *(void *)(v49 - 8);
  uint64_t v11 = __chkstk_darwin(v49);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v44 - v15;
  __chkstk_darwin(v14);
  os_log_type_t v18 = (char *)v44 - v17;
  uint64_t v19 = *(void *)a1;
  LODWORD(a1) = *(unsigned __int8 *)(a1 + 8);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  if (a1 == 1)
  {
    static OS_os_log.carPlay.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v45 = a5 + 16;
      v52[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v53 = a2;
      sub_1001A5874();
      uint64_t v24 = BinaryInteger.description.getter();
      uint64_t v53 = sub_10004B974(v24, v25, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to retrieve a smart play episode adamId for show with %s adamId.", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v18, v49);
    if (v50) {
      v50(v26);
    }
LABEL_12:
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v41 = (void *)Strong;
      sub_10032A2F0(v48);
    }
    return;
  }
  uint64_t v46 = a7;
  static OS_os_log.carPlay.getter();
  os_log_type_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v45 = a5 + 16;
    v52[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315138;
    v44[1] = v29 + 4;
    uint64_t v53 = v19;
    sub_1001A5874();
    uint64_t v31 = BinaryInteger.description.getter();
    uint64_t v53 = sub_10004B974(v31, v32, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Attempting to initiate playback for a show smart play episode with adam ID %s.", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v51 + 8);
  uint64_t v34 = v16;
  uint64_t v35 = v49;
  v33(v34, v49);
  uint64_t v36 = v46;
  if (AdamID.isEmpty.getter())
  {
    static OS_os_log.carPlay.getter();
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v37, v38))
    {
      id v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Error: Error: Attempted to initiate show smart play episode playback for a show with an empty storeEpisodeId.", v39, 2u);
      swift_slowDealloc();
    }

    v33(v13, v35);
    goto LABEL_12;
  }
  sub_100041A98(v36, v36[3]);
  v52[3] = sub_10004D29C(0, &qword_100600708);
  v52[0] = (uint64_t)v48;
  id v42 = v48;
  dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:sender:)();
  uint64_t v43 = sub_100054B1C((uint64_t)v52, &qword_1005F5D30);
  if (v50) {
    v50(v43);
  }
}

void sub_100328D6C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a5 + 16;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    v26[1] = a4;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    os_log_type_t v28 = a6;
    uint64_t v31 = a2;
    v32[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315394;
    os_log_type_t v27 = a3;
    sub_1001A5874();
    uint64_t v19 = BinaryInteger.description.getter();
    uint64_t v31 = sub_10004B974(v19, v20, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v21 = Error.localizedDescription.getter();
    uint64_t v31 = sub_10004B974(v21, v22, v32);
    a3 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to initiate playback for show with %s adamId with error: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    a6 = v28;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v29);
  if (a3) {
    a3(v23);
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v25 = (void *)Strong;
    sub_10032A2F0(a6);
  }
}

uint64_t sub_10032906C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005B794;
  return sub_1003290FC();
}

uint64_t sub_1003290FC()
{
  v1[24] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[25] = v2;
  v1[26] = *(void *)(v2 - 8);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  return _swift_task_switch(sub_1003291F0, 0, 0);
}

uint64_t sub_1003291F0()
{
  uint64_t v65 = v0;
  uint64_t v1 = v0 + 192;
  uint64_t v2 = *(void *)(*(void *)(v0 + 192) + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController);
  *(void *)(v0 + 256) = v2;
  if (!v2)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    os_log_type_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "[CarPlay/PlaybackRate] Unable to cycle rate, playback controller not available.", v29, 2u);
      swift_slowDealloc();
    }
    uint64_t v30 = *(void *)(v0 + 224);
    uint64_t v31 = *(void *)(v0 + 200);
    uint64_t v32 = *(void *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    goto LABEL_22;
  }
  swift_retain();
  uint64_t v3 = (void *)dispatch thunk of PlaybackController.tracklist.getter();
  if (!v3
    || (uint64_t v4 = v3, v5 = [v3 playingItem], v4, !v5)
    || (id v6 = [v5 playbackRateCommand],
        *(void *)(v0 + 264) = v6,
        v5,
        !v6))
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[CarPlay/PlaybackRate] Unable to cycle rate, playback rate command not available.", v23, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = *(void *)(v0 + 232);
    uint64_t v26 = *(void *)(v0 + 200);
    uint64_t v25 = *(void *)(v0 + 208);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    goto LABEL_22;
  }
  [v6 preferredPlaybackRate];
  float v8 = v7;
  *(float *)(v0 + 312) = v7;
  id v9 = [v6 supportedPlaybackRates];
  sub_10004D29C(0, (unint64_t *)&unk_1005F9460);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_28:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
    uint64_t v34 = _swiftEmptyArrayStorage[2];
    if (!v34)
    {
LABEL_41:
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.carPlay.getter();
      swift_bridgeObjectRetain();
      uint64_t v51 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.error.getter();
      BOOL v53 = os_log_type_enabled(v51, v52);
      uint64_t v54 = *(void *)(v0 + 240);
      uint64_t v55 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 208);
      if (v53)
      {
        uint64_t v62 = *(void *)(v0 + 200);
        uint64_t v57 = swift_slowAlloc();
        uint64_t v64 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 141558787;
        *(void *)(v0 + 144) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v57 + 12) = 2049;
        *(double *)(v0 + 96) = v8;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v57 + 22) = 2160;
        *(void *)(v0 + 80) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v57 + 32) = 2081;
        swift_bridgeObjectRetain();
        os_log_type_t type = v52;
        uint64_t v58 = Array.description.getter();
        unint64_t v60 = v59;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 88) = sub_10004B974(v58, v60, (uint64_t *)&v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v51, type, "[CarPlay/PlaybackRate] Unable to cycle rate, current rate=%{private,mask.hash}f is not supported=%{private,mask.hash}s.", (uint8_t *)v57, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();

        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v62);
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
      }
LABEL_22:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
      return v33();
    }
    goto LABEL_29;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_28;
  }
LABEL_7:
  uint64_t v64 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001BA9A4(0, v11 & ~(v11 >> 63), 0);
  if (v11 < 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v13 = 0;
  uint64_t v14 = v64;
  do
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v15 = *(id *)(v10 + 8 * v13 + 32);
    }
    uint64_t v16 = v15;
    [v15 floatValue];
    int v18 = v17;

    uint64_t v64 = v14;
    unint64_t v20 = v14[2];
    unint64_t v19 = v14[3];
    if (v20 >= v19 >> 1)
    {
      sub_1001BA9A4(v19 > 1, v20 + 1, 1);
      uint64_t v14 = v64;
    }
    ++v13;
    v14[2] = v20 + 1;
    *((_DWORD *)v14 + v20 + 8) = v18;
  }
  while (v11 != v13);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v1 = v0 + 192;
  uint64_t v34 = v14[2];
  if (!v34) {
    goto LABEL_41;
  }
LABEL_29:
  if (*((float *)v14 + 8) != v8)
  {
    uint64_t v36 = 0;
    while (v34 - 1 != v36)
    {
      float v37 = *((float *)v14 + v36++ + 9);
      if (v37 == v8)
      {
        uint64_t v38 = v36 - 1;
        BOOL v39 = __OFADD__(v38, 2);
        uint64_t v35 = v38 + 2;
        if (v39) {
          goto LABEL_46;
        }
        goto LABEL_35;
      }
    }
    goto LABEL_41;
  }
  uint64_t v35 = 1;
LABEL_35:
  uint64_t v40 = v35 % v34;
  if ((v40 & 0x8000000000000000) == 0)
  {
    float v41 = *((float *)v14 + v40 + 8);
    *(float *)(v0 + 316) = v41;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 272) = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    id v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 141558787;
      *(void *)(v1 - 32) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v44 + 12) = 2049;
      *(double *)(v1 - 24) = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v44 + 22) = 2160;
      *(void *)(v1 - 16) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v44 + 32) = 2049;
      *(double *)(v1 - 8) = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "[CarPlay/PlaybackRate] Updating playback rate to %{private,mask.hash}f, previous=%{private,mask.hash}f.", (uint8_t *)v44, 0x2Au);
      swift_slowDealloc();
    }

    uint64_t v45 = *(void *)(v0 + 248);
    uint64_t v46 = *(void *)(v0 + 200);
    uint64_t v47 = *(void *)(v0 + 208);
    long long v48 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    *(void *)(v0 + 280) = v48;
    *(void *)(v0 + 288) = (v47 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v48(v45, v46);
    uint64_t v49 = type metadata accessor for PlaybackController.TransportCommand();
    *(void *)(v0 + 40) = v49;
    *(void *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
    *(float *)sub_10004A244((uint64_t *)(v0 + 16)) = v41;
    (*(void (**)(void))(*(void *)(v49 - 8) + 104))();
    uint64_t v63 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
        + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
    uint64_t v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v50;
    *uint64_t v50 = v0;
    v50[1] = sub_100329B40;
    return ((uint64_t (*)(uint64_t, void))v63)(v0 + 16, 0);
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_100329B40(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 304) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_100329D10;
  }
  else
  {

    sub_10004D2D8(v4 + 16);
    id v5 = sub_100329C70;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100329C70()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100329D10()
{
  uint64_t v17 = v0;
  sub_10004D2D8(v0 + 16);
  static OS_os_log.carPlay.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v15 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    float v3 = *(float *)(v0 + 316);
    float v4 = *(float *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 200);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 141559043;
    *(void *)(v0 + 104) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2049;
    *(double *)(v0 + 112) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 22) = 2160;
    *(void *)(v0 + 120) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 32) = 2049;
    *(double *)(v0 + 128) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 42) = 2082;
    swift_getErrorValue();
    uint64_t v6 = Error.localizedDescription.getter();
    *(void *)(v0 + 152) = sub_10004B974(v6, v7, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[CarPlay/PlaybackRate] Unable to update playback rate to %{private,mask.hash}f, from previous=%{private,mask.hash}f with error=%{public}s.", (uint8_t *)v5, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_unknownObjectRelease();
    swift_errorRelease();
    v15(v14, v13);
  }
  else
  {
    float v8 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    uint64_t v9 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 200);
    swift_unknownObjectRelease();
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    v8(v9, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_10032A04C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = a1;
  v22[1] = a2;
  sub_1001AB688();
  uint64_t result = Collection.isNotEmpty.getter();
  if (result)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = a1;
      uint64_t v14 = (uint8_t *)v13;
      uint64_t v15 = swift_slowAlloc();
      unint64_t v19 = a3;
      v22[0] = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_10004B974(v20, a2, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Attempting to show CarPlay alert with message %s.", v14, 0xCu);
      swift_arrayDestroy();
      a3 = v19;
      swift_slowDealloc();
      a1 = v20;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a3;
    id v17 = a3;
    CPInterfaceController.showAlert(with:completion:)(a1, a2, (void (*)(uint64_t))sub_10032B6D0, v16);
    return swift_release();
  }
  return result;
}

void sub_10032A2F0(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = self;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 longStringForUnavailableReason:5 podcastTitle:v7];

  if (v8)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    v19[0] = v9;
    v19[1] = v11;
    sub_1001AB688();
    if (Collection.isNotEmpty.getter())
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.carPlay.getter();
      swift_bridgeObjectRetain_n();
      os_log_type_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        id v17 = a1;
        uint64_t v15 = (uint8_t *)v14;
        v19[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136315138;
        v16[1] = v15 + 4;
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_10004B974(v9, v11, v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Showing generic playback error alert: %s", v15, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        a1 = v17;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_10032A04C(v9, v11, a1);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_10032A5B0()
{
  uint64_t v1 = v0;
  sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v70 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v69 = (uint64_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v74 = *(void *)(v6 - 8);
  __chkstk_darwin();
  id v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v10 = (char *)&v62 - v9;
  __chkstk_darwin();
  os_log_type_t v12 = (char *)&v62 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v62 - v13;
  id v73 = sub_100321DC8();
  if (v15)
  {
    unint64_t v16 = v15;
    uint64_t v66 = v12;
    uint64_t v67 = v3;
    uint64_t v72 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    swift_bridgeObjectRetain_n();
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v68 = v1;
    uint64_t v65 = v4;
    if (v19)
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v64 = v6;
      uint64_t v21 = (uint8_t *)v20;
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      swift_bridgeObjectRetain();
      id v22 = v73;
      id v77 = (id)sub_10004B974((uint64_t)v73, v16, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Now Playing album artist button tapped for Podcast item with uuid %s.", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = v64;
      swift_slowDealloc();

      uint64_t v71 = *(void (**)(char *, uint64_t))(v74 + 8);
      v71(v14, v6);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v71 = *(void (**)(char *, uint64_t))(v74 + 8);
      v71(v14, v6);
      id v22 = v73;
    }
    id v26 = [self sharedInstance];
    id v27 = [v26 mainOrPrivateContext];

    id v77 = 0;
    os_log_type_t v28 = (void *)swift_allocObject();
    v28[2] = &v77;
    void v28[3] = v27;
    v28[4] = v22;
    uint64_t v28[5] = v16;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_100242A28;
    *(void *)(v29 + 24) = v28;
    aBlock[4] = (uint64_t)sub_10004A010;
    aBlock[5] = v29;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100018818;
    void aBlock[3] = (uint64_t)&unk_100561C08;
    uint64_t v30 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v31 = v27;
    swift_retain();
    swift_release();
    [v31 performBlockAndWait:v30];
    _Block_release(v30);
    LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v30)
    {
      __break(1u);
    }
    else
    {
      if (v77 && (id v32 = [v77 title]) != 0)
      {
        uint64_t v33 = v32;
        uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v35 = v34;

        uint64_t v36 = v66;
        static OS_os_log.carPlay.getter();
        swift_bridgeObjectRetain_n();
        float v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v72 = (uint64_t)v31;
          uint64_t v40 = (uint8_t *)v39;
          aBlock[0] = swift_slowAlloc();
          uint64_t v64 = v6;
          *(_DWORD *)uint64_t v40 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v75 = sub_10004B974(v63, v35, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "Now Playing album artist button tapped for Podcast item with title %s.", v40, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v31 = v72;
          id v22 = v73;
          swift_slowDealloc();

          float v41 = v36;
          uint64_t v42 = v64;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          float v41 = v36;
          uint64_t v42 = v6;
        }
        v71(v41, v42);
        uint64_t v47 = v65;
        id v48 = objc_allocWithZone((Class)CPListTemplate);
        NSString v49 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        id v51 = [v48 initWithTitle:v49 sections:isa];

        uint64_t v75 = (uint64_t)v51;
        uint64_t v52 = (uint64_t)v69;
        *uint64_t v69 = v22;
        *(void *)(v52 + 8) = v16;
        *(_OWORD *)(v52 + 16) = xmmword_100476500;
        *(_OWORD *)(v52 + 32) = 0u;
        *(_OWORD *)(v52 + 48) = 0u;
        *(unsigned char *)(v52 + 64) = 7;
        swift_storeEnumTagMultiPayload();
        BOOL v53 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
        uint64_t v54 = (uint64_t)v67;
        sub_1001BF8D0(v52, (uint64_t)v67);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v54, 0, 1, v47);
        uint64_t v55 = (uint64_t)&v53[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
        swift_beginAccess();
        sub_100039D84(v54, v55, (uint64_t *)&unk_1005F8CF0);
        swift_endAccess();
        v53[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
        sub_10004D29C(0, &qword_1005F88B0);
        uint64_t v56 = NSString.init(stringLiteral:)();
        uint64_t v57 = v53;
        sub_1001BFA4C((uint64_t)v56, (uint64_t)v53);

        uint64_t v58 = *(void (**)(void))(v68
                               + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateAlbumArtistButtonTappedCallback);
        if (v58)
        {
          unint64_t v59 = (void *)v75;
          sub_10004ACDC(*(void *)(v68
                                  + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateAlbumArtistButtonTappedCallback));
          unint64_t v60 = v59;
          v58();

          sub_1000536BC((uint64_t)v58);
        }
        else
        {
          unint64_t v60 = v31;
          uint64_t v31 = v75;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        static OS_os_log.carPlay.getter();
        os_log_type_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v45 = 0;
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "Now Playing album artist button tapped and the Podcast item title is nil.", v45, 2u);
          swift_slowDealloc();
          uint64_t v46 = v31;
        }
        else
        {
          uint64_t v46 = v43;
          os_log_type_t v43 = v31;
        }

        v71(v10, v6);
      }
      id v61 = v77;
      swift_release();
    }
  }
  else
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Now Playing album artist button tapped and the Podcast item's uuid is nil.", v25, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v74 + 8))(v8, v6);
  }
}

void sub_10032AFE0()
{
  uint64_t v1 = v0;
  sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  os_log_type_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = v3;
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Now Playing up next button tapped.", v14, 2u);
    uint64_t v3 = v29;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v15 = [self mainBundle];
  v31._object = (void *)0xEC0000007478654ELL;
  v16._uint64_t countAndFlagsBits = 0x49545F4555455551;
  v16._object = (void *)0xEB00000000454C54;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v31._uint64_t countAndFlagsBits = 0x20676E6979616C50;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v31);

  id v18 = objc_allocWithZone((Class)CPListTemplate);
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v21 = [v18 initWithTitle:v19 sections:isa];

  id v30 = v21;
  swift_storeEnumTagMultiPayload();
  id v22 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  sub_1001BF8D0((uint64_t)v7, (uint64_t)v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  uint64_t v23 = (uint64_t)&v22[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_100039D84((uint64_t)v3, v23, (uint64_t *)&unk_1005F8CF0);
  swift_endAccess();
  v22[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_10004D29C(0, &qword_1005F88B0);
  os_log_type_t v24 = NSString.init(stringLiteral:)();
  uint64_t v25 = v22;
  sub_1001BFA4C((uint64_t)v24, (uint64_t)v22);

  id v26 = *(void (**)(void))(v1
                         + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateUpNextButtonTappedCallback);
  id v27 = v30;
  if (v26)
  {
    sub_10004ACDC(*(void *)(v1
                            + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateUpNextButtonTappedCallback));
    id v27 = v27;
    v26();

    sub_1000536BC((uint64_t)v26);
  }
}

uint64_t sub_10032B48C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10032B4CC()
{
  return swift_deallocObject();
}

uint64_t sub_10032B4DC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10032B514()
{
}

uint64_t sub_10032B51C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10032B55C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000B8F0;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  void *v2 = v1;
  v2[1] = sub_10005B794;
  return sub_1003290FC();
}

uint64_t sub_10032B630(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1006033A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10032B698()
{
  return swift_deallocObject();
}

void sub_10032B6D0(uint64_t a1, uint64_t a2)
{
  sub_100324388(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10032B6D8()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10032B728(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10005B794;
  return sub_100328178(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10032B7F0()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_release();

  sub_10004D2D8(v0 + 56);

  return swift_deallocObject();
}

void sub_10032B848(uint64_t a1)
{
  sub_100328834(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), (void *)(v1 + 56));
}

uint64_t sub_10032B85C()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

void sub_10032B8AC(uint64_t a1)
{
  sub_100328D6C(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

void sub_10032B8BC(uint64_t a1)
{
  sub_100323A98(a1, v1, (void (*)(void))sub_1003238E0);
}

unint64_t sub_10032B8EC()
{
  unint64_t result = qword_100603428;
  if (!qword_100603428)
  {
    sub_100044244(&qword_100603430);
    sub_1001A5458(&qword_100603438, &qword_100603440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100603428);
  }
  return result;
}

void sub_10032B98C(uint64_t a1)
{
  sub_100323A98(a1, v1, sub_100323AF4);
}

uint64_t sub_10032B9BC()
{
  return swift_deallocObject();
}

uint64_t sub_10032B9CC@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100323C98(a1, a2);
}

void sub_10032B9D4()
{
}

uint64_t initializeBufferWithCopyOfBuffer for CarPlayNowPlayingPlayContext(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10032BA24(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_10032BA24(id result, char a2)
{
  if (a2 == 2) {
    return result;
  }
  if (!a2) {
    return (id)swift_retain();
  }
  return result;
}

void destroy for CarPlayNowPlayingPlayContext(uint64_t a1)
{
}

uint64_t assignWithCopy for CarPlayNowPlayingPlayContext(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10032BA24(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1001ED3B4(v5, v6);
  return a1;
}

uint64_t assignWithTake for CarPlayNowPlayingPlayContext(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1001ED3B4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayNowPlayingPlayContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CarPlayNowPlayingPlayContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10032BB70(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_10032BB78(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CarPlayNowPlayingPlayContext()
{
  return &type metadata for CarPlayNowPlayingPlayContext;
}

uint64_t sub_10032BBA4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  swift_errorRetain();
  uint64_t v4 = Result<>.init(success:error:)();
  char v6 = v5 & 1;
  a3(v4, v5 & 1);

  return sub_10018ACD8(v4, v6);
}

__CFString *sub_10032BC18()
{
  return @"MTFeedUpdateDidEndUpdatingAllFeeds";
}

void sub_10032BC28(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  NSString v12 = String._bridgeToObjectiveC()();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  *(void *)(v13 + 24) = a6;
  v15[4] = sub_10032C070;
  v15[5] = v13;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10018FFEC;
  void v15[3] = &unk_100561F20;
  uint64_t v14 = _Block_copy(v15);
  swift_retain();
  swift_release();
  [v7 updatePodcastWithUUID:v12 userInitiated:a3 & 1 source:a4 completion:v14];
  _Block_release(v14);
}

void sub_10032BD3C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  NSString v14 = String._bridgeToObjectiveC()();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a6;
  *(void *)(v15 + 24) = a7;
  v17[4] = sub_10032C050;
  v17[5] = v15;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_10018FFEC;
  v17[3] = &unk_100561ED0;
  Swift::String v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  [v8 updatePodcastWithUUID:v14 userInitiated:a3 & 1 forced:a4 & 1 forceBootstrap:0 source:a5 completion:v16];
  _Block_release(v16);
}

void sub_10032BE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001BE0E4(a1);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v11[4] = a4;
  v11[5] = a5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_100022FC4;
  v11[3] = &unk_100561E80;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  [v5 updatePodcastsWithUUIDs:isa userInitiated:1 source:a3 started:v10];
  _Block_release(v10);
}

void sub_10032BF58(uint64_t a1, uint64_t a2)
{
  v4[4] = a1;
  v4[5] = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  _OWORD v4[2] = sub_100022FC4;
  v4[3] = &unk_100561E58;
  unsigned int v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  [v2 updateAllPodcastsUserInitiated:1 forced:1 source:3 started:v3];
  _Block_release(v3);
}

uint64_t sub_10032C018()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10032C050(uint64_t a1, uint64_t a2)
{
  return sub_10032BBA4(a1, a2, *(void (**)(uint64_t, void))(v2 + 16));
}

void *sub_10032C074(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = (void **)(a1 + 40);
    do
    {
      char v5 = *v4;
      v4 += 2;
      id v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10032C124(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_100054B78(&qword_1006033E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_100603610);
  uint64_t v16 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v17 = _swiftEmptyArrayStorage;
  sub_100054B78((uint64_t *)&unk_100604ED0);
  swift_allocObject();
  *(void *)(v2 + 72) = CurrentValueSubject.init(_:)();
  sub_100054B78((uint64_t *)&unk_1005F8AE0);
  swift_allocObject();
  uint64_t v12 = PassthroughSubject.init()();
  *(void *)(v2 + 136) = &_swiftEmptySetSingleton;
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a2;
  *(void *)(v2 + 80) = v12;
  *(void *)(v2 + 144) = 0;
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 32) = v13;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a2 + 32);
  *(void *)(v2 + 64) = *(void *)(a2 + 48);
  sub_100054B78((uint64_t *)&unk_1005FBBF0);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(&v17, v2 + 88);
  type metadata accessor for PlaybackController();
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(v2 + 128) = v17;
  if (static Podcasts.isBlueMoonEnabled()())
  {
    dispatch thunk of PlaybackController.$tracklist.getter();
    sub_10004D29C(0, &qword_100603440);
    sub_100044200(&qword_100603420, &qword_1006033E8);
    Publisher.compactMap<A>(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_allocObject();
    swift_weakInit();
    sub_100044200(&qword_100603620, (uint64_t *)&unk_100603610);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v9);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
  }
  else
  {
    id v14 = [self defaultCenter];
    [v14 addObserver:v3 selector:"manifestContentsDidChange" name:IMPlayerManifestDidChange object:0];

    sub_10032CDA4();
  }
  swift_release();
  return v3;
}

uint64_t sub_10032C504(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10032C564(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10032C564(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v39 = sub_100054B78(&qword_100603628);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100054B78(&qword_100603630);
  uint64_t v38 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_100603638);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  __chkstk_darwin(v8);
  uint64_t v40 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_100603640);
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  __chkstk_darwin(v10);
  os_log_type_t v44 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "CarPlayPlayingNextProvider: Load items called.", v18, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v48 = _swiftEmptyArrayStorage;
  id v19 = [a1 displayItems];
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = &v48;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_10032E73C;
  *(void *)(v21 + 24) = v20;
  *(void *)&long long v51 = sub_10032F2A0;
  *((void *)&v51 + 1) = v21;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v50 = sub_10032F2A4;
  *((void *)&v50 + 1) = &unk_100562088;
  id v22 = _Block_copy(&aBlock);
  id v23 = a1;
  swift_retain();
  swift_release();
  [v19 enumerateSectionsUsingBlock:v22];

  _Block_release(v22);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)&long long aBlock = v48;
    sub_100054B78(&qword_100603648);
    sub_100044200(&qword_100603650, &qword_100603648);
    Sequence.publisher.getter();
    long long v25 = *(_OWORD *)(v2 + 32);
    long long aBlock = *(_OWORD *)(v2 + 16);
    long long v50 = v25;
    long long v51 = *(_OWORD *)(v2 + 48);
    uint64_t v52 = *(void *)(v2 + 64);
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    sub_100056D54(v2 + 88, (uint64_t)v47);
    uint64_t v27 = swift_allocObject();
    long long v28 = v50;
    *(_OWORD *)(v27 + 16) = aBlock;
    *(_OWORD *)(v27 + 32) = v28;
    *(_OWORD *)(v27 + 48) = v51;
    *(void *)(v27 + 64) = v52;
    sub_100042FC4(v47, v27 + 72);
    *(void *)(v27 + 112) = v26;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_10032E798;
    *(void *)(v29 + 24) = v27;
    sub_100054B78(&qword_100603658);
    sub_100044200(&qword_100603660, &qword_100603628);
    sub_100044200(&qword_100603668, &qword_100603658);
    uint64_t v30 = v39;
    Publisher<>.flatMap<A>(maxPublishers:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v30);
    sub_100044200((unint64_t *)&unk_100603670, &qword_100603630);
    id v32 = v40;
    uint64_t v31 = v41;
    Publisher.collect()();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v31);
    sub_100054B78((uint64_t *)&unk_1005F7E10);
    sub_100044200(&qword_100603680, &qword_100603638);
    uint64_t v33 = v43;
    unint64_t v34 = v44;
    Publisher.map<A>(_:)();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v33);
    swift_allocObject();
    swift_weakInit();
    sub_100044200(&qword_100603688, &qword_100603640);
    uint64_t v35 = v46;
    uint64_t v36 = Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v35);
    *(void *)(v2 + 152) = v36;
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_10032CDA4()
{
  uint64_t v1 = v0;
  uint64_t v55 = sub_100054B78(&qword_1006035B8);
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  long long v51 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100054B78(&qword_1006035C0);
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v52 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1006035C8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "CarPlayPlayingNextProvider: Load items called.", v14, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v15 = [self defaultInstance];
  id v16 = [v15 compositeManifest];

  uint64_t result = (char *)[v16 currentIndex];
  id v18 = result + 1;
  if (result == (char *)-1)
  {
    __break(1u);
  }
  else
  {
    id v19 = result;
    uint64_t v47 = v7;
    uint64_t v48 = v5;
    uint64_t v49 = v4;
    uint64_t v50 = v1;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = _swiftEmptyArrayStorage;
    *(void *)(v20 + 16) = _swiftEmptyArrayStorage;
    uint64_t v22 = (uint64_t)[v16 count];
    if (v22 >= 1 && (unint64_t)v18 < v22)
    {
      unint64_t v23 = (unint64_t)(v19 + 2);
      do
      {
        id v24 = [v16 objectAtIndex:v23 - 1];
        if (!v24) {
          break;
        }
        id v25 = v24;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v20 + 16) = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v21 = sub_1002EF7A8(0, v21[2] + 1, 1, v21);
          *(void *)(v20 + 16) = v21;
        }
        unint64_t v28 = v21[2];
        unint64_t v27 = v21[3];
        if (v28 >= v27 >> 1) {
          uint64_t v21 = sub_1002EF7A8((void *)(v27 > 1), v28 + 1, 1, v21);
        }
        v21[2] = v28 + 1;
        uint64_t v29 = &v21[2 * v28];
        void v29[4] = v23 - 1;
        void v29[5] = v25;
        *(void *)(v20 + 16) = v21;

        uint64_t v30 = (uint64_t)[v16 count];
        if (v30 < 1) {
          break;
        }
      }
      while (v23++ < v30);
    }
    *(void *)&long long v58 = v21;
    sub_100054B78(&qword_1006035D8);
    sub_100044200(&qword_1006035E0, &qword_1006035D8);
    id v32 = v51;
    Sequence.publisher.getter();
    uint64_t v33 = v50;
    long long v34 = *(_OWORD *)(v50 + 32);
    long long v58 = *(_OWORD *)(v50 + 16);
    long long v59 = v34;
    long long v60 = *(_OWORD *)(v50 + 48);
    uint64_t v61 = *(void *)(v50 + 64);
    sub_100056D54(v50 + 88, (uint64_t)v57);
    uint64_t v35 = swift_allocObject();
    long long v36 = v59;
    *(_OWORD *)(v35 + 16) = v58;
    *(_OWORD *)(v35 + 32) = v36;
    *(_OWORD *)(v35 + 48) = v60;
    *(void *)(v35 + 64) = v61;
    sub_100042FC4(v57, v35 + 72);
    *(void *)(v35 + 112) = v33;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10032E65C;
    *(void *)(v37 + 24) = v35;
    swift_retain();
    sub_100054B78(&qword_1006035E8);
    sub_100044200(&qword_1006035F0, &qword_1006035B8);
    sub_100044200(&qword_1006035F8, &qword_1006035E8);
    uint64_t v38 = v52;
    uint64_t v39 = v55;
    Publisher<>.flatMap<A>(maxPublishers:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v39);
    sub_100044200(&qword_100603600, &qword_1006035C0);
    uint64_t v40 = v47;
    uint64_t v41 = v56;
    Publisher.collect()();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v41);
    uint64_t v42 = swift_allocObject();
    swift_weakInit();
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v20;
    *(void *)(v43 + 24) = v42;
    sub_100044200(&qword_100603608, (uint64_t *)&unk_1006035C8);
    swift_retain();
    uint64_t v44 = v49;
    uint64_t v45 = Publisher.sink(receiveCompletion:receiveValue:)();

    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v40, v44);
    *(void *)(v33 + 144) = v45;
    swift_release();
    return (char *)swift_release();
  }
  return result;
}

uint64_t sub_10032D528()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0 name:IMPlayerManifestDidChange object:0];

  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10032D5C8()
{
  sub_10032D528();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CarPlayPlayingNextProvider()
{
  return self;
}

uint64_t sub_10032D65C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8 = sub_100054B78(&qword_100603698);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  QueueModelSection.init(tracklistSection:)();
  uint64_t v11 = type metadata accessor for QueueModelSection();
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  uint64_t result = sub_10032F1EC((uint64_t)v10);
  if (v12 != 1)
  {
    id v14 = [a4 displayItems];
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a5;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_10032F25C;
    *(void *)(v16 + 24) = v15;
    aBlock[4] = sub_10032F274;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10032D90C;
    void aBlock[3] = &unk_100562150;
    os_log_type_t v17 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v14 enumerateItemsInSectionAtIndex:a2 usingBlock:v17];

    _Block_release(v17);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10032D89C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  return specialized Array._endMutation()();
}

void sub_10032D90C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_10032D970(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  uint64_t v9 = sub_10036B6E8(a1, a3, a4, (uint64_t)sub_10032F1E4, a5);
  swift_release();
  return v9;
}

uint64_t sub_10032D9F4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10032DA78@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id v5 = *a1;
  swift_bridgeObjectRetain();
  sub_10032E828(&v5);
  id v3 = sub_10032C074((uint64_t)v5);
  uint64_t result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_10032DAF4(unint64_t *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *a1;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  unint64_t v9 = v6 >> 62;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134217984;
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v18[1] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "CarPlayPlayingNextProvider: section total items count is %ld.", v10, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10046D060;
    swift_bridgeObjectRetain();
    if (v9)
    {
      sub_100054B78(&qword_1005F7E20);
      uint64_t v17 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      unint64_t v6 = v17;
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    id v14 = objc_allocWithZone((Class)CPListSection);
    sub_1001C04A0(v6);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [v14 initWithItems:isa];

    *(void *)(v13 + 32) = v16;
    v18[0] = v13;
    specialized Array._endMutation()();
    CurrentValueSubject.send(_:)();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10032DE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v8 = sub_10041D744(a1, a3, a4, (uint64_t)sub_10032E6F4, v7);
  swift_release_n();
  return v8;
}

uint64_t sub_10032DEEC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [self defaultCenter];
    [v2 removeObserver:v1 name:IMPlayerManifestDidChange object:0];
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10032DFE4(unsigned char *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin();
  unint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)unint64_t v9 = 136315138;
      uint64_t v10 = String.init<A>(describing:)();
      uint64_t v12 = sub_10004B974(v10, v11, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to prepare manifest: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_10032E1E4(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_retain();
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    v19[0] = v4;
    uint64_t v12 = v11;
    *(_DWORD *)unint64_t v11 = 134217984;
    swift_beginAccess();
    v19[5] = *(void *)(*(void *)(a2 + 16) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "CarPlayPlayingNextProvider: section total items count is %ld.", v12, 0xCu);
    uint64_t v4 = v19[0];
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10046D060;
    swift_bridgeObjectRetain();
    if (v8 >> 62)
    {
      sub_100054B78(&qword_1005F7E20);
      uint64_t v18 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      unint64_t v8 = v18;
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    id v15 = objc_allocWithZone((Class)CPListSection);
    sub_1001C04A0(v8);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v15 initWithItems:isa];

    *(void *)(v14 + 32) = v17;
    v19[4] = v14;
    specialized Array._endMutation()();
    CurrentValueSubject.send(_:)();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10032E520()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_10032E5A0()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_10032E620()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10032E65C(uint64_t a1, uint64_t a2)
{
  return sub_10032DE40(a1, a2, v2 + 16, v2 + 72);
}

uint64_t sub_10032E66C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10032E7E8(a1, a2);
}

uint64_t sub_10032E674()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10032E6AC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10032E6EC(unint64_t *a1)
{
  return sub_10032E1E4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10032E6F4()
{
  return sub_10032DEEC();
}

uint64_t sub_10032E6FC(void **a1)
{
  return sub_10032C504(a1);
}

uint64_t sub_10032E704()
{
  return swift_deallocObject();
}

uint64_t sub_10032E73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10032D65C(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_10032E744()
{
  return swift_deallocObject();
}

uint64_t sub_10032E758()
{
  sub_10004D2D8(v0 + 72);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10032E798(uint64_t a1, uint64_t a2)
{
  return sub_10032D970(a1, a2, (_OWORD *)(v2 + 16), v2 + 72, *(void *)(v2 + 112));
}

uint64_t sub_10032E7A8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10032E7E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10032E7E8(a1, a2);
}

uint64_t sub_10032E7E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_10032E820(unint64_t *a1)
{
  return sub_10032DAF4(a1);
}

Swift::Int sub_10032E828(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_10025D910(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_10032E894(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_10032E894(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = 0;
      uint64_t v86 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = *(void *)(v86 + 16 * i);
        uint64_t v89 = v85;
        do
        {
          if (v88 >= *(void *)(v86 + v89)) {
            break;
          }
          if (!v86) {
            goto LABEL_140;
          }
          os_log_type_t v90 = (void *)(v86 + v89);
          uint64_t v91 = *(void *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *os_log_type_t v90 = v88;
          v90[1] = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v6 = result;
  unint64_t v101 = a1;
  if (v3 < 2)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      id v92 = v12;
      unint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v93 = *v101;
        do
        {
          unint64_t v94 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v93) {
            goto LABEL_144;
          }
          uint64_t v95 = v92;
          uint64_t v96 = *(void *)&v92[16 * v94 + 32];
          uint64_t v97 = *(void *)&v92[16 * v13 + 24];
          sub_10032EF68((char *)(v93 + 16 * v96), (char *)(v93 + 16 * *(void *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v95 = sub_10025CC4C((uint64_t)v95);
          }
          if (v94 >= *((void *)v95 + 2)) {
            goto LABEL_133;
          }
          NSString v98 = &v95[16 * v94 + 32];
          *(void *)NSString v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v95 + 2);
          if (v13 > v99) {
            goto LABEL_134;
          }
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          id v92 = v95;
          *((void *)v95 + 2) = v99 - 1;
          unint64_t v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v103[2] = 0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v103 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_100054B78(&qword_100603690);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    unint64_t v103 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 32;
  uint64_t v100 = *a1 - 16;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v104 = v6;
  Swift::Int v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 16 * v10);
      uint64_t v16 = 16 * v14;
      uint64_t v17 = *(void *)(v11 + 16 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (uint64_t *)(v102 + 16 * v14);
        uint64_t v19 = v15;
        while (1)
        {
          uint64_t v21 = *v18;
          v18 += 2;
          uint64_t v20 = v21;
          if (v15 < v17 == v21 >= v19) {
            break;
          }
          ++v10;
          uint64_t v19 = v20;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v22 = 16 * v10;
          Swift::Int v23 = v10;
          Swift::Int v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              uint64_t v26 = *(void *)(v11 + v16);
              uint64_t v27 = *(void *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(void *)(v25 - 16) = v26;
              *(void *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v28 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v28 >= v3) {
      Swift::Int v28 = v3;
    }
    if (v28 < v14) {
      break;
    }
    if (v10 != v28)
    {
      uint64_t v29 = v100 + 16 * v10;
      do
      {
        uint64_t v30 = *(void *)(v11 + 16 * v10);
        Swift::Int v31 = v14;
        uint64_t v32 = v29;
        do
        {
          if (v30 >= *(void *)v32) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v33 = *(void *)(v32 + 24);
          *(_OWORD *)(v32 + 16) = *(_OWORD *)v32;
          *(void *)uint64_t v32 = v30;
          *(void *)(v32 + 8) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      Swift::Int v10 = v28;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_10025C908(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v35 = *((void *)v12 + 2);
    unint64_t v34 = *((void *)v12 + 3);
    unint64_t v13 = v35 + 1;
    uint64_t v11 = v106;
    if (v35 >= v34 >> 1)
    {
      uint64_t v84 = sub_10025C908((char *)(v34 > 1), v35 + 1, 1, v12);
      uint64_t v11 = v106;
      uint64_t v12 = v84;
    }
    *((void *)v12 + 2) = v13;
    long long v36 = v12 + 32;
    uint64_t v37 = &v12[16 * v35 + 32];
    *(void *)uint64_t v37 = v14;
    *((void *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        unint64_t v38 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v43 = &v36[16 * v13];
          uint64_t v44 = *((void *)v43 - 8);
          uint64_t v45 = *((void *)v43 - 7);
          BOOL v49 = __OFSUB__(v45, v44);
          uint64_t v46 = v45 - v44;
          if (v49) {
            goto LABEL_119;
          }
          uint64_t v48 = *((void *)v43 - 6);
          uint64_t v47 = *((void *)v43 - 5);
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v41 = v47 - v48;
          char v42 = v49;
          if (v49) {
            goto LABEL_120;
          }
          unint64_t v50 = v13 - 2;
          long long v51 = &v36[16 * v13 - 32];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          BOOL v49 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          if (v49) {
            goto LABEL_122;
          }
          BOOL v49 = __OFADD__(v41, v54);
          uint64_t v55 = v41 + v54;
          if (v49) {
            goto LABEL_125;
          }
          if (v55 >= v46)
          {
            id v73 = &v36[16 * v38];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v49 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v49) {
              goto LABEL_129;
            }
            BOOL v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v67 = *((void *)v12 + 4);
            uint64_t v68 = *((void *)v12 + 5);
            BOOL v49 = __OFSUB__(v68, v67);
            uint64_t v60 = v68 - v67;
            char v61 = v49;
            goto LABEL_77;
          }
          uint64_t v40 = *((void *)v12 + 4);
          uint64_t v39 = *((void *)v12 + 5);
          BOOL v49 = __OFSUB__(v39, v40);
          uint64_t v41 = v39 - v40;
          char v42 = v49;
        }
        if (v42) {
          goto LABEL_121;
        }
        unint64_t v50 = v13 - 2;
        uint64_t v56 = &v36[16 * v13 - 32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v59 = __OFSUB__(v57, v58);
        uint64_t v60 = v57 - v58;
        char v61 = v59;
        if (v59) {
          goto LABEL_124;
        }
        uint64_t v62 = &v36[16 * v38];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v49 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v49) {
          goto LABEL_127;
        }
        if (__OFADD__(v60, v65)) {
          goto LABEL_128;
        }
        if (v60 + v65 >= v41)
        {
          BOOL v66 = v41 < v65;
LABEL_83:
          if (v66) {
            unint64_t v38 = v50;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v61) {
          goto LABEL_123;
        }
        uint64_t v69 = &v36[16 * v38];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v49 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v49) {
          goto LABEL_126;
        }
        if (v72 < v60) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v78 = v12;
        unint64_t v79 = &v36[16 * v77];
        uint64_t v80 = *(void *)v79;
        id v81 = &v36[16 * v38];
        uint64_t v82 = *((void *)v81 + 1);
        sub_10032EF68((char *)(v11 + 16 * *(void *)v79), (char *)(v11 + 16 * *(void *)v81), v11 + 16 * v82, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v82 < v80) {
          goto LABEL_116;
        }
        if (v38 > *((void *)v78 + 2)) {
          goto LABEL_117;
        }
        *(void *)unint64_t v79 = v80;
        *(void *)&v36[16 * v77 + 8] = v82;
        unint64_t v83 = *((void *)v78 + 2);
        if (v38 >= v83) {
          goto LABEL_118;
        }
        uint64_t v12 = v78;
        unint64_t v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((void *)v78 + 2) = v83 - 1;
        uint64_t v11 = v106;
        if (v83 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v104;
    Swift::Int v3 = v105;
    if (v10 >= v105)
    {
      unint64_t v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10032EF68(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v24 = __src;
  Swift::Int v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v16 = &v4[16 * v13];
      uint64_t v22 = v16;
      Swift::Int v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v17 = (char *)(a3 - 16);
        uint64_t v18 = v6;
        while (1)
        {
          uint64_t v19 = v17 + 16;
          uint64_t v20 = *((void *)v18 - 2);
          v18 -= 16;
          if (*((void *)v16 - 2) >= v20)
          {
            uint64_t v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(_OWORD *)uint64_t v17 = *((_OWORD *)v16 - 1);
            }
            uint64_t v18 = v6;
            v16 -= 16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
            }
            Swift::Int v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 16;
          Swift::Int v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    Swift::Int v14 = &v4[16 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          Swift::Int v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        Swift::Int v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      Swift::Int v24 = v7;
    }
LABEL_42:
    sub_10025CA04((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10032F1E4()
{
  return sub_10032D9F4();
}

uint64_t sub_10032F1EC(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100603698);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10032F24C()
{
  return swift_deallocObject();
}

uint64_t sub_10032F25C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10032D89C(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_10032F264()
{
  return swift_deallocObject();
}

uint64_t sub_10032F274()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10032F2A8()
{
  swift_beginAccess();
  if (*(void *)(v0 + 24)
    && (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
  {
    uint64_t v1 = (objc_class *)[self mainBundle];
    unint64_t v10 = 0xAE00A680E2747865;
    unint64_t v2 = 0x80000001004D68D0;
    unint64_t v3 = 0xD000000000000014;
    v4.super.Class isa = v1;
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
    uint64_t v7 = 0x54207463656C6553;
  }
  else
  {
    uint64_t v1 = (objc_class *)[self mainBundle];
    unint64_t v10 = 0xEF7470697263736ELL;
    unint64_t v3 = 0x4152545F57454956;
    unint64_t v2 = 0xEF5450495243534ELL;
    v4.super.Class isa = v1;
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
    uint64_t v7 = 0x6172542077656956;
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v4, *(Swift::String *)&v5, *(Swift::String *)&v7)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10032F414()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_100600580);
  __chkstk_darwin(v2 - 8);
  NSBundle v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for InteractionContext();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((static Podcasts.areTranscriptsSupportedOnPlatform.getter() & 1) == 0) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v12 = *(void *)(v0 + 24);
  if (v12)
  {
    swift_retain();
    dispatch thunk of ContextActionsConfiguration.context.getter();
    swift_release();
    InteractionContext.page.getter();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    char v13 = InteractionContext.Page.isEpisodeDetailTranscriptsPage.getter();
    sub_1001B4BB0((uint64_t)v7);
    if ((v13 & 1) == 0 && *(void *)(v1 + 16))
    {
      uint64_t v14 = v1 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
      swift_beginAccess();
      sub_100054BBC(v14, (uint64_t)v4, (uint64_t *)&unk_100600580);
      uint64_t v15 = type metadata accessor for TranscriptRequestInformation();
      uint64_t v12 = (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v4, 1, v15) != 1;
      sub_100054B1C((uint64_t)v4, (uint64_t *)&unk_100600580);
      return v12;
    }
    return 0;
  }
  return v12;
}

uint64_t sub_10032F66C(uint64_t a1)
{
  uint64_t v3 = sub_100054B78(&qword_1005F8FB8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v80 = (uint64_t)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v76 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v76 - v9;
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_100600580);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)v76 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v76 - v18;
  uint64_t v20 = type metadata accessor for EpisodeOffer();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t result = __chkstk_darwin(v20);
  Swift::Int v24 = (char *)v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return result;
  }
  uint64_t v77 = (uint64_t)v14;
  uint64_t v78 = v8;
  uint64_t v79 = v1;
  unint64_t v25 = *(void *)(a1 + 16);
  uint64_t v26 = *(void *)(a1 + 24);
  switch(*(unsigned char *)(a1 + 32))
  {
    case 1:
      uint64_t v27 = v79;
      if (*(void *)(v25 + 16) == 1)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v24, v25 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), v20);
        swift_retain();
        if ((EpisodeOffer.isEntitledOffer.getter() & 1) != 0 && (sub_1003E54E8() & 1) == 0)
        {
          EpisodeOffer.transcriptInfo.getter();
          swift_release();
          (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
          uint64_t v60 = v27 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
          swift_beginAccess();
          uint64_t v61 = (uint64_t)v19;
          goto LABEL_45;
        }
        (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
        return swift_release();
      }
      return result;
    case 2:
      if (v25 >> 62)
      {
        sub_1001DCD9C(*(void *)(a1 + 16), *(void *)(a1 + 24), 2u);
        swift_retain();
        sub_1001DCD9C(v25, v26, 2u);
        uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
        sub_1001DCDF8(v25, v26, 2u);
        if (v69 == 1)
        {
          swift_bridgeObjectRetain();
          uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
          sub_1001DCDF8(v25, v26, 2u);
          if (v70) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        uint64_t v28 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        sub_1001DCD9C(v25, v26, 2u);
        if (v28 == 1 && *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_12:
          if ((v25 & 0xC000000000000001) != 0)
          {
            id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_15;
          }
          if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v29 = *(id *)(v25 + 32);
LABEL_15:
            uint64_t v30 = v29;
            sub_1001DCDF8(v25, v26, 2u);
            id v31 = [v30 transcriptIdentifier];
            if (!v31)
            {

              goto LABEL_54;
            }
            uint64_t v32 = v31;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v80 = v33;

            uint64_t v34 = type metadata accessor for TranscriptSource();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v10, 1, 1, v34);
            id v35 = [v30 transcriptSource];
            if (v35)
            {
              long long v36 = v35;
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v37 = (uint64_t)v78;
              TranscriptSource.init(rawValue:)();
              sub_100054B1C((uint64_t)v10, &qword_1005F8FB8);
              sub_10033178C(v37, (uint64_t)v10);
            }
            [v30 episodeStoreId];
            uint64_t v81 = AdamID.init(rawValue:)();
            sub_1001A5874();
            uint64_t v77 = BinaryInteger.description.getter();
            id v38 = [v30 title];
            if (v38)
            {
              uint64_t v39 = v38;
              static String._unconditionallyBridgeFromObjectiveC(_:)();
            }
            sub_100054BBC((uint64_t)v10, (uint64_t)v78, &qword_1005F8FB8);
            TranscriptRequestInformation.init(episodeAdamId:episodeTitle:ttmlIdentifier:selectedTextTimeInterval:showName:source:)();

            swift_release();
            sub_100054B1C((uint64_t)v10, &qword_1005F8FB8);
            uint64_t v62 = type metadata accessor for TranscriptRequestInformation();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v17, 0, 1, v62);
            uint64_t v60 = v79 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
            swift_beginAccess();
            uint64_t v61 = (uint64_t)v17;
            goto LABEL_45;
          }
          __break(1u);
LABEL_59:
          id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_26;
        }
      }
      uint64_t v71 = v25;
      uint64_t v72 = v26;
      unsigned __int8 v73 = 2;
      goto LABEL_53;
    case 3:
      if (v25 >> 62)
      {
        sub_1001DCD9C(*(void *)(a1 + 16), *(void *)(a1 + 24), 3u);
        swift_retain();
        sub_1001DCD9C(v25, v26, 3u);
        uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
        sub_1001DCDF8(v25, v26, 3u);
        if (v74 == 1)
        {
          swift_bridgeObjectRetain();
          uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
          sub_1001DCDF8(v25, v26, 3u);
          if (v75) {
            goto LABEL_23;
          }
        }
LABEL_52:
        uint64_t v71 = v25;
        uint64_t v72 = v26;
        unsigned __int8 v73 = 3;
LABEL_53:
        sub_1001DCDF8(v71, v72, v73);
        goto LABEL_54;
      }
      uint64_t v40 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      sub_1001DCD9C(v25, v26, 3u);
      if (v40 != 1 || !*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_52;
      }
LABEL_23:
      if ((v25 & 0xC000000000000001) != 0) {
        goto LABEL_59;
      }
      if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        JUMPOUT(0x100330140);
      }
      id v41 = *(id *)(v25 + 32);
LABEL_26:
      char v42 = v41;
      sub_1001DCDF8(v25, v26, 3u);
      uint64_t v43 = (void *)MPCPlayerResponseItem.podcastEpisode.getter();

      if (v43)
      {
        id v44 = v43;
        uint64_t v45 = MPModelObject.adamID.getter();
        char v47 = v46;

        if ((v47 & 1) == 0)
        {
          id v48 = [v44 transcriptIdentifier];
          if (v48)
          {
            BOOL v49 = v48;
            uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v76[1] = v51;
            v76[2] = v50;

            uint64_t v52 = type metadata accessor for TranscriptSource();
            uint64_t v53 = v80;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v80, 1, 1, v52);
            id v54 = [v44 transcriptSource];
            uint64_t v55 = (uint64_t)v78;
            if (v54)
            {
              uint64_t v56 = v54;
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              TranscriptSource.init(rawValue:)();
              sub_100054B1C(v53, &qword_1005F8FB8);
              sub_10033178C(v55, v53);
            }
            uint64_t v81 = v45;
            sub_1001A5874();
            BinaryInteger.description.getter();
            id v57 = [v44 title];
            if (v57)
            {
              uint64_t v58 = v57;
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              v76[0] = v59;
            }
            else
            {
              v76[0] = 0;
            }
            id v63 = [v44 author:v76[0]];
            uint64_t v64 = v63;
            if (v63)
            {
              id v65 = [v63 name];

              if (v65)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)();
              }
            }
            uint64_t v66 = v80;
            sub_100054BBC(v80, (uint64_t)v78, &qword_1005F8FB8);
            uint64_t v67 = v77;
            TranscriptRequestInformation.init(episodeAdamId:episodeTitle:ttmlIdentifier:selectedTextTimeInterval:showName:source:)();

            swift_release();
            sub_100054B1C(v66, &qword_1005F8FB8);
            uint64_t v68 = type metadata accessor for TranscriptRequestInformation();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 0, 1, v68);
            uint64_t v60 = v79 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
            swift_beginAccess();
            uint64_t v61 = v67;
LABEL_45:
            sub_100331724(v61, v60);
            return swift_endAccess();
          }
        }
      }
LABEL_54:
      return swift_release();
    default:
      swift_retain();
      sub_1001DCD9C(v25, v26, 0);
      swift_bridgeObjectRelease();
      if (*(void *)(v25 + 16) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        type metadata accessor for CoreDataFetcher();
        static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
      }
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

void sub_100330150(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_100600580);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1005F8FB8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v32 - v11;
  if (a1)
  {
    id v33 = a1;
    if (([v33 isRestricted] & 1) != 0
      || ![v33 isEntitled]
      || (uint64_t v13 = MTEpisode.contentId.getter(), (v14 & 1) != 0)
      || (v15 = v13, (id v16 = [v33 transcriptIdentifier]) == 0))
    {
      id v26 = v33;
    }
    else
    {
      uint64_t v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      id v21 = [v33 transcriptProvider];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      TranscriptSource.init(rawValue:)();
      uint64_t v34 = v15;
      sub_1001A5874();
      BinaryInteger.description.getter();
      uint64_t v23 = v22;
      id v24 = [v33 title];
      long long v32[2] = v18;
      uint64_t v32[3] = v20;
      v32[1] = v23;
      if (v24)
      {
        unint64_t v25 = v24;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      id v27 = [v33 podcast];
      uint64_t v28 = v27;
      if (v27)
      {
        id v29 = [v27 title];

        if (v29)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
      sub_100054BBC((uint64_t)v12, (uint64_t)v10, &qword_1005F8FB8);
      TranscriptRequestInformation.init(episodeAdamId:episodeTitle:ttmlIdentifier:selectedTextTimeInterval:showName:source:)();

      sub_100054B1C((uint64_t)v12, &qword_1005F8FB8);
      uint64_t v30 = type metadata accessor for TranscriptRequestInformation();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v6, 0, 1, v30);
      uint64_t v31 = a2 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
      swift_beginAccess();
      sub_100331724((uint64_t)v6, v31);
      swift_endAccess();
    }
  }
}

uint64_t sub_1003304D0()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PresentationSource();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_100600580);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptRequestInformation();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v0 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
  swift_beginAccess();
  sub_100054BBC(v14, (uint64_t)v9, (uint64_t *)&unk_100600580);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_100600580);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  id v16 = (void *)(v0 + 24);
  swift_beginAccess();
  if (!*(void *)(v0 + 24))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v3, 1, 1, v4);
    goto LABEL_20;
  }
  swift_retain();
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  swift_release();
  uint64_t v17 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v3, 1, v4) == 1)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_100605DC0);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v6, v3, v4);
  if (!*v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  swift_retain();
  uint64_t v18 = ContextActionsConfiguration.objectGraph.getter();
  swift_release();
  if (!*v16) {
    goto LABEL_21;
  }
  type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    uint64_t started = NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime.getter();
    if ((v20 & 1) == 0)
    {
      double v29 = *(double *)&started;
      double v21 = COERCE_DOUBLE(NowPlayingTranscriptSelectionContextActionConfiguration.referenceEndTime.getter());
      uint64_t result = *(void *)&v29;
      if ((v22 & 1) == 0)
      {
        if (v29 > v21)
        {
          __break(1u);
          goto LABEL_28;
        }
        TranscriptRequestInformation.selectedTextTimeInterval.setter();
      }
    }
    swift_release();
  }
  if (!*v16
    || !swift_dynamicCastClass()
    && (type metadata accessor for NowPlayingContextActionConfiguration(), !swift_dynamicCastClass()))
  {
LABEL_21:
    id v26 = (id)PresentationSource.viewController.getter();
    uint64_t v25 = v30;
    if (v26) {
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  uint64_t v23 = (void *)NowPlayingDataProvider.shared.unsafeMutableAddressor();
  uint64_t result = swift_beginAccess();
  if (!*v23)
  {
LABEL_28:
    __break(1u);
    return result;
  }
  id v24 = (void *)v23[12];
  uint64_t v25 = v30;
  if (v24)
  {
    id v26 = v24;
LABEL_22:
    id v27 = v26;
    sub_100330EB0(v18, (uint64_t)v13, v26);
  }
LABEL_23:
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_100330970()
{
  swift_release();
  swift_release();
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo, (uint64_t *)&unk_100600580);

  return swift_deallocClassInstance();
}

uint64_t sub_1003309EC()
{
  return type metadata accessor for ViewTranscriptContextAction();
}

uint64_t type metadata accessor for ViewTranscriptContextAction()
{
  uint64_t result = qword_1006036D0;
  if (!qword_1006036D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100330A40()
{
  sub_100330ADC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100330ADC()
{
  if (!qword_1006036E0)
  {
    type metadata accessor for TranscriptRequestInformation();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006036E0);
    }
  }
}

uint64_t sub_100330B38()
{
  swift_beginAccess();
  if (*(void *)(v0 + 24)
    && (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
  {
    return 0xD000000000000014;
  }
  else
  {
    return 0x75622E65746F7571;
  }
}

uint64_t sub_100330BC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for MetricsLabel.viewTranscript(_:);
  uint64_t v3 = type metadata accessor for MetricsLabel();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_100330C3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.viewTranscript(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_100330D1C()
{
  uint64_t result = static Podcasts.areTranscriptsSupportedOnPlatform.getter();
  if (result)
  {
    uint64_t v1 = swift_retain();
    sub_10032F66C(v1);
    return swift_release();
  }
  return result;
}

BOOL sub_100330D70()
{
  swift_beginAccess();
  if (*(void *)(v0 + 24))
  {
    type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
    uint64_t v1 = swift_dynamicCastClass();
    if (v1) {
      swift_retain();
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  swift_release();
  return v1 != 0;
}

uint64_t sub_100330E00(uint64_t a1)
{
  uint64_t result = sub_1003316DC(&qword_100600A00, (void (*)(uint64_t))type metadata accessor for ViewTranscriptContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100330E58(uint64_t a1)
{
  uint64_t result = sub_1003316DC(&qword_1005FAB20, (void (*)(uint64_t))type metadata accessor for ViewTranscriptContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100330EB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v40 = a2;
  uint64_t v5 = type metadata accessor for OSLogger();
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8);
  char v46 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v10 - 8);
  uint64_t v42 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v41 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v43 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FlowPresentationContext();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v39 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FlowDestination();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005F7E60);
  uint64_t v44 = a1;
  BaseObjectGraph.injectIfAvailable<A>(_:)();
  uint64_t v45 = a3;
  if (v50[0])
  {
    uint64_t v38 = v50[0];
    uint64_t v37 = v50[1];
  }
  else
  {
    uint64_t v19 = UIResponder.nearestActionRunner.getter();
    if (!v19)
    {
      static OSLogger.actions.getter();
      sub_100054B78((uint64_t *)&unk_100603DC0);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
      LogMessage.init(stringLiteral:)();
      Logger.error(_:)();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v7, v5);
    }
    uint64_t v37 = v20;
    uint64_t v38 = v19;
  }
  sub_100054B78(&qword_100603DD0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10046D010;
  uint64_t v22 = type metadata accessor for TranscriptRequestInformation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v40, v22);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for FlowDestination.episodeDetailTranscript(_:), v15);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v39, enum case for FlowPresentationContext.pushDetail(_:), v12);
  unsigned __int8 v23 = static Link.Presentation.textFollowsTintColor.getter();
  unsigned __int8 v24 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v23) {
    Link.Presentation.init(rawValue:)();
  }
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v24) {
    Link.Presentation.init(rawValue:)();
  }
  uint64_t v25 = v45;
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v43, enum case for FlowDestinationPageHeader.standard(_:), v42);
  static ActionMetrics.notInstrumented.getter();
  uint64_t v26 = type metadata accessor for FlowAction();
  swift_allocObject();
  uint64_t v27 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
  *(void *)(v21 + 56) = v26;
  *(void *)(v21 + 64) = sub_1003316DC((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
  *(void *)(v21 + 32) = v27;
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  uint64_t v28 = type metadata accessor for TabChangeAction();
  swift_allocObject();
  uint64_t v29 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
  type metadata accessor for ActionRunnerOptions();
  swift_retain();
  BaseObjectGraph.__allocating_init(_:)();
  memset(v51, 0, 32);
  id v30 = [v25 view];
  sub_100054BBC((uint64_t)v51, (uint64_t)v49, &qword_1005F5D30);
  id v31 = v30;
  ActionOrigin.init(sender:view:)();
  ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v50, (uint64_t *)&unk_100600670);
  swift_release();

  sub_100054B1C((uint64_t)v51, &qword_1005F5D30);
  swift_getObjectType();
  v50[3] = v28;
  v50[4] = sub_1003316DC((unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
  v50[0] = v29;
  id v33 = v46;
  uint64_t v32 = v47;
  uint64_t v34 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for ActionMetricsBehavior.notProcessed(_:), v48);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  return sub_10004D2D8((uint64_t)v50);
}

uint64_t sub_1003316DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100331724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_100600580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033178C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F8FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1003317F4(void *a1)
{
  sub_100330150(a1, v1);
}

uint64_t sub_1003317FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v13 = a1;
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  sub_1000566BC();
  static DispatchQoS.unspecified.getter();
  uint64_t v14 = _swiftEmptyArrayStorage;
  sub_100055BF8((unint64_t *)&qword_1005F5BE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100054B78((uint64_t *)&unk_1005F7A60);
  sub_10005666C((unint64_t *)&qword_1005F5BF0, (uint64_t *)&unk_1005F7A60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v12);
  *(void *)(v1 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v8 = v1 + OBJC_IVAR____TtC8Podcasts9Throttler_delay;
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, v13, v9);
  return v2;
}

uint64_t sub_100331A98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTimeInterval();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v3 + OBJC_IVAR____TtC8Podcasts9Throttler_delay;
  uint64_t v25 = *(void *)(v3 + 16);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = v23;
  uint64_t v19 = v24;
  *((void *)v17 + 2) = v15;
  *((void *)v17 + 3) = v18;
  *((void *)v17 + 4) = v19;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v17[v16], v13, v10);
  aBlock[4] = sub_1003324E8;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100562268;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_100055BF8((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10005666C((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
  swift_release();
  return swift_release();
}

uint64_t sub_100331E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a4;
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v21 - v11;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v13);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v15 = *(unsigned char *)(result + 24);
    uint64_t result = swift_release();
    if ((v15 & 1) == 0)
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        *(unsigned char *)(Strong + 24) = 1;
        swift_release();
      }
      uint64_t v17 = (void *)swift_allocObject();
      void v17[2] = a2;
      v17[3] = a3;
      v17[4] = a1;
      aBlock[4] = sub_100332590;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003B424;
      void aBlock[3] = &unk_1005622B8;
      _Block_copy(aBlock);
      uint64_t v23 = _swiftEmptyArrayStorage;
      sub_100055BF8((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      swift_retain();
      swift_retain();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10005666C((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      type metadata accessor for DispatchWorkItem();
      swift_allocObject();
      DispatchWorkItem.init(flags:block:)();
      swift_release();
      swift_beginAccess();
      uint64_t v18 = swift_weakLoadStrong();
      if (v18)
      {
        id v19 = *(id *)(v18 + 16);
        swift_release();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v20 = *(void (**)(char *, uint64_t))(v22 + 8);
        v20(v10, v7);
        OS_dispatch_queue.asyncAfter(deadline:execute:)();

        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v20)(v12, v7);
      }
      else
      {
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1003321DC(void (*a1)(void))
{
  a1();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 24) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_100332238()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts9Throttler_delay;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1003322E0()
{
  return type metadata accessor for Throttler();
}

uint64_t type metadata accessor for Throttler()
{
  uint64_t result = qword_1006037A0;
  if (!qword_1006037A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100332334()
{
  uint64_t result = type metadata accessor for DispatchTimeInterval();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003323DC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100332414()
{
  uint64_t v1 = type metadata accessor for DispatchTimeInterval();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1003324E8()
{
  uint64_t v1 = *(void *)(type metadata accessor for DispatchTimeInterval() - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100331E58(v2, v3, v4, v5);
}

uint64_t sub_100332550()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100332590()
{
  return sub_1003321DC(*(void (**)(void))(v0 + 16));
}

uint64_t *PodcastsStateCoordinator.shared.unsafeMutableAddressor()
{
  if (qword_1005F5AE0 != -1) {
    swift_once();
  }
  return &static PodcastsStateCoordinator.shared;
}

void PodcastsStateCoordinator.downloadEpisode(withUUID:isFromSaving:from:in:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v33 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v33 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  unint64_t v16 = Logger.logObject.getter();
  if (os_log_type_enabled(v16, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v32 = a4;
    uint64_t v18 = v17;
    uint64_t v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)uint64_t v18 = 136315650;
    id v30 = v6;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_10004B974(a1, a2, aBlock);
    uint64_t v29 = a5;
    uint64_t v31 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 1024;
    LODWORD(v34) = a3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 18) = 2080;
    uint64_t v19 = PodcastsStateChangeOrigin.description.getter();
    uint64_t v34 = sub_10004B974(v19, v20, aBlock);
    uint64_t v6 = v30;
    a1 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a5 = v29;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v15, "Downloading episode with uuid %s (isFromSaving: %{BOOL}d, origin: %s).", (uint8_t *)v18, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v32;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v33);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a5;
  void v21[3] = a1;
  v21[4] = a2;
  void v21[5] = v6;
  v21[6] = a4;
  aBlock[4] = (uint64_t)sub_10033CEAC;
  aBlock[5] = (uint64_t)v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003B424;
  void aBlock[3] = (uint64_t)&unk_100562330;
  uint64_t v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v23 = a5;
  uint64_t v24 = v6;
  swift_release();
  [v23 performBlockAndWaitWithSave:v22];
  _Block_release(v22);
  uint64_t v25 = *(void **)&v24[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway];
  NSString v26 = String._bridgeToObjectiveC()();
  [v25 downloadEpisode:v26 isFromSaving:a3 & 1];
}

id static PodcastsStateCoordinator.shared.getter()
{
  if (qword_1005F5AE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)static PodcastsStateCoordinator.shared;

  return v0;
}

void static PodcastsStateCoordinator.shared.setter(uint64_t a1)
{
  if (qword_1005F5AE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static PodcastsStateCoordinator.shared;
  static PodcastsStateCoordinator.shared = a1;
}

uint64_t (*static PodcastsStateCoordinator.shared.modify())()
{
  if (qword_1005F5AE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void PodcastsStateCoordinator.init()()
{
}

id PodcastsStateCoordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastsStateCoordinator();
  return [super dealloc];
}

void sub_100332D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  id v6 = String._bridgeToObjectiveC()();
  [v5 enableSubscriptionOnPodcastUUID:v6 from:a3];
}

void sub_100332DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *v4;
  id v8 = String._bridgeToObjectiveC()();
  [v7 unsafeEnableSubscriptionOnPodcastUUID:v8 from:a3 context:a4];
}

void sub_100332E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  id v6 = String._bridgeToObjectiveC()();
  [v5 disableSubscriptionOnPodcastUUID:v6 from:a3];
}

void sub_100332E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *v4;
  id v8 = String._bridgeToObjectiveC()();
  [v7 disableSubscriptionOnPodcastUUID:v8 from:a3 context:a4];
}

void sub_100332EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *v3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v6 disableSubscriptionsOnPodcastUUIDs:isa from:a2 context:a3];
}

void sub_100332F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void PodcastsStateCoordinator.removeShowFromRecentlyUnfollowed(forPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = [*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider] privateQueueContext];
  id v8 = (void *)swift_allocObject();
  v8[2] = v7;
  void v8[3] = a1;
  v8[4] = a2;
  v8[5] = v3;
  void v8[6] = a3;
  v12[4] = sub_10033CEC8;
  uint64_t v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10003B424;
  void v12[3] = &unk_100562380;
  uint64_t v9 = _Block_copy(v12);
  id v10 = v7;
  swift_bridgeObjectRetain();
  uint64_t v11 = v3;
  swift_release();
  [v10 performBlock:v9];
  _Block_release(v9);
}

void sub_1003330B0(void *a1, char a2, uint64_t a3)
{
  if (([a1 isBookmarked] & 1) == 0) {
    sub_100337C9C(a1, 0, 1, a2 & 1, a3);
  }
}

void PodcastsStateCoordinator.unsafeBookmarkIfNeeded(episode:shouldDownloadEpisode:from:)(void *a1, char a2, uint64_t a3)
{
  if (([a1 isBookmarked] & 1) == 0)
  {
    sub_100337C9C(a1, 0, 1, a2 & 1, a3);
  }
}

id sub_100333180(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  id result = [a1 isBookmarked];
  if (result)
  {
    return [v5 unsafeRemoveEpisodeFromBookmarks:a1 from:a2];
  }
  return result;
}

id PodcastsStateCoordinator.unsafeRemoveEpisodeFromBookmarksIfNeeded(episode:from:)(void *a1, uint64_t a2)
{
  id result = [a1 isBookmarked];
  if (result)
  {
    return [v2 unsafeRemoveEpisodeFromBookmarks:a1 from:a2];
  }
  return result;
}

id sub_100333264(uint64_t a1, char a2, uint64_t a3)
{
  return [*v3 unsafeBookmarkEpisode:a1 onTimestamp:a2 & 1 shouldDownloadEpisode:a3 from:];
}

id sub_100333284(uint64_t a1, uint64_t a2)
{
  return [*v2 unsafeRemoveEpisodeFromBookmarks:a1 from:a2];
}

void sub_10033329C()
{
}

void sub_1003332C0(uint64_t a1, unint64_t a2, char a3, uint64_t a4, void *a5)
{
}

uint64_t sub_1003332E4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10000B8F0;
  return PodcastsStateCoordinator.downloadEpisodes(with:isFromSaving:from:in:)(a1, a2, a3, a4);
}

uint64_t PodcastsStateCoordinator.downloadEpisodes(with:isFromSaving:from:in:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 56) = v4;
  *(unsigned char *)(v5 + 140) = a2;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a3;
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 72) = *(void *)(v6 - 8);
  *(void *)(v5 + 80) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  *(void *)(v5 + 88) = v7;
  *(void *)(v5 + 96) = *(void *)(v7 - 8);
  *(void *)(v5 + 104) = swift_task_alloc();
  return _swift_task_switch(sub_1003334C8, 0, 0);
}

uint64_t sub_1003334C8()
{
  uint64_t v29 = v0;
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  objc_super v2 = Logger.logObject.getter();
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(v2, v1))
  {
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v27 = *(void *)(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 88);
    int v6 = *(unsigned __int8 *)(v0 + 140);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109378;
    *(_DWORD *)(v0 + 136) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 2080;
    uint64_t v8 = PodcastsStateChangeOrigin.description.getter();
    *(void *)(v0 + 24) = sub_10004B974(v8, v9, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Downloading episodes (isFromSaving: %{BOOL}d, origin: %s).", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v27, v5);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v12 = *(void *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 80);
  unint64_t v16 = *(void **)(v0 + 56);
  uint64_t v15 = *(void *)(v0 + 64);
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v17 = *(void **)(v0 + 48);
  uint64_t v19 = *(void *)(v0 + 32);
  unint64_t v20 = (void *)swift_allocObject();
  *(void *)(v0 + 112) = v20;
  void v20[2] = v17;
  v20[3] = v19;
  v20[4] = v16;
  void v20[5] = v18;
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v14, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v15);
  id v21 = v17;
  swift_bridgeObjectRetain();
  id v22 = v16;
  id v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v23;
  uint64_t v24 = sub_100054B78((uint64_t *)&unk_100603260);
  *id v23 = v0;
  v23[1] = sub_100333790;
  uint64_t v25 = *(void *)(v0 + 80);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 16, v25, sub_10033CEE4, v20, v24);
}

uint64_t sub_100333790()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_100333A28;
  }
  else {
    uint64_t v5 = sub_100333924;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100333924()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void **)(*(void *)(v0 + 56) + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway);
    uint64_t v4 = v1 + 40;
    do
    {
      uint64_t v5 = *(unsigned __int8 *)(v0 + 140);
      swift_bridgeObjectRetain();
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v3 downloadEpisode:v6 isFromSaving:v5];

      v4 += 16;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100333A28()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100333A98(uint64_t a1, unint64_t a2, int a3, uint64_t a4)
{
}

void PodcastsStateCoordinator.cancelDownload(forEpisodeWithUUID:userInitiated:from:)(uint64_t a1, unint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = v4;
  LODWORD(v7) = a3;
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v29 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  if (os_log_type_enabled(v14, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    int v28 = v7;
    uint64_t v7 = v15;
    uint64_t v25 = swift_slowAlloc();
    aBlock[0] = v25;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v27 = v5;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_10004B974(a1, a2, aBlock);
    uint64_t v26 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 1024;
    LODWORD(v30) = v28 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 18) = 2080;
    uint64_t v16 = PodcastsStateChangeOrigin.description.getter();
    uint64_t v30 = sub_10004B974(v16, v17, aBlock);
    uint64_t v5 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v13, "Cancelling download for episode with uuid %s (userInitiated: %{BOOL}d, origin: %s).", (uint8_t *)v7, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v7) = v28;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
  uint64_t v18 = *(void **)&v5[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway];
  NSString v19 = String._bridgeToObjectiveC()();
  [v18 cancelDownloadsForEpisodeUuid:v19 userInitiated:v7 & 1];

  id v20 = [*(id *)&v5[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider] mainOrPrivateContext];
  id v21 = (void *)swift_allocObject();
  void v21[2] = v20;
  void v21[3] = a1;
  v21[4] = a2;
  void v21[5] = v5;
  v21[6] = a4;
  aBlock[4] = (uint64_t)sub_10033CF08;
  aBlock[5] = (uint64_t)v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003B424;
  void aBlock[3] = (uint64_t)&unk_1005623F8;
  id v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v23 = v20;
  uint64_t v24 = v5;
  swift_release();
  [v23 performBlockAndWaitWithSave:v22];
  _Block_release(v22);
}

void sub_100333E70(char a1, uint64_t a2)
{
}

void PodcastsStateCoordinator.cancelAllDownloads(userInitiated:from:)(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(v11, v10))
  {
    uint64_t v13 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67109378;
    LODWORD(v27) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 8) = 2080;
    uint64_t v26 = v6;
    uint64_t v14 = PodcastsStateChangeOrigin.description.getter();
    uint64_t v25 = a2;
    uint64_t v27 = sub_10004B974(v14, v15, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Cancelling all ongoing downloads (userInitiated: %{BOOL}d, origin: %s).", (uint8_t *)v13, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
    uint64_t v16 = v25;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v16 = a2;
  }
  id v17 = [*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway] cancelAllDownloadsUserInitiated:a1 & 1];
  uint64_t v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v19 = [*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider] mainOrPrivateContext];
  id v20 = (void *)swift_allocObject();
  void v20[2] = v18;
  v20[3] = v19;
  v20[4] = v3;
  void v20[5] = v16;
  aBlock[4] = (uint64_t)sub_10033CF68;
  aBlock[5] = (uint64_t)v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003B424;
  void aBlock[3] = (uint64_t)&unk_100562448;
  id v21 = _Block_copy(aBlock);
  id v22 = v19;
  id v23 = v3;
  swift_release();
  [v22 performBlockAndWaitWithSave:v21];
  _Block_release(v21);
}

void sub_1003341E8(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
}

void PodcastsStateCoordinator.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:)(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
}

void sub_100334220(void *a1)
{
}

void PodcastsStateCoordinator.unsafeRemoveFromRecoveredEpisodesIfNeeded(episode:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a1 isBookmarksMigrationRecoveredEpisode])
  {
    static Logger.podcastsStatesCoordination.getter();
    id v8 = a1;
    uint64_t v9 = Logger.logObject.getter();
    int v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, (os_log_type_t)v10))
    {
      int v31 = v10;
      uint64_t v32 = v2;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v35 = v30;
      *(_DWORD *)uint64_t v11 = 136381187;
      id v12 = [v8 title:v30];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;
      }
      else
      {
        uint64_t v14 = 0;
        uint64_t v16 = 0;
      }
      id v33 = (id)v14;
      uint64_t v34 = v16;
      sub_100054B78(&qword_1005F93A0);
      uint64_t v17 = String.init<A>(describing:)();
      id v33 = (id)sub_10004B974(v17, v18, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      id v19 = [v8 uuid];
      if (v19)
      {
        id v20 = v19;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v23 = v22;
      }
      else
      {
        uint64_t v21 = 0;
        uint64_t v23 = 0;
      }
      id v33 = (id)v21;
      uint64_t v34 = v23;
      uint64_t v24 = String.init<A>(describing:)();
      id v33 = (id)sub_10004B974(v24, v25, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 22) = 2081;
      id v33 = [v8 storeTrackId];
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      id v33 = (id)sub_10004B974(v26, v27, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v31, "Deleting from BookmarksMigrationRecoveredEpisodes episode: %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    [v8 setIsBookmarksMigrationRecoveredEpisode:0];
    id v28 = [v8 podcast];
    if (v28)
    {
      uint64_t v29 = v28;
      sub_1002FEF94(v28, 2, 4u, 3);
    }
  }
}

void sub_100334644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void PodcastsStateCoordinator.insertNewImplicitFollowIfNeeded(for:from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = (void (*)(uint64_t, void, void, void, void))a2;
  uint64_t v7 = type metadata accessor for EpisodePlayerItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  uint64_t v60 = v8;
  __chkstk_darwin();
  int v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PlayerItem();
  id v63 = *(void (**)(char *, uint64_t))(v11 - 8);
  __chkstk_darwin();
  uint64_t v62 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v61 = (char *)v48 - v13;
  __chkstk_darwin();
  uint64_t v15 = (char *)v48 - v14;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v57 = *(void *)(v16 - 8);
  uint64_t v58 = v16;
  __chkstk_darwin();
  uint64_t v64 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PodcastPlayerItem();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  PlayerItem.podcast.getter();
  char v22 = PodcastPlayerItem.isSubscribeable.getter();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (v22)
  {
    sub_10033AE48(a1, (uint64_t)v55, a3, a4);
  }
  else
  {
    uint64_t v55 = (void (*)(uint64_t, void, void, void, void))a3;
    uint64_t v56 = a4;
    static Logger.podcastsStatesCoordination.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    uint64_t v24 = (void (*)(char *, uint64_t, uint64_t))*((void *)v63 + 2);
    v24(v15, a1, v11);
    v24(v61, a1, v11);
    uint64_t v54 = a1;
    v24(v62, a1, v11);
    unint64_t v25 = Logger.logObject.getter();
    if (os_log_type_enabled(v25, v23))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      v67[0] = v53;
      *(_DWORD *)uint64_t v26 = 136381187;
      int v52 = v23;
      PlayerItem.episode.getter();
      uint64_t v27 = EpisodePlayerItem.title.getter();
      uint64_t v29 = v28;
      uint64_t v30 = v59;
      BOOL v49 = *(void (**)(char *, uint64_t))(v60 + 8);
      os_log_t v51 = v25;
      v49(v10, v59);
      uint64_t v65 = v27;
      uint64_t v66 = v29;
      uint64_t v50 = sub_100054B78(&qword_1005F93A0);
      uint64_t v31 = String.init<A>(describing:)();
      uint64_t v65 = sub_10004B974(v31, v32, v67);
      v48[1] = &v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v33 = (void (*)(char *, uint64_t))*((void *)v63 + 1);
      v33(v15, v11);
      id v63 = v33;
      *(_WORD *)(v26 + 12) = 2049;
      v48[0] = v26 + 14;
      uint64_t v34 = v61;
      PlayerItem.episode.getter();
      uint64_t v35 = EpisodePlayerItem.adamID.getter();
      uint64_t v36 = v49;
      v49(v10, v30);
      v33(v34, v11);
      uint64_t v65 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 22) = 2081;
      uint64_t v61 = (char *)(v26 + 24);
      uint64_t v37 = v62;
      PlayerItem.episode.getter();
      uint64_t v38 = EpisodePlayerItem.guid.getter();
      uint64_t v40 = v39;
      v36(v10, v30);
      uint64_t v41 = v60;
      uint64_t v65 = v38;
      uint64_t v66 = v40;
      uint64_t v42 = String.init<A>(describing:)();
      uint64_t v65 = sub_10004B974(v42, v43, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v63(v37, v11);
      os_log_t v44 = v51;
      _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v52, "Skip inserting new Implicit Follow for currently playing episode because the show is \"Not Subscribeable\" -- i.e. from a news diggest or some other type of 'fake' show: %{private}s, adamID: %{private}lld, guid: %{private}s.", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v57 + 8))(v64, v58);
      uint64_t v45 = v55;
    }
    else
    {
      char v46 = (void (*)(char *, uint64_t))*((void *)v63 + 1);
      v46(v61, v11);
      v46(v15, v11);
      v46(v62, v11);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v64, v58);
      uint64_t v45 = v55;
      uint64_t v30 = v59;
      uint64_t v41 = v60;
    }
    PlayerItem.episode.getter();
    uint64_t v47 = EpisodePlayerItem.adamID.getter();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v30);
    v45(v47, 0, 0, 0, 0);
  }
}

id sub_100334CEC(uint64_t a1, uint64_t a2)
{
  return [*v2 unsafeEpisodePlayedBeyondThresholdForFirstTime:a1 from:a2];
}

id sub_100334D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return [*v4 unsafeMark:a1 as:a2 in:a3 from:a4];
}

id sub_100334D24(uint64_t a1)
{
  return [*v1 unsafeDidBumpLastDatePlayedFor:a1];
}

id sub_100334D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PodcastsStateCoordinator.unsafeInsertNewImplicitFollow(for:from:in:)(a1, a2, a3);
}

id PodcastsStateCoordinator.unsafeInsertNewImplicitFollow(for:from:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v81 = a2;
  uint64_t v5 = type metadata accessor for RemoteNonFollowedShow();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v84 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v83 = (char *)&v73 - v8;
  __chkstk_darwin();
  int v10 = (char *)&v73 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v73 - v11;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v86 = v13;
  uint64_t v87 = v14;
  __chkstk_darwin();
  uint64_t v85 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v73 - v16;
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v19(v12, a1, v5);
  uint64_t v77 = v19;
  v19(v10, a1, v5);
  uint64_t v78 = Logger.logObject.getter();
  BOOL v20 = os_log_type_enabled(v78, v18);
  uint64_t v82 = a1;
  uint64_t v80 = v6;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    os_log_t v75 = (os_log_t)swift_slowAlloc();
    os_log_t v90 = v75;
    *(_DWORD *)uint64_t v21 = 134283779;
    LODWORD(v74) = v18;
    uint64_t v22 = RemoteNonFollowedShow.storeCollectionId.getter();
    uint64_t v76 = a3;
    os_log_type_t v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v23(v12, v5);
    id v89 = (id)v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2081;
    uint64_t v24 = RemoteNonFollowedShow.feedURL.getter();
    id v89 = (id)sub_10004B974(v24, v25, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v79 = v23;
    v23(v10, v5);
    uint64_t v26 = v78;
    _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v74, "Inserting new show (in Store state) for RemoteNonFollowedShow with adamID: %{private}lld, feedURL: %{private}s.", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v82;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v27(v12, v5);
    uint64_t v79 = v27;
    v27(v10, v5);
  }
  uint64_t v28 = v17;
  uint64_t v29 = v86;
  uint64_t v78 = *(NSObject **)(v87 + 8);
  ((void (*)(char *, uint64_t))v78)(v28, v86);
  sub_100041A98((void *)(v88 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore), *(void *)(v88 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore + 24));
  uint64_t v30 = (void *)dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertPodcastInStoreState(in:for:)();
  uint64_t v31 = v85;
  static Logger.podcastsStatesCoordination.getter();
  int v32 = static os_log_type_t.default.getter();
  id v33 = v30;
  uint64_t v34 = v83;
  uint64_t v35 = v77;
  v77(v83, a1, v5);
  uint64_t v36 = v84;
  v35(v84, a1, v5);
  id v37 = v33;
  uint64_t v38 = Logger.logObject.getter();
  LODWORD(v77) = v32;
  if (os_log_type_enabled(v38, (os_log_type_t)v32))
  {
    uint64_t v76 = v5;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    os_log_t v90 = (os_log_t)v74;
    *(_DWORD *)uint64_t v39 = 136382467;
    id v40 = [v37 title];
    os_log_t v75 = v38;
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v44 = v43;
    }
    else
    {
      unint64_t v44 = 0xEA00000000003E65;
      uint64_t v42 = 0x6C746974206F6E3CLL;
    }
    uint64_t v48 = 0x3E7974706D653CLL;
    id v89 = (id)sub_10004B974(v42, v44, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    id v49 = [v37 uuid];
    if (v49)
    {
      uint64_t v50 = v49;
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v53 = v52;
    }
    else
    {
      unint64_t v53 = 0xE700000000000000;
      uint64_t v51 = 0x3E7974706D653CLL;
    }
    id v89 = (id)sub_10004B974(v51, v53, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 22) = 2080;
    id v89 = [v37 managedObjectContext];
    sub_100054B78((uint64_t *)&unk_100603900);
    uint64_t v54 = String.init<A>(describing:)();
    id v89 = (id)sub_10004B974(v54, v55, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 32) = 2049;
    id v56 = [v37 storeCollectionId];

    id v89 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v39 + 42) = 2081;
    id v57 = [v37 feedURL];
    if (v57)
    {
      uint64_t v58 = v57;
      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v60 = v59;
    }
    else
    {
      unint64_t v60 = 0xE700000000000000;
    }
    a1 = v82;
    id v89 = (id)sub_10004B974(v48, v60, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 52) = 2049;
    uint64_t v61 = v83;
    uint64_t v62 = RemoteNonFollowedShow.storeCollectionId.getter();
    id v63 = v61;
    uint64_t v64 = v76;
    uint64_t v65 = v79;
    v79(v63, v76);
    id v89 = (id)v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v39 + 62) = 2081;
    uint64_t v66 = v84;
    uint64_t v67 = RemoteNonFollowedShow.feedURL.getter();
    id v89 = (id)sub_10004B974(v67, v68, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v65(v66, v64);
    *(_WORD *)(v39 + 72) = 2080;
    uint64_t v47 = v81;
    uint64_t v69 = PodcastsStateChangeOrigin.description.getter();
    id v89 = (id)sub_10004B974(v69, v70, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v71 = v75;
    _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v77, "Implicitly Following previously inserted Store podcast: %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s; For RemoteNonFollowedShow with adamID: %{private}lld, feedURL: %{private}s; From origin: %s.",
      (uint8_t *)v39,
      0x52u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(char *, uint64_t))v78)(v85, v86);
  }
  else
  {
    uint64_t v45 = v34;
    char v46 = v79;
    v79(v45, v5);

    v46(v36, v5);
    ((void (*)(char *, uint64_t))v78)(v31, v29);
    uint64_t v47 = v81;
  }
  sub_1002FEF94(v37, 3, 4u, v47);
  sub_10033CF74(v37, a1);
  return v37;
}

id sub_1003356E0(void *a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  return PodcastsStateCoordinator.unsafeImplicitlyFollowIfNeeded(_:for:from:)(a1, a2, a3);
}

id PodcastsStateCoordinator.unsafeImplicitlyFollowIfNeeded(_:for:from:)(void *a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v131 = a3;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v117 = *(void *)(v5 - 8);
  uint64_t v118 = v5;
  __chkstk_darwin();
  os_log_type_t v116 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RemoteNonFollowedShow();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  unint64_t v123 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v127 = (char *)&v113 - v10;
  __chkstk_darwin();
  uint64_t v12 = (void (*)(char *, uint64_t))((char *)&v113 - v11);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v113 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v129 = *(void *)(v15 - 8);
  uint64_t v130 = v15;
  __chkstk_darwin();
  uint64_t v124 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  os_log_type_t v18 = (char *)&v113 - v17;
  static Logger.podcastsStatesCoordination.getter();
  int v19 = static os_log_type_t.default.getter();
  uint64_t v128 = v8;
  BOOL v20 = *(NSObject **)(v8 + 16);
  id v21 = a1;
  ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v20)(v14, a2, v7);
  os_log_type_t v126 = a2;
  unint64_t v121 = v20;
  uint64_t v122 = v8 + 16;
  ((void (*)(void (*)(char *, uint64_t), void (*)(char *, uint64_t), uint64_t))v20)(v12, a2, v7);
  uint64_t v22 = v18;
  id v23 = v21;
  uint64_t v24 = Logger.logObject.getter();
  if (os_log_type_enabled(v24, (os_log_type_t)v19))
  {
    unint64_t v25 = v14;
    os_log_t v115 = v24;
    uint64_t v26 = v12;
    uint64_t v120 = v7;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v113 = swift_slowAlloc();
    v133[0] = v113;
    *(_DWORD *)uint64_t v27 = 136382467;
    id v28 = [v23 title:v113];
    int v114 = v19;
    char v119 = v26;
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v32 = v31;
    }
    else
    {
      uint64_t v30 = 0x6C746974206F6E3CLL;
      unint64_t v32 = 0xEA00000000003E65;
    }
    uint64_t v39 = 0x3E7974706D653CLL;
    id v132 = (id)sub_10004B974(v30, v32, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    id v40 = [v23 uuid];
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v44 = v43;
    }
    else
    {
      unint64_t v44 = 0xE700000000000000;
      uint64_t v42 = 0x3E7974706D653CLL;
    }
    id v132 = (id)sub_10004B974(v42, v44, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2080;
    id v132 = [v23 managedObjectContext];
    sub_100054B78((uint64_t *)&unk_100603900);
    uint64_t v45 = String.init<A>(describing:)();
    id v132 = (id)sub_10004B974(v45, v46, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 32) = 2049;
    id v47 = [v23 storeCollectionId];

    id v132 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v27 + 42) = 2081;
    id v48 = [v23 feedURL];
    if (v48)
    {
      id v49 = v48;
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v51 = v50;
    }
    else
    {
      unint64_t v51 = 0xE700000000000000;
    }
    uint64_t v52 = v128;
    id v132 = (id)sub_10004B974(v39, v51, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 52) = 2049;
    uint64_t v53 = RemoteNonFollowedShow.storeCollectionId.getter();
    uint64_t v54 = *(void (**)(char *, uint64_t))(v52 + 8);
    uint64_t v7 = v120;
    v54(v25, v120);
    id v132 = (id)v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 62) = 2081;
    unint64_t v55 = (char *)v119;
    uint64_t v56 = RemoteNonFollowedShow.feedURL.getter();
    id v132 = (id)sub_10004B974(v56, v57, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    char v119 = v54;
    v54(v55, v7);
    *(_WORD *)(v27 + 72) = 2080;
    uint64_t v38 = v131;
    uint64_t v58 = PodcastsStateChangeOrigin.description.getter();
    id v132 = (id)sub_10004B974(v58, v59, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v60 = v115;
    _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v114, "Implicitly Following if needed podcast: %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s; For RemoteNonFollowedShow with adamID: %{private}lld, feedURL: %{private}s; From origin: %s.",
      (uint8_t *)v27,
      0x52u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v34 = *(void (**)(char *, uint64_t))(v129 + 8);
    v34(v22, v130);
    uint64_t v37 = v125;
    uint64_t v35 = (uint64_t)v126;
    uint64_t v36 = v127;
  }
  else
  {
    id v33 = *(void (**)(char *, uint64_t))(v128 + 8);
    v33(v14, v7);

    char v119 = v33;
    v33((char *)v12, v7);

    uint64_t v34 = *(void (**)(char *, uint64_t))(v129 + 8);
    v34(v22, v130);
    uint64_t v35 = (uint64_t)v126;
    uint64_t v36 = v127;
    uint64_t v37 = v125;
    uint64_t v38 = v131;
  }
  uint64_t v61 = *(void *)(v37 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateTransitions);
  sub_1002FEF94(v23, 3, 4u, v38);
  [v23 lastDatePlayed];
  double v63 = v62;
  sub_10033CF74(v23, v35);
  id result = [v23 lastDatePlayed];
  if (v63 != v65)
  {
    os_log_type_t v126 = v34;
    uint64_t v66 = v124;
    static Logger.podcastsStatesCoordination.getter();
    int v67 = static os_log_type_t.default.getter();
    id v68 = v23;
    os_log_t v69 = v121;
    ((void (*)(char *, uint64_t, uint64_t))v121)(v36, v35, v7);
    unint64_t v70 = v123;
    ((void (*)(char *, uint64_t, uint64_t))v69)(v123, v35, v7);
    id v71 = v68;
    uint64_t v72 = Logger.logObject.getter();
    LODWORD(v125) = v67;
    if (os_log_type_enabled(v72, (os_log_type_t)v67))
    {
      unint64_t v121 = v72;
      uint64_t v122 = v61;
      uint64_t v120 = v7;
      uint64_t v73 = swift_slowAlloc();
      os_log_t v115 = (os_log_t)swift_slowAlloc();
      v133[0] = (uint64_t)v115;
      *(_DWORD *)uint64_t v73 = 136382979;
      uint64_t v74 = v116;
      Date.init(timeIntervalSinceReferenceDate:)();
      sub_10005E4F8(&qword_1005FDB68, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v75 = v118;
      uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v78 = v77;
      uint64_t v79 = *(void (**)(char *, uint64_t))(v117 + 8);
      v79(v74, v75);
      id v132 = (id)sub_10004B974(v76, v78, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2081;
      [v71 lastDatePlayed];
      Date.init(timeIntervalSinceReferenceDate:)();
      uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v82 = v81;
      v79(v74, v75);
      id v132 = (id)sub_10004B974(v80, v82, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 22) = 2081;
      id v83 = [v71 title];
      if (v83)
      {
        uint64_t v84 = v83;
        uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v87 = v86;
      }
      else
      {
        uint64_t v85 = 0x6C746974206F6E3CLL;
        unint64_t v87 = 0xEA00000000003E65;
      }
      uint64_t v90 = 0x3E7974706D653CLL;
      id v132 = (id)sub_10004B974(v85, v87, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 32) = 2080;
      id v91 = [v71 uuid];
      uint64_t v92 = v120;
      if (v91)
      {
        uint64_t v93 = v91;
        uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v96 = v95;
      }
      else
      {
        unint64_t v96 = 0xE700000000000000;
        uint64_t v94 = 0x3E7974706D653CLL;
      }
      id v132 = (id)sub_10004B974(v94, v96, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 42) = 2080;
      id v132 = [v71 managedObjectContext];
      sub_100054B78((uint64_t *)&unk_100603900);
      uint64_t v97 = String.init<A>(describing:)();
      id v132 = (id)sub_10004B974(v97, v98, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 52) = 2049;
      id v99 = [v71 storeCollectionId];

      id v132 = v99;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v73 + 62) = 2081;
      id v100 = [v71 feedURL];
      if (v100)
      {
        unint64_t v101 = v100;
        uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v103 = v102;
      }
      else
      {
        unint64_t v103 = 0xE700000000000000;
      }
      id v132 = (id)sub_10004B974(v90, v103, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 72) = 2049;
      Swift::Int v104 = v127;
      uint64_t v105 = RemoteNonFollowedShow.storeCollectionId.getter();
      uint64_t v106 = v119;
      v119(v104, v92);
      id v132 = (id)v105;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v73 + 82) = 2081;
      id v107 = v123;
      uint64_t v108 = RemoteNonFollowedShow.feedURL.getter();
      id v132 = (id)sub_10004B974(v108, v109, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v106(v107, v92);
      *(_WORD *)(v73 + 92) = 2080;
      uint64_t v89 = v131;
      uint64_t v110 = PodcastsStateChangeOrigin.description.getter();
      id v132 = (id)sub_10004B974(v110, v111, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v112 = v121;
      _os_log_impl((void *)&_mh_execute_header, v121, (os_log_type_t)v125, "Implicit Follow did updated lastDatePlayed from %{private}s to %{private}s; Podcast: %{private}s, uuid: %s, MOC:"
        " %s, adamID: %{private}lld, feedURL: %{private}s; For RemoteNonFollowedShow with adamID: %{private}lld, feedURL:"
        " %{private}s; From origin: %s.",
        (uint8_t *)v73,
        0x66u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v126(v124, v130);
    }
    else
    {
      uint64_t v88 = v119;
      v119(v36, v7);

      v88(v70, v7);
      v126(v66, v130);
      uint64_t v89 = v131;
    }
    return (id)sub_1002FEF94(v71, 8, 4u, v89);
  }
  return result;
}

uint64_t sub_100336594(void *a1, uint64_t a2)
{
  return sub_1002FEF94(a1, 4, 4u, a2);
}

uint64_t PodcastsStateCoordinator.unsafeRemoveImplicitFollowIfNeeded(_:from:)(void *a1, uint64_t a2)
{
  return sub_1002FEF94(a1, 4, 4u, a2);
}

void PodcastsStateCoordinator.enableSubscription(onPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = [*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider] mainOrPrivateContext];
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v3;
  void v8[3] = a1;
  v8[4] = a2;
  v8[5] = a3;
  void v8[6] = v7;
  v12[4] = sub_10033D77C;
  uint64_t v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10003B424;
  void v12[3] = &unk_100562498;
  uint64_t v9 = _Block_copy(v12);
  uint64_t v10 = v3;
  swift_bridgeObjectRetain();
  id v11 = v7;
  swift_release();
  [v11 performBlockAndWaitWithSave:v9];
  _Block_release(v9);
}

void PodcastsStateCoordinator.unsafeEnableSubscription(onPodcastUUID:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a4 podcastForUuid:v6];

  if (v7)
  {
    sub_100336848(v7, a3);
    [a4 saveInCurrentBlock];
  }
}

id sub_100336848(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  id v10 = a1;
  id v11 = Logger.logObject.getter();
  if (os_log_type_enabled(v11, v9))
  {
    uint64_t v39 = v2;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v43 = v37;
    *(_DWORD *)uint64_t v12 = 136315907;
    uint64_t v40 = a2;
    uint64_t v13 = PodcastsStateChangeOrigin.description.getter();
    uint64_t v41 = sub_10004B974(v13, v14, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2081;
    id v15 = [v10 title];
    uint64_t v38 = v5;
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v19 = 0;
    }
    uint64_t v41 = v17;
    uint64_t v42 = v19;
    sub_100054B78(&qword_1005F93A0);
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t v41 = sub_10004B974(v20, v21, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2080;
    id v22 = [v10 uuid];
    if (v22)
    {
      id v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    uint64_t v41 = v24;
    uint64_t v42 = v26;
    uint64_t v27 = String.init<A>(describing:)();
    uint64_t v41 = sub_10004B974(v27, v28, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 32) = 2081;
    uint64_t v29 = MTPodcast.adamId.getter();
    if (v30)
    {
      uint64_t v31 = 0;
      uint64_t v32 = 0;
    }
    else
    {
      uint64_t v41 = v29;
      sub_1001A5874();
      uint64_t v31 = BinaryInteger.description.getter();
    }
    uint64_t v41 = v31;
    uint64_t v42 = v32;
    uint64_t v33 = String.init<A>(describing:)();
    uint64_t v41 = sub_10004B974(v33, v34, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v9, "Following podcast (origin: %s): %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v38);
    a2 = v40;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_1002FEF94(v10, (uint64_t)[v10 syncType], 0, a2);
  [v10 setNeedsArtworkUpdate:1];
  [v10 applyFollowedShowSettingsFor:MTPodcast.showType.getter()];
  [v10 resetGoDarkWithReason:5];
  [v10 setLastRemovedFromUpNextDate:0.0];
  return [v10 setLastUnfollowedDate:0.0];
}

void PodcastsStateCoordinator.disableSubscription(onPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider] mainOrPrivateContext];
  [v3 disableSubscriptionOnPodcastUUID:v5 from:a3 context:v6];
}

void PodcastsStateCoordinator.disableSubscription(onPodcastUUID:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  os_log_type_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a4;
  v9[3] = a1;
  v9[4] = a2;
  void v9[5] = v4;
  v9[6] = a3;
  v13[4] = sub_10033D7F0;
  v13[5] = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10003B424;
  void v13[3] = &unk_1005624E8;
  id v10 = _Block_copy(v13);
  id v11 = a4;
  swift_bridgeObjectRetain();
  id v12 = v4;
  swift_release();
  [v11 performBlockAndWaitWithSave:v10];
  _Block_release(v10);
}

void sub_100337018(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [a1 podcastForUuid:v7];

  if (v8)
  {
    sub_1003370C4(v8, a5, a1);
  }
}

void sub_1003370C4(void *a1, uint64_t a2, void *a3)
{
  unint64_t v59 = a3;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  id v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  int v13 = static os_log_type_t.default.getter();
  id v14 = a1;
  id v15 = Logger.logObject.getter();
  int v58 = v13;
  if (os_log_type_enabled(v15, (os_log_type_t)v13))
  {
    os_log_t v52 = v15;
    uint64_t v53 = v10;
    uint64_t v54 = v9;
    uint64_t v56 = v6;
    uint64_t v57 = v5;
    uint64_t v16 = a2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315907;
    uint64_t v55 = v16;
    uint64_t v18 = PodcastsStateChangeOrigin.description.getter();
    uint64_t v60 = sub_10004B974(v18, v19, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2081;
    id v20 = [v14 title];
    if (v20)
    {
      unint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;
    }
    else
    {
      uint64_t v22 = 0;
      uint64_t v24 = 0;
    }
    uint64_t v60 = v22;
    uint64_t v61 = v24;
    sub_100054B78(&qword_1005F93A0);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v60 = sub_10004B974(v26, v27, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    id v28 = [v14 uuid];
    uint64_t v29 = v53;
    if (v28)
    {
      char v30 = v28;
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;
    }
    else
    {
      uint64_t v31 = 0;
      uint64_t v33 = 0;
    }
    uint64_t v60 = v31;
    uint64_t v61 = v33;
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t v60 = sub_10004B974(v34, v35, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 32) = 2081;
    uint64_t v36 = MTPodcast.adamId.getter();
    if (v37)
    {
      uint64_t v38 = 0;
      uint64_t v39 = 0;
    }
    else
    {
      uint64_t v60 = v36;
      sub_1001A5874();
      uint64_t v38 = BinaryInteger.description.getter();
    }
    uint64_t v25 = v59;
    uint64_t v60 = v38;
    uint64_t v61 = v39;
    uint64_t v40 = String.init<A>(describing:)();
    uint64_t v60 = sub_10004B974(v40, v41, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v42 = v52;
    _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v58, "Unfollowing podcast (origin: %s): %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v17, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v54);
    uint64_t v6 = v56;
    uint64_t v5 = v57;
    a2 = v55;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v25 = v59;
  }
  sub_1002FEF94(v14, (uint64_t)[v14 syncType], 1u, a2);
  [v14 applyUnfollowedShowSettings];
  Date.init()();
  Date.timeIntervalSinceReferenceDate.getter();
  double v44 = v43;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  [v14 setLastRemovedFromUpNextDate:v44];
  [v14 setLastUnfollowedDate:v44];
  id v45 = [v14 nextEpisodeUuid];
  if (v45)
  {
    unint64_t v46 = v45;
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v49 = v48;
    swift_bridgeObjectRelease();
    uint64_t v50 = HIBYTE(v49) & 0xF;
    if ((v49 & 0x2000000000000000) == 0) {
      uint64_t v50 = v47 & 0xFFFFFFFFFFFFLL;
    }
    if (v50)
    {
      [v14 setNextEpisodeUuid:0];
      id v51 = [v25 episodeForUuid:v46];

      if (!v51) {
        return;
      }
      [v51 setListenNowEpisode:0];
      unint64_t v46 = v51;
    }
  }
}

void PodcastsStateCoordinator.disableSubscriptions(onPodcastUUIDs:from:context:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a3;
  v7[3] = a1;
  v7[4] = v3;
  void v7[5] = a2;
  v11[4] = sub_10033D80C;
  v11[5] = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_10003B424;
  v11[3] = &unk_100562538;
  id v8 = _Block_copy(v11);
  id v9 = a3;
  swift_bridgeObjectRetain();
  id v10 = v3;
  swift_release();
  [v9 performBlockAndWaitWithSave:v8];
  _Block_release(v8);
}

void sub_1003378BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)kMTPodcastEntityName;
  uint64_t v7 = self;
  id v8 = v6;
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1000505EC(v9);
  swift_bridgeObjectRelease();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v7 predicateForPodcastUuids:isa];

  id v12 = [a1 objectsInEntity:v8 predicate:v11 sortDescriptors:0];
  if (!v12) {
    return;
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F7130);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v14 = (unint64_t)sub_1003E4610(v13);
  swift_bridgeObjectRelease();
  if (!v14) {
    return;
  }
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
LABEL_5:
      if (v15 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v15; ++i)
      {
        if ((v14 & 0xC000000000000001) != 0) {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v17 = *(id *)(v14 + 8 * i + 32);
        }
        uint64_t v18 = v17;
        sub_1003370C4(v17, a4, a1);
      }
    }
  }

  swift_bridgeObjectRelease();
}

void sub_100337BF0(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [a1 podcastForUuid:v2];

  if (v3)
  {
    [v3 setLastUnfollowedDate:0.0];
    [a1 saveInCurrentBlock];
  }
}

void sub_100337C9C(void *a1, void *a2, int a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  int v87 = a4;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v85 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v77 - v14;
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  id v17 = a1;
  uint64_t v18 = Logger.logObject.getter();
  if (os_log_type_enabled(v18, v16))
  {
    unint64_t v78 = v15;
    os_log_t v81 = v18;
    uint64_t v82 = v11;
    uint64_t v86 = v12;
    uint64_t v84 = v6;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136316163;
    uint64_t v80 = (uint64_t)a2;
    id v88 = a2;
    LODWORD(v79) = a3;
    LOBYTE(v89) = a3 & 1;
    sub_100054B78(&qword_1005FC2B0);
    uint64_t v20 = String.init<A>(describing:)();
    id v88 = (id)sub_10004B974(v20, v21, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v22 = PodcastsStateChangeOrigin.description.getter();
    id v88 = (id)sub_10004B974(v22, v23, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2081;
    id v24 = [v17 title];
    uint64_t v83 = a5;
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v28 = 0;
    }
    uint64_t v31 = v78;
    id v88 = (id)v26;
    uint64_t v89 = v28;
    sub_100054B78(&qword_1005F93A0);
    uint64_t v32 = String.init<A>(describing:)();
    id v88 = (id)sub_10004B974(v32, v33, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 32) = 2080;
    id v34 = [v17 uuid];
    if (v34)
    {
      unint64_t v35 = v34;
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v38 = v37;
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v38 = 0;
    }
    id v88 = (id)v36;
    uint64_t v89 = v38;
    uint64_t v39 = String.init<A>(describing:)();
    id v88 = (id)sub_10004B974(v39, v40, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 42) = 2081;
    id v88 = [v17 storeTrackId];
    uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
    id v88 = (id)sub_10004B974(v41, v42, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v43 = v81;
    _os_log_impl((void *)&_mh_execute_header, v81, v16, "Bookmarking episode on timestamp %s (origin: %s): %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v19, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v12 = v86;
    uint64_t v29 = v82;
    os_log_t v81 = *(os_log_t *)(v86 + 8);
    ((void (*)(char *, uint64_t))v81)(v31, v82);
    a5 = v83;
    uint64_t v6 = v84;
    char v30 = v87;
    a2 = (void *)v80;
    if (v79) {
      goto LABEL_11;
    }
LABEL_5:
    [v17 markAsBookmarkedOnTimestamp:*(double *)&a2];
    goto LABEL_12;
  }

  os_log_t v81 = *(os_log_t *)(v12 + 8);
  ((void (*)(char *, uint64_t))v81)(v15, v11);
  uint64_t v29 = v11;
  char v30 = v87;
  if ((a3 & 1) == 0) {
    goto LABEL_5;
  }
LABEL_11:
  [v17 markAsBookmarked];
LABEL_12:
  uint64_t v44 = a5;
  id v45 = [v17 podcast];
  if (v45)
  {
    unint64_t v46 = v45;
    sub_1002FEF94(v45, (uint64_t)[v17 bookmarksSyncType], 2u, a5);
  }
  if (v30)
  {
    id v47 = [v17 uuid];
    if (v47)
    {
      unint64_t v48 = v47;
      uint64_t v86 = v12;
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v51 = v50;

      id v52 = [v17 managedObjectContext];
      if (v52)
      {
        uint64_t v53 = v52;
        if (([v17 isDownloaded] & 1) == 0 && objc_msgSend(v17, "isEntitled"))
        {
          uint64_t v54 = v85;
          static Logger.podcastsStatesCoordination.getter();
          int v55 = static os_log_type_t.default.getter();
          id v56 = v17;
          uint64_t v57 = Logger.logObject.getter();
          int v87 = v55;
          if (os_log_type_enabled(v57, (os_log_type_t)v55))
          {
            os_log_t v79 = v57;
            uint64_t v82 = v29;
            uint64_t v58 = swift_slowAlloc();
            uint64_t v90 = swift_slowAlloc();
            *(_DWORD *)uint64_t v58 = 136381187;
            id v59 = [v56 title];
            uint64_t v83 = v44;
            uint64_t v84 = v6;
            uint64_t v80 = v49;
            if (v59)
            {
              uint64_t v60 = v59;
              uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v63 = v62;
            }
            else
            {
              uint64_t v61 = 0;
              uint64_t v63 = 0;
            }
            os_log_t v64 = v81;
            id v88 = (id)v61;
            uint64_t v89 = v63;
            sub_100054B78(&qword_1005F93A0);
            uint64_t v65 = String.init<A>(describing:)();
            id v88 = (id)sub_10004B974(v65, v66, &v90);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v58 + 12) = 2080;
            id v67 = [v56 uuid];
            if (v67)
            {
              id v68 = v67;
              uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v71 = v70;
            }
            else
            {
              uint64_t v69 = 0;
              uint64_t v71 = 0;
            }
            id v88 = (id)v69;
            uint64_t v89 = v71;
            uint64_t v72 = String.init<A>(describing:)();
            id v88 = (id)sub_10004B974(v72, v73, &v90);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v58 + 22) = 2081;
            id v88 = [v56 storeTrackId];
            uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter();
            id v88 = (id)sub_10004B974(v74, v75, &v90);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            os_log_t v76 = v79;
            _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v87, "Automatically downloading recently saved episode %{private}s uuid: %s, adamID: %{private}s.", (uint8_t *)v58, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            ((void (*)(char *, uint64_t))v64)(v85, v82);
            uint64_t v44 = v83;
            uint64_t v49 = v80;
          }
          else
          {

            ((void (*)(char *, uint64_t))v81)(v54, v29);
          }
          PodcastsStateCoordinator.downloadEpisode(withUUID:isFromSaving:from:in:)(v49, v51, 1, v44, v53);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
}

void PodcastsStateCoordinator.unsafeBookmark(episode:on:shouldDownloadEpisode:from:)(void *a1, int a2, uint64_t a3, double a4)
{
}

void PodcastsStateCoordinator.unsafeRemoveEpisodeFromBookmarks(episode:from:)(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  id v10 = a1;
  uint64_t v11 = Logger.logObject.getter();
  if (os_log_type_enabled(v11, v9))
  {
    uint64_t v36 = v2;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v40 = v34;
    *(_DWORD *)uint64_t v12 = 136315907;
    uint64_t v37 = a2;
    uint64_t v13 = PodcastsStateChangeOrigin.description.getter();
    id v38 = (id)sub_10004B974(v13, v14, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2081;
    id v15 = [v10 title];
    uint64_t v35 = v5;
    if (v15)
    {
      os_log_type_t v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v19 = 0;
    }
    id v38 = (id)v17;
    uint64_t v39 = v19;
    sub_100054B78(&qword_1005F93A0);
    uint64_t v20 = String.init<A>(describing:)();
    id v38 = (id)sub_10004B974(v20, v21, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2080;
    id v22 = [v10 uuid];
    if (v22)
    {
      unint64_t v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    id v38 = (id)v24;
    uint64_t v39 = v26;
    uint64_t v27 = String.init<A>(describing:)();
    id v38 = (id)sub_10004B974(v27, v28, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 32) = 2081;
    id v38 = [v10 storeTrackId];
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
    id v38 = (id)sub_10004B974(v29, v30, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v9, "Removing Bookmark for episode (origin: %s): %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v35);
    a2 = v37;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  [v10 markAsUnbookmarked];
  id v31 = [v10 podcast];
  if (v31)
  {
    uint64_t v32 = v31;
    sub_1002FEF94(v31, (uint64_t)[v10 bookmarksSyncType], 3u, a2);
  }
}

uint64_t sub_100338AB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EpisodeStateChanges.updated.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100338AE4()
{
  return Sequence.publisher.getter();
}

uint64_t sub_100338B68()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100338BA0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    sub_100338C04(a1);
  }
}

void sub_100338BFC(uint64_t a1)
{
}

uint64_t sub_100338C04(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005FBC48);
  __chkstk_darwin(v2 - 8);
  unint64_t v75 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PodcastStateModel();
  os_log_t v81 = *(void (**)(void, void))(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v72 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = v6;
  __chkstk_darwin(v5);
  unint64_t v78 = (char *)&v64 - v7;
  uint64_t v8 = type metadata accessor for EpisodeStateModel();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v77 = (void (*)(char *, uint64_t))((char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v64 - v13;
  __chkstk_darwin(v12);
  os_log_type_t v16 = (char *)&v64 - v15;
  uint64_t v17 = type metadata accessor for Logger();
  os_log_t v79 = *(void **)(v17 - 8);
  uint64_t v80 = (void (*)(void, void, void))v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v74 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v64 - v20;
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23(v16, a1, v8);
  uint64_t v76 = a1;
  uint64_t v69 = (void (*)(uint64_t, uint64_t, uint64_t))v23;
  v23(v14, a1, v8);
  uint64_t v24 = Logger.logObject.getter();
  BOOL v25 = os_log_type_enabled(v24, v22);
  uint64_t v73 = v9;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    int v66 = v22;
    uint64_t v27 = v26;
    uint64_t v67 = swift_slowAlloc();
    aBlock[0] = v67;
    *(_DWORD *)uint64_t v27 = 136380931;
    uint64_t v64 = v27 + 4;
    os_log_t v65 = v24;
    EpisodeStateModel.ids.getter();
    sub_10033EFC4();
    uint64_t v28 = Set.description.getter();
    uint64_t v68 = v4;
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v83 = sub_10004B974(v28, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v31 = *(void (**)(char *, uint64_t))(v9 + 8);
    v31(v16, v8);
    *(_WORD *)(v27 + 12) = 1024;
    int v32 = EpisodeStateModel.isDownloaded.getter() & 1;
    v31(v14, v8);
    uint64_t v4 = v68;
    LODWORD(v83) = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v65;
    _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v66, "Update on download state of episode with IDs: %{private}s; isDownloaded: %{BOOL}d.",
      (uint8_t *)v27,
      0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v31 = *(void (**)(char *, uint64_t))(v9 + 8);
    v31(v14, v8);
    v31(v16, v8);
  }

  uint64_t v33 = (void (*)(void, void))v79[1];
  uint64_t v34 = v21;
  uint64_t v35 = v80;
  v33(v34, v80);
  uint64_t v36 = v76;
  uint64_t v37 = (uint64_t)v77;
  uint64_t v38 = (uint64_t)v75;
  uint64_t v77 = (void (*)(char *, uint64_t))((EpisodeStateModel.isDownloaded.getter() & 1) == 0);
  EpisodeStateModel.podcastStateModel.getter();
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v81 + 6))(v38, 1, v4) == 1)
  {
    os_log_t v81 = v33;
    sub_100301E9C(v38);
    uint64_t v39 = v74;
    static Logger.podcastsStatesCoordination.getter();
    v69(v37, v36, v8);
    uint64_t v40 = Logger.logObject.getter();
    uint64_t v41 = v8;
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      unint64_t v78 = (char *)swift_slowAlloc();
      aBlock[0] = (uint64_t)v78;
      *(_DWORD *)uint64_t v43 = 136315395;
      unint64_t v44 = sub_1003017F0((uint64_t)v77, 4);
      uint64_t v83 = sub_10004B974(v44, v45, aBlock);
      uint64_t v77 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2081;
      EpisodeStateModel.ids.getter();
      sub_10033EFC4();
      uint64_t v46 = v37;
      uint64_t v47 = Set.description.getter();
      unint64_t v49 = v48;
      swift_bridgeObjectRelease();
      uint64_t v83 = sub_10004B974(v47, v49, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v77((char *)v46, v41);
      _os_log_impl((void *)&_mh_execute_header, v40, v42, "We can't process event %s because episode has no Podcast associated to it. Episode IDs: %{private}s.", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v50 = v80;
      unint64_t v51 = v74;
    }
    else
    {
      v31((char *)v37, v41);

      unint64_t v51 = v39;
      unint64_t v50 = v35;
    }
    return ((uint64_t (*)(char *, void (*)(void, void, void)))v81)(v51, v50);
  }
  else
  {
    id v52 = (void (**)(char *, char *, uint64_t))v81;
    uint64_t v80 = (void (*)(void, void, void))*((void *)v81 + 4);
    uint64_t v53 = v78;
    v80(v78, v38, v4);
    os_log_t v79 = [*(id *)(v71 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider) mainOrPrivateContext];
    uint64_t v54 = swift_allocObject();
    swift_weakInit();
    int v55 = v72;
    v52[2](v72, v53, v4);
    unint64_t v56 = (*((unsigned __int8 *)v52 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v52 + 80);
    unint64_t v57 = (v70 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = v54;
    v80(v58 + v56, v55, v4);
    id v59 = v79;
    *(void *)(v58 + v57) = v79;
    unint64_t v60 = v58 + ((v57 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v60 = v77;
    *(unsigned char *)(v60 + 8) = 4;
    *(void *)(v58 + ((v57 + 31) & 0xFFFFFFFFFFFFFFF8)) = 3;
    aBlock[4] = (uint64_t)sub_10033F140;
    aBlock[5] = v58;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10003B424;
    void aBlock[3] = (uint64_t)&unk_100562718;
    uint64_t v61 = _Block_copy(aBlock);
    id v62 = v59;
    swift_release();
    [v62 performBlockAndWaitWithSave:v61];
    _Block_release(v61);

    return ((uint64_t (*)(char *, uint64_t))v52[1])(v78, v4);
  }
}

void sub_100339538(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [a1 episodeForUuid:v13];

  if (!v14) {
    goto LABEL_7;
  }
  id v15 = [v14 podcast];
  if (!v15)
  {

LABEL_7:
    static Logger.podcastsStatesCoordination.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      id v21 = (id)v9;
      *(_DWORD *)uint64_t v19 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_10004B974(a2, a3, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Can't transition podcast to correct state because either the episode for %s was not found, or it has no associated podcast.", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, id))(v10 + 8))(v12, v21);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    return;
  }
  id v21 = v15;
  sub_1002FEF94(v15, 0, 4u, a5);

  os_log_type_t v16 = v21;
}

unint64_t sub_100339804@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char **a4@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v85 = a3;
  os_log_t v79 = a4;
  id v80 = a1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Transitioning podcasts to download state", v11, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t result = NSManagedObjectContext.episodes(for:sortDescriptors:limit:)();
  if (v4) {
    return result;
  }
  uint64_t isUniquelyReferenced_nonNull_native = result;
  v77[2] = 0;
  if (result >> 62) {
    goto LABEL_88;
  }
  uint64_t v14 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v87 = isUniquelyReferenced_nonNull_native;
    uint64_t v83 = v14;
    if (!v14) {
      break;
    }
    unint64_t v86 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    uint64_t v15 = (uint64_t)&_swiftEmptyDictionarySingleton;
    uint64_t v16 = 4;
    while (1)
    {
      id v17 = v86
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(isUniquelyReferenced_nonNull_native + 8 * v16);
      os_log_type_t v18 = v17;
      uint64_t v19 = v16 - 3;
      if (__OFADD__(v16 - 4, 1)) {
        break;
      }
      id v20 = [v17 podcast];
      if (v20)
      {
        id v21 = v20;
        id v22 = [v20 objectID];
        if ((v15 & 0xC000000000000001) != 0)
        {
          if (v15 < 0) {
            uint64_t v23 = v15;
          }
          else {
            uint64_t v23 = v15 & 0xFFFFFFFFFFFFFF8;
          }
          id v24 = v21;
          uint64_t v25 = __CocoaDictionary.count.getter();
          if (__OFADD__(v25, 1)) {
            goto LABEL_85;
          }
          Swift::Int v26 = sub_1002907B8(v23, v25 + 1);
        }
        else
        {
          id v27 = v21;
          Swift::Int v26 = v15;
        }
        Swift::Int v28 = v26;
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v89 = (void *)v28;
        unint64_t v30 = sub_100227064((uint64_t)v22);
        uint64_t v31 = *(void *)(v28 + 16);
        BOOL v32 = (v29 & 1) == 0;
        uint64_t v33 = v31 + v32;
        if (__OFADD__(v31, v32)) {
          goto LABEL_84;
        }
        char v34 = v29;
        if (*(void *)(v28 + 24) >= v33)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1002821BC();
          }
        }
        else
        {
          sub_10027C1F8(v33, isUniquelyReferenced_nonNull_native);
          unint64_t v35 = sub_100227064((uint64_t)v22);
          if ((v34 & 1) != (v36 & 1)) {
            goto LABEL_90;
          }
          unint64_t v30 = v35;
        }
        uint64_t v37 = v89;
        if (v34)
        {
          uint64_t v15 = (uint64_t)v89;
          uint64_t v38 = v89[7];

          *(void *)(v38 + 8 * v30) = v21;
        }
        else
        {
          v89[(v30 >> 6) + 8] |= 1 << v30;
          *(void *)(v37[6] + 8 * v30) = v22;
          *(void *)(v37[7] + 8 * v30) = v21;
          uint64_t v39 = v37[2];
          BOOL v40 = __OFADD__(v39, 1);
          uint64_t v41 = v39 + 1;
          if (v40) {
            goto LABEL_86;
          }
          uint64_t v15 = (uint64_t)v37;
          void v37[2] = v41;
          id v42 = v22;
        }

        swift_bridgeObjectRelease();
        uint64_t isUniquelyReferenced_nonNull_native = v87;
        uint64_t v14 = v83;
      }
      else
      {
      }
      ++v16;
      if (v19 == v14) {
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    swift_bridgeObjectRetain_n();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = (uint64_t)&_swiftEmptyDictionarySingleton;
LABEL_34:
  unint64_t v78 = v15;
  swift_bridgeObjectRelease();
  if ((v78 & 0xC000000000000001) != 0)
  {
    uint64_t v43 = __CocoaDictionary.makeIterator()();
    unint64_t v86 = 0;
    uint64_t v44 = 0;
    unint64_t v45 = 0;
    unint64_t v46 = v43 | 0x8000000000000000;
  }
  else
  {
    uint64_t v47 = -1 << *(unsigned char *)(v78 + 32);
    uint64_t v44 = ~v47;
    uint64_t v48 = *(void *)(v78 + 64);
    unint64_t v86 = v78 + 64;
    uint64_t v49 = -v47;
    if (v49 < 64) {
      uint64_t v50 = ~(-1 << v49);
    }
    else {
      uint64_t v50 = -1;
    }
    unint64_t v45 = v50 & v48;
    unint64_t v46 = v78;
  }
  swift_bridgeObjectRetain();
  uint64_t v51 = 0;
  uint64_t v82 = v46 & 0x7FFFFFFFFFFFFFFFLL;
  v77[1] = v44;
  int64_t v52 = (unint64_t)(v44 + 64) >> 6;
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&off_100603000;
  os_log_t v81 = (char *)&type metadata for Swift.AnyObject + 8;
  if ((v46 & 0x8000000000000000) == 0)
  {
LABEL_41:
    if (v45)
    {
      uint64_t v53 = (v45 - 1) & v45;
      unint64_t v54 = __clz(__rbit64(v45)) | (v51 << 6);
      uint64_t v55 = v51;
    }
    else
    {
      int64_t v59 = v51 + 1;
      if (__OFADD__(v51, 1)) {
        goto LABEL_87;
      }
      if (v59 >= v52) {
        goto LABEL_65;
      }
      unint64_t v60 = *(void *)(v86 + 8 * v59);
      uint64_t v55 = v51 + 1;
      if (!v60)
      {
        uint64_t v55 = v51 + 2;
        if (v51 + 2 >= v52) {
          goto LABEL_65;
        }
        unint64_t v60 = *(void *)(v86 + 8 * v55);
        if (!v60)
        {
          uint64_t v55 = v51 + 3;
          if (v51 + 3 >= v52) {
            goto LABEL_65;
          }
          unint64_t v60 = *(void *)(v86 + 8 * v55);
          if (!v60)
          {
            uint64_t v55 = v51 + 4;
            if (v51 + 4 >= v52) {
              goto LABEL_65;
            }
            unint64_t v60 = *(void *)(v86 + 8 * v55);
            if (!v60)
            {
              uint64_t v55 = v51 + 5;
              if (v51 + 5 >= v52) {
                goto LABEL_65;
              }
              unint64_t v60 = *(void *)(v86 + 8 * v55);
              if (!v60)
              {
                uint64_t v61 = v51 + 6;
                while (v52 != v61)
                {
                  unint64_t v60 = *(void *)(v86 + 8 * v61++);
                  if (v60)
                  {
                    uint64_t v55 = v61 - 1;
                    goto LABEL_61;
                  }
                }
                goto LABEL_65;
              }
            }
          }
        }
      }
LABEL_61:
      uint64_t v53 = (v60 - 1) & v60;
      unint64_t v54 = __clz(__rbit64(v60)) + (v55 << 6);
    }
    id v58 = *(id *)(*(void *)(v46 + 56) + 8 * v54);
    if (v58) {
      goto LABEL_63;
    }
    goto LABEL_65;
  }
  while (__CocoaDictionary.Iterator.next()())
  {
    uint64_t v57 = v56;
    swift_unknownObjectRelease();
    uint64_t v88 = v57;
    sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v58 = v89;
    swift_unknownObjectRelease();
    uint64_t v55 = v51;
    uint64_t v53 = v45;
    if (!v58) {
      break;
    }
LABEL_63:
    sub_1002FEF94(v58, 0, 4u, v85);

    uint64_t v51 = v55;
    unint64_t v45 = v53;
    if ((v46 & 0x8000000000000000) == 0) {
      goto LABEL_41;
    }
  }
LABEL_65:
  sub_10004E644();
  [v80 saveInCurrentBlock];
  uint64_t v62 = v83;
  if (!v83)
  {
    int v66 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_81;
  }
  uint64_t v63 = v87;
  if (v83 < 1)
  {
    __break(1u);
LABEL_90:
    sub_10004D29C(0, &qword_1005F7728);
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    unint64_t v64 = v87 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    uint64_t v65 = 0;
    int v66 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if (v64) {
        id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v67 = *(id *)(v63 + 8 * v65 + 32);
      }
      uint64_t v68 = v67;
      id v69 = [v67 uuid];
      if (v69)
      {
        uint64_t v70 = v69;
        uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v73 = v72;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v66 = sub_10004CEAC(0, *((void *)v66 + 2) + 1, 1, v66);
        }
        unint64_t v75 = *((void *)v66 + 2);
        unint64_t v74 = *((void *)v66 + 3);
        if (v75 >= v74 >> 1) {
          int v66 = sub_10004CEAC((char *)(v74 > 1), v75 + 1, 1, v66);
        }
        *((void *)v66 + 2) = v75 + 1;
        uint64_t v76 = &v66[16 * v75];
        *((void *)v76 + 4) = v71;
        *((void *)v76 + 5) = v73;
        uint64_t v63 = v87;
      }
      else
      {
      }
      ++v65;
    }
    while (v62 != v65);
    swift_bridgeObjectRelease();
LABEL_81:
    swift_bridgeObjectRelease();
    void *v79 = v66;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100339F84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  id v11 = [a1 episodeForUuid:v7];

  if (v11)
  {
    id v8 = [v11 podcast];
    if (v8)
    {
      id v9 = v8;
      sub_1002FEF94(v8, 1, 4u, a5);

      os_log_type_t v10 = v9;
    }
    else
    {
      os_log_type_t v10 = v11;
    }
  }
}

uint64_t sub_10033A068(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_10016F588((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v62 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  uint64_t v11 = v10 & *(void *)(a1 + 56);
  int64_t v63 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  NSString v13 = &selRef_dismissActionSheetsAndPopovers;
  while (v11)
  {
    v11 &= v11 - 1;
LABEL_21:
    swift_bridgeObjectRetain();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = [a2 v13[129] v17];

    if (v18)
    {
      id v19 = [v18 podcast];
      if (v19)
      {
        id v20 = v19;
        uint64_t v21 = a3;
        uint64_t v22 = a4;
        uint64_t v23 = v13;
        id v24 = [v19 uuid];
        if (v24)
        {
          uint64_t v25 = v24;
          uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v60 = v27;
          uint64_t v61 = v26;

          id v59 = v20;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v29 = sub_100051E78(v61, v60);
          uint64_t v30 = *(void *)(v8 + 16);
          BOOL v31 = (v28 & 1) == 0;
          uint64_t v32 = v30 + v31;
          if (__OFADD__(v30, v31)) {
            goto LABEL_65;
          }
          if (*(void *)(v8 + 24) >= v32)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              char v57 = v28;
              sub_100282368();
              char v28 = v57;
            }
          }
          else
          {
            char v56 = v28;
            sub_10027C4D4(v32, isUniquelyReferenced_nonNull_native);
            unint64_t v33 = sub_100051E78(v61, v60);
            int v35 = v34 & 1;
            char v28 = v56;
            if ((v56 & 1) != v35) {
              goto LABEL_67;
            }
            unint64_t v29 = v33;
          }
          if (v28)
          {
            uint64_t v36 = *(void *)(v8 + 56);
            uint64_t v37 = 8 * v29;

            *(void *)(v36 + v37) = v59;
            uint64_t v38 = v59;
          }
          else
          {
            *(void *)(v8 + 8 * (v29 >> 6) + 64) |= 1 << v29;
            uint64_t v39 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v29);
            uint64_t *v39 = v61;
            v39[1] = v60;
            uint64_t v38 = v59;
            *(void *)(*(void *)(v8 + 56) + 8 * v29) = v59;
            uint64_t v40 = *(void *)(v8 + 16);
            BOOL v41 = __OFADD__(v40, 1);
            uint64_t v42 = v40 + 1;
            if (v41) {
              goto LABEL_66;
            }
            *(void *)(v8 + 16) = v42;
            swift_bridgeObjectRetain();
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          NSString v13 = v23;
          a4 = v22;
          a3 = v21;
        }
        else
        {

          a4 = v22;
          a3 = v21;
        }
      }
      else
      {
      }
    }
  }
  int64_t v14 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v14 >= v63) {
    goto LABEL_36;
  }
  uint64_t v15 = *(void *)(v62 + 8 * v14);
  ++v12;
  if (v15) {
    goto LABEL_20;
  }
  int64_t v12 = v14 + 1;
  if (v14 + 1 >= v63) {
    goto LABEL_36;
  }
  uint64_t v15 = *(void *)(v62 + 8 * v12);
  if (v15) {
    goto LABEL_20;
  }
  int64_t v12 = v14 + 2;
  if (v14 + 2 >= v63) {
    goto LABEL_36;
  }
  uint64_t v15 = *(void *)(v62 + 8 * v12);
  if (v15)
  {
LABEL_20:
    uint64_t v11 = (v15 - 1) & v15;
    goto LABEL_21;
  }
  int64_t v16 = v14 + 3;
  if (v16 < v63)
  {
    uint64_t v15 = *(void *)(v62 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v12 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        if (v12 >= v63) {
          goto LABEL_36;
        }
        uint64_t v15 = *(void *)(v62 + 8 * v12);
        ++v16;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    int64_t v12 = v16;
    goto LABEL_20;
  }
LABEL_36:
  swift_release();
  unint64_t v43 = v8 + 64;
  uint64_t v44 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v45 = -1;
  if (v44 < 64) {
    uint64_t v45 = ~(-1 << v44);
  }
  unint64_t v46 = v45 & *(void *)(v8 + 64);
  int64_t v47 = (unint64_t)(v44 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v48 = 0;
  while (2)
  {
    if (v46)
    {
      unint64_t v49 = __clz(__rbit64(v46));
      v46 &= v46 - 1;
      unint64_t v50 = v49 | (v48 << 6);
LABEL_40:
      id v51 = *(id *)(*(void *)(v8 + 56) + 8 * v50);
      sub_1002FEF94(v51, 1, 4u, a4);

      continue;
    }
    break;
  }
  int64_t v52 = v48 + 1;
  if (__OFADD__(v48, 1))
  {
    __break(1u);
    goto LABEL_62;
  }
  if (v52 >= v47)
  {
LABEL_58:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  unint64_t v53 = *(void *)(v43 + 8 * v52);
  ++v48;
  if (v53) {
    goto LABEL_57;
  }
  int64_t v48 = v52 + 1;
  if (v52 + 1 >= v47) {
    goto LABEL_58;
  }
  unint64_t v53 = *(void *)(v43 + 8 * v48);
  if (v53) {
    goto LABEL_57;
  }
  int64_t v48 = v52 + 2;
  if (v52 + 2 >= v47) {
    goto LABEL_58;
  }
  unint64_t v53 = *(void *)(v43 + 8 * v48);
  if (v53) {
    goto LABEL_57;
  }
  int64_t v48 = v52 + 3;
  if (v52 + 3 >= v47) {
    goto LABEL_58;
  }
  unint64_t v53 = *(void *)(v43 + 8 * v48);
  if (v53)
  {
LABEL_57:
    unint64_t v46 = (v53 - 1) & v53;
    unint64_t v50 = __clz(__rbit64(v53)) + (v48 << 6);
    goto LABEL_40;
  }
  int64_t v54 = v52 + 4;
  if (v54 >= v47) {
    goto LABEL_58;
  }
  unint64_t v53 = *(void *)(v43 + 8 * v54);
  if (v53)
  {
    int64_t v48 = v54;
    goto LABEL_57;
  }
  while (1)
  {
    int64_t v48 = v54 + 1;
    if (__OFADD__(v54, 1)) {
      break;
    }
    if (v48 >= v47) {
      goto LABEL_58;
    }
    unint64_t v53 = *(void *)(v43 + 8 * v48);
    ++v54;
    if (v53) {
      goto LABEL_57;
    }
  }
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void PodcastsStateCoordinator.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:completionHandler:)(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v31 = a1;
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v30 - 8);
  __chkstk_darwin();
  int64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  int64_t v16 = Logger.logObject.getter();
  if (os_log_type_enabled(v16, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = a5;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    int v29 = a4;
    v26[1] = v19;
    aBlock[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v20 = PodcastsStateChangeOrigin.description.getter();
    uint64_t v32 = sub_10004B974(v20, v21, aBlock);
    uint64_t v27 = a6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_10004B974(v31, a2, aBlock);
    a6 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v15, "Removing download (origin: %s) for episode with UUID: %s.", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    LOBYTE(a4) = v29;
    swift_slowDealloc();
    a5 = v28;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  uint64_t v22 = *(void **)(v7 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway);
  NSString v23 = String._bridgeToObjectiveC()();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a5;
  *(void *)(v24 + 24) = a6;
  aBlock[4] = (uint64_t)sub_10033D858;
  aBlock[5] = v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10033A950;
  void aBlock[3] = (uint64_t)&unk_100562588;
  uint64_t v25 = _Block_copy(aBlock);
  sub_10004ACDC(a5);
  swift_release();
  [v22 removeDownload:v23 shouldAllowAutomaticRedownloads:a4 & 1 completion:v25];
  _Block_release(v25);
}

void sub_10033A8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  id v6 = [self defaultCenter];
  [v6 postNotificationName:PFMediaDownloadWasDeletedNotification object:0];

  if (a5) {
    a5();
  }
}

uint64_t sub_10033A950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    a3 = v9;
  }
  else
  {
    uint64_t v8 = 0;
  }
  swift_retain();
  v4(v5, v7, v8, a3);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t PodcastsStateCoordinator.insertNewImplicitFollowIfNeeded(for:from:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for EpisodePlayerItem();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastPlayerItem();
  __chkstk_darwin();
  uint64_t v10 = type metadata accessor for PlayerItem();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = a1;
  sub_10024830C(v14);
  id v15 = v14;
  sub_100248468(v15, (uint64_t)v9);
  PlayerItem.init(podcast:episode:)();

  PodcastsStateCoordinator.insertNewImplicitFollowIfNeeded(for:from:completion:)((uint64_t)v13, a2, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_10033AD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    if (a5)
    {
LABEL_3:
      NSString v10 = String._bridgeToObjectiveC()();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v9 = 0;
    if (a5) {
      goto LABEL_3;
    }
  }
  NSString v10 = 0;
LABEL_6:
  id v11 = v10;
  (*(void (**)(uint64_t, uint64_t, NSString))(a6 + 16))(a6, a1, v9);
}

void sub_10033AE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v73 = a2;
  uint64_t v63 = type metadata accessor for EpisodePlayerItem();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PlayerItem();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v70 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v11 = (char *)v54 - v10;
  __chkstk_darwin();
  uint64_t v13 = (char *)v54 - v12;
  uint64_t v69 = v14;
  __chkstk_darwin();
  int64_t v16 = (char *)v54 - v15;
  uint64_t v64 = type metadata accessor for Logger();
  uint64_t v67 = *(void *)(v64 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  uint64_t v76 = v8;
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v20 = v8 + 16;
  v21(v16, a1, v7);
  v21(v13, a1, v7);
  uint64_t v65 = v11;
  uint64_t v72 = a1;
  uint64_t v68 = v21;
  v21(v11, a1, v7);
  int v66 = v18;
  uint64_t v22 = Logger.logObject.getter();
  int v23 = v19;
  if (os_log_type_enabled(v22, v19))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    uint64_t v77 = v61;
    *(_DWORD *)uint64_t v24 = 136381187;
    char v57 = (void (*)(char *, uint64_t))(v24 + 4);
    int v60 = v23;
    PlayerItem.episode.getter();
    uint64_t v25 = EpisodePlayerItem.title.getter();
    uint64_t v27 = v26;
    os_log_t v59 = v22;
    char v56 = *(void (**)(char *, uint64_t))(v62 + 8);
    v56(v6, v63);
    uint64_t aBlock = v25;
    v79[0] = v27;
    uint64_t v58 = sub_100054B78(&qword_1005F93A0);
    uint64_t v28 = String.init<A>(describing:)();
    uint64_t aBlock = sub_10004B974(v28, v29, &v77);
    uint64_t v55 = v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v76 + 8);
    v30(v16, v7);
    char v57 = v30;
    *(_WORD *)(v24 + 12) = 2049;
    v54[1] = v24 + 14;
    PlayerItem.episode.getter();
    uint64_t v31 = EpisodePlayerItem.adamID.getter();
    uint64_t v62 = v20;
    uint64_t v32 = v63;
    unint64_t v33 = v56;
    v56(v6, v63);
    v30(v13, v7);
    uint64_t aBlock = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 22) = 2081;
    uint64_t v55 = (void *)(v24 + 24);
    char v34 = v65;
    PlayerItem.episode.getter();
    uint64_t v35 = EpisodePlayerItem.guid.getter();
    uint64_t v37 = v36;
    v33(v6, v32);
    uint64_t aBlock = v35;
    v79[0] = v37;
    uint64_t v38 = String.init<A>(describing:)();
    uint64_t aBlock = sub_10004B974(v38, v39, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v57(v34, v7);
    os_log_t v40 = v59;
    _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v60, "Inserting new Implicit Follow if needed for currently playing episode: %{private}s, adamID: %{private}lld, guid: %{private}s.", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    BOOL v41 = *(void (**)(char *, uint64_t))(v76 + 8);
    v41(v13, v7);
    v41(v16, v7);
    v41(v65, v7);
  }
  (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v64);
  id v42 = [*(id *)(v71 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider) privateQueueContext];
  uint64_t v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v44 = v70;
  v68(v70, v72, v7);
  uint64_t v45 = v76;
  unint64_t v46 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  unint64_t v47 = (v69 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v43;
  *(void *)(v48 + 24) = v42;
  (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v48 + v46, v44, v7);
  uint64_t v49 = v74;
  *(void *)(v48 + v47) = v73;
  unint64_t v50 = (void *)(v48 + ((v47 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v51 = v75;
  *unint64_t v50 = v49;
  v50[1] = v51;
  v79[3] = sub_10033EF24;
  v79[4] = v48;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  v79[0] = 1107296256;
  v79[1] = sub_10003B424;
  v79[2] = &unk_1005626A0;
  int64_t v52 = _Block_copy(&aBlock);
  id v53 = v42;
  swift_retain();
  swift_release();
  [v53 performBlock:v52];
  _Block_release(v52);
}

void PodcastsStateCoordinator.unsafeEpisodePlayedBeyondThresholdForFirstTime(_:from:)(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v47 - v8;
  if (!a1)
  {
    static Logger.podcastsStatesCoordination.getter();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      id v50 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v16 = PodcastsStateChangeOrigin.description.getter();
      uint64_t v52 = sub_10004B974(v16, v17, (uint64_t *)&v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "We can't transition podcast for nil MTEpisode; Origin: %s.",
        v15,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    os_log_type_t v19 = v7;
    goto LABEL_13;
  }
  id v10 = a1;
  id v11 = [v10 podcast];
  if (v11)
  {
    id v49 = v11;
    sub_1002FEF94(v11, 5, 4u, a2);

    uint64_t v12 = v49;

    return;
  }
  static Logger.podcastsStatesCoordination.getter();
  id v20 = v10;
  unint64_t v21 = Logger.logObject.getter();
  int v22 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v21, (os_log_type_t)v22))
  {

    uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    os_log_type_t v19 = v9;
LABEL_13:
    v18(v19, v4);
    return;
  }
  int v48 = v22;
  id v49 = (id)v4;
  uint64_t v23 = swift_slowAlloc();
  uint64_t v47 = swift_slowAlloc();
  uint64_t v52 = v47;
  *(_DWORD *)uint64_t v23 = 136381443;
  id v24 = [v20 title:v47];
  if (v24)
  {
    uint64_t v25 = v24;
    id v26 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;
  }
  else
  {
    id v26 = 0;
    uint64_t v28 = 0;
  }
  id v50 = v26;
  uint64_t v51 = v28;
  sub_100054B78(&qword_1005F93A0);
  uint64_t v29 = String.init<A>(describing:)();
  id v50 = (id)sub_10004B974(v29, v30, &v52);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 12) = 2080;
  id v31 = [v20 uuid];
  if (v31)
  {
    uint64_t v32 = v31;
    id v33 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;
  }
  else
  {
    id v33 = 0;
    uint64_t v35 = 0;
  }
  id v50 = v33;
  uint64_t v51 = v35;
  uint64_t v36 = String.init<A>(describing:)();
  id v50 = (id)sub_10004B974(v36, v37, &v52);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 22) = 2081;
  id v50 = [v20 storeTrackId];
  uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
  id v50 = (id)sub_10004B974(v38, v39, &v52);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 32) = 2081;
  id v40 = [v20 guid];
  if (v40)
  {
    BOOL v41 = v40;
    id v42 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;
  }
  else
  {
    id v42 = 0;
    uint64_t v44 = 0;
  }
  id v50 = v42;
  uint64_t v51 = v44;
  uint64_t v45 = String.init<A>(describing:)();
  id v50 = (id)sub_10004B974(v45, v46, &v52);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v48, "We can't transition podcast. MTEpisode without an associated podcast: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.", (uint8_t *)v23, 0x2Au);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, id))(v5 + 8))(v9, v49);
}

void PodcastsStateCoordinator.unsafeMark(_:as:in:from:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10033BC80(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, void *), uint64_t a6)
{
  uint64_t v109 = a6;
  uint64_t v110 = a5;
  uint64_t v108 = a4;
  id v112 = a2;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v105 = *(void **)(v7 - 8);
  uint64_t v106 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PodcastPlayerItem();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for EpisodePlayerItem();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  unint64_t v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v107 = (char *)&v98 - v18;
  __chkstk_darwin();
  id v20 = (char *)&v98 - v19;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  unint64_t v111 = (char *)result;
  if (result)
  {
    PlayerItem.episode.getter();
    uint64_t v22 = EpisodePlayerItem.adamID.getter();
    id v24 = *(void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v23 = (char *)(v15 + 8);
    uint64_t v103 = v14;
    Swift::Int v104 = v24;
    v24(v20, v14);
    id v25 = [v112 episodeForStoreTrackID:v22];
    if (v25)
    {
      uint64_t v102 = a3;
      id v26 = v25;
      static Logger.podcastsStatesCoordination.getter();
      id v27 = v26;
      uint64_t v28 = Logger.logObject.getter();
      int v29 = static os_log_type_t.error.getter();
      unint64_t v30 = &selRef_updatedObjectIDs;
      if (os_log_type_enabled(v28, (os_log_type_t)v29))
      {
        int v100 = v29;
        os_log_t v101 = v28;
        uint64_t v31 = swift_slowAlloc();
        uint64_t v99 = swift_slowAlloc();
        uint64_t v115 = v99;
        *(_DWORD *)uint64_t v31 = 136381443;
        id v32 = [v27 title];
        if (v32)
        {
          id v33 = v32;
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v35;
        }
        else
        {
          uint64_t v34 = 0;
          uint64_t v36 = 0;
        }
        id v113 = (id)v34;
        uint64_t v114 = v36;
        sub_100054B78(&qword_1005F93A0);
        uint64_t v64 = String.init<A>(describing:)();
        id v113 = (id)sub_10004B974(v64, v65, &v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2080;
        id v66 = [v27 uuid];
        if (v66)
        {
          uint64_t v67 = v66;
          uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v70 = v69;
        }
        else
        {
          uint64_t v68 = 0;
          uint64_t v70 = 0;
        }
        id v113 = (id)v68;
        uint64_t v114 = v70;
        uint64_t v71 = String.init<A>(describing:)();
        id v113 = (id)sub_10004B974(v71, v72, &v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 22) = 2081;
        id v113 = [v27 storeTrackId];
        uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter();
        id v113 = (id)sub_10004B974(v73, v74, &v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 32) = 2081;
        id v75 = [v27 guid];
        if (v75)
        {
          uint64_t v76 = v75;
          uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v79 = v78;
        }
        else
        {
          uint64_t v77 = 0;
          uint64_t v79 = 0;
        }
        uint64_t v58 = v103;
        id v113 = (id)v77;
        uint64_t v114 = v79;
        uint64_t v80 = String.init<A>(describing:)();
        id v113 = (id)sub_10004B974(v80, v81, &v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_t v82 = v101;
        _os_log_impl((void *)&_mh_execute_header, v101, (os_log_type_t)v100, "Abort new Implicit Follow insertion: Episode already in the DB: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.", (uint8_t *)v31, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, uint64_t))v105[1])(v9, v106);
        unint64_t v30 = &selRef_updatedObjectIDs;
      }
      else
      {

        ((void (*)(char *, uint64_t))v105[1])(v9, v106);
        uint64_t v58 = v103;
      }
      id v83 = [v27 podcast];
      id v84 = v112;
      if (v83)
      {
        uint64_t v85 = v83;
        swift_retain();
        sub_1002FEF94(v85, 3, 4u, v108);

        swift_release();
      }
      [v84 saveInCurrentBlock];
      unint64_t v86 = v107;
      PlayerItem.episode.getter();
      uint64_t v87 = EpisodePlayerItem.adamID.getter();
      v104(v86, v58);
      id v88 = [v27 v30[42]];
      if (v88)
      {
        uint64_t v89 = v88;
        uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v92 = v91;
      }
      else
      {
        uint64_t v90 = 0;
        uint64_t v92 = 0;
      }
      id v93 = [v27 podcast];
      uint64_t v94 = v93;
      if (v93)
      {
        id v95 = [v93 v30[42]];

        if (v95)
        {
          uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v94 = v97;
        }
        else
        {
          uint64_t v96 = 0;
          uint64_t v94 = 0;
        }
      }
      else
      {
        uint64_t v96 = 0;
      }
      v110(v87, v90, v92, v96, v94);
      id v45 = v111;
      uint64_t v51 = v27;
    }
    else
    {
      id v107 = v23;
      PlayerItem.podcast.getter();
      uint64_t v37 = PodcastPlayerItem.adamID.getter();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v11 + 8);
      v38(v13, v10);
      id v39 = [v112 podcastForStoreId:v37];
      id v40 = v39;
      if (!v39)
      {
        uint64_t v41 = *(void *)&v111[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore
                             + 24];
        uint64_t v106 = *(void *)&v111[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore
                              + 32];
        uint64_t v105 = sub_100041A98(&v111[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore], v41);
        PlayerItem.podcast.getter();
        id v42 = (void *)dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertPodcastInStoreState(in:for:)();
        v38(v13, v10);
        id v40 = v42;
      }
      uint64_t v43 = v111;
      swift_retain();
      id v44 = v39;
      sub_1002FEF94(v40, 3, 4u, v108);

      swift_release();
      sub_100041A98(&v43[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore], *(void *)&v43[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore + 24]);
      PlayerItem.episode.getter();
      id v45 = v40;
      id v46 = v112;
      uint64_t v47 = (void *)dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertEpisode(in:for:asPartOf:)();

      uint64_t v48 = v103;
      id v49 = v104;
      v104(v20, v103);
      id v50 = v46;
      uint64_t v51 = v47;
      [v50 saveInCurrentBlock];
      PlayerItem.episode.getter();
      uint64_t v52 = EpisodePlayerItem.adamID.getter();
      v49(v17, v48);
      id v53 = [v47 uuid];
      if (v53)
      {
        int64_t v54 = v53;
        uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v57 = v56;
      }
      else
      {
        uint64_t v55 = 0;
        uint64_t v57 = 0;
      }
      id v59 = [v45 uuid];
      if (v59)
      {
        int v60 = v59;
        uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v63 = v62;
      }
      else
      {
        uint64_t v61 = 0;
        uint64_t v63 = 0;
      }
      v110(v52, v55, v57, v61, v63);
      id v27 = v111;
    }

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t PodcastsStateCoordinator.unsafeDidBumpLastDatePlayed(for:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = type metadata accessor for Podcasts();
  v56[3] = v14;
  v56[4] = sub_10005E4F8((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  uint64_t v15 = sub_10004A244(v56);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, enum case for Podcasts.simplifiedSyncDirtyHandling(_:), v14);
  LOBYTE(v14) = isFeatureEnabled(_:)();
  sub_10004D2D8((uint64_t)v56);
  if (v14)
  {
    uint64_t v53 = v4;
    static Logger.podcastsStatesCoordination.getter();
    int v16 = static os_log_type_t.default.getter();
    id v17 = a1;
    uint64_t v18 = Logger.logObject.getter();
    int v54 = v16;
    if (os_log_type_enabled(v18, (os_log_type_t)v16))
    {
      os_log_t v49 = v18;
      uint64_t v50 = v5;
      uint64_t v52 = v8;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v56[0] = v48;
      *(_DWORD *)uint64_t v19 = 136381955;
      id v20 = [v17 title];
      uint64_t v51 = v2;
      if (v20)
      {
        unint64_t v21 = v20;
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v24 = v23;
      }
      else
      {
        unint64_t v24 = 0xEA00000000003E65;
        uint64_t v22 = 0x6C746974206F6E3CLL;
      }
      id v55 = (id)sub_10004B974(v22, v24, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      id v29 = [v17 uuid];
      if (v29)
      {
        unint64_t v30 = v29;
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v33 = v32;
      }
      else
      {
        unint64_t v33 = 0xE700000000000000;
        uint64_t v31 = 0x3E7974706D653CLL;
      }
      id v55 = (id)sub_10004B974(v31, v33, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2080;
      id v55 = [v17 managedObjectContext];
      sub_100054B78((uint64_t *)&unk_100603900);
      uint64_t v34 = String.init<A>(describing:)();
      id v55 = (id)sub_10004B974(v34, v35, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 32) = 2049;
      id v36 = [v17 storeCollectionId];

      id v55 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v19 + 42) = 2081;
      id v37 = [v17 feedURL];
      if (v37)
      {
        uint64_t v38 = v37;
        uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v41 = v40;
      }
      else
      {
        unint64_t v41 = 0xE700000000000000;
        uint64_t v39 = 0x3E7974706D653CLL;
      }
      id v55 = (id)sub_10004B974(v39, v41, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 52) = 2081;
      [v17 lastDatePlayed];
      Date.init(timeIntervalSinceReferenceDate:)();
      sub_10005E4F8(&qword_1005FDB68, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v42 = v53;
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v45 = v44;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v7, v42);
      id v55 = (id)sub_10004B974(v43, v45, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v46 = v49;
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v54, "Change detected in lastDatePlayed of podcast: %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s. New lastDatePlayed = %{private}s", (uint8_t *)v19, 0x3Eu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v52);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    }
    return sub_1002FEF94(v17, 9, 4u, 4);
  }
  else
  {
    static Logger.podcastsStatesCoordination.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    id v26 = Logger.logObject.getter();
    if (os_log_type_enabled(v26, v25))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v27 = 0;
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_10033CEAC()
{
  return sub_10033EE04((uint64_t (*)(void, void, void, void, void))sub_100339538);
}

uint64_t sub_10033CEC8()
{
  return sub_10033EE04((uint64_t (*)(void, void, void, void, void))sub_100337BF0);
}

unint64_t sub_10033CEE4@<X0>(char **a1@<X8>)
{
  return sub_100339804(*(void **)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_10033CF08()
{
  return sub_10033EE04((uint64_t (*)(void, void, void, void, void))sub_100339F84);
}

uint64_t sub_10033CF20()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10033CF68()
{
  return sub_10033A068(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

id sub_10033CF74(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteNonFollowedShow();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v61 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v61 - v10;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = v12;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter();
  int v15 = static os_log_type_t.default.getter();
  uint64_t v65 = v5;
  int v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  id v17 = a1;
  v16(v11, a2, v4);
  id v66 = v9;
  v16(v9, a2, v4);
  uint64_t v67 = v7;
  uint64_t v68 = a2;
  v16(v7, a2, v4);
  id v18 = v17;
  uint64_t v19 = Logger.logObject.getter();
  int v64 = v15;
  if (os_log_type_enabled(v19, (os_log_type_t)v15))
  {
    os_log_t v62 = v19;
    uint64_t v63 = v14;
    uint64_t v20 = v4;
    uint64_t v21 = v65;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    uint64_t v72 = v61;
    *(_DWORD *)uint64_t v22 = 136382467;
    id v23 = [v18 title:v61];
    if (v23)
    {
      unint64_t v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v27 = v26;
    }
    else
    {
      unint64_t v27 = 0xEA00000000003E65;
      uint64_t v25 = 0x6C746974206F6E3CLL;
    }
    uint64_t v71 = sub_10004B974(v25, v27, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    id v29 = [v18 uuid];
    if (v29)
    {
      unint64_t v30 = v29;
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v33 = v32;
    }
    else
    {
      unint64_t v33 = 0xE90000000000003ELL;
      uint64_t v31 = 0x64697575206F6E3CLL;
    }
    uint64_t v71 = sub_10004B974(v31, v33, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2049;
    id v34 = [v18 storeCollectionId];

    uint64_t v71 = (uint64_t)v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v22 + 32) = 2081;
    id v35 = [v18 feedURL];
    if (v35)
    {
      id v36 = v35;
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v39 = v38;
    }
    else
    {
      unint64_t v39 = 0xE700000000000000;
      uint64_t v37 = 0x3E7974706D653CLL;
    }
    uint64_t v71 = sub_10004B974(v37, v39, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 42) = 2049;
    [v18 lastDatePlayed];
    uint64_t v71 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v22 + 52) = 2049;
    unint64_t v41 = v11;
    uint64_t v42 = RemoteNonFollowedShow.storeCollectionId.getter();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v21 + 8);
    v43(v41, v20);
    uint64_t v71 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 62) = 2081;
    unint64_t v44 = v66;
    uint64_t v45 = RemoteNonFollowedShow.feedURL.getter();
    uint64_t v71 = sub_10004B974(v45, v46, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v43(v44, v20);
    *(_WORD *)(v22 + 72) = 2049;
    uint64_t v47 = v67;
    double v48 = COERCE_DOUBLE(RemoteNonFollowedShow.lastDatePlayed.getter());
    if (v49) {
      double v48 = 0.0;
    }
    uint64_t v71 = *(void *)&v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v43(v47, v20);
    os_log_t v50 = v62;
    _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v64, "Updating local podcast %{private}s, uuid: %s, adamID: %{private}lld, feedURL: %{private}s, lastDatePlayed: %{private}f; For remote NonFollowedShow with adamID: %{private}lld, feedURL: %{private}s, lastDatePlayed: %{private}f.",
      (uint8_t *)v22,
      0x52u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v69 + 8))(v63, v70);
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v65 + 8);
    v28(v11, v4);

    v28(v66, v4);
    v28(v67, v4);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v14, v70);
  }
  uint64_t v72 = RemoteNonFollowedShow.unknownSyncProperties.getter();
  sub_100054B78(&qword_100603950);
  sub_100044200((unint64_t *)&qword_100603958, &qword_100603950);
  char v51 = Collection.isNotEmpty.getter();
  swift_bridgeObjectRelease();
  if (v51)
  {
    uint64_t v52 = RemoteSyncTypeWithUnknownSyncProperties.encodeUnknownSyncProperties()();
    if (v53 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      uint64_t v55 = v52;
      unint64_t v56 = v53;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_10021A3FC(v55, v56);
    }
    [v18 setImplicitFollowsUnknownSyncProperties:isa];
  }
  else
  {
    [v18 setImplicitFollowsUnknownSyncProperties:0];
  }
  id result = (id)RemoteNonFollowedShow.lastDatePlayed.getter();
  if ((v58 & 1) == 0)
  {
    double v59 = *(double *)&result;
    id result = [v18 lastDatePlayed];
    if (v60 < v59) {
      return [v18 setLastDatePlayed:v59];
    }
  }
  return result;
}

uint64_t sub_10033D734()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10033D77C()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  id v4 = String._bridgeToObjectiveC()();
  [v1 unsafeEnableSubscriptionOnPodcastUUID:v4 from:v2 context:v3];
}

uint64_t sub_10033D7F0()
{
  return sub_10033EE04((uint64_t (*)(void, void, void, void, void))sub_100337018);
}

void sub_10033D80C()
{
  sub_1003378BC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10033D818()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_10033D858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10033A8D4(a1, a2, a3, a4, *(void (**)(void))(v4 + 16));
}

uint64_t sub_10033D860(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v6 = type metadata accessor for EpisodePlayerItem();
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  __chkstk_darwin();
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PlayerItem();
  uint64_t v63 = *(void (**)(char *, uint64_t))(v9 - 8);
  __chkstk_darwin();
  os_log_t v62 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v48 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)v48 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v57 = *(void *)(v15 - 8);
  uint64_t v58 = v15;
  __chkstk_darwin();
  int v64 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PodcastPlayerItem();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a4;
  double v59 = a4;
  _Block_copy(a4);
  PlayerItem.podcast.getter();
  LOBYTE(a4) = PodcastPlayerItem.isSubscribeable.getter();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (a4)
  {
    sub_10033AE48(a1, v55, (uint64_t)sub_10033ED64, v21);
  }
  else
  {
    uint64_t v56 = v21;
    static Logger.podcastsStatesCoordination.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    id v23 = (void (*)(char *, uint64_t, uint64_t))*((void *)v63 + 2);
    v23(v14, a1, v9);
    v23(v12, a1, v9);
    v23(v62, a1, v9);
    unint64_t v24 = Logger.logObject.getter();
    if (os_log_type_enabled(v24, v22))
    {
      uint64_t v25 = swift_slowAlloc();
      int v53 = v22;
      uint64_t v26 = v25;
      uint64_t v54 = swift_slowAlloc();
      v67[0] = v54;
      *(_DWORD *)uint64_t v26 = 136381187;
      PlayerItem.episode.getter();
      uint64_t v27 = EpisodePlayerItem.title.getter();
      os_log_t v52 = v24;
      uint64_t v29 = v28;
      uint64_t v55 = a1;
      uint64_t v30 = v61;
      os_log_t v50 = *(void (**)(char *, uint64_t))(v60 + 8);
      v50(v8, v61);
      uint64_t v65 = v27;
      uint64_t v66 = v29;
      uint64_t v51 = sub_100054B78(&qword_1005F93A0);
      uint64_t v31 = String.init<A>(describing:)();
      uint64_t v65 = sub_10004B974(v31, v32, v67);
      char v49 = &v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v33 = (void (*)(char *, uint64_t))*((void *)v63 + 1);
      v33(v14, v9);
      uint64_t v63 = v33;
      *(_WORD *)(v26 + 12) = 2049;
      v48[1] = v26 + 14;
      PlayerItem.episode.getter();
      uint64_t v34 = EpisodePlayerItem.adamID.getter();
      id v35 = v50;
      v50(v8, v30);
      v33(v12, v9);
      uint64_t v65 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 22) = 2081;
      char v49 = (uint64_t *)(v26 + 24);
      id v36 = v62;
      PlayerItem.episode.getter();
      uint64_t v37 = EpisodePlayerItem.guid.getter();
      uint64_t v39 = v38;
      v35(v8, v30);
      uint64_t v40 = v60;
      uint64_t v65 = v37;
      uint64_t v66 = v39;
      uint64_t v41 = String.init<A>(describing:)();
      uint64_t v65 = sub_10004B974(v41, v42, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v63(v36, v9);
      os_log_t v43 = v52;
      _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v53, "Skip inserting new Implicit Follow for currently playing episode because the show is \"Not Subscribeable\" -- i.e. from a news diggest or some other type of 'fake' show: %{private}s, adamID: %{private}lld, guid: %{private}s.", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v44 = v61;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v64, v58);
    }
    else
    {
      uint64_t v45 = (void (*)(char *, uint64_t))*((void *)v63 + 1);
      v45(v12, v9);
      v45(v14, v9);
      v45(v62, v9);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v64, v58);
      uint64_t v40 = v60;
      uint64_t v44 = v61;
    }
    PlayerItem.episode.getter();
    uint64_t v46 = EpisodePlayerItem.adamID.getter();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v44);
    (*((void (**)(const void *, uint64_t, void, void))v59 + 2))(v59, v46, 0, 0);
  }
  return swift_release();
}

void sub_10033DF18(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v121 = a3;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v111 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v111 - v13;
  if (!a2)
  {
    id v15 = [a1 podcast];
    if (v15)
    {
      uint64_t v16 = v15;
      sub_1002FEF94(v15, 6, 4u, v121);

      a2 = 0;
    }
    else
    {
      char v119 = v12;
      static Logger.podcastsStatesCoordination.getter();
      id v17 = a1;
      uint64_t v18 = Logger.logObject.getter();
      int v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, (os_log_type_t)v19))
      {
        uint64_t v118 = v4;
        os_log_type_t v116 = v10;
        uint64_t v20 = swift_slowAlloc();
        uint64_t v112 = swift_slowAlloc();
        uint64_t v124 = v112;
        *(_DWORD *)uint64_t v20 = 136381443;
        id v21 = [v17 title];
        os_log_t v114 = v18;
        int v113 = v19;
        if (v21)
        {
          os_log_type_t v22 = v21;
          uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v25 = v24;
        }
        else
        {
          uint64_t v23 = 0;
          uint64_t v25 = 0;
        }
        id v122 = (id)v23;
        uint64_t v123 = v25;
        uint64_t v115 = sub_100054B78(&qword_1005F93A0);
        uint64_t v26 = String.init<A>(describing:)();
        id v122 = (id)sub_10004B974(v26, v27, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        id v28 = [v17 uuid];
        uint64_t v120 = v8;
        if (v28)
        {
          uint64_t v29 = v28;
          uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v32 = v31;
        }
        else
        {
          uint64_t v30 = 0;
          uint64_t v32 = 0;
        }
        id v122 = (id)v30;
        uint64_t v123 = v32;
        uint64_t v33 = String.init<A>(describing:)();
        id v122 = (id)sub_10004B974(v33, v34, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 22) = 2081;
        id v122 = [v17 storeTrackId];
        uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
        id v122 = (id)sub_10004B974(v35, v36, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 32) = 2081;
        id v37 = [v17 guid];
        if (v37)
        {
          uint64_t v38 = v37;
          uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v41 = v40;
        }
        else
        {
          uint64_t v39 = 0;
          uint64_t v41 = 0;
        }
        uint64_t v8 = v120;
        id v122 = (id)v39;
        uint64_t v123 = v41;
        uint64_t v42 = String.init<A>(describing:)();
        id v122 = (id)sub_10004B974(v42, v43, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_t v44 = v114;
        _os_log_impl((void *)&_mh_execute_header, v114, (os_log_type_t)v113, "We can't transition podcast. MTEpisode without an associated podcast: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.", (uint8_t *)v20, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
        uint64_t v10 = v116;
        uint64_t v4 = v118;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
      }
      a2 = 0;
      uint64_t v12 = v119;
    }
  }
  static Logger.podcastsStatesCoordination.getter();
  int v45 = static os_log_type_t.default.getter();
  id v46 = a1;
  uint64_t v47 = Logger.logObject.getter();
  if (os_log_type_enabled(v47, (os_log_type_t)v45))
  {
    uint64_t v118 = v4;
    char v119 = v12;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v124 = v49;
    *(_DWORD *)uint64_t v48 = 134219267;
    id v122 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v48 + 12) = 2081;
    id v50 = [v46 title];
    uint64_t v120 = v8;
    os_log_type_t v116 = (char *)v49;
    uint64_t v117 = a2;
    if (v50)
    {
      uint64_t v51 = v50;
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;
    }
    else
    {
      uint64_t v52 = 0;
      uint64_t v54 = 0;
    }
    id v122 = (id)v52;
    uint64_t v123 = v54;
    sub_100054B78(&qword_1005F93A0);
    uint64_t v56 = String.init<A>(describing:)();
    id v122 = (id)sub_10004B974(v56, v57, &v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 22) = 2080;
    id v58 = [v46 uuid];
    LODWORD(v115) = v45;
    if (v58)
    {
      double v59 = v58;
      uint64_t v60 = v10;
      uint64_t v61 = v7;
      uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = v63;
    }
    else
    {
      uint64_t v60 = v10;
      uint64_t v61 = v7;
      uint64_t v62 = 0;
      uint64_t v64 = 0;
    }
    id v122 = (id)v62;
    uint64_t v123 = v64;
    uint64_t v65 = String.init<A>(describing:)();
    id v122 = (id)sub_10004B974(v65, v66, &v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 32) = 2081;
    id v122 = [v46 storeTrackId];
    uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
    id v122 = (id)sub_10004B974(v67, v68, &v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 42) = 2081;
    id v69 = [v46 guid];
    if (v69)
    {
      uint64_t v70 = v69;
      uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v73 = v72;
    }
    else
    {
      uint64_t v71 = 0;
      uint64_t v73 = 0;
    }
    uint64_t v7 = v61;
    uint64_t v10 = v60;
    os_log_type_t v74 = v115;
    id v122 = (id)v71;
    uint64_t v123 = v73;
    uint64_t v75 = String.init<A>(describing:)();
    id v122 = (id)sub_10004B974(v75, v76, &v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 52) = 2080;
    uint64_t v77 = PodcastsStateChangeOrigin.description.getter();
    id v122 = (id)sub_10004B974(v77, v78, &v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v74, "Marking as playState = %lld episode: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.; From origin: %s.",
      (uint8_t *)v48,
      0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v8 = v120;
    uint64_t v55 = *(void (**)(char *, uint64_t))(v120 + 8);
    v55(v119, v7);
    a2 = v117;
    uint64_t v4 = v118;
  }
  else
  {

    uint64_t v55 = *(void (**)(char *, uint64_t))(v8 + 8);
    v55(v12, v7);
  }
  [*(id *)(v4 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_library) setPlayState:a2 fromContextActions:1 manually:1 forUserActionOnEpisode:v46 saveChanges:1];
  if (a2 == (void *)2)
  {
    id v79 = [v46 podcast];
    if (v79)
    {
      uint64_t v80 = v79;
      sub_1002FEF94(v79, 7, 4u, v121);
    }
    else
    {
      static Logger.podcastsStatesCoordination.getter();
      id v81 = v46;
      os_log_t v82 = Logger.logObject.getter();
      os_log_type_t v83 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v82, v83))
      {
        os_log_type_t v116 = v10;
        uint64_t v121 = v7;
        uint64_t v84 = swift_slowAlloc();
        uint64_t v85 = swift_slowAlloc();
        uint64_t v124 = v85;
        *(_DWORD *)uint64_t v84 = 136381443;
        id v86 = [v81 title];
        char v119 = (char *)v85;
        if (v86)
        {
          uint64_t v87 = v86;
          uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v90 = v89;
        }
        else
        {
          uint64_t v88 = 0;
          uint64_t v90 = 0;
        }
        id v122 = (id)v88;
        uint64_t v123 = v90;
        sub_100054B78(&qword_1005F93A0);
        uint64_t v93 = String.init<A>(describing:)();
        id v122 = (id)sub_10004B974(v93, v94, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 12) = 2080;
        id v95 = [v81 uuid];
        uint64_t v120 = v8;
        if (v95)
        {
          uint64_t v96 = v95;
          uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v99 = v98;
        }
        else
        {
          uint64_t v97 = 0;
          uint64_t v99 = 0;
        }
        id v122 = (id)v97;
        uint64_t v123 = v99;
        uint64_t v100 = String.init<A>(describing:)();
        id v122 = (id)sub_10004B974(v100, v101, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 22) = 2081;
        id v122 = [v81 storeTrackId];
        uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter();
        id v122 = (id)sub_10004B974(v102, v103, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 32) = 2081;
        id v104 = [v81 guid];
        if (v104)
        {
          uint64_t v105 = v104;
          uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v108 = v107;
        }
        else
        {
          uint64_t v106 = 0;
          uint64_t v108 = 0;
        }
        id v122 = (id)v106;
        uint64_t v123 = v108;
        uint64_t v109 = String.init<A>(describing:)();
        id v122 = (id)sub_10004B974(v109, v110, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v82, v83, "We can't transition podcast. MTEpisode without an associated podcast: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.", (uint8_t *)v84, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v91 = v116;
        uint64_t v92 = v121;
      }
      else
      {

        uint64_t v91 = v10;
        uint64_t v92 = v7;
      }
      v55(v91, v92);
    }
  }
}

unint64_t _s8Podcasts0A16StateCoordinatorC014currentPodcastB11Description4fromS2S_tF_0()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 mainOrPrivateContext];

  sub_100054B78(&qword_100603948);
  NSManagedObjectContext.performAndWait<A>(_:)();

  unint64_t result = 0x6465776F6C6C6F66;
  switch(v3)
  {
    case 1:
      unint64_t result = 0x7972617262696CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      unint64_t result = 0x65726F7473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10033ED2C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_10033ED64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10033AD98(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_10033ED70()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10033EDBC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10033EE04(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10033EE1C@<X0>(char *a1@<X8>)
{
  return sub_100300DBC(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_10033EE28()
{
  uint64_t v1 = type metadata accessor for PlayerItem();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10033EF24()
{
  uint64_t v1 = *(void *)(type metadata accessor for PlayerItem() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  uint64_t v6 = v0 + v2;
  uint64_t v7 = *(void *)(v0 + v3);
  uint64_t v8 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  return sub_10033BC80(v4, v5, v6, v7, v9, v10);
}

unint64_t sub_10033EFC4()
{
  unint64_t result = qword_100603960;
  if (!qword_100603960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100603960);
  }
  return result;
}

uint64_t sub_10033F018()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10033F050()
{
  uint64_t v1 = type metadata accessor for PodcastStateModel();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_10033F140()
{
  uint64_t v1 = *(void *)(type metadata accessor for PodcastStateModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + v3);
  uint64_t v6 = v0 + v2;
  uint64_t v7 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(NSObject **)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8));
  int v10 = *(unsigned __int8 *)(v7 + 8);

  sub_1002FFDD0(v4, v6, v5, v8, v10, v9);
}

id sub_10033F234(objc_class *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v79 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v106 = (char *)&v79 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  id v81 = (char *)&v79 - v10;
  __chkstk_darwin(v9);
  uint64_t v107 = (uint64_t)&v79 - v11;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [v2 playState];
  id result = [v2 duration];
  *(float *)&double v18 = v18;
  float v19 = *(float *)&v18 * 1000.0;
  if ((~COERCE_INT(*(float *)&v18 * 1000.0) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_60;
  }
  if (v19 <= -9.2234e18)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v19 >= 9.2234e18)
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  Class v97 = a1;
  id v20 = [v2 bestSummary];
  if (v20 || (id v20 = [v2 itemDescriptionWithoutHTML]) != 0)
  {
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v95 = v22;
    uint64_t v96 = v21;
  }
  else
  {
    uint64_t v95 = 0;
    uint64_t v96 = 0;
  }
  uint64_t v23 = self;
  Class v99 = [v23 legacyPlayCountForPlayState:v16 playCount:[v2 playCount]];
  LODWORD(v98) = [v23 hasBeenPlayedForPlayState:v16];
  uint64_t v24 = [self validatedIdNumberFromStoreId:[v2 storeTrackId]];
  Class v25 = v24;
  if (v24)
  {
    id v80 = [(objc_class *)v24 longLongValue];
  }
  else
  {
    id v80 = 0;
  }
  id v26 = [v2 podcast];
  if (v26)
  {
    unint64_t v27 = v26;
    id v104 = [v26 storeCollectionId];
  }
  else
  {
    id v104 = [v2 storeTrackId];
  }
  static Date.timeIntervalSinceReferenceDate.getter();
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v28 = [v2 podcast];
  if (v28 && (uint64_t v29 = v28, v30 = [v28 title], v29, v30))
  {
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v93 = v32;
    uint64_t v94 = v31;
  }
  else
  {
    uint64_t v93 = 0;
    uint64_t v94 = 0;
  }
  id v33 = [v2 title];
  if (v33)
  {
    unint64_t v34 = v33;
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v103 = v36;
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v103 = 0;
  }
  [v2 byteSize];
  Class v102 = Int64._bridgeToObjectiveC()().super.super.isa;
  id v37 = [v2 guid];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v100 = v40;
    uint64_t v101 = v39;
  }
  else
  {
    uint64_t v100 = 0;
    uint64_t v101 = 0;
  }
  id result = [v2 playhead];
  float v42 = v41 * 1000.0;
  if ((~LODWORD(v42) & 0x7F800000) == 0) {
    goto LABEL_62;
  }
  if (v42 <= -9.2234e18)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v42 < 9.2234e18)
  {
    uint64_t v92 = v35;
    Class v91 = Int._bridgeToObjectiveC()().super.super.isa;
    id v43 = [v2 podcast];
    if (v43
      && (os_log_t v44 = v43, v45 = [v43 title], v44, v45))
    {
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v89 = v47;
      uint64_t v90 = v46;
    }
    else
    {
      uint64_t v89 = 0;
      uint64_t v90 = 0;
    }
    [v2 video];
    Class v88 = Bool._bridgeToObjectiveC()().super.super.isa;
    id v48 = [v2 podcast];
    if (v48
      && (v49 = v48, id v50 = [v48 feedURL], v49, v50))
    {
      uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v86 = v51;
    }
    else
    {
      uint64_t v87 = 0;
      uint64_t v86 = 0;
    }
    id v52 = [v2 podcast];
    if (v52)
    {
      uint64_t v53 = v52;
      [v52 storeCollectionId];

      Class v85 = Int64._bridgeToObjectiveC()().super.super.isa;
    }
    else
    {
      Class v85 = 0;
    }
    [v2 pubDate];
    Class v84 = Double._bridgeToObjectiveC()().super.super.isa;
    id v54 = [v2 podcast];
    if (v54
      && (uint64_t v55 = v54, v56 = [v54 author], v55, v56))
    {
      uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v82 = v57;
    }
    else
    {
      uint64_t v83 = 0;
      uint64_t v82 = 0;
    }
    Class v58 = v97;
    Class v97 = Int._bridgeToObjectiveC()().super.super.isa;
    Class v99 = Int64._bridgeToObjectiveC()().super.super.isa;
    Class v98 = Bool._bridgeToObjectiveC()().super.super.isa;
    if (v25) {
      Class v25 = Int64._bridgeToObjectiveC()().super.super.isa;
    }
    if (v58)
    {
      [(objc_class *)v58 longLongValue];
      v59.super.super.Class isa = Int64._bridgeToObjectiveC()().super.super.isa;
    }
    else
    {
      v59.super.super.Class isa = 0;
    }
    id v60 = [v2 objectID];
    id v61 = [v60 URIRepresentation];

    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v62 = URL.absoluteString.getter();
    uint64_t v64 = v63;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    id v65 = [v2 assetURL];
    uint64_t v66 = v13;
    if (v65)
    {
      uint64_t v67 = v65;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v68 = (uint64_t)v81;
      URL.init(string:)();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v68, 1, v12) != 1)
      {
        uint64_t v70 = v107;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v107, v68, v12);
        id v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
        v69(v70, 0, 1, v12);
        goto LABEL_51;
      }
      sub_100222D54(v68);
    }
    id v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v69(v107, 1, 1, v12);
LABEL_51:
    id v71 = [v2 podcast];
    if (v71)
    {
      uint64_t v72 = v71;
      id v73 = [v71 imageURL];

      if (v73)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v74 = (uint64_t)v79;
        URL.init(string:)();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v74, 1, v12) != 1)
        {
          uint64_t v76 = (uint64_t)v106;
          (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v106, v74, v12);
          uint64_t v75 = 0;
          goto LABEL_56;
        }
        sub_100222D54(v74);
      }
    }
    uint64_t v75 = 1;
    uint64_t v76 = (uint64_t)v106;
LABEL_56:
    v69(v76, v75, 1, v12);
    Class v77 = Int64._bridgeToObjectiveC()().super.super.isa;
    id v78 = objc_allocWithZone((Class)MediaLibraryItem);
    return sub_10033FC28(isa, v94, v93, v92, v103, v102, v101, v100, v91, v90, v89, v96, v95, v88, v87, v86, v85, v84, v83,
             v82,
             v97,
             v99,
             v98,
             v25,
             v59.super.super.isa,
             v62,
             v64,
             v107,
             v76,
             v77);
  }
LABEL_64:
  __break(1u);
  return result;
}

id sub_10033FC28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,void *a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  if (a3)
  {
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (a5) {
      goto LABEL_3;
    }
  }
  else
  {
    NSString v34 = 0;
    if (a5)
    {
LABEL_3:
      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v36 = a11;
      if (a8) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  NSString v35 = 0;
  uint64_t v36 = a11;
  if (a8)
  {
LABEL_4:
    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v37 = a13;
    if (v36) {
      goto LABEL_5;
    }
LABEL_10:
    NSString v56 = 0;
    uint64_t v38 = a16;
    if (v37) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_9:
  NSString v57 = 0;
  uint64_t v37 = a13;
  if (!v36) {
    goto LABEL_10;
  }
LABEL_5:
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v38 = a16;
  if (v37)
  {
LABEL_6:
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_11:
  NSString v55 = 0;
LABEL_12:
  if (v38)
  {
    NSString v54 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v54 = 0;
  }
  id v50 = v34;
  uint64_t v49 = v35;
  if (a20)
  {
    NSString v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v53 = 0;
  }
  NSString v58 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v39 = type metadata accessor for URL();
  uint64_t v40 = *(void *)(v39 - 8);
  float v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  id v43 = 0;
  if (v41(a28, 1, v39) != 1)
  {
    URL._bridgeToObjectiveC()(v42);
    id v43 = v44;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(a28, v39);
  }
  if (v41(a29, 1, v39) == 1)
  {
    uint64_t v46 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v45);
    uint64_t v46 = v47;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(a29, v39);
  }
  id v52 = objc_msgSend(v51, "initWithDateAccessed:album:title:fileSize:externalGuid:bookmarkTimeMillis:seriesName:itemDescription:hasVideo:feedUrl:playlistId:dateReleased:artist:totalTimeMillis:playCount:hasBeenPlayed:serpentId:activeDsid:statsDownloadIdentifier:itemFilePath:artworkUrl:artworkTokenId:", a1, v50, v49, a6, v57, a9, v56, v55, a14, v54, a17, a18, v53, a21, a22,
          a23,
          a24,
          a25,
          v58,
          v43,
          v46,
          a30);

  return v52;
}

uint64_t sub_100340020(uint64_t a1)
{
  v2[30] = a1;
  v2[31] = v1;
  sub_100054B78((uint64_t *)&unk_100600690);
  v2[32] = swift_task_alloc();
  sub_100054B78((uint64_t *)&unk_1005FEA40);
  v2[33] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for MediaIdentifier();
  v2[34] = v3;
  v2[35] = *(void *)(v3 - 8);
  v2[36] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for PlaybackIntent();
  v2[37] = v4;
  v2[38] = *(void *)(v4 - 8);
  v2[39] = swift_task_alloc();
  return _swift_task_switch(sub_10034019C, 0, 0);
}

uint64_t sub_10034019C()
{
  uint64_t v1 = (void *)v0[31];
  v0[2] = v0;
  v0[3] = sub_100340290;
  uint64_t v2 = swift_continuation_init();
  v0[16] = _NSConcreteStackBlock;
  v0[17] = 0x40000000;
  v0[18] = sub_100340A8C;
  v0[19] = &unk_100562740;
  v0[20] = v2;
  [v1 load:v0 + 16];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100340290()
{
  return _swift_task_switch(sub_100340370, 0, 0);
}

uint64_t sub_100340370()
{
  uint64_t v2 = v1[31];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = _swiftEmptyArrayStorage;
  uint64_t v4 = (uint64_t *)(v3 + 16);
  v1[14] = sub_100340CBC;
  v1[15] = v3;
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 1107296256;
  v1[12] = sub_100340B34;
  v1[13] = &unk_100562780;
  uint64_t v5 = _Block_copy(v1 + 10);
  uint64_t v6 = v1[15];
  swift_retain();
  swift_release();
  [(id)v2 enumerateObjectsUsingBlock:v5];
  _Block_release(v5);
  id v7 = [(id)v2 currentItem];
  if (!v7) {
    goto LABEL_9;
  }
  uint64_t v2 = (uint64_t)v7;
  id v8 = [v7 episodeUuid];

  if (!v8) {
    goto LABEL_9;
  }
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100340CC4(v11, v6, v10);
  char v13 = v12;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_9:
    swift_beginAccess();
    uint64_t v17 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
      if (v17 < 0) {
        uint64_t v2 = *v4;
      }
      else {
        uint64_t v2 = v17 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      if (v18) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v18)
      {
LABEL_11:
        if (v18 < 1)
        {
          __break(1u);
          goto LABEL_59;
        }
        uint64_t v19 = 0;
        id v20 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if ((v17 & 0xC000000000000001) != 0) {
            id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v21 = *(id *)(v17 + 8 * v19 + 32);
          }
          uint64_t v22 = v21;
          id v23 = [v21 episodeUuid];
          if (v23)
          {
            uint64_t v24 = v23;
            uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v27 = v26;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v20 = sub_10004CEAC(0, *((void *)v20 + 2) + 1, 1, v20);
            }
            unint64_t v29 = *((void *)v20 + 2);
            unint64_t v28 = *((void *)v20 + 3);
            if (v29 >= v28 >> 1) {
              id v20 = sub_10004CEAC((char *)(v28 > 1), v29 + 1, 1, v20);
            }
            *((void *)v20 + 2) = v29 + 1;
            id v30 = &v20[16 * v29];
            *((void *)v30 + 4) = v25;
            *((void *)v30 + 5) = v27;
          }
          else
          {
          }
          ++v19;
        }
        while (v18 != v19);
LABEL_54:
        swift_bridgeObjectRelease_n();
        goto LABEL_55;
      }
    }
    id v20 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_54;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  unint64_t v0 = (unint64_t)*v4 >> 62;
  if (!v0)
  {
    uint64_t v15 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15 >= v2) {
      goto LABEL_6;
    }
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
LABEL_59:
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15 < v2)
  {
LABEL_68:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v61 < v2)
  {
    __break(1u);
    goto LABEL_62;
  }
LABEL_6:
  if (v2 < 0)
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v0)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v16 < v15) {
    goto LABEL_64;
  }
  if (v15 < 0)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if ((v6 & 0xC000000000000001) == 0 || v2 == v15) {
    goto LABEL_32;
  }
  if (v2 >= (unint64_t)v15)
  {
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  sub_1001C6F20();
  Swift::Int v31 = v2;
  do
  {
    Swift::Int v32 = v31 + 1;
    _ArrayBuffer._typeCheckSlowPath(_:)(v31);
    Swift::Int v31 = v32;
  }
  while (v15 != v32);
LABEL_32:
  if (v0)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.subscript.getter();
    uint64_t v33 = v34;
    uint64_t v2 = v35;
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v15 = v37 >> 1;
  }
  else
  {
    uint64_t v33 = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
    swift_bridgeObjectRetain();
  }
  uint64_t result = swift_endAccess();
  uint64_t v38 = v15 - v2;
  if (v15 != v2)
  {
    if (v15 > v2)
    {
      swift_unknownObjectRetain();
      uint64_t v39 = (id *)(v33 + 8 * v2);
      id v20 = (char *)_swiftEmptyArrayStorage;
      do
      {
        id v40 = *v39;
        id v41 = [v40 episodeUuid];
        if (v41)
        {
          float v42 = v41;
          uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v45 = v44;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v20 = sub_10004CEAC(0, *((void *)v20 + 2) + 1, 1, v20);
          }
          unint64_t v47 = *((void *)v20 + 2);
          unint64_t v46 = *((void *)v20 + 3);
          if (v47 >= v46 >> 1) {
            id v20 = sub_10004CEAC((char *)(v46 > 1), v47 + 1, 1, v20);
          }
          *((void *)v20 + 2) = v47 + 1;
          id v48 = &v20[16 * v47];
          *((void *)v48 + 4) = v43;
          *((void *)v48 + 5) = v45;
        }
        else
        {
        }
        ++v39;
        --v38;
      }
      while (v38);
      swift_unknownObjectRelease();
      goto LABEL_48;
    }
    goto LABEL_67;
  }
  id v20 = (char *)_swiftEmptyArrayStorage;
LABEL_48:
  swift_unknownObjectRelease();
LABEL_55:
  uint64_t v49 = v1[38];
  uint64_t v50 = v1[39];
  id v51 = (char **)v1[36];
  uint64_t v52 = v1[37];
  uint64_t v53 = v1[34];
  uint64_t v54 = v1[35];
  uint64_t v55 = v1[32];
  uint64_t v56 = v1[33];
  uint64_t v57 = v1[30];
  *id v51 = v20;
  (*(void (**)(char **, void, uint64_t))(v54 + 104))(v51, enum case for MediaIdentifier.localEpisodes(_:), v53);
  uint64_t v58 = type metadata accessor for EpisodeListSettings();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v56, 1, 1, v58);
  uint64_t v59 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v55, 1, 1, v59);
  static Set<>.default.getter();
  PlaybackIntent.init(id:listSettings:initialItem:options:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v57, v50, v52);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v52);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v60 = (uint64_t (*)(void))v1[1];
  return v60();
}

uint64_t sub_100340A8C()
{
  return swift_continuation_resume();
}

uint64_t sub_100340A94(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = (void *)(a3 + 16);
    swift_beginAccess();
    id v5 = v3;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    return swift_endAccess();
  }
  return result;
}

void sub_100340B34(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  id v6 = a2;
  v5(a2, a3);
  swift_release();
}

uint64_t (*sub_100340BAC(uint64_t (*result)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))()
{
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    *(void *)uint64_t result = *(void *)(a4 + 8 * a2);
    swift_retain();
    return sub_100340C10;
  }
  return result;
}

uint64_t sub_100340C10()
{
  return swift_release();
}

void (*sub_100340C18(void (*result)(id *a1), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(id *a1)
{
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    id v6 = *(void **)(a4 + 8 * a2);
    *(void *)uint64_t result = v6;
    id v7 = v6;
    return sub_100340C7C;
  }
  return result;
}

void sub_100340C7C(id *a1)
{
}

uint64_t sub_100340C84()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100340CBC(uint64_t a1, uint64_t a2)
{
  return sub_100340A94(a1, a2, v2);
}

uint64_t sub_100340CC4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_22:
    uint64_t v17 = a3;
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    a3 = v17;
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      uint64_t v19 = a3;
      for (uint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(a1 + 8 * i + 32);
        }
        id v8 = v7;
        id v9 = [v7 episodeUuid];
        if (v9)
        {
          uint64_t v10 = v9;
          uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v13 = v12;

          if (v11 == a2 && v13 == v19)
          {

            swift_bridgeObjectRelease();
            return i;
          }
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          if (v15) {
            return i;
          }
          uint64_t v16 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        else
        {

          uint64_t v16 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_21;
          }
        }
        if (v16 == v5) {
          return 0;
        }
      }
    }
  }
  return 0;
}

id sub_100340E58()
{
  uint64_t v1 = OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation____lazy_storage___serialQueue;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation____lazy_storage___serialQueue);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation____lazy_storage___serialQueue);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSOperationQueue) init];
    [v4 setMaxConcurrentOperationCount:1];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_100340EE0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input];
  if (v0[OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input + 8])
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v2 = v0;
    if (*(void *)(*(void *)v1 + 16))
    {
      uint64_t v3 = OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_episodeStorage;
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      long long v123 = *(_OWORD *)&v0[v3];
      swift_unknownObjectRetain();
      uint64_t v4 = static OS_os_log.downloads.getter();
      uint64_t v5 = (objc_class *)sub_100054B78(&qword_100603A10);
      id v6 = (char *)objc_allocWithZone(v5);
      id v7 = &v6[*(void *)((swift_isaMask & *(void *)v6) + 0x198)];
      *(void *)id v7 = 0;
      v7[8] = 2;
      id v8 = (void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))&v6[*(void *)((swift_isaMask & *(void *)v6)
                                                                                       + 0x1A8)];
      void *v8 = sub_100341D04;
      v8[1] = 0;
      *(_OWORD *)&v6[*(void *)((swift_isaMask & *(void *)v6) + 0x1A0)] = v123;
      *(void *)&v6[*(void *)((swift_isaMask & *(void *)v6) + 0x1B0)] = v4;
      v137.receiver = v6;
      v137.super_class = v5;
      id v9 = [super init];
      uint64_t v10 = *(void *)v1;
      uint64_t v11 = (char *)v9 + *(void *)((swift_isaMask & *v9) + 0x198);
      char v12 = v1[8];
      swift_beginAccess();
      uint64_t v13 = *(void *)v11;
      *(void *)uint64_t v11 = v10;
      char v14 = v11[8];
      v11[8] = v12;
      sub_10004B0B0(v10, v12);
      sub_10004B094(v13, v14);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v2;
      uint64_t v16 = (objc_class *)sub_100054B78(&qword_100603A18);
      uint64_t v17 = (char *)objc_allocWithZone(v16);
      uint64_t v18 = &v17[*(void *)((swift_isaMask & *(void *)v17) + 0x180)];
      *(void *)uint64_t v18 = 0;
      v18[8] = 2;
      uint64_t v19 = (void (**)(uint64_t *, void (*)(void ***), uint64_t))&v17[*(void *)((swift_isaMask & *(void *)v17) + 0x188)];
      *uint64_t v19 = sub_100342E14;
      v19[1] = (void (*)(uint64_t *, void (*)(void ***), uint64_t))v15;
      v136.receiver = v17;
      v136.super_class = v16;
      id v20 = v2;
      id v21 = [super init];
      uint64_t v22 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v23 = (objc_class *)sub_100054B78((uint64_t *)&unk_100603A20);
      uint64_t v24 = (char *)objc_allocWithZone(v23);
      uint64_t v25 = &v24[*(void *)((swift_isaMask & *(void *)v24) + 0x180)];
      *(void *)uint64_t v25 = 0;
      v25[8] = 2;
      uint64_t v26 = (void (**)(uint64_t, void (*)(void ***), uint64_t))&v24[*(void *)((swift_isaMask & *(void *)v24)
                                                                                                  + 0x188)];
      *uint64_t v26 = sub_100342E54;
      v26[1] = (void (*)(uint64_t, void (*)(void ***), uint64_t))v22;
      v135.receiver = v24;
      v135.super_class = v23;
      id v118 = [super init];
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v20;
      unint64_t v28 = (objc_class *)sub_100054B78(&qword_1005F7AB0);
      unint64_t v29 = (char *)objc_allocWithZone(v28);
      id v30 = &v29[*(void *)((swift_isaMask & *(void *)v29) + 0x180)];
      *(void *)id v30 = 0;
      v30[8] = 2;
      Swift::Int v31 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v29[*(void *)((swift_isaMask & *(void *)v29)
                                                                               + 0x188)];
      *Swift::Int v31 = sub_100342E5C;
      v31[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v27;
      v134.receiver = v29;
      v134.super_class = v28;
      Swift::Int v32 = v20;
      id v33 = [super init];
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v32;
      uint64_t v35 = (objc_class *)sub_100054B78((uint64_t *)&unk_1005FF010);
      unint64_t v36 = (char *)objc_allocWithZone(v35);
      unint64_t v37 = &v36[*(void *)((swift_isaMask & *(void *)v36) + 0x180)];
      *(void *)unint64_t v37 = 0;
      v37[8] = 2;
      uint64_t v38 = (void (**)(uint64_t@<X8>))&v36[*(void *)((swift_isaMask & *(void *)v36) + 0x188)];
      *uint64_t v38 = sub_100342E64;
      v38[1] = (void (*)(uint64_t@<X8>))v34;
      v133.receiver = v36;
      v133.super_class = v35;
      v32;
      id v124 = [super init];
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v40 = (uint64_t (**)(uint64_t))((char *)v9 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
      uint64_t v41 = *(void *)((char *)v9 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
      *id v40 = sub_1002AE32C;
      v40[1] = (uint64_t (*)(uint64_t))v39;
      sub_1000536BC(v41);
      self;
      uint64_t v120 = v9;
      uint64_t v42 = swift_dynamicCastObjCClass();
      if (v42)
      {
        uint64_t v43 = v42;
        swift_getObjectType();
        uint64_t v44 = swift_conformsToProtocol2();
        uint64_t v45 = v44 ? v44 : 0;
        if (v44 ? v43 : 0)
        {
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v47 = swift_allocObject();
          *(void *)(v47 + 24) = v45;
          swift_unknownObjectWeakInit();
          id v114 = v33;
          uint64_t v48 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v49 = swift_allocObject();
          *(void *)(v49 + 16) = v48;
          *(void *)(v49 + 24) = v47;
          uint64_t v50 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v45 + 72);
          id v51 = (id)swift_unknownObjectRetain();
          swift_retain();
          swift_retain();
          v50(sub_10004AF2C, v49, ObjectType, v45);
          swift_release();
          id v33 = v114;
          swift_release();
          swift_release();
          v128.receiver = v21;
          v128.super_class = (Class)type metadata accessor for BaseOperation();
          [super addDependency:v43];
        }
      }
      uint64_t v52 = swift_allocObject();
      uint64_t v53 = v118;
      swift_unknownObjectWeakInit();
      uint64_t v54 = (uint64_t (**)(uint64_t))&v21[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      uint64_t v55 = *(void *)&v21[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      *uint64_t v54 = sub_1002AE32C;
      v54[1] = (uint64_t (*)(uint64_t))v52;
      uint64_t v56 = v21;
      sub_1000536BC(v55);
      self;
      uint64_t v57 = swift_dynamicCastObjCClass();
      id v122 = v56;
      if (v57)
      {
        uint64_t v58 = v57;
        swift_getObjectType();
        uint64_t v59 = swift_conformsToProtocol2();
        uint64_t v60 = v59 ? v59 : 0;
        if (v59 ? v58 : 0)
        {
          uint64_t v113 = swift_getObjectType();
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 24) = v60;
          swift_unknownObjectWeakInit();
          id v115 = v33;
          uint64_t v63 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v64 = swift_allocObject();
          *(void *)(v64 + 16) = v63;
          *(void *)(v64 + 24) = v62;
          id v65 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v60 + 72);
          swift_unknownObjectRetain();
          uint64_t v66 = v56;
          swift_retain();
          swift_retain();
          v65(sub_10004AF2C, v64, v113, v60);
          uint64_t v53 = v118;
          swift_release();
          id v33 = v115;
          swift_release();
          swift_release();
          uint64_t v67 = (objc_class *)type metadata accessor for BaseOperation();
          v129.receiver = v118;
          v129.super_class = v67;
          [super addDependency:v58];
        }
      }
      uint64_t v68 = v53;

      uint64_t v69 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v70 = (uint64_t (**)(uint64_t))&v68[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      uint64_t v71 = *(void *)&v68[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      *uint64_t v70 = sub_10018A578;
      v70[1] = (uint64_t (*)(uint64_t))v69;
      sub_1000536BC(v71);
      self;
      uint64_t v72 = swift_dynamicCastObjCClass();
      char v119 = v68;
      if (v72)
      {
        uint64_t v73 = v72;
        swift_getObjectType();
        uint64_t v74 = swift_conformsToProtocol2();
        uint64_t v75 = v74 ? v74 : 0;
        if (v74 ? v73 : 0)
        {
          uint64_t v116 = swift_getObjectType();
          uint64_t v77 = swift_allocObject();
          *(void *)(v77 + 24) = v75;
          swift_unknownObjectWeakInit();
          id v78 = v33;
          uint64_t v79 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v80 = swift_allocObject();
          *(void *)(v80 + 16) = v79;
          *(void *)(v80 + 24) = v77;
          id v81 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v75 + 72);
          swift_unknownObjectRetain();
          uint64_t v82 = v68;
          swift_retain();
          swift_retain();
          v81(sub_10004AF2C, v80, v116, v75);
          swift_release();
          id v33 = v78;
          swift_release();
          swift_release();
          uint64_t v83 = (objc_class *)type metadata accessor for BaseOperation();
          v130.receiver = v78;
          v130.super_class = v83;
          [super addDependency:v73];

          uint64_t v68 = v119;
        }
      }
      Class v84 = (char *)v33;

      uint64_t v85 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v86 = (uint64_t (**)(uint64_t))&v84[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      uint64_t v87 = *(void *)&v84[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      *uint64_t v86 = sub_10018A578;
      v86[1] = (uint64_t (*)(uint64_t))v85;
      sub_1000536BC(v87);
      self;
      uint64_t v88 = swift_dynamicCastObjCClass();
      if (v88)
      {
        uint64_t v89 = v88;
        swift_getObjectType();
        uint64_t v90 = swift_conformsToProtocol2();
        if (v90) {
          uint64_t v91 = v90;
        }
        else {
          uint64_t v91 = 0;
        }
        if (v90) {
          uint64_t v92 = v89;
        }
        else {
          uint64_t v92 = 0;
        }
        if (v92)
        {
          uint64_t v117 = swift_getObjectType();
          uint64_t v93 = swift_allocObject();
          *(void *)(v93 + 24) = v91;
          swift_unknownObjectWeakInit();
          uint64_t v94 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v95 = swift_allocObject();
          *(void *)(v95 + 16) = v94;
          *(void *)(v95 + 24) = v93;
          uint64_t v96 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v91 + 72);
          swift_unknownObjectRetain();
          Class v97 = v84;
          swift_retain();
          swift_retain();
          v96(sub_10004A488, v95, v117, v91);
          swift_release();
          swift_release();
          swift_release();
          Class v98 = (objc_class *)type metadata accessor for BaseOperation();
          v131.receiver = v124;
          v131.super_class = v98;
          [super addDependency:v89];
        }
      }
      Class v99 = (char *)v124;

      uint64_t v100 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v101 = (uint64_t (**)(uint64_t))&v99[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
      uint64_t v102 = *(void *)&v99[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
      *uint64_t v101 = sub_100342E80;
      v101[1] = (uint64_t (*)(uint64_t))v100;
      sub_1000536BC(v102);

      id v103 = sub_100340E58();
      sub_100054B78((uint64_t *)&unk_1005FA7F0);
      uint64_t v104 = swift_allocObject();
      *(_OWORD *)(v104 + 16) = xmmword_100472D30;
      *(void *)(v104 + 32) = v120;
      *(void *)(v104 + 40) = v122;
      *(void *)(v104 + 48) = v119;
      *(void *)(v104 + 56) = v84;
      *(void *)(v104 + 64) = v99;
      uint64_t v132 = v104;
      specialized Array._endMutation()();
      sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
      id v105 = v120;
      uint64_t v106 = v122;
      uint64_t v107 = v119;
      uint64_t v108 = v84;
      uint64_t v109 = v99;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v103 addOperations:isa waitUntilFinished:0];
    }
    else
    {
      static os_log_type_t.default.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v111 = (void *)static OS_os_log.restore.getter();
      os_log(_:dso:log:_:_:)();

      uint64_t v112 = *(void (**)(uint64_t *))&v2[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      if (v112)
      {
        uint64_t v127 = sub_100054B78(&qword_100607FD0);
        uint64_t v125 = 0;
        char v126 = 0;
        swift_retain();
        v112(&v125);
        sub_1000536BC((uint64_t)v112);
        sub_10004D2D8((uint64_t)&v125);
      }
      sub_100049E74();
    }
  }
}

void sub_100341D04(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  swift_retain();
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  id v9 = (void *)static OS_os_log.restore.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046D010;
  uint64_t v11 = *(void *)(v7 + 16);
  *(void *)(v10 + 56) = &type metadata for Int;
  *(void *)(v10 + 64) = &protocol witness table for Int;
  *(void *)(v10 + 32) = v11;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  char v12 = *(uint64_t (**)(uint64_t))(v6 + 16);
  uint64_t v13 = swift_retain();
  char v14 = (void *)v12(v13);
  swift_release();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v7;
  void v15[3] = v14;
  v15[4] = sub_10018C84C;
  v15[5] = v8;
  void v18[4] = sub_1002AE3D0;
  void v18[5] = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10003B424;
  v18[3] = &unk_100562B90;
  uint64_t v16 = _Block_copy(v18);
  swift_bridgeObjectRetain();
  id v17 = v14;
  swift_retain();
  swift_release();
  [v17 performBlock:v16];
  _Block_release(v16);
  swift_release();
}

void sub_100341F0C(uint64_t *a1, void (*a2)(void ***), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  swift_retain();
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v8 = (void *)static OS_os_log.restore.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10046D010;
  uint64_t v10 = *(void *)(v6 + 16);
  *(void *)(v9 + 56) = &type metadata for Int;
  *(void *)(v9 + 64) = &protocol witness table for Int;
  *(void *)(v9 + 32) = v10;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    static os_log_type_t.default.getter();
    uint64_t v11 = (void *)static OS_os_log.restore.getter();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10046D010;
    uint64_t v13 = *(void *)(v6 + 16);
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v13;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_episodeStorage);
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_10025C820(v15);
    swift_bridgeObjectRelease();
    id v17 = (void *)swift_allocObject();
    void v17[2] = sub_10005CAE4;
    v17[3] = v7;
    v17[4] = v6;
    uint64_t v18 = *(uint64_t (**)(uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    uint64_t v19 = swift_retain();
    id v20 = (void *)v18(v19);
    swift_release();
    id v21 = (void *)swift_allocObject();
    void v21[2] = v16;
    void v21[3] = v20;
    v21[4] = sub_100342F18;
    void v21[5] = v17;
    id v30 = sub_100342F2C;
    Swift::Int v31 = v21;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_10003B424;
    unint64_t v29 = &unk_100562B18;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_retain();
    id v23 = v20;
    swift_retain();
    swift_release();
    [v23 performBlock:v22];
    _Block_release(v22);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    static os_log_type_t.default.getter();
    uint64_t v24 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t aBlock = (void **)v6;
    LOBYTE(v27) = 0;
    a2(&aBlock);
  }
}

uint64_t sub_100342274(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  if ((a2 & 1) == 0) {
    return a3(a5, 0);
  }
  sub_10024369C();
  uint64_t v8 = swift_allocError();
  *uint64_t v9 = a1;
  swift_errorRetain();
  a3(v8, 1);

  return swift_errorRelease();
}

void sub_100342318(uint64_t a1, void (*a2)(void ***), uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_10025C820(v6);
  swift_bridgeObjectRelease();
  if (v7[2])
  {
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v8 = (void *)static OS_os_log.restore.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10046D010;
    uint64_t v10 = v7[2];
    *(void *)(v9 + 56) = &type metadata for Int;
    *(void *)(v9 + 64) = &protocol witness table for Int;
    *(void *)(v9 + 32) = v10;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = (void *)Strong;
      uint64_t v13 = *(void **)(Strong + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_downloadsManager);
      swift_unknownObjectRetain();

      sub_1000505EC((uint64_t)v7);
      swift_release();
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_100342FFC;
      *(void *)(v15 + 24) = v5;
      uint64_t v22 = sub_100342ED0;
      uint64_t v23 = v15;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v19 = 1107296256;
      id v20 = sub_100342710;
      id v21 = &unk_100562A78;
      uint64_t v16 = _Block_copy(&aBlock);
      swift_release();
      [v13 restoreDownloadedEpisodes:isa completion:v16];
      swift_unknownObjectRelease();
      _Block_release(v16);
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    id v17 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t aBlock = 0;
    LOBYTE(v19) = 0;
    a2(&aBlock);
  }
}

uint64_t sub_100342618(uint64_t a1, uint64_t (*a2)(void, void))
{
  if (*(void *)(a1 + 16))
  {
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v4 = (void *)static OS_os_log.restore.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_10046D010;
    uint64_t v6 = *(void *)(a1 + 16);
    *(void *)(v5 + 56) = &type metadata for Int;
    *(void *)(v5 + 64) = &protocol witness table for Int;
    *(void *)(v5 + 32) = v6;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
  }
  return a2(0, 0);
}

uint64_t sub_100342710(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100342788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  swift_retain();
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v8 = (void *)static OS_os_log.restore.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10046D010;
  uint64_t v10 = (unsigned char *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input);
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input + 8)) {
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(*(void *)v10 + 16);
  *(void *)(v9 + 56) = &type metadata for Int;
  *(void *)(v9 + 64) = &protocol witness table for Int;
  *(void *)(v9 + 32) = v11;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  sub_100041A98((void *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_mediaLibrary), *(void *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_mediaLibrary + 24));
  if (v10[8])
  {
LABEL_6:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v12 = *(void *)v10;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_10005CADC;
    *(void *)(v13 + 24) = v7;
    swift_bridgeObjectRetain();
    dispatch thunk of MediaLibraryClientProtocol.deleteEpisodes(identifiers:completion:)();
    swift_release();
    return sub_10004B094(v12, 0);
  }
  return result;
}

void sub_1003429E0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v4 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)();

  uint64_t v5 = *(void (**)(uint64_t *))(a1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
  if (v5)
  {
    uint64_t v8 = sub_100054B78(&qword_100607FD0);
    uint64_t v6 = 0;
    char v7 = 0;
    swift_retain();
    v5(&v6);
    sub_1000536BC((uint64_t)v5);
    sub_10004D2D8((uint64_t)&v6);
  }
  sub_100049E74();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
}

uint64_t sub_100342AEC(uint64_t a1)
{
  static os_log_type_t.error.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v2 = (void *)static OS_os_log.restore.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10046D010;
  swift_getErrorValue();
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_10004DA4C();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v6;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = (void *)result;
    swift_errorRetain();
    sub_10041985C(a1, 1);

    return swift_errorRelease();
  }
  return result;
}

void sub_100342C68()
{
  sub_10004B094(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input), *(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input + 8));
  sub_10004D2D8(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_mediaLibrary);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation____lazy_storage___serialQueue);
}

id sub_100342CE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RestoreDownloadedEpisodesOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for RestoreDownloadedEpisodesOperation()
{
  return self;
}

uint64_t sub_100342DBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input);
  *(void *)a1 = v3;
  char v4 = *(unsigned char *)(v2 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  return sub_10004B0B0(v3, v4);
}

uint64_t sub_100342DDC()
{
  return swift_deallocObject();
}

void sub_100342E14(uint64_t *a1, void (*a2)(void ***), uint64_t a3)
{
  sub_100341F0C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_100342E1C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100342E54(uint64_t a1, void (*a2)(void ***), uint64_t a3)
{
}

uint64_t sub_100342E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100342788(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_100342E64(uint64_t a1@<X8>)
{
  sub_1003429E0(*(void *)(v1 + 16), a1);
}

uint64_t sub_100342E80(uint64_t a1)
{
  return sub_100342AEC(a1);
}

uint64_t sub_100342E88()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100342ED0(uint64_t a1)
{
  return sub_100342618(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_100342ED8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100342F18(uint64_t a1, char a2)
{
  return sub_100342274(a1, a2 & 1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100342F2C()
{
  return sub_10040ECF4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v0 + 32));
}

uint64_t sub_100342F38()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100342F74()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100343000(long long *a1)
{
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  id v3 = [self mainBundle];
  v15._object = (void *)0x80000001004DE340;
  v4._object = (void *)0x80000001004DE320;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v15._uint64_t countAndFlagsBits = 0x1000000000000016;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v15);

  *(Swift::String *)(v1 + 72) = v6;
  *(_OWORD *)(v1 + 88) = xmmword_1004738B0;
  uint64_t v7 = v1 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_metricsLabel;
  uint64_t v8 = enum case for MetricsLabel.removeEpisodeFromLibrary(_:);
  uint64_t v9 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = v1 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_contextActionType;
  uint64_t v11 = enum case for ContextActionType.removeEpisodeFromLibrary(_:);
  uint64_t v12 = type metadata accessor for ContextActionType();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 104))(v10, v11, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  sub_100042FC4(a1, v1 + 32);
  return v1;
}

uint64_t sub_1003431BC()
{
  uint64_t v1 = v0;
  type metadata accessor for InteractionContext.Page();
  __chkstk_darwin();
  id v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for InteractionContext();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (!*(void *)(v0 + 24)) {
    return 0;
  }
  swift_retain();
  dispatch thunk of ContextActionsConfiguration.context.getter();
  swift_release();
  InteractionContext.page.getter();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v5 + 8);
  v8(v7, v4);
  int v9 = InteractionContext.Page.isEpisodePage.getter();
  sub_1001B4BB0((uint64_t)v3);
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    dispatch thunk of ContextActionsConfiguration.context.getter();
    swift_release();
    InteractionContext.page.getter();
    v8(v7, v4);
    int v10 = InteractionContext.Page.isUnfollowedLibraryShow.getter();
    sub_1001B4BB0((uint64_t)v3);
    if (((v10 | v9) & 1) == 0) {
      return 0;
    }
  }
  else if ((v9 & 1) == 0)
  {
    return 0;
  }
  uint64_t v11 = *(void *)(v1 + 16);
  if (!v11 || *(unsigned char *)(v11 + 32)) {
    return 0;
  }
  uint64_t v14 = *(void **)(v11 + 16);
  uint64_t v13 = *(void *)(v11 + 24);
  swift_retain();
  sub_1001DCD9C((uint64_t)v14, v13, 0);
  swift_bridgeObjectRelease();
  id v15 = [self sharedInstance];
  id v16 = [v15 mainOrPrivateContext];

  uint64_t v42 = _swiftEmptyArrayStorage;
  id v17 = (void (*)())v14[2];
  if (!v17)
  {
    swift_bridgeObjectRelease();

    swift_release();
    Swift::Int v32 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  uint64_t v34 = v11;
  uint64_t v35 = v14;
  uint64_t v19 = v14[4];
  uint64_t v18 = v14[5];
  id v20 = (void *)swift_allocObject();
  void v20[2] = v16;
  v20[3] = v19;
  v20[4] = v18;
  void v20[5] = &v42;
  swift_bridgeObjectRetain();
  id v21 = v16;
  sub_1000536BC(0);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_100343E64;
  *(void *)(v22 + 24) = v20;
  id v40 = sub_10004A010;
  uint64_t v41 = v22;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_100018818;
  uint64_t v39 = &unk_100562CA8;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v21 performBlockAndWait:v23];
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v23 & 1) == 0)
  {
    uint64_t v24 = (char *)v17 - 1;
    if (v17 != (void (*)())1)
    {
      uint64_t v25 = v35 + 7;
      do
      {
        uint64_t v27 = *(v25 - 1);
        uint64_t v26 = *v25;
        unint64_t v28 = (void *)swift_allocObject();
        v28[2] = v21;
        void v28[3] = v27;
        v28[4] = v26;
        uint64_t v28[5] = &v42;
        swift_bridgeObjectRetain();
        id v29 = v21;
        sub_1000536BC((uint64_t)sub_100343E64);
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = sub_100343E64;
        *(void *)(v30 + 24) = v28;
        id v40 = sub_10004A010;
        uint64_t v41 = v30;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v37 = 1107296256;
        uint64_t v38 = sub_100018818;
        uint64_t v39 = &unk_100562CA8;
        Swift::Int v31 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v29 performBlockAndWait:v31];
        _Block_release(v31);
        LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if (v29) {
          goto LABEL_18;
        }
        v25 += 2;
      }
      while (--v24);
    }
    swift_bridgeObjectRelease();

    swift_release();
    id v17 = sub_100343E64;
    Swift::Int v32 = v42;
LABEL_17:
    uint64_t v33 = v32[2];
    swift_bridgeObjectRelease();
    sub_1000536BC((uint64_t)v17);
    return v33 != 0;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_100343708(void *a1, uint64_t a2, uint64_t a3, char **a4)
{
  NSString v8 = String._bridgeToObjectiveC()();
  id v16 = [a1 episodeForUuid:v8];

  if (v16)
  {
    if (([v16 isDownloaded] & 1) == 0
      && ([v16 isBookmarked] & 1) == 0
      && [v16 isBookmarksMigrationRecoveredEpisode])
    {
      int v9 = *a4;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a4 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        int v9 = sub_10004CEAC(0, *((void *)v9 + 2) + 1, 1, v9);
        *a4 = v9;
      }
      unint64_t v12 = *((void *)v9 + 2);
      unint64_t v11 = *((void *)v9 + 3);
      unint64_t v13 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        id v15 = sub_10004CEAC((char *)(v11 > 1), v12 + 1, 1, v9);
        unint64_t v13 = v12 + 1;
        int v9 = v15;
        *a4 = v15;
      }
      *((void *)v9 + 2) = v13;
      uint64_t v14 = &v9[16 * v12];
      *((void *)v14 + 4) = a2;
      *((void *)v14 + 5) = a3;
    }
  }
}

uint64_t sub_100343874()
{
  uint64_t v1 = v0[2];
  if (v1 && !*(unsigned char *)(v1 + 32))
  {
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t v2 = *(void *)(v1 + 24);
    swift_retain();
    sub_1001DCD9C(v3, v2, 0);
    swift_bridgeObjectRelease();
    sub_100041A98(v0 + 4, v0[7]);
    dispatch thunk of LibraryActionControllerProtocol.removeRecoveredEpisodes(with:)();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100343928()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1001DE9EC(v0 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_contextActionType);

  return swift_deallocClassInstance();
}

uint64_t sub_100343A00()
{
  return type metadata accessor for RemoveFromLibraryEpisodeContextAction();
}

uint64_t type metadata accessor for RemoveFromLibraryEpisodeContextAction()
{
  uint64_t result = qword_100603A68;
  if (!qword_100603A68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100343A54()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100343B48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100343BBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_contextActionType, a1);
}

uint64_t sub_100343BD8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

void *sub_100343C38(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_100343C98(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_100343CF8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_100343D58(uint64_t a1)
{
  uint64_t result = sub_100343DE0((unint64_t *)&unk_100608C60);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100343D9C(uint64_t a1)
{
  uint64_t result = sub_100343DE0(&qword_100603BC8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100343DE0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RemoveFromLibraryEpisodeContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100343E24()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100343E64()
{
  sub_100343708(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(char ***)(v0 + 40));
}

uint64_t sub_100343E70()
{
  return swift_deallocObject();
}

unsigned char *storeEnumTagSinglePayload for ArtworkStorageError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100343F1CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkStorageError()
{
  return &type metadata for ArtworkStorageError;
}

unint64_t sub_100343F58()
{
  return 0xD000000000000017;
}

unint64_t sub_100343F78()
{
  unint64_t result = qword_100603BD0;
  if (!qword_100603BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100603BD0);
  }
  return result;
}

uint64_t sub_100343FCC()
{
  sub_100054B1C(v0 + 16, &qword_100603CD8);

  sub_100054B1C(v0 + 64, (uint64_t *)&unk_1005FB890);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchSuggestionsViewController()
{
  return self;
}

id sub_100344048()
{
  return *(id *)(*(void *)v0 + 56);
}

uint64_t sub_100344054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + 16;
  swift_beginAccess();
  return sub_100054BBC(v3, a1, &qword_100603CD8);
}

uint64_t sub_1003440AC(uint64_t a1)
{
  uint64_t v3 = *v1 + 16;
  swift_beginAccess();
  sub_100039D84(a1, v3, &qword_100603CD8);
  return swift_endAccess();
}

uint64_t (*sub_10034410C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100344164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + 64;
  swift_beginAccess();
  return sub_100054BBC(v3, a1, (uint64_t *)&unk_1005FB890);
}

uint64_t sub_1003441BC(uint64_t a1)
{
  uint64_t v3 = *v1 + 64;
  swift_beginAccess();
  sub_100039D84(a1, v3, (uint64_t *)&unk_1005FB890);
  return swift_endAccess();
}

uint64_t (*sub_10034421C())()
{
  return j__swift_endAccess;
}

id sub_100344320()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeDownloadStateControllerProvider();
  return [super dealloc];
}

uint64_t sub_1003443C0(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v23[2] = a7;
  void v23[3] = a6;
  void v23[4] = a5;
  v23[5] = a4;
  char v10 = a2 & 1;
  uint64_t v24 = sub_100054B78(&qword_100603ED8);
  uint64_t v26 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  unint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100054B78((uint64_t *)&unk_100603EE0);
  uint64_t v27 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = sub_10005A078(a1, v10);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = sub_10001A940(a1, v10);
  ShowsSortType.sortDescriptors.getter(a3);
  id v16 = [*(id *)(v7 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v17 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v22 = type metadata accessor for ShowInfo();
  sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
  static FetchedResultsListPublisher.unsafeUnlimitedListPublisher(identifier:entityName:predicate:sortDescriptors:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v28 = v22;
  swift_getKeyPath();
  sub_100044200(&qword_100603EF0, &qword_100603ED8);
  uint64_t v18 = v24;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v18);
  sub_100044200(&qword_100603EF8, (uint64_t *)&unk_100603EE0);
  uint64_t v19 = v25;
  uint64_t v20 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v19);
  return v20;
}

uint64_t sub_100344768()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78(&qword_100601E18);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Logger.navigation.getter();
  int v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Storefront change detected, re-running storefront bootstrap.", v11, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph) = static Dependencies.allDependencies()();
  swift_retain();
  swift_release();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  v21[8] = 1;
  sub_10005E33C();
  AnyHashable.init<A>(_:)();
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  swift_release();
  sub_100054B1C((uint64_t)v22, &qword_1005F7E70);
  unint64_t v12 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner);
  void *v12 = 0;
  v12[1] = 0;
  swift_unknownObjectRelease();
  uint64_t v13 = type metadata accessor for PPTViewControllerProxy();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  uint64_t v14 = v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_pptViewHierarchyProxy;
  swift_beginAccess();
  sub_100039D84((uint64_t)v4, v14, &qword_100601E18);
  swift_endAccess();
  uint64_t v23 = 0;
  memset(v22, 0, sizeof(v22));
  uint64_t v15 = v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
  swift_beginAccess();
  sub_100039D84((uint64_t)v22, v15, &qword_100604710);
  swift_endAccess();
  id v16 = [self sharedApplication];
  id v17 = [v16 delegate];

  if (!v17) {
    return swift_release();
  }
  if ([v17 respondsToSelector:"window"])
  {
    id v18 = [v17 window];
    swift_unknownObjectRelease();
    if (v18)
    {
      uint64_t v19 = sub_10003932C();
      [v18 setRootViewController:v19];
    }
    return swift_release();
  }
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_100344B4C(void *a1)
{
  id v62 = a1;
  uint64_t v61 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v64 = (char *)&v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v63 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = self;
  id v9 = [v8 standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 stringForKey:v10];

  if (v11)
  {

    id v12 = [v8 standardUserDefaults];
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 stringForKey:v13];

    if (v14)
    {
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      sub_100346CCC((uint64_t)v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        swift_bridgeObjectRelease();
        sub_100054B1C((uint64_t)v4, (uint64_t *)&unk_1005F7750);
        return;
      }
      id v18 = v63;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v63, v4, v5);
      id v19 = [self defaultManager];
      URL.path.getter();
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v21 = [v19 contentsAtPath:v20];

      if (!v21)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
        return;
      }
      uint64_t v58 = v5;
      uint64_t v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;

      uint64_t v25 = self;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      *(void *)&long long v70 = 0;
      id v27 = [v25 propertyListWithData:isa options:1 format:0 error:&v70];

      id v28 = (id)v70;
      if (!v27)
      {
LABEL_37:
        id v51 = v28;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_unexpectedError();
        __break(1u);
        return;
      }
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10004D328((uint64_t)v72, (uint64_t)&v70);
      sub_10004D29C(0, &qword_1005FEEB0);
      int v29 = swift_dynamicCast();
      uint64_t v30 = v64;
      if (!v29)
      {
        swift_bridgeObjectRelease();
        sub_10021A410(v22, v24);
        sub_10004D2D8((uint64_t)v72);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v63, v58);
        return;
      }
      uint64_t v54 = v6;
      uint64_t v56 = v22;
      unint64_t v57 = v24;
      id v55 = (id)v68;
      NSArray.makeIterator()();
      NSFastEnumerationIterator.next()();
      if (!v71) {
        goto LABEL_34;
      }
      Swift::Int v31 = (char *)&_swiftEmptyArrayStorage;
      Swift::Int v32 = (unint64_t *)&qword_1005F88D0;
      uint64_t v33 = &type metadata for AnyHashable;
      uint64_t v34 = &protocol witness table for AnyHashable;
      uint64_t v59 = (char *)&type metadata for Any + 8;
      while (1)
      {
        uint64_t v53 = v31;
        while (1)
        {
          sub_10004D384(&v70, &v68);
          sub_10004D29C(0, v32);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_14;
          }
          uint64_t v35 = v34;
          unint64_t v36 = v33;
          uint64_t v37 = *(void **)&v67[0];
          *(void *)&v67[0] = 0x656D614E74736574;
          *((void *)&v67[0] + 1) = 0xE800000000000000;
          id v38 = [v37 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
          swift_unknownObjectRelease();
          if (v38)
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v67, 0, sizeof(v67));
          }
          sub_100053820((uint64_t)v67, (uint64_t)&v68, &qword_1005F5D30);
          uint64_t v33 = v36;
          if (v69) {
            break;
          }
          sub_100054B1C((uint64_t)&v68, &qword_1005F5D30);
LABEL_12:

LABEL_13:
          uint64_t v30 = v64;
LABEL_14:
          NSFastEnumerationIterator.next()();
          if (!v71) {
            goto LABEL_34;
          }
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_12;
        }
        uint64_t v40 = v65;
        uint64_t v39 = v66;
        if (v15 == v65 && v17 == v66 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          NSString v41 = String._bridgeToObjectiveC()();
          *(void *)&long long v68 = 0;
          id v28 = (id)static Dictionary._forceBridgeFromObjectiveC(_:result:)();
          if (!(void)v68)
          {
            __break(1u);
            goto LABEL_37;
          }
          Class v42 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v62 runTest:v41 options:v42];

          uint64_t v33 = v36;
          uint64_t v34 = v35;
          goto LABEL_13;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v52 = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v53 = sub_10004CEAC(0, *((void *)v53 + 2) + 1, 1, v53);
        }
        unint64_t v45 = *((void *)v53 + 2);
        unint64_t v44 = *((void *)v53 + 3);
        unint64_t v46 = v45 + 1;
        uint64_t v47 = v32;
        if (v45 >= v44 >> 1)
        {
          uint64_t v50 = sub_10004CEAC((char *)(v44 > 1), v45 + 1, 1, v53);
          unint64_t v46 = v45 + 1;
          uint64_t v53 = v50;
        }
        uint64_t v48 = v53;
        *((void *)v53 + 2) = v46;
        uint64_t v49 = &v48[16 * v45];
        *((void *)v49 + 4) = v40;
        *((void *)v49 + 5) = v39;

        NSFastEnumerationIterator.next()();
        Swift::Int v31 = v48;
        Swift::Int v32 = v47;
        uint64_t v17 = v52;
        uint64_t v33 = v36;
        uint64_t v34 = v35;
        uint64_t v30 = v64;
        if (!v71)
        {
LABEL_34:
          sub_10021A410(v56, v57);
          swift_bridgeObjectRelease();

          (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v61);
          swift_bridgeObjectRelease();
          sub_10004D2D8((uint64_t)v72);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v63, v58);
          return;
        }
      }
    }
  }
}

uint64_t sub_100345570@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 uuid];
  if (v8)
  {
    id v9 = v8;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    [a1 addedDate];
    Date.init(timeIntervalSinceReferenceDate:)();
    Date.timeIntervalSince1970.getter();
    double v11 = v10;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    double v13 = v11 * 1000.0;
    if ((~COERCE__INT64(v11 * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v13 > -9.22337204e18)
      {
        if (v13 < 9.22337204e18)
        {
          [a1 storeCollectionId];
          v17[1] = AdamID.init(rawValue:)();
          sub_1001A5874();
          BinaryInteger.description.getter();
          ShowInfo.init(adamId:deviceShowId:followTime:)();
          uint64_t v14 = type metadata accessor for ShowInfo();
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v15 = type metadata accessor for ShowInfo();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);

  return v16(a2, 1, 1, v15);
}

BOOL sub_1003457E4()
{
  return (dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0;
}

uint64_t sub_100345870(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for MetricsPipeline();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  __chkstk_darwin(v3);
  unint64_t v44 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005FBF60);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_100603EC0);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for MetricsFieldsContext();
  uint64_t v10 = *(void *)(v41 - 8);
  uint64_t v11 = __chkstk_darwin(v41);
  double v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v35 - v15;
  __chkstk_darwin(v14);
  id v18 = (char *)&v35 - v17;
  uint64_t v19 = type metadata accessor for FollowMetricsEvent.FollowType();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for MetricsData();
  uint64_t result = __chkstk_darwin(v23);
  id v27 = (char *)&v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)a1 + 16))
  {
    id v28 = *(void (**)(char *, void, uint64_t))(v20 + 104);
    uint64_t v36 = v25;
    uint64_t v37 = result;
    v28(v22, enum case for FollowMetricsEvent.FollowType.followedShows(_:), v19);
    static FollowMetricsEvent.makeData(followType:shows:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    MetricsFieldsContext.init()();
    type metadata accessor for PageContextTracker();
    uint64_t v48 = static PageContextTracker.shared.getter();
    static MetricsFieldsContext.Property<A>.pageContextTracker.getter();
    MetricsFieldsContext.addingValue<A>(_:forProperty:)();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
    swift_release();
    int v29 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v30 = v41;
    v29(v13, v41);
    type metadata accessor for MetricsActivity();
    Swift::Int v31 = (void *)static MetricsActivity.shared.getter();
    uint64_t v32 = MetricsActivity.currentPageFields.getter();

    uint64_t v48 = v32;
    uint64_t v33 = v40;
    static MetricsFieldsContext.Property<A>.pageFields.getter();
    sub_100054B78(&qword_1005F8378);
    MetricsFieldsContext.addingValue<A>(_:forProperty:)();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v43);
    swift_bridgeObjectRelease();
    v29(v16, v30);
    uint64_t v34 = v44;
    dispatch thunk of BaseFlowController.metricsPipeline.getter();
    MetricsPipeline.process(_:using:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v47);
    v29(v18, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v27, v37);
  }
  return result;
}

uint64_t sub_100345D90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1003492D0(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_100345DD8@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *a1;
  *a3 = *a2;
  a3[1] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t *sub_100345E18@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = result[1];
  if (*result) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5)
  {
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    if (*(void *)(v4 + 16) <= *(void *)(v3 + 16) >> 3)
    {
      uint64_t v7 = (void *)*result;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1003CD55C(v4);
      uint64_t v6 = v7;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1003CE2C4(v4, v3);
    }
    if (*(void *)(v3 + 16) <= *(void *)(v4 + 16) >> 3)
    {
      sub_1003CD55C(v3);
      uint64_t result = (uint64_t *)v4;
    }
    else
    {
      uint64_t result = (uint64_t *)sub_1003CE2C4(v3, v4);
    }
    *a2 = v6;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_100345EF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v126 = a2;
  uint64_t v125 = type metadata accessor for MetricsPipeline();
  uint64_t v3 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  id v124 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_100054B78(&qword_1005FBF60);
  uint64_t v5 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  id v122 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100054B78(&qword_100603EC0);
  uint64_t v7 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v120 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for MetricsFieldsContext();
  uint64_t v9 = *(void *)(v119 - 8);
  uint64_t v10 = __chkstk_darwin(v119);
  id v118 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v117 = (char *)&v89 - v13;
  __chkstk_darwin(v12);
  uint64_t v116 = (char *)&v89 - v14;
  uint64_t v115 = type metadata accessor for FollowMetricsEvent.FollowType();
  uint64_t v15 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  id v114 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for MetricsData();
  uint64_t v17 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v112 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for ShowInfo();
  uint64_t v19 = __chkstk_darwin(v111);
  uint64_t v127 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v92 = (char *)&v89 - v22;
  __chkstk_darwin(v21);
  uint64_t v94 = (char *)&v89 - v24;
  uint64_t v25 = *a1;
  uint64_t v96 = a1[1];
  uint64_t v26 = *(void *)(v25 + 56);
  uint64_t v90 = v25 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(v25 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v91 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v108 = v23 + 32;
  uint64_t v109 = v23 + 16;
  LODWORD(v93) = enum case for FollowMetricsEvent.FollowType.follow(_:);
  uint64_t v107 = (void (**)(char *, void, uint64_t))(v15 + 104);
  uint64_t v106 = (void (**)(char *, uint64_t))(v15 + 8);
  id v105 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v104 = (void (**)(char *, uint64_t))(v9 + 8);
  id v103 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v102 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v101 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v110 = v23;
  uint64_t v100 = v23 + 8;
  uint64_t v95 = v25;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v31 = 0;
  long long v99 = xmmword_10046D010;
  uint64_t v32 = v110;
  uint64_t v33 = v111;
  uint64_t v34 = v117;
  while (1)
  {
    if (v29)
    {
      uint64_t v97 = (v29 - 1) & v29;
      int64_t v98 = v31;
      unint64_t v35 = __clz(__rbit64(v29)) | (v31 << 6);
      goto LABEL_5;
    }
    int64_t v54 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v54 >= v91) {
      goto LABEL_21;
    }
    unint64_t v55 = *(void *)(v90 + 8 * v54);
    int64_t v56 = v31 + 1;
    if (!v55)
    {
      int64_t v56 = v31 + 2;
      if (v31 + 2 >= v91) {
        goto LABEL_21;
      }
      unint64_t v55 = *(void *)(v90 + 8 * v56);
      if (!v55)
      {
        int64_t v56 = v31 + 3;
        if (v31 + 3 >= v91) {
          goto LABEL_21;
        }
        unint64_t v55 = *(void *)(v90 + 8 * v56);
        if (!v55) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v97 = (v55 - 1) & v55;
    int64_t v98 = v56;
    unint64_t v35 = __clz(__rbit64(v55)) + (v56 << 6);
LABEL_5:
    uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
    uint64_t v37 = v94;
    v36(v94, *(void *)(v95 + 48) + *(void *)(v32 + 72) * v35, v33);
    uint64_t v38 = v127;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v127, v37, v33);
    uint64_t v40 = v114;
    uint64_t v39 = v115;
    (*v107)(v114, v93, v115);
    sub_100054B78(&qword_100603EC8);
    unint64_t v41 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = v99;
    v36((char *)(v42 + v41), (unint64_t)v38, v33);
    uint64_t v43 = v112;
    static FollowMetricsEvent.makeData(followType:shows:)();
    swift_bridgeObjectRelease();
    (*v106)(v40, v39);
    unint64_t v44 = v118;
    MetricsFieldsContext.init()();
    type metadata accessor for PageContextTracker();
    uint64_t v128 = static PageContextTracker.shared.getter();
    uint64_t v45 = v120;
    static MetricsFieldsContext.Property<A>.pageContextTracker.getter();
    MetricsFieldsContext.addingValue<A>(_:forProperty:)();
    (*v105)(v45, v121);
    swift_release();
    uint64_t v46 = *v104;
    uint64_t v47 = v44;
    uint64_t v48 = v119;
    (*v104)(v47, v119);
    type metadata accessor for MetricsActivity();
    uint64_t v49 = (void *)static MetricsActivity.shared.getter();
    uint64_t v50 = MetricsActivity.currentPageFields.getter();

    uint64_t v128 = v50;
    id v51 = v122;
    static MetricsFieldsContext.Property<A>.pageFields.getter();
    sub_100054B78(&qword_1005F8378);
    uint64_t v52 = v116;
    MetricsFieldsContext.addingValue<A>(_:forProperty:)();
    (*v103)(v51, v123);
    swift_bridgeObjectRelease();
    v46(v34, v48);
    uint64_t v53 = v124;
    dispatch thunk of BaseFlowController.metricsPipeline.getter();
    MetricsPipeline.process(_:using:)();
    swift_release();
    (*v102)(v53, v125);
    v46(v52, v48);
    (*v101)(v43, v113);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v127, v33);
    int64_t v31 = v98;
    unint64_t v29 = v97;
  }
  uint64_t v57 = v31 + 4;
  if (v31 + 4 >= v91)
  {
LABEL_21:
    swift_release();
    uint64_t v58 = *(void *)(v96 + 56);
    uint64_t v93 = v96 + 56;
    uint64_t v59 = 1 << *(unsigned char *)(v96 + 32);
    uint64_t v60 = -1;
    if (v59 < 64) {
      uint64_t v60 = ~(-1 << v59);
    }
    unint64_t v61 = v60 & v58;
    uint64_t v94 = (char *)((unint64_t)(v59 + 63) >> 6);
    LODWORD(v95) = enum case for FollowMetricsEvent.FollowType.unfollow(_:);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v62 = 0;
    uint64_t v63 = v110;
    uint64_t v64 = v111;
    uint64_t v65 = v117;
    while (1)
    {
      if (v61)
      {
        uint64_t v97 = (v61 - 1) & v61;
        int64_t v98 = v62;
        unint64_t v66 = __clz(__rbit64(v61)) | (v62 << 6);
      }
      else
      {
        uint64_t v85 = v62 + 1;
        if (__OFADD__(v62, 1)) {
          goto LABEL_43;
        }
        if (v85 >= (uint64_t)v94) {
          return swift_release();
        }
        unint64_t v86 = *(void *)(v93 + 8 * v85);
        uint64_t v87 = v62 + 1;
        if (!v86)
        {
          uint64_t v87 = v62 + 2;
          if (v62 + 2 >= (uint64_t)v94) {
            return swift_release();
          }
          unint64_t v86 = *(void *)(v93 + 8 * v87);
          if (!v86)
          {
            uint64_t v87 = v62 + 3;
            if (v62 + 3 >= (uint64_t)v94) {
              return swift_release();
            }
            unint64_t v86 = *(void *)(v93 + 8 * v87);
            if (!v86)
            {
              uint64_t v88 = v62 + 4;
              if (v62 + 4 >= (uint64_t)v94) {
                return swift_release();
              }
              unint64_t v86 = *(void *)(v93 + 8 * v88);
              if (!v86)
              {
                while (1)
                {
                  uint64_t v87 = v88 + 1;
                  if (__OFADD__(v88, 1)) {
                    goto LABEL_45;
                  }
                  if (v87 >= (uint64_t)v94) {
                    return swift_release();
                  }
                  unint64_t v86 = *(void *)(v93 + 8 * v87);
                  ++v88;
                  if (v86) {
                    goto LABEL_40;
                  }
                }
              }
              uint64_t v87 = v62 + 4;
            }
          }
        }
LABEL_40:
        uint64_t v97 = (v86 - 1) & v86;
        int64_t v98 = v87;
        unint64_t v66 = __clz(__rbit64(v86)) + (v87 << 6);
      }
      uint64_t v67 = *(void (**)(char *, unint64_t, uint64_t))(v63 + 16);
      long long v68 = v92;
      v67(v92, *(void *)(v96 + 48) + *(void *)(v63 + 72) * v66, v64);
      uint64_t v69 = v127;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v127, v68, v64);
      uint64_t v71 = v114;
      uint64_t v70 = v115;
      (*v107)(v114, v95, v115);
      sub_100054B78(&qword_100603EC8);
      unint64_t v72 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = v99;
      v67((char *)(v73 + v72), (unint64_t)v69, v64);
      uint64_t v74 = v112;
      static FollowMetricsEvent.makeData(followType:shows:)();
      swift_bridgeObjectRelease();
      (*v106)(v71, v70);
      uint64_t v75 = v118;
      MetricsFieldsContext.init()();
      type metadata accessor for PageContextTracker();
      uint64_t v128 = static PageContextTracker.shared.getter();
      uint64_t v76 = v120;
      static MetricsFieldsContext.Property<A>.pageContextTracker.getter();
      MetricsFieldsContext.addingValue<A>(_:forProperty:)();
      (*v105)(v76, v121);
      swift_release();
      uint64_t v77 = *v104;
      id v78 = v75;
      uint64_t v79 = v119;
      (*v104)(v78, v119);
      type metadata accessor for MetricsActivity();
      uint64_t v80 = (void *)static MetricsActivity.shared.getter();
      uint64_t v81 = MetricsActivity.currentPageFields.getter();

      uint64_t v128 = v81;
      uint64_t v82 = v122;
      static MetricsFieldsContext.Property<A>.pageFields.getter();
      sub_100054B78(&qword_1005F8378);
      uint64_t v83 = v116;
      MetricsFieldsContext.addingValue<A>(_:forProperty:)();
      (*v103)(v82, v123);
      swift_bridgeObjectRelease();
      v77(v65, v79);
      Class v84 = v124;
      dispatch thunk of BaseFlowController.metricsPipeline.getter();
      MetricsPipeline.process(_:using:)();
      swift_release();
      (*v102)(v84, v125);
      v77(v83, v79);
      (*v101)(v74, v113);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v127, v64);
      int64_t v62 = v98;
      unint64_t v61 = v97;
    }
  }
  unint64_t v55 = *(void *)(v90 + 8 * v57);
  if (v55)
  {
    int64_t v56 = v31 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v56 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    if (v56 >= v91) {
      goto LABEL_21;
    }
    unint64_t v55 = *(void *)(v90 + 8 * v56);
    ++v57;
    if (v55) {
      goto LABEL_20;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_100346CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v23 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  sub_10004D29C(0, (unint64_t *)&qword_100603DE0);
  char v11 = static UITraitCollection.interfaceIdiomIsMac.getter();
  id v12 = [self mainBundle];
  uint64_t v13 = v12;
  if (v11)
  {
    id v14 = [v12 resourceURL];

    if (v14)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v15 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
    }
    else
    {
      uint64_t v15 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
    }
    sub_100053820((uint64_t)v8, (uint64_t)v10, (uint64_t *)&unk_1005F7750);
    type metadata accessor for URL();
    uint64_t v20 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v15) == 1)
    {
      sub_100054B1C((uint64_t)v10, (uint64_t *)&unk_1005F7750);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a1, 1, 1, v15);
    }
    else
    {
      URL.appendingPathComponent(_:)();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v15);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v15);
    }
  }
  else
  {
    NSString v16 = String._bridgeToObjectiveC()();
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v13 URLForResource:v16 withExtension:v17];

    if (v18)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v19 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 0, 1, v19);
    }
    else
    {
      uint64_t v22 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v5, 1, 1, v22);
    }
    return sub_100053820((uint64_t)v5, a1, (uint64_t *)&unk_1005F7750);
  }
}

uint64_t sub_10034707C(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = a2;
  type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin();
  uint64_t v3 = type metadata accessor for OSLogger();
  uint64_t v64 = *(void *)(v3 - 8);
  uint64_t v65 = v3;
  __chkstk_darwin();
  uint64_t v63 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  int64_t v62 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin();
  unint64_t v61 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for FlowPresentationContext();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin();
  uint64_t v59 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  __chkstk_darwin();
  long long v68 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FlowPresentationHints();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FlowDestination();
  uint64_t v67 = *(void *)(v14 - 8);
  __chkstk_darwin();
  unint64_t v66 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  NSString v17 = (char *)&v56 - v16;
  id v18 = self;
  URL._bridgeToObjectiveC()(v19);
  uint64_t v21 = v20;
  unsigned int v22 = [v18 isDebugUrl:v20];

  if (v22)
  {
    [v18 showDebugUI];
    return 1;
  }
  type metadata accessor for DebugSettingsViewController();
  if ((static DebugSettingsViewController.isActivation(url:)() & 1) != 0
    && [self isRunningOnInternalOS])
  {
    uint64_t v23 = v72 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
    swift_beginAccess();
    if (!*(void *)(v23 + 24)) {
      return 1;
    }
    sub_100056D54(v23, (uint64_t)v76);
    sub_100041A98(v76, v77);
    uint64_t v24 = v67;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v17, enum case for FlowDestination.debug(_:), v14);
    static FlowPresentationHints.default.getter();
    dispatch thunk of FlowController.show(destination:hints:referrer:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v14);
    uint64_t v25 = v76;
LABEL_12:
    sub_10004D2D8((uint64_t)v25);
    return 1;
  }
  type metadata accessor for PodcastsURLScheme();
  if (sub_1003B8A70())
  {
    type metadata accessor for PodcastsURLOpenCommand(0);
    uint64_t v26 = swift_dynamicCastClass();
    swift_release();
    if (v26) {
      return 1;
    }
  }
  if (!*(void *)(v72 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner))
  {
    uint64_t v34 = v63;
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._object = (void *)0x80000001004DE6B0;
    v35._uint64_t countAndFlagsBits = 0xD000000000000013;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t v36 = type metadata accessor for URL();
    uint64_t v77 = v36;
    uint64_t v37 = sub_10004A244(v76);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v37, a1, v36);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
    sub_100054B1C((uint64_t)v76, &qword_1005F5D30);
    v38._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v38._object = (void *)0x80000001004DBE80;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    LogMessage.init(stringInterpolation:)();
    uint64_t v39 = v65;
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v34, v39);
    return 0;
  }
  sub_100054B78(&qword_1005F7560);
  swift_unknownObjectRetain();
  BaseObjectGraph.inject<A>(_:)();
  uint64_t v27 = sub_10039B548(a1, (uint64_t)v76);
  if (v27)
  {
    uint64_t v28 = v27;
    swift_getObjectType();
    uint64_t v74 = type metadata accessor for Action();
    uint64_t v75 = sub_10003ABC8((unint64_t *)&qword_1005F8290, (void (*)(uint64_t))&type metadata accessor for Action);
    v73[0] = v28;
    uint64_t v30 = v68;
    uint64_t v29 = v69;
    uint64_t v31 = v70;
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, enum case for ActionMetricsBehavior.notProcessed(_:), v70);
    swift_retain();
    ActionRunner.perform(_:withMetrics:asPartOf:)();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
    sub_10004D2D8((uint64_t)v76);
    uint64_t v25 = v73;
    goto LABEL_12;
  }
  sub_100054B78(&qword_100603DD0);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_10046D010;
  uint64_t v41 = sub_100054B78(&qword_100603DD8);
  uint64_t v42 = v66;
  uint64_t v43 = &v66[*(int *)(v41 + 48)];
  uint64_t v44 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, a1, v44);
  uint64_t v45 = enum case for FlowOrigin.external(_:);
  uint64_t v46 = type metadata accessor for FlowOrigin();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(v43, v45, v46);
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v42, enum case for FlowDestination.unknown(_:), v14);
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v59, enum case for FlowPresentationContext.infer(_:), v57);
  unsigned __int8 v47 = static Link.Presentation.textFollowsTintColor.getter();
  unsigned __int8 v48 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v47) {
    Link.Presentation.init(rawValue:)();
  }
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v48) {
    Link.Presentation.init(rawValue:)();
  }
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v61, enum case for FlowDestinationPageHeader.standard(_:), v60);
  static ActionMetrics.notInstrumented.getter();
  uint64_t v49 = type metadata accessor for FlowAction();
  swift_allocObject();
  uint64_t v32 = 1;
  uint64_t v50 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
  *(void *)(v40 + 56) = v49;
  *(void *)(v40 + 64) = sub_10003ABC8((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
  *(void *)(v40 + 32) = v50;
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  uint64_t v51 = type metadata accessor for TabChangeAction();
  swift_allocObject();
  uint64_t v52 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
  swift_getObjectType();
  uint64_t v74 = v51;
  uint64_t v75 = sub_10003ABC8((unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
  v73[0] = v52;
  int64_t v54 = v68;
  uint64_t v53 = v69;
  uint64_t v55 = v70;
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, enum case for ActionMetricsBehavior.notProcessed(_:), v70);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
  sub_10004D2D8((uint64_t)v76);
  sub_10004D2D8((uint64_t)v73);
  return v32;
}

id sub_100347F6C(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FlowDestination();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [self shouldShowWelcome];
  if (result)
  {
    uint64_t v10 = v2 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
    swift_beginAccess();
    sub_100054BBC(v10, (uint64_t)&aBlock, &qword_100604710);
    if (v22)
    {
      sub_100042FC4(&aBlock, (uint64_t)v25);
      sub_100041A98(v25, v25[3]);
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for FlowDestination.welcome(_:), v5);
      uint64_t v11 = (void *)dispatch thunk of FlowController.viewController(for:referrer:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (v11)
      {
        type metadata accessor for WelcomeViewController();
        uint64_t v12 = (void *)swift_dynamicCastClass();
        if (v12)
        {
          uint64_t v13 = v12;
          [v12 setModalPresentationStyle:1];
          uint64_t v14 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v15 = (void *)swift_allocObject();
          v15[2] = v14;
          void v15[3] = v13;
          v15[4] = a2;
          swift_retain();
          id v16 = v11;
          swift_retain();
          dispatch thunk of WelcomeViewController.deferUntilAcknowledged(_:)();
          swift_release();
          swift_release();
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v13;
          uint64_t v23 = sub_10034A0AC;
          uint64_t v24 = v17;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          uint64_t v21 = sub_10003B424;
          unsigned int v22 = &unk_100562F18;
          id v18 = _Block_copy(&aBlock);
          id v19 = v16;
          swift_release();
          [a1 presentViewController:v13 animated:1 completion:v18];
          _Block_release(v18);
        }
        else
        {
        }
      }
      return (id)sub_10004D2D8((uint64_t)v25);
    }
    else
    {
      return (id)sub_100054B1C((uint64_t)&aBlock, &qword_100604710);
    }
  }
  return result;
}

void sub_10034829C()
{
  uint64_t v0 = type metadata accessor for MetricsData();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    static WelcomeSheetMetricsEvent.makeData()();
    MetricsController.process(_:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (qword_1005F5B18 != -1) {
      swift_once();
    }
    ForegroundSyncUtil.startCloudSyncAfterPrivacy()();
  }
}

void sub_1003483E4()
{
  uint64_t v0 = type metadata accessor for MetricsData();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  [self markWelcomeAsShown];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    static WelcomeSheetMetricsEvent.makeData()();
    MetricsController.process(_:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (qword_1005F5B18 != -1) {
      swift_once();
    }
    ForegroundSyncUtil.startCloudSyncAfterPrivacy()();
  }
}

void sub_100348544(void *a1)
{
  id v1 = [a1 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v6 = [v1 window];

    if (v6)
    {
      id v3 = [self sharedApplication];
      id v4 = [v3 delegate];

      if (v4)
      {
        self;
        uint64_t v5 = (void *)swift_dynamicCastObjCClass();
        if (v5) {
          [v5 _enableTerminationForModalWindow:v6];
        }
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100348708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
  swift_beginAccess();
  return sub_100054BBC(v3, a1, &qword_100604710);
}

double sub_100348764(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v7 = *(double (**)(uint64_t, double, double, double))(a1 + 32);
  uint64_t v8 = swift_retain();
  double v9 = v7(v8, a2, a3, a4);
  swift_release();
  return v9;
}

id sub_1003487D4(void *a1)
{
  uint64_t v3 = type metadata accessor for FlowPresentationHints();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  id v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FlowDestination();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 state];
  if (result == (id)3)
  {
    uint64_t v12 = v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
    id result = (id)swift_beginAccess();
    if (*(void *)(v12 + 24))
    {
      sub_100056D54(v12, (uint64_t)v13);
      sub_100041A98(v13, v13[3]);
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for FlowDestination.debug(_:), v7);
      static FlowPresentationHints.default.getter();
      dispatch thunk of FlowController.show(destination:hints:referrer:)();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return (id)sub_10004D2D8((uint64_t)v13);
    }
  }
  return result;
}

uint64_t sub_100348A58()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100348ABC()
{
  uint64_t v17 = v0;
  swift_release();
  static Logger.downloads.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[11];
    uint64_t v13 = v0[6];
    uint64_t v14 = v0[5];
    uint64_t v15 = v0[7];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v16 = v5;
    v0[3] = v3;
    swift_errorRetain();
    sub_100054B78(&qword_100603F70);
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_10004B974(v6, v7, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to start cache delete observer: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  }
  else
  {
    uint64_t v9 = v0[6];
    uint64_t v8 = v0[7];
    uint64_t v10 = v0[5];
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100348D64()
{
  return sub_10003ABC8((unint64_t *)&unk_100603DB0, (void (*)(uint64_t))type metadata accessor for AppDelegate);
}

uint64_t sub_100348DAC()
{
  return swift_deallocObject();
}

uint64_t sub_100348DFC()
{
  uint64_t v1 = type metadata accessor for StorageAnalyticsResponder();
  uint64_t v17 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AppExitMetricsEvent.ExitKind();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  unint64_t v7 = (void (*)(char *, uint64_t))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for MetricsPipeline();
  uint64_t v16 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v0;
  swift_retain();
  BaseObjectGraph.inject<A>(_:)();
  swift_release();
  (*(void (**)(void (*)(char *, uint64_t), void, uint64_t))(v5 + 104))(v7, enum case for AppExitMetricsEvent.ExitKind.taskSwitch(_:), v4);
  id v11 = [self sharedApplication];
  sub_100231BE8(v7, (uint64_t)v10, v11);

  (*(void (**)(void, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = v15;
  swift_retain();
  BaseObjectGraph.inject<A>(_:)();
  StorageAnalyticsResponder.endObserving()();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v8);
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8Podcasts11AppDelegate_appHasBeenInBackground) = 1;
  return result;
}

uint64_t sub_1003490DC()
{
  uint64_t v0 = type metadata accessor for AppExitMetricsEvent.ExitKind();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (void (*)(char *, uint64_t))((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for MetricsPipeline();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  BaseObjectGraph.inject<A>(_:)();
  swift_release();
  (*(void (**)(void (*)(char *, uint64_t), void, uint64_t))(v1 + 104))(v3, enum case for AppExitMetricsEvent.ExitKind.quit(_:), v0);
  id v8 = [self sharedApplication];
  sub_100231BE8(v3, (uint64_t)v7, v8);

  (*(void (**)(void, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1003492D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShowInfo();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_10003ABC8(&qword_100603ED0, (void (*)(uint64_t))&type metadata accessor for ShowInfo);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1003F5710((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_10034946C()
{
  uint64_t v1 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  uint64_t result = NSUserActivity.stateRestorationNavigationTab.getter();
  if (result != 19)
  {
    uint64_t v6 = result;
    sub_100036488(result);
    Link.Presentation.init(rawValue:)();
    static ActionMetrics.notInstrumented.getter();
    uint64_t v7 = type metadata accessor for TabChangeAction();
    swift_allocObject();
    uint64_t v8 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
    if (*(void *)(v0 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner))
    {
      swift_getObjectType();
      void v10[3] = v7;
      v10[4] = sub_10003ABC8((unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
      v10[0] = v8;
      (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for ActionMetricsBehavior.notProcessed(_:), v1);
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      ActionRunner.perform(_:withMetrics:asPartOf:)();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      sub_100349EF0(v6);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return sub_10004D2D8((uint64_t)v10);
    }
    else
    {
      swift_release();
      return sub_100349EF0(v6);
    }
  }
  return result;
}

uint64_t sub_10034971C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MetricsActivity.PageReferrer();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v71 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  unint64_t v61 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v69 = (char *)&v59 - v14;
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v68 = v18;
  uint64_t v66 = v19;
  if (!v17)
  {
    long long v75 = 0u;
    long long v76 = 0u;
    goto LABEL_13;
  }
  uint64_t v20 = UIApplicationOpenURLOptionsSourceApplicationKey;
  uint64_t v21 = sub_100226C58(v20);
  if ((v22 & 1) == 0)
  {
    long long v75 = 0u;
    long long v76 = 0u;

    goto LABEL_13;
  }
  sub_10004D328(*(void *)(a2 + 56) + 32 * v21, (uint64_t)&v75);

  if (!*((void *)&v76 + 1))
  {
LABEL_13:
    sub_100054B1C((uint64_t)&v75, &qword_1005F5D30);
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    goto LABEL_14;
  }
  int v23 = swift_dynamicCast();
  if (v23) {
    uint64_t v24 = v73;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v23) {
    uint64_t v25 = v74;
  }
  else {
    uint64_t v25 = 0;
  }
  uint64_t v63 = v25;
  uint64_t v64 = v24;
LABEL_14:
  uint64_t v26 = *(void *)(a2 + 16);
  uint64_t v60 = v12;
  if (!v26)
  {
    long long v75 = 0u;
    long long v76 = 0u;
LABEL_22:
    sub_100054B1C((uint64_t)&v75, &qword_1005F5D30);
    goto LABEL_23;
  }
  uint64_t v27 = UIApplicationOpenURLOptionsAnnotationKey;
  uint64_t v28 = sub_100226C58(v27);
  if (v29)
  {
    sub_10004D328(*(void *)(a2 + 56) + 32 * v28, (uint64_t)&v75);
  }
  else
  {
    long long v75 = 0u;
    long long v76 = 0u;
  }

  if (!*((void *)&v76 + 1)) {
    goto LABEL_22;
  }
  sub_100054B78(&qword_1005F8378);
  if (swift_dynamicCast())
  {
    uint64_t v30 = v73;
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v30 = 0;
LABEL_24:
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v72(v16, 1, 1, v71);
  uint64_t v70 = v10;
  int64_t v62 = v16;
  uint64_t v67 = v6;
  uint64_t v65 = v7;
  if (v30)
  {
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
    if (*(void *)(v30 + 16))
    {
      uint64_t v34 = v31;
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_100051E78(v34, v33);
      if (v36)
      {
        sub_10004D328(*(void *)(v30 + 56) + 32 * v35, (uint64_t)&v75);
      }
      else
      {
        long long v75 = 0u;
        long long v76 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v75 = 0u;
      long long v76 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v37 = v71;
    if (*((void *)&v76 + 1))
    {
      uint64_t v38 = v3;
      uint64_t v71 = (uint64_t)v9;
      uint64_t v39 = v66;
      int v40 = swift_dynamicCast();
      uint64_t v41 = v72;
      v72((char *)v39, v40 ^ 1u, 1, v37);
      uint64_t v42 = v70;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v39, 1, v37) != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v48 = (uint64_t)v62;
        sub_100054B1C((uint64_t)v62, (uint64_t *)&unk_1005F7750);
        uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
        uint64_t v58 = v60;
        v57(v60, v39, v37);
        v57((char *)v48, (uint64_t)v58, v37);
        v41((char *)v48, 0, 1, v37);
        uint64_t v50 = (uint64_t)v61;
        uint64_t v9 = (char *)v71;
        goto LABEL_46;
      }
      sub_100054B1C(v39, (uint64_t *)&unk_1005F7750);
      uint64_t v9 = (char *)v71;
      uint64_t v3 = v38;
      goto LABEL_36;
    }
  }
  else
  {
    long long v75 = 0u;
    long long v76 = 0u;
    uint64_t v37 = v71;
  }
  sub_100054B1C((uint64_t)&v75, &qword_1005F5D30);
  uint64_t v43 = v66;
  v72((char *)v66, 1, 1, v37);
  sub_100054B1C(v43, (uint64_t *)&unk_1005F7750);
  if (!v30)
  {
    long long v75 = 0u;
    long long v76 = 0u;
    uint64_t v48 = (uint64_t)v62;
    goto LABEL_44;
  }
LABEL_36:
  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v30 + 16) && (unint64_t v46 = sub_100051E78(v44, v45), (v47 & 1) != 0))
  {
    sub_10004D328(*(void *)(v30 + 56) + 32 * v46, (uint64_t)&v75);
  }
  else
  {
    long long v75 = 0u;
    long long v76 = 0u;
  }
  uint64_t v48 = (uint64_t)v62;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v76 + 1))
  {
    uint64_t v38 = v3;
    if (swift_dynamicCast())
    {
      uint64_t v49 = (uint64_t)v69;
      URL.init(string:)();
      swift_bridgeObjectRelease();
      sub_100054B1C(v48, (uint64_t *)&unk_1005F7750);
      sub_100053820(v49, v48, (uint64_t *)&unk_1005F7750);
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v38 = v3;
  sub_100054B1C((uint64_t)&v75, &qword_1005F5D30);
LABEL_45:
  uint64_t v50 = (uint64_t)v61;
LABEL_46:
  uint64_t v51 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, a1, v37);
  v72((char *)v51, 0, 1, v37);
  sub_100054BBC(v48, v68, (uint64_t *)&unk_1005F7750);
  sub_100054BBC(v51, v50, (uint64_t *)&unk_1005F7750);
  MetricsActivity.PageReferrer.init(app:externalURL:openURL:)();
  sub_100054B1C(v51, (uint64_t *)&unk_1005F7750);
  type metadata accessor for MetricsActivity();
  uint64_t v52 = (void *)static MetricsActivity.shared.getter();
  MetricsActivity.firstPageEventWithReferrer.setter();

  uint64_t v53 = (void *)static MetricsActivity.shared.getter();
  MetricsActivity.beginActiveCrossfireReferral(_:)();

  uint64_t v54 = static MetricsActivity.shared.getter();
  MetricsActivity.setupWidgetData(_:)();

  uint64_t v55 = *(void *)(v38 + OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph);
  swift_retain();
  LOBYTE(v54) = sub_10034707C(a1, v55);
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v67);
  sub_100054B1C(v48, (uint64_t *)&unk_1005F7750);
  return v54 & 1;
}

uint64_t sub_100349EF0(uint64_t result)
{
  if (result != 19) {
    return sub_10003649C(result);
  }
  return result;
}

uint64_t sub_100349F00()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100349F44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = dispatch thunk of BaseObjectGraph.adding(allDependenciesOf:)();
  *a1 = result;
  return result;
}

uint64_t sub_100349F74()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100349FAC(__n128 a1, __n128 a2)
{
  return (*(uint64_t (**)(__n128, __n128, double))(v2 + 16))(a1, a2, *(double *)(v2 + 32));
}

uint64_t sub_100349FDC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10034A018()
{
}

uint64_t sub_10034A020()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_10034A068()
{
}

uint64_t sub_10034A074()
{
  return swift_deallocObject();
}

void sub_10034A0AC()
{
  sub_100348544(*(void **)(v0 + 16));
}

uint64_t sub_10034A0B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1003443C0(2, 1, 4, (uint64_t)sub_100345570, 0, (uint64_t)sub_1003457E4, 0);
  *a1 = result;
  return result;
}

uint64_t sub_10034A11C(uint64_t a1)
{
  return sub_100345870(a1, v1);
}

uint64_t sub_10034A124(uint64_t *a1)
{
  return sub_100345EF8(a1, v1);
}

uint64_t sub_10034A130()
{
  return 8;
}

void *sub_10034A13C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10034A148()
{
  uint64_t v1 = type metadata accessor for AppEnterMetricsEvent.EnterKind();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for MetricsPipeline();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

void sub_10034A2A0()
{
  sub_100344B4C(*(void **)(v0 + 24));
}

uint64_t sub_10034A2C8()
{
  return sub_100344768();
}

uint64_t sub_10034A318@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 64);
  return result;
}

id sub_10034A324()
{
  uint64_t v1 = *(void **)(v0 + 72);
  if (v1)
  {
    id v2 = *(id *)(v0 + 72);
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)NSOperationQueue) init];
    [v3 setMaxConcurrentOperationCount:1];
    uint64_t v4 = *(void **)(v0 + 72);
    *(void *)(v0 + 72) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void sub_10034A3A4(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (a2 == 1)
    {
      static os_log_type_t.default.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v20 = (uint64_t)a4;
      uint64_t v21 = (void *)static OS_os_log.restore.getter();
      os_log(_:dso:log:_:_:)();

      id v22 = [self sharedApplication];
      NSString v23 = String._bridgeToObjectiveC()();
      uint64_t v42 = sub_10034B3B4;
      uint64_t v43 = v6;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v39 = 1107296256;
      int v40 = sub_10003B424;
      uint64_t v41 = &unk_1005631F8;
      uint64_t v24 = _Block_copy(&aBlock);
      uint64_t v25 = a5;
      swift_retain();
      swift_release();
      id v26 = [v22 beginBackgroundTaskWithName:v23 expirationHandler:v24];
      _Block_release(v24);

      v6[7] = v26;
      sub_10034ADE0((uint64_t)v26, v20, v25);
    }
    else
    {
      uint64_t v35 = v16;
      uint64_t v36 = v17;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = a4;
      *(void *)(v29 + 24) = a5;
      sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
      sub_10034B2FC(a1, a2);
      swift_retain();
      uint64_t v34 = static OS_dispatch_queue.main.getter();
      uint64_t v30 = swift_allocObject();
      swift_weakInit();
      uint64_t v31 = (void *)swift_allocObject();
      long long v31[2] = a1;
      v31[3] = v30;
      v31[4] = a2;
      v31[5] = a3;
      v31[6] = sub_10034B2E8;
      v31[7] = v29;
      uint64_t v42 = sub_10034B390;
      uint64_t v43 = v31;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v39 = 1107296256;
      int v40 = sub_10003B424;
      uint64_t v41 = &unk_1005631D0;
      uint64_t v32 = _Block_copy(&aBlock);
      sub_10034B2FC(a1, a2);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      long long aBlock = (void **)_swiftEmptyArrayStorage;
      sub_10002FC48();
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v33 = (void *)v34;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v32);
      swift_release();

      sub_10034B3A0(a1, a2);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v12);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v35);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v27 = a4;
    uint64_t v28 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)();

    v27(1);
  }
}

void sub_10034A8CC(uint64_t a1)
{
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  id v2 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)();

  id v3 = [self sharedApplication];
  [v3 endBackgroundTask:*(void *)(a1 + 56)];
}

uint64_t sub_10034A9A0(uint64_t a1, uint64_t a2, __int16 a3, uint64_t (*a4)(uint64_t))
{
  if ((a3 & 0x100) != 0)
  {
    char v7 = a3;
    sub_100058170(a1, a2, a3);
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v10 = (void *)static OS_os_log.restore.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10046D010;
    sub_10005C4DC();
    uint64_t v12 = Error.localizedDescription.getter();
    uint64_t v14 = v13;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_10004DA4C();
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v14;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    a4(0);
    return sub_100059530(a1, a2, v7, 1);
  }
  else
  {
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    id v5 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)();

    return a4(1);
  }
}

uint64_t sub_10034AB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v11 = (void *)static OS_os_log.restore.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10046D010;
  *(void *)(v12 + 56) = &type metadata for Int;
  *(void *)(v12 + 64) = &protocol witness table for Int;
  *(void *)(v12 + 32) = a1;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = a3;
    void v14[3] = a4;
    v14[4] = a5;
    v14[5] = a6;
    swift_retain();
    swift_retain();
    sub_100222E84(a1, (uint64_t)sub_10034B3FC, (uint64_t)v14);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10034ACF0(char a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v9 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)();

  return a2((a1 & 1) == 0, a4, a5);
}

void sub_10034ADE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v8 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)();

  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_allocObject();
  *((void *)v9 + 2) = v4;
  *((void *)v9 + 3) = a2;
  *((void *)v9 + 4) = a3;
  *((void *)v9 + 5) = a1;
  uint64_t v10 = (objc_class *)sub_100054B78(&qword_1005F7AB0);
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  uint64_t v12 = &v11[*(void *)((swift_isaMask & *(void *)v11) + 0x180)];
  *(void *)uint64_t v12 = 0;
  v12[8] = 2;
  uint64_t v13 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v11[*(void *)((swift_isaMask & *(void *)v11) + 0x188)];
  *uint64_t v13 = sub_10034B254;
  v13[1] = v9;
  v19.receiver = v11;
  v19.super_class = v10;
  swift_retain();
  swift_retain();
  [super init];
  id v15 = sub_10034A324();
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10046D060;
  *(void *)(v16 + 32) = v14;
  specialized Array._endMutation()();
  sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
  id v17 = v14;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v15 addOperations:isa waitUntilFinished:0];
}

uint64_t sub_10034AFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a5;
  void v10[3] = a6;
  v10[4] = a7;
  swift_retain();
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v11 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)();

  sub_1002AC8E0(0, (void (*)(uint64_t, uint64_t, void))sub_10034B298, (uint64_t)v10);

  return swift_release();
}

void sub_10034B0EC(uint64_t a1, uint64_t a2, __int16 a3, void (*a4)(BOOL), uint64_t a5, uint64_t a6)
{
  a4((a3 & 0x100) == 0);
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  char v7 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)();

  if (UIBackgroundTaskInvalid != a6)
  {
    id v8 = [self sharedApplication];
    [v8 endBackgroundTask:a6];
  }
}

uint64_t sub_10034B1FC()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10034B24C()
{
  return sub_100017130();
}

uint64_t sub_10034B254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10034AFF4(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_10034B260()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10034B298(uint64_t a1, uint64_t a2, __int16 a3)
{
  sub_10034B0EC(a1, a2, a3 & 0x1FF, *(void (**)(BOOL))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_10034B2B0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10034B2E8(uint64_t a1, uint64_t a2, __int16 a3)
{
  return sub_10034A9A0(a1, a2, a3 & 0x1FF, *(uint64_t (**)(uint64_t))(v3 + 16));
}

uint64_t sub_10034B2FC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10034B310()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10034B348()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10034B390()
{
  return sub_10034AB5C(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_10034B3A0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_release();
  }
  return result;
}

void sub_10034B3B4()
{
  sub_10034A8CC(v0);
}

uint64_t sub_10034B3BC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10034B3FC(char a1)
{
  return sub_10034ACF0(a1 & 1, *(uint64_t (**)(BOOL, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10034B40C()
{
  return sub_100017130();
}

uint64_t sub_10034B414()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10034B44C()
{
  return swift_deallocObject();
}

uint64_t sub_10034B464()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28PlayNextPodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10034B51C()
{
  return type metadata accessor for PlayNextPodcastContextAction();
}

uint64_t type metadata accessor for PlayNextPodcastContextAction()
{
  uint64_t result = qword_1006040E8;
  if (!qword_1006040E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10034B570()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10034B61C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28PlayNextPodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_10034B690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.playPodcastNext(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_10034B768(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

void *sub_10034B7C8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_10034B828(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_10034B888(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_10034B8E8(uint64_t a1)
{
  uint64_t result = sub_10034B9B4(&qword_1006041E0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10034B92C(uint64_t a1)
{
  uint64_t result = sub_10034B9B4(&qword_1006041E8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10034B970(uint64_t a1)
{
  uint64_t result = sub_10034B9B4(&qword_1006041F0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10034B9B4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PlayNextPodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MTInlineNowPlayingIndicatorView.indicatorState.getter()
{
  unint64_t v1 = (unint64_t)[v0 playbackState];
  if (v1 >= 4) {
    return 0;
  }
  else {
    return 0x3010200u >> (8 * v1);
  }
}

id MTInlineNowPlayingIndicatorView.indicatorState.setter(char a1)
{
  return [v1 setPlaybackState:qword_100477040[a1]];
}

id (*MTInlineNowPlayingIndicatorView.indicatorState.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  unint64_t v3 = (unint64_t)[v1 playbackState];
  unsigned int v4 = 0x3010200u >> (8 * v3);
  if (v3 >= 4) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 8) = v4;
  return sub_10034BAC0;
}

id sub_10034BAC0(uint64_t a1)
{
  return [*(id *)a1 setPlaybackState:qword_100477040[*(char *)(a1 + 8)]];
}

id MTInlineNowPlayingIndicatorView.view.getter()
{
  return v0;
}

id sub_10034BAE8()
{
  return [v0 sizeThatFitsBarHeight:];
}

void (*sub_10034BAF8(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MTInlineNowPlayingIndicatorView.indicatorState.modify((uint64_t)v2);
  return sub_1001B9084;
}

uint64_t MTInlineNowPlayingIndicatorView.accessibilityIdentifier.getter()
{
  _StringGuts.grow(_:)(75);
  v1._object = (void *)0x80000001004DEB30;
  v1._uint64_t countAndFlagsBits = 0xD000000000000048;
  String.append(_:)(v1);
  [v0 playbackState];
  _print_unlocked<A, B>(_:_:)();
  v2._uint64_t countAndFlagsBits = 93;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return 0;
}

uint64_t MTInlineNowPlayingIndicatorView.accessibilityIdentifier.setter()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_10034BCA0()
{
  unint64_t result = qword_1006041F8;
  if (!qword_1006041F8)
  {
    sub_10034BCF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006041F8);
  }
  return result;
}

unint64_t sub_10034BCF8()
{
  unint64_t result = qword_1005FB9F0;
  if (!qword_1005FB9F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005FB9F0);
  }
  return result;
}

void sub_10034BD38(uint64_t a1, void *a2)
{
  unint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t property wrapper backing initializer of PodcastsPlayerAdapter.playbackSpeedMenu()
{
  return Published.init(initialValue:)();
}

uint64_t PodcastsPlayerAdapter.playbackSpeedMenu.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10034BE60@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10034BEE4(void **a1, void **a2)
{
  Swift::String v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static Published.subscript.setter();
}

uint64_t PodcastsPlayerAdapter.playbackSpeedMenu.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return static Published.subscript.setter();
}

void (*PodcastsPlayerAdapter.playbackSpeedMenu.modify(void *a1))(void *a1)
{
  Swift::String v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_10034C054;
}

void sub_10034C054(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t PodcastsPlayerAdapter.playbackSpeedMenuPublisher.getter()
{
  return swift_endAccess();
}

uint64_t PodcastsPlayerAdapter.$playbackSpeedMenu.setter(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100604218);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  sub_100054B78(&qword_100604210);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*PodcastsPlayerAdapter.$playbackSpeedMenu.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_100054B78(&qword_100604218);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  char v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter__playbackSpeedMenu;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_100054B78(&qword_100604210);
  Published.projectedValue.getter();
  swift_endAccess();
  return sub_10034C35C;
}

void sub_10034C35C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  char v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

id PodcastsPlayerAdapter.playerPathCoordinator.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator);
}

id PodcastsPlayerAdapter.playbackPlayerPath.getter()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator) metadataPlayerPath];

  return v1;
}

id PodcastsPlayerAdapter.route.getter()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator) metadataPlayerPath];
  id v2 = [v1 route];

  return v2;
}

void PodcastsPlayerAdapter.route.setter(void *a1)
{
  dispatch thunk of PlayerPathCoordinator.updatePlayerPaths(with:)();
}

void (*PodcastsPlayerAdapter.route.modify(void *a1))(id *a1, char a2)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator);
  a1[1] = v3;
  id v4 = [v3 metadataPlayerPath];
  id v5 = [v4 route];

  *a1 = v5;
  return sub_10034C7EC;
}

void sub_10034C7EC(id *a1, char a2)
{
  id v4 = *a1;
  if (a2)
  {
    id v2 = v4;
    dispatch thunk of PlayerPathCoordinator.updatePlayerPaths(with:)();

    uint64_t v3 = v2;
  }
  else
  {
    dispatch thunk of PlayerPathCoordinator.updatePlayerPaths(with:)();
    uint64_t v3 = v4;
  }
}

uint64_t PodcastsPlayerAdapter.playerID.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerID);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PodcastsPlayerAdapter.playerID.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerID);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PodcastsPlayerAdapter.playerID.modify())()
{
  return j__swift_endAccess;
}

id PodcastsPlayerAdapter.avPlayer.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  id v2 = [v1 player];
  return v2;
}

id PodcastsPlayerAdapter.isHandoffEnabled.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  id v2 = [v1 commandCenter];
  id v3 = [v2 setPlaybackSessionCommand];

  id v4 = [v3 isEnabled];
  return v4;
}

void PodcastsPlayerAdapter.isHandoffEnabled.setter(char a1)
{
  id v2 = [self defaultInstance];
  id v3 = [v2 player];

  id v4 = [v3 commandCenter];
  id v5 = [v4 setPlaybackSessionCommand];

  [v5 setEnabled:a1 & 1];
}

void (*PodcastsPlayerAdapter.isHandoffEnabled.modify(uint64_t a1))(uint64_t a1)
{
  id v2 = self;
  *(void *)a1 = v2;
  id v3 = [v2 defaultInstance];
  id v4 = [v3 player];

  id v5 = [v4 commandCenter];
  id v6 = [v5 setPlaybackSessionCommand];

  LOBYTE(v5) = [v6 isEnabled];
  *(unsigned char *)(a1 + 8) = (_BYTE)v5;
  return sub_10034CC64;
}

void sub_10034CC64(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 8);
  id v2 = [*(id *)a1 defaultInstance];
  id v3 = [v2 player];

  id v4 = [v3 commandCenter];
  id v5 = [v4 setPlaybackSessionCommand];

  [v5 setEnabled:v1];
}

id PodcastsPlayerAdapter.__deallocating_deinit()
{
  [*(id *)&v0[OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerRequestController] endAutomaticResponseLoading];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastsPlayerAdapter(0);
  [super dealloc];
}

uint64_t PodcastsPlayerAdapter.isTargetPlaying.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess();
  return *v1;
}

void sub_10034CF98(char a1)
{
  int v3 = a1 & 1;
  id v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess();
  int v5 = *v4;
  *id v4 = a1;
  if (v5 != v3)
  {
    id v6 = [self defaultCenter];
    PlayerNotification_PlaystateDidChange.getter();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 postNotificationName:v7 object:v1];
  }
}

id PodcastsPlayerAdapter.isLocal.getter()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator) playbackPlayerPath];
  id v2 = [v1 route];

  if (!v2) {
    return 0;
  }
  id v3 = [v2 isDeviceRoute];

  return v3;
}

id PodcastsPlayerAdapter.localPlaybackRequested.getter()
{
  return sub_10034D140((SEL *)&selRef_isPlaybackRequested);
}

id PodcastsPlayerAdapter.localHasChapters.getter()
{
  return sub_10034D140((SEL *)&selRef_hasChapters);
}

id sub_10034D140(SEL *a1)
{
  id v2 = [self defaultInstance];
  id v3 = [v2 player];

  id v4 = [v3 *a1];
  return v4;
}

uint64_t PodcastsPlayerAdapter.autoStopMode.getter@<X0>(void *a1@<X8>)
{
  id v2 = self;
  id v3 = [v2 defaultInstance];
  id v4 = [v3 player];

  id v5 = [v4 autoStop];
  id v6 = [v2 defaultInstance];
  id v7 = [v6 player];

  [v7 autoStopTimerTime];
  uint64_t v9 = v8;

  switch((unint64_t)v5)
  {
    case 1uLL:
      *a1 = v9;
      uint64_t v10 = (unsigned int *)&enum case for PlayerAutoStopMode.timer(_:);
      break;
    case 2uLL:
      uint64_t v10 = (unsigned int *)&enum case for PlayerAutoStopMode.chapterEnd(_:);
      break;
    case 3uLL:
      uint64_t v10 = (unsigned int *)&enum case for PlayerAutoStopMode.assetEnd(_:);
      break;
    case 4uLL:
      uint64_t v10 = (unsigned int *)&enum case for PlayerAutoStopMode.mediaTime(_:);
      break;
    default:
      uint64_t v10 = (unsigned int *)&enum case for PlayerAutoStopMode.off(_:);
      break;
  }
  uint64_t v11 = *v10;
  uint64_t v12 = type metadata accessor for PlayerAutoStopMode();
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(a1, v11, v12);
}

uint64_t PodcastsPlayerAdapter.autoStopMode.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlayerAutoStopMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v36 = (double *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  id v6 = (char *)&v32 - v5;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v32 - v7;
  __chkstk_darwin();
  uint64_t v37 = (char *)&v32 - v9;
  PodcastsPlayerAdapter.autoStopMode.getter((uint64_t *)((char *)&v32 - v9));
  uint64_t v10 = self;
  id v11 = [v10 defaultInstance];
  id v12 = [v11 player];

  [v12 setAutoStop:0];
  id v35 = v10;
  id v13 = [v10 defaultInstance];
  id v33 = [v13 player];

  uint64_t v14 = v3;
  id v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v38 = a1;
  v15(v8, a1, v2);
  v15(v6, (uint64_t)v8, v2);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t))(v3 + 88);
  int v17 = v16(v6, v2);
  int v18 = enum case for PlayerAutoStopMode.timer(_:);
  if (v17 == enum case for PlayerAutoStopMode.timer(_:))
  {
    uint64_t v19 = 1;
  }
  else if (v17 == enum case for PlayerAutoStopMode.off(_:))
  {
    uint64_t v19 = 0;
  }
  else if (v17 == enum case for PlayerAutoStopMode.chapterEnd(_:))
  {
    uint64_t v19 = 2;
  }
  else if (v17 == enum case for PlayerAutoStopMode.assetEnd(_:))
  {
    uint64_t v19 = 3;
  }
  else
  {
    if (v17 != enum case for PlayerAutoStopMode.mediaTime(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    uint64_t v19 = 4;
  }
  uint64_t v34 = *(void (**)(char *, uint64_t))(v14 + 8);
  v34(v8, v2);
  id v20 = v33;
  [v33 setAutoStop:v19];

  uint64_t v21 = v36;
  uint64_t v22 = v38;
  v15((char *)v36, v38, v2);
  if (v16((char *)v21, v2) == v18)
  {
    (*(void (**)(double *, uint64_t))(v14 + 96))(v21, v2);
    double v23 = *v21;
    id v24 = [v35 defaultInstance];
    id v25 = [v24 player];

    [v25 setAutoStopTimerTime:v23];
    id v26 = v37;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))v34;
  }
  else
  {
    id v28 = [v35 defaultInstance];
    uint64_t v29 = v22;
    id v30 = [v28 player];

    [v30 setAutoStopTimerTime:0.0];
    uint64_t v22 = v29;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))v34;
    v34((char *)v21, v2);
    id v26 = v37;
  }
  sub_100352950(&qword_100604228, (void (*)(uint64_t))&type metadata accessor for PlayerAutoStopMode);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
    sub_100350670();
  }
  v27(v22, v2);
  return ((uint64_t (*)(char *, uint64_t))v27)(v26, v2);
}

void (*PodcastsPlayerAdapter.autoStopMode.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for PlayerAutoStopMode();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  PodcastsPlayerAdapter.autoStopMode.getter(v7);
  return sub_10034D8CC;
}

void sub_10034D8CC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    PodcastsPlayerAdapter.autoStopMode.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PodcastsPlayerAdapter.autoStopMode.setter(*(void *)(*(void *)a1 + 32));
  }
  free(v4);
  free(v3);

  free(v2);
}

id PodcastsPlayerAdapter.localChapterIndex.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  id v2 = [v1 currentChapterIndexSwift];
  return v2;
}

uint64_t PodcastsPlayerAdapter.localChapterCount.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  unint64_t v2 = (unint64_t)[v1 chapterCount];
  if ((v2 & 0x8000000000000000) == 0) {
    return v2;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double PodcastsPlayerAdapter.localLoadedDuration.getter()
{
  return sub_1003505D0((SEL *)&selRef_loadedDuration);
}

double PodcastsPlayerAdapter.localTotalDuration.getter()
{
  return sub_1003505D0((SEL *)&selRef_duration);
}

id PodcastsPlayerAdapter.currentItemDescriptionHasHTML.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 currentItem];

  if (!v1) {
    return 0;
  }
  id v2 = [v1 episode];
  if (v2)
  {
    id v3 = v2;
    id v4 = [v2 itemDescriptionHasHTML];

    id v1 = v3;
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id PodcastsPlayerAdapter.currentItemIsLocal.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  id v2 = [v1 currentItem];
  if (!v2) {
    return 0;
  }
  id v3 = [v2 isLocal];

  return v3;
}

uint64_t PodcastsPlayerAdapter.explicitCharacter.getter()
{
  return ExplicitContentPresenter.symbol.getter();
}

float PodcastsPlayerAdapter.volume.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  [v1 volume];
  float v3 = v2;

  return v3;
}

void PodcastsPlayerAdapter.volume.setter(float a1)
{
  id v2 = [self defaultInstance];
  id v4 = [v2 player];

  *(float *)&double v3 = a1;
  [v4 setVolume:v3];
}

void (*PodcastsPlayerAdapter.volume.modify(uint64_t a1))(uint64_t a1)
{
  id v2 = self;
  *(void *)a1 = v2;
  id v3 = [v2 defaultInstance];
  id v4 = [v3 player];

  [v4 volume];
  int v6 = v5;

  *(_DWORD *)(a1 + 8) = v6;
  return sub_10034DE30;
}

void sub_10034DE30(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8);
  id v2 = [*(id *)a1 defaultInstance];
  id v4 = [v2 player];

  LODWORD(v3) = v1;
  [v4 setVolume:v3];
}

id PodcastsPlayerAdapter.currentItem.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 currentItem];

  return v1;
}

uint64_t PodcastsPlayerAdapter.currentItemType.getter@<X0>(uint64_t *a1@<X8>)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  double v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v29 - v8;
  id v10 = [self defaultInstance];
  id v11 = [v10 currentItem];

  if (!v11)
  {
    uint64_t v22 = type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(0);
    int v18 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v21 = v22;
    uint64_t v19 = a1;
    uint64_t v20 = 1;
    goto LABEL_5;
  }
  id v12 = [v11 podcastUuid];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    *a1 = v14;
    a1[1] = v16;
    uint64_t v17 = type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(0);
    swift_storeEnumTagMultiPayload();
    int v18 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = a1;
    uint64_t v20 = 0;
    uint64_t v21 = v17;
LABEL_5:
    return v18(v19, v20, 1, v21);
  }
  id v24 = [self podcastUrlForStoreId:[v11 podcastStoreId]];
  if (v24)
  {
    id v25 = v24;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    id v26 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v26(v3, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      v26(v9, v3, v4);
      v26((char *)a1, v9, v4);
      uint64_t v27 = type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(0);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a1, 0, 1, v27);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_1005F7750);
  uint64_t v28 = type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a1, 1, 1, v28);
}

void PodcastsPlayerAdapter.infoCenterDataSourceQueue.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  id v2 = [v1 infoCenter];
  id v3 = [v2 dataSourceQueue];

  if (!v3) {
    __break(1u);
  }
}

id PodcastsPlayerAdapter.placeholderArtwork(for:)(double a1, double a2)
{
  sub_10004D29C(0, &qword_1005F6FE0);
  id v4 = [(id)swift_getObjCClassFromMetadata() defaultStore];
  id v5 = [v4 imageForKey:kMTLibraryDefaultImageKey size:a1, a2];

  return v5;
}

uint64_t PodcastsPlayerAdapter.isLocalVideo.getter()
{
  id v1 = [self defaultInstance];
  id v2 = [v1 player];

  id v3 = [v2 currentItem];
  if (v3)
  {
    if ([v3 isVideo]
      && (id v4 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator) playbackPlayerPath], v5 = objc_msgSend(v4, "route"), v4, v5))
    {
      unsigned __int8 v6 = [v5 isDeviceRoute];

      if (v6) {
        return 1;
      }
    }
    else
    {
    }
  }
  return 0;
}

id PodcastsPlayerAdapter.videoViewController.getter()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  id v2 = [v1 videoViewController];
  return v2;
}

uint64_t PodcastsPlayerAdapter.presentationSize.getter()
{
  return sub_100351FEC();
}

void PodcastsPlayerAdapter.playPause(completion:)(uint64_t a1, uint64_t a2)
{
  id v5 = (unsigned char *)(v2 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess();
  if (*v5 == 1) {
    PodcastsPlayerAdapter.pause(completion:)(a1, a2);
  }
  else {
    PodcastsPlayerAdapter.play(completion:)(a1, a2);
  }
}

void PodcastsPlayerAdapter.play(completion:)(uint64_t a1, uint64_t a2)
{
}

void sub_10034E768(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

void PodcastsPlayerAdapter.pause(completion:)(uint64_t a1, uint64_t a2)
{
}

void sub_10034E7FC(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = [*(id *)(v6 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerRequestController) response];
  id v13 = [v12 *a3];

  uint64_t v14 = self;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  v17[4] = a5;
  v17[5] = v15;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_10034BD38;
  v17[3] = a6;
  uint64_t v16 = _Block_copy(v17);
  sub_10004ACDC(a1);
  swift_release();
  [v14 performRequest:v13 options:0x10000 completion:v16];
  _Block_release(v16);
}

Swift::Bool __swiftcall PodcastsPlayerAdapter.nextAvailable()()
{
  return sub_10034EA3C((SEL *)&selRef_nextItem);
}

void PodcastsPlayerAdapter.next(completion:)(uint64_t a1, uint64_t a2)
{
}

Swift::Bool __swiftcall PodcastsPlayerAdapter.previousAvailable()()
{
  return sub_10034EA3C((SEL *)&selRef_previousItem);
}

uint64_t sub_10034EA3C(SEL *a1)
{
  uint64_t result = (uint64_t)[*(id *)(v1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerRequestController) response];
  if (result)
  {
    id v4 = (void *)result;
    id v5 = [(id)result tracklist];

    id v6 = [v5 changeItemCommand];
    if (v6 && (id v7 = [v6 *a1], swift_unknownObjectRelease(), v7))
    {

      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void PodcastsPlayerAdapter.previous(completion:)(uint64_t a1, uint64_t a2)
{
}

void sub_10034EB30(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = [*(id *)(v6 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerRequestController) response];
  if (v12
    && (id v13 = v12,
        id v14 = [v12 tracklist],
        v13,
        id v15 = [v14 changeItemCommand],
        v14,
        v15))
  {
    id v16 = [v15 *a3];
    swift_unknownObjectRelease();
  }
  else
  {
    id v16 = 0;
  }
  uint64_t v17 = self;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  v20[4] = a5;
  void v20[5] = v18;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  void v20[2] = sub_10034BD38;
  v20[3] = a6;
  uint64_t v19 = _Block_copy(v20);
  sub_10004ACDC(a1);
  swift_release();
  [v17 performRequest:v16 options:0x10000 completion:v19];
  _Block_release(v19);
}

double PodcastsPlayerAdapter.jumpForwardsAmount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount;
  swift_beginAccess();
  return *(double *)v1;
}

void PodcastsPlayerAdapter.jumpForwardsAmount.setter(double a1)
{
}

uint64_t (*PodcastsPlayerAdapter.jumpForwardsAmount.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount;
  v3[4] = v1;
  v3[5] = v4;
  id v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  return sub_10034ED98;
}

Swift::Bool __swiftcall PodcastsPlayerAdapter.jumpForwardsAvailable()()
{
  return sub_10034F600(&OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount);
}

void PodcastsPlayerAdapter.jumpForwards(completion:)(uint64_t a1, uint64_t a2)
{
}

double PodcastsPlayerAdapter.jumpBackwardsAmount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount;
  swift_beginAccess();
  return *(double *)v1;
}

void PodcastsPlayerAdapter.jumpBackwardsAmount.setter(double a1)
{
}

void sub_10034EEE4(void *a1, double a2)
{
  uint64_t v4 = (double *)(v2 + *a1);
  swift_beginAccess();
  double v5 = *v4;
  *uint64_t v4 = a2;
  if (v5 != a2)
  {
    id v6 = [self defaultCenter];
    PlayerNotification_JumpDurationDidChange.getter();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 postNotificationName:v7 object:v2];
  }
}

uint64_t (*PodcastsPlayerAdapter.jumpBackwardsAmount.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount;
  v3[4] = v1;
  v3[5] = v4;
  double v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  return sub_10034ED98;
}

void sub_10034F024(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  double v3 = *(double *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  uint64_t v4 = *(void *)(*(void *)a1 + 40);
  double v6 = *(double *)(v5 + v4);
  *(double *)(v5 + v4) = v3;
  if (a2)
  {
    if (v6 == v3) {
      goto LABEL_6;
    }
  }
  else if (v6 == v3)
  {
    goto LABEL_6;
  }
  uint64_t v7 = v2[4];
  id v8 = [self defaultCenter];
  PlayerNotification_JumpDurationDidChange.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 postNotificationName:v9 object:v7];

LABEL_6:

  free(v2);
}

Swift::String __swiftcall PodcastsPlayerAdapter.stringForSkipDuration(_:)(Swift::Double a1)
{
  uint64_t v1 = self;
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v3 = [v1 localizedStringWithNumber:isa];

  if (v3)
  {
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;
  }
  else
  {
    Double.write<A>(to:)();
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = v4;
  id v8 = (void *)v6;
  result._object = v8;
  result._uint64_t countAndFlagsBits = v7;
  return result;
}

uint64_t PodcastsPlayerAdapter.localizedStringForSkipForward.getter()
{
  swift_beginAccess();
  uint64_t v0 = self;
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v2 = [v0 localizedStringWithNumber:isa];

  if (v2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;
  }
  else
  {
    Double.write<A>(to:)();
    uint64_t v3 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  id v6 = [self mainBundle];
  v12._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0x2040252070696B53;
  v7._object = (void *)0xEB00000000636573;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v12._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v12);

  sub_100054B78(&qword_1005F7720);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10046D010;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_10004DA4C();
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v5;
  uint64_t v10 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v10;
}

id sub_10034F3C0(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t PodcastsPlayerAdapter.localizedStringForSkipBackwards.getter()
{
  swift_beginAccess();
  uint64_t v0 = self;
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v2 = [v0 localizedStringWithNumber:isa];

  if (v2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;
  }
  else
  {
    Double.write<A>(to:)();
    uint64_t v3 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  id v6 = [self mainBundle];
  v12._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0x2520646E69776552;
  v7._object = (void *)0xED00006365732040;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v12._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v12);

  sub_100054B78(&qword_1005F7720);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10046D010;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_10004DA4C();
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v5;
  uint64_t v10 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v10;
}

Swift::Bool __swiftcall PodcastsPlayerAdapter.jumpBackwardsAvailable()()
{
  return sub_10034F600(&OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount);
}

uint64_t sub_10034F600(void *a1)
{
  uint64_t result = (uint64_t)sub_1000340A8();
  if (result)
  {
    unint64_t v4 = (void *)result;
    id v5 = [(id)result seekCommand];

    if (v5
      && (id v6 = (double *)(v1 + *a1),
          swift_beginAccess(),
          id v7 = [v5 jumpByInterval:*v6],
          swift_unknownObjectRelease(),
          v7))
    {

      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void PodcastsPlayerAdapter.jumpBackwards(completion:)(uint64_t a1, uint64_t a2)
{
}

void sub_10034F6E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = sub_1000340A8();
  if (v12
    && (id v13 = v12, v14 = [v12 seekCommand], v13, v14))
  {
    id v15 = (double *)(v6 + *a3);
    swift_beginAccess();
    id v16 = [v14 jumpByInterval:*v15];
    swift_unknownObjectRelease();
  }
  else
  {
    id v16 = 0;
  }
  uint64_t v17 = self;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  aBlock[4] = a5;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10034BD38;
  void aBlock[3] = a6;
  uint64_t v19 = _Block_copy(aBlock);
  sub_10004ACDC(a1);
  swift_release();
  [v17 performRequest:v16 options:0x10000 completion:v19];
  _Block_release(v19);
}

uint64_t PodcastsPlayerAdapter.playbackSpeed(for:)@<X0>(uint64_t a1@<X8>, float a2@<S0>)
{
  unint64_t v4 = self;
  *(float *)&double v5 = a2;
  switch((unint64_t)[v4 playbackSpeedForRate:v5])
  {
    case 1uLL:
      uint64_t v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.threeQuarters(_:);
      break;
    case 2uLL:
      uint64_t v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndAHalf(_:);
      break;
    case 3uLL:
      uint64_t v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.double(_:);
      break;
    case 4uLL:
      uint64_t v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndAQuarter(_:);
      break;
    case 5uLL:
      uint64_t v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndThreeQuarters(_:);
      break;
    default:
      uint64_t v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.normal(_:);
      break;
  }
  uint64_t v7 = *v6;
  uint64_t v8 = type metadata accessor for PlayerPlaybackSpeed();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(a1, v7, v8);
}

uint64_t PodcastsPlayerAdapter.incrementPlaybackSpeed(playbackSpeed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PlayerPlaybackSpeed();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v10((char *)&v16 - v8, a1, v4);
  v10(v7, (uint64_t)v9, v4);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  uint64_t v12 = enum case for PlayerPlaybackSpeed.threeQuarters(_:);
  if (v11 == enum case for PlayerPlaybackSpeed.threeQuarters(_:))
  {
    uint64_t v13 = 1;
  }
  else if (v11 == enum case for PlayerPlaybackSpeed.normal(_:))
  {
    uint64_t v13 = 0;
  }
  else if (v11 == enum case for PlayerPlaybackSpeed.oneAndAQuarter(_:))
  {
    uint64_t v13 = 4;
  }
  else if (v11 == enum case for PlayerPlaybackSpeed.oneAndAHalf(_:))
  {
    uint64_t v13 = 2;
  }
  else if (v11 == enum case for PlayerPlaybackSpeed.oneAndThreeQuarters(_:))
  {
    uint64_t v13 = 5;
  }
  else
  {
    if (v11 != enum case for PlayerPlaybackSpeed.double(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      JUMPOUT(0x10034FCD8);
    }
    uint64_t v13 = 3;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  switch((unint64_t)[self incrementPlaybackSpeed:v13])
  {
    case 1uLL:
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(a2, v12, v4);
    case 2uLL:
      id v14 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndAHalf(_:);
      goto LABEL_19;
    case 3uLL:
      id v14 = (unsigned int *)&enum case for PlayerPlaybackSpeed.double(_:);
      goto LABEL_19;
    case 4uLL:
      id v14 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndAQuarter(_:);
      goto LABEL_19;
    case 5uLL:
      id v14 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndThreeQuarters(_:);
      goto LABEL_19;
    default:
      id v14 = (unsigned int *)&enum case for PlayerPlaybackSpeed.normal(_:);
LABEL_19:
      uint64_t v12 = *v14;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(a2, v12, v4);
  }
}

uint64_t sub_10034FCF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlayerPlaybackSpeed();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    PodcastsPlayerAdapter.playbackSpeed.getter((uint64_t)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_100352950((unint64_t *)&unk_100604410, (void (*)(uint64_t))&type metadata accessor for PlayerPlaybackSpeed);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    v7.n128_f32[0] = v12;
    v8.n128_f32[0] = v13;
    v11[1] = v13 == v12;
    (*(void (**)(char *, uint64_t, __n128, __n128))(v3 + 8))((char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v7, v8);
    sub_10004D29C(0, (unint64_t *)&qword_1005FAAD8);
    PlayerPlaybackSpeed.localizedName.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v6;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return result;
}

uint64_t sub_10034FF4C(void (*a1)(uint64_t), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = static PlayerPlaybackSpeed.allCases.getter();
  swift_retain();
  unint64_t v6 = (unint64_t)sub_100351C24(v5, a3);
  swift_bridgeObjectRelease();
  swift_release();
  if (v6 >> 62)
  {
    sub_10004D29C(0, &qword_1005F7EF0);
    swift_bridgeObjectRetain();
    uint64_t v7 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10004D29C(0, &qword_1005F7EF0);
    uint64_t v7 = v6;
  }
  swift_bridgeObjectRelease();
  a1(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100350074(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_100352948, v4);
  swift_release();

  return swift_release();
}

void sub_100350108(uint64_t a1, uint64_t a2)
{
  sub_10004D29C(0, &qword_1005F7EF0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

Swift::Bool __swiftcall PodcastsPlayerAdapter.playbackSpeedSupported()()
{
  id v0 = sub_1000340A8();
  id v1 = [v0 playbackRateCommand];

  if (v1) {
    swift_unknownObjectRelease();
  }
  return v1 != 0;
}

uint64_t PodcastsPlayerAdapter.playbackSpeed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100054B78(&qword_100604238);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = sub_1000340A8();
  if (v5)
  {
    unint64_t v6 = v5;
    id v7 = [v5 playbackRateCommand];

    if (v7)
    {
      [v7 preferredPlaybackRate];
      swift_unknownObjectRelease();
    }
  }
  PlayerPlaybackSpeed.init(rawValue:)();
  uint64_t v8 = type metadata accessor for PlayerPlaybackSpeed();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v4, v8);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(a1, enum case for PlayerPlaybackSpeed.normal(_:), v8);
  return sub_100054B1C((uint64_t)v4, &qword_100604238);
}

void PodcastsPlayerAdapter.setPlaybackSpeed(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = sub_1000340A8();
  id v6 = v5;
  if (v5)
  {
    id v7 = [v5 playbackRateCommand];

    if (v7)
    {
      PlayerPlaybackSpeed.rawValue.getter();
      [v7 setPlaybackRate:];
      swift_unknownObjectRelease();
    }
    else
    {
      id v6 = 0;
    }
  }
  uint64_t v8 = self;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  v11[4] = sub_1003520D4;
  v11[5] = v9;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_10034BD38;
  v11[3] = &unk_1005635B0;
  uint64_t v10 = _Block_copy(v11);
  sub_10004ACDC(a2);
  swift_release();
  [v8 performRequest:v6 options:0x10000 completion:v10];
  _Block_release(v10);
}

id PodcastsPlayerAdapter.volumeControlAvailable.getter()
{
  return sub_1003504EC((SEL *)&selRef_volumeControlAvailable);
}

id PodcastsPlayerAdapter.isPlayingVideoFullScreen.getter()
{
  return sub_1003504EC((SEL *)&selRef_isPlayingFullScreenVideo);
}

id sub_1003504EC(SEL *a1)
{
  id v2 = [self defaultInstance];
  id v3 = [v2 *a1];

  return v3;
}

Swift::Void __swiftcall PodcastsPlayerAdapter.increaseVolume()()
{
}

Swift::Void __swiftcall PodcastsPlayerAdapter.decreaseVolume()()
{
}

void sub_10035055C(SEL *a1)
{
  id v2 = [self defaultInstance];
  [v2 *a1];
}

double PodcastsPlayerAdapter.autoStopTimeRemaining.getter()
{
  return sub_1003505D0((SEL *)&selRef_autoStopTimeRemaining);
}

double sub_1003505D0(SEL *a1)
{
  id v2 = [self defaultInstance];
  id v3 = [v2 player];

  [v3 *a1];
  double v5 = v4;

  return v5;
}

uint64_t sub_100350670()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  double v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_100352B08;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_1005638D8;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100352950((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10035092C(uint64_t a1)
{
  id v2 = [self defaultCenter];
  PlayerNotification_AutoStopModeDidChange.getter();
  id v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 postNotificationName:v3 object:a1];
}

void sub_100350A58(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = self;
  id v6 = a1;
  id v7 = [v5 defaultCenter];
  a3();
  id v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 postNotificationName:v8 object:v6];
}

void sub_100350B10()
{
  sub_100054B78(&qword_100604238);
  __chkstk_darwin();
  id v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PlayerPlaybackSpeed();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  id v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v8 = (char *)&v25 - v7;
  id v9 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator) playbackPlayerPath];
  id v10 = [v9 route];

  if (v10)
  {
    unsigned int v11 = [v10 isDeviceRoute];

    if (v11)
    {
      id v12 = self;
      id v13 = [v12 defaultInstance];
      id v14 = [v13 player];

      LOBYTE(v13) = [v14 isSeeking];
      if ((v13 & 1) == 0)
      {
        PodcastsPlayerAdapter.playbackSpeed.getter((uint64_t)v8);
        PlayerPlaybackSpeed.rawValue.getter();
        float v16 = v15;
        id v26 = *(void (**)(char *, uint64_t))(v4 + 8);
        v26(v8, v3);
        id v17 = [v12 defaultInstance];
        id v18 = [v17 player];

        id v19 = [v18 player];
        [v19 rate];
        float v21 = v20;

        if (v16 != v21)
        {
          id v22 = [v12 defaultInstance];
          id v23 = [v22 player];

          id v24 = [v23 player];
          [v24 rate];

          PlayerPlaybackSpeed.init(rawValue:)();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
          {
            sub_100054B1C((uint64_t)v2, &qword_100604238);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
            PodcastsPlayerAdapter.setPlaybackSpeed(_:completion:)((uint64_t)v6, 0, 0);
            v26(v6, v3);
          }
        }
      }
    }
  }
}

uint64_t (*sub_100350EE8(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PodcastsPlayerAdapter.route.modify(v2);
  return sub_1001B8C14;
}

uint64_t (*sub_100350F40(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PodcastsPlayerAdapter.isHandoffEnabled.modify((uint64_t)v2);
  return sub_1001B8C14;
}

id sub_100350F90(uint64_t a1, uint64_t a2)
{
  return sub_100350FA8(a1, a2, (SEL *)&selRef_isPlaybackRequested);
}

id sub_100350F9C(uint64_t a1, uint64_t a2)
{
  return sub_100350FA8(a1, a2, (SEL *)&selRef_hasChapters);
}

id sub_100350FA8(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [self defaultInstance];
  id v5 = [v4 player];

  id v6 = [v5 *a3];
  return v6;
}

double sub_100351028(uint64_t a1, uint64_t a2)
{
  return sub_100351248(a1, a2, (SEL *)&selRef_loadedDuration);
}

double sub_100351034(uint64_t a1, uint64_t a2)
{
  return sub_100351248(a1, a2, (SEL *)&selRef_duration);
}

uint64_t (*sub_100351040(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PodcastsPlayerAdapter.volume.modify((uint64_t)v2);
  return sub_1001B8C14;
}

uint64_t sub_100351094@<X0>(uint64_t a1@<X8>, float a2@<S0>)
{
  id v4 = self;
  *(float *)&double v5 = a2;
  switch((unint64_t)[v4 playbackSpeedForRate:v5])
  {
    case 1uLL:
      id v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.threeQuarters(_:);
      break;
    case 2uLL:
      id v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndAHalf(_:);
      break;
    case 3uLL:
      id v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.double(_:);
      break;
    case 4uLL:
      id v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndAQuarter(_:);
      break;
    case 5uLL:
      id v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndThreeQuarters(_:);
      break;
    default:
      id v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.normal(_:);
      break;
  }
  uint64_t v7 = *v6;
  uint64_t v8 = type metadata accessor for PlayerPlaybackSpeed();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(a1, v7, v8);
}

uint64_t sub_1003511B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return PodcastsPlayerAdapter.incrementPlaybackSpeed(playbackSpeed:)(a1, a2);
}

uint64_t sub_1003511C8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

double sub_10035123C(uint64_t a1, uint64_t a2)
{
  return sub_100351248(a1, a2, (SEL *)&selRef_autoStopTimeRemaining);
}

double sub_100351248(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [self defaultInstance];
  id v5 = [v4 player];

  [v5 *a3];
  double v7 = v6;

  return v7;
}

uint64_t sub_1003512D0@<X0>(void *a1@<X8>)
{
  return PodcastsPlayerAdapter.autoStopMode.getter(a1);
}

id sub_1003512EC()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 isPlayingFullScreenVideo];

  return v1;
}

id sub_100351344()
{
  id v1 = [*(id *)(*v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator) playbackPlayerPath];
  id v2 = [v1 route];

  if (!v2) {
    return 0;
  }
  id v3 = [v2 isDeviceRoute];

  return v3;
}

uint64_t sub_1003513CC()
{
  id v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess();
  return *v1;
}

double sub_100351418()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount;
  swift_beginAccess();
  return *(double *)v1;
}

double sub_100351464()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1003514B0@<X0>(uint64_t a1@<X8>)
{
  return PodcastsPlayerAdapter.playbackSpeed.getter(a1);
}

double sub_1003514D4()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  [v1 autoStopTimeRemaining];
  double v3 = v2;

  return v3;
}

uint64_t sub_100351554()
{
  return PodcastsPlayerAdapter.localizedStringForSkipForward.getter();
}

uint64_t sub_100351578()
{
  return PodcastsPlayerAdapter.localizedStringForSkipBackwards.getter();
}

uint64_t sub_10035159C@<X0>(uint64_t *a1@<X8>)
{
  return PodcastsPlayerAdapter.currentItemType.getter(a1);
}

void sub_1003515B4(uint64_t a1, uint64_t a2)
{
  id v5 = (unsigned char *)(*v2 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess();
  if (*v5 == 1) {
    PodcastsPlayerAdapter.pause(completion:)(a1, a2);
  }
  else {
    PodcastsPlayerAdapter.play(completion:)(a1, a2);
  }
}

void sub_10035162C(uint64_t a1, uint64_t a2)
{
}

void sub_100351650(uint64_t a1, uint64_t a2)
{
}

BOOL sub_100351674()
{
  return PodcastsPlayerAdapter.nextAvailable()();
}

void sub_10035169C(uint64_t a1, uint64_t a2)
{
}

BOOL sub_1003516C0()
{
  return PodcastsPlayerAdapter.previousAvailable()();
}

void sub_1003516E8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10035170C(uint64_t a1, uint64_t a2)
{
  return sub_100351748(a1, a2, &OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount);
}

void sub_100351718(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10035173C(uint64_t a1, uint64_t a2)
{
  return sub_100351748(a1, a2, &OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount);
}

uint64_t sub_100351748(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *v3;
  uint64_t result = (uint64_t)sub_1000340A8();
  if (result)
  {
    double v7 = (void *)result;
    id v8 = [(id)result seekCommand];

    if (v8
      && (id v9 = (double *)(v5 + *a3),
          swift_beginAccess(),
          id v10 = [v8 jumpByInterval:*v9],
          swift_unknownObjectRelease(),
          v10))
    {

      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_100351800(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100351824@<X0>(uint64_t a1@<X8>, float a2@<S0>)
{
  id v4 = self;
  *(float *)&double v5 = a2;
  switch((unint64_t)[v4 playbackSpeedForRate:v5])
  {
    case 1uLL:
      double v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.threeQuarters(_:);
      break;
    case 2uLL:
      double v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndAHalf(_:);
      break;
    case 3uLL:
      double v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.double(_:);
      break;
    case 4uLL:
      double v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndAQuarter(_:);
      break;
    case 5uLL:
      double v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.oneAndThreeQuarters(_:);
      break;
    default:
      double v6 = (unsigned int *)&enum case for PlayerPlaybackSpeed.normal(_:);
      break;
  }
  uint64_t v7 = *v6;
  uint64_t v8 = type metadata accessor for PlayerPlaybackSpeed();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(a1, v7, v8);
}

BOOL sub_100351940()
{
  id v0 = sub_1000340A8();
  id v1 = [v0 playbackRateCommand];

  if (v1) {
    swift_unknownObjectRelease();
  }
  return v1 != 0;
}

void sub_100351998(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id sub_1003519BC()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 volumeControlAvailable];

  return v1;
}

void sub_100351A14(uint64_t a1, uint64_t a2)
{
}

void sub_100351A20(uint64_t a1, uint64_t a2)
{
}

void sub_100351A2C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [self defaultInstance];
  [v4 *a3];
}

uint64_t PodcastsPlayerAdapter.controller(_:shouldRetryFailedRequestWithError:)(void *a1)
{
  id v1 = [a1 request];
  self;
  double v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
    return 1;
  }
  uint64_t result = (uint64_t)[v2 playerPath];
  if (result)
  {
    id v4 = (void *)result;
    dispatch thunk of PlayerPathCoordinator.didReceiveErrorLoadingResponse(for:error:)();
    swift_unknownObjectRelease();

    return 1;
  }
  __break(1u);
  return result;
}

void *sub_100351C24(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = *(void *)(type metadata accessor for PlayerPlaybackSpeed() - 8);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v9 = a1 + v7 + v8 * (v4 - 1);
    uint64_t v10 = -v8;
    do
    {
      if (a2(v9))
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v9 += v10;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t _s8Podcasts0A13PlayerAdapterC28currentItemPlainEpisodeNotesSSSgvg_0()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 currentItem];

  if (!v1) {
    return 0;
  }
  id v2 = [v1 episode];
  if (!v2)
  {

    return 0;
  }
  double v3 = v2;
  if (![v2 itemDescriptionHasHTML])
  {
    id v4 = [v3 itemDescription];
    if (v4) {
      goto LABEL_5;
    }
    goto LABEL_8;
  }
  id v4 = [v3 itemDescriptionWithoutHTML];
  if (!v4)
  {
LABEL_8:

    return 0;
  }
LABEL_5:
  double v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v6;
}

id _s8Podcasts0A13PlayerAdapterC23currentItemEpisodeNotesSo18NSAttributedStringCSgvg_0()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 currentItem];

  if (!v1) {
    return 0;
  }
  id v2 = [v1 episode];
  if (!v2)
  {
    double v3 = v1;
    goto LABEL_8;
  }
  double v3 = v2;
  sub_10004D29C(0, &qword_1005F8FF0);
  id v4 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  id v5 = [v4 descriptionForEpisode:v3 options:48];

  if (!v5)
  {

    goto LABEL_8;
  }
  id v6 = v5;
  id v7 = [v6 length];

  if (!v7)
  {
    double v3 = v6;
LABEL_8:

    return 0;
  }
  return v5;
}

uint64_t type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(uint64_t a1)
{
  return sub_10004F778(a1, qword_100604358);
}

uint64_t sub_100351FEC()
{
  id v0 = [self defaultInstance];
  id v1 = [v0 player];

  id v2 = [v1 player];
  id v3 = [v2 currentItem];

  if (!v3) {
    return 0;
  }
  [v3 presentationSize];
  uint64_t v5 = v4;

  return v5;
}

uint64_t sub_1003520F0()
{
  id v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

BOOL _s8Podcasts0A13PlayerAdapterC15autoStopEnabledSbyF_0()
{
  uint64_t v0 = self;
  id v1 = [v0 defaultInstance];
  id v2 = [v1 player];

  id v3 = [v2 autoStop];
  if (v3 != (id)3)
  {
    id v4 = [v0 defaultInstance];
    id v5 = [v4 player];

    id v6 = [v5 autoStop];
    if (v6 != (id)2)
    {
      id v7 = [v0 defaultInstance];
      id v8 = [v7 player];

      id v9 = [v8 autoStop];
      if (v9 != (id)1) {
        return 0;
      }
    }
  }
  id v10 = [v0 defaultInstance];
  id v11 = [v10 player];

  [v11 autoStopTimeRemaining];
  double v13 = v12;

  return v13 > 0.0;
}

uint64_t sub_1003522A8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003522E8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_10035233C(char *a1)
{
}

uint64_t sub_100352364()
{
  return type metadata accessor for PodcastsPlayerAdapter(0);
}

uint64_t *initializeBufferWithCopyOfBuffer for PodcastsPlayerAdapter.CurrentItemType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PodcastsPlayerAdapter.CurrentItemType(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for URL();
    id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *initializeWithCopy for PodcastsPlayerAdapter.CurrentItemType(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PodcastsPlayerAdapter.CurrentItemType(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10028C6D8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for PodcastsPlayerAdapter.CurrentItemType(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PodcastsPlayerAdapter.CurrentItemType(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10028C6D8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003527F4()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100352888()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_1003528C0(uint64_t a1)
{
  sub_10034E768(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003528C8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100352900(uint64_t a1)
{
  return sub_10034FCF0(a1);
}

uint64_t sub_100352908()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100352940(void (*a1)(uint64_t), uint64_t a2)
{
  return sub_10034FF4C(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 16));
}

void sub_100352948(uint64_t a1)
{
  sub_100350108(a1, *(void *)(v1 + 16));
}

uint64_t sub_100352950(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100352998()
{
  uint64_t v1 = type metadata accessor for PlayerPlaybackSpeed();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100352A64()
{
  uint64_t v1 = *(void *)(type metadata accessor for PlayerPlaybackSpeed() - 8);
  PodcastsPlayerAdapter.setPlaybackSpeed(_:completion:)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), 0, 0);
}

uint64_t sub_100352AD0()
{
  return swift_deallocObject();
}

void sub_100352B08()
{
  sub_10035092C(*(void *)(v0 + 16));
}

ValueMetadata *type metadata accessor for PlayStationIntentImplementation()
{
  return &type metadata for PlayStationIntentImplementation;
}

void sub_100352B58(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v17)(void **__return_ptr, _OWORD *);
  void *v18;
  void (*v19)(long long *__return_ptr, void *);
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  unsigned char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  unsigned char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  char *v43;
  void *v44;
  _OWORD v45[2];
  long long v46;
  uint64_t v47;
  void v48[5];
  void *v49;

  uint64_t v7 = sub_100054B78(&qword_100602618);
  __chkstk_darwin();
  id v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a1 objectWithID:a2];
  self;
  id v11 = (void *)swift_dynamicCastObjCClass();
  if (!v11)
  {

    sub_1003543B8();
    swift_allocError();
    *uint64_t v31 = 1;
    swift_willThrow();
    return;
  }
  id v12 = [v11 episodes];
  if (v12)
  {
    uint64_t v42 = v10;
    uint64_t v39 = a3;
    int v40 = v3;
    id v13 = v12;
    NSOrderedSet.makeIterator()();
    uint64_t v41 = v13;

    id v14 = &v9[*(int *)(sub_100054B78(&qword_100602620) + 44)];
    *(void *)id v14 = sub_1003171DC;
    *((void *)v14 + 1) = 0;
    float v15 = &v9[*(int *)(sub_100054B78(&qword_100602628) + 36)];
    *(void *)float v15 = sub_1003172F4;
    *((void *)v15 + 1) = 0;
    float v16 = &v9[*(int *)(v7 + 44)];
    *(void *)float v16 = sub_100317304;
    *((void *)v16 + 1) = 0;
    type metadata accessor for NSFastEnumerationIterator();
    sub_10005E4B0((unint64_t *)&qword_100602630, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
    dispatch thunk of IteratorProtocol.next()();
    id v17 = *(void (**)(void **__return_ptr, _OWORD *))v14;
    sub_100004C04((uint64_t)v48, (uint64_t)&v46);
    if (v47)
    {
      uint64_t v43 = (char *)_swiftEmptyArrayStorage;
      do
      {
        sub_10004D384(&v46, v45);
        v17(&v44, v45);
        id v18 = v44;
        sub_10004D2D8((uint64_t)v45);
        uint64_t v49 = v18;
        if ((*(uint64_t (**)(void **))v15)(&v49))
        {
          id v19 = *(void (**)(long long *__return_ptr, void *))v16;
          v48[0] = v18;
          v19(&v46, v48);

          float v20 = (void *)v46;
          float v21 = [(id)v46 uuid];
          if (v21)
          {
            id v22 = v21;
            id v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v37 = v24;
            uint64_t v38 = v23;

            uint64_t v25 = v43;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v25 = sub_10004CEAC(0, *((void *)v25 + 2) + 1, 1, v25);
            }
            uint64_t v27 = *((void *)v25 + 2);
            id v26 = *((void *)v25 + 3);
            uint64_t v43 = v25;
            if (v27 >= v26 >> 1) {
              uint64_t v43 = sub_10004CEAC((char *)(v26 > 1), v27 + 1, 1, v43);
            }
            uint64_t v28 = v43;
            *((void *)v43 + 2) = v27 + 1;
            uint64_t v29 = &v28[16 * v27];
            id v30 = v37;
            *((void *)v29 + 4) = v38;
            *((void *)v29 + 5) = v30;
          }
          else
          {
          }
        }
        else
        {
        }
        dispatch thunk of IteratorProtocol.next()();
        id v17 = *(void (**)(void **__return_ptr, _OWORD *))v14;
        sub_100004C04((uint64_t)v48, (uint64_t)&v46);
      }
      while (v47);
    }
    else
    {
      uint64_t v43 = (char *)_swiftEmptyArrayStorage;
    }
    sub_100354468((uint64_t)v9);

    if (*((void *)v43 + 2))
    {
      uint64_t v32 = *((void *)v43 + 4);
      id v33 = *((void *)v43 + 5);
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      uint64_t v34 = v39;
      void *v39 = v32;
      v34[1] = v33;
      return;
    }
    swift_bridgeObjectRelease();
    id v10 = v42;
  }
  sub_1003543B8();
  swift_allocError();
  *id v35 = 2;
  swift_willThrow();
}

uint64_t sub_100352F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100604420 + dword_100604420);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1002A1E0C;
  return v8(a2, a3);
}

uint64_t sub_10035302C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  sub_100054B78((uint64_t *)&unk_100600690);
  v2[8] = swift_task_alloc();
  sub_100054B78((uint64_t *)&unk_1005FEA40);
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for MediaIdentifier();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for PlaybackIntent();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StationEntity();
  v2[19] = v6;
  v2[20] = *(void *)(v6 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for TaskPriority();
  v2[23] = v7;
  v2[24] = *(void *)(v7 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for PlaybackController();
  uint64_t v9 = (void *)swift_task_alloc();
  v2[26] = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10035332C;
  return BaseObjectGraph.inject<A>(_:)(v2 + 4, v8, v8);
}

uint64_t sub_10035332C()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10035411C;
  }
  else {
    uint64_t v2 = sub_100353440;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100353440()
{
  v0[28] = v0[4];
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_1005FEBE0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[29] = v2;
  void *v2 = v0;
  v2[1] = sub_100353508;
  return BaseObjectGraph.inject<A>(_:)(v0 + 5, v1, v1);
}

uint64_t sub_100353508()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003541E4;
  }
  else {
    uint64_t v2 = sub_10035361C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035361C()
{
  v0[31] = v0[5];
  uint64_t ObjectType = swift_getObjectType();
  j___sScTss5NeverORszABRs_rlE15currentPriorityScPvgZ();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[32] = v2;
  void *v2 = v0;
  v2[1] = sub_1003536E4;
  uint64_t v3 = v0[25];
  return NSManagedObjectContextProvider.managedObjectContext(for:)(v3, ObjectType);
}

uint64_t sub_1003536E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 200);
  uint64_t v3 = *(void *)(*(void *)v1 + 192);
  uint64_t v4 = *(void *)(*(void *)v1 + 184);
  *(void *)(*(void *)v1 + 264) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_100353860, 0, 0);
}

uint64_t sub_100353860()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  PlayStationIntent.station.getter();
  uint64_t v4 = StationEntity.uuid.getter();
  uint64_t v6 = v5;
  v0[34] = v4;
  v0[35] = v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v1, v2);
  if (v6)
  {
    uint64_t v8 = v0[21];
    uint64_t v9 = v0[19];
    PlayStationIntent.station.getter();
    id v10 = (void *)StationEntity.objectID.getter();
    v0[36] = v10;
    v7(v8, v9);
    if (v10)
    {
      uint64_t v11 = (void *)v0[33];
      uint64_t v13 = v0[17];
      uint64_t v12 = v0[18];
      uint64_t v14 = v0[16];
      uint64_t v15 = swift_allocObject();
      v0[37] = v15;
      *(void *)(v15 + 16) = v11;
      *(void *)(v15 + 24) = v10;
      (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v12, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v14);
      id v16 = v11;
      id v17 = v10;
      id v18 = (void *)swift_task_alloc();
      v0[38] = v18;
      void *v18 = v0;
      v18[1] = sub_100353AF8;
      uint64_t v19 = v0[18];
      return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v19, sub_10035444C, v15, &type metadata for String);
    }
    swift_bridgeObjectRelease();
  }
  float v20 = (void *)v0[33];
  sub_1003543B8();
  swift_allocError();
  *float v21 = 0;
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_100353AF8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[17] + 8))(v2[18], v2[16]);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_100353F18;
  }
  else {
    uint64_t v3 = sub_100353C7C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100353C7C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 272);
  *(void *)(v2 + 16) = v6;
  *(void *)(v2 + 24) = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v2, enum case for MediaIdentifier.station(_:), v3);
  uint64_t v8 = type metadata accessor for EpisodeListSettings();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = type metadata accessor for PodcastsMediaLibrary.MediaItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  static Set<>.default.getter();
  PlaybackIntent.init(id:listSettings:initialItem:options:)();
  id v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v10;
  *id v10 = v0;
  v10[1] = sub_100353DFC;
  uint64_t v11 = *(void *)(v0 + 120);
  return PlaybackController.performIntent(_:)(v11);
}

uint64_t sub_100353DFC(void *a1)
{
  *(void *)(*(void *)v2 + 328) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1003542B4;
  }
  else
  {

    uint64_t v4 = sub_100354004;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100353F18()
{
  uint64_t v1 = *(void **)(v0 + 264);

  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100354004()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 104);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5(0);
}

uint64_t sub_10035411C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003541E4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003542B4()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 104);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

unint64_t sub_1003543B8()
{
  unint64_t result = qword_100604430;
  if (!qword_100604430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100604430);
  }
  return result;
}

uint64_t sub_10035440C()
{
  return swift_deallocObject();
}

void sub_10035444C(void *a1@<X8>)
{
  sub_100352B58(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100354468(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100602618);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for PlayStationIntentImplementation.PlayStationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100354594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayStationIntentImplementation.PlayStationError()
{
  return &type metadata for PlayStationIntentImplementation.PlayStationError;
}

unint64_t sub_1003545D0()
{
  unint64_t result = qword_100604438;
  if (!qword_100604438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100604438);
  }
  return result;
}

id AccessAppDelegate.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessAppDelegate();
  return [super init];
}

uint64_t type metadata accessor for AccessAppDelegate()
{
  return self;
}

id AccessAppDelegate.__deallocating_deinit(uint64_t a1)
{
  return sub_100357B10(a1, type metadata accessor for AccessAppDelegate);
}

id sub_1003546C8(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return [super init];
}

id sub_10035470C(uint64_t a1)
{
  return sub_100357B10(a1, type metadata accessor for PlatformAppController);
}

uint64_t type metadata accessor for PlatformAppController()
{
  return self;
}

uint64_t type metadata accessor for AppTraits_Mac()
{
  return self;
}

uint64_t sub_10035476C()
{
  return 7;
}

id sub_1003547B8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
  objc_super v2 = self;
  id v3 = v1;
  id v4 = [v2 sharedApplication];
  id v5 = [v4 delegate];

  if (v5)
  {
    if ([v5 respondsToSelector:"window"]) {
      id v6 = [v5 window];
    }
    else {
      id v6 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = [v6 rootViewController];

  return v7;
}

uint64_t sub_1003548F4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
  objc_super v2 = self;
  id v3 = v1;
  id v4 = [v2 sharedApplication];
  id v5 = [v4 delegate];

  if (v5)
  {
    if ([v5 respondsToSelector:"window"]) {
      id v6 = [v5 window];
    }
    else {
      id v6 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = [v6 rootViewController];

  uint64_t result = 0;
  if (v7)
  {
    type metadata accessor for NowPlayingTabController();
    uint64_t result = swift_dynamicCastClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void sub_100354C90(void *a1, char a2)
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  uint64_t v44 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin();
  uint64_t v42 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FlowPresentationContext();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v43 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v38 - v10;
  __chkstk_darwin();
  uint64_t v39 = (char *)&v38 - v12;
  uint64_t v13 = type metadata accessor for FlowDestination();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  id v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  id v18 = (uint64_t *)((char *)&v38 - v17);
  sub_10004D29C(0, (unint64_t *)&qword_100603DE0);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter() & 1) == 0)
  {
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for FlowPresentationContext.showDetail(_:), v7);
    type metadata accessor for StationDetail();
    sub_10004BE90(a1, 0, 1, 1);
    if (v31)
    {
      void *v16 = v31;
      (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for FlowDestination.station(_:), v13);
      swift_retain();
      StationDetail.title.getter();
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      uint64_t v39 = (char *)v7;
      v32(v43, v11, v7);
      unsigned __int8 v33 = static Link.Presentation.textFollowsTintColor.getter();
      unsigned __int8 v34 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      Link.Presentation.init(rawValue:)();
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v33) {
        Link.Presentation.init(rawValue:)();
      }
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v34) {
        Link.Presentation.init(rawValue:)();
      }
      type metadata accessor for FlowAction();
      (*(void (**)(char *, void, uint64_t))(v40 + 104))(v42, enum case for FlowDestinationPageHeader.standard(_:), v41);
      static ActionMetrics.notInstrumented.getter();
      uint64_t v35 = dispatch thunk of FlowAction.__allocating_init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
      swift_release();
      (*(void (**)(char *, char *))(v8 + 8))(v11, v39);
      sub_100054B78((uint64_t *)&unk_1005FA7F0);
      uint64_t v20 = 7;
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_10046D060;
      *(void *)(v36 + 32) = v35;
      *(void *)&v46[0] = v36;
      specialized Array._endMutation()();
      uint64_t v27 = v45;
      id v30 = *(void **)&v46[0];
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    id v30 = _swiftEmptyArrayStorage;
    uint64_t v20 = 7;
    goto LABEL_17;
  }
  type metadata accessor for StationDetail();
  sub_10004BE90(a1, 0, 0, 0);
  if (v19)
  {
    uint64_t v20 = v19;
    if (a2)
    {
      swift_retain();
      uint64_t *v18 = StationDetail.uuid.getter();
      v18[1] = v21;
      (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v18, enum case for FlowDestination.stationSettings(_:), v13);
      id v22 = [self mainBundle];
      v47._object = (void *)0xE000000000000000;
      v23._object = (void *)0x80000001004DF190;
      v23._uint64_t countAndFlagsBits = 0xD000000000000010;
      v24._uint64_t countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      v47._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v47);

      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v39, enum case for FlowPresentationContext.presentModalFormSheet(_:), v7);
      unsigned __int8 v25 = static Link.Presentation.textFollowsTintColor.getter();
      unsigned __int8 v26 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      Link.Presentation.init(rawValue:)();
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v25) {
        Link.Presentation.init(rawValue:)();
      }
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v26) {
        Link.Presentation.init(rawValue:)();
      }
      uint64_t v27 = v45;
      (*(void (**)(char *, void, uint64_t))(v40 + 104))(v42, enum case for FlowDestinationPageHeader.standard(_:), v41);
      static ActionMetrics.notInstrumented.getter();
      type metadata accessor for FlowAction();
      swift_allocObject();
      uint64_t v28 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
      sub_100054B78((uint64_t *)&unk_1005FA7F0);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_10046D060;
      *(void *)(v29 + 32) = v28;
      *(void *)&v46[0] = v29;
      specialized Array._endMutation()();
      id v30 = *(void **)&v46[0];
      swift_release();
      goto LABEL_18;
    }
    id v30 = _swiftEmptyArrayStorage;
LABEL_17:
    uint64_t v27 = v45;
LABEL_18:
    sub_100036488(v20);
    sub_1001B81C8((unint64_t)v30);
    swift_bridgeObjectRelease();
    Link.Presentation.init(rawValue:)();
    static ActionMetrics.notInstrumented.getter();
    type metadata accessor for TabChangeAction();
    swift_allocObject();
    TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
    memset(v46, 0, sizeof(v46));
    uint64_t v37 = swift_retain();
    sub_100357BF8(v37, (uint64_t)v46, 0, v27, (uint64_t (*)(void))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
    swift_release();
    swift_release();
    sub_10003649C(v20);
    sub_100054B1C((uint64_t)v46, &qword_1005F5D30);
    swift_release();
    return;
  }
  __break(1u);
}

uint64_t sub_10035569C()
{
  return sub_100355B5C();
}

uint64_t sub_100355860()
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  sub_100056D54(v0 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appTraits, (uint64_t)&v5);
  uint64_t v1 = *((void *)&v6 + 1);
  uint64_t v2 = v7;
  sub_100041A98(&v5, *((uint64_t *)&v6 + 1));
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for TabChangeAction();
  swift_allocObject();
  TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
  sub_10004D2D8((uint64_t)&v5);
  long long v5 = 0u;
  long long v6 = 0u;
  uint64_t v3 = swift_retain();
  sub_100357BF8(v3, (uint64_t)&v5, 0, v0, (uint64_t (*)(void))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
  swift_release();
  sub_100054B1C((uint64_t)&v5, &qword_1005F5D30);
  return swift_release_n();
}

uint64_t sub_100355B54()
{
  return sub_100355B5C();
}

uint64_t sub_100355B5C()
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for TabChangeAction();
  swift_allocObject();
  TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
  memset(v3, 0, sizeof(v3));
  uint64_t v1 = swift_retain();
  sub_100357BF8(v1, (uint64_t)v3, 0, v0, (uint64_t (*)(void))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
  swift_release();
  sub_100054B1C((uint64_t)v3, &qword_1005F5D30);
  return swift_release_n();
}

uint64_t sub_100355F90()
{
  uint64_t v26 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v24 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin();
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchTimeInterval();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v24 - v13;
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v24 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  void *v8 = 1;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v5);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v16 = v9;
  v15(v12, v9);
  uint64_t v17 = swift_allocObject();
  id v18 = v25;
  *(void *)(v17 + 16) = v25;
  aBlock[4] = sub_100358198;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100563AD0;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v18;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004AE0C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  uint64_t v21 = v26;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v22 = (void *)v24;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v1, v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, v16);
}

void sub_1003563F4(char *a1)
{
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate];
  uint64_t v3 = self;
  id v4 = v2;
  id v5 = [v3 sharedApplication];
  id v6 = [v5 delegate];

  if (v6)
  {
    if ([v6 respondsToSelector:"window"]) {
      id v7 = [v6 window];
    }
    else {
      id v7 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v7 = 0;
  }
  id v8 = [v7 rootViewController];

  if (!v8) {
    goto LABEL_17;
  }
  id v9 = [v8 presentedViewController];

  if (!v9) {
    goto LABEL_17;
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v10 = v9;
  }
  else {
    id v10 = 0;
  }
  if (!v10)
  {

LABEL_17:
    sub_100356688();
    return;
  }
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v11 = (void *)static OS_os_log.iTunesMigration.getter();
  os_log(_:dso:log:_:_:)();

  swift_getObjectType();
  *(void *)(swift_allocObject() + 16) = a1;
  uint64_t v12 = a1;
  dispatch thunk of UserAcknowledgementRequiring.deferUntilAcknowledged(_:)();

  swift_release();
}

void sub_100356688()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FlowPresentationContext();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FlowPresentationHints();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  id v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FlowDestination();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v24[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1
                 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_migrationPresentationCanceled) & 1) != 0)
  {
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v23 = static OS_os_log.iTunesMigration.getter();
    os_log(_:dso:log:_:_:)();
    uint64_t v14 = (void *)v23;
  }
  else
  {
    *(unsigned char *)(v1
             + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_migrationPresentationCanceled) = 0;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for FlowDestination.migration(_:), v10);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for FlowPresentationContext.presentModalCard(_:), v2);
    FlowPresentationHints.init(context:animate:)();
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v15 = (void *)static OS_os_log.iTunesMigration.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
    uint64_t v17 = self;
    id v18 = v16;
    id v19 = [v17 sharedApplication];
    id v20 = [v19 delegate];

    if (v20)
    {
      if ([v20 respondsToSelector:"window"]) {
        id v21 = [v20 window];
      }
      else {
        id v21 = 0;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      id v21 = 0;
    }
    id v22 = [v21 rootViewController];

    if (v22)
    {
      UIResponder.nearestFlowController.getter();

      if (v25)
      {
        sub_100041A98(v24, v25);
        dispatch thunk of FlowController.show(destination:hints:referrer:)();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        sub_10004D2D8((uint64_t)v24);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        sub_100054B1C((uint64_t)v24, &qword_100604710);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
}

void sub_100356B5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v32 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v29 - v11;
  v0[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_migrationPresentationCanceled] = 1;
  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate];
  uint64_t v14 = self;
  id v15 = v13;
  id v16 = [v14 sharedApplication];
  id v17 = [v16 delegate];

  if (v17)
  {
    if ([v17 respondsToSelector:"window"]) {
      id v18 = [v17 window];
    }
    else {
      id v18 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v18 = 0;
  }
  id v19 = [v18 rootViewController];

  if (v19)
  {
    id v36 = [v19 presentedViewController];

    if (v36)
    {
      type metadata accessor for MigrationViewController();
      uint64_t v20 = swift_dynamicCastClass();
      if (v20)
      {
        uint64_t v21 = v20;
        dispatch thunk of MigrationViewController.isAcknowledgementRequired.setter();
        static os_log_type_t.default.getter();
        sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
        id v22 = (void *)static OS_os_log.iTunesMigration.getter();
        os_log(_:dso:log:_:_:)();

        sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
        uint64_t v30 = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v31 = v8;
        uint64_t v32 = *(void *)(v32 + 8);
        ((void (*)(char *, uint64_t))v32)(v10, v8);
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v1;
        *(void *)(v23 + 24) = v21;
        aBlock[4] = sub_100357BF0;
        aBlock[5] = v23;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003B424;
        void aBlock[3] = &unk_100563A80;
        uint64_t v24 = _Block_copy(aBlock);
        id v25 = v1;
        id v26 = v36;
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10004AE0C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100054B78((uint64_t *)&unk_1005FE4B0);
        sub_10002FBEC();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v27 = (void *)v30;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v24);

        (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v2);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v34);
        ((void (*)(char *, uint64_t))v32)(v12, v31);
      }
      else
      {
        id v28 = v36;
      }
    }
  }
}

uint64_t sub_1003570D0(uint64_t a1, void *a2)
{
  unsigned __int8 v4 = static Link.Presentation.textFollowsTintColor.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v4) {
    Link.Presentation.init(rawValue:)();
  }
  type metadata accessor for DismissAction();
  swift_allocObject();
  uint64_t v5 = DismissAction.init(title:animationBehavior:presentationStyle:)();
  void v8[3] = type metadata accessor for MigrationViewController();
  id v6 = [a2 view];
  sub_100357BF8(v5, (uint64_t)v8, v6, a1, (uint64_t (*)(void))&type metadata accessor for DismissAction, (unint64_t *)&unk_1006046F0, (void (*)(uint64_t))&type metadata accessor for DismissAction);

  swift_release();
  sub_100054B1C((uint64_t)v8, &qword_1005F5D30);
  return swift_release();
}

uint64_t sub_100357250(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v25 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1006046E8);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
  static UTType.folder.getter();
  id v14 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v14 initForOpeningContentTypes:isa];

  [v16 setDelegate:v3];
  [v16 setAllowsMultipleSelection:0];
  id v17 = &v3[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection];
  uint64_t v18 = *(void *)&v3[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection];
  *(void *)id v17 = v25;
  *((void *)v17 + 1) = a2;
  swift_retain();
  sub_1000536BC(v18);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v19 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v3;
  *(void *)(v20 + 24) = v16;
  aBlock[4] = sub_100357BE8;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100563A30;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = v3;
  id v23 = v16;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004AE0C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v13, v27);
}

void sub_1003576E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
  unsigned __int8 v4 = self;
  id v5 = v3;
  id v6 = [v4 sharedApplication];
  id v7 = [v6 delegate];

  if (v7)
  {
    if ([v7 respondsToSelector:"window"]) {
      id v8 = [v7 window];
    }
    else {
      id v8 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v8 = 0;
  }
  id v9 = [v8 rootViewController];

  if (v9)
  {
    [v9 presentViewController:a2 animated:1 completion:0];
  }
}

void sub_1003578B8(uint64_t a1, uint64_t a2)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a1, (uint64_t)v5, (uint64_t *)&unk_1005F7750);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  id v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    URL._bridgeToObjectiveC()(v8);
    id v9 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  (*(void (**)(uint64_t, void *))(a2 + 16))(a2, v9);
}

id sub_100357AF4()
{
  return sub_100357B10(0, type metadata accessor for AppController);
}

id sub_100357B10(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_100357BA8()
{
  return swift_deallocObject();
}

void sub_100357BE8()
{
  sub_1003576E0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100357BF0()
{
  return sub_1003570D0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100357BF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t v37 = a2;
  id v38 = a3;
  uint64_t v12 = type metadata accessor for ActionOutcome();
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  __chkstk_darwin();
  uint64_t v34 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin();
  uint64_t v14 = type metadata accessor for OSLogger();
  uint64_t v32 = *(void *)(v14 - 8);
  uint64_t v33 = v14;
  __chkstk_darwin();
  id v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a5(0);
  uint64_t v21 = sub_10004AE0C(a6, a7);
  uint64_t v22 = *(void *)(a4 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
  uint64_t v43 = v21;
  v41[0] = a1;
  if (*(void *)(v22 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner))
  {
    type metadata accessor for ActionRunnerOptions();
    swift_retain_n();
    swift_retain();
    swift_unknownObjectRetain();
    BaseObjectGraph.__allocating_init(_:)();
    sub_100054BBC(v37, (uint64_t)v39, &qword_1005F5D30);
    id v23 = v38;
    ActionOrigin.init(sender:view:)();
    ActionRunnerOptions.withActionOrigin(_:)();
    sub_100054B1C((uint64_t)v40, (uint64_t *)&unk_100600670);
    swift_release();
    swift_getObjectType();
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for ActionMetricsBehavior.fromAction(_:), v17);
    uint64_t v24 = ActionRunner.perform(_:withMetrics:asPartOf:)();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    swift_retain();
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._object = (void *)0x80000001004DF0C0;
    v25._uint64_t countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v26 = v42;
    uint64_t v27 = sub_100041A98(v41, v42);
    void v40[3] = v26;
    uint64_t v28 = sub_10004A244(v40);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v28, v27, v26);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
    sub_100054B1C((uint64_t)v40, &qword_1005F5D30);
    v29._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v29._object = (void *)0x80000001004DBE80;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    LogMessage.init(stringInterpolation:)();
    uint64_t v30 = v33;
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v30);
    sub_100054B78((uint64_t *)&unk_100604700);
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for ActionOutcome.unsupported(_:), v36);
    uint64_t v24 = Promise.__allocating_init(value:)();
  }
  sub_10004D2D8((uint64_t)v41);
  return v24;
}

uint64_t sub_100358160()
{
  return swift_deallocObject();
}

void sub_100358198()
{
  sub_1003563F4(*(char **)(v0 + 16));
}

void sub_1003581A0()
{
}

uint64_t sub_1003581C4(uint64_t a1, NSString a2)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  objc_super v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - v9;
  if (a2) {
    a2 = String._bridgeToObjectiveC()();
  }
  id v11 = [self searchUrlForSearchText:a2];

  if (v11)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v12(v4, v8, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v12(v10, v4, v5);
      id v13 = [self sharedApplication];
      URL._bridgeToObjectiveC()(v14);
      id v16 = v15;
      sub_10016E9B0((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_10004AE0C(&qword_1005F66F0, type metadata accessor for OpenExternalURLOptionsKey);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v13 openURL:v16 options:isa completionHandler:0];

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  return sub_100054B1C((uint64_t)v4, (uint64_t *)&unk_1005F7750);
}

uint64_t sub_1003584D4()
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  uint64_t v1 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  objc_super v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FlowPresentationContext();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FlowDestination();
  __chkstk_darwin();
  (*(void (**)(char *, void))(v10 + 104))((char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for FlowDestination.downloadingEpisodes(_:));
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for FlowPresentationContext.infer(_:), v5);
  unsigned __int8 v11 = static Link.Presentation.textFollowsTintColor.getter();
  unsigned __int8 v12 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v11) {
    Link.Presentation.init(rawValue:)();
  }
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v12) {
    Link.Presentation.init(rawValue:)();
  }
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for FlowDestinationPageHeader.standard(_:), v1);
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for FlowAction();
  swift_allocObject();
  FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
  memset(v15, 0, sizeof(v15));
  uint64_t v13 = swift_retain();
  sub_100357BF8(v13, (uint64_t)v15, 0, v0, (uint64_t (*)(void))&type metadata accessor for FlowAction, (unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
  swift_release();
  swift_release();
  sub_100054B1C((uint64_t)v15, &qword_1005F5D30);
  return swift_release();
}

void sub_100358864(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v53 = a3;
  int v49 = a5;
  LODWORD(v45) = a4;
  uint64_t v50 = a2;
  id v46 = a1;
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  __chkstk_darwin();
  uint64_t v51 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FlowPresentationContext();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  unsigned __int8 v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = type metadata accessor for FlowDestination();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v44 = self;
  id v19 = [v44 defaultInstance];
  [v19 dismissNowPlayingAnimated:1 completion:0];

  if (v53)
  {
    uint64_t v20 = v53;
    uint64_t v43 = v12;
    id v46 = v6;
    *(void *)uint64_t v18 = v50;
    *((void *)v18 + 1) = v20;
    *((void *)v18 + 3) = 0;
    *((void *)v18 + 4) = 0;
    *((void *)v18 + 2) = 0;
    v18[40] = 1;
    *((void *)v18 + 6) = 0;
    v18[56] = 1;
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for FlowDestination.episodeDetails(_:), v15);
    uint64_t v21 = *(void (**)(char *, void, uint64_t))(v10 + 104);
    uint64_t v45 = v9;
    uint64_t v42 = v21;
    v21(v14, enum case for FlowPresentationContext.infer(_:), v9);
    swift_bridgeObjectRetain();
    unsigned __int8 v22 = static Link.Presentation.textFollowsTintColor.getter();
    unsigned __int8 v23 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
    Link.Presentation.init(rawValue:)();
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v22) {
      Link.Presentation.init(rawValue:)();
    }
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v23) {
      Link.Presentation.init(rawValue:)();
    }
    char v24 = v49;
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v51, enum case for FlowDestinationPageHeader.standard(_:), v48);
    static ActionMetrics.notInstrumented.getter();
    uint64_t v25 = type metadata accessor for FlowAction();
    swift_allocObject();
    uint64_t v26 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
    if (v24)
    {
      uint64_t v27 = self;
      swift_retain();
      NSString v28 = String._bridgeToObjectiveC()();
      id v29 = [v27 playEpisodeUuid:v28];

      if (!v29)
      {
        swift_release_n();
        return;
      }
      id v30 = [v44 defaultInstance];
      [v30 playManifest:v29 reason:3];

      swift_release();
    }
    uint64_t v31 = v52;
    v42(v43, enum case for FlowPresentationContext.showDetail(_:), v45);
    goto LABEL_12;
  }
  char v32 = v45;
  uint64_t v25 = type metadata accessor for FlowAction();
  uint64_t v33 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  v33(v12, enum case for FlowPresentationContext.infer(_:), v9);
  id v34 = v46;
  static ActionMetrics.notInstrumented.getter();
  uint64_t v35 = FlowAction.init(podcast:presentationContext:actionMetrics:)(v34, (uint64_t)v12, (uint64_t)v6);
  if (v35)
  {
    uint64_t v26 = v35;
    uint64_t v31 = v52;
    v33(v12, enum case for FlowPresentationContext.showDetail(_:), v9);
LABEL_12:
    swift_retain();
    dispatch thunk of FlowAction.presentationContext.setter();
    swift_release();
    sub_100054B78(&qword_100603DD0);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_10046D010;
    type metadata accessor for FlowAction();
    *(void *)(v36 + 56) = v25;
    *(void *)(v36 + 64) = sub_10004AE0C((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
    *(void *)(v36 + 32) = v26;
    swift_retain_n();
    Link.Presentation.init(rawValue:)();
    static ActionMetrics.notInstrumented.getter();
    type metadata accessor for TabChangeAction();
    swift_allocObject();
    TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
    memset(v54, 0, sizeof(v54));
    uint64_t v37 = swift_retain();
    sub_100357BF8(v37, (uint64_t)v54, 0, v31, (uint64_t (*)(void))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
    swift_release();
    swift_release();
    swift_release();
    sub_100054B1C((uint64_t)v54, &qword_1005F5D30);
    swift_release();
    swift_release();
    return;
  }
  if (v32)
  {
    id v38 = [objc_allocWithZone((Class)MTEpisodeUnavailableUtil) init];
    id v39 = [v34 title];
    if (v39)
    {
      uint64_t v40 = v39;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v38 showDialogForReason:3 podcastTitle:v41 completion:0];
  }
}

void sub_100358FBC()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 delegate];

  if (v1)
  {
    if ([v1 respondsToSelector:"window"])
    {
      id v2 = [v1 window];
      swift_unknownObjectRelease();
      id v1 = [v2 rootViewController];
    }
    else
    {
      swift_unknownObjectRelease();
      id v1 = 0;
    }
  }
  id v3 = [v1 tabBarController];
  if (!v3) {
    goto LABEL_10;
  }
  objc_super v4 = v3;
  id v5 = [v3 selectedViewController];
  if (!v5)
  {

LABEL_10:
    return;
  }
  uint64_t v6 = v5;
  id v7 = [v5 tabBarItem];

  if (v7)
  {
    [v7 tag];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100359134(uint64_t a1, void (*a2)(uint64_t))
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  sub_100056D54(v2 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appTraits, (uint64_t)&v9);
  uint64_t v4 = *((void *)&v10 + 1);
  uint64_t v5 = v11;
  sub_100041A98(&v9, *((uint64_t *)&v10 + 1));
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for TabChangeAction();
  swift_allocObject();
  TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
  sub_10004D2D8((uint64_t)&v9);
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v6 = swift_retain();
  sub_100357BF8(v6, (uint64_t)&v9, 0, v2, (uint64_t (*)(void))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
  swift_release();
  sub_100054B1C((uint64_t)&v9, &qword_1005F5D30);
  uint64_t v7 = swift_release();
  if (a2) {
    a2(v7);
  }
  return swift_release();
}

uint64_t sub_100359304(uint64_t a1, void (*a2)(uint64_t))
{
  type metadata accessor for ActionMetrics();
  __chkstk_darwin();
  Link.Presentation.init(rawValue:)();
  static ActionMetrics.notInstrumented.getter();
  type metadata accessor for TabChangeAction();
  swift_allocObject();
  TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)();
  memset(v7, 0, sizeof(v7));
  uint64_t v4 = swift_retain();
  sub_100357BF8(v4, (uint64_t)v7, 0, v2, (uint64_t (*)(void))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100600680, (void (*)(uint64_t))&type metadata accessor for TabChangeAction);
  swift_release();
  sub_100054B1C((uint64_t)v7, &qword_1005F5D30);
  uint64_t v5 = swift_release();
  if (a2) {
    a2(v5);
  }
  return swift_release();
}

void sub_10035976C(char a1, void *a2, uint64_t a3)
{
  id v6 = [self defaultInstance];
  if (a2)
  {
    v7[4] = a2;
    void v7[5] = a3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    _OWORD v7[2] = sub_10003B424;
    v7[3] = &unk_100563B70;
    a2 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  [v6 dismissNowPlayingAnimated:a1 & 1 completion:a2];
  _Block_release(a2);
}

uint64_t sub_100359860(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_100054B1C((uint64_t)v7, (uint64_t *)&unk_1005F7750);
  }
  unsigned __int8 v12 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  v12(v7, a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
  uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
  v13(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_100054B1C((uint64_t)v7, (uint64_t *)&unk_1005F7750);
  }
  unsigned __int8 v23 = (void (*)(char *, char *, uint64_t))v12;
  char v24 = (void (*)(uint64_t, void, uint64_t, uint64_t))v13;
  uint64_t v25 = v5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  int v26 = static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v14 = (void *)static OS_os_log.iTunesMigration.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v15 = v2;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10046D010;
  uint64_t v17 = URL.path.getter();
  uint64_t v19 = v18;
  *(void *)(v16 + 56) = &type metadata for String;
  *(void *)(v16 + 64) = sub_10004DA4C();
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v19;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v20 = *(void (**)(uint64_t))(v15
                                       + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection);
  if (v20)
  {
    uint64_t v21 = (uint64_t)v25;
    v23(v25, v11, v8);
    v24(v21, 0, 1, v8);
    swift_retain();
    v20(v21);
    sub_1000536BC((uint64_t)v20);
    sub_100054B1C(v21, (uint64_t *)&unk_1005F7750);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_100359BBC()
{
  uint64_t v1 = v0;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  id v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v4 = (void *)static OS_os_log.iTunesMigration.getter();
  os_log(_:dso:log:_:_:)();

  uint64_t v5 = *(void (**)(char *))(v1
                                     + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection);
  if (v5)
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
    swift_retain();
    v5(v3);
    sub_1000536BC((uint64_t)v5);
    sub_100054B1C((uint64_t)v3, (uint64_t *)&unk_1005F7750);
  }
}

uint64_t sub_100359D14()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_100359D4C(uint64_t a1)
{
  sub_1003578B8(a1, *(void *)(v1 + 16));
}

uint64_t sub_100359D88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v49 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v45 - v6;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint8_t *)type metadata accessor for CLSContextMetadata();
  uint64_t v11 = *((void *)v10 - 1);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10035B670((uint64_t (*)(void))&ServerPodcastBase.id.getter);
  if (v15 & 1) != 0 || ([self isEmpty:v14])
  {
    sub_1001C0DD4();
    static OS_os_log.classKit.getter();
    id v16 = v1;
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v48 = v3;
      *(void *)&v53[0] = v20;
      id v46 = v10;
      uint64_t v47 = v11;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v21 = ServerPodcastBase.id.getter();
      v50[0] = sub_10004B974(v21, v22, (uint64_t *)v53);
      uint64_t v10 = v46;
      uint64_t v11 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Show has empty or invalid store ID - %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v48);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v3);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint8_t *))(v11 + 56))(a1, 1, 1, v10);
  }
  uint64_t v48 = v3;
  if (!ServerPodcastBase.attributes.getter()
    || (uint64_t v24 = PodcastAttributes.name.getter(), v26 = v25, swift_release(), !v26))
  {
    sub_1001C0DD4();
    static OS_os_log.classKit.getter();
    uint64_t v37 = v1;
    id v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v47 = v11;
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = (void *)swift_slowAlloc();
      id v46 = v40;
      *(_DWORD *)uint64_t v40 = 138412290;
      *(void *)&v53[0] = v37;
      NSString v41 = v37;
      uint64_t v11 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v45 = v37;

      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Unable to find title for show - %@", v46, 0xCu);
      sub_100054B78((uint64_t *)&unk_1005F9F00);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v38 = v37;
    }
    uint64_t v42 = v48;
    uint64_t v43 = v49;

    (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v42);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint8_t *))(v11 + 56))(a1, 1, 1, v10);
  }
  uint64_t v47 = v11;
  uint64_t v49 = a1;
  uint64_t v27 = ServerPodcastBase.id.getter();
  uint64_t v29 = v28;
  uint64_t v54 = 0;
  memset(v53, 0, sizeof(v53));
  unsigned char v13[40] = 1;
  *((void *)v13 + 6) = 0;
  uint64_t v30 = (uint64_t)&v13[*((int *)v10 + 9)];
  uint64_t v31 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  char v32 = (uint64_t (**)())&v13[*((int *)v10 + 10)];
  *char v32 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
  v32[1] = 0;
  *(void *)&v13[*((int *)v10 + 11)] = 0;
  id v46 = v10;
  uint64_t v33 = *((int *)v10 + 12);
  *(void *)&v13[v33] = 0;
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = v27;
  *((void *)v13 + 2) = v29;
  *((void *)v13 + 3) = v24;
  *((void *)v13 + 4) = v26;
  sub_10035C0D8((uint64_t)v53, (uint64_t)v50);
  uint64_t v34 = v51;
  if (v51)
  {
    uint64_t v35 = v52;
    sub_100041A98(v50, v51);
    uint64_t v36 = sub_1002577B4(v34, v35);
    sub_100054B1C((uint64_t)v53, &qword_1005FCD78);
    sub_10004D2D8((uint64_t)v50);
  }
  else
  {
    sub_100054B1C((uint64_t)v53, &qword_1005FCD78);
    sub_100054B1C((uint64_t)v50, &qword_1005FCD78);
    uint64_t v36 = 0;
  }
  swift_bridgeObjectRelease();
  *(void *)&v13[v33] = v36;
  unsigned char v13[40] = 0;
  sub_10035A44C((uint64_t)v9);
  sub_100222E1C((uint64_t)v9, v30);
  swift_release();
  *char v32 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
  v32[1] = 0;
  uint64_t v44 = v49;
  sub_10035C140((uint64_t)v13, v49, (uint64_t (*)(void))type metadata accessor for CLSContextMetadata);
  (*(void (**)(uint64_t, void, uint64_t, uint8_t *))(v47 + 56))(v44, 0, 1, v46);
  return sub_10035C20C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CLSContextMetadata);
}

uint64_t sub_10035A44C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URLComponents();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastsURLEpisodeParameters(0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin();
  uint64_t v10 = (char *)&v21 - v9;
  *((void *)v10 + 6) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v10[56] = 1;
  *(_WORD *)(v10 + 57) = 514;
  uint64_t v11 = (char *)&v21 + *(int *)(v8 + 48) - v9;
  uint64_t v12 = type metadata accessor for MetricsWidgetContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *((void *)v10 + 4) = sub_10035B670((uint64_t (*)(void))&ServerPodcastBase.id.getter);
  v10[40] = v13 & 1;
  type metadata accessor for PodcastsURLScheme();
  sub_10035C140((uint64_t)v10, (uint64_t)v7, type metadata accessor for PodcastsURLEpisodeParameters);
  type metadata accessor for PodcastsURLShowCommand(0);
  uint64_t v14 = swift_allocObject();
  sub_10035C1A8((uint64_t)v7, v14 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
  type metadata accessor for PodcastsURLNowPlayingCommand();
  if (swift_dynamicCastClass() || (type metadata accessor for PodcastsURLBrowseCommand(), swift_dynamicCastClass()))
  {
    swift_retain();
    URLComponents.init()();
    URLComponents.scheme.setter();
    URLComponents.host.setter();
  }
  else
  {
    type metadata accessor for PodcastsURLOpenCommand(0);
    uint64_t v16 = swift_dynamicCastClass();
    if (v16)
    {
      uint64_t v17 = v16;
      swift_retain();
      sub_1003B9E50(v17, a1);
      goto LABEL_5;
    }
    uint64_t v18 = swift_dynamicCastClass();
    if (!v18)
    {
      type metadata accessor for PodcastsURLPlayCommand(0);
      uint64_t v18 = swift_dynamicCastClass();
      if (!v18)
      {
        type metadata accessor for PodcastsURLShowAndPlayCommand(0);
        uint64_t v18 = swift_dynamicCastClass();
        if (!v18)
        {
          uint64_t v20 = type metadata accessor for URL();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
          goto LABEL_6;
        }
      }
    }
    uint64_t v19 = v18;
    swift_retain();
    URLComponents.init()();
    URLComponents.scheme.setter();
    URLComponents.host.setter();
    sub_1003BB178(v19 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
    URLComponents.queryItems.setter();
  }
  URLComponents.url.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_5:
  swift_release();
LABEL_6:
  swift_release();
  return sub_10035C20C((uint64_t)v10, type metadata accessor for PodcastsURLEpisodeParameters);
}

uint64_t sub_10035A8D4()
{
  return ServerPodcastBase.id.getter();
}

void sub_10035A8F8(uint64_t a1@<X8>)
{
  uint64_t v2 = dispatch thunk of ServerPodcastEpisode.relationships.getter();
  if (!v2) {
    goto LABEL_11;
  }
  uint64_t v3 = (void *)v2;
  uint64_t v4 = (void *)PodcastEpisodeRelationships.podcast.getter();

  if (!v4) {
    goto LABEL_11;
  }
  unint64_t v5 = PodcastRelationshipContainer.data.getter();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v5 + 32);
LABEL_8:
    id v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = type metadata accessor for ServerPodcastBase();
    *(void *)(a1 + 32) = &off_100563C10;
    *(void *)a1 = v7;
    return;
  }
  __break(1u);
}

void sub_10035A9F8()
{
  uint64_t v0 = dispatch thunk of ServerPodcastEpisode.relationships.getter();
  if (v0)
  {
    uint64_t v1 = (void *)v0;
    uint64_t v2 = (void *)PodcastEpisodeRelationships.podcast.getter();

    if (v2)
    {
      unint64_t v3 = PodcastRelationshipContainer.data.getter();

      if (v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v5) {
          goto LABEL_8;
        }
      }
      else if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:
        swift_bridgeObjectRelease();
        return;
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_8;
      }
      if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v4 = *(id *)(v3 + 32);
        goto LABEL_8;
      }
      __break(1u);
    }
  }
}

uint64_t sub_10035AACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v90 = a1;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v87 = v3;
  uint64_t v88 = v4;
  __chkstk_darwin();
  id v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v83 - v7;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v83 - v9;
  __chkstk_darwin();
  uint64_t v85 = (char *)&v83 - v11;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  char v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for CLSContextMetadata();
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin();
  char v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Date();
  unint64_t v86 = *(uint8_t **)(v18 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10035B670((uint64_t (*)(void))&ServerPodcastEpisode.id.getter);
  if (v22 & 1) != 0 || ([self isEmpty:v21])
  {
    sub_1001C0DD4();
    static OS_os_log.classKit.getter();
    id v23 = v1;
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v27 = ServerPodcastEpisode.id.getter();
      v92[0] = sub_10004B974(v27, v28, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Episode has empty or invalid store ID - %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v6, v87);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v90, 1, 1, v91);
  }
  sub_10035A9F8();
  uint64_t v31 = v30;

  if (!v31)
  {
    sub_1001C0DD4();
    static OS_os_log.classKit.getter();
    id v46 = v1;
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136315138;
      unint64_t v86 = v49 + 4;
      id v50 = v46;
      id v51 = [v50 description];
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v54 = v53;

      v92[0] = sub_10004B974(v52, v54, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Unable to find podcast for episode - %s", v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v8, v87);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v90, 1, 1, v91);
  }
  ServerPodcastEpisode.attributes.getter();
  uint64_t v32 = PodcastEpisodeAttributes.name.getter();
  uint64_t v34 = v33;
  swift_release();
  if (!v34)
  {
    sub_1001C0DD4();
    static OS_os_log.classKit.getter();
    id v55 = v1;
    uint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 136315138;
      unint64_t v86 = v58 + 4;
      id v59 = v55;
      id v60 = [v59 description];
      uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v63 = v62;

      v92[0] = sub_10004B974(v61, v63, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Unable to find title for episode - %s", v58, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v10, v87);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v90, 1, 1, v91);
  }
  ServerPodcastEpisode.attributes.getter();
  PodcastEpisodeAttributes.releaseDateResolved.getter();
  swift_release();
  uint64_t v35 = v86;
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v86 + 6))(v17, 1, v18) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100054B1C((uint64_t)v17, &qword_1005F5D20);
    sub_1001C0DD4();
    uint64_t v36 = v85;
    static OS_os_log.classKit.getter();
    id v37 = v2;
    id v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      id v41 = v37;
      id v42 = [v41 description];
      uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v45 = v44;

      v92[0] = sub_10004B974(v43, v45, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Unable to resolve release date for episode - %s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v88 + 8))(v85, v87);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v88 + 8))(v36, v87);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v90, 1, 1, v91);
  }
  (*((void (**)(char *, char *, uint64_t))v35 + 4))(v20, v17, v18);
  uint64_t v64 = ServerPodcastEpisode.id.getter();
  uint64_t v84 = v65;
  uint64_t v85 = (char *)v64;
  sub_10035A8F8((uint64_t)v95);
  v15[40] = 1;
  *((void *)v15 + 6) = 0;
  uint64_t v66 = (int *)v91;
  uint64_t v67 = (uint64_t)&v15[*(int *)(v91 + 36)];
  uint64_t v68 = type metadata accessor for URL();
  uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56);
  uint64_t v88 = v67;
  v69(v67, 1, 1, v68);
  uint64_t v70 = (uint64_t (**)())&v15[v66[10]];
  *uint64_t v70 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
  v70[1] = 0;
  uint64_t v87 = v66[11];
  *(void *)&v15[v87] = 0;
  uint64_t v71 = v66[12];
  *(void *)&v15[v71] = 0;
  *(void *)char v15 = 14;
  uint64_t v72 = v84;
  *((void *)v15 + 1) = v85;
  *((void *)v15 + 2) = v72;
  *((void *)v15 + 3) = v32;
  *((void *)v15 + 4) = v34;
  sub_10035C0D8((uint64_t)v95, (uint64_t)v92);
  uint64_t v73 = v93;
  if (v93)
  {
    uint64_t v74 = v94;
    sub_100041A98(v92, v93);
    uint64_t v75 = sub_1002577B4(v73, v74);
    sub_100054B1C((uint64_t)v95, &qword_1005FCD78);
    sub_10004D2D8((uint64_t)v92);
  }
  else
  {
    sub_100054B1C((uint64_t)v95, &qword_1005FCD78);
    sub_100054B1C((uint64_t)v92, &qword_1005FCD78);
    uint64_t v75 = 0;
  }
  swift_bridgeObjectRelease();
  *(void *)&v15[v71] = v75;
  ServerPodcastEpisode.attributes.getter();
  uint64_t v76 = PodcastEpisodeAttributes.episodeNumber.getter();
  char v78 = v77;
  swift_release();
  if (v78) {
    uint64_t v79 = 0;
  }
  else {
    uint64_t v79 = v76;
  }
  *((void *)v15 + 6) = v79;
  sub_10035B948((uint64_t)v13);
  sub_100222E1C((uint64_t)v13, v88);
  swift_release();
  *uint64_t v70 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
  v70[1] = 0;
  Date.timeIntervalSince1970.getter();
  uint64_t v81 = v80;
  (*((void (**)(char *, uint64_t))v86 + 1))(v20, v18);
  *(void *)&v15[v87] = v81;
  uint64_t v82 = v90;
  sub_10035C140((uint64_t)v15, v90, (uint64_t (*)(void))type metadata accessor for CLSContextMetadata);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v82, 0, 1, v91);
  return sub_10035C20C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CLSContextMetadata);
}

uint64_t sub_10035B670(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  uint64_t v3 = v2;
  uint64_t v4 = HIBYTE(v2) & 0xF;
  uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v3 & 0x1000000000000000) == 0)
  {
    if ((v3 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v7 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v8 = (uint64_t)sub_10035C370(v7, v5, 10);
      char v10 = v9 & 1;
      goto LABEL_44;
    }
    v24[0] = result;
    v24[1] = v3 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v4) {
        goto LABEL_57;
      }
      if (v4 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v8 = (BYTE1(result) - 48);
      if (v4 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v8 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v11 = v4 - 3;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v24 + 3;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_31;
            }
            uint64_t v14 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              goto LABEL_31;
            }
            uint64_t v8 = v14 + v13;
            if (__OFADD__(v14, v13)) {
              goto LABEL_31;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_44;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v4)
        {
          if (v4 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v4 == 2)
            {
              char v10 = 0;
              uint64_t v8 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              uint64_t v8 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              uint64_t v19 = v4 - 3;
              if (!v19) {
                goto LABEL_43;
              }
              uint64_t v20 = (unsigned __int8 *)v24 + 3;
              while (1)
              {
                unsigned int v21 = *v20 - 48;
                if (v21 > 9) {
                  break;
                }
                uint64_t v22 = 10 * v8;
                if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
                  break;
                }
                uint64_t v8 = v22 - v21;
                if (__OFSUB__(v22, v21)) {
                  break;
                }
                char v10 = 0;
                ++v20;
                if (!--v19) {
                  goto LABEL_44;
                }
              }
            }
          }
LABEL_31:
          uint64_t v8 = 0;
          char v10 = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      if (!v4 || (result - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v8 = (result - 48);
      if (v4 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v8 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v15 = v4 - 2;
        if (v15)
        {
          uint64_t v16 = (unsigned __int8 *)v24 + 2;
          while (1)
          {
            unsigned int v17 = *v16 - 48;
            if (v17 > 9) {
              goto LABEL_31;
            }
            uint64_t v18 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              goto LABEL_31;
            }
            uint64_t v8 = v18 + v17;
            if (__OFADD__(v18, v17)) {
              goto LABEL_31;
            }
            char v10 = 0;
            ++v16;
            if (!--v15) {
              goto LABEL_44;
            }
          }
        }
      }
    }
LABEL_43:
    char v10 = 0;
    goto LABEL_44;
  }
  uint64_t v8 = (uint64_t)sub_10035C288(result, v3, 10);
  char v10 = v23;
LABEL_44:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t sub_10035B948@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v39 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v39 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URLComponents();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  uint64_t v38 = v7;
  __chkstk_darwin();
  char v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v37 - v13;
  sub_10035A9F8();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_10035B670((uint64_t (*)(void))&ServerPodcastBase.id.getter);
    char v19 = v18;

    if ((v19 & 1) == 0)
    {
      *(_OWORD *)uint64_t v14 = 0u;
      *((_OWORD *)v14 + 1) = 0u;
      *(_WORD *)(v14 + 57) = 514;
      uint64_t v20 = &v14[*(int *)(v10 + 40)];
      uint64_t v21 = type metadata accessor for MetricsWidgetContext();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
      *((void *)v14 + 4) = v17;
      v14[40] = 0;
      *((void *)v14 + 6) = sub_10035B670((uint64_t (*)(void))&ServerPodcastEpisode.id.getter);
      v14[56] = v22 & 1;
      type metadata accessor for PodcastsURLScheme();
      sub_10035C140((uint64_t)v14, (uint64_t)v12, type metadata accessor for PodcastsURLEpisodeParameters);
      type metadata accessor for PodcastsURLShowCommand(0);
      uint64_t v23 = swift_allocObject();
      sub_10035C1A8((uint64_t)v12, v23 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
      type metadata accessor for PodcastsURLNowPlayingCommand();
      if (swift_dynamicCastClass() || (type metadata accessor for PodcastsURLBrowseCommand(), swift_dynamicCastClass()))
      {
        swift_retain();
        URLComponents.init()();
        URLComponents.scheme.setter();
        URLComponents.host.setter();
      }
      else
      {
        type metadata accessor for PodcastsURLOpenCommand(0);
        uint64_t v32 = swift_dynamicCastClass();
        if (v32)
        {
          uint64_t v33 = v32;
          swift_retain();
          sub_1003B9E50(v33, v40);
          goto LABEL_12;
        }
        uint64_t v34 = swift_dynamicCastClass();
        if (!v34)
        {
          type metadata accessor for PodcastsURLPlayCommand(0);
          uint64_t v34 = swift_dynamicCastClass();
          if (!v34)
          {
            type metadata accessor for PodcastsURLShowAndPlayCommand(0);
            uint64_t v34 = swift_dynamicCastClass();
            if (!v34)
            {
              uint64_t v36 = type metadata accessor for URL();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v40, 1, 1, v36);
              goto LABEL_13;
            }
          }
        }
        uint64_t v35 = v34;
        swift_retain();
        URLComponents.init()();
        URLComponents.scheme.setter();
        URLComponents.host.setter();
        sub_1003BB178(v35 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
        URLComponents.queryItems.setter();
      }
      URLComponents.url.getter();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v37);
LABEL_12:
      swift_release();
LABEL_13:
      swift_release();
      return sub_10035C20C((uint64_t)v14, type metadata accessor for PodcastsURLEpisodeParameters);
    }
  }
  sub_1001C0DD4();
  static OS_os_log.classKit.getter();
  id v24 = v2;
  os_log_type_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v28 = ServerPodcastEpisode.id.getter();
    uint64_t v41 = sub_10004B974(v28, v29, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Unable to build share URL, unknown show for episode - %s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v39);
  uint64_t v30 = type metadata accessor for URL();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v40, 1, 1, v30);
}

uint64_t sub_10035C014()
{
  return ServerPodcastEpisode.id.getter();
}

void sub_10035C038(uint64_t a1@<X8>)
{
}

uint64_t sub_10035C05C(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_10035C0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005FCD78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10035C140(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10035C1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10035C20C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned __int8 *sub_10035C26C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_10035C370(a1, a2, a3);
}

unsigned __int8 *sub_10035C288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_10035C5EC();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v11 = sub_10035C370(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_10035C370(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  char v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10035C5EC()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_10035C66C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10035C66C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10035C7C4(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10004BE14(v9, 0),
          unint64_t v12 = sub_10035C8C4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10035C7C4(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_10035C05C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_10035C05C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_10035C8C4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_10035C05C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_10035C05C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_10035CAD8(uint64_t a1)
{
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = a1;
  *(void *)(v1 + 16) = 0x7550726576726573;
  *(void *)(v1 + 24) = 0xEA00000000006873;
  *(void *)(v1 + 32) = [objc_allocWithZone((Class)MTDynamicTypeConstant) initWithDefaultConstant:UIFontTextStyleBody textStyle:44.0];
  NSString v2 = String._bridgeToObjectiveC()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  unint64_t v4 = self;
  id v5 = [v4 groupWithTitle:v2 footerText:0 settings:isa];

  if (!v5)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(void *)(v1 + 40) = v5;
  unint64_t v6 = self;
  swift_retain_n();
  id v7 = [v6 mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD000000000000029;
  v27._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001004DF280;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v27);

  id v10 = objc_allocWithZone((Class)NSAttributedString);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithString:v11];

  sub_100054B78(&qword_1005F8130);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10046D010;
  uint64_t v14 = self;
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 loadingSettingWithIdentifier:v15];

  if (!v16)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(void *)(v13 + 56) = sub_10035D694();
  *(void *)(v13 + 32) = v16;
  NSString v17 = String._bridgeToObjectiveC()();
  Class v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v4 groupWithTitle:v17 footerText:v12 settings:v18];

  if (v19)
  {
    char v20 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = v19;
    swift_release();

    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    id v22 = objc_allocWithZone((Class)IMFetchPushNotificationSettingsService);
    swift_retain();
    id v23 = [v22 init];
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_10035D70C;
    *(void *)(v24 + 24) = v21;
    aBlock[4] = sub_10035D74C;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10023ED20;
    void aBlock[3] = &unk_100563CF0;
    uint64_t v25 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v23 performDataRequestWithCompletion:v25];
    _Block_release(v25);
    swift_release_n();
    swift_release();

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_10035CEDC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10035CF3C(a1);
    return swift_release();
  }
  return result;
}

void sub_10035CF3C(uint64_t a1)
{
  if (a1)
  {
    swift_retain();
    swift_retain();
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_10035D37C(v3, a1);
    unint64_t v5 = v4;
    swift_bridgeObjectRelease();
    swift_release();
    id v6 = [self mainBundle];
    v24._object = (void *)0xE000000000000000;
    v7._object = (void *)0x80000001004DF280;
    v7._uint64_t countAndFlagsBits = 0xD000000000000029;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v24._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v24);

    id v9 = objc_allocWithZone((Class)NSAttributedString);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v11 = [v9 initWithString:v10];

    sub_1001B7D44(v5);
    swift_bridgeObjectRelease();
    NSString v12 = String._bridgeToObjectiveC()();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v14 = [self groupWithTitle:v12 footerText:v11 settings:isa];

    if (v14)
    {
      swift_release();
      NSString v15 = (void *)v1[5];
      v1[5] = v14;
      goto LABEL_6;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  NSString v16 = String._bridgeToObjectiveC()();
  Class v17 = Array._bridgeToObjectiveC()().super.isa;
  id v18 = [self groupWithTitle:v16 footerText:0 settings:v17];

  if (!v18) {
    goto LABEL_11;
  }
  NSString v15 = (void *)v1[5];
  v1[5] = v18;
LABEL_6:

  swift_beginAccess();
  sub_10024A230((uint64_t)(v1 + 6), (uint64_t)v22);
  if (v23)
  {
    sub_100056D54((uint64_t)v22, (uint64_t)v21);
    sub_10026D994((uint64_t)v22);
    sub_100041A98(v21, v21[3]);
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D010;
    uint64_t v20 = v1[3];
    *(void *)(inited + 32) = v1[2];
    *(void *)(inited + 40) = v20;
    swift_bridgeObjectRetain();
    sub_1001EEEB8(inited, 100);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_10004D2D8((uint64_t)v21);
  }
  else
  {
    sub_10026D994((uint64_t)v22);
  }
}

uint64_t sub_10035D248(char a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0x8000000000000000;
  sub_100280030(a1, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(a2 + 16) = v8;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_10037B438((uint64_t)UInt64.int64Representation.getter, 0);
}

uint64_t sub_10035D2F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10035D300()
{
  swift_bridgeObjectRelease();

  sub_10026D994(v0 + 48);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s14descr10054C489C17ServerPushSectionCMa()
{
  return self;
}

void sub_10035D37C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    void aBlock[6] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    char v5 = (char *)(a1 + 32);
    id v6 = (uint64_t *)(a2 + 16);
    id v23 = self;
    while (1)
    {
      char v7 = *v5;
      id v8 = [self mainBundle];
      if (v7)
      {
        unint64_t v9 = 0xD00000000000002DLL;
        unint64_t v22 = 0xE000000000000000;
        unint64_t v10 = 0x80000001004DF2D0;
      }
      else
      {
        unint64_t v9 = 0xD000000000000030;
        unint64_t v22 = 0xE000000000000000;
        unint64_t v10 = 0x80000001004DF300;
      }
      v11._uint64_t countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      uint64_t v12 = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, (Swift::String_optional)0, (NSBundle)v8, v11, *(Swift::String *)(&v22 - 1));

      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v14 = *v6;
      if (!*(void *)(*v6 + 16)) {
        goto LABEL_9;
      }
      unint64_t v15 = sub_1002270B4(v7);
      if (v16) {
        uint64_t v17 = *(unsigned __int8 *)(*(void *)(v14 + 56) + v15);
      }
      else {
LABEL_9:
      }
        uint64_t v17 = 0;
      swift_endAccess();
      NSString v18 = String._bridgeToObjectiveC()();
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = a2;
      *(unsigned char *)(v19 + 24) = v7;
      aBlock[4] = sub_10035D688;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100226350;
      void aBlock[3] = &unk_100563C78;
      uint64_t v20 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      id v21 = [v23 switchSettingWithTitle:v13 initialValue:v17 identifier:v18 changeHandler:v20];
      _Block_release(v20);

      if (!v21) {
        break;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      ++v5;
      if (!--v3) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_10035D650()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10035D688(char a1)
{
  return sub_10035D248(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

unint64_t sub_10035D694()
{
  unint64_t result = qword_1005F8288;
  if (!qword_1005F8288)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005F8288);
  }
  return result;
}

uint64_t sub_10035D6D4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10035D70C(uint64_t a1)
{
  return sub_10035CEDC(a1);
}

uint64_t sub_10035D714()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10035D74C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_10037C598(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

void sub_10035D75C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10035D784(void *a1, uint64_t (*a2)(void), unint64_t a3)
{
  type metadata accessor for CoreDataFetcher();
  id v6 = [self predicateForSubscribedPodcasts];
  unint64_t v7 = static CoreDataFetcher.fetchPodcasts(for:by:with:)();

  if (!v7) {
    return a2();
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  if (v7 >> 62) {
    goto LABEL_38;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v32 = a2;
    uint64_t v33 = a1;
    a2 = 0;
    unint64_t v9 = v7 & 0xC000000000000001;
    unint64_t v34 = a3;
    unint64_t v35 = v7 + 32;
    unint64_t v36 = v7;
    while (1)
    {
      id v10 = v9 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v35 + 8 * (void)a2);
      Swift::String v11 = v10;
      BOOL v12 = __OFADD__(a2, 1);
      a2 = (uint64_t (*)(void))((char *)a2 + 1);
      if (v12) {
        break;
      }
      id v13 = [v10 episodes];
      if (v13)
      {
        uint64_t v14 = v13;
        sub_10004D29C(0, (unint64_t *)&qword_100603220);
        sub_1001BED60();
        uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        a3 = v15 & 0xC000000000000001;
        if ((v15 & 0xC000000000000001) != 0)
        {
          uint64_t v16 = __CocoaSet.startIndex.getter();
          uint64_t v18 = v17;
          __CocoaSet.endIndex.getter();
          char v19 = static __CocoaSet.Index.== infix(_:_:)();
          swift_bridgeObjectRelease();
          a1 = (void *)v16;
          if ((v19 & 1) == 0) {
            goto LABEL_17;
          }
        }
        else
        {
          char v20 = *(unsigned char *)(v15 + 32);
          uint64_t v16 = 1 << v20;
          unint64_t v21 = *(void *)(v15 + 56);
          if (v21)
          {
            uint64_t v22 = 0;
          }
          else
          {
            unsigned int v23 = v20 & 0x3F;
            if (v23 < 7) {
              goto LABEL_32;
            }
            unint64_t v21 = *(void *)(v15 + 64);
            if (v21)
            {
              uint64_t v22 = 1;
            }
            else
            {
              if (v23 < 8) {
                goto LABEL_32;
              }
              unint64_t v21 = *(void *)(v15 + 72);
              if (!v21)
              {
                uint64_t v24 = 0;
                unint64_t v25 = (unint64_t)(v16 + 63) >> 6;
                if (v25 <= 3) {
                  unint64_t v25 = 3;
                }
                unint64_t v26 = v25 - 3;
                while (v26 != v24)
                {
                  unint64_t v21 = *(void *)(v15 + 80 + 8 * v24++);
                  if (v21)
                  {
                    uint64_t v22 = v24 + 2;
                    goto LABEL_16;
                  }
                }
LABEL_32:
                uint64_t v18 = *(unsigned int *)(v15 + 36);
                goto LABEL_33;
              }
              uint64_t v22 = 2;
            }
          }
LABEL_16:
          a1 = (void *)(__clz(__rbit64(v21)) + (v22 << 6));
          uint64_t v18 = *(unsigned int *)(v15 + 36);
          if (a1 != (void *)v16)
          {
LABEL_17:
            sub_100392B34((uint64_t)a1, v18, a3 != 0, v15);
            sub_100360974((uint64_t)a1, v18, a3 != 0);

            swift_bridgeObjectRelease();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            goto LABEL_34;
          }
        }
LABEL_33:
        sub_100360974(v16, v18, a3 != 0);

        swift_bridgeObjectRelease();
LABEL_34:
        unint64_t v7 = v36;
        if (a2 == (uint64_t (*)(void))v8)
        {
LABEL_35:
          swift_bridgeObjectRelease();
          Swift::String v27 = (void *)aBlock[0];
          a1 = v33;
          a3 = v34;
          a2 = v32;
          goto LABEL_40;
        }
      }
      else
      {

        if (a2 == (uint64_t (*)(void))v8) {
          goto LABEL_35;
        }
      }
    }
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  Swift::String v27 = _swiftEmptyArrayStorage;
LABEL_40:
  swift_bridgeObjectRelease();
  unint64_t v29 = (void *)swift_allocObject();
  long long v29[2] = v27;
  void v29[3] = a1;
  void v29[4] = a2;
  void v29[5] = a3;
  aBlock[4] = sub_100360C8C;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100564230;
  uint64_t v30 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v31 = a1;
  swift_retain();
  swift_release();
  [v31 performBlock:v30];
  _Block_release(v30);
  return swift_bridgeObjectRelease();
}

uint64_t _s34PostOneNotificationForEveryPodcastCMa()
{
  return self;
}

void sub_10035DC00(uint64_t a1, uint64_t a2)
{
}

void sub_10035DC24(uint64_t a1, uint64_t a2)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithKey:v5 ascending:1];

  unint64_t v7 = self;
  swift_retain();
  id v8 = [v7 sharedInstance];
  swift_release();
  id v9 = [v8 mainOrPrivateContext];

  id v10 = (void *)swift_allocObject();
  v10[2] = v6;
  void v10[3] = v9;
  v10[4] = a1;
  void v10[5] = a2;
  v14[4] = sub_1003609E8;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10003B424;
  void v14[3] = &unk_100564140;
  Swift::String v11 = _Block_copy(v14);
  id v12 = v6;
  id v13 = v9;
  swift_retain();
  swift_release();
  [v13 performBlock:v11];
  _Block_release(v11);
}

void sub_10035DDF0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for CoreDataFetcher();
  id v8 = [self predicateForSubscribedPodcasts];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10046D060;
  *(void *)(v9 + 32) = a1;
  aBlock[0] = v9;
  specialized Array._endMutation()();
  id v10 = a1;
  unint64_t v11 = static CoreDataFetcher.fetchPodcasts(for:by:with:)();

  swift_bridgeObjectRelease();
  if (!v11) {
    return;
  }
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_15;
  }
LABEL_4:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v12 = *(id *)(v11 + 32);
  }
  id v23 = v12;
  swift_bridgeObjectRelease();
  id v13 = [v23 episodes];
  if (v13
    && (uint64_t v14 = v13,
        sub_10004D29C(0, (unint64_t *)&qword_100603220),
        sub_1001BED60(),
        uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(),
        v14,
        uint64_t v16 = (void *)sub_100392128(v15),
        swift_bridgeObjectRelease(),
        v16))
  {
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10046D060;
    *(void *)(v17 + 32) = v16;
    aBlock[0] = v17;
    specialized Array._endMutation()();
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = aBlock[0];
    v18[3] = a2;
    void v18[4] = a3;
    void v18[5] = a4;
    aBlock[4] = sub_100360C8C;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003B424;
    void aBlock[3] = &unk_100564190;
    char v19 = _Block_copy(aBlock);
    id v20 = v16;
    swift_bridgeObjectRetain();
    id v21 = a2;
    swift_retain();
    swift_release();
    [v21 performBlock:v19];
    _Block_release(v19);

    swift_bridgeObjectRelease();
  }
  else
  {
  }
}

uint64_t _s22PostOldestNotificationCMa()
{
  return self;
}

void sub_10035E158(uint64_t a1, uint64_t a2)
{
}

void sub_10035E17C(uint64_t a1, uint64_t a2)
{
}

id sub_10035E1A4(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = self;
  id v7 = [v6 predicateForSubscribedPodcasts];
  id result = [v6 sortDescriptorsForRecentlyUpdatedAscending:0];
  if (!result) {
    goto LABEL_53;
  }
  uint64_t v9 = result;
  type metadata accessor for CoreDataFetcher();
  sub_10004D29C(0, (unint64_t *)&qword_1005F8120);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v10 = static CoreDataFetcher.fetchPodcasts(for:by:with:)();
  id result = (id)swift_bridgeObjectRelease();
  if (!v10) {
    return result;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  if (v10 >> 62) {
    goto LABEL_38;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v11)
  {
    uint64_t v38 = a2;
    uint64_t v39 = a1;
    uint64_t v40 = a3;
    a3 = 0;
    while (1)
    {
      id v12 = (v10 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v10 + 32 + 8 * a3);
      id v13 = v12;
      if (__OFADD__(a3++, 1)) {
        break;
      }
      id v15 = [v12 episodes];
      if (v15)
      {
        uint64_t v16 = v15;
        sub_10004D29C(0, (unint64_t *)&qword_100603220);
        sub_1001BED60();
        uint64_t v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        a1 = (void *)(v17 & 0xC000000000000001);
        if ((v17 & 0xC000000000000001) != 0)
        {
          uint64_t v18 = __CocoaSet.startIndex.getter();
          uint64_t v20 = v19;
          __CocoaSet.endIndex.getter();
          a2 = static __CocoaSet.Index.== infix(_:_:)();
          swift_bridgeObjectRelease();
          uint64_t v21 = v18;
          if ((a2 & 1) == 0) {
            goto LABEL_19;
          }
          goto LABEL_35;
        }
        char v22 = *(unsigned char *)(v17 + 32);
        uint64_t v18 = 1 << v22;
        unint64_t v23 = *(void *)(v17 + 56);
        if (v23)
        {
          uint64_t v24 = 0;
          goto LABEL_18;
        }
        unsigned int v25 = v22 & 0x3F;
        if (v25 >= 7)
        {
          unint64_t v23 = *(void *)(v17 + 64);
          if (v23)
          {
            uint64_t v24 = 1;
            goto LABEL_18;
          }
          if (v25 >= 8)
          {
            unint64_t v23 = *(void *)(v17 + 72);
            if (v23)
            {
              uint64_t v24 = 2;
LABEL_18:
              uint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
              uint64_t v20 = *(unsigned int *)(v17 + 36);
              if (v21 != v18)
              {
LABEL_19:
                a2 = a1 != 0;
                sub_100392B34(v21, v20, a1 != 0, v17);
                sub_100360974(v21, v20, a1 != 0);

                swift_bridgeObjectRelease();
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
                goto LABEL_7;
              }
              goto LABEL_35;
            }
            uint64_t v26 = 0;
            unint64_t v27 = (unint64_t)(v18 + 63) >> 6;
            if (v27 <= 3) {
              unint64_t v27 = 3;
            }
            unint64_t v28 = v27 - 3;
            while (v28 != v26)
            {
              unint64_t v23 = *(void *)(v17 + 80 + 8 * v26++);
              if (v23)
              {
                uint64_t v24 = v26 + 2;
                goto LABEL_18;
              }
            }
          }
        }
        uint64_t v20 = *(unsigned int *)(v17 + 36);
LABEL_35:
        sub_100360974(v18, v20, a1 != 0);

        swift_bridgeObjectRelease();
        goto LABEL_7;
      }

LABEL_7:
      if (a3 == v11)
      {
        swift_bridgeObjectRelease();
        unint64_t v29 = aBlock[0];
        a1 = v39;
        a3 = v40;
        a2 = v38;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease();
  unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_40:
  id result = (id)swift_bridgeObjectRelease();
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    id result = (id)swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_42;
    }
  }
  else if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_42:
    if ((v29 & 0xC000000000000001) != 0)
    {
      id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_45;
    }
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v30 = *(id *)(v29 + 32);
LABEL_45:
      id v31 = v30;
      swift_bridgeObjectRelease();
      sub_100054B78((uint64_t *)&unk_1005FA7F0);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_10046D060;
      *(void *)(v32 + 32) = v31;
      aBlock[0] = v32;
      specialized Array._endMutation()();
      uint64_t v33 = (void *)swift_allocObject();
      v33[2] = aBlock[0];
      void v33[3] = a1;
      v33[4] = a2;
      v33[5] = a3;
      aBlock[4] = sub_100360C8C;
      aBlock[5] = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003B424;
      void aBlock[3] = &unk_1005640F0;
      unint64_t v34 = _Block_copy(aBlock);
      id v35 = v31;
      swift_bridgeObjectRetain();
      id v36 = a1;
      swift_retain();
      swift_release();
      [v36 performBlock:v34];
      _Block_release(v34);

      return (id)swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_53:
    __break(1u);
    return result;
  }

  return (id)swift_bridgeObjectRelease();
}

uint64_t _s26PostMostRecentNotificationCMa()
{
  return self;
}

void sub_10035E764(uint64_t a1, uint64_t a2)
{
}

void sub_10035E788(uint64_t a1, uint64_t a2)
{
}

void sub_10035E7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = self;
  swift_retain();
  id v10 = [v9 sharedInstance];
  swift_release();
  id v11 = [v10 mainOrPrivateContext];

  id v12 = (void *)swift_allocObject();
  v12[2] = v11;
  void v12[3] = a1;
  v12[4] = a2;
  v15[4] = a4;
  v15[5] = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  _OWORD v15[2] = sub_10003B424;
  void v15[3] = a5;
  id v13 = _Block_copy(v15);
  id v14 = v11;
  swift_retain();
  swift_release();
  [v14 performBlock:v13];
  _Block_release(v13);
}

void sub_10035E900(void *a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CoreDataFetcher();
  id v6 = [self predicateForSubscribedPodcasts];
  unint64_t v7 = static CoreDataFetcher.fetchPodcasts(for:by:with:)();

  if (!v7) {
    return;
  }
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v21)
    {
      swift_bridgeObjectRetain();
      unint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if ((v8 & 0x8000000000000000) != 0) {
        goto LABEL_25;
      }
      if (v8)
      {
LABEL_4:
        unint64_t v9 = sub_100360440(v8);
        if ((v7 & 0xC000000000000001) != 0)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_8;
        }
        if ((v9 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v9 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v10 = *(id *)(v7 + 8 * v9 + 32);
LABEL_8:
          id v22 = v10;
          swift_bridgeObjectRelease();
          id v11 = [v22 episodes];
          if (v11
            && (id v12 = v11,
                sub_10004D29C(0, (unint64_t *)&qword_100603220),
                sub_1001BED60(),
                uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(),
                v12,
                id v15 = (void *)sub_100360320(v14, v13),
                swift_bridgeObjectRelease(),
                v15))
          {
            sub_100054B78((uint64_t *)&unk_1005FA7F0);
            uint64_t v16 = swift_allocObject();
            *(_OWORD *)(v16 + 16) = xmmword_10046D060;
            *(void *)(v16 + 32) = v15;
            aBlock[0] = v16;
            specialized Array._endMutation()();
            uint64_t v17 = (void *)swift_allocObject();
            void v17[2] = aBlock[0];
            v17[3] = a1;
            v17[4] = a2;
            v17[5] = a3;
            aBlock[4] = sub_100360C8C;
            aBlock[5] = v17;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10003B424;
            void aBlock[3] = &unk_100564050;
            uint64_t v18 = _Block_copy(aBlock);
            id v19 = v15;
            swift_bridgeObjectRetain();
            id v20 = a1;
            swift_retain();
            swift_release();
            [v20 performBlock:v18];
            _Block_release(v18);

            swift_bridgeObjectRelease();
          }
          else
          {
          }
          return;
        }
        __break(1u);
LABEL_25:
        __break(1u);
        return;
      }
      __break(1u);
    }
  }
  else
  {
    unint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_4;
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t _s22PostRandomNotificationCMa()
{
  return self;
}

void sub_10035EC50(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10035EC74(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MTNotificationTestActionEpisodePicker();
  NSString v5 = (void *)swift_allocObject();
  v5[4] = 0;
  v5[5] = &_swiftEmptySetSingleton;
  uint64_t v5[2] = 0;
  v5[3] = 0;
  id v6 = (void *)swift_allocObject();
  void v6[2] = a1;
  v6[3] = a2;
  v6[4] = v2;
  swift_retain();
  swift_retain();
  sub_100319868(0x1000000000000010, 0x80000001004DF5B0, 0, 1, (uint64_t)sub_100360228, (uint64_t)v6);
  swift_release();

  return swift_release();
}

uint64_t sub_10035ED5C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  id v36 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v10 - 8);
  __chkstk_darwin();
  id v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(type metadata accessor for DispatchTime() - 8);
  __chkstk_darwin();
  id v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin();
  uint64_t v18 = (char *)&v29 - v17;
  if (!*(void *)(a1 + 16)) {
    return a2(v16);
  }
  uint64_t v32 = v7;
  uint64_t v33 = a3;
  uint64_t v19 = v16;
  uint64_t v34 = v10;
  uint64_t v35 = v8;
  uint64_t result = UIApp;
  if (UIApp)
  {
    id v21 = [UIApp beginBackgroundTaskWithExpirationHandler:0];
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    uint64_t v29 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    id v22 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
    uint64_t v30 = v19;
    id v31 = v22;
    v22(v15, v19);
    unint64_t v23 = (void *)swift_allocObject();
    _OWORD v23[2] = v37;
    void v23[3] = a1;
    uint64_t v24 = v33;
    void v23[4] = a2;
    v23[5] = v24;
    void v23[6] = v21;
    aBlock[4] = sub_100360238;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003B424;
    void aBlock[3] = &unk_100563DD0;
    unsigned int v25 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10002FC48();
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_10002FBEC();
    uint64_t v26 = v36;
    uint64_t v27 = v32;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unint64_t v28 = (void *)v29;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v34);
    return v31(v18, v30);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10035F150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a3;
  uint64_t v29 = a5;
  uint64_t v31 = a4;
  uint64_t v30 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v30 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t result = UIApp;
  if (UIApp)
  {
    [UIApp suspend];
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    id v20 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
    uint64_t v26 = v12;
    uint64_t v27 = v20;
    v20(v15, v12);
    id v21 = (void *)swift_allocObject();
    void v21[2] = a1;
    void v21[3] = a2;
    uint64_t v22 = v31;
    v21[4] = v28;
    void v21[5] = v22;
    v21[6] = v29;
    aBlock[4] = sub_10036029C;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003B424;
    void aBlock[3] = &unk_100563E20;
    unint64_t v23 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10002FC48();
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_10002FBEC();
    uint64_t v24 = v30;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v33);
    return v27(v17, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10035F518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  uint64_t v10 = self;
  swift_retain();
  swift_retain();
  id v11 = [v10 sharedInstance];
  swift_release();
  id v12 = [v11 mainOrPrivateContext];

  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  void v13[3] = v12;
  void v13[4] = sub_100360304;
  v13[5] = v9;
  void v16[4] = sub_100360314;
  v16[5] = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  void v16[2] = sub_10003B424;
  void v16[3] = &unk_100563E98;
  uint64_t v14 = _Block_copy(v16);
  swift_bridgeObjectRetain();
  id v15 = v12;
  swift_retain();
  swift_release();
  [v15 performBlock:v14];
  _Block_release(v14);
  swift_release();
}

uint64_t sub_10035F6C0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a3;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v23 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin();
  uint64_t v16 = (char *)&v22 - v15;
  a1(v14);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v17 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v24;
  aBlock[4] = sub_10036093C;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100563FB0;
  id v20 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v23);
}

uint64_t sub_10035FA38(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  uint64_t v8 = sub_1003607B8(a1, v7);

  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v8;
  v9[3] = v7;
  v9[4] = a3;
  void v9[5] = a4;
  aBlock[4] = sub_1003608E0;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100563EE8;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v11 performBlock:v10];
  _Block_release(v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10035FB60()
{
  return swift_deallocClassInstance();
}

uint64_t _s37PickEpisodesThenPostNotificationsStepCMa()
{
  return self;
}

uint64_t sub_10035FB94(uint64_t a1, uint64_t a2)
{
  return sub_10035EC74(a1, a2);
}

void sub_10035FBB8(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    [a2 saveInCurrentBlock];
    sub_10004D29C(0, (unint64_t *)&unk_1005FBA00);
    id v12 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a3;
    *(void *)(v13 + 24) = a4;
    v15[4] = sub_100360924;
    v15[5] = v13;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    _OWORD v15[2] = sub_10003B424;
    void v15[3] = &unk_100563F38;
    uint64_t v14 = _Block_copy(v15);
    swift_retain();
    swift_release();
    [v12 processNotificationsForDebuggingWithCompletion:v14];
    _Block_release(v14);

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  if (!v8) {
    goto LABEL_10;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      id v11 = v10;
      ++v9;
      [v10 setIsNew:1];
      [v11 setSentNotification:0];
    }
    while (v8 != v9);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_10035FDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v12 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100563F60;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100360024(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v7 = sub_100041A98(a3, a3[3]);
    sub_100360A4C(*v7);
    uint64_t Strong = swift_release();
  }
  return a4(Strong);
}

void sub_1003600A8(void *a1, void *a2)
{
  sub_100041A98(a2, a2[3]);
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [a1 podcastForUuid:v3];

  if (v4) {
    [v4 setNotifications:1];
  }
  [a1 saveInCurrentBlock];
}

uint64_t sub_100360174()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10036017C()
{
  sub_1000536BC(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTNotificationTestActionEpisodePicker()
{
  return self;
}

uint64_t sub_1003601E8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100360228(uint64_t a1)
{
  return sub_10035ED5C(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100360238()
{
  return sub_1003602B4(sub_10035F150);
}

uint64_t sub_100360254()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10036029C()
{
  return sub_1003602B4((uint64_t (*)(void, void, void, void, void))sub_10035F518);
}

uint64_t sub_1003602B4(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1003602CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100360304()
{
  return sub_10035F6C0(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100360314()
{
  return sub_10035FA38(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_100360320(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    unint64_t v9 = *(void *)(a2 + 16);
    if (v9)
    {
      unint64_t v4 = sub_100360440(v9);
      uint64_t v5 = sub_100360730(a2);
      uint64_t v7 = v10;
      char v8 = v11 & 1;
      goto LABEL_8;
    }
    return 0;
  }
  if (!__CocoaSet.count.getter()) {
    return 0;
  }
  unint64_t result = __CocoaSet.count.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result)
  {
    unint64_t v4 = sub_100360440(result);
    uint64_t v5 = __CocoaSet.startIndex.getter();
    uint64_t v7 = v6;
    char v8 = 1;
LABEL_8:
    uint64_t v12 = sub_1003604CC(v5, v7, v8, v4, a2);
    uint64_t v14 = v13;
    char v16 = v15 & 1;
    sub_100360974(v5, v7, v8);
    sub_100392B34(v12, v14, v16, a2);
    uint64_t v18 = v17;
    sub_100360974(v12, v14, v16);
    return v18;
  }
  __break(1u);
  return result;
}

unint64_t sub_100360440(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    unint64_t result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003604CC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a4 < 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
    uint64_t v5 = a4;
    uint64_t v6 = result;
    int64_t v19 = result;
    uint64_t v20 = a2;
    char v21 = a3 & 1;
    if (a4)
    {
      unint64_t v8 = a5 & 0xC000000000000001;
      unint64_t result = sub_100360980(result, a2, a3 & 1);
      do
      {
        while (!v8)
        {
          uint64_t v9 = v19;
          uint64_t v10 = v20;
          char v11 = v21;
          int64_t v12 = sub_10036064C(v19, v20, v21, a5);
          uint64_t v14 = v13;
          char v16 = v15;
          unint64_t result = sub_100360974(v9, v10, v11);
          int64_t v19 = v12;
          uint64_t v20 = v14;
          char v21 = v16 & 1;
          if (!--v5) {
            return v19;
          }
        }
        if ((v21 & 1) == 0) {
          goto LABEL_14;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100054B78(&qword_100604CE8);
        uint64_t v17 = (uint64_t (*)(char *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        unint64_t result = v17(v18, 0);
        --v5;
      }
      while (v5);
      return v19;
    }
    else
    {
      sub_100360980(result, a2, a3 & 1);
    }
    return v6;
  }
  return result;
}

int64_t sub_10036064C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100360730(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_1003607B8(uint64_t a1, void *a2)
{
  unint64_t result = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      NSString v7 = String._bridgeToObjectiveC()();
      id v8 = [a2 episodeForUuid:v7];
      swift_bridgeObjectRelease();

      if (v8)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_1003608E0()
{
  sub_10035FBB8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003608EC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100360924()
{
  return sub_10035FDB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10036092C()
{
  return swift_deallocObject();
}

id sub_10036093C()
{
  id result = (id)UIApp;
  if (UIApp) {
    return [UIApp endBackgroundTask:*(void *)(v0 + 16)];
  }
  __break(1u);
  return result;
}

void sub_100360964()
{
  sub_10035E900(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100360974(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100360980(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_100360990()
{
  return sub_10035E1A4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003609A0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003609E8()
{
  sub_10035DDF0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003609FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100360A3C()
{
  return sub_10035D784(*(void **)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100360A4C(uint64_t a1)
{
  void v12[3] = type metadata accessor for ShowData();
  v12[4] = &off_1005615F8;
  v12[0] = a1;
  uint64_t v2 = self;
  swift_retain();
  id v3 = [v2 sharedInstance];
  id v4 = [v3 mainOrPrivateContext];

  sub_100056D54((uint64_t)v12, (uint64_t)v11);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  sub_100042FC4(v11, v5 + 24);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100360C70;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_10004A010;
  void v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100018818;
  void v10[3] = &unk_1005642A8;
  NSString v7 = _Block_copy(v10);
  id v8 = v4;
  swift_retain();
  swift_release();
  [v8 performBlockAndWait:v7];

  _Block_release(v7);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v8 & 1) == 0) {
    return sub_10004D2D8((uint64_t)v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_100360C30()
{
  sub_10004D2D8(v0 + 24);

  return swift_deallocObject();
}

void sub_100360C70()
{
  sub_1003600A8(*(void **)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_100360C7C()
{
  return swift_deallocObject();
}

uint64_t sub_100360D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F76A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100360D6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v13 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
  id v9 = a1;
  NSOrderedSet.makeIterator()();

  sub_10004D51C();
  dispatch thunk of IteratorProtocol.next()();
  while (v18)
  {
    sub_10004D384(&v17, v16);
    sub_10004D328((uint64_t)v16, (uint64_t)v15);
    sub_10004D29C(0, (unint64_t *)&qword_100603220);
    swift_dynamicCast();
    unint64_t v10 = v14;
    type metadata accessor for StationEpisode();
    swift_bridgeObjectRetain();
    if (sub_1002E2390(v10, a2, a3))
    {
      sub_10004D2D8((uint64_t)v16);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      sub_10004D2D8((uint64_t)v16);
    }
    dispatch thunk of IteratorProtocol.next()();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
  return v19;
}

uint64_t sub_100360FA0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100360FF4(a1, WitnessTable);
}

uint64_t sub_100360FF4(uint64_t a1, uint64_t a2)
{
  char v4 = static Podcasts.isBlueMoonEnabled()();
  char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  if (v4)
  {
    if ((v5 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
      dispatch thunk of PlaybackController.queueController.getter();
      swift_release();
      char v6 = dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter();
      swift_release();
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
  }
  else if ((v5 & 1) == 0)
  {
    id v7 = [self defaultInstance];
    id v8 = [v7 upNextController];

    LODWORD(v7) = [v8 hasItemsInQueue];
    if (!v7) {
      return 0;
    }
  }

  return sub_100361B10(a1, a2);
}

uint64_t sub_100361138(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_10036118C(a1, WitnessTable);
}

uint64_t sub_10036118C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PlaybackController.QueueCommand.Location();
  uint64_t v70 = *(void *)(v13 - 8);
  uint64_t v71 = v13;
  __chkstk_darwin();
  uint64_t v69 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin();
  char v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = a1;
  uint64_t v74 = a2;
  long long v17 = *(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 16);
  uint64_t v72 = v2;
  uint64_t result = v17(a1);
  if (!result) {
    return result;
  }
  uint64_t v19 = result + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  sub_1001AC690(v19, (uint64_t)v16);
  swift_release();
  uint64_t v20 = (void *)sub_100241558();
  uint64_t result = sub_1001AC758((uint64_t)v16);
  if (!v20) {
    return result;
  }
  unint64_t v21 = sub_100361E74((uint64_t)v20, v73, v74);
  unint64_t v22 = v21;
  if (!(v21 >> 62))
  {
    uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23)
    {
      unint64_t v62 = v20;
      unint64_t v63 = v12;
      uint64_t v64 = v8;
      uint64_t v65 = v10;
      uint64_t v66 = v9;
      uint64_t v67 = v6;
      uint64_t v68 = v5;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v36 <= 0) {
    goto LABEL_22;
  }
  unint64_t v62 = v20;
  unint64_t v63 = v12;
  uint64_t v64 = v8;
  uint64_t v65 = v10;
  uint64_t v66 = v9;
  uint64_t v67 = v6;
  uint64_t v68 = v5;
  swift_bridgeObjectRetain();
  uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
  if (v37)
  {
    uint64_t v23 = v37;
    if (v37 >= 1)
    {
LABEL_6:
      uint64_t v24 = 0;
      uint64_t v25 = (char *)_swiftEmptyArrayStorage;
      do
      {
        if ((v22 & 0xC000000000000001) != 0) {
          id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v26 = *(id *)(v22 + 8 * v24 + 32);
        }
        uint64_t v27 = v26;
        id v28 = [v26 uuid];
        if (v28)
        {
          uint64_t v29 = v28;
          uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v32 = v31;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v25 = sub_10004CEAC(0, *((void *)v25 + 2) + 1, 1, v25);
          }
          unint64_t v34 = *((void *)v25 + 2);
          unint64_t v33 = *((void *)v25 + 3);
          if (v34 >= v33 >> 1) {
            uint64_t v25 = sub_10004CEAC((char *)(v33 > 1), v34 + 1, 1, v25);
          }
          *((void *)v25 + 2) = v34 + 1;
          uint64_t v35 = &v25[16 * v34];
          *((void *)v35 + 4) = v30;
          *((void *)v35 + 5) = v32;
        }
        else
        {
        }
        ++v24;
      }
      while (v23 != v24);
      goto LABEL_23;
    }
    __break(1u);
LABEL_22:

    return swift_bridgeObjectRelease();
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
  char v38 = (*(uint64_t (**)(uint64_t))(v74 + 16))(v73);
  char v39 = static Podcasts.isBlueMoonEnabled()();
  if (v38)
  {
    uint64_t v41 = v64;
    uint64_t v40 = v65;
    uint64_t v42 = v63;
    uint64_t v47 = v62;
    if (v39)
    {
      (*(void (**)(uint64_t))(v74 + 24))(v73);
      dispatch thunk of PlaybackController.queueController.getter();
      swift_release();
      uint64_t v49 = v69;
      uint64_t v48 = v70;
      uint64_t v50 = v71;
      (*(void (**)(char *, void, uint64_t))(v70 + 104))(v69, enum case for PlaybackController.QueueCommand.Location.queueHead(_:), v71);
      dispatch thunk of PlaybackController.QueueController.addToQueue(uuids:location:)();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    }
    else
    {
      id v57 = [self defaultInstance];
      id v58 = [v57 upNextController];

      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v58 addEpisodeUuidsToPlayNext:isa];
    }
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    unint64_t v54 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v79 = sub_100362458;
    uint64_t v80 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v76 = 1107296256;
    char v77 = sub_10003B424;
    char v78 = &unk_1005642D0;
    id v60 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10002FC48();
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_10002FBEC();
    uint64_t v56 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();

    _Block_release(v60);
  }
  else
  {
    uint64_t v41 = v64;
    uint64_t v40 = v65;
    uint64_t v42 = v63;
    uint64_t v43 = v62;
    if (v39)
    {
      (*(void (**)(uint64_t))(v74 + 24))(v73);
      dispatch thunk of PlaybackController.queueController.getter();
      swift_release();
      unint64_t v45 = v69;
      uint64_t v44 = v70;
      uint64_t v46 = v71;
      (*(void (**)(char *, void, uint64_t))(v70 + 104))(v69, enum case for PlaybackController.QueueCommand.Location.queueTail(_:), v71);
      dispatch thunk of PlaybackController.QueueController.addToQueue(uuids:location:)();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    }
    else
    {
      id v51 = [self defaultInstance];
      id v52 = [v51 upNextController];

      Class v53 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v52 addEpisodeUuidsToUpNext:v53];
    }
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    unint64_t v54 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v79 = sub_10036244C;
    uint64_t v80 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v76 = 1107296256;
    char v77 = sub_10003B424;
    char v78 = &unk_1005642F8;
    id v55 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10002FC48();
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_10002FBEC();
    uint64_t v56 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v55);
  }
  (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v42, v66);
}

uint64_t sub_100361A68(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100360FF4(a1, WitnessTable);
}

uint64_t sub_100361ABC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_10036118C(a1, WitnessTable);
}

uint64_t sub_100361B10(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 16))(a1);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  sub_1001AC690(v7, (uint64_t)v5);
  swift_release();
  id v8 = (void *)sub_100241558();
  sub_1001AC758((uint64_t)v5);
  if (!v8) {
    return 0;
  }
  id v9 = [v8 uuid];
  if (!v9)
  {

    return 0;
  }

  unsigned __int8 v20 = 0;
  id v10 = [self sharedInstance];
  id v11 = [v10 mainOrPrivateContext];

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &v20;
  *(void *)(v12 + 24) = v8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100362BF0;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100018840;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  void aBlock[3] = &unk_100564460;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v8;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v14];
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0)
  {
    if (static Podcasts.isBlueMoonEnabled()())
    {

      unint64_t v17 = v20;
      swift_release();
    }
    else
    {
      if (v20 == 1)
      {
        id v18 = [self defaultInstance];
        unint64_t v17 = (unint64_t)[v18 isPlayerTargetLocal];
        swift_release();
      }
      else
      {
        swift_release();
        unint64_t v17 = 0;
      }
    }
    return v17;
  }
  __break(1u);
  return result;
}

void sub_100361E20(BOOL *a1, id a2)
{
  id v3 = [a2 smartPlayEpisode];
  id v4 = v3;
  if (v3) {

  }
  *a1 = v4 != 0;
}

uint64_t sub_100361E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v57 = (void *)a1;
  uint64_t v53 = type metadata accessor for EpisodeListSettings();
  uint64_t v52 = *(void *)(v53 - 8);
  uint64_t v5 = *(void *)(v52 + 64);
  __chkstk_darwin();
  id v51 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v55 = (char *)&v45 - v6;
  id v7 = [self sharedInstance];
  id v56 = [v7 mainOrPrivateContext];

  id v59 = _swiftEmptyArrayStorage;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  if (!v8) {
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType);
  uint64_t v10 = *(void *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 8);
  uint64_t v11 = *(void *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 56);
  int v12 = *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 64);
  unsigned __int8 v44 = *(unsigned char *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 64);
  uint64_t v13 = *(void *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 16);
  uint64_t v14 = *(void **)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 24);
  uint64_t v15 = *(void *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 32);
  uint64_t v16 = *(void *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 40);
  uint64_t v54 = *(void *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 48);
  uint64_t v17 = v11;
  sub_1002DDB24(v9, v10, v13, (char)v14, v15, v16, v54, v11, v44);
  swift_release();
  if (v12 == 255)
  {
LABEL_5:
    uint64_t v36 = (void *)swift_allocObject();
    uint64_t v37 = v56;
    char v38 = v57;
    long long v36[2] = v57;
    v36[3] = &v59;
    v36[4] = v37;
    uint64_t v39 = swift_allocObject();
    uint64_t v35 = sub_100362A24;
    *(void *)(v39 + 16) = sub_100362A24;
    *(void *)(v39 + 24) = v36;
    uint64_t v64 = sub_10004A010;
    uint64_t v65 = v39;
    id v60 = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    unint64_t v62 = sub_100018818;
    unint64_t v63 = &unk_100564370;
    uint64_t v40 = _Block_copy(&v60);
    id v41 = v37;
    id v42 = v38;
    swift_retain();
    swift_release();
    [v41 performBlockAndWait:v40];

    _Block_release(v40);
    LOBYTE(v40) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((v40 & 1) == 0)
    {
      uint64_t v31 = 0;
      goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    id v60 = (void **)v9;
    uint64_t v61 = v10;
    unint64_t v62 = (uint64_t (*)(uint64_t))v13;
    unint64_t v63 = v14;
    uint64_t v50 = v13;
    char v18 = (char)v14;
    uint64_t v49 = v14;
    uint64_t v19 = v15;
    uint64_t v64 = (uint64_t (*)())v15;
    uint64_t v65 = v16;
    uint64_t v48 = v16;
    uint64_t v66 = v54;
    uint64_t v67 = v17;
    uint64_t v20 = v17;
    uint64_t v47 = v17;
    unsigned __int8 v21 = v12;
    char v68 = v12;
    sub_1001A5920(v9, v10, v13, v18, v15, v16, v54, v20, v12);
    MTPodcast.episodeSortType.getter();
    EpisodeListType.pubDateLimit.getter();
    id v57 = (void *)v9;
    EpisodeListType.hidePlayedEpisodes.getter();
    unint64_t v22 = v55;
    EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();
    uint64_t v23 = v52;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    uint64_t v25 = v51;
    uint64_t v46 = v10;
    uint64_t v26 = v53;
    v24(v51, v22, v53);
    unint64_t v27 = (*(unsigned __int8 *)(v23 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = v56;
    *(void *)(v28 + 16) = v56;
    (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v28 + v27, v25, v26);
    *(void *)(v28 + ((v5 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = &v59;
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = sub_100362B18;
    *(void *)(v30 + 16) = sub_100362B18;
    *(void *)(v30 + 24) = v28;
    aBlock[4] = sub_100018840;
    aBlock[5] = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018818;
    void aBlock[3] = &unk_1005643E8;
    uint64_t v32 = _Block_copy(aBlock);
    id v33 = v29;
    swift_retain();
    swift_release();
    [v33 performBlockAndWait:v32];
    _Block_release(v32);

    sub_1001D624C((uint64_t)v57, v46, v50, (char)v49, v19, v48, v54, v47, v21);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v55, v26);
    LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((v33 & 1) == 0)
    {
      uint64_t v35 = 0;
LABEL_7:
      uint64_t v43 = v59;
      sub_1000536BC((uint64_t)v31);
      sub_1000536BC((uint64_t)v35);
      return (uint64_t)v43;
    }
  }
  __break(1u);
  return result;
}

void sub_10036244C()
{
}

void sub_100362458()
{
}

void sub_100362464(unsigned int *a1)
{
  type metadata accessor for HUDViewController.HUDType();
  __chkstk_darwin();
  (*(void (**)(char *, void))(v3 + 104))((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *a1);
  id v4 = objc_allocWithZone((Class)type metadata accessor for HUDViewController());
  uint64_t v5 = (void *)HUDViewController.init(type:)();
  dispatch thunk of HUDViewController.present()();
}

void sub_100362540(void *a1, uint64_t a2, void *a3)
{
  id v5 = kMTEpisodeEntityName;
  uint64_t v6 = (void *)EpisodeListSettings.predicate.getter();
  EpisodeListSettings.sort.getter();
  unint64_t v7 = EpisodeSortType.descriptors.getter();
  sub_1001B7D58(v7);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [a1 objectsInEntity:v5 predicate:v6 sortDescriptors:isa];

  if (v9)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F7130);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v11 = sub_100059548(v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
      *a3 = v11;
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100362684(void *a1, void *a2, void *a3)
{
  id v6 = [a1 smartPlayEpisode];
  if (v6)
  {
    id v25 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v7 = [a1 uuid];
    if (v7)
    {
      id v8 = v7;
      if (![a1 isSerialShowTypeInFeed]) {
        goto LABEL_10;
      }
      id v9 = self;
      id v10 = [v9 predicateForSeasonNumber:[v25 seasonNumber]];
      id v11 = [v9 predicateForEpisodesWithEpisodeNumbersGreaterThan:[v25 episodeNumber]];
      id v12 = [v10 AND:v11];

      id v13 = [v9 predicateForAllEpisodesOnPodcastUuid:v8];
      id v14 = [v12 AND:v13];

      id v15 = [v9 predicateForEntitledEpisodes];
      id v16 = [v14 AND:v15];

      id v17 = kMTEpisodeEntityName;
      id v8 = v16;
      id v18 = [v9 sortDescriptorsForEpisodeNumberAscending:1];
      sub_10004D29C(0, (unint64_t *)&qword_1005F8120);
      unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1001B7D58(v19);
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v21 = [a3 objectsInEntity:v17 predicate:v8 sortDescriptors:isa];

      if (!v21) {
        goto LABEL_10;
      }
      sub_10004D29C(0, (unint64_t *)&qword_1005F7130);
      unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v23 = sub_100059548(v22);
      swift_bridgeObjectRelease();
      if (v23)
      {
        sub_1001B222C((unint64_t)v23);
        uint64_t v24 = v8;
      }
      else
      {
LABEL_10:
        uint64_t v24 = v25;
        id v25 = v8;
      }
    }
  }
}

uint64_t sub_1003629E4()
{
  return swift_deallocObject();
}

void sub_100362A24()
{
  sub_100362684(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100362A30()
{
  return swift_deallocObject();
}

uint64_t sub_100362A40()
{
  uint64_t v1 = type metadata accessor for EpisodeListSettings();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100362B18()
{
  uint64_t v1 = *(void *)(type metadata accessor for EpisodeListSettings() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void **)(v0 + 16);
  id v4 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100362540(v3, v0 + v2, v4);
}

uint64_t sub_100362BA8()
{
  return swift_deallocObject();
}

uint64_t sub_100362BB8()
{
  return swift_deallocObject();
}

void sub_100362BF0()
{
  sub_100361E20(*(BOOL **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_100362BF8()
{
  return swift_deallocObject();
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSManagedObjectContext.fetchHasLibraryEpisodesInPodcast(withUUID:)(Swift::String withUUID)
{
  unint64_t v2 = self;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 predicateForLibraryEpisodesOnPodcastUuid:v3];

  unsigned __int8 v5 = [v1 hasAnyObjectsInEntity:kMTEpisodeEntityName satisfyingPredicate:v4];
  return v5;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSManagedObjectContext.fetchHasPlayedEpisodesInPodcast(withUUID:)(Swift::String withUUID)
{
  unint64_t v2 = self;
  id v3 = [v2 predicateForHasAnyVisualPlayState];
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 predicateForAllEpisodesOnPodcastUuid:v4];

  id v6 = [v3 AND:v5];
  unsigned __int8 v7 = [v1 hasAnyObjectsInEntity:kMTEpisodeEntityName satisfyingPredicate:v6];

  return v7;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSManagedObjectContext.fetchHasEpisodes(for:)(NSPredicate *a1)
{
  return [v1 hasAnyObjectsInEntity:kMTEpisodeEntityName satisfyingPredicate:a1];
}

uint64_t sub_100362DFC(uint64_t a1)
{
  return sub_100362E64(a1, (uint64_t (*)(void))&type metadata accessor for OSSignposter, qword_100604D98, (uint64_t (*)(void))&static OSSignposter.database.getter);
}

uint64_t sub_100362E30(uint64_t a1)
{
  return sub_100362E64(a1, (uint64_t (*)(void))&type metadata accessor for Logger, qword_100604DB0, (uint64_t (*)(void))&static Logger.database.getter);
}

uint64_t sub_100362E64(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a2(0);
  sub_10018A30C(v6, a3);
  sub_10018A370(v6, (uint64_t)a3);
  return a4();
}

uint64_t static DataMigrator.requiresMigration.getter()
{
  if (qword_1005F5B00 != -1) {
    swift_once();
  }
  uint64_t v0 = *((void *)off_100604DC8 + 2);
  if (v0)
  {
    uint64_t v1 = (void *)((char *)off_100604DC8 + 32);
    swift_bridgeObjectRetain();
    uint64_t v2 = v0 - 1;
    do
    {
      uint64_t v3 = v2;
      uint64_t v4 = v1[3];
      uint64_t v5 = v1[4];
      sub_100041A98(v1, v4);
      LOBYTE(v0) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
      if (v0) {
        break;
      }
      uint64_t v2 = v3 - 1;
      v1 += 5;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return v0 & 1;
}

id DataMigrator.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

uint64_t _s8Podcasts12DataMigratorC7migrateyyFZ_0()
{
  uint64_t v119 = type metadata accessor for OSSignpostError();
  uint64_t v0 = *(void *)(v119 - 8);
  __chkstk_darwin();
  objc_super v2 = (char *)&v112 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v120 = (char *)&v112 - v3;
  uint64_t v132 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v132 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v128 = (char *)&v112 - v7;
  __chkstk_darwin();
  id v9 = (char *)&v112 - v8;
  __chkstk_darwin();
  id v122 = (char *)&v112 - v10;
  if (qword_1005F5B00 != -1) {
LABEL_71:
  }
    swift_once();
  uint64_t result = (uint64_t)off_100604DC8;
  uint64_t v12 = *((void *)off_100604DC8 + 2);
  if (!v12) {
    return result;
  }
  uint64_t v112 = v2;
  uint64_t v113 = v6;
  objc_super v2 = (char *)off_100604DC8 + 32;
  uint64_t v121 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v127 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v117 = (uint64_t (**)(char *, uint64_t))(v0 + 88);
  int v116 = enum case for OSSignpostError.doubleEnd(_:);
  uint64_t v115 = (void (**)(char *, uint64_t))(v0 + 8);
  id v114 = off_100604DC8;
  swift_bridgeObjectRetain();
  uint64_t v133 = 0;
  id v13 = &qword_1005F5000;
  *(void *)&long long v14 = 136315138;
  long long v126 = v14;
  id v118 = (char *)&type metadata for Any + 8;
  objc_super v131 = v9;
  while (1)
  {
    sub_100056D54((uint64_t)v2, (uint64_t)&v139);
    uint64_t v15 = v140;
    uint64_t v16 = v141;
    sub_100041A98(&v139, v140);
    char v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    uint64_t v18 = v13[351];
    if ((v17 & 1) == 0)
    {
      if (v18 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_10018A370(v29, (uint64_t)qword_100604DB0);
      sub_100056D54((uint64_t)&v139, (uint64_t)v136);
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v135 = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = v126;
        uint64_t v33 = v137;
        uint64_t v34 = v138;
        sub_100041A98(v136, v137);
        uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        uint64_t v36 = v34;
        id v9 = v131;
        v35(v33, v36);
        uint64_t v37 = StaticString.description.getter();
        *(void *)(v32 + 4) = sub_10004B974(v37, v38, &v135);
        swift_bridgeObjectRelease();
        sub_10004D2D8((uint64_t)v136);
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%s] Migration not required, skipping.", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10004D2D8((uint64_t)v136);
      }

      goto LABEL_6;
    }
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    uint64_t v20 = sub_10018A370(v19, (uint64_t)qword_100604DB0);
    sub_100056D54((uint64_t)&v139, (uint64_t)v136);
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.info.getter();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v130 = v20;
    if (v23)
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v135 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = v126;
      uint64_t v26 = v137;
      uint64_t v25 = v138;
      sub_100041A98(v136, v137);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v25);
      uint64_t v27 = StaticString.description.getter();
      *(void *)(v24 + 4) = sub_10004B974(v27, v28, &v135);
      swift_bridgeObjectRelease();
      sub_10004D2D8((uint64_t)v136);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%s] Preparing to perform migration step", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10004D2D8((uint64_t)v136);
    }

    if (qword_1005F5AF0 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for OSSignposter();
    sub_10018A370(v39, (uint64_t)qword_100604D98);
    uint64_t v40 = v140;
    uint64_t v41 = v141;
    sub_100041A98(&v139, v140);
    id v42 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v40, v41);
    uint64_t v0 = v43;
    uint64_t v6 = v122;
    static OSSignpostID.exclusive.getter();
    unsigned __int8 v44 = OSSignposter.logHandle.getter();
    os_signpost_type_t v45 = static os_signpost_type_t.begin.getter();
    uint64_t v4 = (uint64_t)v44;
    uint64_t result = OS_os_log.signpostsEnabled.getter();
    uint64_t v129 = v12;
    if (result)
    {
      if (v0)
      {
        if ((unint64_t)v42 >> 32) {
          goto LABEL_66;
        }
        if (v42 >> 11 == 27)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
          return result;
        }
        if (v42 > 0x10FFFF) {
          goto LABEL_67;
        }
        uint64_t v47 = v9;
        uint64_t v52 = v133;
        id v42 = sub_1001B26E8();
        uint64_t v133 = v52;
        uint64_t v46 = v132;
      }
      else
      {
        uint64_t v46 = v132;
        if (!v42)
        {
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
          goto LABEL_71;
        }
        uint64_t v47 = v9;
      }
      uint64_t v48 = *v121;
      unint64_t v53 = (unint64_t)v121 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      (*v121)(v47, v6, v46);
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      os_signpost_id_t v55 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v44, v45, v55, v42, "", v54, 2u);
      uint64_t v50 = v132;
      swift_slowDealloc();

      id v51 = v127;
      (*v127)(v47, v50);
      unint64_t v49 = v53;
      id v9 = v47;
    }
    else
    {

      uint64_t v48 = *v121;
      unint64_t v49 = (unint64_t)v121 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v50 = v132;
      id v51 = v127;
    }
    uint64_t v125 = v48;
    unint64_t v124 = v49;
    v48(v9, v6, v50);
    type metadata accessor for OSSignpostIntervalState();
    swift_allocObject();
    uint64_t v56 = OSSignpostIntervalState.init(id:isOpen:)();
    id v9 = (char *)*v51;
    (*v51)(v6, v50);
    uint64_t v57 = v140;
    uint64_t v58 = v141;
    sub_100041A98(&v139, v140);
    uint64_t v59 = v133;
    (*(void (**)(uint64_t, uint64_t))(v58 + 24))(v57, v58);
    uint64_t v133 = v59;
    if (v59) {
      break;
    }
    uint64_t v60 = v140;
    uint64_t v61 = v141;
    sub_100041A98(&v139, v140);
    unint64_t v62 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v60, v61);
    uint64_t v0 = v63;
    uint64_t v64 = OSSignposter.logHandle.getter();
    uint64_t v6 = v128;
    OSSignpostIntervalState.signpostID.getter();
    int v123 = static os_signpost_type_t.end.getter();
    uint64_t result = OS_os_log.signpostsEnabled.getter();
    if (result)
    {
      if (v0)
      {
        uint64_t v4 = v119;
        if ((unint64_t)v62 >> 32) {
          goto LABEL_69;
        }
        if (v62 >> 11 == 27) {
          goto LABEL_73;
        }
        if (v62 > 0x10FFFF) {
          goto LABEL_70;
        }
        uint64_t v67 = v133;
        unint64_t v62 = sub_1001B26E8();
        uint64_t v133 = v67;
      }
      else
      {
        uint64_t v4 = v119;
        if (!v62) {
          goto LABEL_68;
        }
      }
      swift_retain();
      char v68 = v120;
      checkForErrorAndConsumeState(state:)();
      swift_release();
      int v69 = (*v117)(v68, v4);
      uint64_t v70 = "[Error] Interval already ended";
      if (v69 != v116)
      {
        (*v115)(v120, v4);
        uint64_t v70 = "SUCCESS";
      }
      uint64_t v71 = v131;
      uint64_t v72 = v132;
      v125(v131, v6, v132);
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v73 = 0;
      os_signpost_id_t v74 = OSSignpostID.rawValue.getter();
      uint64_t v66 = v72;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v64, (os_signpost_type_t)v123, v74, v62, v70, v73, 2u);
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v9)(v128, v72);
      uint64_t v65 = v71;
    }
    else
    {

      uint64_t v65 = v6;
      uint64_t v66 = v132;
    }
    ((void (*)(char *, uint64_t))v9)(v65, v66);
    sub_100056D54((uint64_t)&v139, (uint64_t)v136);
    uint64_t v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v135 = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = v126;
      uint64_t v78 = v137;
      uint64_t v79 = v138;
      sub_100041A98(v136, v137);
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v79);
      uint64_t v80 = StaticString.description.getter();
      *(void *)(v77 + 4) = sub_10004B974(v80, v81, &v135);
      swift_bridgeObjectRelease();
      sub_10004D2D8((uint64_t)v136);
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "[%s] Finished running migration step", (uint8_t *)v77, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {
      sub_10004D2D8((uint64_t)v136);

      swift_release();
    }
    id v9 = v131;
    id v13 = &qword_1005F5000;
    uint64_t v12 = v129;
LABEL_6:
    sub_10004D2D8((uint64_t)&v139);
    v2 += 40;
    if (!--v12) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v82 = v140;
  uint64_t v83 = v141;
  sub_100041A98(&v139, v140);
  uint64_t v84 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v82, v83);
  char v86 = v85;
  uint64_t v87 = OSSignposter.logHandle.getter();
  uint64_t v88 = v113;
  uint64_t v129 = v56;
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v89 = static os_signpost_type_t.end.getter();
  uint64_t result = OS_os_log.signpostsEnabled.getter();
  if (result)
  {
    if (v86)
    {
      uint64_t v90 = v119;
      if ((unint64_t)v84 >> 32) {
        goto LABEL_75;
      }
      if (v84 >> 11 == 27) {
        goto LABEL_77;
      }
      if (v84 > 0x10FFFF) {
        goto LABEL_76;
      }
      uint64_t v84 = sub_1001B26E8();
    }
    else
    {
      uint64_t v90 = v119;
      if (!v84) {
        goto LABEL_74;
      }
    }
    swift_retain();
    uint64_t v94 = v112;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    int v95 = (*v117)(v94, v90);
    if (v95 == v116)
    {
      uint64_t v96 = "[Error] Interval already ended";
    }
    else
    {
      (*v115)(v94, v90);
      uint64_t v96 = "ERROR";
    }
    uint64_t v91 = v131;
    uint64_t v97 = v132;
    int64_t v98 = v113;
    v125(v131, v113, v132);
    long long v99 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v99 = 0;
    os_signpost_id_t v100 = OSSignpostID.rawValue.getter();
    uint64_t v101 = v84;
    uint64_t v92 = v97;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v87, v89, v100, v101, v96, v99, 2u);
    swift_slowDealloc();

    ((void (*)(char *, uint64_t))v9)(v98, v97);
    uint64_t v93 = v133;
  }
  else
  {

    uint64_t v91 = v88;
    uint64_t v92 = v132;
    uint64_t v93 = v133;
  }
  ((void (*)(char *, uint64_t))v9)(v91, v92);
  sub_100056D54((uint64_t)&v139, (uint64_t)v136);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v102 = Logger.logObject.getter();
  os_log_type_t v103 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v102, v103))
  {
    uint64_t v104 = swift_slowAlloc();
    uint64_t v135 = swift_slowAlloc();
    *(_DWORD *)uint64_t v104 = 136315394;
    uint64_t v105 = v93;
    uint64_t v106 = v137;
    uint64_t v107 = v138;
    sub_100041A98(v136, v137);
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v106, v107);
    uint64_t v108 = StaticString.description.getter();
    uint64_t v134 = sub_10004B974(v108, v109, &v135);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10004D2D8((uint64_t)v136);
    *(_WORD *)(v104 + 12) = 2080;
    uint64_t v134 = v105;
    swift_errorRetain();
    sub_100054B78(&qword_100603F70);
    uint64_t v110 = String.init<A>(describing:)();
    uint64_t v134 = sub_10004B974(v110, v111, &v135);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v102, v103, "[%s] Failed migration. Ending migrator with error: %s", (uint8_t *)v104, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    sub_10004D2D8((uint64_t)v136);
    swift_errorRelease();
    swift_errorRelease();
  }
  return sub_10004D2D8((uint64_t)&v139);
}

uint64_t type metadata accessor for DataMigrator()
{
  return self;
}

uint64_t (*sub_100364004())()
{
  uint64_t v1 = v0[21];
  if (v1)
  {
    objc_super v2 = (uint64_t (*)())v0[21];
  }
  else
  {
    uint64_t v3 = v0[20];
    objc_super v2 = sub_1001C0E14;
    v0[21] = sub_1001C0E14;
    v0[22] = v3;
    swift_retain_n();
    sub_1000536BC(0);
  }
  sub_10004ACDC(v1);
  return v2;
}

uint64_t sub_10036408C(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C0DD4();
  static OS_os_log.carPlay.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  unint64_t v8 = a1 >> 62;
  if (os_log_type_enabled(v6, v7))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v9 = 134217984;
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "CarPlayShowcaseProvider: section total items count is %ld.", v9, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10046D060;
  swift_bridgeObjectRetain();
  if (v8)
  {
    sub_100054B78(&qword_1005F7E20);
    uint64_t v16 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    a1 = v16;
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  id v12 = objc_allocWithZone((Class)CPListSection);
  sub_1001C04A0(a1);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithItems:isa];

  *(void *)(v11 + 32) = v14;
  uint64_t v18 = v11;
  specialized Array._endMutation()();
  CurrentValueSubject.send(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100364380()
{
  sub_10004D2D8(v0 + 72);
  sub_10004D2D8(v0 + 112);
  swift_release();
  swift_release();
  sub_1000536BC(*(void *)(v0 + 168));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CarPlayShowcaseProvider()
{
  return self;
}

uint64_t sub_1003643FC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    sub_100054B78(&qword_1005F7E28);
    sub_100044200((unint64_t *)&unk_1005F7E30, &qword_1005F7E28);
    char v9 = Collection.isNotEmpty.getter();
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      id v7 = [v5 items];
      sub_100054B78(&qword_1005F7E20);
      unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1001B187C(v8);
    }
    while (v2 != v4);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003645A0()
{
  uint64_t v1 = sub_100054B78(&qword_100604EC8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = *(void *)(*(void *)v0 + 152);
  swift_retain();
  sub_100054B78((uint64_t *)&unk_100604ED0);
  sub_100044200(&qword_1006035B0, (uint64_t *)&unk_100604ED0);
  Publisher.filter(_:)();
  swift_release();
  sub_100044200((unint64_t *)&unk_100604EE0, &qword_100604EC8);
  uint64_t v5 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

uint64_t sub_100364730()
{
  return Publisher.eraseToAnyPublisher()();
}

void *sub_1003647B0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)v3;
  *(void *)&v15[0] = _swiftEmptyArrayStorage;
  sub_100054B78((uint64_t *)&unk_100604ED0);
  swift_allocObject();
  *(void *)(v3 + 152) = CurrentValueSubject.init(_:)();
  sub_100054B78((uint64_t *)&unk_1005F8AE0);
  swift_allocObject();
  uint64_t v7 = PassthroughSubject.init()();
  *(void *)(v3 + 168) = 0;
  *(void *)(v3 + 176) = 0;
  *(void *)(v3 + 160) = v7;
  long long v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v3 + 32) = v8;
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a3 + 32);
  *(void *)(v3 + 64) = *(void *)(a3 + 48);
  sub_100054B78((uint64_t *)&unk_1005F8B10);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v15, v3 + 72);
  sub_100054B78((uint64_t *)&unk_1005FBBF0);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v15, v3 + 112);
  long long v9 = *(_OWORD *)(v3 + 32);
  v15[0] = *(_OWORD *)(v3 + 16);
  v15[1] = v9;
  _OWORD v15[2] = *(_OWORD *)(v3 + 48);
  uint64_t v16 = *(void *)(v3 + 64);
  uint64_t v10 = sub_100364004();
  uint64_t v12 = v11;
  uint64_t v13 = v4[19];
  swift_retain();
  sub_10039CCB4(v4 + 9, (uint64_t)v15, v4 + 14, (uint64_t)v10, v12, (uint64_t)sub_100364940, v13, a2);
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_100364940(unint64_t a1)
{
  return sub_10036408C(a1);
}

uint64_t sub_100364948()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!v3
    || (v13[0] = v3,
        type metadata accessor for ContextActionsConfiguration(),
        swift_retain(),
        sub_100054B78(&qword_100601AF8),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    return sub_100054B1C((uint64_t)&v10, &qword_100601AF0);
  }
  if (!*((void *)&v11 + 1)) {
    return sub_100054B1C((uint64_t)&v10, &qword_100601AF0);
  }
  sub_100042FC4(&v10, (uint64_t)v13);
  uint64_t v4 = v14;
  sub_100041A98(v13, v14);
  uint64_t v5 = sub_100210150(v4);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID;
    *(void *)uint64_t v7 = v5;
    *(unsigned char *)(v7 + 8) = 0;
    InterestStateController.stateMachine(for:)();
    char v8 = InterestStateMachine.currentState.getter();
    swift_release();
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestState) = v8;
  }
  return sub_10004D2D8((uint64_t)v13);
}

uint64_t sub_100364A88()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID + 8) & 1) != 0
    || *(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestState) == 4)
  {
    char v1 = 0;
  }
  else
  {
    uint64_t v2 = InterestState.rawValue.getter();
    uint64_t v4 = v3;
    if (v2 == InterestState.rawValue.getter() && v4 == v5) {
      char v1 = 1;
    }
    else {
      char v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

uint64_t sub_100364B3C()
{
  uint64_t v1 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsFieldInclusionRequest();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  char v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  long long v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for MetricsData();
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for UndoSuggestLessInterestAction();
  uint64_t v37 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  uint64_t result = swift_beginAccess();
  if (*v18)
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID + 8) & 1) == 0)
    {
      uint64_t v20 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID);
      uint64_t v34 = v20;
      sub_100054B78((uint64_t *)&unk_1006027F0);
      unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v22 = swift_allocObject();
      uint64_t v33 = v22;
      *(_OWORD *)(v22 + 16) = xmmword_10046D010;
      unint64_t v32 = v22 + v21;
      v41[0] = v20;
      sub_1001A5874();
      swift_retain();
      void v29[3] = BinaryInteger.description.getter();
      uint64_t v23 = static MetricsTargetType.button.getter();
      os_log_type_t v31 = v3;
      long long v29[2] = v23;
      v29[1] = static MetricsActionType.undoSuggestLess.getter();
      uint64_t v30 = v6;
      static MetricsActionContext.contextual.getter();
      void v29[4] = v15;
      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
      static MetricsDataConfiguration.default.getter();
      static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
      sub_1002DFF70((uint64_t)v41, (uint64_t)v44);
      sub_100053884((uint64_t)v44);
      uint64_t v43 = v41[2];
      sub_1000537F4((uint64_t)&v43);
      uint64_t v42 = v41[3];
      sub_1000537F4((uint64_t)&v42);
      sub_1000536BC(v41[4]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
      uint64_t v25 = v30;
      static MetricsFieldInclusionRequest.impressionsSnapshot.getter();
      MetricsData.removingIncludedField(_:)();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v39);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v36);
      ScalarDictionary.init()();
      ActionMetrics.init(data:custom:)();
      UndoSuggestLessInterestAction.init(adamID:actionMetrics:)();
      uint64_t v26 = v35;
      void v40[3] = v35;
      v40[4] = sub_100365668(&qword_100604FF8, (void (*)(uint64_t))&type metadata accessor for UndoSuggestLessInterestAction);
      uint64_t v27 = sub_10004A244(v40);
      uint64_t v28 = v37;
      (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 16))(v27, v17, v26);
      ContextActionsConfiguration.perform(_:)();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v26);
      return sub_10004D2D8((uint64_t)v40);
    }
  }
  return result;
}

uint64_t sub_100365104()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_contextActionType, &qword_1005F9A58);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1003651F4()
{
  return type metadata accessor for UndoSuggestLessContextAction();
}

uint64_t type metadata accessor for UndoSuggestLessContextAction()
{
  uint64_t result = qword_100604F28;
  if (!qword_100604F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100365248()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100365354()
{
  id v0 = [self mainBundle];
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v5._object = (void *)0x80000001004D6930;
  v1._object = (void *)0x80000001004D6910;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0xD000000000000011;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100365408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_10036547C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_contextActionType, a1);
}

uint64_t sub_10036549C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  return sub_100364948();
}

uint64_t sub_100365508()
{
  return swift_retain();
}

uint64_t sub_100365554(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1003655A8())()
{
  return j__swift_endAccess;
}

uint64_t sub_100365610(uint64_t a1)
{
  uint64_t result = sub_100365668(&qword_100604FF0, (void (*)(uint64_t))type metadata accessor for UndoSuggestLessContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100365668(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1003656B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_allocObject();
  long long v11[2] = a1;
  v11[3] = a2;
  v11[4] = a4;
  v11[5] = a5;
  if ((a3 & 0x100000000) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v12 = String._bridgeToObjectiveC()();
    uint64_t v18 = sub_100365E14;
    uint64_t v19 = v11;
    uint64_t v14 = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    uint64_t v16 = sub_100365BBC;
    uint64_t v17 = &unk_100564580;
    uint64_t v13 = _Block_copy(&v14);
    swift_retain();
    swift_release();
    [v5 asyncImageURLForKey:v12 completionHandler:v13];
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v12 = String._bridgeToObjectiveC()();
    uint64_t v18 = sub_100365E14;
    uint64_t v19 = v11;
    uint64_t v14 = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    uint64_t v16 = sub_100365BBC;
    uint64_t v17 = &unk_1005645A8;
    uint64_t v13 = _Block_copy(&v14);
    swift_retain();
    swift_release();
    [v5 asyncImageURLForKey:v12 squareDimension:0 cacheKeyModifier:v13 completionHandler:*(float *)&a3];
  }
  _Block_release(v13);
  swift_release();
}

uint64_t sub_1003658B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *))
{
  unint64_t v21 = a6;
  sub_100054B78(&qword_1005F6C50);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  NSString v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B19C(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100054B1C((uint64_t)v12, (uint64_t *)&unk_1005F7750);
    static os_log_type_t.error.getter();
    sub_1001C0DD4();
    uint64_t v17 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10046D010;
    *(void *)(v18 + 56) = &type metadata for String;
    *(void *)(v18 + 64) = sub_10004DA4C();
    *(void *)(v18 + 32) = a4;
    *(void *)(v18 + 40) = a5;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v21(v10);
    return sub_100054B1C((uint64_t)v10, &qword_1005F6C50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, v16, v13);
    swift_storeEnumTagMultiPayload();
    v21(v10);
    sub_100054B1C((uint64_t)v10, &qword_1005F6C50);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_100365BBC(uint64_t a1, uint64_t a2)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  Swift::String v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(void (**)(char *, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  }
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  swift_retain();
  v6(v5, v9, v11);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100054B1C((uint64_t)v5, (uint64_t *)&unk_1005F7750);
}

void sub_100365D18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_100365D50(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1003656B0(v6, v7, a1 | ((HIDWORD(a1) & 1) << 32), a2, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100365DD4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100365E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003658B4(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(char *))(v3 + 32));
}

uint64_t sub_100365E20(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ArtworkModel();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ArtworkRequest();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 0;
  sub_100313288(v4, (uint64_t)v13);
  uint64_t v19 = type metadata accessor for CropCode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 1, 1, v19);
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
  id v20 = [self mainScreen];
  [v20 scale];

  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
  sub_100041A98(a1, a1[3]);
  unint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v18;
  void v21[3] = a2;
  v21[4] = a3;
  swift_retain();
  swift_retain();
  ImageProvider.load(artwork:receiveImage:receiveCompletion:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return swift_release();
}

uint64_t sub_100366110(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000566BC();
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a2;
  long long v15[3] = a3;
  v15[4] = a4;
  v15[5] = a1;
  aBlock[4] = sub_100366484;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_1005645F8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v17 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_1003663B0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (unsigned char *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    swift_beginAccess();
    unsigned char *v7 = 1;
    return a2(a4);
  }
  return result;
}

uint64_t sub_10036643C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100366484()
{
  return sub_1003663B0(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100366490()
{
  return swift_deallocObject();
}

uint64_t sub_1003664A0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003664E0(void *a1)
{
  return sub_100366110(a1, v1[2], v1[3], v1[4]);
}

void sub_1003664EC()
{
  id v1 = objc_allocWithZone((Class)MTButtonTableViewCell);
  swift_retain();
  *(void *)(v0 + 88) = [v1 init];
  swift_release();
  *(void *)(v0 + 80) = 0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(void *)(v0 + 16) = 0xD000000000000019;
  *(void *)(v0 + 24) = 0x80000001004D1BF0;
  *(void *)(v0 + 32) = [objc_allocWithZone((Class)MTDynamicTypeConstant) initWithDefaultConstant:UIFontTextStyleBody textStyle:UITableViewAutomaticDimension];
  NSString v2 = String._bridgeToObjectiveC()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v4 = [self groupWithTitle:v2 footerText:0 settings:isa];

  if (v4)
  {
    *(void *)(v0 + 40) = v4;
    swift_retain();
    sub_100366B28();
    Swift::String v5 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = v6;
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

double sub_100366644()
{
  id v1 = *(void **)(v0 + 88);
  id v2 = [v1 buttonLabel];
  unint64_t v3 = sub_100366A44();
  Swift::String v5 = v4;
  id v6 = [self mainBundle];
  v15._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = v3;
  v7._object = v5;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v15._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v15);
  swift_bridgeObjectRelease();

  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v9];

  [v1 fittingSize];
  if (v11 != 0.0 || v10 != 0.0) {
    return v10;
  }
  uint64_t v12 = *(void **)(v0 + 32);

  [v12 currentConstant];
  return result;
}

void sub_1003667A0()
{
  id v0 = [self sharedApplication];
  sub_1002AE978();
}

void sub_1003667F8(char a1)
{
  if (a1)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v4 = [self groupWithTitle:v2 footerText:0 settings:isa];

    if (!v4)
    {
      __break(1u);
      return;
    }
    Swift::String v5 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = v4;
  }
  else
  {
    sub_100366B28();
    Swift::String v5 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = v6;
  }

  swift_beginAccess();
  sub_10024A230(v1 + 48, (uint64_t)v8);
  if (v9)
  {
    sub_100056D54((uint64_t)v8, (uint64_t)v7);
    sub_10026D994((uint64_t)v8);
    sub_100041A98(v7, v7[3]);
    sub_1001EEEB8((uint64_t)&off_100554308, 100);
    swift_arrayDestroy();
    sub_10004D2D8((uint64_t)v7);
  }
  else
  {
    sub_10026D994((uint64_t)v8);
  }
}

uint64_t _s14descr10054C569C25AllowNotificationsSectionCMa()
{
  return self;
}

unint64_t sub_100366960()
{
  unint64_t v0 = 0xD000000000000032;
  uint64_t v1 = self;
  id v2 = [v1 currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3)
  {
    id v4 = [v1 currentDevice];
    id v5 = [v4 userInterfaceIdiom];

    if (v5 == (id)1) {
      return 0xD000000000000030;
    }
  }
  return v0;
}

unint64_t sub_100366A44()
{
  unint64_t v0 = 0xD000000000000031;
  uint64_t v1 = self;
  id v2 = [v1 currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3)
  {
    id v4 = [v1 currentDevice];
    id v5 = [v4 userInterfaceIdiom];

    if (v5 == (id)1) {
      return 0xD00000000000002FLL;
    }
  }
  return v0;
}

void sub_100366B28()
{
  unint64_t v0 = sub_100366960();
  id v2 = v1;
  id v3 = self;
  id v4 = [v3 mainBundle];
  v27._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = v0;
  v5._object = v2;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v27);
  swift_bridgeObjectRelease();

  Swift::String v7 = self;
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 footerAttributedString:v8];

  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D060;
  double v11 = self;
  unint64_t v12 = sub_100366A44();
  uint64_t v14 = v13;
  id v15 = [v3 mainBundle];
  v28._object = (void *)0xE000000000000000;
  v16._uint64_t countAndFlagsBits = v12;
  v16._object = v14;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v28._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v28);
  swift_bridgeObjectRelease();

  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v19 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_1003667A0;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100564670;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = [v11 appThemeButtonSettingWithTitle:v18 identifier:v19 changeHandler:v20];
  _Block_release(v20);

  if (v21)
  {
    *(void *)(inited + 32) = v21;
    aBlock[0] = inited;
    specialized Array._endMutation()();
    unint64_t v22 = aBlock[0];
    id v23 = v9;
    sub_1001B7D44(v22);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v25 = [v7 groupWithTitle:0 footerText:v23 settings:isa];

    if (v25)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t *DebouncedAutoDownloadProcessor.sharedInstance.unsafeMutableAddressor()
{
  if (qword_1005F5B08 != -1) {
    swift_once();
  }
  return &static DebouncedAutoDownloadProcessor.sharedInstance;
}

id DebouncedAutoDownloadProcessor.__allocating_init(context:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___MTDebouncedAutoDownloadProcessor____lazy_storage___debouncedProcessor] = 0;
  *(void *)&v3[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_debounceInterval] = 0x3FF0000000000000;
  v3[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning] = 0;
  *(void *)&v3[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_context] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return [super init];
}

id static DebouncedAutoDownloadProcessor.sharedInstance.getter()
{
  if (qword_1005F5B08 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)static DebouncedAutoDownloadProcessor.sharedInstance;

  return v0;
}

uint64_t DebouncedAutoDownloadProcessor.isRunning.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning);
  swift_beginAccess();
  return *v1;
}

uint64_t DebouncedAutoDownloadProcessor.isRunning.setter(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*DebouncedAutoDownloadProcessor.isRunning.modify())()
{
  return j__swift_endAccess;
}

id DebouncedAutoDownloadProcessor.init(context:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___MTDebouncedAutoDownloadProcessor____lazy_storage___debouncedProcessor] = 0;
  *(void *)&v1[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_debounceInterval] = 0x3FF0000000000000;
  v1[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning] = 0;
  *(void *)&v1[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_context] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DebouncedAutoDownloadProcessor();
  return [super init];
}

Swift::Void __swiftcall DebouncedAutoDownloadProcessor.reevaluate()()
{
  sub_100008C78();
  dispatch thunk of DebouncedEpisodeAndShowProcessor.requestEvaluation()();

  swift_release();
}

void DebouncedAutoDownloadProcessor.init()()
{
}

id DebouncedAutoDownloadProcessor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebouncedAutoDownloadProcessor();
  return [super dealloc];
}

id sub_10036720C()
{
  id v0 = [objc_allocWithZone((Class)AVTimeFormatter) init];
  id result = [v0 setStyle:1];
  qword_10061AD18 = (uint64_t)v0;
  return result;
}

uint64_t sub_10036725C()
{
  type metadata accessor for InteractionContext.Page();
  __chkstk_darwin();
  objc_super v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for InteractionContext();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  Swift::String v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 16)
    && *(void *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText + 8))
  {
    swift_beginAccess();
    uint64_t v7 = *(void *)(v0 + 24);
    if (v7)
    {
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.context.getter();
      swift_release();
      InteractionContext.page.getter();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      LOBYTE(v7) = InteractionContext.Page.isTranscriptView.getter();
      sub_1001B4BB0((uint64_t)v2);
    }
  }
  else
  {
    LOBYTE(v7) = 0;
  }
  return v7 & 1;
}

uint64_t sub_1003673E0()
{
  uint64_t v1 = v0;
  uint64_t result = swift_beginAccess();
  if (*(void *)(v0 + 24))
  {
    type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void **)(v3 + qword_1005FAD68);
      swift_retain();
      id v6 = [v5 string];
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;

      double v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText);
      *double v10 = v7;
      v10[1] = v9;
      swift_bridgeObjectRelease();
      if (qword_1005F5B10 != -1) {
        swift_once();
      }
      id v11 = [(id)qword_10061AD18 stringFromSeconds:*(double *)(v4 + qword_1005FAD70)];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;
      swift_release();

      id v15 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp);
      uint64_t *v15 = v12;
      v15[1] = v14;
    }
    else
    {
      type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        return result;
      }
      swift_retain();
      Swift::String v16 = (void *)NowPlayingTranscriptSelectionContextActionConfiguration.selectedText.getter();
      id v17 = [v16 string];

      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      id v21 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText);
      *id v21 = v18;
      v21[1] = v20;
      swift_bridgeObjectRelease();
      uint64_t started = NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime.getter();
      if (v23)
      {
        swift_release();
        uint64_t v25 = 0;
        uint64_t v27 = 0;
      }
      else
      {
        if (qword_1005F5B10 != -1)
        {
          uint64_t v29 = started;
          swift_once();
        }
        id v24 = [(id)qword_10061AD18 stringFromSeconds:v29];
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v27 = v26;
        swift_release();
      }
      Swift::String v28 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp);
      *Swift::String v28 = v25;
      v28[1] = v27;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100367654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v239 = a2;
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v241 = (char *)&v221 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = type metadata accessor for URLQueryItem();
  uint64_t v253 = *(void *)(v258 - 8);
  __chkstk_darwin();
  v248 = (char *)&v221 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  os_log_type_t v247 = (char *)&v221 - v7;
  __chkstk_darwin();
  v246 = (char *)&v221 - v8;
  __chkstk_darwin();
  uint64_t v245 = (char *)&v221 - v9;
  __chkstk_darwin();
  unint64_t v244 = (char *)&v221 - v10;
  __chkstk_darwin();
  uint64_t v243 = (char *)&v221 - v11;
  __chkstk_darwin();
  unint64_t v242 = (char *)&v221 - v12;
  sub_100054B78(&qword_1005FD6C8);
  __chkstk_darwin();
  v249 = (char *)&v221 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URLComponents();
  uint64_t v250 = *(void *)(v14 - 8);
  uint64_t v251 = v14;
  __chkstk_darwin();
  uint64_t v240 = (char *)&v221 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v252 = (char *)&v221 - v16;
  uint64_t v17 = type metadata accessor for ShowOffer();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v221 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for EpisodeOffer();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin();
  id v24 = (char *)&v221 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v234 = v3;
    uint64_t v25 = *(void *)(v2 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp);
    unint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp + 8);
    uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText);
    uint64_t v27 = *(void **)(v2 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText + 8);
    unint64_t v29 = *(void *)(a1 + 16);
    uint64_t v30 = *(void *)(a1 + 24);
    uint64_t v31 = *(unsigned __int8 *)(a1 + 32);
    uint64_t v236 = v28;
    uint64_t v235 = v25;
    switch(v31)
    {
      case 1:
        if (!*(void *)(v29 + 16))
        {
          sub_100369EF4();
          swift_allocError();
          *uint64_t v77 = 2;
          return swift_willThrow();
        }
        unint64_t v44 = v29 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
        os_signpost_type_t v45 = v27;
        (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v24, v44, v21);
        id v238 = v45;
        swift_bridgeObjectRetain();
        uint64_t v229 = a1;
        swift_retain();
        unint64_t v237 = v26;
        swift_bridgeObjectRetain();
        EpisodeOffer.showOffer.getter();
        uint64_t v233 = ShowOffer.title.getter();
        os_log_type_t v222 = v46;
        uint64_t v47 = *(void (**)(char *, uint64_t))(v18 + 8);
        v47(v20, v17);
        uint64_t v48 = EpisodeOffer.title.getter();
        uint64_t v232 = v49;
        EpisodeOffer.showOffer.getter();
        uint64_t v50 = ShowOffer.adamId.getter();
        uint64_t v51 = v17;
        uint64_t v52 = v48;
        v47(v20, v51);
        uint64_t v254 = v50;
        sub_1001A5874();
        uint64_t v224 = BinaryInteger.description.getter();
        unint64_t v223 = v53;
        uint64_t v254 = EpisodeOffer.contentId.getter();
        uint64_t v227 = BinaryInteger.description.getter();
        unint64_t v226 = v54;
        uint64_t v55 = EpisodeOffer.priceType.getter();
        uint64_t v56 = 5460818;
        if (v55 != 1) {
          uint64_t v56 = 0x646574736F48;
        }
        uint64_t v228 = v56;
        unint64_t v57 = 0xE600000000000000;
        if (v55 == 1) {
          unint64_t v57 = 0xE300000000000000;
        }
        unint64_t v225 = v57;
        uint64_t v58 = v24;
        uint64_t v59 = (void *)v232;
        uint64_t v60 = v21;
        uint64_t v61 = v233;
        (*(void (**)(char *, uint64_t))(v22 + 8))(v58, v60);
        goto LABEL_74;
      case 2:
        unint64_t v237 = v26;
        id v238 = v27;
        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1001DCD9C(v29, v30, 2u);
          if (_CocoaArrayWrapper.endIndex.getter())
          {
LABEL_18:
            if ((v29 & 0xC000000000000001) != 0)
            {
              id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_191:
                id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_28:
                uint64_t v70 = v69;
                sub_1001DCDF8(v29, v30, 3u);
                uint64_t v71 = (void *)MPCPlayerResponseItem.podcastEpisode.getter();
                if (!v71)
                {

LABEL_184:
                  swift_bridgeObjectRelease();
LABEL_185:
                  swift_bridgeObjectRelease();
                  sub_100369EF4();
                  swift_allocError();
                  char v86 = 2;
LABEL_186:
                  *char v85 = v86;
LABEL_187:
                  swift_willThrow();
                  return swift_release();
                }
                uint64_t v72 = v71;
                id v73 = [v71 author];
                if (v73
                  && (os_signpost_id_t v74 = v73,
                      id v75 = [v73 name],
                      v74,
                      v75))
                {
                  uint64_t v233 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  os_log_type_t v222 = v76;
                }
                else
                {
                  uint64_t v233 = 0;
                  os_log_type_t v222 = 0;
                }
                id v81 = [v72 title];
                if (v81)
                {
                  uint64_t v82 = v81;
                  uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v59 = v84;
                }
                else
                {
                  uint64_t v83 = 0;
                  uint64_t v59 = 0;
                }
                id v111 = [v72 podcast];
                if (!v111
                  || (uint64_t v112 = v111, v113 = MPModelObject.adamID.getter(),
                                   char v115 = v114,
                                   v112,
                                   (v115 & 1) != 0))
                {
                  uint64_t v224 = 0;
                  unint64_t v223 = 0;
                }
                else
                {
                  uint64_t v254 = v113;
                  sub_1001A5874();
                  uint64_t v224 = BinaryInteger.description.getter();
                  unint64_t v223 = v116;
                }
                uint64_t v229 = a1;
                id v117 = v72;
                uint64_t v118 = MPModelObject.adamID.getter();
                char v120 = v119;

                if (v120)
                {

                  uint64_t v228 = 0;
                  unint64_t v225 = 0;
                  uint64_t v227 = 0;
                  id v122 = &v257;
                }
                else
                {
                  uint64_t v254 = v118;
                  sub_1001A5874();
                  uint64_t v227 = BinaryInteger.description.getter();
                  unint64_t v226 = v121;

                  uint64_t v228 = 0;
                  id v122 = &v256;
                }
                *((void *)v122 - 32) = 0;
                uint64_t v61 = v233;
                uint64_t v52 = v83;
LABEL_74:
                if (v222) {
                  uint64_t v123 = v61;
                }
                else {
                  uint64_t v123 = 0;
                }
                uint64_t v230 = v123;
                if (v59) {
                  uint64_t v124 = v52;
                }
                else {
                  uint64_t v124 = 0;
                }
                uint64_t v232 = v124;
                uint64_t v233 = 0xD000000000000012;
                if (v59) {
                  uint64_t v125 = v52;
                }
                else {
                  uint64_t v125 = 0xD000000000000012;
                }
                if (v59) {
                  long long v126 = v59;
                }
                else {
                  long long v126 = (void *)0x80000001004DF930;
                }
                if (v59) {
                  unint64_t v127 = (unint64_t)v59;
                }
                else {
                  unint64_t v127 = 0xE000000000000000;
                }
                uint64_t v231 = (void *)v127;
                uint64_t v254 = 0;
                unint64_t v255 = 0xE000000000000000;
                if (v222) {
                  uint64_t v128 = v61;
                }
                else {
                  uint64_t v128 = 0x776F6873206F6E5BLL;
                }
                if (v222) {
                  uint64_t v129 = v222;
                }
                else {
                  uint64_t v129 = (void *)0xEF5D656C74697420;
                }
                if (v222) {
                  uint64_t v130 = v222;
                }
                else {
                  uint64_t v130 = (void *)0xE000000000000000;
                }
                _StringGuts.grow(_:)(50);
                swift_bridgeObjectRelease();
                uint64_t v254 = 0xD00000000000002CLL;
                unint64_t v255 = 0x80000001004DF900;
                swift_bridgeObjectRetain();
                v131._uint64_t countAndFlagsBits = v128;
                v131._object = v129;
                String.append(_:)(v131);
                swift_bridgeObjectRelease();
                v132._uint64_t countAndFlagsBits = 8250;
                v132._object = (void *)0xE200000000000000;
                String.append(_:)(v132);
                swift_bridgeObjectRetain();
                v133._uint64_t countAndFlagsBits = v125;
                v133._object = v126;
                String.append(_:)(v133);
                swift_bridgeObjectRelease();
                sub_100412608(240);
                swift_bridgeObjectRelease();
                static String._fromSubstring(_:)();
                swift_bridgeObjectRelease();
                unint64_t v134 = 0xE000000000000000;
                uint64_t v254 = 0;
                unint64_t v255 = 0xE000000000000000;
                _StringGuts.grow(_:)(214);
                v135._uint64_t countAndFlagsBits = 0xD000000000000055;
                v135._object = (void *)0x80000001004DF950;
                String.append(_:)(v135);
                v136._uint64_t countAndFlagsBits = v230;
                v136._object = v130;
                String.append(_:)(v136);
                swift_bridgeObjectRelease();
                v137._object = (void *)0x80000001004DF9B0;
                v137._uint64_t countAndFlagsBits = 0xD000000000000010;
                String.append(_:)(v137);
                v138._uint64_t countAndFlagsBits = v232;
                v138._object = v231;
                String.append(_:)(v138);
                swift_bridgeObjectRelease();
                v139._uint64_t countAndFlagsBits = 0x646120776F68530ALL;
                v139._object = (void *)0xEE00203A64696D61;
                String.append(_:)(v139);
                if (v223) {
                  uint64_t v140 = v224;
                }
                else {
                  uint64_t v140 = 0;
                }
                if (v223) {
                  unint64_t v134 = v223;
                }
                unint64_t v141 = v134;
                String.append(_:)(*(Swift::String *)&v140);
                swift_bridgeObjectRelease();
                v142._object = (void *)0x80000001004DF9D0;
                v142._uint64_t countAndFlagsBits = 0xD000000000000011;
                String.append(_:)(v142);
                if (v226) {
                  uint64_t v143 = v227;
                }
                else {
                  uint64_t v143 = 0;
                }
                if (v226) {
                  unint64_t v144 = v226;
                }
                else {
                  unint64_t v144 = 0xE000000000000000;
                }
                unint64_t v145 = v144;
                String.append(_:)(*(Swift::String *)&v143);
                swift_bridgeObjectRelease();
                v146._object = (void *)0x80000001004DF9F0;
                v146._uint64_t countAndFlagsBits = 0xD000000000000010;
                String.append(_:)(v146);
                if (v225) {
                  uint64_t v147 = v228;
                }
                else {
                  uint64_t v147 = 0;
                }
                if (v225) {
                  unint64_t v148 = v225;
                }
                else {
                  unint64_t v148 = 0xE000000000000000;
                }
                unint64_t v149 = v148;
                String.append(_:)(*(Swift::String *)&v147);
                swift_bridgeObjectRelease();
                v150._uint64_t countAndFlagsBits = 0x747320656D69540ALL;
                v150._object = (void *)0xED0000203A706D61;
                String.append(_:)(v150);
                if (v237) {
                  uint64_t v151 = v235;
                }
                else {
                  uint64_t v151 = 0;
                }
                if (v237) {
                  unint64_t v152 = v237;
                }
                else {
                  unint64_t v152 = 0xE000000000000000;
                }
                unint64_t v153 = v152;
                String.append(_:)(*(Swift::String *)&v151);
                swift_bridgeObjectRelease();
                v154._object = (void *)0x80000001004DFA10;
                v154._uint64_t countAndFlagsBits = 0xD000000000000011;
                String.append(_:)(v154);
                if (v238) {
                  uint64_t v155 = v236;
                }
                else {
                  uint64_t v155 = 0;
                }
                if (v238) {
                  uint64_t v156 = v238;
                }
                else {
                  uint64_t v156 = (void *)0xE000000000000000;
                }
                swift_bridgeObjectRetain();
                v157._uint64_t countAndFlagsBits = v155;
                v157._object = v156;
                String.append(_:)(v157);
                swift_bridgeObjectRelease();
                v158._uint64_t countAndFlagsBits = 0xD000000000000013;
                v158._object = (void *)0x80000001004DFA30;
                String.append(_:)(v158);
                v159._uint64_t countAndFlagsBits = v155;
                v159._object = v156;
                String.append(_:)(v159);
                swift_bridgeObjectRelease();
                v160._uint64_t countAndFlagsBits = 34;
                v160._object = (void *)0xE100000000000000;
                String.append(_:)(v160);
                uint64_t v161 = v254;
                uint64_t v162 = (uint64_t)v249;
                URLComponents.init(string:)();
                uint64_t v163 = v250;
                uint64_t v164 = v251;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v250 + 48))(v162, 1, v251) == 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_100054B1C(v162, &qword_1005FD6C8);
                  sub_100369EF4();
                  swift_allocError();
                  *uint64_t v165 = 3;
                  swift_willThrow();
                  return swift_release();
                }
                id v238 = (void *)v161;
                v166 = v252;
                (*(void (**)(char *, uint64_t, uint64_t))(v163 + 32))(v252, v162, v164);
                URLComponents.queryItems.setter();
                char v68 = (void (*)(uint64_t *, void))URLComponents.queryItems.modify();
                if (!*v167)
                {
                  v68(&v254, 0);
LABEL_135:
                  uint64_t v172 = (void (*)(uint64_t *, void))URLComponents.queryItems.modify();
                  if (*v171)
                  {
                    uint64_t v173 = v171;
                    URLQueryItem.init(name:value:)();
                    unint64_t v174 = *v173;
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    *uint64_t v173 = v174;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      unint64_t v174 = sub_1002EF4A4(0, *(void *)(v174 + 16) + 1, 1, v174);
                      *uint64_t v173 = v174;
                    }
                    unint64_t v177 = *(void *)(v174 + 16);
                    unint64_t v176 = *(void *)(v174 + 24);
                    if (v177 >= v176 >> 1)
                    {
                      unint64_t v174 = sub_1002EF4A4(v176 > 1, v177 + 1, 1, v174);
                      *uint64_t v173 = v174;
                    }
                    *(void *)(v174 + 16) = v177 + 1;
                    (*(void (**)(unint64_t, char *, uint64_t))(v253 + 32))(v174+ ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))+ *(void *)(v253 + 72) * v177, v243, v258);
                    v172(&v254, 0);
                    uint64_t v164 = v251;
                    v166 = v252;
                  }
                  else
                  {
                    v172(&v254, 0);
                  }
                  uint64_t v179 = (void (*)(uint64_t *, void))URLComponents.queryItems.modify();
                  if (*v178)
                  {
                    os_log_type_t v180 = v178;
                    URLQueryItem.init(name:value:)();
                    unint64_t v181 = *v180;
                    char v182 = swift_isUniquelyReferenced_nonNull_native();
                    unint64_t *v180 = v181;
                    if ((v182 & 1) == 0)
                    {
                      unint64_t v181 = sub_1002EF4A4(0, *(void *)(v181 + 16) + 1, 1, v181);
                      unint64_t *v180 = v181;
                    }
                    unint64_t v184 = *(void *)(v181 + 16);
                    unint64_t v183 = *(void *)(v181 + 24);
                    if (v184 >= v183 >> 1)
                    {
                      unint64_t v181 = sub_1002EF4A4(v183 > 1, v184 + 1, 1, v181);
                      unint64_t *v180 = v181;
                    }
                    *(void *)(v181 + 16) = v184 + 1;
                    (*(void (**)(unint64_t, char *, uint64_t))(v253 + 32))(v181+ ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))+ *(void *)(v253 + 72) * v184, v244, v258);
                    v179(&v254, 0);
                    uint64_t v164 = v251;
                    v166 = v252;
                  }
                  else
                  {
                    v179(&v254, 0);
                  }
                  v186 = (void (*)(uint64_t *, void))URLComponents.queryItems.modify();
                  if (*v185)
                  {
                    v187 = v185;
                    URLQueryItem.init(name:value:)();
                    swift_bridgeObjectRelease();
                    unint64_t v188 = *v187;
                    char v189 = swift_isUniquelyReferenced_nonNull_native();
                    unint64_t *v187 = v188;
                    if ((v189 & 1) == 0)
                    {
                      unint64_t v188 = sub_1002EF4A4(0, *(void *)(v188 + 16) + 1, 1, v188);
                      unint64_t *v187 = v188;
                    }
                    unint64_t v191 = *(void *)(v188 + 16);
                    unint64_t v190 = *(void *)(v188 + 24);
                    if (v191 >= v190 >> 1)
                    {
                      unint64_t v188 = sub_1002EF4A4(v190 > 1, v191 + 1, 1, v188);
                      unint64_t *v187 = v188;
                    }
                    *(void *)(v188 + 16) = v191 + 1;
                    (*(void (**)(unint64_t, char *, uint64_t))(v253 + 32))(v188+ ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))+ *(void *)(v253 + 72) * v191, v245, v258);
                    v186(&v254, 0);
                    v166 = v252;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    v186(&v254, 0);
                  }
                  uint64_t v193 = (void (*)(uint64_t *, void))URLComponents.queryItems.modify();
                  if (*v192)
                  {
                    uint64_t v194 = v192;
                    URLQueryItem.init(name:value:)();
                    unint64_t v195 = *v194;
                    char v196 = swift_isUniquelyReferenced_nonNull_native();
                    *uint64_t v194 = v195;
                    if ((v196 & 1) == 0)
                    {
                      unint64_t v195 = sub_1002EF4A4(0, *(void *)(v195 + 16) + 1, 1, v195);
                      *uint64_t v194 = v195;
                    }
                    unint64_t v198 = *(void *)(v195 + 16);
                    unint64_t v197 = *(void *)(v195 + 24);
                    if (v198 >= v197 >> 1)
                    {
                      unint64_t v195 = sub_1002EF4A4(v197 > 1, v198 + 1, 1, v195);
                      *uint64_t v194 = v195;
                    }
                    *(void *)(v195 + 16) = v198 + 1;
                    (*(void (**)(unint64_t, char *, uint64_t))(v253 + 32))(v195+ ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))+ *(void *)(v253 + 72) * v198, v246, v258);
                    v193(&v254, 0);
                    v166 = v252;
                  }
                  else
                  {
                    v193(&v254, 0);
                  }
                  uint64_t v200 = (void (*)(uint64_t *, void))URLComponents.queryItems.modify();
                  if (*v199)
                  {
                    uint64_t v201 = v199;
                    URLQueryItem.init(name:value:)();
                    swift_bridgeObjectRelease();
                    unint64_t v202 = *v201;
                    char v203 = swift_isUniquelyReferenced_nonNull_native();
                    unint64_t *v201 = v202;
                    if ((v203 & 1) == 0)
                    {
                      unint64_t v202 = sub_1002EF4A4(0, *(void *)(v202 + 16) + 1, 1, v202);
                      unint64_t *v201 = v202;
                    }
                    unint64_t v205 = *(void *)(v202 + 16);
                    unint64_t v204 = *(void *)(v202 + 24);
                    uint64_t v206 = (uint64_t)v241;
                    if (v205 >= v204 >> 1)
                    {
                      unint64_t v202 = sub_1002EF4A4(v204 > 1, v205 + 1, 1, v202);
                      unint64_t *v201 = v202;
                    }
                    *(void *)(v202 + 16) = v205 + 1;
                    (*(void (**)(unint64_t, char *, uint64_t))(v253 + 32))(v202+ ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))+ *(void *)(v253 + 72) * v205, v247, v258);
                    v200(&v254, 0);
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    v200(&v254, 0);
                    uint64_t v206 = (uint64_t)v241;
                  }
                  uint64_t v208 = (void (*)(uint64_t *, void))URLComponents.queryItems.modify();
                  if (*v207)
                  {
                    uint64_t v209 = v207;
                    URLQueryItem.init(name:value:)();
                    unint64_t v210 = *v209;
                    char v211 = swift_isUniquelyReferenced_nonNull_native();
                    unint64_t *v209 = v210;
                    if ((v211 & 1) == 0)
                    {
                      unint64_t v210 = sub_1002EF4A4(0, *(void *)(v210 + 16) + 1, 1, v210);
                      unint64_t *v209 = v210;
                    }
                    unint64_t v213 = *(void *)(v210 + 16);
                    unint64_t v212 = *(void *)(v210 + 24);
                    if (v213 >= v212 >> 1)
                    {
                      unint64_t v210 = sub_1002EF4A4(v212 > 1, v213 + 1, 1, v210);
                      unint64_t *v209 = v210;
                    }
                    *(void *)(v210 + 16) = v213 + 1;
                    (*(void (**)(unint64_t, char *, uint64_t))(v253 + 32))(v210+ ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))+ *(void *)(v253 + 72) * v213, v248, v258);
                    v208(&v254, 0);
                  }
                  else
                  {
                    v208(&v254, 0);
                  }
                  uint64_t v214 = v250;
                  uint64_t v215 = v240;
                  (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v240, v166, v164);
                  URLComponents.url.getter();
                  uint64_t v216 = *(void (**)(char *, uint64_t))(v214 + 8);
                  v216(v215, v164);
                  uint64_t v217 = type metadata accessor for URL();
                  uint64_t v218 = *(void *)(v217 - 8);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v218 + 48))(v206, 1, v217) == 1)
                  {
                    sub_100054B1C(v206, (uint64_t *)&unk_1005F7750);
                    sub_100369EF4();
                    swift_allocError();
                    *long long v219 = 3;
                    swift_willThrow();
                    swift_release();
                    return ((uint64_t (*)(char *, uint64_t))v216)(v166, v164);
                  }
                  else
                  {
                    v216(v166, v164);
                    swift_release();
                    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v218 + 32))(v239, v206, v217);
                  }
                }
                unint64_t v29 = (unint64_t)v167;
                URLQueryItem.init(name:value:)();
                uint64_t v30 = *(void *)v29;
                char v168 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)unint64_t v29 = v30;
                if (v168)
                {
LABEL_131:
                  unint64_t v170 = *(void *)(v30 + 16);
                  unint64_t v169 = *(void *)(v30 + 24);
                  if (v170 >= v169 >> 1)
                  {
                    uint64_t v30 = sub_1002EF4A4(v169 > 1, v170 + 1, 1, v30);
                    *(void *)unint64_t v29 = v30;
                  }
                  *(void *)(v30 + 16) = v170 + 1;
                  (*(void (**)(unint64_t, char *, uint64_t))(v253 + 32))(v30+ ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))+ *(void *)(v253 + 72) * v170, v242, v258);
                  v68(&v254, 0);
                  uint64_t v164 = v251;
                  v166 = v252;
                  goto LABEL_135;
                }
LABEL_193:
                uint64_t v30 = sub_1002EF4A4(0, *(void *)(v30 + 16) + 1, 1, v30);
                *(void *)unint64_t v29 = v30;
                goto LABEL_131;
              }
              id v63 = *(id *)(v29 + 32);
            }
            uint64_t v64 = v63;
            sub_1001DCDF8(v29, v30, 2u);
            id v65 = [v64 author];
            if (v65)
            {
              uint64_t v66 = v65;
              uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              os_log_type_t v222 = v67;
            }
            else
            {
              uint64_t v61 = 0;
              os_log_type_t v222 = 0;
            }
            id v87 = [v64 title];
            if (v87)
            {
              uint64_t v88 = v87;
              uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v59 = v89;
            }
            else
            {
              uint64_t v52 = 0;
              uint64_t v59 = 0;
            }
            [v64 podcastStoreId];
            uint64_t v254 = AdamID.init(rawValue:)();
            sub_1001A5874();
            uint64_t v224 = BinaryInteger.description.getter();
            unint64_t v223 = v90;
            id v91 = v64;
            uint64_t v92 = IMPlayerItem.adamID.getter();
            char v94 = v93;

            if (v94)
            {
              uint64_t v95 = 0;
              unint64_t v97 = 0;
            }
            else
            {
              uint64_t v254 = v92;
              uint64_t v95 = BinaryInteger.description.getter();
              unint64_t v97 = v96;
            }
            uint64_t v98 = v95;
            uint64_t v229 = a1;
            id v99 = [v91 priceType];
            uint64_t v227 = v98;
            unint64_t v226 = v97;
            if (v99)
            {
              os_signpost_id_t v100 = v99;
              uint64_t v101 = MTEpisodePriceTypeFromPersistentString();

              uint64_t v102 = 5460818;
              if (v101 != 1) {
                uint64_t v102 = 0x646574736F48;
              }
              uint64_t v228 = v102;
              unint64_t v103 = 0xE600000000000000;
              if (v101 == 1) {
                unint64_t v103 = 0xE300000000000000;
              }
              unint64_t v225 = v103;
            }
            else
            {

              uint64_t v228 = 0;
              unint64_t v225 = 0;
            }
            goto LABEL_74;
          }
        }
        else
        {
          uint64_t v62 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1001DCD9C(v29, v30, 2u);
          if (v62) {
            goto LABEL_18;
          }
        }
        sub_1001DCDF8(v29, v30, 2u);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100369EF4();
        swift_allocError();
        *long long v220 = 2;
        goto LABEL_187;
      case 3:
        unint64_t v237 = v26;
        id v238 = v27;
        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1001DCD9C(v29, v30, 3u);
          char v68 = (void (*)(uint64_t *, void))_CocoaArrayWrapper.endIndex.getter();
          if (v68) {
            goto LABEL_25;
          }
        }
        else
        {
          char v68 = *(void (**)(uint64_t *, void))((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1001DCD9C(v29, v30, 3u);
          if (v68)
          {
LABEL_25:
            if ((v29 & 0xC000000000000001) != 0) {
              goto LABEL_191;
            }
            if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v69 = *(id *)(v29 + 32);
              goto LABEL_28;
            }
            __break(1u);
            goto LABEL_193;
          }
        }
        sub_1001DCDF8(v29, v30, 3u);
        goto LABEL_184;
      default:
        unint64_t v32 = v27;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1001DCD9C(v29, v30, 0);
        swift_bridgeObjectRelease();
        if (!*(void *)(v29 + 16))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_185;
        }
        unint64_t v237 = v26;
        id v238 = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v33 = [self sharedInstance];
        id v34 = [v33 mainQueueContext];

        NSString v35 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v36 = [v34 episodeForUuid:v35];

        if (!v36)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100369EF4();
          swift_allocError();
          char v86 = 1;
          goto LABEL_186;
        }
        id v37 = [v36 podcast];
        if (v37
          && (uint64_t v38 = v37, v39 = [v37 title], v38, v39))
        {
          uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          os_log_type_t v222 = v41;
        }
        else
        {
          uint64_t v40 = 0;
          os_log_type_t v222 = 0;
        }
        id v78 = [v36 title];
        if (v78)
        {
          uint64_t v79 = v78;
          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v59 = v80;
        }
        else
        {
          uint64_t v52 = 0;
          uint64_t v59 = 0;
        }
        id v104 = [v36 podcast];
        if (v104)
        {
          uint64_t v105 = v104;
          [v104 storeCollectionId];

          uint64_t v254 = AdamID.init(rawValue:)();
          sub_1001A5874();
          uint64_t v224 = BinaryInteger.description.getter();
          unint64_t v223 = v106;
        }
        else
        {
          uint64_t v224 = 0;
          unint64_t v223 = 0;
        }
        uint64_t v229 = a1;
        [v36 storeTrackId];
        uint64_t v254 = AdamID.init(rawValue:)();
        sub_1001A5874();
        uint64_t v227 = BinaryInteger.description.getter();
        unint64_t v226 = v107;
        id v108 = [v36 parsePriceType];

        uint64_t v109 = 5460818;
        if (v108 != (id)1) {
          uint64_t v109 = 0x646574736F48;
        }
        uint64_t v228 = v109;
        unint64_t v110 = 0xE600000000000000;
        if (v108 == (id)1) {
          unint64_t v110 = 0xE300000000000000;
        }
        unint64_t v225 = v110;
        uint64_t v61 = v40;
        goto LABEL_74;
    }
  }
  sub_100369EF4();
  swift_allocError();
  *uint64_t v42 = 0;
  return swift_willThrow();
}

uint64_t sub_100369384()
{
  sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin();
  v11[3] = *(void *)(type metadata accessor for Logger() - 8);
  __chkstk_darwin();
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = swift_retain();
  sub_100367654(v4, (uint64_t)v3);
  swift_release();
  id v5 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v6);
  uint64_t v8 = v7;
  sub_10016E9B0((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100369EAC(&qword_1005F66F0, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 openURL:v8 options:isa completionHandler:0];

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100369924()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100369A0C()
{
  return type metadata accessor for TranscriptionErrorTTRContextAction();
}

uint64_t type metadata accessor for TranscriptionErrorTTRContextAction()
{
  uint64_t result = qword_1006051D8;
  if (!qword_1006051D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100369A60()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100369B24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100369B98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.transcriptionErrorRadar(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_100369C7C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

void *sub_100369CDC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_100369D3C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_100369D9C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_100369DFC(uint64_t a1)
{
  uint64_t result = sub_100369EAC(&qword_100600A08, (void (*)(uint64_t))type metadata accessor for TranscriptionErrorTTRContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100369E54(uint64_t a1)
{
  uint64_t result = sub_100369EAC(&qword_100605348, (void (*)(uint64_t))type metadata accessor for TranscriptionErrorTTRContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100369EAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100369EF4()
{
  unint64_t result = qword_100605350;
  if (!qword_100605350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605350);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptionErrorTTRContextAction.BuildURLError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10036A014);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionErrorTTRContextAction.BuildURLError()
{
  return &type metadata for TranscriptionErrorTTRContextAction.BuildURLError;
}

unint64_t sub_10036A050()
{
  unint64_t result = qword_100605358;
  if (!qword_100605358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605358);
  }
  return result;
}

uint64_t *ForegroundSyncUtil.shared.unsafeMutableAddressor()
{
  if (qword_1005F5B18 != -1) {
    swift_once();
  }
  return &static ForegroundSyncUtil.shared;
}

id static ForegroundSyncUtil.shared.getter()
{
  if (qword_1005F5B18 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static ForegroundSyncUtil.shared;

  return v0;
}

char *sub_10036A14C()
{
  sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for LibraryImageProvider();
  uint64_t v52 = *(void *)(v51 - 8);
  __chkstk_darwin();
  uint64_t v50 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin();
  type metadata accessor for DispatchQoS();
  __chkstk_darwin();
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR___MTForegroundSyncUtil_defaults;
  uint64_t v8 = self;
  id v49 = v8;
  uint64_t v9 = v0;
  *(void *)&v0[v7] = [v8 _applePodcastsFoundationSharedUserDefaults];
  uint64_t v10 = OBJC_IVAR___MTForegroundSyncUtil_workQueue;
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10004AE54((unint64_t *)&qword_1005F5BE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100054B78((uint64_t *)&unk_1005F7A60);
  sub_10005666C((unint64_t *)&qword_1005F5BF0, (uint64_t *)&unk_1005F7A60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&v9[v10] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v11 = OBJC_IVAR___MTForegroundSyncUtil_syncController;
  *(void *)&v9[v11] = [self sharedInstance];
  id v12 = [self sharedInstance];
  unint64_t v54 = (void *)sub_10004D29C(0, &qword_1005F5D28);
  uint64_t v55 = (uint64_t (*)())&protocol witness table for IMURLBag;
  aBlock[0] = (uint64_t)v12;
  uint64_t v13 = (objc_class *)type metadata accessor for MediaRequestController();
  id v14 = [objc_allocWithZone(v13) init];
  uint64_t v62 = (uint64_t)v13;
  id v63 = &protocol witness table for MediaRequestController;
  uint64_t v61 = (uint64_t)v14;
  uint64_t v15 = type metadata accessor for MAPICategoriesProvider();
  swift_allocObject();
  uint64_t v16 = MAPICategoriesProvider.init(mediaRequestController:)();
  uint64_t v62 = v15;
  id v63 = &protocol witness table for MAPICategoriesProvider;
  uint64_t v61 = v16;
  uint64_t v17 = v50;
  static LibraryImageProvider.background.getter();
  type metadata accessor for CategoryIngester();
  uint64_t v18 = (uint64_t *)swift_allocObject();
  uint64_t v19 = v51;
  void v18[5] = v51;
  void v18[6] = (uint64_t)&protocol witness table for LibraryImageProvider;
  uint64_t v20 = sub_10004A244(v18 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v52 + 32))(v20, v17, v19);
  id v21 = [v49 _applePodcastsFoundationSharedUserDefaults];
  id v22 = [v21 objectForKey:kMTLastCategoriesSyncDateDefaultKey];

  if (v22)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v58, 0, sizeof(v58));
  }
  uint64_t v23 = v48;
  sub_100004C04((uint64_t)v58, (uint64_t)v59);
  if (v60)
  {
    uint64_t v24 = type metadata accessor for Date();
    int v25 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, v25 ^ 1u, 1, v24);
  }
  else
  {
    sub_100172424((uint64_t)v59);
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v23, 1, 1, v26);
  }
  uint64_t v27 = OBJC_IVAR___MTForegroundSyncUtil_categoriesSyncUtil;
  static OS_dispatch_queue.uiAssetPreparationQueue.getter();
  id v28 = [self sharedInstance];
  id v29 = [v28 importContext];

  type metadata accessor for CategoriesSyncUtil();
  swift_allocObject();
  *(void *)&v9[v27] = CategoriesSyncUtil.init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)();
  uint64_t v30 = &v9[OBJC_IVAR___MTForegroundSyncUtil_storefrontChangeObserver];
  *(_OWORD *)uint64_t v30 = 0u;
  *((_OWORD *)v30 + 1) = 0u;
  static Date.distantPast.getter();
  *(void *)&v9[OBJC_IVAR___MTForegroundSyncUtil____lazy_storage___formatter] = 0;
  v9[OBJC_IVAR___MTForegroundSyncUtil_needsSyncing] = 1;

  uint64_t v31 = (objc_class *)type metadata accessor for ForegroundSyncUtil();
  v57.receiver = v9;
  v57.super_class = v31;
  [super init];
  uint64_t v33 = type metadata accessor for Podcasts();
  unint64_t v54 = (void *)v33;
  uint64_t v34 = sub_10004AE54((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  uint64_t v55 = (uint64_t (*)())v34;
  NSString v35 = sub_10004A244(aBlock);
  id v36 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v33 - 8) + 104);
  v36(v35, enum case for Podcasts.ponderosa(_:), v33);
  id v37 = (char *)v32;
  char v38 = isFeatureEnabled(_:)();
  sub_10004D2D8((uint64_t)aBlock);
  if ((v38 & 1) != 0
    && (unint64_t v54 = (void *)v33,
        uint64_t v55 = (uint64_t (*)())v34,
        id v39 = sub_10004A244(aBlock),
        v36(v39, enum case for Podcasts.categoriesInLibrary(_:), v33),
        char v40 = isFeatureEnabled(_:)(),
        sub_10004D2D8((uint64_t)aBlock),
        (v40 & 1) != 0))
  {
    id v41 = [self sharedCoordinator];
    uint64_t v42 = *(void *)&v37[OBJC_IVAR___MTForegroundSyncUtil_categoriesSyncUtil];
    uint64_t v55 = sub_10036B658;
    uint64_t v56 = v42;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10003B424;
    unint64_t v54 = &unk_100564930;
    uint64_t v43 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v44 = [v41 registerCleanupHandler:v43];
    _Block_release(v43);

    unint64_t v54 = (void *)sub_10004D29C(0, &qword_1006053D8);
    aBlock[0] = (uint64_t)v44;
    uint64_t v45 = (uint64_t)&v37[OBJC_IVAR___MTForegroundSyncUtil_storefrontChangeObserver];
    swift_beginAccess();
    sub_10036B660((uint64_t)aBlock, v45);
    swift_endAccess();
  }
  else
  {
  }
  return v37;
}

uint64_t sub_10036AA2C()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.interests.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unsigned int v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[Categories Sync] Forcing categories sync on storefront change.", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return CategoriesSyncUtil.syncCategories(forced:completionHandler:)();
}

Swift::Void __swiftcall ForegroundSyncUtil.setNeedsSyncing()()
{
  *(unsigned char *)(v0 + OBJC_IVAR___MTForegroundSyncUtil_needsSyncing) = 1;
}

uint64_t ForegroundSyncUtil.lastExpectedFeedsUpdateDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___MTForegroundSyncUtil_lastExpectedFeedsUpdateDate;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ForegroundSyncUtil.lastExpectedFeedsUpdateDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___MTForegroundSyncUtil_lastExpectedFeedsUpdateDate;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*ForegroundSyncUtil.lastExpectedFeedsUpdateDate.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall ForegroundSyncUtil.startCloudSyncAfterPrivacy()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.feedUpdate.getter();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = v8;
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[Foreground Sync] Initiating cloud sync after privacy acknowledgement.", v15, 2u);
    uint64_t v8 = v19;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v1;
  aBlock[4] = sub_10036B594;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_1005647F0;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v1;
  static DispatchQoS.unspecified.getter();
  id v22 = _swiftEmptyArrayStorage;
  sub_10004AE54((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10005666C((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v21);
  swift_release();
}

id sub_10036B38C()
{
  uint64_t v1 = OBJC_IVAR___MTForegroundSyncUtil____lazy_storage___formatter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___MTForegroundSyncUtil____lazy_storage___formatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___MTForegroundSyncUtil____lazy_storage___formatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
    os_log_type_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;

    uint64_t v6 = (void *)sub_10036B38C();
    [v6 setDateStyle:2];

    uint64_t v7 = (void *)sub_10036B38C();
    [v7 setTimeStyle:2];

    uint64_t v8 = (void *)sub_10036B38C();
    uint64_t v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

uint64_t sub_10036B448(uint64_t a1)
{
  return sub_100023018(a1, "[Foreground Sync] Started updating %ld out of date podcasts.");
}

id ForegroundSyncUtil.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ForegroundSyncUtil();
  [super dealloc];
}

uint64_t sub_10036B55C()
{
  return swift_deallocObject();
}

id sub_10036B594()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = OBJC_IVAR___MTForegroundSyncUtil_syncController;
  [*(id *)(v1 + OBJC_IVAR___MTForegroundSyncUtil_syncController) syncEverything];
  id v3 = *(void **)(v1 + v2);

  return [v3 startUPPSyncTimerAfterPrivacy];
}

uint64_t sub_10036B5E8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10036B620()
{
  return swift_deallocObject();
}

uint64_t sub_10036B658()
{
  return sub_10036AA2C();
}

uint64_t sub_10036B660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F5D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10036B6E8(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v99 = a5;
  uint64_t v89 = a3;
  uint64_t v83 = a2;
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1006053E0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100054B78((uint64_t *)&unk_1006053F0);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78((uint64_t *)&unk_10060A450);
  uint64_t v87 = *(void *)(v18 - 8);
  uint64_t v88 = v18;
  __chkstk_darwin(v18);
  char v86 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100054B78((uint64_t *)&unk_100605400);
  uint64_t v91 = *(void *)(v20 - 8);
  uint64_t v92 = v20;
  __chkstk_darwin(v20);
  unint64_t v90 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100054B78(&qword_10060A460);
  uint64_t v95 = *(void *)(v22 - 8);
  uint64_t v96 = v22;
  __chkstk_darwin(v22);
  char v93 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100054B78((uint64_t *)&unk_100605410);
  uint64_t v97 = *(void *)(v24 - 8);
  uint64_t v98 = v24;
  __chkstk_darwin(v24);
  char v94 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = [v6 metadataObject];
  if (v26
    && (uint64_t v27 = v26, v28 = [v26 podcastEpisode], v27, v28))
  {
    id v29 = [v28 title];
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;
    }
    else
    {
      uint64_t v31 = 0;
      uint64_t v33 = 0;
    }
    id v35 = [v28 podcast];
    uint64_t v82 = v6;
    uint64_t v81 = a4;
    uint64_t v80 = a1;
    uint64_t v79 = v31;
    uint64_t v78 = v33;
    if (v35
      && (id v36 = v35, v37 = [v35 author], v36, v37)
      && (id v38 = [v37 name], v37, v38))
    {
      uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v66 = v39;
    }
    else
    {
      uint64_t v67 = 0;
      uint64_t v66 = 0;
    }
    unsigned int v76 = [v28 isExplicitEpisode];
    *(void *)&long long v100 = sub_10036D1F8();
    uint64_t v69 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    id v101 = (id)static OS_dispatch_queue.uiAssetPreparationQueue.getter();
    uint64_t v74 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v40 = *(void *)(v74 - 8);
    id v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    uint64_t v75 = v40 + 56;
    v73(v15, 1, 1, v74);
    sub_100054B78((uint64_t *)&unk_100605430);
    char v68 = &protocol conformance descriptor for AnyPublisher<A, B>;
    sub_100044200((unint64_t *)&unk_10060A470, (uint64_t *)&unk_100605430);
    id v77 = v28;
    unint64_t v72 = sub_100059BE0();
    uint64_t v70 = v15;
    Publisher.receive<A>(on:options:)();
    sub_100054B1C((uint64_t)v15, &qword_1005F9F20);

    swift_release();
    uint64_t v41 = v89;
    sub_100056D54(v89, (uint64_t)&v100);
    uint64_t v42 = swift_allocObject();
    sub_100042FC4(&v100, v42 + 16);
    uint64_t v43 = v83;
    long long v44 = v83[1];
    *(_OWORD *)(v42 + 56) = *v83;
    *(_OWORD *)(v42 + 72) = v44;
    *(_OWORD *)(v42 + 88) = v43[2];
    *(void *)(v42 + 104) = *((void *)v43 + 6);
    static Subscribers.Demand.unlimited.getter();
    sub_100054B78((uint64_t *)&unk_10060A480);
    sub_100054B78((uint64_t *)&unk_100605440);
    uint64_t v71 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
    sub_100044200((unint64_t *)&unk_10060A490, (uint64_t *)&unk_1006053F0);
    sub_100044200((unint64_t *)&unk_100605450, (uint64_t *)&unk_100605440);
    uint64_t v46 = v85;
    uint64_t v45 = v86;
    Publisher.flatMap<A, B>(maxPublishers:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v17, v46);
    sub_100056D54(v41, (uint64_t)&v100);
    uint64_t v47 = swift_allocObject();
    sub_100042FC4(&v100, v47 + 16);
    long long v48 = v43[1];
    *(_OWORD *)(v47 + 56) = *v43;
    *(_OWORD *)(v47 + 72) = v48;
    *(_OWORD *)(v47 + 88) = v43[2];
    *(void *)(v47 + 104) = *((void *)v43 + 6);
    sub_100054B78((uint64_t *)&unk_10060A4A0);
    sub_100044200((unint64_t *)&unk_100605460, (uint64_t *)&unk_10060A450);
    sub_100044200((unint64_t *)&unk_10060A4B0, (uint64_t *)&unk_10060A4A0);
    id v49 = v90;
    uint64_t v50 = v88;
    Publisher.catch<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v45, v50);
    *(void *)&long long v100 = static OS_dispatch_queue.main.getter();
    uint64_t v51 = (uint64_t)v70;
    v73(v70, 1, 1, v74);
    sub_100044200(&qword_100605470, (uint64_t *)&unk_100605400);
    uint64_t v52 = v92;
    unint64_t v53 = v93;
    Publisher.receive<A>(on:options:)();
    sub_100054B1C(v51, &qword_1005F9F20);

    (*(void (**)(char *, uint64_t))(v91 + 8))(v49, v52);
    uint64_t v54 = swift_allocObject();
    uint64_t v55 = v78;
    *(void *)(v54 + 16) = v79;
    *(void *)(v54 + 24) = v55;
    uint64_t v56 = v66;
    *(void *)(v54 + 32) = v67;
    *(void *)(v54 + 40) = v56;
    *(unsigned char *)(v54 + 48) = v76;
    objc_super v57 = v82;
    uint64_t v58 = v81;
    *(void *)(v54 + 56) = v82;
    *(void *)(v54 + 64) = v58;
    uint64_t v59 = v80;
    *(void *)(v54 + 72) = v99;
    *(void *)(v54 + 80) = v59;
    id v60 = v57;
    swift_retain();
    sub_100054B78(&qword_100603690);
    sub_100044200(&qword_100605478, &qword_10060A460);
    uint64_t v61 = v94;
    uint64_t v62 = v96;
    Publisher.map<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v53, v62);
    sub_100044200((unint64_t *)&unk_100605480, (uint64_t *)&unk_100605410);
    uint64_t v63 = v98;
    uint64_t v34 = Publisher.eraseToAnyPublisher()();

    (*(void (**)(char *, uint64_t))(v97 + 8))(v61, v63);
  }
  else
  {
    sub_100054B78(&qword_100603690);
    Empty.init(completeImmediately:)();
    sub_100044200((unint64_t *)&unk_100605420, (uint64_t *)&unk_1006053E0);
    uint64_t v34 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v34;
}

uint64_t sub_10036C20C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v32 = a3;
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_100600570);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ArtworkModel();
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ArtworkRequest();
  uint64_t v13 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_1006054D0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v30 = v16;
  uint64_t v31 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a2[3];
  uint64_t v26 = a2[4];
  sub_100041A98(a2, v20);
  sub_100313288(v27, (uint64_t)v12);
  uint64_t v21 = type metadata accessor for CropCode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
  static Logger.artwork.getter();
  static os_log_type_t.info.getter();
  SignpostAndLogTrace(domain:level:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v29);
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)();
  uint64_t v22 = dispatch thunk of ImageProvider.load(artwork:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  uint64_t v33 = v22;
  sub_100054B78((uint64_t *)&unk_100605E80);
  sub_100054B78((uint64_t *)&unk_10060A480);
  sub_100044200((unint64_t *)&unk_1006054B0, (uint64_t *)&unk_100605E80);
  Publisher.map<A>(_:)();
  swift_release();
  sub_100044200((unint64_t *)&unk_10060A500, (uint64_t *)&unk_1006054D0);
  uint64_t v23 = v30;
  uint64_t v24 = Publisher.eraseToAnyPublisher()();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v19, v23);
  *uint64_t v32 = v24;
  return result;
}

uint64_t sub_10036C650@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  id v36 = a2;
  uint64_t v37 = a3;
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100605490);
  uint64_t v41 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v38 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_10060A4D0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v40 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100054B78((uint64_t *)&unk_1006054A0);
  uint64_t v11 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  static Logger.artwork.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v32 = v9;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v33 = v8;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v31 = v11;
    uint64_t v43 = v16;
    uint64_t v44 = v21;
    uint64_t v34 = a4;
    *(_DWORD *)uint64_t v20 = 136315138;
    v30[1] = v20 + 4;
    swift_errorRetain();
    sub_100054B78(&qword_100603F70);
    uint64_t v22 = String.init<A>(describing:)();
    uint64_t v43 = sub_10004B974(v22, v23, &v44);
    a4 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v9 = v32;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to load artwork, falling back to placeholder: %s", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v11 = v31;
    swift_slowDealloc();
    uint64_t v8 = v33;
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v35);
  sub_100041A98(v36, v36[3]);
  uint64_t v44 = dispatch thunk of ImageProvider.placeholder(for:)();
  sub_100054B78((uint64_t *)&unk_100605E80);
  sub_100044200((unint64_t *)&unk_1006054B0, (uint64_t *)&unk_100605E80);
  uint64_t v24 = v38;
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)();
  swift_release();
  sub_100054B78((uint64_t *)&unk_10060A480);
  sub_100044200((unint64_t *)&unk_10060A4E0, (uint64_t *)&unk_100605490);
  uint64_t v25 = v40;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v6);
  uint64_t v44 = 0;
  sub_100044200((unint64_t *)&unk_1006054C0, (uint64_t *)&unk_10060A4D0);
  uint64_t v26 = v39;
  Publisher.replaceError(with:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v25, v8);
  sub_100044200((unint64_t *)&unk_10060A4F0, (uint64_t *)&unk_1006054A0);
  uint64_t v27 = v42;
  uint64_t v28 = Publisher.eraseToAnyPublisher()();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v26, v27);
  *a4 = v28;
  return result;
}

uint64_t sub_10036CC28(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  if (v7)
  {
    swift_errorRetain();
    static Logger.artwork.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v15 = v7;
      uint64_t v16 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      v14[1] = v10 + 4;
      swift_errorRetain();
      sub_100054B78(&qword_100603F70);
      uint64_t v12 = String.init<A>(describing:)();
      uint64_t v15 = sub_10004B974(v12, v13, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "CRITICAL FAILURE: Unable to load placeholder image: %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

void sub_10036CE70(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, void *a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int v39 = a6;
  uint64_t v38 = a4;
  uint64_t v43 = a9;
  uint64_t v41 = a8;
  uint64_t v42 = a11;
  uint64_t v40 = a10;
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v16 - 8);
  os_log_type_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *a1;
  sub_10004D29C(0, (unint64_t *)&qword_1005FD240);
  id v24 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v45 = sub_10041E078(a2, a3, v38, a5, v23);
  [v45 setExplicitContent:v39 & 1];
  *(void *)uint64_t v22 = a7;
  v22[8] = 2;
  swift_storeEnumTagMultiPayload();
  id v25 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
  id v26 = a7;
  uint64_t v27 = [v25 init];
  sub_10036D87C((uint64_t)v22, (uint64_t)v18, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  uint64_t v28 = (uint64_t)&v27[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934((uint64_t)v18, v28);
  swift_endAccess();
  v27[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 9;
  sub_10004D29C(0, &qword_1005F88B0);
  uint64_t v29 = NSString.init(stringLiteral:)();
  uint64_t v30 = v27;
  sub_1001BFA4C((uint64_t)v29, (uint64_t)v27);

  id v31 = v45;
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v40;
  *(void *)(v32 + 16) = v41;
  *(void *)(v32 + 24) = v33;
  aBlock[4] = sub_1001BFA88;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BF99C;
  uint64_t aBlock[3] = &unk_100564AC0;
  uint64_t v34 = _Block_copy(aBlock);
  id v35 = v31;
  swift_retain();
  swift_release();
  [v35 setHandler:v34];
  _Block_release(v34);

  id v36 = v43;
  *uint64_t v43 = v42;
  v36[1] = v35;
}

uint64_t sub_10036D1F8()
{
  uint64_t v0 = sub_100054B78((uint64_t *)&unk_1006054E0);
  uint64_t v31 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100054B78(&qword_10060A510);
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1006054F0);
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1006054F8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ArtworkModel();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27 - v16;
  MPModelPodcastEpisode.showArtworkData.getter();
  uint64_t v18 = type metadata accessor for NowPlayingArtwork.Data();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v18) == 1)
  {
    sub_100054B1C((uint64_t)v11, &qword_1006054F8);
LABEL_6:
    uint64_t v23 = type metadata accessor for LibraryImageProviderError();
    sub_10036D824();
    uint64_t v24 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, enum case for LibraryImageProviderError.failedToPrepareImage(_:), v23);
    uint64_t v32 = v24;
    sub_100054B78(&qword_100603F70);
    Fail.init(error:)();
    sub_100044200(&qword_100605508, (uint64_t *)&unk_1006054E0);
    uint64_t v22 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v2, v0);
    return v22;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v11, v18) != enum case for NowPlayingArtwork.Data.model(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v18);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t))(v19 + 96))(v11, v18);
  sub_10036D87C((uint64_t)v11, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  sub_100313288((uint64_t)v17, (uint64_t)v15);
  Just.init(_:)();
  sub_100054B78(&qword_100603F70);
  uint64_t v20 = v28;
  Just.setFailureType<A>(to:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v20);
  sub_100044200((unint64_t *)&unk_100605510, &qword_1006054F0);
  uint64_t v21 = v30;
  uint64_t v22 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v21);
  sub_10022D86C((uint64_t)v17);
  return v22;
}

uint64_t sub_10036D714()
{
  sub_10004D2D8(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10036D74C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10036C20C(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_10036D758@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10036C650(a1, (void *)(v2 + 16), v2 + 56, a2);
}

uint64_t sub_10036D764()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

void sub_10036D7B4(void **a1@<X0>, void *a2@<X8>)
{
  sub_10036CE70(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void **)(v2 + 56), *(void *)(v2 + 64), a2, *(void *)(v2 + 72), *(void *)(v2 + 80));
}

uint64_t sub_10036D7EC()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_10036D824()
{
  unint64_t result = qword_100605500;
  if (!qword_100605500)
  {
    type metadata accessor for LibraryImageProviderError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100605500);
  }
  return result;
}

uint64_t sub_10036D87C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t (*sub_10036D8EC())()
{
  uint64_t v1 = v0[33];
  if (v1)
  {
    uint64_t v2 = (uint64_t (*)())v0[33];
  }
  else
  {
    uint64_t v3 = v0[31];
    uint64_t v2 = sub_1001C0E14;
    v0[33] = sub_1001C0E14;
    v0[34] = v3;
    swift_retain_n();
    sub_1000536BC(0);
  }
  sub_10004ACDC(v1);
  return v2;
}

uint64_t sub_10036D974()
{
  sub_100053720(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  sub_10004D2D8(v0 + 144);
  swift_unknownObjectRelease();
  swift_release();
  sub_10004D2D8(v0 + 208);
  swift_release();
  swift_release();
  sub_1000536BC(*(void *)(v0 + 264));
  return v0;
}

uint64_t sub_10036D9E8()
{
  sub_10036D974();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CarPlayEpisodesProvider()
{
  return self;
}

uint64_t sub_10036DA40()
{
  uint64_t v16 = sub_100054B78(&qword_100605610);
  uint64_t v1 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78(&qword_100605618);
  uint64_t v19 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78((uint64_t *)&unk_100605620);
  uint64_t v20 = *(void *)(v18 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1001A5FC8(v0 + 16, (uint64_t)v23);
  v15[1] = dispatch thunk of LibraryDataProviderProtocol.episodeListSettingsPublisher(listType:)();
  v15[0] = dispatch thunk of LibraryDataProviderProtocol.episodeListShelfPublisher(episodeSettingsPublisher:pageSize:)();
  uint64_t v21 = *(void *)(v0 + 256);
  uint64_t v22 = v15[0];
  sub_100054B78(&qword_1005F7368);
  sub_100054B78((uint64_t *)&unk_1005F8B00);
  sub_100044200(&qword_100605630, &qword_1005F7368);
  sub_100044200(&qword_1005F9F40, (uint64_t *)&unk_1005F8B00);
  Publisher.combineLatest<A>(_:)();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10036F600;
  *(void *)(v9 + 24) = v8;
  sub_100054B78((uint64_t *)&unk_1005F9EB0);
  sub_100044200(&qword_100605638, &qword_100605610);
  uint64_t v10 = v16;
  Publisher.compactMap<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v10);
  static Subscribers.Demand.unlimited.getter();
  sub_100044200((unint64_t *)&unk_100605640, &qword_100605618);
  sub_100044200(&qword_1005F8B98, (uint64_t *)&unk_1005F9EB0);
  uint64_t v11 = v17;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v11);
  sub_100044200((unint64_t *)&unk_100605650, (uint64_t *)&unk_100605620);
  uint64_t v12 = v18;
  uint64_t v13 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v12);
  return v13;
}

uint64_t sub_10036DEE0(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F77B8);
  uint64_t v57 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v55 = v3;
  uint64_t v56 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100054B78((uint64_t *)&unk_100605660);
  uint64_t v44 = *(void *)(v47 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005FD290);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100054B78(&qword_100605670);
  uint64_t v43 = *(void *)(v46 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100054B78(&qword_100605678);
  uint64_t v45 = *(void *)(v48 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_100605680);
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  __chkstk_darwin();
  id v49 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78(&qword_100605688);
  uint64_t v53 = *(void *)(v14 - 8);
  uint64_t v54 = v14;
  __chkstk_darwin();
  uint64_t v50 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_100605690);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    FRPOutput.content.getter();
    unint64_t v20 = v60;
    uint64_t v58 = v60;
    sub_100054B78(&qword_1005F77D0);
    Loadable.item.getter();
    sub_10036F670(v20);
    uint64_t v21 = v59;
    if (v59)
    {
      uint64_t v41 = a1;
      uint64_t v42 = v2;
      uint64_t v22 = *(void *)(v59 + 16);
      uint64_t v23 = type metadata accessor for ModernShelf();
      uint64_t v24 = *(void *)(v23 - 8);
      if (v22)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v7, v21+ ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80)), v23);
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v25 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v7, v25, 1, v23);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v7, 1, v23) == 1)
      {
        swift_release();
        sub_100054B1C((uint64_t)v7, (uint64_t *)&unk_1005FD290);
        return 0;
      }
      else
      {
        uint64_t v27 = ModernShelf.items.getter();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v23);
        uint64_t v58 = v27;
        sub_100054B78(&qword_100600E70);
        sub_100044200((unint64_t *)&unk_1006056A8, &qword_100600E70);
        Sequence.publisher.getter();
        swift_bridgeObjectRelease();
        swift_retain();
        static Subscribers.Demand.unlimited.getter();
        sub_100054B78(&qword_1005F8CA0);
        sub_100044200(&qword_1006056B8, (uint64_t *)&unk_100605660);
        sub_100044200((unint64_t *)&unk_1005F8CB0, &qword_1005F8CA0);
        uint64_t v28 = v47;
        Publisher<>.flatMap<A>(maxPublishers:_:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v28);
        sub_10004D29C(0, (unint64_t *)&qword_1005FD240);
        sub_100044200(&qword_1006056C0, &qword_100605670);
        uint64_t v29 = v46;
        Publisher.compactMap<A>(_:)();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v29);
        sub_100044200(&qword_1006056C8, &qword_100605678);
        uint64_t v30 = v48;
        uint64_t v31 = v49;
        Publisher.collect()();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v30);
        uint64_t v33 = v56;
        uint64_t v32 = v57;
        uint64_t v34 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v41, v42);
        unint64_t v35 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        uint64_t v36 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v36 + v35, v33, v34);
        sub_100054B78((uint64_t *)&unk_1005F8BD0);
        sub_100044200(&qword_1006056D0, &qword_100605680);
        uint64_t v37 = v50;
        uint64_t v38 = v52;
        Publisher.map<A>(_:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v38);
        sub_100044200((unint64_t *)&unk_1006056D8, &qword_100605688);
        uint64_t v39 = v54;
        uint64_t v26 = Publisher.eraseToAnyPublisher()();
        swift_release();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v39);
      }
    }
    else
    {
      swift_release();
      return 0;
    }
  }
  else
  {
    sub_100054B78((uint64_t *)&unk_1005F8BD0);
    Empty.init(completeImmediately:)();
    sub_100044200(&qword_1006056A0, (uint64_t *)&unk_100605690);
    uint64_t v26 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  return v26;
}

uint64_t sub_10036E87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v47 = a3;
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F8D00);
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin();
  uint64_t v42 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v45 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  int v13 = *(unsigned __int8 *)(a2 + 80);
  sub_100056D54(v46, (uint64_t)v48);
  uint64_t v49 = v6;
  uint64_t v50 = v45;
  uint64_t v51 = v7;
  uint64_t v52 = v8;
  uint64_t v53 = v9;
  uint64_t v54 = v10;
  uint64_t v55 = v11;
  uint64_t v56 = v12;
  char v57 = v13;
  LODWORD(v46) = v13;
  uint64_t v40 = v6;
  uint64_t v41 = v8;
  uint64_t v14 = v6;
  uint64_t v15 = v12;
  uint64_t v16 = v45;
  sub_1001A5920(v14, v45, v7, v8, v9, v10, v11, v15, v13);
  sub_100054B78(&qword_1005F8430);
  type metadata accessor for LibraryEpisodeLockup();
  if (swift_dynamicCast())
  {
    int v17 = sub_10036ECCC(a2);
    uint64_t v18 = *(void *)(a2 + 200);
    long long v58 = *(_OWORD *)(a2 + 88);
    long long v19 = *(_OWORD *)(a2 + 120);
    int64x2_t v59 = *(int64x2_t *)(a2 + 104);
    long long v60 = v19;
    *(void *)&long long v61 = *(void *)(a2 + 136);
    unint64_t v20 = sub_10036D8EC();
    uint64_t v22 = sub_100380CA0(a2 + 144, v18, 1, 0, v17, &v58, a2 + 208, (uint64_t)v20, v21);
    swift_release();
    swift_release();
    uint64_t *v47 = v22;
LABEL_3:
    sub_100053720(v49, v50, v51, v52, v53, v54, v55, v56, v57);
    return sub_10004D2D8((uint64_t)v48);
  }
  type metadata accessor for LibraryShowLockup();
  int v24 = swift_dynamicCast();
  uint64_t v25 = v47;
  if (v24)
  {
    if (v46 == 9)
    {
      uint64_t v26 = v9 | v10 | v11;
      if (!(v7 | v16 | v40 | v41 | v26 | v15))
      {
        uint64_t v27 = a2 + 144;
        *(void *)&long long v58 = LibraryShowLockup.uuid.getter();
        *((void *)&v58 + 1) = v34;
        int64x2_t v59 = vdupq_n_s64(2uLL);
        long long v60 = 0u;
        long long v61 = 0u;
        char v62 = 7;
        long long v35 = *(_OWORD *)(a2 + 104);
        long long v63 = *(_OWORD *)(a2 + 88);
        long long v64 = v35;
        long long v65 = *(_OWORD *)(a2 + 120);
        uint64_t v66 = *(void *)(a2 + 136);
        uint64_t v30 = a2 + 208;
        goto LABEL_14;
      }
      if (v40 == 4 && !(v7 | v16 | v41 | v26 | v15))
      {
        uint64_t v27 = a2 + 144;
        *(void *)&long long v58 = LibraryShowLockup.uuid.getter();
        *((void *)&v58 + 1) = v28;
        int64x2_t v59 = (int64x2_t)xmmword_100477C20;
        long long v60 = 0u;
        long long v61 = 0u;
        char v62 = 7;
        long long v29 = *(_OWORD *)(a2 + 104);
        long long v63 = *(_OWORD *)(a2 + 88);
        long long v64 = v29;
        long long v65 = *(_OWORD *)(a2 + 120);
        uint64_t v30 = a2 + 208;
        uint64_t v66 = *(void *)(a2 + 136);
LABEL_14:
        uint64_t v36 = sub_10036D8EC();
        uint64_t v38 = sub_1003820B8(v27, (uint64_t)&v58, 0, (uint64_t)&v63, v30, (uint64_t)v36, v37);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        *uint64_t v25 = v38;
        goto LABEL_3;
      }
    }
    swift_release();
  }
  *(void *)&long long v58 = 0;
  sub_100054B78(&qword_1005FD280);
  uint64_t v31 = v42;
  Just.init(_:)();
  sub_100044200(&qword_1005F8D10, (uint64_t *)&unk_1005F8D00);
  uint64_t v32 = v44;
  uint64_t v33 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v32);
  *uint64_t v25 = v33;
  return sub_100054B1C((uint64_t)v48, &qword_1006056E8);
}

uint64_t sub_10036ECCC(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 80) - 4;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t result = 7;
  switch(v1)
  {
    case 0:
      uint64_t result = 10;
      break;
    case 1:
      return result;
    case 3:
      if (v3 == 3) {
        unsigned int v6 = 6;
      }
      else {
        unsigned int v6 = 0;
      }
      if (v3 == 2) {
        unsigned int v6 = 4;
      }
      if (v4 == 2) {
        uint64_t result = v6;
      }
      else {
        uint64_t result = 0;
      }
      break;
    case 5:
      uint64_t v8 = *(void *)(a1 + 64);
      uint64_t v7 = *(void *)(a1 + 72);
      uint64_t v10 = *(void *)(a1 + 48);
      uint64_t v9 = *(void *)(a1 + 56);
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v13 = v4 | v3;
      uint64_t v14 = v8 | v9 | v10;
      if (v13 | v12 | v7 | v14 | v11)
      {
        uint64_t v15 = v13 | v7 | v14 | v11;
        if (v12 != 1 || v15)
        {
          if (v12 != 3 || v15)
          {
            if (v12 != 4 || v15) {
              goto LABEL_22;
            }
            uint64_t result = 6;
          }
          else
          {
            uint64_t result = 5;
          }
        }
        else
        {
          uint64_t result = 8;
        }
      }
      else
      {
        uint64_t result = 4;
      }
      break;
    default:
LABEL_22:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_10036EDD4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005FD290);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  sub_100054B78(&qword_1005F77B8);
  FRPOutput.content.getter();
  unint64_t v11 = v54;
  uint64_t v52 = v54;
  sub_100054B78(&qword_1005F77D0);
  Loadable.item.getter();
  sub_10036F670(v11);
  uint64_t v12 = v53;
  if (v53)
  {
    uint64_t v13 = *(void *)(v53 + 16);
    uint64_t v14 = type metadata accessor for ModernShelf();
    uint64_t v15 = *(void *)(v14 - 8);
    if (v13)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v12+ ((*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80)), v14);
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v9, v16, 1, v14);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
    {
      sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005FD290);
      goto LABEL_32;
    }
    uint64_t v17 = ModernShelf.items.getter();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
    unint64_t v18 = (unint64_t)sub_1003E5140(v17);
    swift_bridgeObjectRelease();
    if (v18)
    {
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
        if (v19)
        {
LABEL_10:
          if (v19 < 1)
          {
            __break(1u);
            swift_bridgeObjectRelease();
            uint64_t result = swift_release();
            __break(1u);
            return result;
          }
          uint64_t v49 = v5;
          uint64_t v50 = v4;
          uint64_t v51 = a2;
          if ((v18 & 0xC000000000000001) != 0)
          {
            uint64_t v20 = 0;
            uint64_t v21 = (char *)_swiftEmptyArrayStorage;
            do
            {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v23 = LegacyLockup.title.getter();
              uint64_t v25 = v24;
              swift_unknownObjectRelease();
              if (v25)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v21 = sub_10004CEAC(0, *((void *)v21 + 2) + 1, 1, v21);
                }
                unint64_t v27 = *((void *)v21 + 2);
                unint64_t v26 = *((void *)v21 + 3);
                if (v27 >= v26 >> 1) {
                  uint64_t v21 = sub_10004CEAC((char *)(v26 > 1), v27 + 1, 1, v21);
                }
                *((void *)v21 + 2) = v27 + 1;
                uint64_t v22 = &v21[16 * v27];
                *((void *)v22 + 4) = v23;
                *((void *)v22 + 5) = v25;
              }
              ++v20;
            }
            while (v19 != v20);
          }
          else
          {
            uint64_t v28 = 0;
            uint64_t v21 = (char *)_swiftEmptyArrayStorage;
            do
            {
              swift_retain();
              uint64_t v30 = LegacyLockup.title.getter();
              uint64_t v32 = v31;
              swift_release();
              if (v32)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v21 = sub_10004CEAC(0, *((void *)v21 + 2) + 1, 1, v21);
                }
                unint64_t v34 = *((void *)v21 + 2);
                unint64_t v33 = *((void *)v21 + 3);
                if (v34 >= v33 >> 1) {
                  uint64_t v21 = sub_10004CEAC((char *)(v33 > 1), v34 + 1, 1, v21);
                }
                *((void *)v21 + 2) = v34 + 1;
                long long v29 = &v21[16 * v34];
                *((void *)v29 + 4) = v30;
                *((void *)v29 + 5) = v32;
              }
              ++v28;
            }
            while (v19 != v28);
          }
          swift_bridgeObjectRelease_n();
          uint64_t v4 = v50;
          a2 = v51;
          uint64_t v5 = v49;
          if (v10 < 0) {
            goto LABEL_45;
          }
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v19) {
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease_n();
    }
  }
LABEL_32:
  uint64_t v21 = (char *)_swiftEmptyArrayStorage;
  if (v10 < 0)
  {
LABEL_45:
    swift_bridgeObjectRetain();
    unint64_t v47 = swift_bridgeObjectRetain();
    uint64_t v35 = (uint64_t)sub_10025BFA4(v47);
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
LABEL_33:
  if ((v10 & 0x4000000000000000) != 0) {
    goto LABEL_45;
  }
  uint64_t v35 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_35:
  uint64_t v54 = v35;
  sub_10025F1BC(&v54, v21);
  swift_bridgeObjectRelease_n();
  uint64_t v36 = v54;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_retain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 134217984;
    if (v36 < 0 || (v36 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
    }
    else
    {
      uint64_t v40 = *(void *)(v36 + 16);
    }
    swift_release();
    uint64_t v54 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "CarPlayEpisodesProvider: section total items count is %ld.", v39, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_10046D060;
  swift_bridgeObjectRetain();
  if (v36 < 0 || (v36 & 0x4000000000000000) != 0)
  {
    sub_100054B78(&qword_1005F7E20);
    unint64_t v42 = _bridgeCocoaArray<A>(_:)();
    swift_release();
  }
  else
  {
    unint64_t v42 = v36;
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  swift_release();
  id v43 = objc_allocWithZone((Class)CPListSection);
  sub_1001C04A0(v42);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v45 = [v43 initWithItems:isa];

  *(void *)(v41 + 32) = v45;
  uint64_t v54 = v41;
  uint64_t result = specialized Array._endMutation()();
  *a2 = v54;
  return result;
}

uint64_t sub_10036F4B4()
{
  return sub_10036DA40();
}

uint64_t sub_10036F4D8()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_10036F558()
{
  return Subject<>.send()();
}

uint64_t sub_10036F5C8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10036F600(uint64_t a1)
{
  return sub_10036DEE0(a1);
}

uint64_t sub_10036F608()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10036F640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

unint64_t sub_10036F670(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10036F680@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10036E87C(a1, v2, a2);
}

uint64_t sub_10036F688()
{
  uint64_t v1 = sub_100054B78(&qword_1005F77B8);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10036F71C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_100054B78(&qword_1005F77B8);

  return sub_10036EDD4(a1, a2);
}

uint64_t sub_10036F7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100054B78((uint64_t *)&unk_1005F8AE0);
  swift_allocObject();
  *(void *)(v3 + 248) = PassthroughSubject.init()();
  sub_100054B78((uint64_t *)&unk_1005F8B00);
  swift_allocObject();
  uint64_t v6 = CurrentValueSubject.init(_:)();
  *(void *)(v3 + 264) = 0;
  *(void *)(v3 + 272) = 0;
  *(void *)(v3 + 256) = v6;
  sub_1001A5FC8(a2, v3 + 16);
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)a3;
  *(_OWORD *)(v3 + 104) = v7;
  *(_OWORD *)(v3 + 120) = *(_OWORD *)(a3 + 32);
  *(void *)(v3 + 136) = *(void *)(a3 + 48);
  sub_100054B78((uint64_t *)&unk_1005F8B10);
  sub_1001C69A8(a2);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v9, v3 + 144);
  sub_100054B78(&qword_1005FD620);
  BaseObjectGraph.inject<A>(_:)();
  *(_OWORD *)(v3 + 184) = v9[0];
  sub_100054B78(&qword_1005F7050);
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(v3 + 200) = *(void *)&v9[0];
  sub_100054B78((uint64_t *)&unk_1005FBBF0);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v9, v3 + 208);
  return v3;
}

void sub_10036F8F8()
{
  id v1 = String._bridgeToObjectiveC()();
  [v0 reportBrowse:v1];
}

void *sub_10036F944(unint64_t a1)
{
  specialized ContiguousArray.reserveCapacity(_:)();
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_12;
        }
        sub_10036FAE4(v3, v4);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        ++v3;
        if (v6 == v2) {
          goto LABEL_14;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        goto LABEL_14;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_7;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *ChannelLockupGenerator.channelLockups(for:)()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  id v1 = sub_10036F944(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10036FAE4(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for MetricsData();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationFields();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LegacyChannelLockup();
  id v12 = a2;
  static MetricsDataConfiguration.default.getter();
  uint64_t v13 = sub_1003B2224(v12, 1, (uint64_t)v32);
  swift_retain();
  dispatch thunk of LegacyLockup.clickAction.getter();
  swift_release();
  if (v31)
  {
    sub_100054B78(&qword_1005F82A0);
    type metadata accessor for FlowAction();
    if (swift_dynamicCast())
    {
      uint64_t v25 = v3;
      uint64_t v26 = v8;
      uint64_t v27 = v7;
      uint64_t v31 = v11;
      v30[0] = v13;
      swift_retain();
      FlowAction.generateClickEventWithItemLevelFields(sender:interactionView:)();
      sub_100054B1C((uint64_t)v30, &qword_1005F5D30);
      uint64_t v31 = v11;
      v30[0] = v13;
      swift_retain();
      FlowAction.generateItemLevelLocationFields(locationPosition:sender:interactionView:)();
      sub_100054B1C((uint64_t)v30, &qword_1005F5D30);
      swift_retain();
      uint64_t v14 = LocationFields.metricsFields.getter();
      uint64_t v31 = sub_100054B78(&qword_1005F8378);
      v30[0] = v14;
      uint64_t v15 = (void (*)(void *, void))dispatch thunk of MetricsEvent.eventFields.modify();
      sub_100276A38((uint64_t)v30, 0x6E6F697461636F6CLL, 0xE800000000000000);
      v15(v29, 0);
      swift_release();
      swift_retain();
      dispatch thunk of MetricsEvent.metricsData.getter();
      uint64_t v24 = (void (*)(void *, void))dispatch thunk of Action.actionMetrics.modify();
      uint64_t v28 = (void (*)(void *, void))ActionMetrics.data.modify();
      uint64_t v17 = v16;
      unint64_t v18 = *v16;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v17 = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v18 = sub_1002F0078(0, *(void *)(v18 + 16) + 1, 1, v18);
        unint64_t *v17 = v18;
      }
      unint64_t v21 = *(void *)(v18 + 16);
      unint64_t v20 = *(void *)(v18 + 24);
      if (v21 >= v20 >> 1)
      {
        unint64_t v18 = sub_1002F0078(v20 > 1, v21 + 1, 1, v18);
        unint64_t *v17 = v18;
      }
      *(void *)(v18 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v18+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v21, v6, v25);
      v28(v29, 0);
      v24(v30, 0);
      swift_release();
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
    }
  }
  else
  {
    sub_100054B1C((uint64_t)v30, (uint64_t *)&unk_1005F89E0);
  }
  return v13;
}

uint64_t sub_10036FEE8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10036FF10(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v2;
    if (!v15)
    {
      int64_t v2 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v2);
      if (!v15)
      {
        int64_t v2 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v2);
        if (!v15)
        {
          int64_t v2 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v2);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v9 = __clz(__rbit64(v15)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = *(void *)(v1 + 48) + 24 * v9;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    char v13 = *(unsigned char *)(v10 + 16);
    sub_1001DD838(*(void *)v10, v12, v13);
    sub_1003F51C0((uint64_t)v17, v11, v12, v13);
    uint64_t result = sub_1001DD848(v17[0], v17[1], v18);
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v2 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v2);
        ++v16;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v16;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

id sub_1003700B0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Podcasts13WidgetManager_observerTokens];
  swift_beginAccess();
  unint64_t v2 = *(void *)v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    v9.receiver = v0;
    v9.super_class = (Class)type metadata accessor for WidgetManager();
    return [super dealloc];
  }
  swift_bridgeObjectRetain_n();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  id result = self;
  if (v3 >= 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v7 = *(void *)(v2 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      ++v6;
      id v8 = [v5 defaultCenter];
      [v8 removeObserver:v7];
      swift_unknownObjectRelease();
    }
    while (v3 != v6);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10037033C()
{
  return type metadata accessor for WidgetManager();
}

uint64_t sub_100370344(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1005FDB60);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WidgetNowPlayingInfo();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002717B4((uint64_t)v12);
  if (!_s8Podcasts20WidgetNowPlayingInfoV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v12, a1))
  {
    sub_10027592C();
    sub_1002742B0((uint64_t)v12, (uint64_t)v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    char v13 = sub_10027013C((uint64_t)v8);
    sub_100054B1C((uint64_t)v8, &qword_1005FDB60);
    if (v13)
    {
      static Logger.widget.getter();
      int64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        int64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int64_t v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "nowPlayingInfo changed enough to trigger refresh", v16, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      WidgetNowPlayingInfo.logInfo()();
      sub_100033908();
    }
  }
  sub_10003CC7C(a1, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  return sub_10003CC7C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
}

uint64_t sub_100370600@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v93 = a4;
  double v8 = *(double *)a3;
  double v10 = *(double *)(a3 + 24);
  double v9 = *(double *)(a3 + 32);
  uint64_t v82 = a3;
  float v11 = *(float *)(a3 + 40);
  uint64_t v12 = sub_100054B78(&qword_100605858);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v81 = (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v83 = (char *)&v80 - v15;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100054B78(&qword_1005F5D20);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v87 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v88 = (char *)&v80 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v80 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v80 = (char *)&v80 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v92 = (uint64_t)&v80 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v34 = (char *)&v80 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v91 = (uint64_t)&v80 - v36;
  __chkstk_darwin(v35);
  uint64_t v94 = (uint64_t)&v80 - v37;
  id v38 = a2;
  uint64_t v39 = MPModelObject.uuid.getter();
  uint64_t v41 = v40;

  *a5 = v39;
  a5[1] = v41;
  *((unsigned char *)a5 + 16) = a1;
  if (v11 <= 0.0)
  {
    static Date.timeIntervalSinceReferenceDate.getter();
    double v47 = v9 + (v46 - v8) * v11;
    if (v47 >= v10) {
      double v47 = v10;
    }
    double v45 = v10 - fmax(v47, 0.0);
  }
  else
  {
    double v42 = v11;
    static Date.timeIntervalSinceReferenceDate.getter();
    double v44 = v9 + (v43 - v8) * v42;
    if (v44 >= v10) {
      double v44 = v10;
    }
    double v45 = (v10 - fmax(v44, 0.0)) / v42;
    double v10 = v10 / v42;
  }
  LODWORD(v89) = a1;
  uint64_t v90 = v17;
  if ((a1 & 1) == 0 || (v45 > 0.0 ? (BOOL v48 = v45 > v10) : (BOOL v48 = 1), v48))
  {
    uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    unint64_t v51 = (v17 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v50(v94, 1, 1, v16);
    uint64_t v52 = v91;
    v50(v91, 1, 1, v16);
  }
  else
  {
    Date.init()();
    Date.addingTimeInterval(_:)();
    uint64_t v85 = a5;
    char v86 = v27;
    uint64_t v49 = *(void (**)(char *, uint64_t))(v17 + 8);
    v49(v19, v16);
    uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v50((uint64_t)v34, 0, 1, v16);
    sub_100053820((uint64_t)v34, v94, &qword_1005F5D20);
    Date.init()();
    Date.addingTimeInterval(_:)();
    unint64_t v51 = (v17 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v49(v19, v16);
    a5 = v85;
    uint64_t v27 = v86;
    v50((uint64_t)v34, 0, 1, v16);
    uint64_t v52 = v91;
    sub_100053820((uint64_t)v34, v91, &qword_1005F5D20);
  }
  uint64_t v53 = v92;
  unint64_t v84 = v51;
  v50(v92, 1, 1, v16);
  uint64_t v85 = (uint64_t *)v50;
  if (v89)
  {

    sub_100054B1C(v93, &qword_100605858);
    uint64_t v54 = v90;
LABEL_21:
    uint64_t v65 = (uint64_t)v87;
    uint64_t v64 = (uint64_t)v88;
    goto LABEL_41;
  }
  id v55 = v38;
  MPModelObject.uuid.getter();
  uint64_t v57 = v56;

  swift_bridgeObjectRelease();
  uint64_t v54 = v90;
  if (!v57)
  {

    sub_100054B1C(v93, &qword_100605858);
    goto LABEL_21;
  }
  long long v58 = v83;
  sub_100054BBC(v93, (uint64_t)v83, &qword_100605858);
  uint64_t v59 = sub_100054B78(&qword_100605850);
  long long v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48);
  unsigned int v61 = v60(v58, 1, v59);
  char v86 = v27;
  uint64_t v89 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v60;
  if (v61 == 1)
  {
    sub_100054B1C((uint64_t)v58, &qword_100605858);
    uint64_t v62 = 0;
    uint64_t v63 = 0;
  }
  else
  {
    uint64_t v62 = *(void *)v58;
    uint64_t v63 = *((void *)v58 + 1);
    (*(void (**)(char *, uint64_t))(v54 + 8))(&v58[*(int *)(v59 + 48)], v16);
  }
  id v66 = v55;
  uint64_t v67 = MPModelObject.uuid.getter();
  uint64_t v69 = v68;

  if (!v63)
  {
    uint64_t v65 = (uint64_t)v87;
    uint64_t v64 = (uint64_t)v88;
    if (!v69) {
      goto LABEL_32;
    }

    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  if (!v69)
  {

    swift_bridgeObjectRelease();
    uint64_t v27 = v86;
    uint64_t v65 = (uint64_t)v87;
    uint64_t v64 = (uint64_t)v88;
LABEL_40:
    uint64_t v52 = v91;
    uint64_t v53 = v92;
    sub_100054B1C(v93, &qword_100605858);
    goto LABEL_41;
  }
  if (v62 == v67 && v63 == v69)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v65 = (uint64_t)v87;
    uint64_t v64 = (uint64_t)v88;
    goto LABEL_32;
  }
  char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v65 = (uint64_t)v87;
  uint64_t v64 = (uint64_t)v88;
  if ((v70 & 1) == 0)
  {

LABEL_39:
    uint64_t v27 = v86;
    goto LABEL_40;
  }
LABEL_32:
  if (MPCPlayerItemDurationSnapshot.isConsideredPlayed.getter())
  {

    sub_100054B1C(v93, &qword_100605858);
    uint64_t v27 = v86;
    uint64_t v52 = v91;
    uint64_t v53 = v92;
  }
  else
  {
    uint64_t v71 = v93;
    uint64_t v72 = v81;
    sub_100054BBC(v93, v81, &qword_100605858);
    if (v89(v72, 1, v59) == 1)
    {

      sub_100054B1C(v71, &qword_100605858);
      uint64_t v53 = v92;
      sub_100054B1C(v92, &qword_1005F5D20);
      sub_100054B1C(v72, &qword_100605858);
      uint64_t v73 = 1;
      uint64_t v27 = v86;
      uint64_t v52 = v91;
      uint64_t v74 = (uint64_t)v80;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = v72 + *(int *)(v59 + 48);
      uint64_t v74 = (uint64_t)v80;
      Date.addingTimeInterval(_:)();

      sub_100054B1C(v71, &qword_100605858);
      uint64_t v53 = v92;
      sub_100054B1C(v92, &qword_1005F5D20);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v75, v16);
      uint64_t v73 = 0;
      uint64_t v27 = v86;
      uint64_t v52 = v91;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v85)(v74, v73, 1, v16);
    sub_100053820(v74, v53, &qword_1005F5D20);
  }
LABEL_41:
  unsigned int v76 = (int *)type metadata accessor for WidgetNowPlayingInfo();
  sub_100053820(v94, (uint64_t)a5 + v76[6], &qword_1005F5D20);
  sub_100054BBC(v52, (uint64_t)a5 + v76[7], &qword_1005F5D20);
  sub_100053820(v53, v64, &qword_1005F5D20);
  sub_100053820(v52, v65, &qword_1005F5D20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v64, 1, v16) == 1)
  {
    sub_100053820(v65, (uint64_t)v27, &qword_1005F5D20);
    sub_100054B1C(v64, &qword_1005F5D20);
  }
  else
  {
    sub_100054B1C(v65, &qword_1005F5D20);
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v27, v64, v16);
    ((void (*)(char *, void, uint64_t, uint64_t))v85)(v27, 0, 1, v16);
  }
  uint64_t result = sub_100053820((uint64_t)v27, (uint64_t)a5 + v76[10], &qword_1005F5D20);
  uint64_t v78 = (double *)((char *)a5 + v76[8]);
  *uint64_t v78 = v45;
  *((unsigned char *)v78 + 8) = 0;
  uint64_t v79 = (double *)((char *)a5 + v76[9]);
  double *v79 = v10;
  *((unsigned char *)v79 + 8) = 0;
  return result;
}

id sub_100370EEC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_100371090(a1, (uint64_t)sub_1003731FC, (uint64_t)sub_100373360, a2);
}

id sub_100370F28@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_100371090(a1, (uint64_t)sub_100373330, (uint64_t)sub_100373360, a2);
}

id sub_100370F64@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_100371090(a1, (uint64_t)sub_100373330, (uint64_t)sub_100373360, a2);
}

id sub_100370FA0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_100371090(a1, (uint64_t)sub_100373330, (uint64_t)sub_100373360, a2);
}

id sub_100370FDC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_100371090(a1, (uint64_t)sub_100373330, (uint64_t)sub_100373360, a2);
}

id sub_100371018@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_100371090(a1, (uint64_t)sub_100373330, (uint64_t)sub_100373360, a2);
}

id sub_100371054@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_100371090(a1, (uint64_t)sub_10037319C, (uint64_t)sub_10004A018, a2);
}

id sub_100371090@<X0>(id *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, void *a4@<X8>)
{
  id v10 = *a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v10;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = v7;
  *a4 = a3;
  a4[1] = v8;

  return v10;
}

id sub_100371124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self defaultCenter];
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  float v11 = (void *)swift_allocObject();
  long long v11[2] = a1;
  v11[3] = a2;
  void v11[4] = v10;
  v11[5] = a3;
  void v11[6] = a4;
  void v16[4] = sub_100373140;
  v16[5] = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  _OWORD v16[2] = sub_10000AEC8;
  void v16[3] = &unk_100564DA8;
  uint64_t v12 = _Block_copy(v16);
  id v13 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id v14 = [v9 addObserverForName:v13 object:0 queue:0 usingBlock:v12];
  _Block_release(v12);

  return v14;
}

uint64_t sub_1003712B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = a4;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v38 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  __chkstk_darwin(v12);
  uint64_t v35 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.widget.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v32 = a6;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v31 = a5;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v33 = v10;
    aBlock[0] = v22;
    uint64_t v30 = v14;
    *(_DWORD *)uint64_t v21 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10004B974(a2, a3, aBlock);
    a6 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Observed %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v10 = v33;
    swift_slowDealloc();
    a5 = v31;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v30);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v23 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v34;
  void v24[3] = a5;
  v24[4] = a6;
  aBlock[4] = (uint64_t)sub_100373190;
  aBlock[5] = (uint64_t)v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003B424;
  uint64_t aBlock[3] = (uint64_t)&unk_100564DF8;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v26 = v35;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10004AE9C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  uint64_t v27 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v26, v37);
}

uint64_t sub_1003717A4(uint64_t a1, uint64_t (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = (void (*)(void))a2();
    v5();

    return swift_release();
  }
  return result;
}

uint64_t sub_100371820(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_100373058;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100564D08;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004AE9C((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v14);
}

void sub_100371AEC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100371B44(0);
  }
}

void sub_100371B44(int a1)
{
  LODWORD(v122) = a1;
  uint64_t v2 = type metadata accessor for WidgetNowPlayingInfo();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_100605858);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v113 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v112 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v112 - v11);
  uint64_t v126 = type metadata accessor for Date();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  char v115 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78(&qword_1005F5D20);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v124 = (uint64_t)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v123 = (uint64_t)&v112 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v112 = (char *)&v112 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v130 = (uint64_t)&v112 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  char v114 = (char *)&v112 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v131 = (uint64_t)&v112 - v26;
  __chkstk_darwin(v25);
  uint64_t v133 = (uint64_t)&v112 - v27;
  uint64_t v118 = type metadata accessor for Logger();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v29 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = OBJC_IVAR____TtC8Podcasts13WidgetManager_playerController;
  uint64_t v31 = *(void **)(v1 + OBJC_IVAR____TtC8Podcasts13WidgetManager_playerController);
  if (!v31)
  {
    __break(1u);
    goto LABEL_58;
  }
  id v32 = [v31 player];
  id v33 = [v32 currentItem];

  unint64_t v116 = (uint64_t *)v10;
  if (!v33) {
    goto LABEL_9;
  }
  self;
  uint64_t v34 = (void *)swift_dynamicCastObjCClass();
  if (!v34)
  {

LABEL_9:
    uint64_t v119 = 0;
    uint64_t v127 = 0;
    id v35 = 0;
    goto LABEL_10;
  }
  id v35 = [v34 episode];

  if (v35 && (id v36 = [v35 uuid]) != 0)
  {
    uint64_t v37 = v36;
    uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v127 = v38;
  }
  else
  {
    uint64_t v119 = 0;
    uint64_t v127 = 0;
  }
LABEL_10:
  uint64_t v39 = *(void **)(v1 + v30);
  if (!v39)
  {
LABEL_58:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_59;
  }
  id v40 = [v39 player];
  id v128 = [v40 state];

  uint64_t v41 = *(void **)(v1 + v30);
  if (!v41)
  {
LABEL_59:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_60:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_61;
  }
  id v42 = [v41 player];
  [v42 duration];
  double v44 = v43;

  if (v44 > 0.0) {
    double v45 = v44;
  }
  else {
    double v45 = 0.0;
  }
  double v136 = v45;
  double v46 = *(void **)(v1 + v30);
  if (!v46) {
    goto LABEL_60;
  }
  id v47 = [v46 player];
  [v47 duration];
  double v49 = v48;

  uint64_t v50 = *(void **)(v1 + v30);
  if (!v50)
  {
LABEL_61:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_62:
    swift_bridgeObjectRelease();
    __break(1u);
    return;
  }
  id v51 = [v50 player];
  [v51 currentTime];
  double v53 = v52;

  if (v49 - v53 > 0.0) {
    double v54 = v49 - v53;
  }
  else {
    double v54 = 0.0;
  }
  double v135 = v54;
  id v55 = *(void **)(v1 + v30);
  if (!v55) {
    goto LABEL_62;
  }
  id v56 = [v55 player];
  id v57 = [v56 playbackSpeed];

  if (v57)
  {
    [self rateForPlaybackSpeed:v57];
    double v59 = 1.0 / v58;
    double v54 = v54 * v59;
    double v45 = v45 * v59;
    double v135 = v54;
    double v136 = v45;
  }
  uint64_t v60 = v131;
  id v132 = v35;
  char v120 = v4;
  uint64_t v129 = v1;
  unint64_t v121 = (int *)v2;
  if (v122)
  {
    static Logger.widget.getter();
    unsigned int v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      BOOL v63 = v128 == (id)1;
      uint64_t v64 = swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 67109888;
      LODWORD(v134) = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v64 + 8) = 2048;
      double v134 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v64 + 18) = 2048;
      double v134 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v64 + 28) = 2048;
      double v134 = *(double *)&v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "playerDidChange update: isPlaying %{BOOL}d, duration %f, timeRemaining %f, speed %lu", (uint8_t *)v64, 0x26u);
      uint64_t v60 = v131;
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v117 + 8))(v29, v118);
  }
  id v65 = v128;
  if (v128 == (id)1)
  {
    swift_beginAccess();
    double v66 = v135;
    if (v135 > 0.0)
    {
      swift_beginAccess();
      if (v66 <= v136)
      {
        uint64_t v74 = v115;
        Date.init()();
        uint64_t v75 = (uint64_t)v114;
        Date.addingTimeInterval(_:)();
        uint64_t v76 = v125;
        id v77 = *(void (**)(char *, uint64_t))(v125 + 8);
        uint64_t v78 = v126;
        v77(v74, v126);
        uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
        v79(v75, 0, 1, v78);
        sub_100053820(v75, v133, &qword_1005F5D20);
        Date.init()();
        Date.addingTimeInterval(_:)();
        v77(v74, v78);
        id v65 = v128;
        uint64_t v60 = v131;
        v79(v75, 0, 1, v78);
        sub_100053820(v75, v60, &qword_1005F5D20);
        uint64_t v69 = v130;
        v79(v130, 1, 1, v78);
        goto LABEL_35;
      }
    }
  }
  uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56);
  uint64_t v68 = v126;
  v67(v133, 1, 1, v126);
  v67(v60, 1, 1, v68);
  uint64_t v69 = v130;
  v67(v130, 1, 1, v68);
  if (v65 == (id)1)
  {
LABEL_35:
    uint64_t v80 = sub_100054B78(&qword_100605850);
    uint64_t v81 = v127;
    uint64_t *v12 = v119;
    v12[1] = v81;
    Date.init()();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v12, 0, 1, v80);
    uint64_t v82 = v129 + OBJC_IVAR____TtC8Podcasts13WidgetManager_lastPlayedInfo;
    swift_beginAccess();
    sub_100372F40((uint64_t)v12, v82);
    swift_endAccess();
    sub_100054B1C(v69, &qword_1005F5D20);
    sub_100054BBC(v60, v69, &qword_1005F5D20);
    goto LABEL_36;
  }
  if (!v127) {
    goto LABEL_36;
  }
  uint64_t v70 = v129 + OBJC_IVAR____TtC8Podcasts13WidgetManager_lastPlayedInfo;
  swift_beginAccess();
  uint64_t v71 = v116;
  sub_100054BBC(v70, (uint64_t)v116, &qword_100605858);
  uint64_t v72 = sub_100054B78(&qword_100605850);
  uint64_t v73 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48);
  if (v73(v71, 1, v72))
  {
    sub_100054B1C((uint64_t)v71, &qword_100605858);
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  id v122 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v73;
  uint64_t v99 = *v71;
  uint64_t v100 = v71[1];
  swift_bridgeObjectRetain();
  sub_100054B1C((uint64_t)v71, &qword_100605858);
  if (!v100)
  {
    swift_bridgeObjectRelease();
    uint64_t v60 = v131;
    goto LABEL_36;
  }
  if (v99 == v119 && v100 == v127)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = v131;
    id v101 = v122;
  }
  else
  {
    LODWORD(v119) = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = v131;
    id v101 = v122;
    if ((v119 & 1) == 0) {
      goto LABEL_36;
    }
  }
  id v102 = v132;
  if (v132 && ![v132 playState])
  {
    id v83 = v102;
    id v65 = v128;
    goto LABEL_37;
  }
  uint64_t v103 = v70;
  uint64_t v104 = v113;
  sub_100054BBC(v103, v113, &qword_100605858);
  if (v101(v104, 1, v72))
  {
    sub_100054B1C(v69, &qword_1005F5D20);
    sub_100054B1C(v104, &qword_100605858);
    uint64_t v105 = 1;
    uint64_t v106 = v126;
    uint64_t v107 = (uint64_t)v112;
  }
  else
  {
    uint64_t v108 = v104 + *(int *)(v72 + 48);
    uint64_t v109 = v125;
    uint64_t v110 = v104;
    id v111 = v115;
    uint64_t v106 = v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v115, v108, v126);
    sub_100054B1C(v110, &qword_100605858);
    uint64_t v107 = (uint64_t)v112;
    Date.addingTimeInterval(_:)();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v111, v106);
    sub_100054B1C(v69, &qword_1005F5D20);
    uint64_t v105 = 0;
  }
  v67(v107, v105, 1, v106);
  sub_100053820(v107, v69, &qword_1005F5D20);
  id v65 = v128;
LABEL_36:
  id v83 = v132;
  if (!v132)
  {
LABEL_39:
    id v128 = 0;
    uint64_t v127 = 0;
    goto LABEL_40;
  }
LABEL_37:
  id v84 = [v83 uuid];
  id v132 = v83;
  if (!v84) {
    goto LABEL_39;
  }
  uint64_t v85 = v84;
  id v128 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v127 = v86;

LABEL_40:
  BOOL v87 = v65 == (id)1;
  uint64_t v88 = v123;
  sub_100054BBC(v133, v123, &qword_1005F5D20);
  uint64_t v89 = v124;
  sub_100054BBC(v60, v124, &qword_1005F5D20);
  swift_beginAccess();
  BOOL v90 = v135 <= 0.0;
  if (v135 > 0.0) {
    double v91 = v135;
  }
  else {
    double v91 = 0.0;
  }
  swift_beginAccess();
  double v92 = v136;
  uint64_t v93 = v121;
  uint64_t v94 = (uint64_t)v120;
  uint64_t v95 = v130;
  sub_100054BBC(v130, (uint64_t)&v120[v121[10]], &qword_1005F5D20);
  uint64_t v96 = v127;
  *(void *)uint64_t v94 = v128;
  *(void *)(v94 + 8) = v96;
  *(unsigned char *)(v94 + 16) = v87;
  sub_100053820(v88, v94 + v93[6], &qword_1005F5D20);
  sub_100053820(v89, v94 + v93[7], &qword_1005F5D20);
  uint64_t v97 = v94 + v93[8];
  *(double *)uint64_t v97 = v91;
  *(unsigned char *)(v97 + 8) = v90;
  uint64_t v98 = v94 + v93[9];
  *(double *)uint64_t v98 = v92;
  *(unsigned char *)(v98 + 8) = 0;
  sub_100370344(v94);
  sub_100054B1C(v95, &qword_1005F5D20);
  sub_100054B1C(v131, &qword_1005F5D20);
  sub_100054B1C(v133, &qword_1005F5D20);
}

uint64_t sub_100372A14()
{
  unint64_t v0 = (int *)type metadata accessor for WidgetNowPlayingInfo();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.widget.getter();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "App is quiting", v9, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v10 = &v2[v0[6]];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(&v2[v0[7]], 1, 1, v11);
  v12(&v2[v0[10]], 1, 1, v11);
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 0;
  uint64_t v13 = &v2[v0[8]];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  uint64_t v14 = &v2[v0[9]];
  *(void *)uint64_t v14 = 0;
  v14[8] = 1;
  sub_100370344((uint64_t)v2);
  return sub_10003B830();
}

uint64_t sub_100372CA0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void *sub_100372CD0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t (*(*)(uint64_t a1))(), uint64_t))
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t result = (void *)sub_1003D08C4(v2);
    uint64_t v6 = (uint64_t)result;
    uint64_t v7 = 0;
    uint64_t v8 = v2 + 64;
    uint64_t v21 = v2 + 80;
    int v22 = v5;
    uint64_t v23 = v2;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v2 + 32))
    {
      unint64_t v10 = (unint64_t)v6 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(v2 + 36) != v5) {
        goto LABEL_23;
      }
      uint64_t v25 = v7;
      uint64_t v11 = *(void *)(v2 + 56);
      uint64_t v12 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = *(_OWORD *)(v11 + 16 * v6);
      swift_retain_n();
      swift_bridgeObjectRetain();
      a2(v14, v13, sub_100373060, v15);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      uint64_t v2 = v23;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = (void *)specialized ContiguousArray._endMutation()();
      int64_t v9 = 1 << *(unsigned char *)(v23 + 32);
      if (v6 >= v9) {
        goto LABEL_24;
      }
      uint64_t v16 = *(void *)(v8 + 8 * v10);
      if ((v16 & (1 << v6)) == 0) {
        goto LABEL_25;
      }
      int v5 = v22;
      if (*(_DWORD *)(v23 + 36) != v22) {
        goto LABEL_26;
      }
      unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
      if (v17)
      {
        int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v18 = v10 + 1;
        unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v19)
        {
          unint64_t v20 = *(void *)(v8 + 8 * v18);
          if (v20)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
          }
          else
          {
            while (v19 - 2 != v10)
            {
              unint64_t v20 = *(void *)(v21 + 8 * v10++);
              if (v20)
              {
                unint64_t v18 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v25 + 1;
      uint64_t v6 = v9;
      if (v25 + 1 == v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_100372F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_100605858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100372FA8()
{
  return swift_deallocObject();
}

id sub_100372FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100371124(a1, a2, a3, a4);
}

uint64_t sub_100372FE8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100373020(uint64_t a1)
{
  return sub_100371820(a1, v1);
}

void sub_100373028(uint64_t a1)
{
  sub_1000068C8(a1, v1, (void (*)(void))sub_100372A14);
}

void sub_100373058()
{
}

uint64_t (*sub_100373060(uint64_t a1))()
{
  void (*v2)(long long *__return_ptr, uint64_t *);
  long long v4;
  uint64_t v5;

  uint64_t v2 = *(void (**)(long long *__return_ptr, uint64_t *))(v1 + 16);
  int v5 = a1;
  v2(&v4, &v5);
  *(_OWORD *)(swift_allocObject() + 16) = v4;
  return sub_1003730D0;
}

uint64_t sub_1003730D0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1003730F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100373140(uint64_t a1)
{
  return sub_1003712B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100373150()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100373190()
{
  return sub_1003717A4(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

void sub_10037319C()
{
}

uint64_t sub_1003731C4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003731FC()
{
  return sub_100033908();
}

void sub_100373220(uint64_t a1)
{
  sub_1000068C8(a1, v1, (void (*)(void))sub_100033908);
}

void sub_100373250()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Podcasts13WidgetManager_waitToReloadUntilSave) = 1;
}

uint64_t sub_100373268()
{
  return swift_deallocObject();
}

uint64_t sub_100373278()
{
  sub_10004D2D8(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1003732B0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100373364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ShowOffer();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  int64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v26 - v12;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v26 - v14;
  if (a1)
  {
    uint64_t v16 = a1 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess();
    sub_1001AC690(v16, (uint64_t)v13);
    sub_1001AC6F4((uint64_t)v13, (uint64_t)v15);
    sub_1001AC690((uint64_t)v15, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
      ShowOffer.storeUrl.getter();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return sub_1001AC758((uint64_t)v15);
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v20 = (void *)sub_100241558();
      if (v20)
      {
        uint64_t v21 = v20;
        id v22 = [v20 shareURL];

        if (v22)
        {
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          sub_1001AC758((uint64_t)v15);
          uint64_t v23 = type metadata accessor for URL();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 0, 1, v23);
        }
        else
        {
          sub_1001AC758((uint64_t)v15);
          uint64_t v25 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
        }
        return sub_100222DB4((uint64_t)v9, a2);
      }
      else
      {
        sub_1001AC758((uint64_t)v15);
        uint64_t v24 = type metadata accessor for URL();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 1, 1, v24);
      }
    }
  }
  else
  {
    uint64_t v18 = type metadata accessor for URL();
    unint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    return v19(a2, 1, 1, v18);
  }
}

uint64_t sub_100373738()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_shareLink;
  swift_beginAccess();
  sub_10003B19C(v7, (uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_100222D54((uint64_t)v2);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v9 = [self generalPasteboard];
  URL.absoluteString.getter();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setString:v10];

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100373920()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100222D54(v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_shareLink);

  return swift_deallocClassInstance();
}

uint64_t sub_1003739E8()
{
  return type metadata accessor for CopyLinkPodcastContextAction();
}

uint64_t type metadata accessor for CopyLinkPodcastContextAction()
{
  uint64_t result = qword_1006059B0;
  if (!qword_1006059B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100373A3C()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_10000927C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100373B2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100373BA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.copyPodcastLink(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

BOOL sub_100373C78()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_shareLink;
  swift_beginAccess();
  sub_10003B19C(v3, (uint64_t)v2);
  uint64_t v4 = type metadata accessor for URL();
  BOOL v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4) != 1;
  sub_100222D54((uint64_t)v2);
  return v5;
}

uint64_t sub_100373D64()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = swift_retain();
  sub_100373364(v3, (uint64_t)v2);
  swift_release();
  uint64_t v4 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_shareLink;
  swift_beginAccess();
  sub_100222E1C((uint64_t)v2, v4);
  return swift_endAccess();
}

uint64_t sub_100373E28(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

void *sub_100373E88(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_100373EE8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_100373F48(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_100373FA8(uint64_t a1)
{
  uint64_t result = sub_100374030(&qword_100605AD8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100373FEC(uint64_t a1)
{
  uint64_t result = sub_100374030(&qword_100605AE0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100374030(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CopyLinkPodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100374074()
{
  uint64_t v1 = v0;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  id v2 = [self defaultManager];
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_file);
  uint64_t v4 = v3;
  id v15 = 0;
  unsigned int v5 = [v2 removeItemAtURL:v3 error:&v15];

  if (v5)
  {
    id v6 = v15;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:_:_:)();
    uint64_t v7 = *(void (**)(id *))(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
    if (v7)
    {
      uint64_t v17 = sub_100054B78(&qword_100607FD0);
      id v15 = 0;
      char v16 = 0;
      swift_retain();
      v7(&v15);
      sub_1000536BC((uint64_t)v7);
      sub_10004D2D8((uint64_t)&v15);
    }
    sub_100049E74();
  }
  else
  {
    id v8 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static os_log_type_t.error.getter();
    sub_1001C0DD4();
    id v9 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10046D010;
    swift_getErrorValue();
    uint64_t v11 = Error.localizedDescription.getter();
    uint64_t v13 = v12;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_10004DA4C();
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(id *))(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
    if (v14)
    {
      uint64_t v17 = sub_100054B78(&qword_100607FD0);
      id v15 = 0;
      char v16 = 0;
      swift_retain();
      v14(&v15);
      sub_1000536BC((uint64_t)v14);
      sub_10004D2D8((uint64_t)&v15);
    }
    sub_100049E74();
    swift_errorRelease();
  }
}

uint64_t sub_100374388()
{
  sub_100050358(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_input), *(unsigned char *)(v0 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_input + 8));

  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_file;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1003744B4()
{
  return type metadata accessor for DeleteFileOperation();
}

uint64_t type metadata accessor for DeleteFileOperation()
{
  uint64_t result = qword_100605B30;
  if (!qword_100605B30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100374508()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003745B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_input;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_input);
  *(void *)a1 = v3;
  char v4 = *(unsigned char *)(v2 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  return sub_10005036C(v3, v4);
}

BOOL sub_1003745D8()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
  swift_beginAccess();
  sub_100054BBC(v3, (uint64_t)v2, (uint64_t *)&unk_1005F7750);
  uint64_t v4 = type metadata accessor for URL();
  BOOL v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4) != 1;
  sub_100054B1C((uint64_t)v2, (uint64_t *)&unk_1005F7750);
  return v5;
}

id sub_1003746D4()
{
  sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = sub_100374888(0);
  if (result)
  {
    uint64_t v4 = result;
    swift_beginAccess();
    if (*(void *)(v0 + 16))
    {
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
      swift_release();
      uint64_t v5 = type metadata accessor for PresentationSource();
      uint64_t v6 = *(void *)(v5 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
      {
        PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)();

        return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v2, v5);
      }
    }
    else
    {
      uint64_t v7 = type metadata accessor for PresentationSource();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
    }

    return (id)sub_100054B1C((uint64_t)v2, (uint64_t *)&unk_100605DC0);
  }
  return result;
}

id sub_100374888(uint64_t a1)
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin();
  uint64_t v11 = (char *)v38 - v10;
  id v12 = 0;
  if ((*(uint64_t (**)(uint64_t))(*(void *)v1 + 272))(v9))
  {
    uint64_t v13 = v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
    swift_beginAccess();
    sub_100054BBC(v13, (uint64_t)v4, (uint64_t *)&unk_1005F7750);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100054B1C((uint64_t)v4, (uint64_t *)&unk_1005F7750);
      return 0;
    }
    else
    {
      uint64_t v42 = a1;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v14(v8, v11, v5);
      uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle);
      uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle + 8);
      swift_bridgeObjectRetain();
      id v17 = sub_100375E90((uint64_t)v8, v15, v16);
      uint64_t v40 = v5;
      uint64_t v41 = v6;
      uint64_t v39 = v11;
      if (v17)
      {
        id v18 = v17;
        sub_100054B78(&qword_1005F8130);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_10046D010;
        *(void *)(v19 + 56) = type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
        *(void *)(v19 + 32) = v18;
      }
      else
      {
        sub_100054B78(&qword_1005F8130);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_10046D010;
        *(void *)(v20 + 56) = v5;
        uint64_t v21 = sub_10004A244((uint64_t *)(v20 + 32));
        v14((char *)v21, v11, v5);
      }
      v38[2] = type metadata accessor for ShareOtherContextAction(0);
      v38[1] = sub_10037611C(&qword_100605DD0);
      ShareAction.applicationActivities.getter();
      id v22 = objc_allocWithZone((Class)UIActivityViewController);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      sub_100376160();
      Class v24 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v12 = [v22 initWithActivityItems:isa applicationActivities:v24];

      sub_100054B78((uint64_t *)&unk_100600640);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_10046F080;
      *(void *)(v25 + 32) = UIActivityTypePrint;
      *(void *)(v25 + 40) = UIActivityTypeAssignToContact;
      *(void *)(v25 + 48) = UIActivityTypeAddToReadingList;
      *(void *)(v25 + 56) = UIActivityTypePostToFlickr;
      *(void *)(v25 + 64) = UIActivityTypePostToVimeo;
      *(void *)(v25 + 72) = UIActivityTypeSaveToCameraRoll;
      uint64_t v26 = (void *)UIActivityTypeCreateReminder;
      *(void *)(v25 + 80) = UIActivityTypeCreateReminder;
      *(void *)(v25 + 88) = UIActivityTypeCopyToPasteboard;
      uint64_t v27 = UIActivityTypePrint;
      uint64_t v28 = UIActivityTypeAssignToContact;
      uint64_t v29 = UIActivityTypeAddToReadingList;
      uint64_t v30 = UIActivityTypePostToFlickr;
      uint64_t v31 = UIActivityTypePostToVimeo;
      id v32 = UIActivityTypeSaveToCameraRoll;
      id v33 = v26;
      uint64_t v34 = UIActivityTypeCopyToPasteboard;
      *(void *)(v25 + 96) = String._bridgeToObjectiveC()();
      type metadata accessor for ActivityType(0);
      Class v35 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v12 setExcludedActivityTypes:v35];

      id v36 = v12;
      ShareAction.prepareShareController(_:sharingStyle:)();

      (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
    }
  }
  return v12;
}

id sub_100374D64()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin();
  uint64_t v9 = (char *)&v23 - v8;
  id v10 = 0;
  if ((*(uint64_t (**)(uint64_t))(*(void *)v0 + 272))(v7))
  {
    uint64_t v11 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
    swift_beginAccess();
    sub_100054BBC(v11, (uint64_t)v2, (uint64_t *)&unk_1005F7750);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_100054B1C((uint64_t)v2, (uint64_t *)&unk_1005F7750);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
    id v12 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle);
    uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle + 8);
    if (v13)
    {
      uint64_t v14 = *v12;
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      v15(v6, v9, v3);
      swift_bridgeObjectRetain();
      id v16 = sub_100375E90((uint64_t)v6, v14, v13);
      if (v16) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    }
    v15(v6, v9, v3);
    id v16 = sub_100375E90((uint64_t)v6, 0, 0xE000000000000000);
    if (!v16)
    {
      id v10 = 0;
      goto LABEL_11;
    }
LABEL_9:
    id v17 = v16;
    id v18 = self;
    sub_100054B78(&qword_1005F8130);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10046D010;
    *(void *)(v19 + 56) = type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
    *(void *)(v19 + 32) = v17;
    id v20 = v17;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v10 = [v18 mt_configurationWithActivityItems:isa];

LABEL_11:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v10;
}

uint64_t sub_100375098()
{
  sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v19 - v3;
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_100600600);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  if (*(void *)(v0 + 16))
  {
    type metadata accessor for OtherContextActionConfiguration(0);
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      uint64_t v13 = (uint64_t *)(result + qword_10061AA78 + *(int *)(v5 + 48));
      (*(void (**)(char *))(v9 + 16))(v7);
      uint64_t v14 = *v13;
      uint64_t v15 = v13[1];
      uint64_t v20 = v14;
      id v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v16(v11, v7, v8);
      v16(v4, v11, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
      sub_100222DB4((uint64_t)v4, (uint64_t)v2);
      uint64_t v17 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_100222E1C((uint64_t)v2, v17);
      swift_endAccess();
      id v18 = (void *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle);
      void *v18 = v20;
      v18[1] = v15;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100375338()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0xAC000000A680E24CLL;
  v1._uint64_t countAndFlagsBits = 0xA680E26572616853;
  v1._object = (void *)0xA800000000000000;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x5255206572616853;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}