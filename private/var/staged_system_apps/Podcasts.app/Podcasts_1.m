void sub_10017F1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void aBlock[6];

  v7 = type metadata accessor for DownloadJob(0);
  v8 = *(void *)(v7 - 8);
  v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  v10 = [self sharedInstance];
  v11 = [v10 privateQueueContext];

  sub_10018A620(a4, (uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DownloadJob);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  sub_10018CD14((uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for DownloadJob);
  v14 = (void *)(v13 + ((v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v14 = a2;
  v14[1] = a3;
  aBlock[4] = sub_10018D000;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  aBlock[3] = &unk_1005563C8;
  v15 = _Block_copy(aBlock);
  v16 = v11;
  swift_retain();
  swift_release();
  [v16 performBlock:v15];
  _Block_release(v15);
}

uint64_t sub_10017F3E0(void *a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v25 = a4;
  v26 = a3;
  uint64_t v24 = sub_100054B78(&qword_1005F6CD0);
  __chkstk_darwin(v24);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AssetLifetime();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NetworkTaskPriority();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78(&qword_1005F6D00);
  __chkstk_darwin(v15 - 8);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DownloadJob(0);
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [a1 episodeForUuid:v18];

  if (v19)
  {
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for NetworkTaskPriority.background(_:), v11);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for AssetLifetime.opportunistic(_:), v7);
    id v20 = v19;
    MTEpisode.transcriptRequest(priority:lifetime:)();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    uint64_t v21 = type metadata accessor for TranscriptRequest();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 1, 1, v21);
  }
  sub_100054BBC((uint64_t)v17, (uint64_t)v6, &qword_1005F6D00);
  swift_storeEnumTagMultiPayload();
  v26(v6);

  sub_100054B1C((uint64_t)v6, &qword_1005F6CD0);
  return sub_100054B1C((uint64_t)v17, &qword_1005F6D00);
}

uint64_t sub_10017F734@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v17 = a2;
  uint64_t v3 = type metadata accessor for TimeBombedTranscriptProvider();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1005F6D00);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptRequest();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a1, (uint64_t)v9, &qword_1005F6D00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    uint64_t result = sub_100054B1C((uint64_t)v9, &qword_1005F6D00);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    static TimeBombedTranscriptProvider.background.getter();
    TimeBombedTranscriptProvider.prefetch(request:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v15 = v17;
  void *v17 = 0;
  *((unsigned char *)v15 + 8) = 0;
  return result;
}

void sub_10017F980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DownloadJob(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = self;
  swift_retain();
  id v12 = [v11 sharedInstance];
  id v13 = [v12 privateQueueContext];

  sub_10018A620(a4, (uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DownloadJob);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = sub_10005CAE4;
  v15[3] = v10;
  v15[4] = v13;
  sub_10018CD14((uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v15 + v14, type metadata accessor for DownloadJob);
  aBlock[4] = sub_10018CCAC;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  aBlock[3] = &unk_100556378;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v13;
  swift_release();
  [v17 performBlock:v16];
  _Block_release(v16);
}

uint64_t sub_10017FBB8(uint64_t (*a1)(void *, void), uint64_t a2, void *a3)
{
  uint64_t v6 = sub_100054B78(&qword_1005F76A0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  v60 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  v59 = (char *)&v51 - v10;
  __chkstk_darwin(v9);
  id v12 = (char *)&v51 - v11;
  uint64_t v13 = type metadata accessor for ArtworkModel();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v53 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v54 = (uint64_t)&v51 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v57 = (uint64_t)&v51 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v58 = (uint64_t)&v51 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v51 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v51 - v26;
  type metadata accessor for DownloadJob(0);
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [a3 episodeForUuid:v28];

  if (!v29) {
    return a1(_swiftEmptyArrayStorage, 0);
  }
  uint64_t v55 = a2;
  MTEpisode.artworkModel.getter();
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v31 = v30(v12, 1, v13);
  uint64_t v56 = v14;
  if (v31 == 1)
  {
    sub_100054B1C((uint64_t)v12, &qword_1005F76A0);
    v32 = _swiftEmptyArrayStorage;
    v33 = (void (*)(void, void))a1;
    uint64_t v35 = (uint64_t)v59;
    uint64_t v34 = (uint64_t)v60;
  }
  else
  {
    v51 = v30;
    v52 = (void (*)(void, void))a1;
    sub_10018CD14((uint64_t)v12, (uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    sub_10018A620((uint64_t)v27, (uint64_t)v25, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    v32 = (void *)sub_1002EEF68(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v38 = v32[2];
    unint64_t v37 = v32[3];
    uint64_t v34 = (uint64_t)v60;
    if (v38 >= v37 >> 1) {
      v32 = (void *)sub_1002EEF68(v37 > 1, v38 + 1, 1, (unint64_t)v32);
    }
    uint64_t v35 = (uint64_t)v59;
    v32[2] = v38 + 1;
    sub_10018CD14((uint64_t)v25, (uint64_t)v32+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v38, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    sub_10018A5C0((uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    v30 = v51;
    v33 = v52;
  }
  id v39 = [v29 podcast];
  if (v39)
  {
    v40 = v39;
    MTEpisode.artworkModel.getter();
    if (v30((char *)v35, 1, v13) == 1)
    {
      sub_100054B1C(v35, &qword_1005F76A0);
    }
    else
    {
      uint64_t v42 = v58;
      sub_10018CD14(v35, v58, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      sub_10018A620(v42, v57, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      v43 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v32 = (void *)sub_1002EEF68(0, v32[2] + 1, 1, (unint64_t)v32);
      }
      unint64_t v45 = v32[2];
      unint64_t v44 = v32[3];
      if (v45 >= v44 >> 1) {
        v32 = (void *)sub_1002EEF68(v44 > 1, v45 + 1, 1, (unint64_t)v32);
      }
      v32[2] = v45 + 1;
      sub_10018CD14(v57, (uint64_t)v32+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v45, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      sub_10018A5C0(v58, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      v30 = v43;
    }
    MTPodcast.uberBackgroundArtworkModel.getter();
    if (v30((char *)v34, 1, v13) == 1)
    {

      sub_100054B1C(v34, &qword_1005F76A0);
    }
    else
    {
      v46 = v33;
      uint64_t v47 = v54;
      sub_10018CD14(v34, v54, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      uint64_t v48 = v53;
      sub_10018A620(v47, v53, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v32 = (void *)sub_1002EEF68(0, v32[2] + 1, 1, (unint64_t)v32);
      }
      unint64_t v50 = v32[2];
      unint64_t v49 = v32[3];
      if (v50 >= v49 >> 1) {
        v32 = (void *)sub_1002EEF68(v49 > 1, v50 + 1, 1, (unint64_t)v32);
      }
      v32[2] = v50 + 1;
      sub_10018CD14(v48, (uint64_t)v32+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v50, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);

      sub_10018A5C0(v47, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      v33 = v46;
    }
    uint64_t v41 = swift_bridgeObjectRetain();
  }
  else
  {

    uint64_t v41 = swift_bridgeObjectRetain();
  }
  v33(v41, 0);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100180268@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v43 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ArtworkRequest();
  unint64_t v37 = *(void (***)(char *, uint64_t))(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  id v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v40 = (char *)v32 - v13;
  uint64_t v14 = type metadata accessor for ArtworkModel();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14 - 8);
  unint64_t v45 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for LibraryImageProvider();
  uint64_t v35 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v18 = *a1;
  uint64_t v19 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static LibraryImageProvider.background.getter();
  uint64_t v20 = *(void *)(v18 + 16);
  if (v20)
  {
    uint64_t v33 = a2;
    uint64_t v34 = v3;
    unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v41 = v19;
    uint64_t v22 = v18 + v21;
    uint64_t v23 = *(void *)(v15 + 72);
    unint64_t v38 = (void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v39 = v23;
    ++v37;
    v32[1] = v18;
    swift_bridgeObjectRetain();
    v36 = v12;
    uint64_t v24 = (uint64_t)v45;
    uint64_t v25 = v12;
    uint64_t v26 = v40;
    v27 = v37;
    do
    {
      uint64_t v43 = v20;
      sub_10018A620(v22, v24, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      ArtworkModel.preferredRequest.getter();
      static Logger.artwork.getter();
      static os_log_type_t.info.getter();
      SignpostAndLogTrace(domain:level:)();
      (*v38)(v8, v6);
      Traceable.traced(by:)();
      sub_10004D2D8((uint64_t)v44);
      NSString v28 = v8;
      uint64_t v29 = v6;
      v30 = *v27;
      (*v27)(v25, v9);
      ImageProvider.prefetch(artwork:)();
      uint64_t v24 = (uint64_t)v45;
      v30(v26, v9);
      uint64_t v6 = v29;
      uint64_t v8 = v28;
      sub_10018A5C0(v24, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      v22 += v39;
      uint64_t v20 = v43 - 1;
    }
    while (v43 != 1);
    swift_bridgeObjectRelease();
    a2 = v33;
    uint64_t v19 = v41;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v42);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_10018066C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v38 = a6;
  uint64_t v39 = a7;
  uint64_t v36 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v36 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v36);
  uint64_t v34 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  uint64_t v14 = swift_allocObject();
  uint64_t v37 = v14;
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  uint64_t v15 = (uint64_t *)(a5 + *(int *)(type metadata accessor for DownloadJob(0) + 20));
  uint64_t v16 = v15[1];
  uint64_t v35 = *v15;
  v33[1] = v16;
  swift_retain();
  static Date.timeIntervalSinceReferenceDate.getter();
  uint64_t v18 = v17;
  uint64_t v19 = *(uint64_t (**)(uint64_t))(v13 + 16);
  uint64_t v20 = swift_retain();
  unint64_t v21 = (void *)v19(v20);
  swift_release();
  uint64_t v22 = v34;
  uint64_t v23 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v34, v38, v36);
  unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v25 = (v12 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = (char *)swift_allocObject();
  uint64_t v28 = v35;
  *((void *)v27 + 2) = v21;
  *((void *)v27 + 3) = v28;
  *((void *)v27 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v27[v24], v22, v23);
  *(void *)&v27[v25] = v18;
  uint64_t v29 = (uint64_t (**)(uint64_t, char))&v27[v26];
  v30 = (uint64_t (*)(uint64_t, char))v37;
  *uint64_t v29 = sub_10018AB30;
  v29[1] = v30;
  *(void *)&v27[(v26 + 23) & 0xFFFFFFFFFFFFFFF8] = v39;
  aBlock[4] = sub_10018C990;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  aBlock[3] = &unk_100556300;
  int v31 = _Block_copy(aBlock);
  id v32 = v21;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v32 performBlock:v31];
  _Block_release(v31);
  swift_release();
}

void sub_100180920(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a6;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = *a1;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  uint64_t v17 = (uint64_t *)(a5 + *(int *)(type metadata accessor for DownloadJob(0) + 20));
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  uint64_t v33 = v19;
  uint64_t v31 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v12);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v21 + v20, (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v22 = (uint64_t (**)(uint64_t, char))(v21 + ((v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v22 = sub_10018AB30;
  v22[1] = (uint64_t (*)(uint64_t, char))v16;
  uint64_t v23 = *(uint64_t (**)(uint64_t))(v15 + 16);
  swift_retain();
  swift_retain();
  uint64_t v24 = swift_retain();
  unint64_t v25 = (void *)v23(v24);
  swift_release();
  unint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = v33;
  v26[2] = v25;
  v26[3] = v27;
  v26[4] = v31;
  v26[5] = sub_10018C774;
  v26[6] = v21;
  aBlock[4] = sub_10018C81C;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  aBlock[3] = &unk_100556288;
  uint64_t v28 = _Block_copy(aBlock);
  id v29 = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v29 performBlock:v28];
  _Block_release(v28);
  swift_release();
}

uint64_t sub_100180BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  uint64_t v33 = a5;
  uint64_t v34 = a4;
  uint64_t v32 = a2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78(&qword_1005F6CF8);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100054BBC(a1, (uint64_t)v15, &qword_1005F6CF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = v6;
    uint64_t v16 = *v15;
    static Logger.downloads.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = v31;
    if (v19)
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v35 = v16;
      uint64_t v36 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      swift_errorRetain();
      uint64_t v23 = String.init<A>(describing:)();
      uint64_t v35 = sub_10004B974(v23, v24, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to fetch job asset URL for iPod library check: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v32);
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v12, v15, v9);
    uint64_t v25 = URL.path.getter();
    uint64_t v27 = v26;
    uint64_t v28 = URL.path.getter();
    sub_10018144C(v25, v27, v28, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v34(0, 0);
}

void sub_100180FA0(void (*a1)(char *)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F6CE8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v7 = (void *)static OS_os_log.downloads.getter();
  os_log(_:dso:log:_:_:)();

  id v8 = [self defaultCenter];
  [v8 postNotificationName:PFMediaDownloadDidCompleteNotification object:0];

  if (a1)
  {
    swift_storeEnumTagMultiPayload();
    a1(v6);
    sub_100054B1C((uint64_t)v6, &qword_1005F6CE8);
  }
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
}

uint64_t sub_100181118(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v25 = a3;
  uint64_t v24 = sub_100054B78(&qword_1005F6CE8);
  __chkstk_darwin(v24);
  uint64_t v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for MoveOperationError(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.error.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v11 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10046D010;
  swift_getErrorValue();
  uint64_t v13 = Error.localizedDescription.getter();
  uint64_t v15 = v14;
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_10004DA4C();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v26 = a1;
  swift_errorRetain();
  sub_100054B78(&qword_100603F70);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t result = sub_10018A5C0((uint64_t)v10, type metadata accessor for MoveOperationError);
    if (!a2) {
      return result;
    }
    uint64_t v17 = (char *)v7 + *(int *)(sub_100054B78(&qword_1005F6CF0) + 48);
    *uint64_t v7 = a1;
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  }
  else
  {
    uint64_t v19 = v23;
    if (!a2) {
      return result;
    }
    uint64_t v20 = (char *)v7 + *(int *)(sub_100054B78(&qword_1005F6CF0) + 48);
    *uint64_t v7 = a1;
    uint64_t v21 = type metadata accessor for URL();
    uint64_t v22 = *(void *)(v21 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, v19, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  }
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  a2(v7);
  return sub_100054B1C((uint64_t)v7, &qword_1005F6CE8);
}

uint64_t sub_10018144C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  __chkstk_darwin(v6);
  v40 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BugReportFrequency();
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  __chkstk_darwin(v8);
  uint64_t v43 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BugReport.Domain();
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v38 = (void *)v10;
  __chkstk_darwin(v10);
  uint64_t v39 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for BugReport.ErrorKind();
  uint64_t v12 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PodcastsSystem();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49[0] = a1;
  v49[1] = a2;
  strcpy((char *)v50, "ipod-library");
  BYTE5(v50[1]) = 0;
  HIWORD(v50[1]) = -5120;
  sub_10018B90C();
  sub_10018B960();
  uint64_t result = BidirectionalCollection<>.starts<A>(with:)();
  if (result)
  {
    uint64_t v20 = *(void **)(v46 + OBJC_IVAR____TtC8Podcasts11JobPipeline_analyticsChannel);
    type metadata accessor for AnalyticsEvent();
    swift_unknownObjectRetain();
    uint64_t v35 = a1;
    uint64_t v21 = a2;
    uint64_t v22 = (void *)static AnalyticsEvent.downloadedFileHasiPodLibraryURL(discoveryPoint:path:source:)();
    [v20 sendEvent:v22];
    swift_unknownObjectRelease();

    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for PodcastsSystem.downloads(_:), v15);
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for BugReport.ErrorKind.downloadediPodLibraryFile(_:), v36);
    (*(void (**)(char *, void, void *))(v37 + 104))(v39, enum case for BugReport.Domain.podcasts(_:), v38);
    id v23 = objc_allocWithZone((Class)type metadata accessor for BugReport());
    uint64_t v39 = (char *)BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)();
    sub_100056D54(v46 + OBJC_IVAR____TtC8Podcasts11JobPipeline_bugReporter, (uint64_t)v49);
    uint64_t v46 = v49[4];
    uint64_t v38 = sub_100041A98(v49, v49[3]);
    uint64_t v25 = v43;
    uint64_t v24 = v44;
    uint64_t v26 = v45;
    (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, enum case for BugReportFrequency.daily(_:), v45);
    sub_100054B78(&qword_1005F6CB8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D050;
    v50[0] = 0x6E696769724FLL;
    v50[1] = 0xE600000000000000;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 72) = v35;
    *(void *)(inited + 80) = v21;
    strcpy((char *)v50, "Destination");
    HIDWORD(v50[1]) = -352321536;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 168) = &type metadata for String;
    uint64_t v28 = v48;
    *(void *)(inited + 144) = v47;
    *(void *)(inited + 152) = v28;
    v50[0] = 1701669204;
    v50[1] = 0xE400000000000000;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    uint64_t v29 = v40;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    double v31 = v30;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v42);
    id v32 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v31];
    *(void *)(inited + 240) = sub_10004D29C(0, (unint64_t *)&unk_1005F9460);
    *(void *)(inited + 216) = v32;
    sub_10016E860(inited);
    uint64_t v33 = v39;
    dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
    return sub_10004D2D8((uint64_t)v49);
  }
  return result;
}

void sub_100181A6C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v105 = a6;
  *(void *)&long long v106 = a5;
  id v94 = a4;
  uint64_t v99 = a3;
  uint64_t v100 = a1;
  uint64_t v102 = a2;
  uint64_t v8 = type metadata accessor for DownloadJob(0);
  uint64_t ObjectType = *(void *)(v8 - 8);
  v103 = *(char **)(ObjectType + 64);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v93 = *(void *)(v11 - 8);
  uint64_t v12 = v93;
  uint64_t v101 = *(void *)(v93 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v90 - v16;
  uint64_t v18 = a1 + *(int *)(v8 + 36);
  uint64_t v19 = v18 + *(int *)(type metadata accessor for EpisodeMetadata(0) + 44);
  uint64_t v20 = URL.pathExtension.getter();
  uint64_t v96 = v21;
  v97 = (char *)v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v92 = v17;
  v22(v17, a3, v11);
  v22(v15, v19, v11);
  id v23 = *(void **)(v107 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  id v24 = v94;
  id v95 = v94;
  id v25 = v23;
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v26 = *(int *)(v8 + 20);
  uint64_t v27 = (uint64_t)v10;
  v98 = v10;
  uint64_t v28 = &v10[v26];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  sub_10018A5C0(v27, type metadata accessor for DownloadJob);
  double v31 = (objc_class *)type metadata accessor for ValidateOperation(0);
  id v32 = (char *)objc_allocWithZone(v31);
  uint64_t v33 = &v32[OBJC_IVAR____TtC8Podcasts17ValidateOperation_input];
  *(void *)uint64_t v33 = 0;
  v33[8] = 2;
  v22(&v32[OBJC_IVAR____TtC8Podcasts17ValidateOperation_source], (uint64_t)v17, v11);
  uint64_t v34 = v15;
  v22(&v32[OBJC_IVAR____TtC8Podcasts17ValidateOperation_origin], (uint64_t)v15, v11);
  uint64_t v35 = &v32[OBJC_IVAR____TtC8Podcasts17ValidateOperation_originalExtension];
  uint64_t v36 = v96;
  *(void *)uint64_t v35 = v97;
  *((void *)v35 + 1) = v36;
  *(void *)&v32[OBJC_IVAR____TtC8Podcasts17ValidateOperation_response] = v24;
  uint64_t v37 = &v32[OBJC_IVAR____TtC8Podcasts17ValidateOperation_episodeUuid];
  *(void *)uint64_t v37 = v30;
  *((void *)v37 + 1) = v29;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  id v38 = v95;
  uint64_t v39 = v32;
  *(void *)&v39[OBJC_IVAR____TtC8Podcasts17ValidateOperation_log] = static OS_os_log.default.getter();

  v111.receiver = v39;
  v111.super_class = v31;
  v97 = [super init];

  uint64_t v40 = v93;
  uint64_t v41 = *(void (**)(char *, uint64_t))(v93 + 8);
  v91 = v34;
  v41(v34, v11);
  uint64_t v42 = v92;
  v41(v92, v11);
  v22(v42, v99, v11);
  v22(v34, v102, v11);
  uint64_t v43 = (uint64_t)v98;
  sub_10018A620(v100, (uint64_t)v98, type metadata accessor for DownloadJob);
  uint64_t v44 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v45 = (v44 + 16) & ~v44;
  uint64_t v46 = (v101 + v44 + v45) & ~v44;
  unint64_t v47 = (v101 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (*(unsigned __int8 *)(ObjectType + 80) + v47 + 16) & ~(unint64_t)*(unsigned __int8 *)(ObjectType + 80);
  unint64_t v49 = (unint64_t)&v103[v48 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v50 + v45;
  v52 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
  v52(v51, v42, v11);
  uint64_t v53 = v106;
  v52(v50 + v46, v91, v11);
  uint64_t v54 = v107;
  uint64_t v55 = (uint64_t *)(v50 + v47);
  uint64_t v56 = v105;
  *uint64_t v55 = v53;
  v55[1] = v56;
  uint64_t v57 = v50 + v48;
  uint64_t v58 = v97;
  sub_10018CD14(v43, v57, type metadata accessor for DownloadJob);
  *(void *)(v50 + v49) = v54;
  v59 = (objc_class *)sub_100054B78(&qword_1005F6C78);
  v60 = objc_allocWithZone(v59);
  sub_100054B78(&qword_1005F6C80);
  swift_storeEnumTagMultiPayload();
  v61 = (uint64_t (**)@<X0>(char *@<X0>, uint64_t@<X8>))((char *)v60
                                                                + *(void *)((swift_isaMask & *v60) + 0x188));
  *v61 = sub_10018B728;
  v61[1] = (uint64_t (*)@<X0>(char *@<X0>, uint64_t@<X8>))v50;
  sub_10004ACDC(v53);
  v110.receiver = v60;
  v110.super_class = v59;
  swift_retain();
  v62 = [super init];
  uint64_t v63 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v64 = (uint64_t (**)(uint64_t))&v58[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v65 = *(void *)&v58[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *v64 = sub_10018B858;
  v64[1] = (uint64_t (*)(uint64_t))v63;
  sub_1000536BC(v65);
  self;
  uint64_t v66 = swift_dynamicCastObjCClass();
  if (v66)
  {
    uint64_t v67 = v66;
    swift_getObjectType();
    uint64_t v68 = swift_conformsToProtocol2();
    if (v68) {
      uint64_t v69 = v68;
    }
    else {
      uint64_t v69 = 0;
    }
    if (v68) {
      uint64_t v70 = v67;
    }
    else {
      uint64_t v70 = 0;
    }
    if (v70)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v71 = swift_allocObject();
      *(void *)(v71 + 24) = v69;
      swift_unknownObjectWeakInit();
      uint64_t v72 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v73 = swift_allocObject();
      *(void *)(v73 + 16) = v72;
      *(void *)(v73 + 24) = v71;
      v74 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v69 + 72);
      swift_unknownObjectRetain();
      v103 = v58;
      swift_retain();
      swift_retain();
      v74(sub_10004AF2C, v73, ObjectType, v69);
      swift_release();
      swift_release();
      swift_release();
      v75 = (objc_class *)type metadata accessor for BaseOperation();
      v108.receiver = v62;
      v108.super_class = v75;
      [super addDependency:v67];
      v76 = v103;
    }
  }
  uint64_t v77 = swift_allocObject();
  uint64_t v78 = v105;
  uint64_t v79 = v106;
  *(void *)(v77 + 16) = v106;
  *(void *)(v77 + 24) = v78;
  v80 = (uint64_t (**)(uint64_t))&v62[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  uint64_t v81 = *(void *)&v62[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  *v80 = sub_10018B864;
  v80[1] = (uint64_t (*)(uint64_t))v77;
  sub_10004ACDC(v79);
  sub_1000536BC(v81);
  id v82 = sub_100175D10();
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v83 = swift_allocObject();
  long long v106 = xmmword_10046D060;
  *(_OWORD *)(v83 + 16) = xmmword_10046D060;
  *(void *)(v83 + 32) = v58;
  uint64_t v109 = v83;
  specialized Array._endMutation()();
  sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
  v84 = v58;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v82 addOperations:isa waitUntilFinished:1];

  id v86 = sub_100175D10();
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = v106;
  *(void *)(v87 + 32) = v62;
  uint64_t v109 = v87;
  specialized Array._endMutation()();
  v88 = v62;
  Class v89 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v86 addOperations:v89 waitUntilFinished:0];
}

uint64_t sub_100182354@<X0>(char *a1@<X0>, uint64_t a2@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char *a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v58 = a6;
  uint64_t v59 = a5;
  uint64_t v62 = a4;
  uint64_t v63 = a2;
  v64 = a1;
  uint64_t v65 = a3;
  uint64_t v66 = a7;
  uint64_t v7 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100054B78(&qword_1005F6C88);
  __chkstk_darwin(v60);
  v61 = (uint64_t *)((char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_100054B78(&qword_1005F6C90);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v55 - v19;
  if (URL.isPackagedMedia()())
  {
    uint64_t v21 = &v20[*(int *)(v15 + 48)];
    uint64_t v22 = type metadata accessor for ValidateOperation.Result(0);
    id v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v23(v20, &v64[*(int *)(v22 + 20)], v10);
    URL.lastPathComponent.getter();
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    id v24 = v65;
    if (v65)
    {
      uint64_t v25 = *(int *)(v15 + 48);
      uint64_t v26 = (uint64_t)v61;
      uint64_t v27 = (char *)v61 + v25;
      v23((char *)v61, v20, v10);
      v23(v27, v21, v10);
      swift_storeEnumTagMultiPayload();
      v24(v26);
      sub_100054B1C(v26, &qword_1005F6C88);
    }
    uint64_t result = sub_100054B1C((uint64_t)v20, &qword_1005F6C90);
    uint64_t v29 = v66;
  }
  else
  {
    uint64_t v55 = v9;
    uint64_t v56 = v10;
    uint64_t v30 = v64;
    uint64_t v57 = v7;
    unint64_t v31 = *((void *)v64 + 1);
    uint64_t v32 = HIBYTE(v31) & 0xF;
    if ((v31 & 0x2000000000000000) == 0) {
      uint64_t v32 = *(void *)v64 & 0xFFFFFFFFFFFFLL;
    }
    if (v32)
    {
      uint64_t v55 = (char *)v15;
      uint64_t v33 = &v18[*(int *)(v15 + 48)];
      uint64_t v34 = (char *)v30 + *(int *)(type metadata accessor for ValidateOperation.Result(0) + 20);
      uint64_t v35 = v56;
      uint64_t v58 = *(char **)(v11 + 16);
      ((void (*)(char *, char *, uint64_t))v58)(v18, v34, v56);
      URL.appendingPathComponent(_:)();
      v64 = v33;
      URL.appendingPathExtension(_:)();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v35);
      uint64_t v36 = v65;
      if (v65)
      {
        uint64_t v37 = (uint64_t)v61;
        id v38 = (char *)v61 + *((int *)v55 + 12);
        uint64_t v39 = (void (*)(char *, void *, uint64_t))v58;
        ((void (*)(uint64_t *, char *, uint64_t))v58)(v61, v18, v35);
        v39(v38, v64, v35);
        swift_storeEnumTagMultiPayload();
        v36(v37);
        sub_100054B1C(v37, &qword_1005F6C88);
      }
      uint64_t result = sub_100054B1C((uint64_t)v18, &qword_1005F6C90);
    }
    else
    {
      static os_log_type_t.error.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v40 = (void *)static OS_os_log.downloads.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_10046D010;
      id v42 = *(id *)&v58[OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue];
      uint64_t v43 = (uint64_t)v55;
      uint64_t v44 = v57;
      OS_dispatch_queue.sync<A>(execute:)();

      uint64_t v45 = (uint64_t *)(v43 + *(int *)(v44 + 20));
      uint64_t v47 = *v45;
      uint64_t v46 = v45[1];
      swift_bridgeObjectRetain();
      sub_10018A5C0(v43, type metadata accessor for DownloadJob);
      *(void *)(v41 + 56) = &type metadata for String;
      *(void *)(v41 + 64) = sub_10004DA4C();
      *(void *)(v41 + 32) = v47;
      *(void *)(v41 + 40) = v46;
      os_log(_:dso:log:_:_:)();

      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v48 = v65;
      if (v65)
      {
        unint64_t v67 = 0;
        unint64_t v68 = 0xE000000000000000;
        _StringGuts.grow(_:)(35);
        swift_bridgeObjectRelease();
        unint64_t v67 = 0xD000000000000021;
        unint64_t v68 = 0x80000001004D3030;
        type metadata accessor for EpisodeMetadata(0);
        sub_10018B870(&qword_1005F6C98, (void (*)(uint64_t))&type metadata accessor for URL);
        v49._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v49);
        swift_bridgeObjectRelease();
        unint64_t v50 = v67;
        unint64_t v51 = v68;
        sub_10018B8B8();
        uint64_t v52 = swift_allocError();
        *uint64_t v53 = v50;
        v53[1] = v51;
        uint64_t v54 = (uint64_t)v61;
        uint64_t *v61 = v52;
        swift_storeEnumTagMultiPayload();
        v48(v54);
        uint64_t result = sub_100054B1C(v54, &qword_1005F6C88);
      }
    }
    uint64_t v29 = v66;
  }
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 0;
  return result;
}

uint64_t sub_10018299C(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = sub_100054B78(&qword_1005F6C88);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  static os_log_type_t.error.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v7 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10046D010;
  swift_getErrorValue();
  uint64_t v9 = Error.localizedDescription.getter();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_10004DA4C();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  os_log(_:dso:log:_:_:)();

  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    void *v6 = a1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    a2(v6);
    return sub_100054B1C((uint64_t)v6, &qword_1005F6C88);
  }
  return result;
}

id sub_100182B40(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtC8Podcasts11JobPipeline_episodeStorage);
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC8Podcasts11JobPipeline_episodeStorage + 8);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  swift_unknownObjectRetain();
  uint64_t v11 = static OS_os_log.downloads.getter();
  uint64_t v12 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))swift_allocObject();
  *((void *)v12 + 2) = a3;
  *((void *)v12 + 3) = a1;
  *((void *)v12 + 4) = a2;
  uint64_t v13 = (objc_class *)sub_100054B78(&qword_1005F6C08);
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = &v14[*(void *)((swift_isaMask & *(void *)v14) + 0x198)];
  *(void *)uint64_t v15 = 0;
  v15[8] = 2;
  uint64_t v16 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))&v14[*(void *)((swift_isaMask & *(void *)v14)
                                                                                   + 0x1A8)];
  *uint64_t v16 = sub_10018AB90;
  v16[1] = v12;
  uint64_t v17 = &v14[*(void *)((swift_isaMask & *(void *)v14) + 0x1A0)];
  *(void *)uint64_t v17 = v10;
  *((void *)v17 + 1) = v9;
  *(void *)&v14[*(void *)((swift_isaMask & *(void *)v14) + 0x1B0)] = v11;
  v169.receiver = v14;
  v169.super_class = v13;
  id v18 = a3;
  swift_bridgeObjectRetain();
  id v156 = [super init];
  sub_100056D54(a4, (uint64_t)v168);
  uint64_t v19 = swift_allocObject();
  uint64_t v155 = a1;
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  sub_100042FC4(v168, v19 + 32);
  uint64_t v20 = (objc_class *)sub_100054B78(&qword_1005F6C10);
  uint64_t v21 = (char *)objc_allocWithZone(v20);
  uint64_t v22 = &v21[*(void *)((swift_isaMask & *(void *)v21) + 0x180)];
  *(void *)uint64_t v22 = 0;
  v22[8] = 2;
  id v23 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v21[*(void *)((swift_isaMask & *(void *)v21) + 0x188)];
  *id v23 = sub_10018ABDC;
  v23[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v19;
  v167.receiver = v21;
  v167.super_class = v20;
  swift_bridgeObjectRetain();
  [super init];
  swift_unknownObjectRetain();
  uint64_t v24 = static OS_os_log.downloads.getter();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  *(void *)(v25 + 24) = a2;
  uint64_t v26 = (objc_class *)sub_100054B78(&qword_1005F6C18);
  uint64_t v27 = objc_allocWithZone(v26);
  sub_100054B78(&qword_1005F6C20);
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = (void (**)(uint64_t *, uint64_t, void (*)(uint64_t, char *, uint64_t), uint64_t))((char *)v27 + *(void *)((swift_isaMask & *v27) + 0x1A8));
  *uint64_t v28 = sub_10018ABE8;
  v28[1] = (void (*)(uint64_t *, uint64_t, void (*)(uint64_t, char *, uint64_t), uint64_t))v25;
  uint64_t v29 = (void *)((char *)v27 + *(void *)((swift_isaMask & *v27) + 0x1A0));
  *uint64_t v29 = v10;
  v29[1] = v9;
  *(void *)((char *)v27 + *(void *)((swift_isaMask & *v27) + 0x1B0)) = v24;
  v166.receiver = v27;
  v166.super_class = v26;
  swift_bridgeObjectRetain();
  [super init];
  swift_unknownObjectRetain();
  uint64_t v30 = static OS_os_log.downloads.getter();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a1;
  *(void *)(v31 + 24) = a2;
  uint64_t v32 = (objc_class *)sub_100054B78(&qword_1005F6C28);
  uint64_t v33 = objc_allocWithZone(v32);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))((char *)v33
                                                                   + *(void *)((swift_isaMask & *v33) + 0x1A8));
  *uint64_t v34 = sub_10018ABF0;
  v34[1] = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v31;
  uint64_t v35 = (void *)((char *)v33 + *(void *)((swift_isaMask & *v33) + 0x1A0));
  *uint64_t v35 = v10;
  v35[1] = v9;
  *(void *)((char *)v33 + *(void *)((swift_isaMask & *v33) + 0x1B0)) = v30;
  v165.receiver = v33;
  v165.super_class = v32;
  uint64_t v148 = a2;
  swift_bridgeObjectRetain();
  [super init];
  sub_100056D54(v152 + OBJC_IVAR____TtC8Podcasts11JobPipeline_artworkStorage, (uint64_t)v168);
  uint64_t v37 = swift_allocObject();
  sub_100042FC4(v168, v37 + 16);
  id v38 = (objc_class *)sub_100054B78(&qword_1005F6C30);
  uint64_t v39 = objc_allocWithZone(v38);
  sub_100054B78((uint64_t *)&unk_100608050);
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = (uint64_t (**)(uint64_t *, uint64_t, uint64_t))((char *)v39
                                                             + *(void *)((swift_isaMask & *v39) + 0x188));
  void *v40 = sub_10018AC30;
  v40[1] = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v37;
  v164.receiver = v39;
  v164.super_class = v38;
  id v41 = [super init];
  sub_100056D54(a4, (uint64_t)v168);
  uint64_t v42 = swift_allocObject();
  sub_100042FC4(v168, v42 + 16);
  uint64_t v43 = (objc_class *)sub_100054B78(&qword_1005F6C38);
  uint64_t v44 = objc_allocWithZone(v43);
  sub_100054B78(&qword_1005F6C40);
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = (uint64_t (**)(uint64_t, void (*)(uint64_t *), uint64_t))((char *)v44
                                                                                  + *(void *)((swift_isaMask & *v44)
                                                                                              + 0x188));
  *uint64_t v45 = sub_10018AC38;
  v45[1] = (uint64_t (*)(uint64_t, void (*)(uint64_t *), uint64_t))v42;
  v163.receiver = v44;
  v163.super_class = v43;
  [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D000;
  *(void *)(inited + 32) = v156;
  *(void *)(inited + 40) = v149;
  *(void *)(inited + 48) = v141;
  *(void *)(inited + 56) = v36;
  *(void *)(inited + 64) = v41;
  *(void *)(inited + 72) = v46;
  *(void *)&v168[0] = inited;
  specialized Array._endMutation()();
  unint64_t v48 = *(void *)&v168[0];
  Swift::String v49 = (char *)v156;
  unint64_t v50 = (char *)v149;
  id v51 = v141;
  id v52 = v36;
  id v157 = v41;
  id v153 = v46;
  uint64_t v53 = (void *)static OS_os_log.downloads.getter();
  id v54 = objc_allocWithZone((Class)type metadata accessor for GroupOperation());
  v147 = (void *)sub_1003FF024(v48, 1, v53);
  swift_bridgeObjectRelease();
  uint64_t v55 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v56 = (uint64_t (**)(uint64_t))&v49[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v57 = *(void *)&v49[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *uint64_t v56 = sub_10018AC40;
  v56[1] = (uint64_t (*)(uint64_t))v55;
  sub_1000536BC(v57);
  self;
  v154 = v49;
  uint64_t v58 = swift_dynamicCastObjCClass();
  if (v58)
  {
    uint64_t v59 = v58;
    swift_getObjectType();
    uint64_t v60 = swift_conformsToProtocol2();
    uint64_t v61 = v60 ? v60 : 0;
    if (v60 ? v59 : 0)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 24) = v61;
      swift_unknownObjectWeakInit();
      id v150 = v51;
      uint64_t v64 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = v64;
      *(void *)(v65 + 24) = v63;
      id v66 = v52;
      unint64_t v67 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v61 + 72);
      id v136 = (id)swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      v67(sub_10004AF2C, v65, ObjectType, v61);
      id v52 = v66;
      swift_release();
      id v51 = v150;
      swift_release();
      swift_release();
      v158.receiver = v50;
      v158.super_class = (Class)type metadata accessor for BaseOperation();
      [super addDependency:v59];
    }
  }
  uint64_t v68 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v69 = (uint64_t (**)(uint64_t))&v50[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v70 = *(void *)&v50[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *uint64_t v69 = sub_10018AC48;
  v69[1] = (uint64_t (*)(uint64_t))v68;
  uint64_t v71 = v50;
  sub_1000536BC(v70);
  self;
  uint64_t v72 = swift_dynamicCastObjCClass();
  v151 = v71;
  if (v72)
  {
    uint64_t v73 = v72;
    swift_getObjectType();
    uint64_t v74 = swift_conformsToProtocol2();
    uint64_t v75 = v74 ? v74 : 0;
    if (v74 ? v73 : 0)
    {
      uint64_t v137 = swift_getObjectType();
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 24) = v75;
      swift_unknownObjectWeakInit();
      uint64_t v78 = v51;
      uint64_t v79 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v80 = swift_allocObject();
      *(void *)(v80 + 16) = v79;
      *(void *)(v80 + 24) = v77;
      id v143 = v52;
      uint64_t v81 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v75 + 72);
      swift_unknownObjectRetain();
      id v82 = v71;
      swift_retain();
      swift_retain();
      v81(sub_10004AF2C, v80, v137, v75);
      id v52 = v143;
      swift_release();
      id v51 = v78;
      swift_release();
      swift_release();
      uint64_t v83 = (objc_class *)type metadata accessor for BaseOperation();
      v159.receiver = v78;
      v159.super_class = v83;
      [super addDependency:v73];

      uint64_t v71 = v151;
    }
  }
  v84 = (char *)v51;

  uint64_t v85 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v86 = (uint64_t (**)(uint64_t))&v84[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v87 = *(void *)&v84[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *id v86 = sub_10018AC48;
  v86[1] = (uint64_t (*)(uint64_t))v85;
  sub_1000536BC(v87);
  self;
  uint64_t v88 = swift_dynamicCastObjCClass();
  if (v88)
  {
    uint64_t v89 = v88;
    swift_getObjectType();
    uint64_t v90 = swift_conformsToProtocol2();
    uint64_t v91 = v90 ? v90 : 0;
    if (v90 ? v89 : 0)
    {
      uint64_t v138 = swift_getObjectType();
      uint64_t v93 = swift_allocObject();
      *(void *)(v93 + 24) = v91;
      swift_unknownObjectWeakInit();
      uint64_t v94 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v95 = swift_allocObject();
      *(void *)(v95 + 16) = v94;
      *(void *)(v95 + 24) = v93;
      uint64_t v96 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v91 + 72);
      swift_unknownObjectRetain();
      v97 = v84;
      swift_retain();
      swift_retain();
      v96(sub_10004AF2C, v95, v138, v91);
      swift_release();
      swift_release();
      swift_release();
      v98 = (objc_class *)type metadata accessor for BaseOperation();
      v160.receiver = v52;
      v160.super_class = v98;
      [super addDependency:v89];
    }
  }
  uint64_t v99 = (char *)v52;

  uint64_t v100 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v101 = (uint64_t (**)(uint64_t))&v99[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v102 = *(void *)&v99[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *uint64_t v101 = sub_10018AC50;
  v101[1] = (uint64_t (*)(uint64_t))v100;
  sub_1000536BC(v102);
  self;
  uint64_t v103 = swift_dynamicCastObjCClass();
  if (v103)
  {
    uint64_t v104 = v103;
    swift_getObjectType();
    uint64_t v105 = swift_conformsToProtocol2();
    uint64_t v106 = v105 ? v105 : 0;
    if (v105 ? v104 : 0)
    {
      uint64_t v139 = swift_getObjectType();
      uint64_t v108 = swift_allocObject();
      *(void *)(v108 + 24) = v106;
      swift_unknownObjectWeakInit();
      uint64_t v109 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v144 = v84;
      uint64_t v110 = swift_allocObject();
      *(void *)(v110 + 16) = v109;
      *(void *)(v110 + 24) = v108;
      objc_super v111 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v106 + 72);
      swift_unknownObjectRetain();
      v135 = v99;
      swift_retain();
      swift_retain();
      v111(sub_10004AF2C, v110, v139, v106);
      swift_release();
      swift_release();
      v84 = v144;
      swift_release();
      v112 = (objc_class *)type metadata accessor for BaseOperation();
      v161.receiver = v157;
      v161.super_class = v112;
      [super addDependency:v104];
    }
  }
  v113 = (char *)v157;

  uint64_t v114 = swift_allocObject();
  v115 = v153;
  swift_unknownObjectWeakInit();
  v116 = (uint64_t (**)(uint64_t))&v113[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v117 = *(void *)&v113[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *v116 = sub_10018AC58;
  v116[1] = (uint64_t (*)(uint64_t))v114;
  sub_1000536BC(v117);
  self;
  uint64_t v118 = swift_dynamicCastObjCClass();
  if (v118)
  {
    uint64_t v119 = v118;
    swift_getObjectType();
    uint64_t v120 = swift_conformsToProtocol2();
    if (v120) {
      uint64_t v121 = v120;
    }
    else {
      uint64_t v121 = 0;
    }
    if (v120) {
      uint64_t v122 = v119;
    }
    else {
      uint64_t v122 = 0;
    }
    if (v122)
    {
      uint64_t v140 = swift_getObjectType();
      uint64_t v123 = swift_allocObject();
      *(void *)(v123 + 24) = v121;
      swift_unknownObjectWeakInit();
      v145 = v84;
      uint64_t v124 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v125 = swift_allocObject();
      *(void *)(v125 + 16) = v124;
      *(void *)(v125 + 24) = v123;
      v126 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v121 + 72);
      swift_unknownObjectRetain();
      v127 = v113;
      swift_retain();
      swift_retain();
      v126(sub_10004AF2C, v125, v140, v121);
      swift_release();
      v84 = v145;
      swift_release();
      v115 = v153;
      swift_release();
      v128 = (objc_class *)type metadata accessor for BaseOperation();
      v162.receiver = v153;
      v162.super_class = v128;
      [super addDependency:v119];
    }
  }
  v129 = v115;

  v130 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v130 + 2) = v155;
  *((void *)v130 + 3) = v148;
  *((void *)v130 + 4) = v147;
  v131 = (uint64_t (**)(uint64_t))&v129[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  uint64_t v132 = *(void *)&v129[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  *v131 = sub_10018ACA0;
  v131[1] = v130;
  swift_bridgeObjectRetain();
  id v133 = v147;
  sub_1000536BC(v132);

  return v133;
}

void sub_100183BC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = *a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  swift_retain();
  if (!a5)
  {
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v14 = (void *)static OS_os_log.downloads.getter();
    os_log(_:dso:log:_:_:)();
  }
  uint64_t v15 = *(uint64_t (**)(uint64_t))(v12 + 16);
  uint64_t v16 = swift_retain();
  uint64_t v17 = (void *)v15(v16);
  swift_release();
  id v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = a6;
  v18[4] = a7;
  v18[5] = a5;
  v18[6] = sub_10018AB30;
  v18[7] = v13;
  v22[4] = sub_10018B3F4;
  v22[5] = v18;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_10003B424;
  v22[3] = &unk_100555D38;
  uint64_t v19 = _Block_copy(v22);
  id v20 = a5;
  swift_retain();
  id v21 = v17;
  swift_bridgeObjectRetain();
  swift_release();
  [v21 performBlock:v19];
  _Block_release(v19);
  swift_release();
}

uint64_t sub_100183DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6)
{
  os_log_type_t v11 = static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v12 = static OS_os_log.downloads.getter();
  if (os_log_type_enabled(v12, v11))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v16 = a4;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_10004B974(v16, a5, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v11, "Add episode to media library. EpisodeUUID %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100041A98(a6, a6[3]);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  swift_retain();
  dispatch thunk of MediaLibraryClientProtocol.addEpisode(_:completion:)();
  return swift_release();
}

uint64_t sub_100183FA8(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = sub_100054B78(&qword_1005F6C70);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1005F6C20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a1, (uint64_t)v6, &qword_1005F6C70);
  sub_1001840B8((uint64_t)v6, (uint64_t)v9);
  a2(v9);
  return sub_100054B1C((uint64_t)v9, &qword_1005F6C20);
}

uint64_t sub_1001840B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F6C20);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100054B78(&qword_1005F6C70);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100054BBC(a1, (uint64_t)v9, &qword_1005F6C70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = *v9;
    swift_errorRetain();
    sub_100054B78(&qword_100603F70);
    uint64_t v10 = _getErrorEmbeddedNSError<A>(_:)();
    if (v10)
    {
      uint64_t v11 = v10;
      sub_100054B1C(a1, &qword_1005F6C70);
      swift_errorRelease();
    }
    else
    {
      uint64_t v11 = swift_allocError();
      void *v14 = v16;
      sub_100054B1C(a1, &qword_1005F6C70);
    }
    swift_errorRelease();
    uint64_t *v6 = v11;
    swift_storeEnumTagMultiPayload();
    return sub_100053820((uint64_t)v6, a2, &qword_1005F6C20);
  }
  else
  {
    sub_100054B1C(a1, &qword_1005F6C70);
    uint64_t v12 = type metadata accessor for MediaLibraryPid();
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 32))(a2, v9, v12);
    return swift_storeEnumTagMultiPayload();
  }
}

void sub_1001842E0(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v10 = type metadata accessor for MediaLibraryPid();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v47 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v43 = (char *)&v39 - v15;
  uint64_t v46 = v16;
  __chkstk_darwin(v14);
  id v18 = (char *)&v39 - v17;
  uint64_t v42 = *a1;
  os_log_type_t v19 = static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  id v20 = static OS_os_log.downloads.getter();
  id v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v49 = a2;
  uint64_t v50 = v11 + 16;
  id v41 = v21;
  v21(v18, a2, v10);
  BOOL v22 = os_log_type_enabled(v20, v19);
  unint64_t v48 = a6;
  uint64_t v40 = a5;
  if (v22)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    aBlock[0] = v39;
    *(_DWORD *)uint64_t v23 = 134218242;
    uint64_t v24 = MediaLibraryPid.value.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
    uint64_t v51 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_10004B974(a5, a6, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v20, v19, "Update episode with media library persistent id %lld. EpisodeUUID %s.", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
    swift_bridgeObjectRetain_n();
    v25(v18, v10);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v26 = v43;
  uint64_t v27 = v41;
  v41(v43, v49, v10);
  uint64_t v28 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v39 = v28 | 7;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v45;
  *(void *)(v29 + 16) = v44;
  *(void *)(v29 + 24) = v30;
  uint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v44(v29 + ((v28 + 32) & ~v28), v26, v10);
  uint64_t v31 = *(uint64_t (**)(uint64_t))(v42 + 16);
  swift_retain();
  uint64_t v32 = swift_retain();
  uint64_t v33 = (void *)v31(v32);
  swift_release();
  uint64_t v34 = v47;
  v27(v47, v49, v10);
  uint64_t v35 = (void *)swift_allocObject();
  uint64_t v36 = v40;
  v35[2] = v33;
  v35[3] = v36;
  v35[4] = v48;
  v35[5] = sub_10018B1D0;
  v35[6] = v29;
  v44((uint64_t)v35 + ((v28 + 56) & ~v28), v34, v10);
  aBlock[4] = (uint64_t)sub_10018B330;
  aBlock[5] = (uint64_t)v35;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10003B424;
  aBlock[3] = (uint64_t)&unk_100555C98;
  uint64_t v37 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v38 = v33;
  swift_retain();
  swift_release();
  [v38 performBlock:v37];
  _Block_release(v37);
  swift_release();
}

uint64_t sub_1001847B0(uint64_t a1, char a2, void (*a3)(void *), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100054B78(&qword_1005F6C68);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    *uint64_t v11 = a1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
  }
  else
  {
    uint64_t v12 = type metadata accessor for MediaLibraryPid();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a5, v12);
    swift_storeEnumTagMultiPayload();
  }
  a3(v11);
  return sub_100054B1C((uint64_t)v11, &qword_1005F6C68);
}

void sub_1001848D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v10 = type metadata accessor for MediaLibraryPid();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = *a1;
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v14 = (void *)static OS_os_log.downloads.getter();
  os_log(_:dso:log:_:_:)();

  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t v17 = *(uint64_t (**)(uint64_t))(v13 + 16);
  swift_retain();
  uint64_t v18 = swift_retain();
  os_log_type_t v19 = (void *)v17(v18);
  swift_release();
  id v20 = (void *)swift_allocObject();
  uint64_t v21 = v25;
  uint64_t v22 = v26;
  v20[2] = v19;
  v20[3] = v21;
  v20[4] = v22;
  v20[5] = sub_10018B048;
  v20[6] = v16;
  aBlock[4] = sub_10018B0D8;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  aBlock[3] = &unk_100555C20;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = v19;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v24 performBlock:v23];
  _Block_release(v23);
  swift_release();
}

uint64_t sub_100184B78(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_100054B78(&qword_1005F6C60);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a3)
  {
    *uint64_t v13 = a1;
  }
  else
  {
    uint64_t v14 = (char *)v13 + *(int *)(sub_100054B78(&qword_1005F64A8) + 48);
    *uint64_t v13 = a1;
    v13[1] = a2;
    uint64_t v15 = type metadata accessor for MediaLibraryPid();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, a6, v15);
  }
  swift_storeEnumTagMultiPayload();
  sub_10018B0F0(a1, a2, a3 & 1);
  a4(v13);
  return sub_100054B1C((uint64_t)v13, &qword_1005F6C60);
}

uint64_t sub_100184CC0(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v42 = a4;
  uint64_t v43 = a2;
  uint64_t v37 = a3;
  uint64_t v5 = sub_100054B78(&qword_1005F64A8);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MediaLibraryPid();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v40 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = *(int *)(v6 + 56);
  uint64_t v16 = &v8[v15];
  uint64_t v38 = *a1;
  uint64_t v41 = a1[1];
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v17(&v8[v15], (char *)a1 + v15, v9);
  uint64_t v36 = v17;
  uint64_t v39 = v10;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v44 = v14;
  v18(v14, v16, v9);
  uint64_t v35 = v18;
  sub_100056D54((uint64_t)v42, (uint64_t)v45);
  os_log_type_t v19 = v40;
  v17(v40, v14, v9);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v34 = v20 | 7;
  uint64_t v21 = swift_allocObject();
  sub_100042FC4(v45, v21 + 16);
  uint64_t v22 = v37;
  *(void *)(v21 + 56) = v43;
  *(void *)(v21 + 64) = v22;
  v18((char *)(v21 + ((v20 + 72) & ~v20)), v19, v9);
  swift_bridgeObjectRetain();
  uint64_t v23 = v22;
  swift_retain();
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  id v24 = (void *)static OS_os_log.downloads.getter();
  os_log(_:dso:log:_:_:)();

  uint64_t v25 = v42[4];
  uint64_t v33 = v42[3];
  uint64_t v42 = sub_100041A98(v42, v33);
  uint64_t v26 = v40;
  v36(v40, v44, v9);
  uint64_t v27 = (char *)swift_allocObject();
  uint64_t v28 = v38;
  uint64_t v29 = v41;
  *((void *)v27 + 2) = v38;
  *((void *)v27 + 3) = v29;
  *((void *)v27 + 4) = sub_10018ADB8;
  *((void *)v27 + 5) = v21;
  *((void *)v27 + 6) = v43;
  *((void *)v27 + 7) = v23;
  v35(&v27[(v20 + 64) & ~v20], v26, v9);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), char *, uint64_t, uint64_t))(v25 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  LOBYTE(v45[0]) = 1;
  v30(v28, v29, 0x100000000, sub_10018AEFC, v27, v33, v25);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v44, v9);
}

uint64_t sub_100185088(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for MediaLibraryPid();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_100041A98(a1, v12);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v15 + v14, v11, v8);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v13 + 16);
  swift_retain();
  v18[12] = 1;
  v16(0x100000000, sub_10018AFD0, v15, v12, v13);
  return swift_release();
}

uint64_t sub_100185224(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_1005F6C40);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78(&qword_1005F6C50);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a1, (uint64_t)v15, &qword_1005F6C50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v16 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10046D010;
    sub_10018AF78();
    uint64_t v18 = Error.localizedDescription.getter();
    uint64_t v20 = v19;
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_10004DA4C();
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v20;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    uint64_t v21 = &v12[*(int *)(sub_100054B78(&qword_1005F6C48) + 48)];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    uint64_t v22 = type metadata accessor for MediaLibraryPid();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, a4, v22);
    swift_storeEnumTagMultiPayload();
    v27(v12);
    return sub_100054B1C((uint64_t)v12, &qword_1005F6C40);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
    id v24 = &v12[*(int *)(sub_100054B78(&qword_1005F6C48) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    uint64_t v25 = type metadata accessor for MediaLibraryPid();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, a4, v25);
    swift_storeEnumTagMultiPayload();
    v27(v12);
    sub_100054B1C((uint64_t)v12, &qword_1005F6C40);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_100185610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a8;
  uint64_t v31 = a7;
  uint64_t v32 = a6;
  uint64_t v33 = a5;
  uint64_t v34 = a4;
  uint64_t v29 = a2;
  uint64_t v10 = sub_100054B78(&qword_1005F6C40);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78(&qword_1005F6C50);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a1, (uint64_t)v19, &qword_1005F6C50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v20 = (void *)static OS_os_log.downloads.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_10046D030;
    *(void *)(v21 + 56) = &type metadata for String;
    unint64_t v22 = sub_10004DA4C();
    *(void *)(v21 + 64) = v22;
    *(void *)(v21 + 32) = v29;
    *(void *)(v21 + 40) = a3;
    sub_10018AF78();
    swift_bridgeObjectRetain();
    uint64_t v23 = Error.localizedDescription.getter();
    *(void *)(v21 + 96) = &type metadata for String;
    *(void *)(v21 + 104) = v22;
    *(void *)(v21 + 72) = v23;
    *(void *)(v21 + 80) = v24;
    os_log(_:dso:log:_:_:)();

    uint64_t v25 = swift_bridgeObjectRelease();
    return v34(v25);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    uint64_t v27 = &v12[*(int *)(sub_100054B78(&qword_1005F6C48) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v12, v16, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    uint64_t v28 = type metadata accessor for MediaLibraryPid();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v27, v30, v28);
    swift_storeEnumTagMultiPayload();
    v32(v12);
    sub_100054B1C((uint64_t)v12, &qword_1005F6C40);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_100185988(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, void *a4)
{
  uint64_t v38 = a4;
  uint64_t v45 = (char *)a1;
  uint64_t v46 = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  uint64_t v42 = v6;
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_1005F6C48);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MediaLibraryPid();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v37 - v20;
  uint64_t v22 = swift_allocObject();
  uint64_t v39 = a2;
  uint64_t v23 = v46;
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = v23;
  uint64_t v24 = *(int *)(v9 + 56);
  uint64_t v25 = &v11[v24];
  uint64_t v26 = &v45[v24];
  sub_100054BBC((uint64_t)v45, (uint64_t)v11, (uint64_t *)&unk_1005F7750);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v25, v26, v12);
  uint64_t v27 = v15;
  uint64_t v28 = v41;
  sub_100053820((uint64_t)v11, (uint64_t)v21, (uint64_t *)&unk_1005F7750);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v43 = v27;
  uint64_t v44 = v12;
  v29(v27, v25, v12);
  uint64_t v45 = v21;
  sub_100054BBC((uint64_t)v21, (uint64_t)v19, (uint64_t *)&unk_1005F7750);
  uint64_t v30 = v42;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v19, 1, v28) == 1)
  {
    swift_retain();
    swift_release();
    sub_100054B1C((uint64_t)v19, (uint64_t *)&unk_1005F7750);
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v31 = (void *)static OS_os_log.downloads.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v47 = 0;
    char v48 = 0;
    v39(&v47);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v43, v44);
  }
  else
  {
    uint64_t v32 = v40;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v40, v19, v28);
    swift_retain();
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v33 = (void *)static OS_os_log.downloads.getter();
    os_log(_:dso:log:_:_:)();

    sub_100041A98(v38, v38[3]);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_10005CADC;
    *(void *)(v34 + 24) = v22;
    uint64_t v35 = v43;
    dispatch thunk of MediaLibraryClientProtocol.addArtwork(withFileUrl:toEpisodeWithPersistentId:completion:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v28);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v35, v44);
  }
  return sub_100054B1C((uint64_t)v45, (uint64_t *)&unk_1005F7750);
}

uint64_t sub_100185E5C(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  if (a2)
  {
    sub_10018ACCC(a1, 1);
    sub_100054B78(&qword_100603F70);
    uint64_t v7 = _getErrorEmbeddedNSError<A>(_:)();
    if (v7)
    {
      uint64_t v4 = v7;
      sub_10018ACD8(a1, 1);
    }
    else
    {
      uint64_t v4 = swift_allocError();
      *uint64_t v8 = a1;
    }
    uint64_t v5 = 1;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  a3(v4, v5);
  return sub_100050358(v4, v5);
}

uint64_t sub_100185F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  static os_log_type_t.error.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v8 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10046D030;
  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v10 = sub_10004DA4C();
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  swift_getErrorValue();
  swift_bridgeObjectRetain();
  uint64_t v11 = Error.localizedDescription.getter();
  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = v10;
  *(void *)(v9 + 72) = v11;
  *(void *)(v9 + 80) = v12;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v13 = OBJC_IVAR____TtC8Podcasts13BaseOperation_lock;
  uint64_t v14 = *(void **)(a4 + OBJC_IVAR____TtC8Podcasts13BaseOperation_lock);
  swift_errorRetain();
  [v14 lock];
  *(void *)(a4 + OBJC_IVAR____TtC8Podcasts13BaseOperation__error) = a1;
  swift_errorRetain();
  swift_errorRelease();
  [*(id *)(a4 + v13) unlock];
  return swift_errorRelease();
}

void sub_1001860C0(unint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t ObjectType = (char *)a4;
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v194 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v196 = (uint64_t)&v187 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = v9;
  __chkstk_darwin(v8);
  v200 = (char *)&v187 - v10;
  uint64_t v201 = type metadata accessor for URL();
  uint64_t v191 = *(void *)(v201 - 8);
  uint64_t v11 = __chkstk_darwin(v201);
  v187 = (char *)&v187 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v192 = (char *)&v187 - v13;
  uint64_t v188 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v188 - 8);
  __chkstk_darwin(v188);
  uint64_t v16 = (char *)&v187 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v203 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v203);
  v202 = (char *)&v187 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v187 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.error.getter();
  uint64_t v193 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v21 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10046D010;
  uint64_t v197 = a1;
  unint64_t v217 = a1;
  uint64_t v218 = a2;
  uint64_t v198 = a2;
  int v199 = a3;
  char v219 = a3;
  sub_10018A754();
  uint64_t v23 = Error.localizedDescription.getter();
  uint64_t v25 = v24;
  *(void *)(v22 + 56) = &type metadata for String;
  *(void *)(v22 + 64) = sub_10004DA4C();
  *(void *)(v22 + 32) = v23;
  *(void *)(v22 + 40) = v25;
  uint64_t v26 = v205;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v27 = v26 + OBJC_IVAR____TtC8Podcasts11JobPipeline_metadata;
  uint64_t v28 = type metadata accessor for EpisodeMetadata(0);
  sub_100054BBC(v27 + *(int *)(v28 + 60), (uint64_t)v20, &qword_1005F5D20);
  uint64_t v29 = type metadata accessor for Date();
  LODWORD(v27) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v20, 1, v29);
  sub_100054B1C((uint64_t)v20, &qword_1005F5D20);
  if (v27 != 1)
  {
    uint64_t v30 = *(void **)(v26 + OBJC_IVAR____TtC8Podcasts11JobPipeline_analyticsChannel);
    type metadata accessor for AnalyticsEvent();
    swift_unknownObjectRetain();
    uint64_t v31 = (void *)AnalyticsEvent.__allocating_init(cacheDeletedFilesRestored:failed:)();
    [v30 sendEvent:v31];
    swift_unknownObjectRelease();
  }
  uint64_t v190 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  id v32 = *(id *)(v26 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  uint64_t v33 = (uint64_t)v202;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v189 = 0;

  uint64_t v34 = v188;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v33, v188);
  sub_10018A5C0(v33, type metadata accessor for DownloadJob);
  v206 = (char *)sub_1001899C0((uint64_t)v16, 0);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v34);
  uint64_t v35 = (uint64_t)v200;
  sub_100054BBC((uint64_t)ObjectType, (uint64_t)v200, (uint64_t *)&unk_1005F7750);
  uint64_t v36 = v191;
  uint64_t v37 = v201;
  uint64_t v38 = &selRef_indexPathForFirstRow;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48))(v35, 1, v201) == 1)
  {
    sub_100054B1C(v35, (uint64_t *)&unk_1005F7750);
    uint64_t v39 = (void *)static OS_os_log.default.getter();
    id v40 = objc_allocWithZone((Class)type metadata accessor for GroupOperation());
    v200 = (char *)sub_1003FF024((unint64_t)_swiftEmptyArrayStorage, 0, v39);
  }
  else
  {
    uint64_t v41 = v192;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v192, v35, v37);
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t inited = swift_initStackObject();
    uint64_t v43 = v37;
    uint64_t v44 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10046D060;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
    uint64_t v46 = v187;
    v45(v187, v41, v43);
    uint64_t v47 = static OS_os_log.downloads.getter();
    char v48 = (objc_class *)type metadata accessor for DeleteFileOperation();
    uint64_t v49 = v26;
    uint64_t v50 = objc_allocWithZone(v48);
    uint64_t v51 = &v50[OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_input];
    *(void *)uint64_t v51 = 0;
    v51[8] = 2;
    *(void *)&v50[OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_log] = v47;
    uint64_t v52 = v201;
    v45(&v50[OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_file], v46, v201);
    uint64_t v38 = &selRef_indexPathForFirstRow;
    v50[OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_proceedOnFailure] = 1;
    v207.receiver = v50;
    uint64_t v26 = v49;
    v207.super_class = v48;
    id v53 = [super init];
    id v54 = *(void (**)(char *, uint64_t))(v36 + 8);
    v54(v46, v52);
    *(void *)(v44 + 32) = v53;
    unint64_t v217 = v44;
    specialized Array._endMutation()();
    unint64_t v55 = v217;
    uint64_t v56 = (void *)static OS_os_log.downloads.getter();
    id v57 = objc_allocWithZone((Class)type metadata accessor for GroupOperation());
    v200 = (char *)sub_1003FF024(v55, 1, v56);
    swift_bridgeObjectRelease();
    v54(v192, v52);
  }
  id v58 = *(id *)(v26 + v190);
  uint64_t v59 = (uint64_t)v202;
  uint64_t v60 = v203;
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v61 = (uint64_t *)(v59 + *(int *)(v60 + 20));
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  swift_bridgeObjectRetain();
  sub_10018A5C0(v59, type metadata accessor for DownloadJob);
  uint64_t v64 = OBJC_IVAR____TtC8Podcasts11JobPipeline_episodeStorage;
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v63;
  *(void *)(v65 + 24) = v62;
  long long v203 = *(_OWORD *)(v26 + v64);
  swift_unknownObjectRetain();
  uint64_t v66 = static OS_os_log.downloads.getter();
  unint64_t v67 = (objc_class *)sub_100054B78(&qword_1005F6C00);
  uint64_t v68 = (char *)objc_allocWithZone(v67);
  uint64_t v69 = &v68[*(void *)((swift_isaMask & *(void *)v68) + 0x198)];
  *(void *)uint64_t v69 = 0;
  v69[8] = 2;
  uint64_t v70 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))&v68[*(void *)((swift_isaMask & *(void *)v68)
                                                                                   + 0x1A8)];
  *uint64_t v70 = sub_10018A7E0;
  v70[1] = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v65;
  *(_OWORD *)&v68[*(void *)((swift_isaMask & *(void *)v68) + 0x1A0)] = v203;
  *(void *)&v68[*(void *)((swift_isaMask & *(void *)v68) + 0x1B0)] = v66;
  v216.receiver = v68;
  v216.super_class = v67;
  *(void *)&long long v203 = [super v38[26]];
  uint64_t v71 = swift_allocObject();
  swift_weakInit();
  uint64_t v72 = v196;
  sub_100054BBC((uint64_t)ObjectType, v196, (uint64_t *)&unk_1005F7750);
  uint64_t v73 = v38;
  unint64_t v74 = (*(unsigned __int8 *)(v194 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
  unint64_t v75 = (v195 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v76 = swift_allocObject();
  sub_100053820(v72, v76 + v74, (uint64_t *)&unk_1005F7750);
  *(void *)(v76 + v75) = v71;
  uint64_t v77 = (objc_class *)sub_100054B78((uint64_t *)&unk_1005FF010);
  uint64_t v78 = (char *)objc_allocWithZone(v77);
  uint64_t v79 = &v78[*(void *)((swift_isaMask & *(void *)v78) + 0x180)];
  *(void *)uint64_t v79 = 0;
  v79[8] = 2;
  uint64_t v80 = &v78[*(void *)((swift_isaMask & *(void *)v78) + 0x188)];
  *(void *)uint64_t v80 = sub_10018A924;
  *((void *)v80 + 1) = v76;
  v215.receiver = v78;
  v215.super_class = v77;
  uint64_t v81 = (char *)[v215 super_methodWithSelector:v73[26]];
  uint64_t v82 = swift_allocObject();
  swift_weakInit();
  uint64_t v83 = (char *)objc_allocWithZone(v77);
  v84 = &v83[*(void *)((swift_isaMask & *(void *)v83) + 0x180)];
  *(void *)v84 = 0;
  v84[8] = 2;
  uint64_t v85 = (void (**)(uint64_t@<X8>))&v83[*(void *)((swift_isaMask & *(void *)v83) + 0x188)];
  *uint64_t v85 = sub_10018A548;
  v85[1] = (void (*)(uint64_t@<X8>))v82;
  v214.receiver = v83;
  v214.super_class = v77;
  uint64_t v201 = [super v73[26]];
  uint64_t v86 = swift_allocObject();
  swift_weakInit();
  uint64_t v87 = swift_allocObject();
  uint64_t v88 = v197;
  *(void *)(v87 + 16) = v86;
  *(void *)(v87 + 24) = v88;
  uint64_t v89 = v198;
  *(void *)(v87 + 32) = v198;
  LOBYTE(v74) = v199;
  *(unsigned char *)(v87 + 40) = v199;
  uint64_t v90 = objc_allocWithZone(v77);
  uint64_t v91 = (char *)v90 + *(void *)((swift_isaMask & *v90) + 0x180);
  *(void *)uint64_t v91 = 0;
  v91[8] = 2;
  v92 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v90 + *(void *)((swift_isaMask & *v90) + 0x188));
  char *v92 = sub_10018AA3C;
  v92[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v87;
  sub_10018AA60(v88, v89, v74);
  v213.receiver = v90;
  v213.super_class = v77;
  v202 = [super v73[26]];
  uint64_t v93 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v94 = (uint64_t (**)(uint64_t))&v206[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v95 = *(void *)&v206[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *uint64_t v94 = sub_10018A578;
  v94[1] = (uint64_t (*)(uint64_t))v93;
  sub_1000536BC(v95);
  self;
  uint64_t v96 = swift_dynamicCastObjCClass();
  if (v96)
  {
    uint64_t v97 = v96;
    swift_getObjectType();
    uint64_t v98 = swift_conformsToProtocol2();
    uint64_t v99 = v98 ? v98 : 0;
    if (v98 ? v97 : 0)
    {
      uint64_t ObjectType = (char *)swift_getObjectType();
      uint64_t v101 = swift_allocObject();
      *(void *)(v101 + 24) = v99;
      swift_unknownObjectWeakInit();
      uint64_t v102 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = v102;
      *(void *)(v103 + 24) = v101;
      uint64_t v104 = *(void (**)(void (*)(), uint64_t, char *, uint64_t))(v99 + 72);
      id v105 = (id)swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      v104(sub_10004AF2C, v103, ObjectType, v99);
      swift_release();
      swift_release();
      swift_release();
      uint64_t v106 = (objc_class *)type metadata accessor for BaseOperation();
      v208.receiver = v81;
      v208.super_class = v106;
      [super addDependency:v97];
    }
  }
  uint64_t v107 = swift_allocObject();
  uint64_t v108 = v200;
  swift_unknownObjectWeakInit();
  uint64_t v109 = (uint64_t (**)(uint64_t))&v81[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v110 = *(void *)&v81[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *uint64_t v109 = sub_10018AAC0;
  v109[1] = (uint64_t (*)(uint64_t))v107;
  objc_super v111 = v81;
  sub_1000536BC(v110);
  self;
  uint64_t v112 = swift_dynamicCastObjCClass();
  uint64_t ObjectType = v111;
  if (v112)
  {
    uint64_t v113 = v112;
    swift_getObjectType();
    uint64_t v114 = swift_conformsToProtocol2();
    uint64_t v115 = v114 ? v114 : 0;
    if (v114 ? v113 : 0)
    {
      uint64_t v117 = swift_getObjectType();
      uint64_t v118 = swift_allocObject();
      *(void *)(v118 + 24) = v115;
      swift_unknownObjectWeakInit();
      uint64_t v119 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v120 = swift_allocObject();
      *(void *)(v120 + 16) = v119;
      *(void *)(v120 + 24) = v118;
      uint64_t v121 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v115 + 72);
      swift_unknownObjectRetain();
      uint64_t v122 = v111;
      swift_retain();
      swift_retain();
      v121(sub_10004AF2C, v120, v117, v115);
      uint64_t v108 = v200;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v123 = (objc_class *)type metadata accessor for BaseOperation();
      v209.receiver = v108;
      v209.super_class = v123;
      [super addDependency:v113];

      objc_super v111 = ObjectType;
    }
  }
  uint64_t v124 = v108;

  uint64_t v125 = swift_allocObject();
  v126 = (void *)v201;
  swift_unknownObjectWeakInit();
  v127 = (uint64_t (**)(uint64_t))&v124[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v128 = *(void *)&v124[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  char *v127 = sub_10018A578;
  v127[1] = (uint64_t (*)(uint64_t))v125;
  sub_1000536BC(v128);
  self;
  uint64_t v129 = swift_dynamicCastObjCClass();
  if (v129)
  {
    uint64_t v130 = v129;
    swift_getObjectType();
    uint64_t v131 = swift_conformsToProtocol2();
    uint64_t v132 = v131 ? v131 : 0;
    if (v131 ? v130 : 0)
    {
      v200 = (char *)swift_getObjectType();
      uint64_t v134 = swift_allocObject();
      *(void *)(v134 + 24) = v132;
      swift_unknownObjectWeakInit();
      uint64_t v135 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v136 = swift_allocObject();
      *(void *)(v136 + 16) = v135;
      *(void *)(v136 + 24) = v134;
      uint64_t v137 = *(void (**)(void (*)(), uint64_t, char *, uint64_t))(v132 + 72);
      swift_unknownObjectRetain();
      uint64_t v138 = v124;
      swift_retain();
      swift_retain();
      v137(sub_10004AF2C, v136, v200, v132);
      v126 = (void *)v201;
      objc_super v111 = ObjectType;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v139 = (objc_class *)type metadata accessor for BaseOperation();
      v210.receiver = v126;
      v210.super_class = v139;
      [super addDependency:v130];
    }
  }
  uint64_t v140 = v126;
  uint64_t v201 = (uint64_t)v124;

  uint64_t v141 = swift_allocObject();
  v142 = v202;
  swift_unknownObjectWeakInit();
  id v143 = (uint64_t (**)(uint64_t))&v140[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v144 = *(void *)&v140[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *id v143 = sub_10018A578;
  v143[1] = (uint64_t (*)(uint64_t))v141;
  sub_1000536BC(v144);
  self;
  uint64_t v145 = swift_dynamicCastObjCClass();
  if (v145)
  {
    uint64_t v146 = v145;
    swift_getObjectType();
    uint64_t v147 = swift_conformsToProtocol2();
    uint64_t v148 = v147 ? v147 : 0;
    if (v147 ? v146 : 0)
    {
      v200 = (char *)swift_getObjectType();
      uint64_t v150 = swift_allocObject();
      *(void *)(v150 + 24) = v148;
      swift_unknownObjectWeakInit();
      uint64_t v151 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v152 = swift_allocObject();
      *(void *)(v152 + 16) = v151;
      *(void *)(v152 + 24) = v150;
      id v153 = *(void (**)(void (*)(), uint64_t, char *, uint64_t))(v148 + 72);
      swift_unknownObjectRetain();
      v154 = v140;
      swift_retain();
      swift_retain();
      v153(sub_10004AF2C, v152, v200, v148);
      v142 = v202;
      objc_super v111 = ObjectType;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v155 = (objc_class *)type metadata accessor for BaseOperation();
      v211.receiver = v142;
      v211.super_class = v155;
      [super addDependency:v146];
    }
  }
  id v156 = v142;

  uint64_t v157 = swift_allocObject();
  objc_super v158 = (void *)v203;
  swift_unknownObjectWeakInit();
  objc_super v159 = (uint64_t (**)(uint64_t))&v156[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v160 = *(void *)&v156[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *objc_super v159 = sub_10018AAC8;
  v159[1] = (uint64_t (*)(uint64_t))v157;
  sub_1000536BC(v160);
  self;
  uint64_t v161 = swift_dynamicCastObjCClass();
  if (v161)
  {
    uint64_t v162 = v161;
    swift_getObjectType();
    uint64_t v163 = swift_conformsToProtocol2();
    uint64_t v164 = v163 ? v163 : 0;
    if (v163 ? v162 : 0)
    {
      v200 = (char *)swift_getObjectType();
      uint64_t v166 = swift_allocObject();
      *(void *)(v166 + 24) = v164;
      swift_unknownObjectWeakInit();
      uint64_t v167 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v168 = swift_allocObject();
      *(void *)(v168 + 16) = v167;
      *(void *)(v168 + 24) = v166;
      v202 = v140;
      objc_super v169 = *(void (**)(void (*)(), uint64_t, char *, uint64_t))(v164 + 72);
      swift_unknownObjectRetain();
      v170 = v156;
      swift_retain();
      swift_retain();
      v169(sub_10004AF2C, v168, v200, v164);
      uint64_t v140 = v202;
      objc_super v158 = (void *)v203;
      objc_super v111 = ObjectType;
      swift_release();
      swift_release();
      swift_release();
      v171 = (objc_class *)type metadata accessor for BaseOperation();
      v212.receiver = v158;
      v212.super_class = v171;
      [super addDependency:v162];
    }
  }
  v172 = v158;

  v173 = (uint64_t (**)())&v172[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  uint64_t v174 = *(void *)&v172[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  *v173 = sub_100188094;
  v173[1] = 0;
  sub_1000536BC(v174);

  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v175 = swift_allocObject();
  *(_OWORD *)(v175 + 16) = xmmword_10046D000;
  v176 = v206;
  *(void *)(v175 + 32) = v206;
  *(void *)(v175 + 40) = v111;
  v177 = (void *)v201;
  *(void *)(v175 + 48) = v201;
  *(void *)(v175 + 56) = v172;
  *(void *)(v175 + 64) = v140;
  *(void *)(v175 + 72) = v156;
  unint64_t v217 = v175;
  specialized Array._endMutation()();
  unint64_t v178 = v217;
  id v179 = v176;
  v180 = v111;
  id v181 = v177;
  v182 = v140;
  v183 = v156;
  v184 = v172;
  id v185 = sub_100175D10();
  if (v178 >> 62)
  {
    sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
  }
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v185 addOperations:isa waitUntilFinished:0];
}

void sub_1001877C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v10 + 16);
  swift_retain();
  uint64_t v13 = swift_retain();
  uint64_t v14 = (void *)v12(v13);
  swift_release();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = sub_10018AB30;
  v15[6] = v11;
  v18[4] = sub_10018AB38;
  v18[5] = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10003B424;
  v18[3] = &unk_100555838;
  uint64_t v16 = _Block_copy(v18);
  id v17 = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v17 performBlock:v16];
  _Block_release(v16);
  swift_release();
}

void sub_100187940(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054BBC(a1, (uint64_t)v8, (uint64_t *)&unk_1005F7750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7750);
LABEL_11:
    uint64_t v25 = v28;
    *uint64_t v28 = 0;
    *((unsigned char *)v25 + 8) = 0;
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  type metadata accessor for FairPlayRolloutController();
  uint64_t v13 = (void *)static FairPlayRolloutController.shared.getter();
  Swift::Bool v14 = FairPlayRolloutController.isEnabled()();

  if (!v14)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_11;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = *(void **)(Strong + OBJC_IVAR____TtC8Podcasts11JobPipeline_fairPlayInvalidationManager);
    swift_unknownObjectRetain();
    swift_release();
    URL._bridgeToObjectiveC()(v17);
    uint64_t v19 = v18;
    [v16 markKeyForInvalidationAt:v18 shouldRemove:0];

    swift_unknownObjectRelease();
  }
  static Logger.fairPlay.getter();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  id v23 = [self activeAccount];
  id v24 = [self controllerWithUserIdentity:v23];

  if (v24)
  {
    [v24 processPendingKeyInvalidations];

    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_100187CFC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v30 = a3;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v6 = type metadata accessor for DownloadJob(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(unsigned char *)(a4 + 8) = 0;
    return result;
  }
  uint64_t v14 = result;
  uint64_t v25 = a4;
  uint64_t v15 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  id v16 = *(id *)(result + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v26 = v4;

  sub_10018A620((uint64_t)v10, (uint64_t)v12, type metadata accessor for DownloadJob);
  id v17 = &v12[*(int *)(v6 + 40)];
  sub_10018A688(*(void *)v17, *((void *)v17 + 1), *((void *)v17 + 2), *((void *)v17 + 3));
  *(void *)id v17 = 0;
  *((void *)v17 + 1) = 0;
  *((void *)v17 + 2) = 0;
  *((void *)v17 + 3) = 4;
  *((void *)v17 + 4) = 0;
  *((void *)v17 + 5) = 0;
  *((_WORD *)v17 + 24) = 0;
  sub_10018A5C0((uint64_t)v10, type metadata accessor for DownloadJob);
  uint64_t v18 = *(void **)(v14 + v15);
  sub_10018A620((uint64_t)v12, (uint64_t)v10, type metadata accessor for DownloadJob);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v14;
  sub_10018CD14((uint64_t)v10, v20 + v19, type metadata accessor for DownloadJob);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_10018A6A4;
  *(void *)(v21 + 24) = v20;
  aBlock[4] = sub_100018840;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  aBlock[3] = &unk_1005557C0;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = v18;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v23, v22);
  _Block_release(v22);

  sub_10018A5C0((uint64_t)v12, type metadata accessor for DownloadJob);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v17 & 1) == 0)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1003C5D94(v14, v27, v28, v30);
      swift_release();
      uint64_t result = swift_unknownObjectRelease();
    }
    else
    {
      uint64_t result = swift_release();
    }
    a4 = v25;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100188094()
{
  return sub_1001898B8();
}

uint64_t sub_1001880A4(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  char v6 = a4;
  int v53 = a4;
  uint64_t v10 = type metadata accessor for DownloadJob(0);
  uint64_t v55 = *(void *)(v10 - 8);
  uint64_t v54 = *(void *)(v55 + 64);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v48 - v14;
  int v52 = static os_log_type_t.debug.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v50 = static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10046D020;
  *(void *)(v16 + 56) = &type metadata for Double;
  *(void *)(v16 + 64) = &protocol witness table for Double;
  *(double *)(v16 + 32) = (double)a3 / (double)a2;
  *(void *)(v16 + 96) = &type metadata for Int64;
  *(void *)(v16 + 104) = &protocol witness table for Int64;
  *(void *)(v16 + 72) = a3;
  *(void *)(v16 + 136) = &type metadata for Int64;
  *(void *)(v16 + 144) = &protocol witness table for Int64;
  *(void *)(v16 + 112) = a2;
  unint64_t v17 = sub_10004DA4C();
  unint64_t v18 = v17;
  uint64_t v19 = 28526;
  if (v6) {
    uint64_t v19 = 7562617;
  }
  unint64_t v20 = 0xE200000000000000;
  if (v6) {
    unint64_t v20 = 0xE300000000000000;
  }
  *(void *)(v16 + 176) = &type metadata for String;
  *(void *)(v16 + 184) = v17;
  *(void *)(v16 + 152) = v19;
  *(void *)(v16 + 160) = v20;
  uint64_t v48 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  id v21 = *(id *)(v4 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();

  uint64_t v22 = *(int *)(v10 + 20);
  uint64_t v49 = v15;
  id v23 = &v15[v22];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  uint64_t v51 = type metadata accessor for DownloadJob;
  sub_10018A5C0((uint64_t)v15, type metadata accessor for DownloadJob);
  *(void *)(v16 + 216) = &type metadata for String;
  *(void *)(v16 + 224) = v18;
  *(void *)(v16 + 192) = v25;
  *(void *)(v16 + 200) = v24;
  uint64_t v26 = (void *)v50;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v27 = v48;
  id v28 = *(id *)(v5 + v48);
  OS_dispatch_queue.sync<A>(execute:)();

  id v29 = [a1 totalUnitCount];
  id v30 = [a1 completedUnitCount];
  uint64_t v31 = sub_100237ED0();
  uint64_t v33 = v32;
  [a1 fractionCompleted];
  uint64_t v35 = v34;
  uint64_t v36 = NSProgress.estimatedTimeRemaining.getter();
  v57[0] = v29;
  v57[1] = v30;
  v57[2] = v31;
  v57[3] = v33;
  v57[4] = v35;
  v57[5] = v36;
  char v58 = v37 & 1;
  uint64_t v38 = (uint64_t)v49;
  sub_100233D8C((uint64_t)v57, v53, (uint64_t)v49);
  swift_bridgeObjectRelease();
  uint64_t v39 = v51;
  sub_10018A5C0((uint64_t)v13, v51);
  id v40 = *(void **)(v5 + v27);
  uint64_t v41 = v38;
  sub_10018A620(v38, (uint64_t)v13, type metadata accessor for DownloadJob);
  unint64_t v42 = (*(unsigned __int8 *)(v55 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v5;
  sub_10018CD14((uint64_t)v13, v43 + v42, type metadata accessor for DownloadJob);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_10018A6A4;
  *(void *)(v44 + 24) = v43;
  aBlock[4] = sub_100018840;
  aBlock[5] = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  aBlock[3] = &unk_100555568;
  uint64_t v45 = _Block_copy(aBlock);
  uint64_t v46 = v40;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v46, v45);
  _Block_release(v45);

  sub_10018A5C0(v41, v39);
  LOBYTE(v40) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v40)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_100331A98((uint64_t)sub_10018A744, v5);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1001885EC(uint64_t a1)
{
  id v2 = sub_100175D10();
  v4[4] = sub_10018A74C;
  v4[5] = a1;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_10003B424;
  v4[3] = &unk_100555590;
  uint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  [v2 addOperationWithBlock:v3];
  _Block_release(v3);
}

uint64_t sub_1001886BC(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1003BE080(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10018871C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v24 = a3;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v5 = type metadata accessor for DownloadJob(0);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v27 + 64);
  __chkstk_darwin();
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v9 = &v23[-v8];
  uint64_t v10 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  id v11 = *(id *)(v3 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();

  sub_10018A620((uint64_t)v7, (uint64_t)v9, type metadata accessor for DownloadJob);
  uint64_t v12 = &v9[*(int *)(v5 + 40)];
  sub_10018A688(*(void *)v12, *((void *)v12 + 1), *((void *)v12 + 2), *((void *)v12 + 3));
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 4;
  *((void *)v12 + 4) = 0;
  *((void *)v12 + 5) = 0;
  *((_WORD *)v12 + 24) = 0;
  sub_10018A5C0((uint64_t)v7, type metadata accessor for DownloadJob);
  uint64_t v13 = *(void **)(v4 + v10);
  sub_10018A620((uint64_t)v9, (uint64_t)v7, type metadata accessor for DownloadJob);
  unint64_t v14 = (*(unsigned __int8 *)(v27 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v4;
  sub_10018CD14((uint64_t)v7, v15 + v14, type metadata accessor for DownloadJob);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10018A6A4;
  *(void *)(v16 + 24) = v15;
  id v30 = sub_100018840;
  uint64_t v31 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  id v29 = &unk_1005554F0;
  unint64_t v17 = _Block_copy(aBlock);
  unint64_t v18 = v13;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v18, v17);
  _Block_release(v17);

  sub_10018A5C0((uint64_t)v9, type metadata accessor for DownloadJob);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v17)
  {
    __break(1u);
  }
  else
  {
    id v20 = *(id *)(v4 + v10);
    sub_100054B78(&qword_1005F8450);
    OS_dispatch_queue.sync<A>(execute:)();

    id v21 = v29;
    uint64_t v22 = v30;
    sub_100041A98(aBlock, (uint64_t)v29);
    (*((void (**)(void *, uint64_t (*)()))v22 + 15))(v21, v22);
    sub_10004D2D8((uint64_t)aBlock);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1003C5D94(v4, v25, v26, v24 | 0x40);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100188AD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&ObjectType - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&ObjectType - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v9 = (void *)static OS_os_log.downloads.getter();
  os_log(_:dso:log:_:_:)();

  id v10 = *(id *)(v1 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();

  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_10018A5C0((uint64_t)v8, type metadata accessor for DownloadJob);
  id v11 = (char *)sub_1001899C0((uint64_t)v5, 0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = (objc_class *)sub_100054B78((uint64_t *)&unk_1005FF010);
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  unint64_t v14 = &v13[*(void *)((swift_isaMask & *(void *)v13) + 0x180)];
  *(void *)unint64_t v14 = 0;
  v14[8] = 2;
  uint64_t v15 = &v13[*(void *)((swift_isaMask & *(void *)v13) + 0x188)];
  *(void *)uint64_t v15 = sub_10018A4F4;
  *((void *)v15 + 1) = v1;
  v73.receiver = v13;
  v73.super_class = v12;
  swift_retain();
  id v16 = [super init];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  unint64_t v18 = (char *)objc_allocWithZone(v12);
  uint64_t v19 = &v18[*(void *)((swift_isaMask & *(void *)v18) + 0x180)];
  *(void *)uint64_t v19 = 0;
  v19[8] = 2;
  id v20 = (void (**)(uint64_t@<X8>))&v18[*(void *)((swift_isaMask & *(void *)v18) + 0x188)];
  *id v20 = sub_10018A548;
  v20[1] = (void (*)(uint64_t@<X8>))v17;
  v72.receiver = v18;
  v72.super_class = v12;
  id v21 = [super init];
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v23 = (uint64_t (**)(uint64_t))&v11[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v24 = *(void *)&v11[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *id v23 = sub_10018A578;
  v23[1] = (uint64_t (*)(uint64_t))v22;
  sub_1000536BC(v24);
  self;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    uint64_t v26 = v25;
    swift_getObjectType();
    uint64_t v27 = swift_conformsToProtocol2();
    uint64_t v28 = v27 ? v27 : 0;
    if (v27 ? v26 : 0)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v30 = swift_allocObject();
      id v68 = v16;
      uint64_t v31 = v30;
      *(void *)(v30 + 24) = v28;
      swift_unknownObjectWeakInit();
      uint64_t v32 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      *(void *)(v33 + 24) = v31;
      uint64_t v67 = v1;
      uint64_t v34 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v28 + 72);
      swift_unknownObjectRetain();
      uint64_t v35 = v11;
      uint64_t v66 = v11;
      uint64_t v36 = v35;
      swift_retain();
      swift_retain();
      v34(sub_10004AF2C, v33, ObjectType, v28);
      uint64_t v1 = v67;
      id v16 = v68;
      swift_release();
      swift_release();
      swift_release();
      char v37 = (objc_class *)type metadata accessor for BaseOperation();
      v69.receiver = v21;
      v69.super_class = v37;
      [super addDependency:v26];

      id v11 = v66;
    }
  }
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v39 = (uint64_t (**)(uint64_t))&v21[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  uint64_t v40 = *(void *)&v21[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
  *uint64_t v39 = sub_10018A578;
  v39[1] = (uint64_t (*)(uint64_t))v38;
  uint64_t v41 = v21;
  sub_1000536BC(v40);
  self;
  uint64_t v42 = swift_dynamicCastObjCClass();
  if (v42)
  {
    uint64_t v43 = v42;
    swift_getObjectType();
    uint64_t v44 = swift_conformsToProtocol2();
    uint64_t v45 = v44 ? v44 : 0;
    if (v44 ? v43 : 0)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v47 = swift_allocObject();
      id v68 = v16;
      uint64_t v48 = v47;
      *(void *)(v47 + 24) = v45;
      swift_unknownObjectWeakInit();
      uint64_t v49 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = v49;
      *(void *)(v50 + 24) = v48;
      uint64_t v67 = v1;
      uint64_t v51 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v45 + 72);
      swift_unknownObjectRetain();
      int v52 = v41;
      uint64_t v66 = v11;
      int v53 = v52;
      swift_retain();
      swift_retain();
      v51(sub_10004A488, v50, ObjectType, v45);
      id v16 = v68;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v54 = (objc_class *)type metadata accessor for BaseOperation();
      v70.receiver = v16;
      v70.super_class = v54;
      [super addDependency:v43];

      id v11 = v66;
    }
  }
  uint64_t v55 = (char *)v16;

  uint64_t v56 = (uint64_t (**)())&v55[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  uint64_t v57 = *(void *)&v55[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
  *uint64_t v56 = sub_1001898A8;
  v56[1] = 0;
  sub_1000536BC(v57);

  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_10046D070;
  *(void *)(v58 + 32) = v11;
  *(void *)(v58 + 40) = v41;
  *(void *)(v58 + 48) = v55;
  uint64_t v71 = v58;
  specialized Array._endMutation()();
  unint64_t v59 = v71;
  uint64_t v60 = v11;
  uint64_t v61 = v41;
  uint64_t v62 = v55;
  id v63 = sub_100175D10();
  if (v59 >> 62)
  {
    sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
  }
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1005FF020);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v63 addOperations:isa waitUntilFinished:0];
}

uint64_t sub_100189328@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = type metadata accessor for DownloadJob(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue;
  id v12 = *(id *)(a1 + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v23 = v2;

  sub_10018A620((uint64_t)v8, (uint64_t)v10, type metadata accessor for DownloadJob);
  uint64_t v13 = &v10[*(int *)(v4 + 40)];
  sub_10018A688(*(void *)v13, *((void *)v13 + 1), *((void *)v13 + 2), *((void *)v13 + 3));
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  *((void *)v13 + 3) = 3;
  *((void *)v13 + 4) = 0;
  *((void *)v13 + 5) = 0;
  *((_WORD *)v13 + 24) = 0;
  sub_10018A5C0((uint64_t)v8, type metadata accessor for DownloadJob);
  unint64_t v14 = *(void **)(a1 + v11);
  sub_10018A620((uint64_t)v10, (uint64_t)v8, type metadata accessor for DownloadJob);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_10018CD14((uint64_t)v8, v16 + v15, type metadata accessor for DownloadJob);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_10018A6A4;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_10004A010;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018818;
  void aBlock[3] = &unk_100555478;
  unint64_t v18 = _Block_copy(aBlock);
  uint64_t v19 = v14;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v19, v18);
  _Block_release(v18);

  sub_10018A5C0((uint64_t)v10, type metadata accessor for DownloadJob);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v13)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1003C5120(a1);
      uint64_t result = swift_unknownObjectRelease();
    }
    id v21 = v25;
    *uint64_t v25 = 0;
    *((unsigned char *)v21 + 8) = 0;
  }
  return result;
}

void sub_100189670(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for EpisodeMetadata(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin(v5);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for FairPlayRolloutController();
  uint64_t v8 = (void *)static FairPlayRolloutController.shared.getter();
  Swift::Bool v9 = FairPlayRolloutController.isEnabled()();

  if (!v9)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      id v11 = *(id *)(Strong + OBJC_IVAR____TtC8Podcasts11JobPipeline_accessQueue);
      OS_dispatch_queue.sync<A>(execute:)();
      swift_release();

      sub_10018A620((uint64_t)&v7[*(int *)(v5 + 36)], (uint64_t)v4, type metadata accessor for EpisodeMetadata);
      sub_10018A5C0((uint64_t)v7, type metadata accessor for DownloadJob);
      char v12 = v4[40];
      sub_10018A5C0((uint64_t)v4, type metadata accessor for EpisodeMetadata);
      if ((v12 & 1) == 0)
      {
        swift_beginAccess();
        uint64_t v13 = swift_weakLoadStrong();
        if (v13)
        {
          id v14 = *(id *)(v13 + OBJC_IVAR____TtC8Podcasts11JobPipeline_secureDownloadRenewalManager);
          swift_release();
          dispatch thunk of SecureDownloadRenewalManager.requestSecureDeletion(of:completionHandler:)();
        }
      }
    }
  }
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_1001898A8()
{
  return sub_1001898B8();
}

uint64_t sub_1001898B8()
{
  static os_log_type_t.error.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  uint64_t v0 = (void *)static OS_os_log.downloads.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10046D010;
  swift_getErrorValue();
  uint64_t v2 = Error.localizedDescription.getter();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 64) = sub_10004DA4C();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  os_log(_:dso:log:_:_:)();

  return swift_bridgeObjectRelease();
}

id sub_1001899C0(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = OBJC_IVAR____TtC8Podcasts11JobPipeline_jobStorage;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  long long v17 = *(_OWORD *)(v2 + v8);
  swift_unknownObjectRetain();
  uint64_t v9 = static OS_os_log.downloads.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(unsigned char *)(v11 + v10 + v7) = a2;
  char v12 = (objc_class *)sub_100054B78(&qword_1005F6BF8);
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  id v14 = &v13[*(void *)((swift_isaMask & *(void *)v13) + 0x198)];
  *(void *)id v14 = 0;
  v14[8] = 2;
  unint64_t v15 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))&v13[*(void *)((swift_isaMask & *(void *)v13)
                                                                                 + 0x1A8)];
  *unint64_t v15 = sub_10018A43C;
  v15[1] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11;
  *(_OWORD *)&v13[*(void *)((swift_isaMask & *(void *)v13) + 0x1A0)] = v17;
  *(void *)&v13[*(void *)((swift_isaMask & *(void *)v13) + 0x1B0)] = v9;
  v18.receiver = v13;
  v18.super_class = v12;
  return [super init];
}

uint64_t sub_100189C00()
{
  sub_10018A5C0(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline_metadata, type metadata accessor for EpisodeMetadata);
  sub_10018DB70(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline_delegate);
  sub_10018A5C0(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline__job, type metadata accessor for DownloadJob);
  sub_10004D2D8(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline__task);
  sub_1000536BC(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline_assetPrefetchBlock));
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline_assetsFolder;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline_mediaLibraryClient, (uint64_t *)&unk_1005F6FD0);
  sub_10004D2D8(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline_dsidProvider);
  sub_10004D2D8(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline_artworkStorage);
  swift_unknownObjectRelease();

  swift_release();
  sub_10018D3A4(*(void *)(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline_takeOffCheck));
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + OBJC_IVAR____TtC8Podcasts11JobPipeline_bugReporter);
  return v0;
}

uint64_t sub_100189DD0()
{
  sub_100189C00();

  return swift_deallocClassInstance();
}

uint64_t sub_100189E28()
{
  return type metadata accessor for JobPipeline(0);
}

uint64_t type metadata accessor for JobPipeline(uint64_t a1)
{
  return sub_10004F778(a1, qword_1005F6908);
}

uint64_t sub_100189E50()
{
  uint64_t result = type metadata accessor for EpisodeMetadata(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DownloadJob(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for URL();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PreflightError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_10018E534(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_100189FF0);
}

uint64_t sub_100189FF0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t destroy for PreflightError(uint64_t a1)
{
  return sub_10018A014(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_10018A014(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t *assignWithCopy for PreflightError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10018E5B0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_100189FF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10018A014);
}

uint64_t *assignWithTake for PreflightError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10018E634(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_10018A014);
}

uint64_t getEnumTagSinglePayload for PreflightError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PreflightError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10018A0F8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PreflightError()
{
  return &type metadata for PreflightError;
}

unsigned char *storeEnumTagSinglePayload for JobPipeline.PipelineType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018A1ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JobPipeline.PipelineType()
{
  return &type metadata for JobPipeline.PipelineType;
}

unint64_t sub_10018A228()
{
  unint64_t result = qword_1005F6BE0;
  if (!qword_1005F6BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F6BE0);
  }
  return result;
}

unint64_t sub_10018A280()
{
  unint64_t result = qword_1005F6BE8;
  if (!qword_1005F6BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F6BE8);
  }
  return result;
}

uint64_t sub_10018A2D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100056D54(v1 + OBJC_IVAR____TtC8Podcasts11JobPipeline__task, a1);
}

uint64_t *sub_10018A30C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10018A370(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10018A3A8()
{
  uint64_t v1 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_10018A43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  sub_1001D7BF0(v4 + v8, *(unsigned char *)(v4 + v8 + *(void *)(v7 + 64)), a3, a4);
}

uint64_t sub_10018A4DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10018DA98(a1);
}

uint64_t sub_10018A4F4@<X0>(void *a1@<X8>)
{
  return sub_100189328(v1, a1);
}

uint64_t sub_10018A510()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_10018A548(uint64_t a1@<X8>)
{
}

uint64_t sub_10018A578(uint64_t a1)
{
  return sub_1003CAEC8(a1, v1);
}

uint64_t sub_10018A580()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10018A5C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10018A620(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10018A688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((unint64_t)(a4 - 1) >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10018A6A8()
{
  return swift_deallocObject();
}

uint64_t sub_10018A6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadJob(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018A720()
{
  return swift_deallocObject();
}

uint64_t sub_10018A734()
{
  return swift_deallocObject();
}

void sub_10018A744()
{
  sub_1001885EC(v0);
}

uint64_t sub_10018A74C()
{
  return sub_1001886BC(v0);
}

unint64_t sub_10018A754()
{
  unint64_t result = qword_100608040;
  if (!qword_100608040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100608040);
  }
  return result;
}

uint64_t sub_10018A7A8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10018A7E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001877C8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_10018A7E8()
{
  uint64_t v1 = *(void *)(sub_100054B78((uint64_t *)&unk_1005F7750) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();

  return swift_deallocObject();
}

void sub_10018A924(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_100054B78((uint64_t *)&unk_1005F7750) - 8);
  sub_100187940(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_10018A9D0()
{
  swift_release();
  sub_10018AA14(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_10018AA14(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  int v3 = a3 >> 6;
  if (v3 == 2) {
    return swift_errorRelease();
  }
  if (v3 != 1)
  {
    if (a3 >> 6) {
      return result;
    }
    return swift_errorRelease();
  }
  return sub_10018A014(result, a2, a3 & 0x3F);
}

uint64_t sub_10018AA3C@<X0>(uint64_t a1@<X8>)
{
  return sub_100187CFC(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

uint64_t sub_10018AA60(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  int v3 = a3 >> 6;
  if (v3 == 2) {
    return swift_errorRetain();
  }
  if (v3 != 1)
  {
    if (a3 >> 6) {
      return result;
    }
    return swift_errorRetain();
  }
  return sub_100189FF0(result, a2, a3 & 0x3F);
}

uint64_t sub_10018AA88()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10018AAC0(uint64_t a1)
{
  return sub_1003CB080(a1, v1);
}

uint64_t sub_10018AAC8(uint64_t a1)
{
  return sub_1003CAE94(a1, v1);
}

uint64_t sub_10018AAE8()
{
  return swift_deallocObject();
}

uint64_t sub_10018AAF8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10018AB38()
{
  return sub_10018C834((uint64_t (*)(void, void, void, void, void))sub_10040EC04);
}

uint64_t sub_10018AB50()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10018AB90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100183BC4(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_10018AB9C()
{
  swift_bridgeObjectRelease();
  sub_10004D2D8(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_10018ABDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100183DA4(a1, a2, a3, v3[2], v3[3], v3 + 4);
}

void sub_10018ABE8(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t), uint64_t a4)
{
  sub_1001842E0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_10018ABF0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001848D8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_10018ABF8()
{
  sub_10004D2D8(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10018AC30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100184CC0(a1, a2, a3, (void *)(v3 + 16));
}

uint64_t sub_10018AC38(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  return sub_100185988(a1, a2, a3, (void *)(v3 + 16));
}

uint64_t sub_10018AC40(uint64_t a1)
{
  return sub_1003CB2FC(a1, v1);
}

uint64_t sub_10018AC48(uint64_t a1)
{
  return sub_1003CB0D4(a1, v1);
}

uint64_t sub_10018AC50(uint64_t a1)
{
  return sub_1003CB0C8(a1, v1);
}

uint64_t sub_10018AC58(uint64_t a1)
{
  return sub_1003CB0BC(a1, v1);
}

uint64_t sub_10018AC60()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10018ACA0(uint64_t a1)
{
  return sub_100185F38(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10018ACC0(uint64_t a1, char a2)
{
  return sub_100185E5C(a1, a2 & 1, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_10018ACCC(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_10018ACD8(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10018ACE4()
{
  uint64_t v1 = type metadata accessor for MediaLibraryPid();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_10004D2D8(v0 + 16);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10018ADB8()
{
  uint64_t v1 = *(void *)(type metadata accessor for MediaLibraryPid() - 8);
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100185088(v0 + 2, v2, v3, v4);
}

uint64_t sub_10018AE20()
{
  uint64_t v1 = type metadata accessor for MediaLibraryPid();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10018AEFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MediaLibraryPid() - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unsigned int v6 = (uint64_t (*)(uint64_t))v1[4];
  uint64_t v7 = v1[5];
  unint64_t v8 = (void (*)(char *))v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100185610(a1, v4, v5, v6, v7, v8, v9, v10);
}

unint64_t sub_10018AF78()
{
  unint64_t result = qword_1005F6C58;
  if (!qword_1005F6C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F6C58);
  }
  return result;
}

uint64_t sub_10018AFD0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MediaLibraryPid() - 8);
  uint64_t v4 = *(void (**)(char *))(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100185224(a1, v4, v5, v6);
}

uint64_t sub_10018B048(uint64_t a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(type metadata accessor for MediaLibraryPid() - 8);
  unint64_t v8 = *(void (**)(uint64_t *))(v3 + 16);
  uint64_t v9 = *(void *)(v3 + 24);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100184B78(a1, a2, v6, v8, v9, v10);
}

uint64_t sub_10018B0D8()
{
  return sub_10018C834((uint64_t (*)(void, void, void, void, void))sub_10040F90C);
}

uint64_t sub_10018B0F0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10018B104()
{
  uint64_t v1 = type metadata accessor for MediaLibraryPid();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10018B1D0(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for MediaLibraryPid() - 8);
  char v6 = *(void (**)(void *))(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1001847B0(a1, v4, v6, v7, v8);
}

uint64_t sub_10018B254()
{
  uint64_t v1 = type metadata accessor for MediaLibraryPid();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_10018B330()
{
  uint64_t v1 = *(void *)(type metadata accessor for MediaLibraryPid() - 8);
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = v0[4];
  uint64_t v5 = (void (*)(void, uint64_t))v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10040E270(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10018B39C(uint64_t a1)
{
  return sub_100183FA8(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_10018B3A4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10018B3F4()
{
  return sub_10018D138((uint64_t (*)(void, void, void, void, void, void))sub_10040F824);
}

uint64_t sub_10018B40C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v5 + v3 + v4) & ~v3;
  unint64_t v7 = (v5 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v21 = *(unsigned __int8 *)(*((void *)v8 - 1) + 80);
  uint64_t v9 = (v21 + v7 + 16) & ~v21;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  v10(v0 + v6, v1);
  if (*(void *)(v0 + v7)) {
    swift_release();
  }
  uint64_t v11 = v0 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v0 + v9, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + v9 + v8[6];
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  id v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v20(v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = v0 + v9 + v8[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = type metadata accessor for EpisodeMetadata(0);
  v10(v16 + *(int *)(v17 + 44), v1);
  uint64_t v18 = v16 + *(int *)(v17 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v18, 1, v14)) {
    v20(v18, v14);
  }
  if ((unint64_t)(*(void *)(v11 + v8[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10018B728@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = (v7 + v6 + ((v6 + 16) & ~v6)) & ~v6;
  unint64_t v9 = (v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + v9 + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_100182354(a1, v2 + v8, *(void (**)(uint64_t))(v2 + v9), *(void *)(v2 + v9 + 8), v2 + v11, *(char **)(v2 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_10018B858(uint64_t a1)
{
  return sub_1003CB074(a1, v1);
}

uint64_t sub_10018B864(uint64_t a1)
{
  return sub_10018299C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_10018B870(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10018B8B8()
{
  unint64_t result = qword_1005F6CA0;
  if (!qword_1005F6CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F6CA0);
  }
  return result;
}

unint64_t sub_10018B90C()
{
  unint64_t result = qword_1005F6CA8;
  if (!qword_1005F6CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F6CA8);
  }
  return result;
}

unint64_t sub_10018B960()
{
  unint64_t result = qword_1005F6CB0;
  if (!qword_1005F6CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F6CB0);
  }
  return result;
}

uint64_t sub_10018B9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018BC40(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10017F1CC);
}

uint64_t sub_10018B9D4()
{
  uint64_t v1 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = v2 + v1[6];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v10 = v8 + *(int *)(v9 + 44);
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v8 + *(int *)(v9 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5)) {
    v7(v12, v5);
  }
  if ((unint64_t)(*(void *)(v2 + v1[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_10018BC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018BC40(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10017F980);
}

uint64_t sub_10018BC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  uint64_t v9 = v4 + ((*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return a4(a1, a2, a3, v9);
}

uint64_t sub_10018BCDC()
{
  uint64_t v1 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v18 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v16 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = v0;
  uint64_t v17 = (v18 + 16) & ~v18;
  uint64_t v4 = v0 + v17;
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v17, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v17 + v1[6];
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v14(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v17 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v11(v9 + *(int *)(v10 + 44), v2);
  uint64_t v12 = v9 + *(int *)(v10 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7)) {
    v14(v12, v7);
  }
  if ((unint64_t)(*(void *)(v4 + v1[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }
  v11(v19 + ((v17 + v16 + v15) & ~v15), v2);

  return swift_deallocObject();
}

void sub_10018BFBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v4 + ((*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_10018066C(a1, a2, a3, a4, v4 + v10, v4 + v13, v14);
}

uint64_t sub_10018C0E4()
{
  uint64_t v1 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v18 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v17 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = v0;
  uint64_t v4 = v0 + ((v18 + 16) & ~v18);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v4 + v1[6];
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = v4 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v20 = v2;
  uint64_t v12 = v2;
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v13(v10 + *(int *)(v11 + 44), v12);
  uint64_t v14 = v10 + *(int *)(v11 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7)) {
    v9(v14, v7);
  }
  if ((unint64_t)(*(void *)(v4 + v1[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  v13(v19 + ((((v17 + ((v18 + 16) & ~v18) + 7) & 0xFFFFFFFFFFFFFFF8) + v16 + 8) & ~v16), v20);

  return swift_deallocObject();
}

void sub_10018C3D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v13 = *(void *)(v4 + v11);
  uint64_t v14 = v4 + ((v11 + *(unsigned __int8 *)(v12 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));

  sub_100180920(a1, a2, a3, a4, v4 + v10, v13, v14);
}

void sub_10018C4E4(uint64_t a1@<X8>)
{
  sub_100180FA0(*(void (**)(char *))(v1 + 16), a1);
}

uint64_t sub_10018C500(uint64_t a1)
{
  return sub_1003CB4A4(a1, v1);
}

uint64_t sub_10018C508(uint64_t a1)
{
  return sub_1003CB498(a1, v1);
}

uint64_t sub_10018C510(uint64_t a1)
{
  return sub_1003CB464(a1, v1);
}

uint64_t sub_10018C518()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 32) & ~v3), v1);

  return swift_deallocObject();
}

uint64_t sub_10018C5EC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v4 = *(void (**)(void *))(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100181118(a1, v4, v5, v6);
}

uint64_t sub_10018C688()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10018C774(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(uint64_t (**)(void, void))v7;
  uint64_t v9 = *(void *)(v7 + 8);

  return sub_100180BD8(a1, v5, v6, v8, v9);
}

uint64_t sub_10018C81C()
{
  return sub_10018C834((uint64_t (*)(void, void, void, void, void))sub_10040E7F8);
}

uint64_t sub_10018C834(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10018C84C(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_10018C88C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_10018C990()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = (void *)v0[2];
  uint64_t v6 = v0[3];
  unint64_t v7 = v0[4];
  double v8 = *(double *)((char *)v0 + v3);
  uint64_t v9 = *(void (**)(void, uint64_t))((char *)v0 + v4);
  uint64_t v10 = *(void *)((char *)v0 + v4 + 8);
  uint64_t v11 = *(void *)((char *)v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_10040DC20(v5, v6, v7, (uint64_t)v0 + v2, v9, v10, v11, v8);
}

uint64_t sub_10018CA40()
{
  uint64_t v1 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();

  uint64_t v3 = v0 + ((v2 + 40) & ~v2);
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v1[6];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v14(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v10 = v8 + *(int *)(v9 + 44);
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v8 + *(int *)(v9 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6)) {
    v14(v12, v6);
  }
  if ((unint64_t)(*(void *)(v3 + v1[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_10018CCAC()
{
  type metadata accessor for DownloadJob(0);
  uint64_t v1 = (uint64_t (*)(void *, void))v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (void *)v0[4];

  return sub_10017FBB8(v1, v2, v3);
}

uint64_t sub_10018CD14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10018CD7C()
{
  uint64_t v1 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);

  uint64_t v3 = v0 + ((v2 + 24) & ~v2);
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v1[6];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v14(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v10 = v8 + *(int *)(v9 + 44);
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v8 + *(int *)(v9 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6)) {
    v14(v12, v6);
  }
  if ((unint64_t)(*(void *)(v3 + v1[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10018D000()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = *(void (**)(char *))v5;
  uint64_t v7 = *(void *)(v5 + 8);

  return sub_10017F3E0(v3, v4, v6, v7);
}

uint64_t sub_10018D094()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10018D0CC(uint64_t a1, uint64_t a2)
{
  sub_10017C7E4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_10018D0D8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10018D120()
{
  return sub_10018D138((uint64_t (*)(void, void, void, void, void, void))sub_10017C93C);
}

uint64_t sub_10018D138(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_10018D150()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_10018D188(unint64_t a1, char a2, uint64_t a3)
{
  return sub_10017CFBC(a1, a2 & 1, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(void))(v3 + 32));
}

uint64_t sub_10018D198()
{
  return sub_10018D43C();
}

uint64_t sub_10018D1A0(uint64_t a1)
{
  return sub_10017B4FC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), *(uint64_t (**)(uint64_t))(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_10018D1B4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 40) & ~v3), v1);

  return swift_deallocObject();
}

uint64_t sub_10018D290(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = (void (*)(uint64_t))v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10017BAF4(a1, v4, v5, v6, v7);
}

uint64_t type metadata accessor for JobPipelineError(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1005F6DB8);
}

uint64_t sub_10018D32C()
{
  return swift_deallocObject();
}

uint64_t sub_10018D340()
{
  return swift_deallocObject();
}

uint64_t sub_10018D354()
{
  return swift_deallocObject();
}

uint64_t sub_10018D364(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10018D3A4(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10018D3E4(uint64_t a1, uint64_t (*a2)(void *), uint64_t a3)
{
  return sub_1001772A8(a1, a2, a3, v3);
}

uint64_t sub_10018D3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001773E8(a1, a2);
}

uint64_t sub_10018D408@<X0>(uint64_t a1@<X8>)
{
  return sub_10017778C(v1, a1);
}

uint64_t sub_10018D424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100177974(a1, a2, a3, a4, v4);
}

uint64_t sub_10018D42C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  return sub_100177A80(a1, a2, a3, v3);
}

uint64_t sub_10018D434()
{
  return sub_10018D43C();
}

uint64_t sub_10018D43C()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10018D490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100177E30(a1, *(void *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_10018D4B0(uint64_t a1)
{
  return sub_1003CAEFC(a1);
}

uint64_t sub_10018D4B8(uint64_t a1)
{
  return sub_1003CAC78(a1, v1);
}

uint64_t sub_10018D4C4(uint64_t a1)
{
  return sub_1001785AC(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10018D4E4()
{
  uint64_t v1 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v3 = v0 + ((v2 + 24) & ~v2);
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v1[6];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v11 = v9 + *(int *)(v10 + 44);
  uint64_t v12 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v9 + *(int *)(v10 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6)) {
    v8(v13, v6);
  }
  if ((unint64_t)(*(void *)(v3 + v1[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_10018D740()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100175C7C(v2, v3);
}

uint64_t sub_10018D7A4()
{
  return swift_deallocObject();
}

uint64_t sub_10018D7B4()
{
  uint64_t v1 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  swift_release();
  uint64_t v3 = v0 + ((v2 + 40) & ~v2);
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v1[6];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v14(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v10 = v8 + *(int *)(v9 + 44);
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v8 + *(int *)(v9 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6)) {
    v14(v12, v6);
  }
  if ((unint64_t)(*(void *)(v3 + v1[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_10018DA20(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = (void (*)(uint64_t *))v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100177CB8(a1, v4, v5, v6, v7);
}

uint64_t sub_10018DA98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts11JobPipeline__job;
  swift_beginAccess();
  return sub_10018A620(v3, a1, type metadata accessor for DownloadJob);
}

uint64_t sub_10018DB10(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 >> 6 == 2) {
    return swift_errorRelease();
  }
  if (!(a3 >> 6)) {
    return sub_10018A014(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_10018DB2C(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v4 = *(uint64_t (**)(void *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  __int16 v7 = a3;
  return v4(v6);
}

uint64_t sub_10018DB70(uint64_t a1)
{
  return a1;
}

void *sub_10018DB98(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    uint64_t v3 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    swift_errorRetain();
    *uint64_t v3 = v5;
    uint64_t v7 = *(int *)(sub_100054B78(&qword_1005F6CF0) + 48);
    uint64_t v8 = (char *)v3 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005F7750);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_10018DD10(uint64_t a1)
{
  swift_errorRelease();
  uint64_t v2 = a1 + *(int *)(sub_100054B78(&qword_1005F6CF0) + 48);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

void *sub_10018DDE8(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  swift_errorRetain();
  *a1 = v4;
  uint64_t v5 = *(int *)(sub_100054B78(&qword_1005F6CF0) + 48);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_100054B78((uint64_t *)&unk_1005F7750);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_10018DF14(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  swift_errorRetain();
  *a1 = v4;
  swift_errorRelease();
  uint64_t v5 = *(int *)(sub_100054B78(&qword_1005F6CF0) + 48);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = sub_100054B78((uint64_t *)&unk_1005F7750);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

void *sub_10018E0AC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(sub_100054B78(&qword_1005F6CF0) + 48);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005F7750);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_10018E1D0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_errorRelease();
  uint64_t v4 = *(int *)(sub_100054B78(&qword_1005F6CF0) + 48);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005F7750);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_10018E360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F6CF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10018E3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100054B78(&qword_1005F6CF0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

void sub_10018E450(uint64_t a1)
{
  sub_10000927C();
  if (v2 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v3;
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PipelineError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_10018E534(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10018AA60);
}

uint64_t destroy for PipelineError(uint64_t a1)
{
  return sub_10018AA14(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_10018E534(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for PipelineError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10018E5B0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10018AA60, (void (*)(uint64_t, uint64_t, uint64_t))sub_10018AA14);
}

uint64_t *sub_10018E5B0(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for PipelineError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10018E634(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_10018AA14);
}

uint64_t *sub_10018E634(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 16) & 0x3C | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PipelineError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 62;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_10018E724(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_10018E730(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_10018E740(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for PipelineError()
{
  return &type metadata for PipelineError;
}

ValueMetadata *type metadata accessor for PostflightError()
{
  return &type metadata for PostflightError;
}

uint64_t sub_10018E7E8@<X0>(uint64_t a1@<X8>)
{
  return sub_10018A2D4(a1);
}

id sub_10018E8B0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CarPlayMigrationBridge()) init];
  qword_10061A970 = (uint64_t)result;
  return result;
}

uint64_t sub_10018E9C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10018EAA4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10018EB24(uint64_t a1, void **a2)
{
  unint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

id sub_10018ECB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlayMigrationBridge();
  return [super dealloc];
}

uint64_t sub_10018ED58()
{
  return type metadata accessor for CarPlayMigrationBridge();
}

uint64_t type metadata accessor for CarPlayMigrationBridge()
{
  uint64_t result = qword_1005F6E00;
  if (!qword_1005F6E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10018EDAC()
{
  sub_10018EE3C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10018EE3C()
{
  if (!qword_1005F6E10)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1005F6E10);
    }
  }
}

uint64_t PodcastsStateTransitionsExternalEffectsProtocol.unsafeUpdateFeed(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a3 + 16))(a1, 0, a2, a3);
}

uint64_t PodcastsStateTransitionsExternalEffects.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t PodcastsStateTransitionsExternalEffects.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

void PodcastsStateTransitionsExternalEffects.unsafeUpdateFeed(for:shouldFetchPlayState:)(void *a1, int a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [a1 uuid];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
    id v14 = [a1 managedObjectContext];
    if (v14)
    {
      uint64_t v15 = v14;
      LODWORD(v55) = a2;
      [v14 saveInCurrentBlock];
      id v16 = [a1 title];
      uint64_t v54 = v11;
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;
      }
      else
      {
        uint64_t v18 = 0;
        uint64_t v20 = 0;
      }
      id v30 = [a1 storeCollectionId];
      id v31 = [a1 feedURL];
      if (v31)
      {
        uint64_t v32 = v31;
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;
      }
      else
      {
        uint64_t v33 = 0;
        uint64_t v35 = 0;
      }
      uint64_t v36 = *(void **)(v2 + 24);
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v18;
      *(void *)(v37 + 24) = v20;
      *(void *)(v37 + 32) = v54;
      *(void *)(v37 + 40) = v13;
      *(void *)(v37 + 48) = v30;
      *(void *)(v37 + 56) = v33;
      *(void *)(v37 + 64) = v35;
      *(unsigned char *)(v37 + 72) = v55 & 1;
      *(void *)(v37 + 80) = v2;
      aBlock[4] = (uint64_t)sub_1001907D0;
      aBlock[5] = v37;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10018FFEC;
      void aBlock[3] = (uint64_t)&unk_100556A58;
      uint64_t v38 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v36 updatePodcastWithUUID:v10 userInitiated:1 forced:1 forceBootstrap:0 source:21 completion:v38];
      _Block_release(v38);

      return;
    }
    swift_bridgeObjectRelease();
  }
  static Logger.podcastsStatesCoordination.getter();
  id v21 = a1;
  uint64_t v22 = Logger.logObject.getter();
  int v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, (os_log_type_t)v23))
  {
    LODWORD(v54) = v23;
    uint64_t v55 = v5;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    aBlock[0] = v53;
    *(_DWORD *)uint64_t v24 = 136381699;
    id v25 = [v21 title:v53];
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v29 = v28;
    }
    else
    {
      unint64_t v29 = 0xEA00000000003E65;
      uint64_t v27 = 0x6C746974206F6E3CLL;
    }
    id v57 = (id)sub_10004B974(v27, v29, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    id v39 = [v21 uuid];
    if (v39)
    {
      uint64_t v40 = v39;
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;
    }
    else
    {
      unint64_t v43 = 0xE700000000000000;
      uint64_t v41 = 0x3E7974706D653CLL;
    }
    id v57 = (id)sub_10004B974(v41, v43, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    id v57 = [v21 managedObjectContext];
    sub_100054B78((uint64_t *)&unk_100603900);
    uint64_t v44 = String.init<A>(describing:)();
    id v57 = (id)sub_10004B974(v44, v45, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 32) = 2049;
    id v46 = [v21 storeCollectionId];

    id v57 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v24 + 42) = 2081;
    id v47 = [v21 feedURL];
    if (v47)
    {
      uint64_t v48 = v47;
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v51 = v50;

      uint64_t v52 = v55;
    }
    else
    {
      unint64_t v51 = 0xE700000000000000;
      uint64_t v52 = v55;
      uint64_t v49 = 0x3E7974706D653CLL;
    }
    id v57 = (id)sub_10004B974(v49, v51, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v54, "We cannot update feed for podcast without UUID and/or managedObjectContext. Podcast %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s.", (uint8_t *)v24, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v52);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_10018F598(char a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, unint64_t a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v70 = a8;
  uint64_t v64 = a5;
  uint64_t v65 = a7;
  uint64_t v68 = a3;
  unsigned __int8 v15 = a10;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v60 - v21;
  __chkstk_darwin(v20);
  id v25 = (char *)&v60 - v24;
  uint64_t v69 = v17;
  uint64_t v66 = v26;
  if (a1)
  {
    static Logger.podcastsStatesCoordination.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v28 = Logger.logObject.getter();
    if (os_log_type_enabled(v28, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      LODWORD(v67) = a10;
      uint64_t v30 = v29;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v30 = 136381443;
      if (a4) {
        uint64_t v31 = v68;
      }
      else {
        uint64_t v31 = 0x6C746974206F6E3CLL;
      }
      if (a4) {
        unint64_t v32 = a4;
      }
      else {
        unint64_t v32 = 0xEA00000000003E65;
      }
      uint64_t v68 = v16;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_10004B974(v31, v32, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_10004B974(v64, a6, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 22) = 2049;
      uint64_t v71 = (uint64_t)v65;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 32) = 2081;
      uint64_t v33 = v70;
      if (a9) {
        uint64_t v34 = v70;
      }
      else {
        uint64_t v34 = 0x3E7974706D653CLL;
      }
      if (a9) {
        unint64_t v35 = a9;
      }
      else {
        unint64_t v35 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v36 = v34;
      uint64_t v37 = v33;
      uint64_t v71 = sub_10004B974(v36, v35, v72);
      uint64_t v38 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v16 = v68;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v27, "Feed update completed for Podcast %{private}s, uuid: %s, adamID: %{private}lld, feedURL: %{private}s.", (uint8_t *)v30, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      unsigned __int8 v15 = v67;
      swift_slowDealloc();

      id v39 = *(void (**)(char *, uint64_t))(v38 + 8);
      v39(v25, v16);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      id v39 = *(void (**)(char *, uint64_t))(v17 + 8);
      v39(v25, v16);
      uint64_t v37 = v70;
    }
  }
  else
  {
    uint64_t v62 = a2;
    uint64_t v63 = v23;
    static Logger.podcastsStatesCoordination.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    BOOL v42 = os_log_type_enabled(v40, v41);
    LODWORD(v67) = a10;
    if (v42)
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      v72[0] = v61;
      *(_DWORD *)uint64_t v43 = 136381443;
      if (a4) {
        uint64_t v44 = v68;
      }
      else {
        uint64_t v44 = 0x6C746974206F6E3CLL;
      }
      uint64_t v68 = v16;
      if (a4) {
        unint64_t v45 = a4;
      }
      else {
        unint64_t v45 = 0xEA00000000003E65;
      }
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_10004B974(v44, v45, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_10004B974(v64, a6, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 22) = 2049;
      uint64_t v71 = (uint64_t)v65;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 32) = 2081;
      if (a9) {
        uint64_t v46 = v70;
      }
      else {
        uint64_t v46 = 0x3E7974706D653CLL;
      }
      if (a9) {
        unint64_t v47 = a9;
      }
      else {
        unint64_t v47 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_10004B974(v46, v47, v72);
      uint64_t v17 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v16 = v68;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unable to complete feed update for Podcast %{private}s, uuid: %s, adamID: %{private}lld, feedURL: %{private}s.", (uint8_t *)v43, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      unsigned __int8 v15 = v67;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id v39 = *(void (**)(char *, uint64_t))(v17 + 8);
    v39(v22, v16);
    if (v62)
    {
      swift_errorRetain();
      static Logger.podcastsStatesCoordination.getter();
      swift_errorRetain();
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.error.getter();
      BOOL v50 = os_log_type_enabled(v48, v49);
      uint64_t v37 = v70;
      if (v50)
      {
        uint64_t v68 = v16;
        unint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v65 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v51 = 138412290;
        uint64_t v52 = _convertErrorToNSError(_:)();
        v72[0] = v52;
        uint64_t v16 = v68;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v65 = v52;
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "Feed Update Error: %@", v51, 0xCu);
        sub_100054B78((uint64_t *)&unk_1005F9F00);
        swift_arrayDestroy();
        uint64_t v37 = v70;
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
      unsigned __int8 v15 = v67;
      v39((char *)v63, v16);
    }
    else
    {
      uint64_t v37 = v70;
    }
  }
  if ((v15 & 1) != 0 && a9)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = v66;
    static Logger.podcastsStatesCoordination.getter();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v55 = Logger.logObject.getter();
    if (os_log_type_enabled(v55, v54))
    {
      uint64_t v68 = v16;
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      uint64_t v67 = (void (*)(uint64_t, uint64_t))v39;
      *(_DWORD *)uint64_t v56 = 136380675;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_10004B974(v37, a9, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v67((uint64_t)v53, v68);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v39(v53, v16);
    }
    id v57 = *(void **)(a11 + 32);
    sub_100054B78(&qword_1005F6ED0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D010;
    v72[0] = v37;
    v72[1] = a9;
    AnyHashable.init<A>(_:)();
    sub_100172008(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v57 scheduleVeryHighPriorityEpisodeStateGetWithFeedUrls:isa];
  }
}

void sub_10018FFEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void PodcastsStateTransitionsExternalEffects.unsafeDelete(_:)(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 managedObjectContext];
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = *(void **)(v1 + 16);
    id v34 = v8;
    [v9 _markAsHiddenPodcast:a1];
    [v34 saveInCurrentBlock];
    id v10 = v34;
  }
  else
  {
    static Logger.podcastsStatesCoordination.getter();
    id v11 = a1;
    uint64_t v12 = Logger.logObject.getter();
    int v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      LODWORD(v34) = v13;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v36 = v33;
      *(_DWORD *)uint64_t v14 = 136381699;
      id v15 = [v11 title:v33];
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v19 = v18;
      }
      else
      {
        unint64_t v19 = 0xEA00000000003E65;
        uint64_t v17 = 0x6C746974206F6E3CLL;
      }
      id v35 = (id)sub_10004B974(v17, v19, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      id v20 = [v11 uuid];
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v24 = v23;
      }
      else
      {
        unint64_t v24 = 0xE700000000000000;
        uint64_t v22 = 0x3E7974706D653CLL;
      }
      id v35 = (id)sub_10004B974(v22, v24, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 22) = 2080;
      id v35 = [v11 managedObjectContext];
      sub_100054B78((uint64_t *)&unk_100603900);
      uint64_t v25 = String.init<A>(describing:)();
      id v35 = (id)sub_10004B974(v25, v26, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 32) = 2049;
      id v27 = [v11 storeCollectionId];

      id v35 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v14 + 42) = 2081;
      id v28 = [v11 feedURL];
      if (v28)
      {
        uint64_t v29 = v28;
        uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v32 = v31;
      }
      else
      {
        unint64_t v32 = 0xE700000000000000;
        uint64_t v30 = 0x3E7974706D653CLL;
      }
      id v35 = (id)sub_10004B974(v30, v32, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v34, "We cannot delete podcast without a valid managedObjectContext. Podcast %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s.", (uint8_t *)v14, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_100190540(void *a1)
{
}

void sub_100190568(void *a1, int a2)
{
}

void sub_10019058C(void *a1)
{
}

uint64_t sub_1001905B0(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1001905C0(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1001905FC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100190624(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_10004B974(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

unsigned char **sub_10019069C(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void *sub_1001906AC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_100190750@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_100190780()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1001907D0(char a1, uint64_t a2)
{
  sub_10018F598(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(unsigned char *)(v2 + 72), *(void *)(v2 + 80));
}

void *sub_100190814(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_10005986C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    unint64_t v12 = v1 & 0xC000000000000001;
    unint64_t v5 = v1;
    while (v2 != v4)
    {
      if (v12) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v6 = Episode.uuid.getter();
      uint64_t v8 = v7;
      swift_release();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10005986C(v9 > 1, v10 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      id v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      unint64_t v1 = v5;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_100190988(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_1001BA4A8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      id v7 = [v5 longLongValue];

      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_1001BA4A8(v8 > 1, v9 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      _swiftEmptyArrayStorage[v9 + 4] = v7;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100190AEC()
{
  uint64_t v1 = OBJC_IVAR____TtC8Podcasts19LibraryDataProvider____lazy_storage___actionController;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider____lazy_storage___actionController))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider____lazy_storage___actionController);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for LibraryActionController();
    swift_retain();
    BaseObjectGraph.inject<A>(_:)();
    swift_release();
    uint64_t v2 = v5;
    *(void *)(v3 + v1) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t LibraryDataProvider.libraryActionController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider____lazy_storage___libraryActionController;
  swift_beginAccess();
  sub_100054BBC(v3, (uint64_t)&v7, &qword_1005F6EE8);
  if (!v8)
  {
    sub_100054B1C((uint64_t)&v7, &qword_1005F6EE8);
    uint64_t v4 = sub_100190AEC();
    uint64_t v8 = type metadata accessor for LibraryActionController();
    uint64_t v9 = sub_100042FDC(&qword_1005F6EF0, (void (*)(uint64_t))type metadata accessor for LibraryActionController);
    *(void *)&long long v7 = v4;
    sub_100056D54((uint64_t)&v7, (uint64_t)v6);
    swift_beginAccess();
    sub_100039D84((uint64_t)v6, v3, &qword_1005F6EE8);
    swift_endAccess();
  }
  return sub_100042FC4(&v7, a1);
}

uint64_t LibraryDataProvider.libraryActionController.setter(long long *a1)
{
  sub_100042FC4(a1, (uint64_t)v4);
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider____lazy_storage___libraryActionController;
  swift_beginAccess();
  sub_100039D84((uint64_t)v4, v2, &qword_1005F6EE8);
  return swift_endAccess();
}

void (*LibraryDataProvider.libraryActionController.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[18] = v1;
  LibraryDataProvider.libraryActionController.getter((uint64_t)v3);
  return sub_100190D6C;
}

void sub_100190D6C(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = (long long *)(*a1 + 40);
  uint64_t v4 = *a1 + 80;
  if (a2)
  {
    uint64_t v5 = v2[18];
    sub_100056D54(*a1, (uint64_t)v3);
    sub_100042FC4(v3, v4);
    uint64_t v6 = v5 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider____lazy_storage___libraryActionController;
    swift_beginAccess();
    sub_100039D84(v4, v6, &qword_1005F6EE8);
    swift_endAccess();
    sub_10004D2D8((uint64_t)v2);
  }
  else
  {
    uint64_t v7 = v2[18];
    sub_100042FC4((long long *)*a1, (uint64_t)v3);
    uint64_t v8 = v7 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider____lazy_storage___libraryActionController;
    swift_beginAccess();
    sub_100039D84((uint64_t)v3, v8, &qword_1005F6EE8);
    swift_endAccess();
  }

  free(v2);
}

uint64_t LibraryDataProvider.purchaseController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100056D54(v1 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_purchaseController, a1);
}

uint64_t LibraryDataProvider.podcastStateController.getter()
{
  return swift_retain();
}

uint64_t LibraryDataProvider.episodePlayStateController.getter()
{
  return swift_retain();
}

uint64_t LibraryDataProvider.reviewController.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t LibraryDataProvider.episodeDownloadStateController.getter()
{
  return swift_retain();
}

uint64_t LibraryDataProvider.episodeBookmarkStateController.getter()
{
  return swift_retain();
}

uint64_t LibraryDataProvider.pendingPlaybackController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100056D54(v1 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_pendingPlaybackController, a1);
}

uint64_t LibraryDataProvider.hudPresenter.getter()
{
  return swift_retain();
}

uint64_t LibraryDataProvider.playbackController.getter()
{
  return swift_retain();
}

id LibraryDataProvider.__allocating_init(asPartOf:)(void (*a1)(uint64_t, char *, uint64_t))
{
  uint64_t v2 = v1;
  sub_100054B78((uint64_t *)&unk_1005FEBE0);
  BaseObjectGraph.inject<A>(_:)();
  sub_10004D29C(0, &qword_1005F6F40);
  BaseObjectGraph.inject<A>(_:)();
  id v4 = objc_allocWithZone(v2);
  return LibraryDataProvider.init(contextProvider:downloadsNotifier:objectGraph:)(v7, v6, a1);
}

id LibraryDataProvider.__allocating_init(contextProvider:downloadsNotifier:objectGraph:)(void (*a1)(uint64_t, char *, uint64_t), char *a2, void (*a3)(uint64_t, char *, uint64_t))
{
  id v7 = objc_allocWithZone(v3);
  return LibraryDataProvider.init(contextProvider:downloadsNotifier:objectGraph:)(a1, a2, a3);
}

uint64_t sub_100191038@<X0>(void *a1@<X8>)
{
  id v2 = [self defaultMediaLibrary];
  uint64_t result = sub_10004D29C(0, &qword_1005F7AB8);
  a1[3] = result;
  a1[4] = &off_100565498;
  *a1 = v2;
  return result;
}

id MTNotificationTestActionFactory.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void LibraryDataProvider.init()()
{
}

id LibraryDataProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t LibraryDataProvider.fetchEpisode(with:)()
{
  sub_100054B78((uint64_t *)&unk_1005F71B0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v0 = Promise.init(signpost:log:metadata:logResult:)();
  type metadata accessor for CoreDataFetcher();
  swift_retain();
  static CoreDataFetcher.fetchEpisode(with:completion:)();
  swift_release();
  return v0;
}

uint64_t LibraryDataProvider.fetchEpisodeBlocking(with:)()
{
  type metadata accessor for CoreDataFetcher();
  sub_100054B78(&qword_1005F71C0);
  static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)();
  return v1;
}

uint64_t LibraryDataProvider.episodeUuid(for:)()
{
  sub_100054B78(&qword_1005F71C8);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v0 = Promise.init(signpost:log:metadata:logResult:)();
  type metadata accessor for CoreDataFetcher();
  swift_retain();
  static CoreDataFetcher.episodeUuid(for:completion:)();
  swift_release();
  return v0;
}

uint64_t sub_10019158C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100191690(a1, a2, a3, (uint64_t *)&unk_1005F71D0, (uint64_t)sub_100195CBC, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))&NSManagedObjectContext.episodes<A>(for:block:));
}

uint64_t LibraryDataProvider.fetchEpisodeLockups(with:)(uint64_t a1)
{
  return sub_100191750(a1, (uint64_t *)&unk_1005F71D0, (uint64_t)sub_100195CBC, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))&NSManagedObjectContext.episodes<A>(for:block:));
}

uint64_t sub_1001915F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100191690(a1, a2, a3, (uint64_t *)&unk_1005FD1A0, (uint64_t)sub_100195FE4, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))&NSManagedObjectContext.shows<A>(for:block:));
}

uint64_t LibraryDataProvider.fetchShowLockups(with:)(uint64_t a1)
{
  return sub_100191750(a1, (uint64_t *)&unk_1005FD1A0, (uint64_t)sub_100195FE4, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))&NSManagedObjectContext.shows<A>(for:block:));
}

uint64_t sub_10019165C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100191690(a1, a2, a3, &qword_1005F71E0, (uint64_t)sub_1001961D4, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))&NSManagedObjectContext.channels<A>(for:block:));
}

uint64_t sub_100191690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, void, uint64_t))
{
  id v11 = [*(id *)(v6 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) mainOrPrivateContext];
  uint64_t v12 = sub_100054B78(a4);
  uint64_t v13 = a6(a1, a5, 0, v12);

  return v13;
}

uint64_t LibraryDataProvider.fetchChannelLockups(with:)(uint64_t a1)
{
  return sub_100191750(a1, &qword_1005F71E0, (uint64_t)sub_1001961D4, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))&NSManagedObjectContext.channels<A>(for:block:));
}

uint64_t sub_100191750(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void, uint64_t))
{
  id v9 = [*(id *)(v4 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) mainOrPrivateContext];
  uint64_t v10 = sub_100054B78(a2);
  uint64_t v11 = a4(a1, a3, 0, v10);

  return v11;
}

uint64_t sub_1001917DC(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return LibraryDataProvider.unlimitedShowsPublisher<A>(listType:sortBy:transform:updateRequiredComparator:)(a1, a2 & 1, a3, a4, a5, a6, a7, a8);
}

uint64_t LibraryDataProvider.unlimitedShowsPublisher<A>(listType:sortBy:transform:updateRequiredComparator:)(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a7;
  uint64_t v31 = a6;
  uint64_t v32 = a5;
  uint64_t v33 = a4;
  char v11 = a2 & 1;
  sub_10004D29C(255, (unint64_t *)&qword_1005F71F0);
  uint64_t v25 = a8;
  uint64_t v12 = type metadata accessor for FetchedResultsListPublisher();
  uint64_t v35 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v26 = (char *)v24 - v13;
  type metadata accessor for Array();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v29 = type metadata accessor for Publishers.MapKeyPath();
  uint64_t v34 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v15 = (char *)v24 - v14;
  v24[2] = sub_10005A078(a1, v11);
  v24[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v16 = sub_10001A940(a1, v11);
  ShowsSortType.sortDescriptors.getter(a3);
  id v17 = [*(id *)(v27 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  unint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v19 = v25;
  id v20 = v26;
  static FetchedResultsListPublisher.unsafeUnlimitedListPublisher(identifier:entityName:predicate:sortDescriptors:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v36 = v19;
  swift_getKeyPath();
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v12);
  uint64_t v21 = v29;
  swift_getWitnessTable();
  uint64_t v22 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v21);
  return v22;
}

uint64_t sub_100191B4C(uint64_t a1, char a2)
{
  return LibraryDataProvider.channelSubscribedPublisher(channelAdamId:)(a1, a2 & 1);
}

uint64_t LibraryDataProvider.channelSubscribedPublisher(channelAdamId:)(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7218);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_1005F7220);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_1005F7228);
  uint64_t v21 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 & 1) != 0 || (uint64_t result = AdamID.isEmpty.getter(), (result))
  {
    LOBYTE(v23) = 0;
    Just.init(_:)();
    sub_100044200((unint64_t *)&unk_1005F7230, &qword_1005F7218);
    uint64_t v16 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v16;
  }
  if ((a1 & 0x8000000000000000) == 0)
  {
    unint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(29);
    swift_bridgeObjectRelease();
    unint64_t v23 = 0xD00000000000001BLL;
    unint64_t v24 = 0x80000001004D3890;
    uint64_t v22 = a1;
    sub_1001A5874();
    v17._countAndFlagsBits = BinaryInteger.description.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v20[1] = v24;
    v20[2] = v23;
    v20[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v18 = [self predicateForChannelWithStoreId:a1];
    id v19 = [*(id *)(v20[3] + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    static OS_dispatch_queue.main.getter();
    sub_10004D29C(0, &qword_1005F7240);
    FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
    sub_100044200(&qword_1005F7248, &qword_1005F7220);
    Publisher.map<A>(_:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_100044200(&qword_1005F7250, &qword_1005F7228);
    uint64_t v16 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v12);
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t LibraryDataProvider.libraryChannelsPaginatedPublisher(sortBy:pageSize:)(uint64_t a1, uint64_t a2)
{
  v12[1] = a2;
  uint64_t v3 = sub_100054B78(&qword_1005F7258);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = [self predicateForLibraryChannel];
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider);
  swift_bridgeObjectRetain();
  id v9 = [v8 privateQueueContext];
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  static OS_dispatch_queue.main.getter();
  type metadata accessor for LegacyChannelLockup();
  sub_10004D29C(0, &qword_1005F7240);
  FetchedResultsListPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
  sub_100044200(&qword_1005F7260, &qword_1005F7258);
  uint64_t v10 = PaginatedPublisher.eraseToAnyPaginatedPublisher()();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10;
}

uint64_t LibraryDataProvider.fetchStationCountObserver()()
{
  return sub_10019228C((uint64_t)"fetchStationCountObserver()", 27, (uint64_t)sub_1001A5900, (uint64_t)&unk_100556C08);
}

uint64_t LibraryDataProvider.fetchDownloadCountObserver()()
{
  return sub_10019228C((uint64_t)"fetchDownloadCountObserver()", 28, (uint64_t)sub_1001A5908, (uint64_t)&unk_100556C30);
}

uint64_t sub_10019228C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4;
  sub_100054B78(&qword_1005F7268);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v8 = Promise.init(signpost:log:metadata:logResult:)();
  id v9 = [*(id *)(v7 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  v12[4] = a3;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_10003B424;
  v12[3] = a4;
  uint64_t v10 = _Block_copy(v12);
  swift_retain();
  swift_release();
  [v9 performBlock:v10];
  _Block_release(v10);

  return v8;
}

uint64_t LibraryDataProvider.fetchDownloadCountObserver(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_100054B78(&qword_1005F7268);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v6 = Promise.init(signpost:log:metadata:logResult:)();
  id v7 = [*(id *)(v3 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v6;
  v11[4] = sub_1001A5914;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10003B424;
  v11[3] = &unk_100556C80;
  id v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v7 performBlock:v9];
  _Block_release(v9);

  return v6;
}

uint64_t LibraryDataProvider.fetchEpisodeCountObserver(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeListSettings();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000536CC(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_1001A5920);
  EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();
  uint64_t v6 = (void *)EpisodeListSettings.predicate.getter();
  uint64_t v7 = EpisodeListType.importantKeys.getter();
  uint64_t v8 = sub_100196BF0(v6, v7);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

uint64_t LibraryDataProvider.fetchEpisodeCountObserver(for:)(void *a1)
{
  return sub_100196BF0(a1, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1001926B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100192714(a1, a2, a3, a4, &qword_1005F7270);
}

uint64_t LibraryDataProvider.fetchSmartPlayEpisodeForPodcastBlocking(with:)(uint64_t a1, uint64_t a2)
{
  return sub_1001927F4(a1, a2, &qword_1005F7270);
}

uint64_t sub_1001926F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100192714(a1, a2, a3, a4, &qword_1005F7278);
}

uint64_t sub_100192714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = self;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 predicateForPodcastUUID:v7];

  type metadata accessor for CoreDataFetcher();
  sub_100054B78(a5);
  static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)();

  return v10;
}

uint64_t LibraryDataProvider.fetchPodcastDetailBlocking(with:)(uint64_t a1, uint64_t a2)
{
  return sub_1001927F4(a1, a2, &qword_1005F7278);
}

uint64_t sub_1001927F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 predicateForPodcastUUID:v5];

  type metadata accessor for CoreDataFetcher();
  sub_100054B78(a3);
  static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)();

  return v8;
}

uint64_t sub_1001928B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_100054B78(&qword_1005F7280);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return Future.init(_:)();
}

uint64_t LibraryDataProvider.fetchShowEpisodeCountHeaderData(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_100054B78(&qword_1005F7280);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return Future.init(_:)();
}

uint64_t LibraryDataProvider.showDetailPublisher(uuid:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100054B78(&qword_1005F7288);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  uint64_t v36 = v7;
  __chkstk_darwin(v6);
  id v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_1005F7290);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  uint64_t v38 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100054B78(&qword_1005F7298);
  uint64_t v41 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v33 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100054B78((uint64_t *)&unk_1005F72A0);
  uint64_t v42 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v34 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = (id)MTPodcastHidesPlayedEpisodesAppWideUserDefaults();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = NSUserDefaults.BOOLPublisher(forKey:)();

  swift_bridgeObjectRelease();
  unint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  unint64_t v43 = 0xD000000000000015;
  unint64_t v44 = 0x80000001004D3980;
  v17._countAndFlagsBits = a1;
  v17._object = a2;
  String.append(_:)(v17);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v18 = self;
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v18 predicateForPodcastUUID:v19];

  id v21 = [*(id *)(v3 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  static OS_dispatch_queue.main.getter();
  type metadata accessor for PodcastDetail();
  sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
  FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
  unint64_t v43 = v32;
  sub_100054B78((uint64_t *)&unk_1005FCA40);
  sub_100044200((unint64_t *)&unk_1005F72B0, &qword_1005F7288);
  sub_100044200(&qword_100603460, (uint64_t *)&unk_1005FCA40);
  uint64_t v22 = v35;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v22);
  swift_getKeyPath();
  sub_100044200(&qword_1005F72C0, &qword_1005F7290);
  unint64_t v23 = v33;
  uint64_t v24 = v37;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v24);
  sub_100044200(&qword_1005F72C8, &qword_1005F7298);
  uint64_t v25 = v34;
  uint64_t v26 = v39;
  Publisher.tryMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v26);
  sub_100044200(&qword_1005F72D0, (uint64_t *)&unk_1005F72A0);
  uint64_t v27 = v40;
  uint64_t v28 = Publisher.bufferedMulticast()();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v27);
  unint64_t v43 = v28;
  sub_100054B78(&qword_1005F72D8);
  sub_100044200(&qword_1005F72E0, &qword_1005F72D8);
  uint64_t v29 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  return v29;
}

uint64_t LibraryDataProvider.allAvailableEpisodeUserFiltersPublisher(forShow:)(uint64_t a1, void *a2)
{
  uint64_t v72 = sub_100054B78(&qword_1005F72E8);
  uint64_t v74 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v70 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100054B78(&qword_1005F72F0);
  uint64_t v75 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v71 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FetchedResultsCountPublisher();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v81 = v7;
  uint64_t v82 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100054B78(&qword_1005F72F8);
  uint64_t v79 = *(void *)(v69 - 8);
  uint64_t v11 = __chkstk_darwin(v69);
  uint64_t v68 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v67 = (char *)v61 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v66 = (char *)v61 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v65 = (char *)v61 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v83 = (char *)v61 - v20;
  __chkstk_darwin(v19);
  v84 = (char *)v61 - v21;
  id v22 = [*(id *)(v2 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  strcpy((char *)v85, "hasBookmarks ");
  HIWORD(v85[1]) = -4864;
  uint64_t v80 = a1;
  v23._countAndFlagsBits = a1;
  uint64_t v62 = a2;
  v23._object = a2;
  String.append(_:)(v23);
  id v77 = (id)kMTEpisodeEntityName;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = self;
  id v76 = v24;
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 predicateForBookmarkedEpisodesOnPodcastUuid:v25];

  uint64_t v78 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v27 = v22;
  static OS_dispatch_queue.main.getter();
  FetchedResultsCountPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:)();
  uint64_t v28 = sub_100042FDC(&qword_1005F7300, (void (*)(uint64_t))&type metadata accessor for FetchedResultsCountPublisher);
  uint64_t v29 = v81;
  uint64_t v64 = v28;
  Publisher.map<A>(_:)();
  uint64_t v30 = v82 + 8;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v82 + 8);
  v31(v10, v29);
  uint64_t v63 = v31;
  uint64_t v82 = v30;
  strcpy((char *)v85, "hasPlayed ");
  BYTE3(v85[1]) = 0;
  HIDWORD(v85[1]) = -369098752;
  v32._countAndFlagsBits = v80;
  uint64_t v33 = v62;
  v32._object = v62;
  String.append(_:)(v32);
  v61[2] = v85[0];
  v61[3] = v85[1];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v61[1] = v34;
  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = v76;
  id v37 = [v76 predicateForAllEpisodesOnPodcastUuid:v35];

  id v38 = [v36 predicateForVisuallyPlayed:1];
  id v39 = [v37 AND:v38];

  id v40 = v27;
  static OS_dispatch_queue.main.getter();
  FetchedResultsCountPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:)();
  uint64_t v41 = v81;
  Publisher.map<A>(_:)();
  v31(v10, v41);
  v85[0] = 0;
  v85[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v85, "hasSubscriber ");
  HIBYTE(v85[1]) = -18;
  v42._countAndFlagsBits = v80;
  v42._object = v33;
  String.append(_:)(v42);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v43 = String._bridgeToObjectiveC()();
  id v44 = [v76 predicateForAllEpisodesOnPodcastUuid:v43];

  unint64_t v45 = (void *)EpisodeUserFilter.basePredicate.getter();
  id v46 = [v44 AND:v45];

  id v77 = v40;
  static OS_dispatch_queue.main.getter();
  FetchedResultsCountPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:)();
  unint64_t v47 = v65;
  uint64_t v48 = v81;
  Publisher.map<A>(_:)();
  v63(v10, v48);
  type metadata accessor for CoreDataFetcher();
  os_log_type_t v49 = (void *)static OS_dispatch_queue.main.getter();
  sub_100054B78(&qword_1005F7308);
  uint64_t v50 = static CoreDataFetcher.performAndPublishOnPodcast<A>(with:queue:block:)();

  v85[0] = v50;
  unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  uint64_t v52 = v69;
  v51(v66, v84, v69);
  v51(v67, v83, v52);
  v51(v68, v47, v52);
  swift_retain();
  sub_100054B78(&qword_1005F7310);
  sub_100044200(&qword_1005F7318, &qword_1005F7310);
  sub_100044200(&qword_1005F7320, &qword_1005F72F8);
  uint64_t v53 = v70;
  uint64_t v54 = v52;
  Publishers.CombineLatest4.init(_:_:_:_:)();
  sub_100054B78(&qword_1005F7328);
  sub_100044200(&qword_1005F7330, &qword_1005F72E8);
  uint64_t v56 = v71;
  uint64_t v55 = v72;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v55);
  sub_100044200(&qword_1005F7338, &qword_1005F72F0);
  uint64_t v57 = v73;
  uint64_t v58 = Publisher.eraseToAnyPublisher()();

  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v56, v57);
  unint64_t v59 = *(void (**)(char *, uint64_t))(v79 + 8);
  v59(v47, v54);
  v59(v83, v54);
  v59(v84, v54);
  return v58;
}

uint64_t LibraryDataProvider.episodeListCountPublisher(settings:)()
{
  uint64_t v1 = type metadata accessor for FetchedResultsCountPublisher();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  v12[1] = 0xD00000000000001ALL;
  void v12[2] = 0x80000001004D39E0;
  EpisodeListSettings.listType.getter();
  uint64_t v5 = EpisodeListType.description.getter();
  uint64_t v7 = v6;
  sub_1000536CC((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  EpisodeListSettings.predicate.getter();
  id v9 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  static OS_dispatch_queue.main.getter();
  FetchedResultsCountPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:)();
  sub_100042FDC(&qword_1005F7300, (void (*)(uint64_t))&type metadata accessor for FetchedResultsCountPublisher);
  uint64_t v10 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

uint64_t LibraryDataProvider.seeAllEpisodesShelfPublisher(settings:pageSize:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100054B78(&qword_1005F7358);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [*(id *)&v2[OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider] privateQueueContext];
  uint64_t v17 = a1;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v2;
  v10[3] = a2;
  v10[4] = v9;
  uint64_t v11 = v2;
  id v12 = v9;
  sub_100054B78(&qword_1005F7360);
  sub_100054B78(&qword_1005F7368);
  sub_100044200(&qword_1005F7370, &qword_1005F7360);
  Publisher.map<A>(_:)();
  swift_release();
  sub_100044200(&qword_1005F7378, &qword_1005F7358);
  sub_100044200(&qword_1005F7380, &qword_1005F7368);
  uint64_t v13 = Publisher<>.paginatedSwitchToLatest()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v13;
  uint64_t v14 = PaginatedPublisher.paginatedBufferedMulticast()();
  swift_release();

  return v14;
}

uint64_t LibraryDataProvider.episodeListSettingsPublisher(listType:)(uint64_t a1)
{
  uint64_t v17 = sub_100054B78(&qword_1005F7388);
  uint64_t v19 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78(&qword_1005F7390);
  uint64_t v20 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100199F20(a1);
  LibraryDataProvider.libraryActionController.getter((uint64_t)v23);
  sub_100041A98(v23, v24);
  uint64_t v7 = dispatch thunk of LibraryActionControllerProtocol.pubDateLimitPublisher(forListType:)();
  sub_10004D2D8((uint64_t)v23);
  LibraryDataProvider.libraryActionController.getter((uint64_t)v23);
  sub_100041A98(v23, v24);
  uint64_t v8 = dispatch thunk of LibraryActionControllerProtocol.hidesPlayedEpisodesPublisher(forListType:)();
  v16[0] = v8;
  sub_10004D2D8((uint64_t)v23);
  v16[1] = v7;
  v16[2] = v6;
  uint64_t v22 = v7;
  v23[0] = v6;
  uint64_t v21 = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100054B78(&qword_1005F7398);
  sub_100054B78(&qword_1005F73A0);
  sub_100054B78((uint64_t *)&unk_1005FCA40);
  sub_100044200(&qword_1005F73A8, &qword_1005F7398);
  sub_100044200(&qword_1005F73B0, &qword_1005F73A0);
  sub_100044200(&qword_100603460, (uint64_t *)&unk_1005FCA40);
  Publishers.CombineLatest3.init(_:_:_:)();
  uint64_t v9 = swift_allocObject();
  sub_1001A5FC8(a1, v9 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1001A6024;
  *(void *)(v10 + 24) = v9;
  sub_1000536CC(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_1001A5920);
  type metadata accessor for EpisodeListSettings();
  sub_100044200(&qword_1005F73B8, &qword_1005F7388);
  uint64_t v11 = v17;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v11);
  sub_100044200(&qword_1005F73C0, &qword_1005F7390);
  uint64_t v12 = v18;
  uint64_t v13 = Publisher.bufferedMulticast()();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v12);
  v23[0] = v13;
  sub_100054B78(&qword_1005F7360);
  sub_100044200(&qword_1005F7370, &qword_1005F7360);
  uint64_t v14 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v14;
}

uint64_t LibraryDataProvider.episodeListShelfPublisher(episodeSettingsPublisher:pageSize:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v22 = a2;
  uint64_t v5 = sub_100054B78(&qword_1005F73C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100054B78(&qword_1005F73D0);
  uint64_t v9 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [*(id *)(v3 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  uint64_t v24 = a1;
  sub_100054B78(&qword_1005F7360);
  sub_100044200(&qword_1005F7370, &qword_1005F7360);
  sub_100042FDC(&qword_1005F73D8, (void (*)(uint64_t))&type metadata accessor for EpisodeListSettings);
  Publisher<>.removeDuplicates()();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = v22;
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v12;
  id v16 = v12;
  sub_100054B78(&qword_1005F7368);
  sub_100044200(&qword_1005F73E0, &qword_1005F73C8);
  Publisher.compactMap<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100044200(&qword_1005F73E8, &qword_1005F73D0);
  sub_100044200(&qword_1005F7380, &qword_1005F7368);
  uint64_t v17 = v23;
  uint64_t v18 = Publisher<>.paginatedSwitchToLatest()();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  uint64_t v24 = v18;
  uint64_t v19 = PaginatedPublisher.paginatedBufferedMulticast()();
  swift_release();

  return v19;
}

uint64_t LibraryDataProvider.fetchStationDetail(with:)()
{
  sub_100054B78(&qword_1005F73F0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v0 = Promise.init(signpost:log:metadata:logResult:)();
  type metadata accessor for CoreDataFetcher();
  swift_retain();
  static CoreDataFetcher.fetchStation(with:completion:)();
  swift_release();
  return v0;
}

uint64_t LibraryDataProvider.fetchStationDetailObserver(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_100054B78(&qword_1005F73F8);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v6 = Promise.init(signpost:log:metadata:logResult:)();
  id v7 = [*(id *)(v3 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v6;
  v11[4] = sub_1001A6138;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10003B424;
  v11[3] = &unk_100556DE8;
  uint64_t v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v7 performBlock:v9];
  _Block_release(v9);

  return v6;
}

uint64_t LibraryDataProvider.stationDetailPublisher(uuid:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100054B78(&qword_1005F7400);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_1005F7408);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  unint64_t v25 = 0xD000000000000018;
  unint64_t v26 = 0x80000001004D3A50;
  v14._countAndFlagsBits = a1;
  v14._object = a2;
  String.append(_:)(v14);
  v24[2] = v26;
  void v24[3] = v25;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v24[0] = v16;
  v24[1] = v15;
  uint64_t v17 = self;
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 predicateForVisiblePlaylistWithUUID:v18];

  id v20 = [*(id *)(v3 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  static OS_dispatch_queue.main.getter();
  type metadata accessor for StationDetail();
  sub_10004D29C(0, (unint64_t *)&qword_1005F7410);
  FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
  sub_100044200(&qword_1005F7418, &qword_1005F7400);
  Publisher.tryMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100044200(&qword_1005F7420, &qword_1005F7408);
  uint64_t v21 = Publisher.bufferedMulticast()();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  unint64_t v25 = v21;
  sub_100054B78(&qword_1005F7428);
  sub_100044200(&qword_1005F7430, &qword_1005F7428);
  uint64_t v22 = Publisher.eraseToAnyPublisher()();
  swift_release();
  return v22;
}

uint64_t LibraryDataProvider.stationDetailEpisodesPublisher(stationPublisher:pageSize:)(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_100054B78(&qword_1005F7438);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100054B78(&qword_1005F7440);
  uint64_t v33 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100054B78(&qword_1005F7448);
  uint64_t v34 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_1005F7450);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [*(id *)(v2 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  uint64_t v37 = a1;
  sub_100054B78(&qword_1005F7458);
  type metadata accessor for LibraryDataProvider._Station(0);
  sub_100044200(&qword_1005F7460, &qword_1005F7458);
  Publisher.map<A>(_:)();
  sub_100044200(&qword_1005F7468, &qword_1005F7438);
  sub_100042FDC(&qword_1005F7470, (void (*)(uint64_t))type metadata accessor for LibraryDataProvider._Station);
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v17 = (void *)swift_allocObject();
  NSString v18 = v29;
  uint64_t v19 = v30;
  v17[2] = v29;
  v17[3] = v19;
  v17[4] = v16;
  id v20 = v18;
  id v21 = v16;
  sub_100054B78(&qword_1005F7478);
  sub_100044200(&qword_1005F7480, &qword_1005F7440);
  uint64_t v22 = v31;
  Publisher.compactMap<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v22);
  sub_100054B78(&qword_1005F7488);
  uint64_t v23 = v32;
  Publishers.CompactMap.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v23);
  sub_100044200(&qword_1005F7490, &qword_1005F7450);
  sub_100044200(&qword_1005F7498, &qword_1005F7488);
  uint64_t v24 = v35;
  uint64_t v25 = Publisher<>.paginatedSwitchToLatest()();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v24);
  uint64_t v37 = v25;
  uint64_t v26 = PaginatedPublisher.paginatedBufferedMulticast()();
  swift_release();

  return v26;
}

uint64_t LibraryDataProvider.fetchGroupedSearchResults(term:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_100054B78((uint64_t *)&unk_1005F74A0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v6 = Promise.init(signpost:log:metadata:logResult:)();
  id v7 = [*(id *)(v3 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v6;
  v11[4] = sub_1001A61B4;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10003B424;
  v11[3] = &unk_100556E60;
  uint64_t v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v7 performBlock:v9];
  _Block_release(v9);

  return v6;
}

Swift::Bool __swiftcall LibraryDataProvider.hasFollowedShows()()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) mainOrPrivateContext];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithEntityName:v3];

  id v5 = [self predicateForSubscribedAndNotHidden];
  [v4 setPredicate:v5];

  [v4 setFetchLimit:1];
  NSManagedObjectContext.performAndWait<A>(_:)();

  return v7;
}

uint64_t LibraryDataProvider.addApplicationBackgroundDependencies(to:)()
{
  sub_100054B78((uint64_t *)&unk_1005FF6C0);
  id v14 = v0;
  uint64_t v15 = (char **)sub_100042FDC(&qword_1005F74B0, (void (*)(uint64_t))type metadata accessor for LibraryDataProvider);
  id v1 = v0;
  BaseObjectGraph.satisfying<A>(_:with:)();

  sub_100054B78(&qword_1005F74B8);
  id v14 = *(id *)&v1[OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_episodeBookmarkStateController];
  swift_retain();
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005F74C0);
  id v14 = *(id *)&v1[OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_episodeDownloadStateController];
  swift_retain();
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  swift_release();
  sub_100054B78(&qword_1005F7050);
  id v14 = *(id *)&v1[OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_episodePlayStateController];
  swift_retain();
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  swift_release();
  type metadata accessor for PodcastStateController();
  id v14 = *(id *)&v1[OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_podcastStateController];
  swift_retain();
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  swift_release();
  sub_100054B78((uint64_t *)&unk_100609310);
  if (qword_1005F5AE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (void *)static PodcastsStateCoordinator.shared;
  uint64_t v16 = type metadata accessor for PodcastsStateCoordinator();
  uint64_t v17 = sub_100042FDC((unint64_t *)&unk_1005F74D0, (void (*)(uint64_t))type metadata accessor for PodcastsStateCoordinator);
  id v14 = v2;
  id v3 = v2;
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  sub_10004D2D8((uint64_t)&v14);
  id v14 = (id)static PodcastsStateCoordinator.shared;
  id v4 = (id)static PodcastsStateCoordinator.shared;
  BaseObjectGraph.satisfying<A>(_:with:)();

  swift_release();
  sub_100054B78((uint64_t *)&unk_1005FF6D0);
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005F74E0);
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1006092F0);
  id v14 = *(id *)&v1[OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_episodeDownloadStateControllerProvider];
  id v5 = v14;
  BaseObjectGraph.satisfying<A>(_:with:)();

  swift_release();
  sub_100054B78((uint64_t *)&unk_1005F74F0);
  id v14 = *(id *)&v1[OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_hudPresenter];
  uint64_t v15 = (char **)&off_1005685F0;
  swift_retain();
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005FF6E0);
  sub_10004D29C(0, (unint64_t *)&unk_1005F7500);
  id v6 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  id v14 = v6;
  uint64_t v15 = &off_100561E28;
  BaseObjectGraph.satisfying<A>(_:with:)();

  swift_release();
  sub_100054B78((uint64_t *)&unk_100609300);
  id v7 = [objc_allocWithZone((Class)MTAddPodcastOrStationController) init];
  id v14 = v7;
  uint64_t v15 = (char **)&off_10055BA88;
  BaseObjectGraph.satisfying<A>(_:with:)();

  swift_release();
  sub_100054B78((uint64_t *)&unk_1005F7510);
  sub_10004D29C(0, &qword_1005FFA70);
  id v8 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  id v14 = v8;
  uint64_t v15 = (char **)&off_10055E1C0;
  BaseObjectGraph.satisfying<A>(_:with:)();

  swift_release();
  sub_100054B78((uint64_t *)&unk_1005F7520);
  sub_10004D29C(0, (unint64_t *)&unk_1005FBA00);
  id v9 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  uint64_t v10 = sub_1001A5458((unint64_t *)&qword_1005F7530, (unint64_t *)&unk_1005FBA00);
  id v14 = v9;
  uint64_t v15 = (char **)v10;
  BaseObjectGraph.satisfying<A>(_:with:)();

  swift_release();
  type metadata accessor for TranscriptReportConcernURLBuilder();
  id v14 = (id)swift_allocObject();
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005FF6F0);
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005F7540);
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005FF700);
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005F7550);
  sub_10004D29C(0, (unint64_t *)&unk_1005FF040);
  id v11 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  id v14 = v11;
  uint64_t v15 = (char **)&off_100564BB8;
  BaseObjectGraph.satisfying<A>(_:with:)();

  swift_release();
  type metadata accessor for LibraryActionController();
  BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  sub_100054B78(&qword_1005F7560);
  uint64_t v12 = BaseObjectGraph.satisfying<A>(_:with:)();
  swift_release();
  *(void *)&v1[OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_objectGraph] = v12;
  swift_retain();
  swift_release();
  return v12;
}

id sub_100195CB4@<X0>(id a1@<X0>, id *a2@<X8>)
{
  *a2 = a1;
  return a1;
}

uint64_t sub_100195CBC@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = _swiftEmptyArrayStorage;
LABEL_17:
    *a2 = v17;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  if (!v10) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t result = type metadata accessor for Episode();
  if (v10 >= 1)
  {
    uint64_t v19 = a2;
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v21 = 0;
      memset(v20, 0, sizeof(v20));
      id v14 = v13;
      if (Episode.init(from:clickAction:wantsListenNowReason:)(v14, (uint64_t)v20, 0))
      {
        uint64_t v15 = type metadata accessor for EpisodeListSettings();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
        uint64_t v16 = type metadata accessor for SectionContext();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
        static MetricsDataConfiguration.search.getter();
        dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
        sub_100053820((uint64_t)v23, (uint64_t)v29, (uint64_t *)&unk_1005F76D0);
        sub_100053884((uint64_t)v29);
        uint64_t v28 = v24;
        sub_1000537F4((uint64_t)&v28);
        uint64_t v27 = v25;
        sub_1000537F4((uint64_t)&v27);
        sub_1000536BC(v26);
        swift_release();
        sub_100054B1C((uint64_t)v6, (uint64_t *)&unk_1005F7770);
        sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005FEA40);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = (void *)v22;
    a2 = v19;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_100195FE4@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ShowLockupStyle();
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t result = swift_bridgeObjectRelease();
    id v13 = _swiftEmptyArrayStorage;
LABEL_16:
    *a2 = v13;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  if (!v7) {
    goto LABEL_15;
  }
LABEL_3:
  uint64_t result = type metadata accessor for LibraryShowLockup();
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  char v21 = -1;
  if (v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(a1 + 8 * i + 32);
      }
      id v11 = v10;
      static MetricsDataConfiguration.search.getter();
      ShowLockupStyle.init(includesOfferButton:defaultSubtitle:unfollowedSubtitle:groupedEpisodesListType:)();
      uint64_t v12 = sub_1001D40F4(v11, (uint64_t)v6, (uint64_t)v16);

      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    id v13 = (void *)v15;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001961D4@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_14:
    *a2 = _swiftEmptyArrayStorage;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t result = type metadata accessor for LegacyChannelLockup();
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(a1 + 8 * i + 32);
      }
      id v8 = v7;
      static MetricsDataConfiguration.search.getter();
      sub_1003B2224(v8, 1, (uint64_t)v9);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall LibraryDataProvider.restorePreviouslyDownloadedEpisodes()()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_downloadsRestoreController))
  {
    static os_log_type_t.default.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    id v1 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)();

    OS_dispatch_queue.sync<A>(execute:)();
    if (v5 == 1)
    {
      static os_log_type_t.default.getter();
      id v2 = (void *)static OS_os_log.restore.getter();
      os_log(_:dso:log:_:_:)();
    }
    else
    {
      uint64_t v3 = swift_allocObject();
      swift_weakInit();
      uint64_t v4 = (void *)swift_allocObject();
      v4[2] = v3;
      v4[3] = UInt64.int64Representation.getter;
      v4[4] = 0;
      swift_retain();
      sub_10001CFD4((uint64_t)sub_10005DB04, (uint64_t)v4);
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_1001965DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ShowLockupStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for LibraryShowLockup();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  id v10 = a1;
  static MetricsDataConfiguration.default.getter();
  uint64_t result = sub_1001D40F4(v10, (uint64_t)v9, (uint64_t)v12);
  *a3 = result;
  return result;
}

uint64_t sub_1001966F0@<X0>(void *a1@<X8>)
{
  type metadata accessor for Array();
  type metadata accessor for FRPOutput();
  uint64_t result = FRPOutput.content.getter();
  *a1 = v3;
  return result;
}

void sub_100196748(void *a1@<X0>, void *a2@<X8>)
{
  id v2 = a1;
  if (a1)
  {
    type metadata accessor for ChannelDetail();
    id v4 = v2;
    id v2 = (void *)sub_1003A9830(v4);
  }
  *a2 = v2;
}

id sub_1001967A0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [a1 subscriptionActive];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1001967D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*a1 ^ *a2) & 1;
}

unsigned char *sub_1001967E4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result & 1;
  return result;
}

uint64_t sub_1001967F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for LegacyChannelLockup();
  id v4 = a1;
  static MetricsDataConfiguration.default.getter();
  uint64_t result = sub_1003B2224(v4, 256, (uint64_t)&v6);
  *a2 = result;
  return result;
}

uint64_t sub_100196858()
{
  return swift_release();
}

uint64_t sub_100196918()
{
  type metadata accessor for DownloadCountObserver();
  sub_10004D29C(0, &qword_1005F7060);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v1 = [ObjCClassFromMetadata sharedInstance];
  id v2 = [v1 downloadManager];

  swift_getObjectType();
  id v3 = [ObjCClassFromMetadata sharedInstance];
  id v4 = [v3 downloadsNotifier];

  char v5 = sub_1003AAB64((uint64_t)v2, v4, 0, 0);
  sub_100042FDC(&qword_1005F79E0, (void (*)(uint64_t))type metadata accessor for DownloadCountObserver);
  Observer.eraseToAnyObserver()();

  Promise.resolve(_:)();
  return swift_release();
}

uint64_t sub_100196A78(uint64_t a1, uint64_t a2)
{
  type metadata accessor for DownloadCountObserver();
  sub_10004D29C(0, &qword_1005F7060);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v5 = [ObjCClassFromMetadata sharedInstance];
  id v6 = [v5 downloadManager];

  swift_getObjectType();
  id v7 = [ObjCClassFromMetadata sharedInstance];
  id v8 = [v7 downloadsNotifier];

  swift_bridgeObjectRetain();
  id v9 = sub_1003AAB64((uint64_t)v6, v8, a1, a2);
  sub_100042FDC(&qword_1005F79E0, (void (*)(uint64_t))type metadata accessor for DownloadCountObserver);
  Observer.eraseToAnyObserver()();

  Promise.resolve(_:)();
  return swift_release();
}

uint64_t sub_100196BF0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_100054B78(&qword_1005F7268);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v6 = Promise.init(signpost:log:metadata:logResult:)();
  id v7 = [*(id *)(v3 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v6;
  v12[4] = sub_1001AB724;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_10003B424;
  void v12[3] = &unk_1005572E8;
  id v9 = _Block_copy(v12);
  id v10 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v7 performBlock:v9];
  _Block_release(v9);

  return v6;
}

uint64_t sub_100196D74(void *a1, uint64_t a2)
{
  type metadata accessor for EpisodeCountObserver();
  swift_allocObject();
  id v4 = a1;
  swift_bridgeObjectRetain();
  sub_1002F7E18(v4, a2);
  sub_100042FDC(&qword_1005F79D8, (void (*)(uint64_t))type metadata accessor for EpisodeCountObserver);
  Observer.eraseToAnyObserver()();
  swift_release();
  Promise.resolve(_:)();
  return swift_release();
}

id sub_100196E60@<X0>(id result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    uint64_t result = [result smartPlayEpisode];
    if (result)
    {
      uint64_t v3 = result;
      type metadata accessor for Episode();
      uint64_t v5 = 0;
      memset(v4, 0, sizeof(v4));
      uint64_t result = (id)Episode.init(from:clickAction:wantsListenNowReason:)(v3, (uint64_t)v4, 1);
    }
  }
  *a2 = result;
  return result;
}

uint64_t sub_100196EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for CoreDataFetcher();
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  static CoreDataFetcher.fetchPodcast(with:completion:)();

  return swift_release();
}

uint64_t sub_100196F90(void *a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v65 = a3;
  uint64_t v66 = a2;
  uint64_t v6 = type metadata accessor for ShowEpisodeCountHeaderData();
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  __chkstk_darwin(v6);
  uint64_t v63 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v8 - 8);
  uint64_t v58 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  __chkstk_darwin(v10);
  uint64_t v62 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FlowPresentationContext();
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v53 = v12;
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for FlowDestination();
  uint64_t v14 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v16 = (uint64_t *)((char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v17 - 8);
  long long v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ArtworkModel();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v61 = (uint64_t)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v67 = (uint64_t)&v48 - v24;
  uint64_t Entity = type metadata accessor for FetchEntityError.ErrorDomain();
  uint64_t v26 = *(void *)(Entity - 8);
  __chkstk_darwin(Entity);
  uint64_t v28 = (char *)&v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100054B78((uint64_t *)&unk_1005F79C0);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v50 = v30;
    id v33 = a1;
    id v34 = [v33 title];
    if (v34)
    {
      uint64_t v35 = v34;
      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v64 = v36;
    }
    else
    {
      uint64_t v48 = 0;
      unint64_t v64 = 0xE000000000000000;
    }
    MTPodcast.artworkModel.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      static ArtworkModel.placeholder.getter();
      sub_100054B1C((uint64_t)v19, &qword_1005F76A0);
    }
    else
    {
      sub_1001AB620((uint64_t)v19, v67, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    }
    uint64_t v38 = v59;
    uint64_t v39 = v55;
    uint64_t v41 = v52;
    uint64_t v40 = v53;
    uint64_t v42 = v51;
    *uint64_t v16 = v54;
    v16[1] = v39;
    (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for FlowDestination.podcastUUID(_:), v42);
    (*(void (**)(char *, void, uint64_t))(v41 + 104))(v68, enum case for FlowPresentationContext.infer(_:), v40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v41) = static Link.Presentation.textFollowsTintColor.getter();
    char v43 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
    Link.Presentation.init(rawValue:)();
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v41) {
      Link.Presentation.init(rawValue:)();
    }
    Link.Presentation.init(rawValue:)();
    char v44 = Link.Presentation.init(rawValue:)();
    id v49 = v33;
    if (v44 != v43) {
      Link.Presentation.init(rawValue:)();
    }
    uint64_t v45 = v60;
    (*(void (**)(char *, void, uint64_t))(v56 + 104))(v62, enum case for FlowDestinationPageHeader.standard(_:), v57);
    static ActionMetrics.notInstrumented.getter();
    type metadata accessor for FlowAction();
    swift_allocObject();
    FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
    uint64_t v46 = v67;
    sub_1001AB558(v67, v61, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    swift_retain();
    unint64_t v47 = v63;
    ShowEpisodeCountHeaderData.init(title:artwork:action:)();
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v47, v45);
    swift_storeEnumTagMultiPayload();
    v66(v32);
    swift_release();

    sub_100054B1C((uint64_t)v32, (uint64_t *)&unk_1005F79C0);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v47, v45);
    return sub_1001AB5C0(v46, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, enum case for FetchEntityError.ErrorDomain.fetchShowEpisodeCountHeaderData(_:), Entity);
    FetchEntityError.init(domain:)();
    swift_storeEnumTagMultiPayload();
    v66(v32);
    return sub_100054B1C((uint64_t)v32, (uint64_t *)&unk_1005F79C0);
  }
}

uint64_t sub_100197708@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  if (result)
  {
    uint64_t v3 = (void *)result;
    type metadata accessor for PodcastDetail();
    uint64_t result = sub_10022B704(v3, 0, 0, 0, 1);
  }
  *a2 = result;
  return result;
}

uint64_t sub_100197764@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if ([a1 hidden])
  {
    uint64_t result = 0;
  }
  else
  {
    id v5 = [a1 smartPlayEpisode];
    unint64_t v6 = sub_10022D330(v5);
    int v8 = v7 & 1;
    type metadata accessor for PodcastDetail();
    uint64_t result = sub_10022B704(a1, 0, v5, v6, v8);
  }
  *a2 = result;
  return result;
}

uint64_t sub_100197804@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10019F36C(a1, a2);
}

void *sub_10019781C@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result > 0;
  return result;
}

void sub_100197830(void *a1@<X0>, void *a2@<X8>)
{
  if (!a1) {
    goto LABEL_6;
  }
  id v3 = a1;
  if (![v3 isSerialShowTypeInFeed])
  {

LABEL_6:
    char v7 = _swiftEmptyArrayStorage;
    goto LABEL_9;
  }
  id v4 = [v3 seasonNumbers];
  if (v4)
  {
    id v5 = v4;
    sub_10004D29C(0, (unint64_t *)&unk_1005F9460);
    unint64_t v6 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v6 = _swiftEmptyArrayStorage;
  }
  char v7 = sub_100190988((unint64_t)v6);
  swift_bridgeObjectRelease();

LABEL_9:
  *a2 = v7;
}

uint64_t sub_100197908@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static EpisodeUserFilter.allAvailableFilters(seasonNumbers:hasBookmarkedEpisodes:hasPlayedEpisodes:hasSubscriberEpisodes:)();
  *a1 = result;
  return result;
}

uint64_t sub_100197944@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin(v6 - 8);
  int v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for Episode();
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  id v12 = a1;
  EpisodeListSettings.listType.getter();
  LOBYTE(a1) = EpisodeListType.wantsListenNowReason.getter();
  sub_1000536CC((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  uint64_t result = Episode.init(from:clickAction:wantsListenNowReason:)(v12, (uint64_t)&v22, a1 & 1);
  if (result)
  {
    uint64_t v14 = type metadata accessor for EpisodeListSettings();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, a2, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    uint64_t v16 = enum case for SectionContext.season(_:);
    uint64_t v17 = type metadata accessor for SectionContext();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v8, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v17);
    swift_retain();
    static MetricsDataConfiguration.default.getter();
    uint64_t v19 = dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
    sub_100053820((uint64_t)&v22, (uint64_t)v27, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v27);
    uint64_t v26 = v23;
    sub_1000537F4((uint64_t)&v26);
    uint64_t v25 = *((void *)&v23 + 1);
    sub_1000537F4((uint64_t)&v25);
    sub_1000536BC(v24);
    swift_release_n();
    sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7770);
    uint64_t result = sub_100054B1C((uint64_t)v11, (uint64_t *)&unk_1005FEA40);
  }
  else
  {
    uint64_t v19 = 0;
  }
  *a3 = v19;
  return result;
}

uint64_t sub_100197C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v51 = a2;
  uint64_t v2 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v2 - 8);
  uint64_t v50 = (char *)&v44[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v4 - 8);
  id v49 = (char *)&v44[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)&v44[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v44[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v12 - 8);
  uint64_t v46 = (char *)&v44[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v14 - 8);
  uint64_t v53 = (char *)&v44[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v47 = *(void *)(v54 - 8);
  uint64_t v16 = __chkstk_darwin(v54);
  uint64_t v48 = (char *)&v44[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v52 = (char *)&v44[-1] - v18;
  EpisodeListSettings.listType.getter();
  sub_1001A5FC8((uint64_t)v59, (uint64_t)v63);
  if (v66 == 7)
  {
    uint64_t v19 = v64;
    int v20 = v65;
    swift_bridgeObjectRelease();
    if (!v20)
    {
      uint64_t v61 = 0x6E6F73616553;
      unint64_t v62 = 0xE600000000000000;
      v60[0] = v19;
      v32._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      v44[0] = v61;
      v44[1] = v62;
      uint64_t countAndFlagsBits = 0;
      goto LABEL_11;
    }
    uint64_t v21 = v11;
    long long v22 = v8;
    sub_1001A5A58(v19, v20);
  }
  else
  {
    uint64_t v21 = v11;
    long long v22 = v8;
    sub_1000536CC((uint64_t)v59, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  }
  sub_100054B78(&qword_1005F7860);
  FRPSectionInfo.section.getter();
  uint64_t v23 = v61;
  char v24 = v62;
  id v25 = [self mainBundle];
  if ((v24 & 1) != 0 || !v23)
  {
    v30._uint64_t countAndFlagsBits = 0xD000000000000017;
    v68._object = (void *)0xE000000000000000;
    v30._object = (void *)0x80000001004D40B0;
    v31._uint64_t countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v68._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v25, v31, v68)._countAndFlagsBits;

    HIWORD(v44[1]) = -4864;
    strcpy((char *)v44, "UnknownSeason");
  }
  else
  {
    v67._object = (void *)0xE000000000000000;
    v26._object = (void *)0x80000001004D40D0;
    v26._uint64_t countAndFlagsBits = 0xD000000000000014;
    v27._uint64_t countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v67._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v67);

    sub_100054B78(&qword_1005F7720);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_10046D010;
    *(void *)(v28 + 56) = &type metadata for Int64;
    *(void *)(v28 + 64) = &protocol witness table for Int64;
    *(void *)(v28 + 32) = v23;
    uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = 0x6E6F73616553;
    unint64_t v62 = 0xE600000000000000;
    v60[0] = v23;
    v29._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v44[0] = v61;
    v44[1] = v62;
  }
  int v8 = v22;
  uint64_t v11 = v21;
LABEL_11:
  ShelfIDBuilder.init(named:)();
  EpisodeListSettings.listType.getter();
  EpisodeListType.description.getter();
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000536CC((uint64_t)v60, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  sub_100054B78(&qword_1005F7860);
  FRPSectionInfo.section.getter();
  if ((v62 & 1) == 0)
  {
    *(void *)&long long v56 = v61;
    sub_1001AAB30();
    BinaryInteger.description.getter();
  }
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = ShelfIDBuilder.build()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  EpisodeListSettings.listType.getter();
  EpisodeListType.shelfItemKind.getter();
  sub_1000536CC((uint64_t)&v61, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  LOBYTE(v56) = 1;
  id v33 = v52;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
  uint64_t v34 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v46, 1, 1, v34);
  uint64_t v35 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v11, 1, 1, v35);
  uint64_t v36 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v8, 1, 1, v36);
  swift_bridgeObjectRetain();
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  uint64_t v37 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v48, v33, v54);
  unint64_t v38 = FRPSectionInfo.items.getter();
  uint64_t v55 = sub_1001B7768(v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v49, 1, 1, v39);
  uint64_t v58 = 0;
  long long v56 = 0u;
  long long v57 = 0u;
  swift_bridgeObjectRetain();
  ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.targetType.getter();
  uint64_t v40 = v50;
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v52, v54);
}

uint64_t sub_1001985C8(uint64_t a1, uint64_t a2, void *a3)
{
  id v47 = a3;
  uint64_t v50 = a2;
  uint64_t v51 = type metadata accessor for Calendar();
  uint64_t v49 = *(void *)(v51 - 8);
  uint64_t v52 = *(void *)(v49 + 64);
  __chkstk_darwin(v51);
  uint64_t v48 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EpisodeListSettings();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v38 = v7;
  int v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005F7940);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  uint64_t v55 = v10;
  __chkstk_darwin(v9);
  uint64_t v46 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58[0] = 0;
  v58[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease();
  unint64_t v56 = 0xD000000000000026;
  unint64_t v57 = 0x80000001004D4170;
  EpisodeListSettings.listType.getter();
  uint64_t v12 = EpisodeListType.description.getter();
  uint64_t v14 = v13;
  sub_1000536CC((uint64_t)v58, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  v15._uint64_t countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 93;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  unint64_t v45 = v56;
  unint64_t v44 = v57;
  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v17;
  uint64_t v41 = EpisodeListSettings.predicate.getter();
  uint64_t v36 = a1;
  EpisodeListSettings.sort.getter();
  uint64_t v37 = EpisodeSortType.descriptors.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  v34[1] = static OS_dispatch_queue.main.getter();
  uint64_t v18 = v6;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v35(v8, a1, v5);
  uint64_t v19 = *(unsigned __int8 *)(v6 + 80);
  v34[4] = v19 | 7;
  uint64_t v20 = swift_allocObject();
  uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  uint64_t v40 = v18 + 32;
  uint64_t v21 = v8;
  v39(v20 + ((v19 + 16) & ~v19), v8, v5);
  v34[3] = type metadata accessor for LibraryEpisodeLockup();
  id v22 = v47;
  v34[2] = sub_100054B78(&qword_1005F93A0);
  sub_10004D29C(0, (unint64_t *)&qword_100603220);
  id v47 = (id)sub_1001AB208(&qword_1005F7950, &qword_1005F93A0);
  uint64_t v23 = v46;
  FetchedResultsSectionedPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:sectionTransform:)();
  id v25 = v48;
  uint64_t v24 = v49;
  uint64_t v26 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v53 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_metricsCalendar, v51);
  v35(v21, v36, v5);
  uint64_t v27 = v24;
  unint64_t v28 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v29 = (v52 + v19 + v28) & ~v19;
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v30 + v28, v25, v26);
  v39(v30 + v29, v21, v5);
  type metadata accessor for ModernShelf();
  sub_100044200(&qword_1005F7958, (uint64_t *)&unk_1005F7940);
  uint64_t v31 = v54;
  uint64_t v32 = PaginatedPublisher.paginatedSectionMap<A, B, C>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v31);
  return v32;
}

uint64_t sub_100198BDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin(v6 - 8);
  int v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for Episode();
  uint64_t v22 = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  id v12 = a1;
  EpisodeListSettings.listType.getter();
  LOBYTE(a1) = EpisodeListType.wantsListenNowReason.getter();
  sub_1000536CC((uint64_t)v19, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  uint64_t result = Episode.init(from:clickAction:wantsListenNowReason:)(v12, (uint64_t)&v20, a1 & 1);
  if (result)
  {
    uint64_t v14 = type metadata accessor for EpisodeListSettings();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, a2, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    uint64_t v16 = type metadata accessor for SectionContext();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
    swift_retain();
    static MetricsDataConfiguration.default.getter();
    uint64_t v17 = dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
    sub_100053820((uint64_t)&v20, (uint64_t)v25, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v25);
    uint64_t v24 = v21;
    sub_1000537F4((uint64_t)&v24);
    uint64_t v23 = *((void *)&v21 + 1);
    sub_1000537F4((uint64_t)&v23);
    sub_1000536BC(v22);
    swift_release_n();
    sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7770);
    uint64_t result = sub_100054B1C((uint64_t)v11, (uint64_t *)&unk_1005FEA40);
  }
  else
  {
    uint64_t v17 = 0;
  }
  *a3 = v17;
  return result;
}

uint64_t sub_100198E90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  LegacyEpisodeLockup.releaseDate.getter();
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    uint64_t result = sub_100054B1C((uint64_t)v4, &qword_1005F5D20);
    *a1 = 0;
    a1[1] = 0;
  }
  else
  {
    *a1 = Date.yearString.getter();
    a1[1] = v8;
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  return result;
}

uint64_t sub_100198FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v74 = a3;
  uint64_t v70 = a2;
  uint64_t v81 = a4;
  uint64_t v5 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v5 - 8);
  uint64_t v80 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  uint64_t v79 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v72 = (char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v11 - 8);
  uint64_t v75 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v13 - 8);
  uint64_t v73 = (char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v15 - 8);
  uint64_t v82 = (char *)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v78 = *(void *)(v83 - 8);
  uint64_t v17 = __chkstk_darwin(v83);
  id v76 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v77 = (char *)v64 - v19;
  uint64_t v69 = type metadata accessor for Calendar.Component();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  Swift::String v67 = (char *)v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  char v66 = (char *)v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  unint64_t v29 = (char *)v64 - v28;
  uint64_t v84 = sub_100054B78(&qword_1005F7960);
  uint64_t v30 = a1;
  FRPSectionInfo.section.getter();
  uint64_t v32 = v89;
  uint64_t v31 = v90;
  static Date.now.getter();
  uint64_t v33 = Date.yearString.getter();
  uint64_t v35 = v34;
  unsigned __int8 v65 = *(void (**)(char *, uint64_t))(v25 + 8);
  v65(v29, v24);
  if (!v31)
  {
    if (!v35) {
      goto LABEL_7;
    }
    goto LABEL_8;
  }
  if (!v35)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v37 = v30;
    goto LABEL_9;
  }
  if (v32 == v33 && v31 == v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    object = 0;
    uint64_t v37 = v30;
    goto LABEL_13;
  }
  char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v30;
  if (v42)
  {
    object = 0;
    goto LABEL_13;
  }
LABEL_9:
  FRPSectionInfo.section.getter();
  uint64_t v38 = v89;
  object = v90;
  if (!v90)
  {
    id v39 = [self mainBundle];
    v91._object = (void *)0xE000000000000000;
    v40._object = (void *)0x80000001004D40F0;
    v40._uint64_t countAndFlagsBits = 0xD000000000000015;
    v41._uint64_t countAndFlagsBits = 0;
    v41._object = (void *)0xE000000000000000;
    v91._uint64_t countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)(unint64_t)v38, (NSBundle)v39, v41, v91)._object;
  }
LABEL_13:
  unint64_t v43 = FRPSectionInfo.items.getter();
  unint64_t v44 = v43;
  if (!(v43 >> 62))
  {
    uint64_t result = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_15;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
LABEL_22:
    sub_100054B1C((uint64_t)v23, &qword_1005F5D20);
    uint64_t v51 = 0;
    char v52 = 1;
    goto LABEL_23;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_21;
  }
LABEL_15:
  if ((v44 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  LegacyEpisodeLockup.releaseDate.getter();
  swift_release();
  uint64_t v37 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1) {
    goto LABEL_22;
  }
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v64[1] = object;
  id v47 = v66;
  v46(v66, v23, v24);
  uint64_t v48 = v68;
  uint64_t v49 = v67;
  uint64_t v50 = v69;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v67, enum case for Calendar.Component.year(_:), v69);
  uint64_t v51 = Calendar.component(_:from:)();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  v65(v47, v24);
  char v52 = 0;
LABEL_23:
  ShelfIDBuilder.init(named:)();
  EpisodeListSettings.listType.getter();
  EpisodeListType.description.getter();
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000536CC((uint64_t)v88, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  uint64_t v71 = v37;
  if ((v52 & 1) == 0)
  {
    uint64_t v89 = v51;
    sub_1001AABE4();
    BinaryInteger.description.getter();
  }
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = ShelfIDBuilder.build()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  uint64_t v70 = countAndFlagsBits;
  if (v52)
  {
    uint64_t v69 = 0x6E6B6E5565746144;
  }
  else
  {
    uint64_t v89 = v51;
    sub_1001AABE4();
    uint64_t v69 = BinaryInteger.description.getter();
  }
  uint64_t v54 = v72;
  EpisodeListSettings.listType.getter();
  EpisodeListType.shelfItemKind.getter();
  sub_1000536CC((uint64_t)&v89, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  LOBYTE(v85) = 1;
  uint64_t v55 = v77;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
  uint64_t v56 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v73, 1, 1, v56);
  uint64_t v57 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v75, 1, 1, v57);
  uint64_t v58 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v54, 1, 1, v58);
  swift_bridgeObjectRetain();
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  uint64_t v59 = v78;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v76, v55, v83);
  unint64_t v60 = FRPSectionInfo.items.getter();
  uint64_t v84 = sub_1001B7768(v60);
  swift_bridgeObjectRelease();
  uint64_t v61 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v79, 1, 1, v61);
  uint64_t v87 = 0;
  long long v86 = 0u;
  long long v85 = 0u;
  swift_bridgeObjectRetain();
  ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.targetType.getter();
  unint64_t v62 = v80;
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v55, v83);
}

uint64_t sub_100199C40@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result) {
    uint64_t result = MTPodcast.episodeSortType.getter();
  }
  *a2 = result;
  return result;
}

uint64_t sub_100199C70(uint64_t a1, uint64_t a2, char a3)
{
  return EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();
}

uint64_t sub_100199D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  EpisodeListSettings.sort.getter();
  if (EpisodeSortType.isSerialSort.getter()) {
    sub_1001A6B50(a1, a2, a3);
  }
  else {
    sub_1001985C8(a1, a2, a3);
  }
  sub_100054B78(&qword_1005F77B0);
  sub_100054B78(&qword_1005F7800);
  sub_100054B78(&qword_1005F77D0);
  sub_100044200(&qword_1005F77C0, &qword_1005F77B0);
  PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)();
  sub_100054B78(&qword_1005F77C8);
  sub_100054B78(&qword_1005F77B8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
  FRPOutput.init(content:hasMore:totalCount:)();
  sub_100054B78(&qword_1005F7368);
  sub_100044200(&qword_1005F7380, &qword_1005F7368);
  uint64_t v8 = PaginatedPublisher.paginatedPrepend(_:)();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v8;
  return result;
}

uint64_t sub_100199F20(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F78B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((EpisodeListType.shouldMatchShowSorting.getter() & 1) != 0 && (EpisodeListType.libraryShowUUID.getter(), v6))
  {
    uint64_t v7 = sub_10019A1B4();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    sub_1001A5FC8(a1, (uint64_t)&v14);
    if (v15 == 4)
    {
      uint64_t v9 = sub_10019A1B4();
      v12[0] = v9;
      uint64_t v10 = sub_10019A4EC();
      v12[1] = v9;
      v13[0] = v10;
      sub_100054B78(&qword_1005F78C8);
      sub_100054B78(&qword_1005F7398);
      sub_100044200(&qword_1005F78D0, &qword_1005F78C8);
      sub_100044200(&qword_1005F73A8, &qword_1005F7398);
      Publisher.combineLatest<A, B>(_:_:)();
      sub_100044200(&qword_1005F78D8, &qword_1005F78B0);
      uint64_t v11 = Publisher.eraseToAnyPublisher()();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      LibraryDataProvider.libraryActionController.getter((uint64_t)v13);
      sub_100041A98(v13, v13[3]);
      uint64_t v11 = dispatch thunk of LibraryActionControllerProtocol.episodeSortTypePublisher(forListType:)();
      sub_10004D2D8((uint64_t)v13);
    }
    return v11;
  }
}

uint64_t sub_10019A1B4()
{
  uint64_t v1 = sub_100054B78(&qword_1005F7920);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005F7928);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v17[0] = v10;
  v17[1] = v9;
  uint64_t v11 = self;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 predicateForPodcastUUID:v12];

  id v14 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  static OS_dispatch_queue.main.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
  FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
  sub_100044200(&qword_1005F7930, &qword_1005F7920);
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_100044200(&qword_1005F7938, &qword_1005F7928);
  uint64_t v15 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v15;
}

uint64_t sub_10019A4EC()
{
  uint64_t v1 = sub_100054B78(&qword_1005F7908);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = self;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 predicateForStationUUID:v6];

  id v8 = [*(id *)(v0 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider) privateQueueContext];
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  static OS_dispatch_queue.main.getter();
  type metadata accessor for StationSortOrder();
  sub_10004D29C(0, (unint64_t *)&qword_1005F7410);
  FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
  sub_100044200(&qword_1005F7910, &qword_1005F7908);
  uint64_t v9 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

uint64_t sub_10019A73C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_100054B78(&qword_1005F77A0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *a2;
  sub_100054BBC(a1, (uint64_t)v8, &qword_1005F77A0);
  uint64_t v10 = type metadata accessor for StationSortOrder();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    uint64_t result = sub_100054B1C((uint64_t)v8, &qword_1005F77A0);
  }
  else
  {
    char v13 = StationSortOrder.episodeSort.getter();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    if (v13 != 17) {
      char v9 = v13;
    }
  }
  *a3 = v9;
  return result;
}

uint64_t sub_10019A884@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MTPodcast.episodeSortType.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10019A8B0()
{
  uint64_t v0 = EpisodeSortType.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == EpisodeSortType.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

unsigned __int8 *sub_10019A948@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *result;
  if (v2 == 17) {
    LOBYTE(v2) = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_10019A95C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v3 = [a1 containerOrder];

  return sub_10004EF24(v3, a2);
}

BOOL sub_10019A99C()
{
  return (dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0;
}

uint64_t sub_10019AA28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Episode();
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t result = Episode.init(from:clickAction:wantsListenNowReason:)(a1, (uint64_t)&v19, 0);
  if (result)
  {
    uint64_t v13 = type metadata accessor for EpisodeListSettings();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a2, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    uint64_t v15 = enum case for SectionContext.season(_:);
    uint64_t v16 = type metadata accessor for SectionContext();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v8, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    swift_retain();
    static MetricsDataConfiguration.default.getter();
    uint64_t v18 = dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
    sub_100053820((uint64_t)&v19, (uint64_t)v24, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v24);
    uint64_t v23 = v20;
    sub_1000537F4((uint64_t)&v23);
    uint64_t v22 = *((void *)&v20 + 1);
    sub_1000537F4((uint64_t)&v22);
    sub_1000536BC(v21);
    swift_release_n();
    sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7770);
    uint64_t result = sub_100054B1C((uint64_t)v11, (uint64_t *)&unk_1005FEA40);
  }
  else
  {
    uint64_t v18 = 0;
  }
  *a3 = v18;
  return result;
}

uint64_t sub_10019ACE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = LegacyEpisodeLockup.seasonNumber.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10019AD18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v3 - 8);
  uint64_t v49 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v5 - 8);
  uint64_t v48 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v7 - 8);
  unint64_t v45 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v9 - 8);
  unint64_t v44 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v14 - 8);
  uint64_t v51 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v46 = *(void *)(v52 - 8);
  uint64_t v16 = __chkstk_darwin(v52);
  Swift::String v41 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v40[0] = (char *)v40 - v18;
  ShelfIDBuilder.init(named:)();
  EpisodeListSettings.listType.getter();
  EpisodeListType.description.getter();
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000536CC((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  sub_100054B78(&qword_1005F7860);
  FRPSectionInfo.section.getter();
  if ((v58 & 1) == 0)
  {
    *(void *)&long long v53 = v57;
    sub_1001AAB30();
    BinaryInteger.description.getter();
  }
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::String v19 = ShelfIDBuilder.build()();
  uint64_t countAndFlagsBits = v19._countAndFlagsBits;
  object = v19._object;
  swift_bridgeObjectRelease();
  uint64_t v47 = a1;
  FRPSectionInfo.section.getter();
  uint64_t v20 = v57;
  char v21 = v58;
  id v22 = [self mainBundle];
  if ((v21 & 1) != 0 || !v20)
  {
    v28._uint64_t countAndFlagsBits = 0xD000000000000017;
    v60._object = (void *)0xE000000000000000;
    v28._object = (void *)0x80000001004D40B0;
    v29._uint64_t countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v60._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v22, v29, v60);

    uint64_t v27 = 0x536E776F6E6B6E55;
  }
  else
  {
    v59._object = (void *)0xE000000000000000;
    v23._object = (void *)0x80000001004D40D0;
    v23._uint64_t countAndFlagsBits = 0xD000000000000014;
    v24._uint64_t countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v59._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v59);

    sub_100054B78(&qword_1005F7720);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10046D010;
    *(void *)(v25 + 56) = &type metadata for Int64;
    *(void *)(v25 + 64) = &protocol witness table for Int64;
    *(void *)(v25 + 32) = v20;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v57 = 0x6E6F73616553;
    unint64_t v58 = 0xE600000000000000;
    *(void *)&long long v53 = v20;
    v26._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    uint64_t v27 = v57;
  }
  v40[1] = v27;
  EpisodeListSettings.listType.getter();
  uint64_t v30 = v40[0];
  EpisodeListType.shelfItemPresentation.getter();
  sub_1000536CC((uint64_t)&v57, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  uint64_t v31 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
  uint64_t v32 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v44, 1, 1, v32);
  uint64_t v33 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v45, 1, 1, v33);
  swift_bridgeObjectRetain();
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  uint64_t v34 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v41, v30, v52);
  unint64_t v35 = FRPSectionInfo.items.getter();
  uint64_t v47 = sub_1001B7768(v35);
  swift_bridgeObjectRelease();
  uint64_t v36 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v48, 1, 1, v36);
  uint64_t v55 = 0;
  long long v54 = 0u;
  long long v53 = 0u;
  swift_bridgeObjectRetain();
  ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.targetType.getter();
  uint64_t v37 = v49;
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v30, v52);
}

uint64_t sub_10019B620(uint64_t a1, uint64_t a2, void *a3)
{
  id v46 = a3;
  uint64_t v49 = a2;
  uint64_t v50 = type metadata accessor for Calendar();
  uint64_t v48 = *(void *)(v50 - 8);
  uint64_t v51 = *(void *)(v48 + 64);
  __chkstk_darwin(v50);
  uint64_t v47 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EpisodeListSettings();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v38 = v7;
  uint64_t v8 = sub_100054B78(&qword_1005F7870);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  __chkstk_darwin(v8);
  uint64_t v34 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57[0] = 0;
  v57[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  unint64_t v55 = 0xD00000000000001ALL;
  unint64_t v56 = 0x80000001004D4090;
  EpisodeListSettings.listType.getter();
  v11._uint64_t countAndFlagsBits = EpisodeListType.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  sub_1000536CC((uint64_t)v57, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  unint64_t v45 = v55;
  unint64_t v44 = v56;
  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v12;
  uint64_t v41 = EpisodeListSettings.predicate.getter();
  uint64_t v13 = a1;
  uint64_t v36 = a1;
  EpisodeListSettings.sort.getter();
  uint64_t v37 = EpisodeSortType.descriptors.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v33 = static OS_dispatch_queue.main.getter();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v15 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v15;
  v14(v15, v13, v5);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v35 = v16 | 7;
  uint64_t v17 = swift_allocObject();
  Swift::String v40 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v40(v17 + ((v16 + 16) & ~v16), v15, v5);
  uint64_t v39 = type metadata accessor for LibraryEpisodeLockup();
  sub_10004D29C(0, (unint64_t *)&qword_100603220);
  id v18 = v46;
  FetchedResultsSectionedPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:sectionTransform:)();
  uint64_t v20 = v47;
  uint64_t v19 = v48;
  uint64_t v21 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v52 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_metricsCalendar, v50);
  id v22 = v32;
  v14(v32, v36, v5);
  uint64_t v23 = v19;
  unint64_t v24 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v25 = (v51 + v16 + v24) & ~v16;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v26 + v24, v20, v21);
  v40(v26 + v25, v22, v5);
  type metadata accessor for ModernShelf();
  sub_100044200((unint64_t *)&unk_1005F7878, &qword_1005F7870);
  uint64_t v27 = v53;
  Swift::String v28 = v34;
  uint64_t v29 = PaginatedPublisher.paginatedSectionMap<A, B, C>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v27);
  return v29;
}

uint64_t sub_10019BBF0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v9 - 8);
  Swift::String v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Episode();
  uint64_t v19 = 0;
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t result = Episode.init(from:clickAction:wantsListenNowReason:)(a1, (uint64_t)&v17, 0);
  if (result)
  {
    uint64_t v13 = type metadata accessor for EpisodeListSettings();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a2, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    uint64_t v15 = type metadata accessor for SectionContext();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
    swift_retain();
    static MetricsDataConfiguration.default.getter();
    uint64_t v16 = dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
    sub_100053820((uint64_t)&v17, (uint64_t)v22, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v22);
    uint64_t v21 = v18;
    sub_1000537F4((uint64_t)&v21);
    uint64_t v20 = *((void *)&v18 + 1);
    sub_1000537F4((uint64_t)&v20);
    sub_1000536BC(v19);
    swift_release_n();
    sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7770);
    uint64_t result = sub_100054B1C((uint64_t)v11, (uint64_t *)&unk_1005FEA40);
  }
  else
  {
    uint64_t v16 = 0;
  }
  *a3 = v16;
  return result;
}

void sub_10019BE68(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  LegacyEpisodeLockup.releaseDate.getter();
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100054B1C((uint64_t)v4, &qword_1005F5D20);
LABEL_4:
    id v10 = [self mainBundle];
    v15._object = (void *)0xE000000000000000;
    v11._object = (void *)0x80000001004D40F0;
    v11._uint64_t countAndFlagsBits = 0xD000000000000015;
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v15._uint64_t countAndFlagsBits = 0;
    Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v15);
    uint64_t countAndFlagsBits = v13._countAndFlagsBits;
    object = v13._object;
    swift_bridgeObjectRelease();

    goto LABEL_5;
  }
  uint64_t countAndFlagsBits = Date.yearString.getter();
  object = v8;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  if (!object) {
    goto LABEL_4;
  }
LABEL_5:
  *a1 = countAndFlagsBits;
  a1[1] = (uint64_t)object;
}

uint64_t sub_10019C010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a3;
  uint64_t v52 = a2;
  uint64_t v6 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v6 - 8);
  uint64_t v61 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v8 - 8);
  Swift::String v60 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v10 - 8);
  uint64_t v54 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v12 - 8);
  uint64_t v53 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v14 - 8);
  unint64_t v55 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v16 - 8);
  uint64_t v64 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v58 = *(void *)(v65 - 8);
  uint64_t v18 = __chkstk_darwin(v65);
  uint64_t v57 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v63 = (char *)&v50 - v20;
  uint64_t v21 = type metadata accessor for Calendar.Component();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005F7888);
  uint64_t v59 = a1;
  unint64_t v32 = FRPSectionInfo.items.getter();
  unint64_t v33 = v32;
  if (v32 >> 62) {
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t result = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v62 = a4;
  if (!result)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
LABEL_10:
    sub_100054B1C((uint64_t)v27, &qword_1005F5D20);
    uint64_t v35 = 0;
    char v36 = 1;
    goto LABEL_11;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  LegacyEpisodeLockup.releaseDate.getter();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1) {
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, enum case for Calendar.Component.year(_:), v21);
  uint64_t v35 = Calendar.component(_:from:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  char v36 = 0;
LABEL_11:
  ShelfIDBuilder.init(named:)();
  EpisodeListSettings.listType.getter();
  EpisodeListType.description.getter();
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000536CC((uint64_t)v69, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  if ((v36 & 1) == 0)
  {
    uint64_t v70 = v35;
    sub_1001AABE4();
    BinaryInteger.description.getter();
  }
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = ShelfIDBuilder.build()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  uint64_t v52 = countAndFlagsBits;
  if (v36)
  {
    unint64_t v51 = 0xEB000000006E776FLL;
  }
  else
  {
    uint64_t v70 = v35;
    sub_1001AABE4();
    BinaryInteger.description.getter();
    unint64_t v51 = v38;
  }
  uint64_t v39 = v54;
  Swift::String v40 = v53;
  EpisodeListSettings.listType.getter();
  uint64_t v41 = v63;
  EpisodeListType.shelfItemPresentation.getter();
  sub_1000536CC((uint64_t)&v70, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  FRPSectionInfo.section.getter();
  uint64_t v42 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v55, 1, 1, v42);
  uint64_t v43 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v40, 1, 1, v43);
  uint64_t v44 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v39, 1, 1, v44);
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  uint64_t v45 = v58;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v57, v41, v65);
  unint64_t v46 = FRPSectionInfo.items.getter();
  uint64_t v56 = sub_1001B7768(v46);
  swift_bridgeObjectRelease();
  uint64_t v47 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v60, 1, 1, v47);
  uint64_t v68 = 0;
  long long v67 = 0u;
  long long v66 = 0u;
  swift_bridgeObjectRetain();
  ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.targetType.getter();
  FRPSectionInfo.section.getter();
  uint64_t v48 = v61;
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v63, v65);
}

uint64_t sub_10019CAC0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v5 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v5 - 8);
  uint64_t v52 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v10 - 8);
  uint64_t v48 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v12 - 8);
  uint64_t v47 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v14 - 8);
  uint64_t v43 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v16 - 8);
  uint64_t v54 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ModernShelf();
  uint64_t v50 = *(void *)(v18 - 8);
  uint64_t v51 = v18;
  __chkstk_darwin(v18);
  uint64_t v49 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v55 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v41 - v24;
  unint64_t v42 = *a1;
  ShelfIDBuilder.init(named:)();
  EpisodeListSettings.listType.getter();
  EpisodeListType.description.getter();
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000536CC((uint64_t)&v59, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  uint64_t countAndFlagsBits = ShelfIDBuilder.build()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  v41[1] = a2;
  EpisodeListSettings.listType.getter();
  EpisodeListType.shelfItemPresentation.getter();
  sub_1000536CC((uint64_t)&v60, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  EpisodeListSettings.listType.getter();
  uint64_t v26 = EpisodeListType.shelfImpressionMetricsID.getter();
  uint64_t v44 = v27;
  uint64_t v45 = v26;
  sub_1000536CC((uint64_t)&v61, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  uint64_t v28 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v43, 1, 1, v28);
  uint64_t v29 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v47, 1, 1, v29);
  uint64_t v30 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v48, 1, 1, v30);
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v47 = v23;
  uint64_t v48 = (char *)v20;
  v31(v23, v25, v20);
  uint64_t v43 = (char *)sub_1001B7768(v42);
  uint64_t v32 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v9, 1, 1, v32);
  uint64_t v58 = 0;
  long long v56 = 0u;
  long long v57 = 0u;
  swift_bridgeObjectRetain();
  ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.targetType.getter();
  EpisodeListSettings.listType.getter();
  sub_1001A5FC8((uint64_t)v62, (uint64_t)v63);
  if (v66 != 5)
  {
    if (v66 != 9
      || v63[0] != 1
      || (int8x16_t v33 = vorrq_s8(v64, v65),
          *(void *)&vorr_s8(*(int8x8_t *)v33.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL)) | v63[3] | v63[2] | v63[1]))
    {
      sub_1000536CC((uint64_t)v62, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
    }
  }
  uint64_t v34 = v52;
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  char v36 = v49;
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  sub_100054B78(&qword_1005F7838);
  uint64_t v37 = v50;
  unint64_t v38 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_10046D010;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v39 + v38, v36, v51);
  uint64_t result = (*(uint64_t (**)(char *, char *))(v55 + 8))(v25, v48);
  *uint64_t v53 = v39;
  return result;
}

uint64_t sub_10019D2C8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v59 = a3;
  uint64_t v62 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_100054B78(&qword_1005F77E0);
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  __chkstk_darwin(v4);
  long long v56 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EpisodeListSettings();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v60 = v8;
  uint64_t v61 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F77E8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ShowLockupStyle();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  EpisodeListSettings.listType.getter();
  EpisodeListSettings.hidePlayedEpisodes.getter();
  uint64_t v16 = EpisodeListType.groupedShowListType(hidePlayedEpisodes:)();
  __int16 v18 = v17;
  sub_1000536CC((uint64_t)&v65, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  if ((v18 & 0x100) != 0) {
    goto LABEL_10;
  }
  uint64_t v54 = v16;
  EpisodeListSettings.listType.getter();
  EpisodeListSettings.hidePlayedEpisodes.getter();
  EpisodeListType.groupedShowLockupStyle(hidePlayedEpisodes:)();
  sub_1000536CC((uint64_t)&v66, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100054B1C((uint64_t)v11, &qword_1005F77E8);
    goto LABEL_10;
  }
  uint64_t v52 = v13;
  uint64_t v53 = v6;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  EpisodeListSettings.sort.getter();
  uint64_t v19 = EpisodeSortType.rawValue.getter();
  uint64_t v21 = v20;
  if (v19 == EpisodeSortType.rawValue.getter() && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:
    uint64_t v24 = v54;
    uint64_t v71 = LibraryDataProvider.showsPaginatedPublisher(listType:sortBy:lockupStyle:pageSize:)(v54, v18 & 1, 0, (uint64_t)v15, v62);
    uint64_t v25 = v61;
    uint64_t v26 = a1;
    uint64_t v27 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v61, v26, v53);
    unint64_t v28 = (*(unsigned __int8 *)(v7 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v24;
    *(unsigned char *)(v29 + 24) = (v18 & 1) != 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v29 + v28, v25, v27);
    sub_100054B78(&qword_1005F7828);
    sub_100054B78((uint64_t *)&unk_1005FD1A0);
    sub_100054B78(&qword_1005F7800);
    sub_100044200(&qword_1005F7830, &qword_1005F7828);
    uint64_t v30 = PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v12);
    return v30;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v12);
  uint64_t v6 = v53;
LABEL_10:
  EpisodeListSettings.listType.getter();
  sub_1001A5FC8((uint64_t)v67, (uint64_t)&v71);
  if (v72 == 2)
  {
    uint64_t v31 = v6;
    type metadata accessor for CoreDataFetcher();
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    uint64_t v32 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v33 = static CoreDataFetcher.performAndPublishOnPodcast<A>(with:queue:block:)();
    sub_1000536CC((uint64_t)v67, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);

    v69[0] = v33;
    uint64_t v34 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v61, a1, v6);
    unint64_t v35 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v36 = (v60 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v37 = swift_allocObject();
    unint64_t v38 = v63;
    *(void *)(v37 + 16) = v63;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v37 + v35, v34, v31);
    *(void *)(v37 + v36) = v62;
    uint64_t v39 = v59;
    *(void *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v59;
    id v40 = v38;
    id v41 = v39;
    sub_100054B78(&qword_1005F7810);
    sub_100054B78(&qword_1005F77B0);
    sub_100044200(&qword_1005F7818, &qword_1005F7810);
    unint64_t v42 = v56;
    Publisher.map<A>(_:)();
    swift_release();
    swift_release();
    sub_100044200(&qword_1005F7820, &qword_1005F77E0);
    sub_100044200(&qword_1005F77C0, &qword_1005F77B0);
    uint64_t v43 = v58;
    uint64_t v30 = Publisher<>.paginatedSwitchToLatest()();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v43);
  }
  else
  {
    sub_1000536CC((uint64_t)v67, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
    EpisodeListSettings.listType.getter();
    sub_1001A5FC8((uint64_t)v68, (uint64_t)v69);
    if (v70 == 4)
    {
      uint64_t v44 = v69[0];
      uint64_t v45 = v69[1];
      uint64_t v46 = v69[6];
      uint64_t v47 = v69[7];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_10019E344(a1, v44, v45, v46, v47, v62, v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000536CC((uint64_t)v68, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
      sub_100042FDC(&qword_1005F77F0, (void (*)(uint64_t))type metadata accessor for LibraryDataProvider);
      uint64_t v64 = LibraryDataProviderProtocol.episodeListPublisher(settings:pageSize:)();
      uint64_t v48 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v61, a1, v6);
      unint64_t v49 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v50 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v50 + v49, v48, v6);
      sub_100054B78(&qword_1005F77F8);
      sub_100054B78((uint64_t *)&unk_1005F71D0);
      sub_100054B78(&qword_1005F7800);
      sub_100044200(&qword_1005F7808, &qword_1005F77F8);
      uint64_t v30 = PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)();
      swift_release();
      swift_release();
    }
  }
  return v30;
}

uint64_t sub_10019DC18@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v3 - 8);
  uint64_t v44 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v5 - 8);
  unint64_t v42 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ModernShelf.ItemPresentation();
  __chkstk_darwin(v7 - 8);
  uint64_t v39 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v15 - 8);
  __int16 v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v18 - 8);
  v36[2] = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for ModernShelf();
  uint64_t v40 = *(void *)(v43 - 8);
  uint64_t v41 = v40;
  __chkstk_darwin(v43);
  unint64_t v38 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v37 = *a1;
  ShelfIDBuilder.init(named:)();
  ShowListType.description.getter();
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ShelfIDBuilder.build()();
  swift_bridgeObjectRelease();
  EpisodeListSettings.listType.getter();
  uint64_t v21 = EpisodeListType.shelfImpressionMetricsID.getter();
  uint64_t v23 = v22;
  sub_1000536CC((uint64_t)v49, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  if (v23) {
    uint64_t v24 = v21;
  }
  else {
    uint64_t v24 = 0x7365646F73697045;
  }
  v36[1] = v24;
  uint64_t v25 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v17, 1, 1, v25);
  uint64_t v26 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v14, 1, 1, v26);
  uint64_t v27 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 1, 1, v27);
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  LOBYTE(v46) = 1;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
  sub_1001B779C(v37);
  uint64_t v28 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v42, 1, 1, v28);
  uint64_t v48 = 0;
  long long v46 = 0u;
  long long v47 = 0u;
  swift_bridgeObjectRetain();
  static MetricsTargetType.swoosh.getter();
  uint64_t v29 = v44;
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
  uint64_t v31 = v38;
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  sub_100054B78(&qword_1005F7838);
  uint64_t v32 = v41;
  unint64_t v33 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_10046D010;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v32 + 32))(v34 + v33, v31, v43);
  *uint64_t v45 = v34;
  return result;
}

id sub_10019E2B8@<X0>(id result@<X0>, unsigned char *a2@<X8>)
{
  if (result) {
    uint64_t result = [result isSerialShowTypeInFeed];
  }
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_10019E2EC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t *a5@<X8>)
{
  if (*a1 == 1) {
    uint64_t result = sub_1001A7008(a2, a3, a4);
  }
  else {
    uint64_t result = sub_10019B620(a2, a3, a4);
  }
  *a5 = result;
  return result;
}

uint64_t sub_10019E344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v61 = a7;
  uint64_t v76 = a6;
  uint64_t v58 = a5;
  uint64_t v79 = a3;
  uint64_t v80 = a2;
  uint64_t v73 = a1;
  uint64_t v72 = type metadata accessor for EpisodeListSettings();
  uint64_t v69 = *(void *)(v72 - 8);
  uint64_t v71 = *(void *)(v69 + 64);
  __chkstk_darwin(v72);
  uint64_t v68 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F7898);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  uint64_t v67 = v10;
  __chkstk_darwin(v9);
  uint64_t v65 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_1005F78A0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v74 = v12;
  uint64_t v75 = v13;
  __chkstk_darwin(v12);
  uint64_t v64 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78(&qword_1005F78A8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v77 = v15;
  uint64_t v78 = v16;
  __chkstk_darwin(v15);
  char v70 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100054B78(&qword_1005F78B0);
  uint64_t v63 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100054B78(&qword_1005F78B8);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = v23;
  uint64_t v24 = self;
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 predicateForStationUUID:v25];

  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  static OS_dispatch_queue.main.getter();
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v58;
  *(void *)(v27 + 16) = a4;
  *(void *)(v27 + 24) = v28;
  sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
  sub_10004D29C(0, (unint64_t *)&qword_1005F7410);
  swift_bridgeObjectRetain();
  id v61 = v61;
  FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
  sub_100044200(&qword_1005F78C0, &qword_1005F78B8);
  uint64_t v29 = Publisher.eraseToAnyPublisher()();
  uint64_t v59 = v29;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v30 = sub_10019A1B4();
  uint64_t v31 = sub_10019A4EC();
  uint64_t v81 = v30;
  uint64_t v82 = v31;
  sub_100054B78(&qword_1005F78C8);
  sub_100054B78(&qword_1005F7398);
  sub_100044200(&qword_1005F78D0, &qword_1005F78C8);
  sub_100044200(&qword_1005F73A8, &qword_1005F7398);
  uint64_t v32 = v60;
  Publisher.combineLatest<A, B>(_:_:)();
  sub_100044200(&qword_1005F78D8, &qword_1005F78B0);
  uint64_t v33 = v62;
  uint64_t v34 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v33);
  uint64_t v81 = v34;
  uint64_t v82 = v29;
  sub_100054B78(&qword_1005F78E0);
  sub_100044200(&qword_1005F78E8, &qword_1005F78E0);
  unint64_t v35 = v65;
  Publisher.combineLatest<A>(_:)();
  sub_100044200(&qword_1005F78F0, &qword_1005F7898);
  unint64_t v36 = v64;
  uint64_t v37 = v66;
  Publisher.removeDuplicates(by:)();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v35, v37);
  uint64_t v39 = v68;
  uint64_t v38 = v69;
  uint64_t v40 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v73, v72);
  uint64_t v41 = v38;
  unint64_t v42 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v43 = (v71 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v45 + v42, v39, v40);
  *(void *)(v45 + v43) = v76;
  id v46 = v61;
  *(void *)(v45 + v44) = v61;
  long long v47 = (void *)(v45 + ((v44 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v48 = v79;
  *long long v47 = v80;
  v47[1] = v48;
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_1001AAD6C;
  *(void *)(v49 + 24) = v45;
  id v50 = v46;
  swift_bridgeObjectRetain();
  sub_100054B78(&qword_1005F77B0);
  sub_100044200(&qword_1005F78F8, &qword_1005F78A0);
  uint64_t v51 = v70;
  uint64_t v52 = v74;
  Publisher.compactMap<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v36, v52);
  sub_100044200(&qword_1005F7900, &qword_1005F78A8);
  sub_100044200(&qword_1005F77C0, &qword_1005F77B0);
  uint64_t v53 = v77;
  uint64_t v54 = Publisher<>.paginatedSwitchToLatest()();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v51, v53);
  uint64_t v82 = v54;
  uint64_t v55 = PaginatedPublisher.paginatedBufferedMulticast()();
  swift_release();
  swift_release();
  swift_release();
  return v55;
}

uint64_t sub_10019ECC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (void *)result;
    sub_10019D2C8(a1, a2, a3);

    sub_100054B78(&qword_1005F77B0);
    sub_100054B78(&qword_1005F77B8);
    sub_100044200(&qword_1005F77C0, &qword_1005F77B0);
    PaginatedPublisher.paginatedMap<A>(_:)();
    swift_release();
    sub_100054B78(&qword_1005F77C8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    sub_100054B78(&qword_1005F77D0);
    FRPOutput.init(content:hasMore:totalCount:)();
    sub_100054B78(&qword_1005F7368);
    sub_100044200(&qword_1005F7380, &qword_1005F7368);
    uint64_t v10 = PaginatedPublisher.paginatedPrepend(_:)();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  *a4 = v10;
  return result;
}

uint64_t sub_10019EED8()
{
  return FRPOutput.map<A>(_:)();
}

void sub_10019EF48(void *a1)
{
  if (a1)
  {
    type metadata accessor for StationDetail();
    id v2 = a1;
    sub_10004BE90(v2, 0, 0, 0);
    if (v3)
    {
      Promise.resolve(_:)();
      swift_release();

      return;
    }
    id v7 = objc_allocWithZone((Class)NSError);
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 initWithDomain:v8 code:42 userInfo:0];

    id v10 = v9;
    Promise.reject(_:)();
  }
  else
  {
    id v4 = objc_allocWithZone((Class)NSError);
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v4 initWithDomain:v5 code:42 userInfo:0];

    id v10 = v6;
    Promise.reject(_:)();
  }
}

uint64_t sub_10019F0E0()
{
  return swift_release();
}

void sub_10019F204(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F77A0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004EF24([a1 containerOrder], (uint64_t)v6);
  uint64_t v7 = type metadata accessor for StationSortOrder();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100054B1C((uint64_t)v6, &qword_1005F77A0);
    Swift::Bool v9 = 0;
  }
  else
  {
    Swift::Bool v9 = StationSortOrder.supportsUsingFRP(isGrouped:)([a1 isUngroupedList] != 1);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  type metadata accessor for StationDetail();
  sub_10004BE90(a1, 0, v9, 1);
  *a2 = v10;
}

uint64_t sub_10019F36C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    *a2 = v2;
    return swift_retain();
  }
  else
  {
    uint64_t v4 = type metadata accessor for ModelError();
    sub_100042FDC(&qword_1005F7798, (void (*)(uint64_t))&type metadata accessor for ModelError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, enum case for ModelError.notInDatabase(_:), v4);
    return swift_willThrow();
  }
}

uint64_t sub_10019F438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StationSortOrder();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = StationDetail.uuid.getter();
  uint64_t v7 = v6;
  uint64_t v8 = StationDetail.objectID.getter();
  char v9 = StationDetail.grouped.getter();
  StationDetail.sortOrder.getter();
  id v10 = (id)StationDetail.predicateForEpisodes.getter();
  if (!v10) {
    id v10 = [self falsePredicate];
  }
  id v11 = v10;
  uint64_t v12 = (void *)dispatch thunk of StationDetail.episodes.getter();
  swift_release();
  if (!v12) {
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  *(void *)a1 = v16;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9 & 1;
  uint64_t v13 = (int *)type metadata accessor for LibraryDataProvider._Station(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1 + v13[7], v5, v2);
  *(void *)(a1 + v13[8]) = v11;
  *(void *)(a1 + v13[9]) = v12;
  return result;
}

uint64_t sub_10019F5BC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    char v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_10019F684(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  BOOL v5 = a1 + 5;
  char v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_10019F6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    uint64_t v4 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v5 = *v4;
      if (*v3)
      {
        if (!v5) {
          return 0;
        }
        BOOL v6 = *(v3 - 1) == *(v4 - 1) && *v3 == v5;
        if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          return 0;
        }
      }
      else if (v5)
      {
        return 0;
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_10019F798@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for StationShow();
  id v4 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)sub_10026E398(v4);
  if (!result) {
    goto LABEL_5;
  }
  if (dispatch thunk of StationShow.episodeCount.getter() < 1)
  {
    uint64_t result = swift_release();
LABEL_5:
    uint64_t v6 = 0;
    goto LABEL_6;
  }
  uint64_t v6 = dispatch thunk of StationShow.modernLockup.getter();
  uint64_t result = swift_release();
LABEL_6:
  *a2 = v6;
  return result;
}

uint64_t sub_10019F83C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v9 - 8);
  BOOL v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for StationEpisode();
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  id v14 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)sub_1002E2390(v14, v13, v12);
  if (result)
  {
    uint64_t v16 = type metadata accessor for EpisodeListSettings();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
    uint64_t v17 = type metadata accessor for SectionContext();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
    swift_retain();
    static MetricsDataConfiguration.default.getter();
    uint64_t v18 = dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
    sub_100053820((uint64_t)v19, (uint64_t)v25, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v25);
    uint64_t v24 = v20;
    sub_1000537F4((uint64_t)&v24);
    uint64_t v23 = v21;
    sub_1000537F4((uint64_t)&v23);
    sub_1000536BC(v22);
    swift_release_n();
    sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F7770);
    uint64_t result = sub_100054B1C((uint64_t)v11, (uint64_t *)&unk_1005FEA40);
  }
  else
  {
    uint64_t v18 = 0;
  }
  *a3 = v18;
  return result;
}

uint64_t sub_10019FA70@<X0>(uint64_t *a1@<X0>, int a2@<W2>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  int v38 = a2;
  uint64_t v42 = a4;
  uint64_t v5 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v5 - 8);
  uint64_t v41 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  uint64_t v39 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v9 - 8);
  BOOL v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v18 - 8);
  v34[1] = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v20 = *(void *)(v37 - 8);
  uint64_t v21 = __chkstk_darwin(v37);
  uint64_t v23 = (char *)v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  NSString v25 = (char *)v34 - v24;
  uint64_t v35 = *a1;
  ShelfIDBuilder.init(named:)();
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = ShelfIDBuilder.build()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  LOBYTE(v43) = 1;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
  uint64_t v26 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v17, 1, 1, v26);
  uint64_t v27 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v14, 1, 1, v27);
  uint64_t v28 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v11, 1, 1, v28);
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  uint64_t v29 = v37;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v23, v25, v37);
  v40(v35);
  uint64_t v30 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v39, 1, 1, v30);
  uint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  swift_bridgeObjectRetain();
  ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.targetType.getter();
  uint64_t v31 = v41;
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v29);
}

uint64_t sub_1001A0038@<X0>(uint64_t a1@<X8>)
{
  swift_retain();

  return sub_10019F438(a1);
}

uint64_t sub_1001A0074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  type metadata accessor for LibraryDataProvider._Station(0);
  int v8 = *(unsigned __int8 *)(a1 + 24);
  if (StationSortOrder.supportsUsingFRP(isGrouped:)(*(unsigned char *)(a1 + 24)))
  {
    if (v8) {
      uint64_t result = sub_1001A74AC((uint64_t *)a1, a2, a3);
    }
    else {
      uint64_t result = sub_1001A7B58((uint64_t *)a1, a2, a3);
    }
  }
  else
  {
    uint64_t result = sub_1001A813C(a1);
  }
  *a4 = result;
  return result;
}

uint64_t sub_1001A00FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F76F0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  sub_100054B78(&qword_1005F7478);
  uint64_t v7 = type metadata accessor for ModernShelf();
  sub_100044200(&qword_1005F76F8, &qword_1005F7478);
  uint64_t v11 = PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)();
  sub_100054B78(&qword_1005F7700);
  sub_100054B78(&qword_1005F7708);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 2, v7);
  FRPOutput.init(content:hasMore:totalCount:)();
  sub_100054B78(&qword_1005F7488);
  sub_100044200(&qword_1005F7498, &qword_1005F7488);
  uint64_t v8 = PaginatedPublisher.paginatedPrepend(_:)();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v8;
  return result;
}

uint64_t sub_1001A0350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ModernShelf();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 2, v4);
}

BOOL sub_1001A0420()
{
  return (static NSObject.== infix(_:_:)() & 1) == 0;
}

uint64_t sub_1001A0478(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1;
  if (a1)
  {
    if (a3)
    {
      sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
      id v5 = a3;
      id v6 = v4;
      if ((static NSObject.== infix(_:_:)() & 1) == 0)
      {

        char v7 = 0;
        uint64_t v4 = v5;
LABEL_12:

        return v7 & 1;
      }
LABEL_7:
      uint64_t v8 = EpisodeSortType.rawValue.getter();
      uint64_t v10 = v9;
      if (v8 == EpisodeSortType.rawValue.getter() && v10 == v11) {
        char v7 = 1;
      }
      else {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_12;
    }
  }
  else if (!a3)
  {
    goto LABEL_7;
  }
  char v7 = 0;
  return v7 & 1;
}

uint64_t sub_1001A0588(uint64_t a1, void **a2)
{
  return sub_1001A0478(*(void **)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

uint64_t sub_1001A05A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v44 = a7;
  id v45 = a5;
  uint64_t v42 = a6;
  uint64_t v48 = a4;
  uint64_t v9 = type metadata accessor for EpisodeListSettings();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005F7340);
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  __chkstk_darwin(v12);
  long long v43 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  unint64_t v49 = 0xD000000000000015;
  unint64_t v50 = 0x80000001004D39A0;
  EpisodeListSettings.listType.getter();
  uint64_t v14 = EpisodeListType.description.getter();
  uint64_t v16 = v15;
  sub_1000536CC((uint64_t)v51, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  v17._uint64_t countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  unint64_t v40 = v50;
  unint64_t v41 = v49;
  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v18;
  if (a1) {
    id v37 = a1;
  }
  else {
    id v37 = [self falsePredicate];
  }
  id v19 = a1;
  void v33[2] = EpisodeSortType.descriptors.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  v33[1] = static OS_dispatch_queue.main.getter();
  unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v36((char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v34 = a3;
  uint64_t v35 = v20 | 7;
  uint64_t v21 = v9;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v44;
  *(void *)(v22 + 16) = v42;
  *(void *)(v22 + 24) = v23;
  uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v24(v22 + ((v20 + 32) & ~v20), (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
  type metadata accessor for LibraryEpisodeLockup();
  uint64_t v42 = v11;
  NSString v25 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_100603220);
  swift_bridgeObjectRetain();
  id v26 = v45;
  uint64_t v27 = v43;
  FetchedResultsListPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
  sub_100044200(&qword_1005F7350, (uint64_t *)&unk_1005F7340);
  uint64_t v28 = v47;
  uint64_t v29 = PaginatedPublisher.eraseToAnyPaginatedPublisher()();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v28);
  unint64_t v49 = v29;
  v36(v25, v34, v21);
  uint64_t v30 = swift_allocObject();
  v24(v30 + ((v20 + 16) & ~v20), v25, v21);
  sub_100054B78(&qword_1005F77F8);
  sub_100054B78((uint64_t *)&unk_1005F71D0);
  sub_100054B78(&qword_1005F7800);
  sub_100044200(&qword_1005F7808, &qword_1005F77F8);
  uint64_t v31 = PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)();
  swift_release();
  swift_release();
  return v31;
}

uint64_t sub_1001A0AB4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for StationEpisode();
  id v16 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)sub_1002E2390(v16, a2, a3);
  if (result)
  {
    uint64_t v18 = type metadata accessor for EpisodeListSettings();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16))(v15, a4, v18);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
    swift_retain();
    EpisodeListSettings.sectionContext.getter();
    static MetricsDataConfiguration.default.getter();
    uint64_t v20 = dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
    sub_100053820((uint64_t)v21, (uint64_t)v27, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v27);
    uint64_t v26 = v22;
    sub_1000537F4((uint64_t)&v26);
    uint64_t v25 = v23;
    sub_1000537F4((uint64_t)&v25);
    sub_1000536BC(v24);
    swift_release_n();
    sub_100054B1C((uint64_t)v12, (uint64_t *)&unk_1005F7770);
    uint64_t result = sub_100054B1C((uint64_t)v15, (uint64_t *)&unk_1005FEA40);
  }
  else
  {
    uint64_t v20 = 0;
  }
  *a5 = v20;
  return result;
}

uint64_t sub_1001A0D08()
{
  uint64_t v0 = LegacyLockup.shelfUniqueId.getter();
  uint64_t v2 = v1;
  if (v0 == LegacyLockup.shelfUniqueId.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_1001A0DA0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v49 = a3;
  uint64_t v5 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v5 - 8);
  uint64_t v48 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  unint64_t v50 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v44 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v11 - 8);
  long long v43 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v13 - 8);
  uint64_t v42 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v15 - 8);
  Swift::String v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ModernShelf();
  uint64_t v46 = *(void *)(v18 - 8);
  uint64_t v47 = v18;
  __chkstk_darwin(v18);
  id v45 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v51 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v39 - v24;
  unint64_t v40 = (char *)*a1;
  ShelfIDBuilder.init(named:)();
  v39[0] = a2;
  EpisodeListSettings.listType.getter();
  EpisodeListType.description.getter();
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000536CC((uint64_t)&v55, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  uint64_t countAndFlagsBits = ShelfIDBuilder.build()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  EpisodeListSettings.listType.getter();
  EpisodeListType.shelfItemPresentation.getter();
  sub_1000536CC((uint64_t)&v56, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  uint64_t v26 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v42, 1, 1, v26);
  uint64_t v27 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v43, 1, 1, v27);
  uint64_t v28 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v44, 1, 1, v28);
  long long v43 = v17;
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  uint64_t v42 = v23;
  uint64_t v44 = (char *)v20;
  v29(v23, v25, v20);
  v39[1] = sub_1001B7768((unint64_t)v40);
  uint64_t v30 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v50, 1, 1, v30);
  uint64_t v54 = 0;
  long long v52 = 0u;
  long long v53 = 0u;
  EpisodeListSettings.listType.getter();
  EpisodeListType.shelfImpressionMetricsID.getter();
  sub_1000536CC((uint64_t)&v57, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  swift_bridgeObjectRetain();
  unint64_t v40 = v25;
  ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.targetType.getter();
  EpisodeListSettings.listType.getter();
  sub_1001A5FC8((uint64_t)v58, (uint64_t)v59);
  if (v62 != 5)
  {
    if (v62 != 9
      || v59[0] != 1
      || (int8x16_t v31 = vorrq_s8(v60, v61),
          *(void *)&vorr_s8(*(int8x8_t *)v31.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v31, v31, 8uLL)) | v59[3] | v59[2] | v59[1]))
    {
      sub_1000536CC((uint64_t)v58, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
    }
  }
  uint64_t v32 = v48;
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
  uint64_t v34 = v45;
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  sub_100054B78(&qword_1005F7838);
  uint64_t v35 = v46;
  unint64_t v36 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_10046D010;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v37 + v36, v34, v47);
  uint64_t result = (*(uint64_t (**)(char *, char *))(v51 + 8))(v40, v44);
  *unint64_t v49 = v37;
  return result;
}

uint64_t sub_1001A15B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v222 = a3;
  uint64_t v5 = type metadata accessor for PageID();
  __chkstk_darwin(v5 - 8);
  char v219 = (char *)&v207 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = type metadata accessor for GroupedSearchResultsPage();
  uint64_t v221 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  v220 = (char *)&v207 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v229);
  v230 = (char *)&v207 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScalarDictionary();
  uint64_t v242 = *(void *)(v9 - 8);
  uint64_t v243 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  v236 = (char *)&v207 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v240 = (char *)&v207 - v12;
  uint64_t v241 = type metadata accessor for MetricsPageFields();
  uint64_t v239 = *(void *)(v241 - 8);
  __chkstk_darwin(v241);
  v238 = (char *)&v207 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PageMetrics();
  __chkstk_darwin(v14 - 8);
  v237 = (char *)&v207 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v16 - 8);
  v232 = (char *)&v207 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78(&qword_1005F76A8);
  __chkstk_darwin(v18 - 8);
  v245 = (char *)&v207 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for GroupedSearchResultsPage.Result();
  uint64_t v227 = *(void *)(v20 - 8);
  uint64_t v228 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  objc_super v215 = (char *)&v207 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  objc_super v214 = (char *)&v207 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  objc_super v213 = (char *)&v207 - v26;
  __chkstk_darwin(v25);
  objc_super v212 = (char *)&v207 - v27;
  uint64_t v28 = type metadata accessor for ShowLockupStyle();
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v207 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for UUID();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v207 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v35 = [objc_allocWithZone((Class)MTTextQuery) init];
  [v35 setFetchLimit:100];
  uint64_t v247 = a1;
  NSString v36 = String._bridgeToObjectiveC()();
  [v35 runQueryWithText:v36];

  UUID.init()();
  UUID.uuidString.getter();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v32 + 8);
  unint64_t v37 = v32 + 8;
  v38(v34, v31);
  Swift::String v39 = String.lowercased()();
  swift_bridgeObjectRelease();
  Swift::String v275 = v39;
  *(void *)&long long v257 = 45;
  *((void *)&v257 + 1) = 0xE100000000000000;
  *(void *)&long long v253 = 0;
  *((void *)&v253 + 1) = 0xE000000000000000;
  sub_1001AA530();
  uint64_t v234 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  v235 = v40;
  swift_bridgeObjectRelease();
  id v231 = v35;
  id v41 = [v35 podcastResults];
  if (!v41)
  {
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v42 = v41;
  sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
  unint64_t object = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
  *(void *)&long long v257 = _swiftEmptyArrayStorage;
  if (object >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v45 = *(void *)((object & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v46 = &v257;
  uint64_t v246 = a2;
  if (v45)
  {
    type metadata accessor for LibraryShowLockup();
    Swift::String v275 = (Swift::String)0;
    long long v276 = 0u;
    long long v277 = 0u;
    long long v278 = 0u;
    unint64_t v47 = 255;
    char v279 = -1;
    if (v45 < 1)
    {
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    uint64_t v48 = 0;
    unint64_t v37 = object & 0xC000000000000001;
    do
    {
      if (v37) {
        id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v49 = *(id *)(object + 8 * v48 + 32);
      }
      id v50 = v49;
      ShowLockupStyle.init(includesOfferButton:defaultSubtitle:unfollowedSubtitle:groupedEpisodesListType:)();
      static MetricsDataConfiguration.default.getter();
      uint64_t v51 = sub_1001D40F4(v50, (uint64_t)v30, (uint64_t)&v248);

      if (v51)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v257 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v257 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v48;
    }
    while (v45 != v48);
    swift_bridgeObjectRelease();
    unint64_t v52 = v257;
    unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v52 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if ((v52 & 0x8000000000000000) != 0 || (v52 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v69 = swift_bridgeObjectRetain();
    uint64_t v53 = (uint64_t)sub_10025BF8C(v69);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v53 = v52 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)&long long v257 = v53;
  swift_bridgeObjectRetain();
  sub_1001AA188((uint64_t *)&v257);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  unint64_t object = v257;
  uint64_t v54 = (long long *)[v231 episodeResults];
  if (!v54) {
    goto LABEL_125;
  }
  uint64_t v46 = v54;
  unint64_t v244 = object;
  sub_10004D29C(0, (unint64_t *)&qword_100603220);
  uint64_t v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v253 = _swiftEmptyArrayStorage;
  if ((unint64_t)v55 >> 62)
  {
    if (v55 < 0) {
      uint64_t v46 = (long long *)v55;
    }
    else {
      uint64_t v46 = (long long *)(v55 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
    if (v56) {
      goto LABEL_23;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    unint64_t v60 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_41;
  }
  uint64_t v56 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v56) {
    goto LABEL_40;
  }
LABEL_23:
  type metadata accessor for Episode();
  if (v56 < 1)
  {
LABEL_121:
    __break(1u);
    goto LABEL_122;
  }
  uint64_t v57 = 0;
  unint64_t v37 = v55 & 0xC000000000000001;
  do
  {
    if (v37) {
      id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v58 = *(id *)(v55 + 8 * v57 + 32);
    }
    uint64_t v259 = 0;
    long long v257 = 0u;
    long long v258 = 0u;
    id v59 = v58;
    if (Episode.init(from:clickAction:wantsListenNowReason:)(v59, (uint64_t)&v257, 0))
    {
      dispatch thunk of Episode.presentDetailsLockup.getter();

      swift_release();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v253 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v253 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
    ++v57;
  }
  while (v56 != v57);
  swift_bridgeObjectRelease();
  unint64_t v60 = v253;
  unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_41:
  swift_bridgeObjectRelease();
  if ((v60 & 0x8000000000000000) != 0 || (v60 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v203 = swift_bridgeObjectRetain();
    uint64_t v61 = (uint64_t)sub_10025BF8C(v203);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v61 = v60 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)&long long v257 = v61;
  swift_bridgeObjectRetain();
  sub_1001AA188((uint64_t *)&v257);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  unint64_t object = v257;
  char v62 = (long long *)[v231 channelResults];
  if (!v62) {
    goto LABEL_126;
  }
  uint64_t v46 = v62;
  id v218 = (id)object;
  sub_10004D29C(0, &qword_1005F7240);
  uint64_t v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v257 = _swiftEmptyArrayStorage;
  if ((unint64_t)v63 >> 62)
  {
    if (v63 < 0) {
      uint64_t v46 = (long long *)v63;
    }
    else {
      uint64_t v46 = (long long *)(v63 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
    if (v64) {
      goto LABEL_47;
    }
LABEL_61:
    swift_bridgeObjectRelease();
    unint64_t v68 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_62;
  }
  uint64_t v64 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v64) {
    goto LABEL_61;
  }
LABEL_47:
  type metadata accessor for LegacyChannelLockup();
  if (v64 < 1)
  {
LABEL_122:
    __break(1u);
LABEL_123:
    unint64_t object = sub_1002EEF9C(v47 > 1, (int64_t)v46, 1, object);
    goto LABEL_79;
  }
  for (uint64_t i = 0; i != v64; ++i)
  {
    if ((v63 & 0xC000000000000001) != 0) {
      id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v66 = *(id *)(v63 + 8 * i + 32);
    }
    id v67 = v66;
    static MetricsDataConfiguration.default.getter();
    sub_1003B2224(v67, 1, (uint64_t)&v249);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v257 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v257 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  swift_bridgeObjectRelease();
  unint64_t v68 = v257;
LABEL_62:
  swift_bridgeObjectRelease();
  if ((v68 & 0x8000000000000000) != 0 || (v68 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v204 = swift_bridgeObjectRetain();
    uint64_t v70 = (uint64_t)sub_10025BF8C(v204);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v70 = v68 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)&long long v257 = v70;
  swift_bridgeObjectRetain();
  sub_1001AA188((uint64_t *)&v257);
  uint64_t v217 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  unint64_t v216 = v257;
  uint64_t v46 = (long long *)type metadata accessor for Shelf();
  uint64_t v71 = self;
  id v72 = [v71 mainBundle];
  v73._uint64_t countAndFlagsBits = 0xD000000000000014;
  v280._unint64_t object = (void *)0xE000000000000000;
  v73._unint64_t object = (void *)0x80000001004D3E80;
  v74._uint64_t countAndFlagsBits = 0;
  v74._unint64_t object = (void *)0xE000000000000000;
  v280._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v73, (Swift::String_optional)0, (NSBundle)v72, v74, v280);

  uint64_t v75 = v244;
  sub_1001B7B10(v244);
  id v226 = (id)Shelf.__allocating_init(contentType:seeAllContentType:title:allItems:maxItems:isHorizontal:preferredNumberOfRows:horizontalLayoutFollowsVerticalLayoutRules:)();
  id v76 = [v71 mainBundle];
  v281._unint64_t object = (void *)0xE000000000000000;
  v77._unint64_t object = (void *)0x80000001004D3EA0;
  v77._uint64_t countAndFlagsBits = 0xD000000000000017;
  v78._uint64_t countAndFlagsBits = 0;
  v78._unint64_t object = (void *)0xE000000000000000;
  v281._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v77, (Swift::String_optional)0, (NSBundle)v76, v78, v281);

  id v79 = v218;
  sub_1001B7B10((unint64_t)v218);
  id v225 = (id)Shelf.__allocating_init(contentType:seeAllContentType:title:allItems:maxItems:isHorizontal:preferredNumberOfRows:horizontalLayoutFollowsVerticalLayoutRules:)();
  id v80 = [v71 mainBundle];
  v282._unint64_t object = (void *)0xE000000000000000;
  v81._unint64_t object = (void *)0x80000001004D3EC0;
  v81._uint64_t countAndFlagsBits = 0xD000000000000017;
  v82._uint64_t countAndFlagsBits = 0;
  v82._unint64_t object = (void *)0xE000000000000000;
  v282._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v81, (Swift::String_optional)0, (NSBundle)v80, v82, v282);

  unint64_t v83 = v216;
  sub_1001B7B10(v216);
  id v224 = (id)Shelf.__allocating_init(contentType:seeAllContentType:title:allItems:maxItems:isHorizontal:preferredNumberOfRows:horizontalLayoutFollowsVerticalLayoutRules:)();
  sub_100054B78(&qword_1005F76B8);
  uint64_t v84 = swift_allocObject();
  long long v233 = xmmword_10046D030;
  *(_OWORD *)(v84 + 16) = xmmword_10046D030;
  *(void *)(v84 + 32) = v83;
  *(void *)(v84 + 40) = v79;
  unint64_t v85 = (unint64_t)sub_1001A3E18(v84, 50, v75);
  swift_release();
  swift_setDeallocating();
  sub_100054B78(&qword_1005F76C0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if ((v85 & 0x8000000000000000) != 0 || (v85 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v205 = swift_bridgeObjectRetain();
    uint64_t v86 = (uint64_t)sub_10025BF8C(v205);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v86 = v85 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v87 = v217;
  *(void *)&long long v257 = v86;
  swift_bridgeObjectRetain();
  sub_1001AA188((uint64_t *)&v257);
  if (v87) {
    goto LABEL_127;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  unint64_t v88 = v257;
  id v89 = [v71 mainBundle];
  v90._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v283._unint64_t object = (void *)0xE000000000000000;
  v90._unint64_t object = (void *)0x80000001004D3EE0;
  v91._uint64_t countAndFlagsBits = 0;
  v91._unint64_t object = (void *)0xE000000000000000;
  v283._uint64_t countAndFlagsBits = 0;
  unint64_t object = (unint64_t)NSLocalizedString(_:tableName:bundle:value:comment:)(v90, (Swift::String_optional)0, (NSBundle)v89, v91, v283)._object;

  unint64_t v44 = sub_1001B7B10(v88);
  if ((v88 & 0x8000000000000000) == 0 && (v88 & 0x4000000000000000) == 0)
  {
    swift_release();
    goto LABEL_72;
  }
  swift_bridgeObjectRetain();
  uint64_t v206 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t v37 = 2;
  swift_release_n();
  if (v206 < 0)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_120;
  }
LABEL_72:
  v92 = (void *)Shelf.__allocating_init(contentType:seeAllContentType:title:allItems:maxItems:isHorizontal:preferredNumberOfRows:horizontalLayoutFollowsVerticalLayoutRules:)();
  uint64_t v93 = *(void *)(Shelf.items.getter() + 16);
  swift_bridgeObjectRelease();
  uint64_t v94 = &xmmword_10046D000;
  id v218 = v92;
  if (!v93)
  {
    unint64_t object = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v116 = v246;
    id v115 = v226;
    goto LABEL_81;
  }
  unint64_t v244 = static SearchResultsGroupID.topResults.getter();
  uint64_t v217 = v95;
  uint64_t v96 = Shelf.title.getter();
  if (v97) {
    unint64_t v98 = v96;
  }
  else {
    unint64_t v98 = 0;
  }
  unint64_t v216 = v98;
  unint64_t v99 = 0xE000000000000000;
  if (v97) {
    unint64_t v99 = v97;
  }
  unint64_t v211 = v99;
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = xmmword_10046D060;
  *(void *)(v100 + 32) = v92;
  *(void *)&long long v257 = v100;
  specialized Array._endMutation()();
  uint64_t v210 = v257;
  id v101 = v92;
  uint64_t v102 = Shelf.title.getter();
  uint64_t v208 = v103;
  uint64_t v209 = v102;
  uint64_t v104 = sub_100054B78((uint64_t *)&unk_1005F76E0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v245, 1, 1, v104);
  uint64_t v105 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v232, 1, 1, v105);
  static MetricsPageType.searchResults.getter();
  uint64_t v106 = static MetricsField<>.searchTerm.getter();
  uint64_t v108 = v107;
  *((void *)&v258 + 1) = &type metadata for String;
  *(void *)&long long v257 = v247;
  *((void *)&v257 + 1) = v246;
  sub_10004D384(&v257, &v253);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v252[0] = &_swiftEmptyDictionarySingleton;
  sub_1001A46EC(&v253, v106, v108, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v110 = v238;
  MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)();
  objc_super v111 = v240;
  ScalarDictionary.init()();
  static MetricsDataConfiguration.default.getter();
  sub_100054B78(&qword_1005F76C8);
  type metadata accessor for PageMetrics.Instruction();
  *(_OWORD *)(swift_allocObject() + 16) = v233;
  static PageMetrics.Instruction.page(fields:configuration:)();
  static PageMetrics.Instruction.impressions(fields:configuration:)();
  MetricsPageFields.metricsFields.getter();
  uint64_t v113 = v242;
  uint64_t v112 = v243;
  (*(void (**)(char *, char *, uint64_t))(v242 + 16))(v236, v111, v243);
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)();
  sub_100053820((uint64_t)v250, (uint64_t)v274, (uint64_t *)&unk_1005F76D0);
  sub_100053884((uint64_t)v274);
  uint64_t v273 = v250[2];
  sub_1000537F4((uint64_t)&v273);
  uint64_t v272 = v250[3];
  sub_1000537F4((uint64_t)&v272);
  sub_1000536BC(v250[4]);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v111, v112);
  (*(void (**)(char *, uint64_t))(v239 + 8))(v110, v241);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for Page();
  swift_allocObject();
  LOBYTE(v257) = 1;
  Page.init(shelves:title:selectedFilterActionId:filterActions:headerBackgroundColor:headerButtonItems:presentationOptions:pageContext:nextPageIntent:isIncomplete:isExplicit:uber:showAdamId:channelAdamId:mapiInLibrary:pageMetrics:)();
  unint64_t v37 = (unint64_t)v212;
  GroupedSearchResultsPage.Result.init(id:name:page:)();
  unint64_t object = sub_1002EEF9C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v44 = *(void *)(object + 16);
  unint64_t v47 = *(void *)(object + 24);
  uint64_t v46 = (long long *)(v44 + 1);
  if (v44 >= v47 >> 1) {
    goto LABEL_123;
  }
LABEL_79:
  id v115 = v226;
  uint64_t v114 = v227;
  *(void *)(object + 16) = v46;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v114 + 32))(object+ ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))+ *(void *)(v114 + 72) * v44, v37, v228);
  uint64_t v116 = v246;
  uint64_t v94 = &xmmword_10046D000;
LABEL_81:
  uint64_t v117 = *(void *)(Shelf.items.getter() + 16);
  swift_bridgeObjectRelease();
  if (v117)
  {
    uint64_t v118 = static SearchResultsGroupID.shows.getter();
    unint64_t v216 = v119;
    uint64_t v217 = v118;
    uint64_t v120 = Shelf.title.getter();
    if (v121) {
      uint64_t v122 = (char *)v120;
    }
    else {
      uint64_t v122 = 0;
    }
    unint64_t v123 = 0xE000000000000000;
    if (v121) {
      unint64_t v123 = v121;
    }
    unint64_t v211 = v123;
    objc_super v212 = v122;
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v124 = swift_allocObject();
    *(_OWORD *)(v124 + 16) = v94[6];
    *(void *)(v124 + 32) = v115;
    *(void *)&long long v257 = v124;
    specialized Array._endMutation()();
    uint64_t v210 = v257;
    id v125 = v115;
    uint64_t v126 = Shelf.title.getter();
    uint64_t v208 = v127;
    uint64_t v209 = v126;
    uint64_t v128 = sub_100054B78((uint64_t *)&unk_1005F76E0);
    uint64_t v129 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56);
    unint64_t v244 = object;
    v129(v245, 1, 1, v128);
    uint64_t v130 = type metadata accessor for ArtworkModel();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v232, 1, 1, v130);
    static MetricsPageType.searchResults.getter();
    uint64_t v131 = static MetricsField<>.searchTerm.getter();
    uint64_t v133 = v132;
    *((void *)&v258 + 1) = &type metadata for String;
    *(void *)&long long v257 = v247;
    *((void *)&v257 + 1) = v116;
    sub_10004D384(&v257, &v253);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v134 = swift_isUniquelyReferenced_nonNull_native();
    v252[0] = &_swiftEmptyDictionarySingleton;
    sub_1001A46EC(&v253, v131, v133, v134);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v135 = v238;
    MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)();
    uint64_t v136 = v240;
    ScalarDictionary.init()();
    static MetricsDataConfiguration.default.getter();
    sub_100054B78(&qword_1005F76C8);
    type metadata accessor for PageMetrics.Instruction();
    *(_OWORD *)(swift_allocObject() + 16) = v233;
    static PageMetrics.Instruction.page(fields:configuration:)();
    static PageMetrics.Instruction.impressions(fields:configuration:)();
    MetricsPageFields.metricsFields.getter();
    uint64_t v138 = v242;
    uint64_t v137 = v243;
    (*(void (**)(char *, char *, uint64_t))(v242 + 16))(v236, v136, v243);
    PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)();
    sub_100053820((uint64_t)v251, (uint64_t)v271, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v271);
    uint64_t v270 = v251[2];
    sub_1000537F4((uint64_t)&v270);
    uint64_t v269 = v251[3];
    sub_1000537F4((uint64_t)&v269);
    sub_1000536BC(v251[4]);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v136, v137);
    (*(void (**)(char *, uint64_t))(v239 + 8))(v135, v241);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for Page();
    swift_allocObject();
    LOBYTE(v257) = 1;
    unint64_t object = v244;
    Page.init(shelves:title:selectedFilterActionId:filterActions:headerBackgroundColor:headerButtonItems:presentationOptions:pageContext:nextPageIntent:isIncomplete:isExplicit:uber:showAdamId:channelAdamId:mapiInLibrary:pageMetrics:)();
    uint64_t v139 = v213;
    GroupedSearchResultsPage.Result.init(id:name:page:)();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t object = sub_1002EEF9C(0, *(void *)(object + 16) + 1, 1, object);
    }
    unint64_t v141 = *(void *)(object + 16);
    unint64_t v140 = *(void *)(object + 24);
    uint64_t v116 = v246;
    if (v141 >= v140 >> 1) {
      unint64_t object = sub_1002EEF9C(v140 > 1, v141 + 1, 1, object);
    }
    *(void *)(object + 16) = v141 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v227 + 32))(object+ ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80))+ *(void *)(v227 + 72) * v141, v139, v228);
    uint64_t v94 = &xmmword_10046D000;
  }
  id v142 = v225;
  uint64_t v143 = *(void *)(Shelf.items.getter() + 16);
  swift_bridgeObjectRelease();
  if (v143)
  {
    uint64_t v144 = static SearchResultsGroupID.episodes.getter();
    unint64_t v216 = v145;
    uint64_t v217 = v144;
    uint64_t v146 = Shelf.title.getter();
    if (v147) {
      uint64_t v148 = (char *)v146;
    }
    else {
      uint64_t v148 = 0;
    }
    unint64_t v149 = 0xE000000000000000;
    if (v147) {
      unint64_t v149 = v147;
    }
    objc_super v212 = (char *)v149;
    objc_super v213 = v148;
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v150 = swift_allocObject();
    *(_OWORD *)(v150 + 16) = v94[6];
    *(void *)(v150 + 32) = v142;
    *(void *)&long long v257 = v150;
    specialized Array._endMutation()();
    unint64_t v211 = v257;
    id v151 = v142;
    uint64_t v152 = Shelf.title.getter();
    uint64_t v209 = v153;
    uint64_t v210 = v152;
    uint64_t v154 = sub_100054B78((uint64_t *)&unk_1005F76E0);
    uint64_t v155 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56);
    unint64_t v244 = object;
    v155(v245, 1, 1, v154);
    uint64_t v156 = type metadata accessor for ArtworkModel();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 56))(v232, 1, 1, v156);
    static MetricsPageType.searchResults.getter();
    uint64_t v157 = static MetricsField<>.searchTerm.getter();
    uint64_t v159 = v158;
    *((void *)&v258 + 1) = &type metadata for String;
    *(void *)&long long v257 = v247;
    *((void *)&v257 + 1) = v116;
    sub_10004D384(&v257, &v253);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v160 = swift_isUniquelyReferenced_nonNull_native();
    v252[0] = &_swiftEmptyDictionarySingleton;
    sub_1001A46EC(&v253, v157, v159, v160);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v161 = v238;
    MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)();
    uint64_t v162 = v240;
    ScalarDictionary.init()();
    static MetricsDataConfiguration.default.getter();
    sub_100054B78(&qword_1005F76C8);
    type metadata accessor for PageMetrics.Instruction();
    *(_OWORD *)(swift_allocObject() + 16) = v233;
    static PageMetrics.Instruction.page(fields:configuration:)();
    static PageMetrics.Instruction.impressions(fields:configuration:)();
    MetricsPageFields.metricsFields.getter();
    uint64_t v164 = v242;
    uint64_t v163 = v243;
    (*(void (**)(char *, char *, uint64_t))(v242 + 16))(v236, v162, v243);
    PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)();
    sub_100053820((uint64_t)v252, (uint64_t)v268, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v268);
    uint64_t v267 = v252[2];
    sub_1000537F4((uint64_t)&v267);
    uint64_t v266 = v252[3];
    sub_1000537F4((uint64_t)&v266);
    sub_1000536BC(v252[4]);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v162, v163);
    (*(void (**)(char *, uint64_t))(v239 + 8))(v161, v241);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for Page();
    swift_allocObject();
    LOBYTE(v257) = 1;
    unint64_t object = v244;
    Page.init(shelves:title:selectedFilterActionId:filterActions:headerBackgroundColor:headerButtonItems:presentationOptions:pageContext:nextPageIntent:isIncomplete:isExplicit:uber:showAdamId:channelAdamId:mapiInLibrary:pageMetrics:)();
    objc_super v165 = v214;
    GroupedSearchResultsPage.Result.init(id:name:page:)();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t object = sub_1002EEF9C(0, *(void *)(object + 16) + 1, 1, object);
    }
    unint64_t v167 = *(void *)(object + 16);
    unint64_t v166 = *(void *)(object + 24);
    uint64_t v116 = v246;
    if (v167 >= v166 >> 1) {
      unint64_t object = sub_1002EEF9C(v166 > 1, v167 + 1, 1, object);
    }
    *(void *)(object + 16) = v167 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v227 + 32))(object+ ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80))+ *(void *)(v227 + 72) * v167, v165, v228);
    uint64_t v94 = &xmmword_10046D000;
  }
  id v168 = v224;
  uint64_t v169 = *(void *)(Shelf.items.getter() + 16);
  swift_bridgeObjectRelease();
  unint64_t v244 = object;
  if (v169)
  {
    uint64_t v246 = static SearchResultsGroupID.channels.getter();
    uint64_t v217 = v170;
    uint64_t v171 = Shelf.title.getter();
    if (v172) {
      unint64_t v173 = v171;
    }
    else {
      unint64_t v173 = 0;
    }
    unint64_t v216 = v173;
    unint64_t v174 = 0xE000000000000000;
    if (v172) {
      unint64_t v174 = v172;
    }
    objc_super v214 = (char *)v174;
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v175 = swift_allocObject();
    *(_OWORD *)(v175 + 16) = v94[6];
    *(void *)(v175 + 32) = v168;
    *(void *)&long long v257 = v175;
    specialized Array._endMutation()();
    objc_super v213 = (char *)v257;
    id v176 = v168;
    uint64_t v177 = Shelf.title.getter();
    unint64_t v211 = v178;
    objc_super v212 = (char *)v177;
    uint64_t v179 = sub_100054B78((uint64_t *)&unk_1005F76E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v179 - 8) + 56))(v245, 1, 1, v179);
    uint64_t v180 = type metadata accessor for ArtworkModel();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v180 - 8) + 56))(v232, 1, 1, v180);
    static MetricsPageType.searchResults.getter();
    uint64_t v181 = static MetricsField<>.searchTerm.getter();
    uint64_t v183 = v182;
    *((void *)&v258 + 1) = &type metadata for String;
    *(void *)&long long v257 = v247;
    *((void *)&v257 + 1) = v116;
    sub_10004D384(&v257, &v253);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v184 = swift_isUniquelyReferenced_nonNull_native();
    v265[0] = &_swiftEmptyDictionarySingleton;
    sub_1001A46EC(&v253, v181, v183, v184);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    id v185 = v238;
    MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)();
    v186 = v240;
    ScalarDictionary.init()();
    static MetricsDataConfiguration.default.getter();
    sub_100054B78(&qword_1005F76C8);
    type metadata accessor for PageMetrics.Instruction();
    *(_OWORD *)(swift_allocObject() + 16) = v233;
    static PageMetrics.Instruction.page(fields:configuration:)();
    static PageMetrics.Instruction.impressions(fields:configuration:)();
    MetricsPageFields.metricsFields.getter();
    uint64_t v188 = v242;
    uint64_t v187 = v243;
    (*(void (**)(char *, char *, uint64_t))(v242 + 16))(v236, v186, v243);
    PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)();
    sub_100053820((uint64_t)&v253, (uint64_t)v265, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v265);
    uint64_t v264 = v254;
    sub_1000537F4((uint64_t)&v264);
    uint64_t v263 = v255;
    sub_1000537F4((uint64_t)&v263);
    sub_1000536BC(v256);
    (*(void (**)(char *, uint64_t))(v188 + 8))(v186, v187);
    (*(void (**)(char *, uint64_t))(v239 + 8))(v185, v241);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for Page();
    swift_allocObject();
    LOBYTE(v257) = 1;
    unint64_t v189 = v244;
    Page.init(shelves:title:selectedFilterActionId:filterActions:headerBackgroundColor:headerButtonItems:presentationOptions:pageContext:nextPageIntent:isIncomplete:isExplicit:uber:showAdamId:channelAdamId:mapiInLibrary:pageMetrics:)();
    uint64_t v190 = v215;
    GroupedSearchResultsPage.Result.init(id:name:page:)();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v189 = sub_1002EEF9C(0, *(void *)(v189 + 16) + 1, 1, v189);
    }
    unint64_t v192 = *(void *)(v189 + 16);
    unint64_t v191 = *(void *)(v189 + 24);
    if (v192 >= v191 >> 1) {
      unint64_t v189 = sub_1002EEF9C(v191 > 1, v192 + 1, 1, v189);
    }
    unint64_t v244 = v189;
    *(void *)(v189 + 16) = v192 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v227 + 32))(v189+ ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80))+ *(void *)(v227 + 72) * v192, v190, v228);
  }
  *(void *)&long long v257 = static MetricsPageType.searchResults.getter();
  *((void *)&v257 + 1) = v193;
  uint64_t v194 = v235;
  swift_bridgeObjectRetain();
  v195._uint64_t countAndFlagsBits = 95;
  v195._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v195);
  v196._uint64_t countAndFlagsBits = v234;
  v196._unint64_t object = v194;
  String.append(_:)(v196);
  swift_bridgeObjectRelease();
  PageID.init(with:)();
  static MetricsPageType.searchResults.getter();
  uint64_t v197 = v238;
  MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)();
  uint64_t v198 = v240;
  ScalarDictionary.init()();
  static MetricsDataConfiguration.default.getter();
  sub_100054B78(&qword_1005F76C8);
  type metadata accessor for PageMetrics.Instruction();
  *(_OWORD *)(swift_allocObject() + 16) = v233;
  static PageMetrics.Instruction.page(fields:configuration:)();
  static PageMetrics.Instruction.impressions(fields:configuration:)();
  MetricsPageFields.metricsFields.getter();
  uint64_t v200 = v242;
  uint64_t v199 = v243;
  (*(void (**)(char *, char *, uint64_t))(v242 + 16))(v236, v198, v243);
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)();
  sub_100053820((uint64_t)&v257, (uint64_t)v262, (uint64_t *)&unk_1005F76D0);
  sub_100053884((uint64_t)v262);
  uint64_t v261 = v258;
  sub_1000537F4((uint64_t)&v261);
  uint64_t v260 = *((void *)&v258 + 1);
  sub_1000537F4((uint64_t)&v260);
  sub_1000536BC(v259);
  (*(void (**)(char *, uint64_t))(v200 + 8))(v198, v199);
  (*(void (**)(char *, uint64_t))(v239 + 8))(v197, v241);
  uint64_t v201 = v220;
  GroupedSearchResultsPage.init(id:results:pageMetrics:)();
  Promise.resolve(_:)();

  return (*(uint64_t (**)(char *, uint64_t))(v221 + 8))(v201, v223);
}

BOOL sub_1001A3BF0()
{
  sub_1001AA530();
  uint64_t v0 = StringProtocol.localizedLowercase.getter();
  uint64_t v2 = v1;
  LegacyLockup.title.getter();
  if (!v3
    || (StringProtocol.localizedLowercase.getter(),
        swift_bridgeObjectRelease(),
        v4._uint64_t countAndFlagsBits = v0,
        v4._unint64_t object = v2,
        Swift::Bool v5 = String.hasPrefix(_:)(v4),
        swift_bridgeObjectRelease(),
        !v5))
  {
    LegacyLockup.title.getter();
    if (v9)
    {
      StringProtocol.localizedLowercase.getter();
      swift_bridgeObjectRelease();
      v10._uint64_t countAndFlagsBits = v0;
      v10._unint64_t object = v2;
      Swift::Bool v11 = String.hasPrefix(_:)(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11) {
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_10;
  }
  LegacyLockup.title.getter();
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  StringProtocol.localizedLowercase.getter();
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = v0;
  v7._unint64_t object = v2;
  Swift::Bool v8 = String.hasPrefix(_:)(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v8) {
    return 1;
  }
LABEL_10:
  type metadata accessor for LegacyEpisodeLockup();
  if (swift_dynamicCastClass())
  {
    unint64_t v13 = 2;
  }
  else
  {
    type metadata accessor for LegacyChannelLockup();
    unint64_t v13 = swift_dynamicCastClass() != 0;
  }
  if (swift_dynamicCastClass()) {
    return v13 < 2;
  }
  type metadata accessor for LegacyChannelLockup();
  return swift_dynamicCastClass() && v13 == 0;
}

void *sub_1001A3E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1001FA7D8(0, 0, a3);
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v13 = _swiftEmptyArrayStorage[2];
    if (!v13) {
      goto LABEL_61;
    }
LABEL_15:
    double v14 = round((double)a2 / (double)v13);
    if ((~*(void *)&v14 & 0x7FF0000000000000) != 0)
    {
      if (v14 <= -9.22337204e18)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      if (v14 >= 9.22337204e18)
      {
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        return result;
      }
      uint64_t v15 = (uint64_t)v14;
      if (!(uint64_t)v14) {
        goto LABEL_70;
      }
      swift_retain();
      uint64_t v16 = 0;
      uint64_t v37 = v13;
      while (1)
      {
        unint64_t v21 = _swiftEmptyArrayStorage[v16 + 4];
        if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v15 == -1 && v22 == 0x8000000000000000) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v22 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t result = (void *)swift_bridgeObjectRetain();
        }
        if (__OFSUB__(a2, v22)) {
          break;
        }
        if (__OFADD__(v15, v22 % v15)) {
          goto LABEL_64;
        }
        if (v15 + v22 % v15 >= a2 - v22) {
          unint64_t v23 = a2 - v22;
        }
        else {
          unint64_t v23 = v15 + v22 % v15;
        }
        if ((v23 & 0x8000000000000000) != 0) {
          goto LABEL_65;
        }
        if (v21 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v33 < 0) {
            goto LABEL_71;
          }
          if (v32 >= v23 || v32 <= -1) {
            uint64_t v35 = v23;
          }
          else {
            uint64_t v35 = v32;
          }
          if (v23) {
            uint64_t v26 = v35;
          }
          else {
            uint64_t v26 = 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v36 < v26)
          {
LABEL_58:
            __break(1u);
LABEL_59:
            swift_bridgeObjectRelease();
            swift_release_n();
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          unint64_t v24 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v24 >= v23) {
            unint64_t v25 = v23;
          }
          else {
            unint64_t v25 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v23) {
            uint64_t v26 = v25;
          }
          else {
            uint64_t v26 = 0;
          }
          swift_bridgeObjectRetain();
          if ((uint64_t)v24 < v26) {
            goto LABEL_58;
          }
        }
        if ((v21 & 0xC000000000000001) != 0 && v26)
        {
          type metadata accessor for LegacyLockup();
          Swift::Int v27 = 0;
          do
          {
            Swift::Int v28 = v27 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v27);
            Swift::Int v27 = v28;
          }
          while (v26 != v28);
        }
        if (v21 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = _CocoaArrayWrapper.subscript.getter();
          uint64_t v19 = v29;
          uint64_t v17 = v30;
          unint64_t v20 = v31;
          swift_bridgeObjectRelease_n();
        }
        else
        {
          uint64_t v17 = 0;
          uint64_t v18 = v21 & 0xFFFFFFFFFFFFFF8;
          uint64_t v19 = (v21 & 0xFFFFFFFFFFFFFF8) + 32;
          unint64_t v20 = (2 * v26) | 1;
        }
        ++v16;
        swift_bridgeObjectRetain();
        sub_1001B1124(v18, v19, v17, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v16 == v37) {
          goto LABEL_59;
        }
      }
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
    }
    __break(1u);
    goto LABEL_68;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v6; ++i)
  {
    unint64_t v8 = *(void *)(v5 + 8 * i + 32);
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v12)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        continue;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_3;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1001BA520(0, _swiftEmptyArrayStorage[2] + 1, 1);
    }
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    unint64_t v10 = _swiftEmptyArrayStorage[3];
    if (v11 >= v10 >> 1) {
      sub_1001BA520(v10 > 1, v11 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v11 + 1;
    _swiftEmptyArrayStorage[v11 + 4] = v8;
    uint64_t v5 = a1;
  }
  uint64_t result = (void *)swift_bridgeObjectRelease();
  uint64_t v13 = _swiftEmptyArrayStorage[2];
  if (v13) {
    goto LABEL_15;
  }
LABEL_61:
  swift_release();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001A429C@<X0>(BOOL *a1@<X8>)
{
  sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
  uint64_t result = NSManagedObjectContext.count<A>(for:)();
  *a1 = result > 0;
  return result;
}

uint64_t sub_1001A4320()
{
  sub_10004D29C(0, &qword_1005F7060);
  id v0 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  id v1 = [v0 downloadManager];

  [v1 invalidateURLSessions];

  return swift_unknownObjectRelease();
}

uint64_t sub_1001A43B0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = type metadata accessor for TranscriptReportConcernURLBuilder();
  *(void *)(a1 + 32) = &off_10055C678;
  return BaseObjectGraph.inject<A>(_:)();
}

id sub_1001A4404@<X0>(void *a1@<X8>)
{
  if (static Podcasts.isBlueMoonEnabled()())
  {
    type metadata accessor for BlueMoonStubPlayerController();
    id result = (id)swift_allocObject();
    uint64_t v3 = &off_100568B08;
  }
  else
  {
    id result = [self defaultInstance];
    uint64_t v3 = &off_1005660A0;
  }
  *a1 = result;
  a1[1] = v3;
  return result;
}

id sub_1001A4480@<X0>(void *a1@<X8>)
{
  if (static Podcasts.isBlueMoonEnabled()())
  {
    id v2 = [objc_allocWithZone((Class)type metadata accessor for BlueMoonStubPlayerAdapter()) init];
    id result = (id)sub_100042FDC(&qword_1005F7688, (void (*)(uint64_t))type metadata accessor for BlueMoonStubPlayerAdapter);
    *a1 = v2;
    a1[1] = result;
  }
  else
  {
    if (qword_1005F5AE8 != -1) {
      swift_once();
    }
    Swift::String v4 = (void *)qword_10061ACB0;
    uint64_t v5 = sub_100042FDC(&qword_1005F7680, (void (*)(uint64_t))type metadata accessor for PodcastsPlayerAdapter);
    *a1 = v4;
    a1[1] = v5;
    return v4;
  }
  return result;
}

uint64_t sub_1001A4584@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_retain();
  uint64_t result = sub_100026B1C(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1001A45B8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = type metadata accessor for LibraryActionController();
  *(void *)(a1 + 32) = sub_100042FDC(&qword_1005F6EF0, (void (*)(uint64_t))type metadata accessor for LibraryActionController);
  return BaseObjectGraph.inject<A>(_:)();
}

uint64_t sub_1001A4644()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

id sub_1001A467C()
{
  id v1 = [*(id *)(v0 + 16) importContext];

  return v1;
}

id sub_1001A46B4()
{
  id v1 = [*(id *)(v0 + 16) privateQueueContext];

  return v1;
}

_OWORD *sub_1001A46EC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = (void **)v4;
  unint64_t v11 = (void *)*v4;
  unint64_t v13 = sub_100380AE0(a2, a3);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_12;
  }
  char v5 = v12;
  if (v11[3] >= v16)
  {
    if (a4)
    {
      uint64_t v19 = *v6;
      if (v12) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1001A4D64(v13, a2, a3, a1, v19);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
LABEL_12:
    sub_1001A4840();
    uint64_t v19 = *v6;
    if (v5) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  sub_1001A4A38(v16, a4 & 1);
  unint64_t v17 = sub_100380AE0(a2, a3);
  if ((v5 & 1) != (v18 & 1))
  {
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v13 = v17;
  uint64_t v19 = *v6;
  if ((v5 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v20 = (_OWORD *)(v19[7] + 32 * v13);
  sub_10004D2D8((uint64_t)v20);

  return sub_10004D384(a1, v20);
}

void *sub_1001A4840()
{
  id v1 = v0;
  sub_100054B78(&qword_1005F6388);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_29:
    *id v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v13) {
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_27;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_27;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23)
        {
          int64_t v9 = v22 + 3;
          if (v22 + 3 >= v13)
          {
LABEL_27:
            uint64_t result = (void *)swift_release();
            id v1 = v25;
            goto LABEL_29;
          }
          unint64_t v23 = *(void *)(v6 + 8 * v9);
          int64_t v24 = v22 + 3;
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_26:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10004D328(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_10004D384(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_26;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1001A4A38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100054B78(&qword_1005F6388);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v33 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v34) {
          goto LABEL_35;
        }
        unint64_t v19 = v33[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v34) {
            goto LABEL_35;
          }
          unint64_t v19 = v33[v13];
          if (!v19)
          {
            int64_t v13 = v18 + 2;
            if (v18 + 2 >= v34) {
              goto LABEL_35;
            }
            unint64_t v19 = v33[v13];
            if (!v19)
            {
              int64_t v13 = v18 + 3;
              if (v18 + 3 >= v34)
              {
LABEL_35:
                swift_release();
                uint64_t v3 = v2;
                if (a2)
                {
                  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                  if (v32 >= 64) {
                    bzero(v33, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  }
                  else {
                    *uint64_t v33 = -1 << v32;
                  }
                  *(void *)(v5 + 16) = 0;
                }
                break;
              }
              unint64_t v19 = v33[v13];
              for (int64_t i = v18 + 3; !v19; ++i)
              {
                int64_t v13 = i + 1;
                if (__OFADD__(i, 1)) {
                  goto LABEL_42;
                }
                if (v13 >= v34) {
                  goto LABEL_35;
                }
                unint64_t v19 = v33[v13];
              }
            }
          }
        }
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_10004D384(v24, v35);
      }
      else
      {
        sub_10004D328((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_10004D384(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_1001A4D64(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_10004D384(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
    JUMPOUT(0x1001A4DD0);
  }
  a5[2] = v10;
  return result;
}

uint64_t sub_1001A4DE0(void *a1, void *a2)
{
  uint64_t v55 = type metadata accessor for LibraryDataProvider._Station(0);
  uint64_t v4 = __chkstk_darwin(v55);
  uint64_t v58 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v57 = (uint64_t)&v54 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v54 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v56 = (uint64_t)&v54 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v54 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v60 = (uint64_t)&v54 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v54 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v54 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  unint64_t v26 = (char *)&v54 - v25;
  __chkstk_darwin(v24);
  char v28 = (char *)&v54 - v27;
  uint64_t v29 = a1[1];
  uint64_t v30 = a2[1];
  BOOL v31 = *a1 == *a2;
  id v59 = v15;
  if (v31 && v29 == v30)
  {
    sub_1001AB558((uint64_t)a1, (uint64_t)&v54 - v27, type metadata accessor for LibraryDataProvider._Station);
    sub_1001AB558((uint64_t)a2, (uint64_t)v26, type metadata accessor for LibraryDataProvider._Station);
  }
  else
  {
    char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1001AB558((uint64_t)a1, (uint64_t)v28, type metadata accessor for LibraryDataProvider._Station);
    sub_1001AB558((uint64_t)a2, (uint64_t)v26, type metadata accessor for LibraryDataProvider._Station);
    if ((v32 & 1) == 0)
    {
      sub_1001AB5C0((uint64_t)v28, type metadata accessor for LibraryDataProvider._Station);
      sub_1001AB5C0((uint64_t)v26, type metadata accessor for LibraryDataProvider._Station);
      sub_1001AB558((uint64_t)a1, (uint64_t)v23, type metadata accessor for LibraryDataProvider._Station);
      sub_1001AB558((uint64_t)a2, (uint64_t)v20, type metadata accessor for LibraryDataProvider._Station);
      uint64_t v35 = (uint64_t)v10;
      goto LABEL_12;
    }
  }
  uint64_t v33 = sub_10004D29C(0, &qword_1005F7648);
  char v34 = static NSObject.== infix(_:_:)();
  sub_1001AB5C0((uint64_t)v28, type metadata accessor for LibraryDataProvider._Station);
  sub_1001AB5C0((uint64_t)v26, type metadata accessor for LibraryDataProvider._Station);
  sub_1001AB558((uint64_t)a1, (uint64_t)v23, type metadata accessor for LibraryDataProvider._Station);
  sub_1001AB558((uint64_t)a2, (uint64_t)v20, type metadata accessor for LibraryDataProvider._Station);
  uint64_t v35 = (uint64_t)v10;
  if ((v34 & 1) == 0)
  {
LABEL_12:
    sub_1001AB5C0((uint64_t)v20, type metadata accessor for LibraryDataProvider._Station);
    sub_1001AB5C0((uint64_t)v23, type metadata accessor for LibraryDataProvider._Station);
    uint64_t v38 = v60;
    sub_1001AB558((uint64_t)a1, v60, type metadata accessor for LibraryDataProvider._Station);
    uint64_t v39 = (uint64_t)v59;
    sub_1001AB558((uint64_t)a2, (uint64_t)v59, type metadata accessor for LibraryDataProvider._Station);
    goto LABEL_13;
  }
  uint64_t v54 = v33;
  int v36 = v23[24];
  sub_1001AB5C0((uint64_t)v23, type metadata accessor for LibraryDataProvider._Station);
  int v37 = v20[24];
  sub_1001AB5C0((uint64_t)v20, type metadata accessor for LibraryDataProvider._Station);
  uint64_t v38 = v60;
  sub_1001AB558((uint64_t)a1, v60, type metadata accessor for LibraryDataProvider._Station);
  uint64_t v39 = (uint64_t)v59;
  sub_1001AB558((uint64_t)a2, (uint64_t)v59, type metadata accessor for LibraryDataProvider._Station);
  if (v36 != v37)
  {
LABEL_13:
    sub_1001AB5C0(v39, type metadata accessor for LibraryDataProvider._Station);
    sub_1001AB5C0(v38, type metadata accessor for LibraryDataProvider._Station);
    uint64_t v42 = v56;
    sub_1001AB558((uint64_t)a1, v56, type metadata accessor for LibraryDataProvider._Station);
    sub_1001AB558((uint64_t)a2, v35, type metadata accessor for LibraryDataProvider._Station);
    goto LABEL_14;
  }
  type metadata accessor for StationSortOrder();
  sub_100042FDC(&qword_1005F7650, (void (*)(uint64_t))&type metadata accessor for StationSortOrder);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v41 = v61;
  uint64_t v40 = v62;
  sub_1001AB5C0(v39, type metadata accessor for LibraryDataProvider._Station);
  sub_1001AB5C0(v38, type metadata accessor for LibraryDataProvider._Station);
  uint64_t v42 = v56;
  sub_1001AB558((uint64_t)a1, v56, type metadata accessor for LibraryDataProvider._Station);
  sub_1001AB558((uint64_t)a2, v35, type metadata accessor for LibraryDataProvider._Station);
  if (v40 != v41)
  {
LABEL_14:
    sub_1001AB5C0(v42, type metadata accessor for LibraryDataProvider._Station);
    sub_1001AB5C0(v35, type metadata accessor for LibraryDataProvider._Station);
    uint64_t v52 = (uint64_t)a1;
    uint64_t v45 = v57;
    sub_1001AB558(v52, v57, type metadata accessor for LibraryDataProvider._Station);
    uint64_t v46 = v58;
    sub_1001AB558((uint64_t)a2, v58, type metadata accessor for LibraryDataProvider._Station);
    goto LABEL_15;
  }
  char v43 = static NSObject.== infix(_:_:)();
  sub_1001AB5C0(v42, type metadata accessor for LibraryDataProvider._Station);
  sub_1001AB5C0(v35, type metadata accessor for LibraryDataProvider._Station);
  uint64_t v44 = (uint64_t)a1;
  uint64_t v45 = v57;
  sub_1001AB558(v44, v57, type metadata accessor for LibraryDataProvider._Station);
  uint64_t v46 = v58;
  sub_1001AB558((uint64_t)a2, v58, type metadata accessor for LibraryDataProvider._Station);
  if ((v43 & 1) == 0)
  {
LABEL_15:
    char v51 = 0;
    goto LABEL_16;
  }
  unint64_t v47 = swift_bridgeObjectRetain();
  uint64_t v48 = sub_100190814(v47);
  swift_bridgeObjectRelease();
  unint64_t v49 = swift_bridgeObjectRetain();
  id v50 = sub_100190814(v49);
  swift_bridgeObjectRelease();
  char v51 = sub_10019F5BC(v48, v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_16:
  sub_1001AB5C0(v46, type metadata accessor for LibraryDataProvider._Station);
  sub_1001AB5C0(v45, type metadata accessor for LibraryDataProvider._Station);
  return v51 & 1;
}

uint64_t sub_1001A5458(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004D29C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id _s8Podcasts19LibraryDataProviderC35handleEventsForBackgroundURLSession10identifier7handlerSbSS_yyctF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10004D29C(0, &qword_1005F7060);
  id v6 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  id v7 = [v6 downloadManager];

  NSString v8 = String._bridgeToObjectiveC()();
  v12[4] = a3;
  v12[5] = a4;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_10003B424;
  void v12[3] = &unk_100557310;
  uint64_t v9 = _Block_copy(v12);
  swift_retain();
  swift_release();
  id v10 = [v7 handleEventsForBackgroundURLSession:v8 handler:v9];
  _Block_release(v9);
  swift_unknownObjectRelease();

  return v10;
}

uint64_t _s8Podcasts19LibraryDataProviderC12fetchEpisode4with9JetEngine7PromiseCySo9MTEpisodeCSgG0A10Foundation6AdamIDV_tF_0(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78((uint64_t *)&unk_1005F71B0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v5 = Promise.init(signpost:log:metadata:logResult:)();
  uint64_t result = type metadata accessor for CoreDataFetcher();
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    swift_retain();
    static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:completion:)();
    swift_release();
    sub_100054B1C((uint64_t)v4, &qword_1005F5D20);
    return v5;
  }
  return result;
}

uint64_t sub_1001A5770()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for ShowLockupStyle);
}

uint64_t sub_1001A5788(uint64_t a1)
{
  return sub_100057EC8(a1, (uint64_t (*)(void))&type metadata accessor for ShowLockupStyle, (uint64_t (*)(uint64_t, uint64_t))sub_1001965DC);
}

uint64_t sub_1001A57B8()
{
  return 8;
}

void *sub_1001A57C4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1001A57D0()
{
  uint64_t v1 = type metadata accessor for StationListOptions();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1001A5874()
{
  unint64_t result = qword_1006005D0;
  if (!qword_1006005D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006005D0);
  }
  return result;
}

uint64_t sub_1001A58C8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A5900()
{
  return sub_100196858();
}

uint64_t sub_1001A5908()
{
  return sub_100196918();
}

uint64_t sub_1001A5914()
{
  return sub_100196A78(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1001A5920(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
    case 8:
      goto LABEL_2;
    case 4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_2:
      swift_bridgeObjectRetain();
      break;
    case 7:
      swift_bridgeObjectRetain();
      sub_1001A5A18(a3, a4);
      break;
    default:
      return;
  }
}

uint64_t sub_1001A5A18(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1001A5A2C(uint64_t a1, uint64_t a2)
{
  return sub_100196EDC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1001A5A58(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1001A5A6C()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for EpisodeListSettings);
}

uint64_t _s8Podcasts19LibraryDataProviderC31seeAllEpisodesSettingsPublisher4uuid06filterI07Combine03AnyI0Vy0A10Foundation011EpisodeListH0Vs5NeverOGSS_AIyAJ0O10UserFilterOANGtF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100054B78(&qword_1005F7968);
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100054B78(&qword_1005F7970);
  uint64_t v26 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100054B78(&qword_1005F7978);
  uint64_t v27 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CoreDataFetcher();
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = static CoreDataFetcher.performAndPublishOnPodcast<A>(with:queue:block:)();

  uint64_t v28 = a3;
  uint64_t v29 = v14;
  sub_100054B78(&qword_1005F7980);
  sub_100054B78(&qword_1005F7988);
  sub_100044200(&qword_1005F7990, &qword_1005F7980);
  sub_100044200(&qword_1005F7998, &qword_1005F7988);
  Publisher.combineLatest<A>(_:)();
  swift_release();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1001AB4D0;
  *(void *)(v16 + 24) = v15;
  type metadata accessor for EpisodeListSettings();
  sub_100044200(&qword_1005F79A0, &qword_1005F7968);
  swift_bridgeObjectRetain();
  uint64_t v17 = v23;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
  sub_100044200(&qword_1005F79A8, &qword_1005F7970);
  sub_100042FDC(&qword_1005F73D8, (void (*)(uint64_t))&type metadata accessor for EpisodeListSettings);
  uint64_t v18 = v24;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v18);
  sub_100044200((unint64_t *)&unk_1005F79B0, &qword_1005F7978);
  uint64_t v19 = v25;
  uint64_t v20 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v19);
  return v20;
}

uint64_t sub_1001A5F28()
{
  return swift_deallocObject();
}

uint64_t sub_1001A5F68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100199D00(a1, *(void *)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t sub_1001A5F74()
{
  sub_100053720(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));

  return swift_deallocObject();
}

uint64_t sub_1001A5FC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001A6024()
{
  sub_1000536CC(v0 + 16, (void (*)(void, void, void, void, void, void, void, void, char))sub_1001A5920);

  return EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();
}

uint64_t sub_1001A60AC(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, *((void *)a1 + 1), a1[16]);
}

uint64_t sub_1001A60E0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A6120@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10019ECC8(a1, *(void *)(v2 + 24), *(void **)(v2 + 32), a2);
}

void sub_1001A612C(void *a1)
{
}

uint64_t sub_1001A6138()
{
  return sub_10019F0E0();
}

uint64_t type metadata accessor for LibraryDataProvider._Station(uint64_t a1)
{
  return sub_10004F778(a1, qword_1005F7600);
}

uint64_t sub_1001A6164@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001A0074(a1, *(void *)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t sub_1001A6174()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A61B4()
{
  return sub_1001A15B0(v0[2], v0[3], v0[4]);
}

uint64_t _s8Podcasts19LibraryDataProviderC26fetchImageDownloadObserver9JetEngine7PromiseCy8ShelfKit0fgH8Protocol_pGyF_0()
{
  sub_100054B78(&qword_1005F7690);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.libraryLoadingSignpost.getter();
  uint64_t v0 = Promise.init(signpost:log:metadata:logResult:)();
  uint64_t v1 = type metadata accessor for ImageDownloadObserver();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  id v3 = [self defaultCenter];
  uint64_t v4 = qword_1005F5B30;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  [v3 addObserver:v2 selector:"notificationFiredWithNote:" name:qword_1006065E0 object:0];

  swift_release();
  v6[3] = v1;
  v6[4] = sub_100042FDC(&qword_1005F7698, (void (*)(uint64_t))type metadata accessor for ImageDownloadObserver);
  v6[0] = v2;
  swift_retain();
  Promise.resolve(_:)();
  swift_release();
  sub_10004D2D8((uint64_t)v6);
  return v0;
}

uint64_t sub_1001A6368@<X0>(BOOL *a1@<X8>)
{
  return sub_1001A429C(a1);
}

uint64_t sub_1001A6370()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001A63A8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A63E8()
{
  return type metadata accessor for LibraryDataProvider(0);
}

void *sub_1001A63F0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = (void *)a2[2];
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v9 = a3[7];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for StationSortOrder();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    id v14 = v8;
    v13(v10, v11, v12);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = *(void **)((char *)a2 + v15);
    *(void *)((char *)v4 + v15) = v17;
    *(void *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    id v18 = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1001A651C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for StationSortOrder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A65BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for StationSortOrder();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v16;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  id v17 = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001A6698(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v6;
  id v8 = v6;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for StationSortOrder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)(a2 + v13);
  uint64_t v15 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = v14;
  id v16 = v14;

  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001A678C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for StationSortOrder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  return a1;
}

uint64_t sub_1001A683C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for StationSortOrder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001A6910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A6924);
}

uint64_t sub_1001A6924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for StationSortOrder();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001A69D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A69E8);
}

uint64_t sub_1001A69E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for StationSortOrder();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1001A6A90()
{
  uint64_t result = type metadata accessor for StationSortOrder();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001A6B50(uint64_t a1, uint64_t a2, void *a3)
{
  id v40 = a3;
  uint64_t v41 = a2;
  uint64_t v4 = type metadata accessor for EpisodeListSettings();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005F7840);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  uint64_t v43 = v9;
  __chkstk_darwin(v8);
  uint64_t v39 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease();
  unint64_t v44 = 0xD000000000000026;
  unint64_t v45 = 0x80000001004D4170;
  EpisodeListSettings.listType.getter();
  uint64_t v11 = EpisodeListType.description.getter();
  uint64_t v13 = v12;
  sub_1000536CC((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  v14._uint64_t countAndFlagsBits = v11;
  v14._unint64_t object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 93;
  v15._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  unint64_t v37 = v45;
  unint64_t v38 = v44;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v17;
  uint64_t v36 = v16;
  uint64_t v34 = EpisodeListSettings.predicate.getter();
  uint64_t v32 = a1;
  EpisodeListSettings.sort.getter();
  uint64_t v33 = EpisodeSortType.descriptors.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  v27[1] = static OS_dispatch_queue.main.getter();
  BOOL v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v18 = v4;
  v31(v7, a1, v4);
  uint64_t v19 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v20 = (v19 + 16) & ~v19;
  uint64_t v30 = v20 + v6;
  uint64_t v29 = v19 | 7;
  uint64_t v21 = swift_allocObject();
  uint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v28(v21 + v20, v7, v18);
  type metadata accessor for LibraryEpisodeLockup();
  v27[0] = v40;
  id v40 = (id)sub_100054B78(&qword_100607DB0);
  sub_10004D29C(0, (unint64_t *)&qword_100603220);
  sub_1001AB208(&qword_1005F7850, &qword_100607DB0);
  uint64_t v22 = v39;
  FetchedResultsSectionedPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:sectionTransform:)();
  v31(v7, v32, v18);
  uint64_t v23 = swift_allocObject();
  v28(v23 + v20, v7, v18);
  type metadata accessor for ModernShelf();
  sub_100044200(&qword_1005F7858, (uint64_t *)&unk_1005F7840);
  uint64_t v24 = v42;
  uint64_t v25 = PaginatedPublisher.paginatedSectionMap<A, B, C>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v24);
  return v25;
}

uint64_t sub_1001A7008(uint64_t a1, uint64_t a2, void *a3)
{
  id v28 = a3;
  uint64_t v36 = a2;
  uint64_t v4 = type metadata accessor for EpisodeListSettings();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005F7840);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  uint64_t v38 = v9;
  __chkstk_darwin(v8);
  uint64_t v35 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[0] = 0;
  v41[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  unint64_t v39 = 0xD00000000000001ALL;
  unint64_t v40 = 0x80000001004D4090;
  EpisodeListSettings.listType.getter();
  v11._uint64_t countAndFlagsBits = EpisodeListType.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  sub_1000536CC((uint64_t)v41, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
  unint64_t v33 = v40;
  unint64_t v34 = v39;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v13;
  uint64_t v32 = v12;
  uint64_t v30 = EpisodeListSettings.predicate.getter();
  uint64_t v27 = a1;
  EpisodeListSettings.sort.getter();
  uint64_t v29 = EpisodeSortType.descriptors.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  v22[1] = static OS_dispatch_queue.main.getter();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v26(v7, a1, v4);
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v25 = v15 + v6;
  uint64_t v24 = v14 | 7;
  uint64_t v16 = swift_allocObject();
  uint64_t v23 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v23(v16 + v15, v7, v4);
  type metadata accessor for LibraryEpisodeLockup();
  v22[0] = v28;
  id v28 = (id)sub_100054B78(&qword_100607DB0);
  sub_10004D29C(0, (unint64_t *)&qword_100603220);
  sub_1001AB208(&qword_1005F7850, &qword_100607DB0);
  uint64_t v17 = v35;
  FetchedResultsSectionedPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:sectionTransform:)();
  v26(v7, v27, v4);
  uint64_t v18 = swift_allocObject();
  v23(v18 + v15, v7, v4);
  type metadata accessor for ModernShelf();
  sub_100044200(&qword_1005F7858, (uint64_t *)&unk_1005F7840);
  uint64_t v19 = v37;
  uint64_t v20 = PaginatedPublisher.paginatedSectionMap<A, B, C>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v19);
  return v20;
}

uint64_t sub_1001A74AC(uint64_t *a1, uint64_t a2, void *a3)
{
  id v38 = a3;
  uint64_t v40 = a2;
  uint64_t v4 = type metadata accessor for LibraryDataProvider._Station(0);
  uint64_t v5 = v4 - 8;
  uint64_t v36 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v37 = v6;
  uint64_t v39 = (uint64_t)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7710);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StationSortOrder();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
  sub_100054B78(&qword_1005F7720);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10046D010;
  uint64_t v14 = (void *)a1[2];
  *(void *)(v13 + 56) = sub_10004D29C(0, &qword_1005F7728);
  *(void *)(v13 + 64) = sub_1001A5458(&qword_1005F7730, &qword_1005F7728);
  *(void *)(v13 + 32) = v14;
  id v15 = v14;
  uint64_t v16 = NSPredicate.init(format:_:)();
  uint64_t v17 = (uint64_t)a1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, (char *)a1 + *(int *)(v5 + 36), v9);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v18 == enum case for StationSortOrder.library(_:)
    || v18 == enum case for StationSortOrder.mostRecent(_:)
    || v18 == enum case for StationSortOrder.manual(_:)
    || v18 == enum case for StationSortOrder.oldest(_:)
    || v18 == enum case for StationSortOrder.showTitle(_:)
    || v18 == enum case for StationSortOrder.showTitleAscending(_:))
  {
    v35[4] = sub_10004D29C(0, &qword_1005F7738);
    v35[5] = static MTPodcastPlaylistSettings.sortDescriptorsForGroupedStation(orderedBy:)();
    unint64_t v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    _StringGuts.grow(_:)(40);
    swift_bridgeObjectRelease();
    unint64_t v44 = 0xD000000000000026;
    unint64_t v45 = 0x80000001004D4020;
    uint64_t v19 = *a1;
    uint64_t v20 = (void *)a1[1];
    swift_bridgeObjectRetain();
    v21._uint64_t countAndFlagsBits = v19;
    v21._unint64_t object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    _OWORD v35[2] = v45;
    v35[3] = v44;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v35[0] = v23;
    v35[1] = v22;
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    id v24 = v16;
    static OS_dispatch_queue.main.getter();
    uint64_t v25 = v39;
    sub_1001AB558(v17, v39, type metadata accessor for LibraryDataProvider._Station);
    unint64_t v26 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v27 = swift_allocObject();
    sub_1001AB620(v25, v27 + v26, type metadata accessor for LibraryDataProvider._Station);
    type metadata accessor for LibraryShowLockup();
    id v28 = v38;
    uint64_t v29 = v41;
    FetchedResultsListPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
    sub_1001AB558(v17, v25, type metadata accessor for LibraryDataProvider._Station);
    uint64_t v30 = swift_allocObject();
    sub_1001AB620(v25, v30 + v26, type metadata accessor for LibraryDataProvider._Station);
    sub_100054B78((uint64_t *)&unk_1005FD1A0);
    type metadata accessor for ModernShelf();
    sub_100044200(&qword_1005F7740, (uint64_t *)&unk_1005F7710);
    uint64_t v31 = v43;
    uint64_t v32 = PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v31);
    unint64_t v44 = v32;
    sub_100054B78(&qword_1005F7478);
    sub_100044200(&qword_1005F76F8, &qword_1005F7478);
    uint64_t v33 = PaginatedPublisher.eraseToAnyPaginatedPublisher()();
    swift_release();

    return v33;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001A7B58(uint64_t *a1, uint64_t a2, void *a3)
{
  id v35 = a3;
  uint64_t v5 = type metadata accessor for LibraryDataProvider._Station(0);
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v34 + 64);
  __chkstk_darwin(v5);
  uint64_t v36 = (uint64_t)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7340);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StationSortOrder();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, (char *)a1 + *(int *)(v5 + 28), v11);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  uint64_t v39 = v8;
  uint64_t v40 = v7;
  uint64_t v37 = a2;
  id v38 = v10;
  if (v15 == enum case for StationSortOrder.library(_:)
    || v15 == enum case for StationSortOrder.mostRecent(_:)
    || v15 == enum case for StationSortOrder.manual(_:)
    || v15 == enum case for StationSortOrder.oldest(_:)
    || v15 == enum case for StationSortOrder.showTitle(_:)
    || v15 == enum case for StationSortOrder.showTitleAscending(_:))
  {
    v33[5] = sub_10004D29C(0, (unint64_t *)&qword_100603220);
    v33[6] = static MTEpisode.sortDescriptorsForUngroupedStation(orderedBy:)();
    unint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    unint64_t v41 = 0xD00000000000001FLL;
    unint64_t v42 = 0x80000001004D4070;
    uint64_t v16 = *a1;
    uint64_t v17 = (void *)a1[1];
    swift_bridgeObjectRetain();
    v18._uint64_t countAndFlagsBits = v16;
    v18._unint64_t object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    void v33[3] = v42;
    v33[4] = v41;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v33[1] = v20;
    void v33[2] = v19;
    Swift::String v21 = *(void **)((char *)a1 + *(int *)(v5 + 32));
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    id v22 = v21;
    static OS_dispatch_queue.main.getter();
    uint64_t v23 = v36;
    sub_1001AB558((uint64_t)a1, v36, type metadata accessor for LibraryDataProvider._Station);
    unint64_t v24 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v25 = swift_allocObject();
    sub_1001AB620(v23, v25 + v24, type metadata accessor for LibraryDataProvider._Station);
    type metadata accessor for LibraryEpisodeLockup();
    id v26 = v35;
    uint64_t v27 = v38;
    FetchedResultsListPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:)();
    sub_1001AB558((uint64_t)a1, v23, type metadata accessor for LibraryDataProvider._Station);
    uint64_t v28 = swift_allocObject();
    sub_1001AB620(v23, v28 + v24, type metadata accessor for LibraryDataProvider._Station);
    sub_100054B78((uint64_t *)&unk_1005F71D0);
    type metadata accessor for ModernShelf();
    sub_100044200(&qword_1005F7350, (uint64_t *)&unk_1005F7340);
    uint64_t v29 = v40;
    uint64_t v30 = PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v29);
    unint64_t v41 = v30;
    sub_100054B78(&qword_1005F7478);
    sub_100044200(&qword_1005F76F8, &qword_1005F7478);
    uint64_t v31 = PaginatedPublisher.eraseToAnyPaginatedPublisher()();
    swift_release();
    return v31;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001A813C(uint64_t a1)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005F7770);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_1005F7780);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_1005F7788);
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v69 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v70 = (char *)&v57 - v15;
  uint64_t v16 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v16 - 8);
  id v67 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v18 - 8);
  id v66 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v20 - 8);
  uint64_t v63 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v22 - 8);
  uint64_t v62 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v24 - 8);
  id v59 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v26 - 8);
  uint64_t v65 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for ModernShelf();
  uint64_t v80 = *(void *)(v68 - 8);
  uint64_t v28 = __chkstk_darwin(v68);
  uint64_t v75 = (char *)&v57 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  Swift::String v78 = (char *)&v57 - v30;
  uint64_t v79 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v77 = *(void *)(v79 - 8);
  uint64_t v31 = __chkstk_darwin(v79);
  uint64_t v64 = (char *)&v57 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v57 - v33;
  ShelfIDBuilder.init(named:)();
  ShelfIDBuilder.addingAttribute(_:named:)();
  swift_bridgeObjectRelease();
  Swift::String v35 = ShelfIDBuilder.build()();
  uint64_t countAndFlagsBits = v35._countAndFlagsBits;
  unint64_t object = v35._object;
  swift_bridgeObjectRelease();
  v84[0] = 1;
  id v76 = v34;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
  unint64_t v36 = *(void *)(a1 + *(int *)(type metadata accessor for LibraryDataProvider._Station(0) + 36));
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v74 = v8;
  uint64_t v73 = v9;
  id v72 = v11;
  if (v37)
  {
    *(void *)&long long v81 = _swiftEmptyArrayStorage;
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if (v37 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v58 = v12;
    uint64_t v39 = 0;
    do
    {
      if ((v36 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      ++v39;
      uint64_t v40 = type metadata accessor for EpisodeListSettings();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v7, 1, 1, v40);
      uint64_t v41 = type metadata accessor for SectionContext();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v4, 1, 1, v41);
      static MetricsDataConfiguration.default.getter();
      dispatch thunk of Episode.defaultLockup(for:sectionContext:configuration:)();
      sub_100053820((uint64_t)v84, (uint64_t)v90, (uint64_t *)&unk_1005F76D0);
      sub_100053884((uint64_t)v90);
      uint64_t v89 = v85;
      sub_1000537F4((uint64_t)&v89);
      uint64_t v88 = v86;
      sub_1000537F4((uint64_t)&v88);
      sub_1000536BC(v87);
      sub_100054B1C((uint64_t)v4, (uint64_t *)&unk_1005F7770);
      sub_100054B1C((uint64_t)v7, (uint64_t *)&unk_1005FEA40);
      swift_release();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v37 != v39);
    unint64_t v42 = v81;
    swift_bridgeObjectRelease();
    uint64_t v12 = v58;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v43 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v59, 1, 1, v43);
  uint64_t v44 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v62, 1, 1, v44);
  uint64_t v45 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v63, 1, 1, v45);
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v64, v76, v79);
  sub_1001B7768(v42);
  uint64_t v46 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v66, 1, 1, v46);
  uint64_t v83 = 0;
  long long v81 = 0u;
  long long v82 = 0u;
  swift_bridgeObjectRetain();
  ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.targetType.getter();
  unint64_t v47 = v67;
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  unint64_t v49 = v78;
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  uint64_t v50 = v68;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v75, v49, v68);
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v51 = v74;
  uint64_t v52 = v73;
  uint64_t v53 = v72;
  swift_bridgeObjectRelease();
  uint64_t v54 = v70;
  FRPOutput.init(content:hasMore:totalCount:)();
  uint64_t v55 = v71;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v69, v54, v12);
  Just.init(_:)();
  sub_100044200(&qword_1005F7790, &qword_1005F7780);
  uint64_t v56 = PaginatedPublisher.eraseToAnyPaginatedPublisher()();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v12);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v50);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v79);
  return v56;
}

uint64_t sub_1001A8D50(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  swift_bridgeObjectRetain_n();
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_186;
    }
    if (v3)
    {
      swift_bridgeObjectRetain();
      sub_1001A9DE4(0, v3, 1, a1);
    }
    return swift_bridgeObjectRelease_n();
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_194;
  }
  uint64_t v117 = a1;
  Swift::Int v118 = v4;
  uint64_t v126 = v1;
  if (v3 < 2)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    uint64_t v133 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_150:
      id v125 = v9;
      if (v11 >= 2)
      {
        uint64_t v109 = *v117;
        do
        {
          unint64_t v110 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_181;
          }
          if (!v109) {
            goto LABEL_193;
          }
          uint64_t v111 = *(void *)&v125[16 * v110 + 32];
          uint64_t v112 = *(void *)&v125[16 * v11 + 24];
          uint64_t v113 = (char *)(v109 + 8 * *(void *)&v125[16 * v11 + 16]);
          swift_bridgeObjectRetain();
          sub_1001A9B00((char *)(v109 + 8 * v111), v113, v109 + 8 * v112, __dst);
          if (v126) {
            goto LABEL_162;
          }
          swift_bridgeObjectRelease();
          if (v112 < v111) {
            goto LABEL_182;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v125 = sub_10025CC4C((uint64_t)v125);
          }
          if (v110 >= *((void *)v125 + 2)) {
            goto LABEL_183;
          }
          uint64_t v114 = &v125[16 * v110 + 32];
          *(void *)uint64_t v114 = v111;
          *((void *)v114 + 1) = v112;
          unint64_t v115 = *((void *)v125 + 2);
          if (v11 > v115) {
            goto LABEL_184;
          }
          memmove(&v125[16 * v11 + 16], &v125[16 * v11 + 32], 16 * (v115 - v11));
          *((void *)v125 + 2) = v115 - 1;
          unint64_t v11 = v115 - 1;
        }
        while (v115 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
LABEL_164:
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for LegacyLockup();
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    __dst = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v133 = v7;
  }
  Swift::Int v10 = 0;
  uint64_t v116 = *v117 - 8;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v120 = v3;
  uint64_t v129 = *v117;
  while (2)
  {
    Swift::Int v121 = v10;
    if (v10 + 1 >= v3)
    {
      Swift::Int v26 = v10 + 1;
      goto LABEL_97;
    }
    swift_retain();
    swift_retain();
    BOOL v130 = sub_1001A3BF0();
    swift_release();
    swift_release();
    Swift::Int v12 = v10 + 2;
    if (v10 + 2 >= v3)
    {
      Swift::Int v26 = v10 + 2;
      uint64_t v29 = v129;
LABEL_49:
      if (v130)
      {
LABEL_50:
        if (v26 < v121) {
          goto LABEL_187;
        }
        if (v121 < v26)
        {
          uint64_t v30 = (uint64_t *)(v116 + 8 * v26);
          Swift::Int v31 = v26;
          Swift::Int v32 = v121;
          uint64_t v33 = (uint64_t *)(v29 + 8 * v121);
          while (1)
          {
            if (v32 != --v31)
            {
              if (!v29) {
                goto LABEL_192;
              }
              uint64_t v34 = *v33;
              *uint64_t v33 = *v30;
              *uint64_t v30 = v34;
            }
            ++v32;
            --v30;
            ++v33;
            if (v32 >= v31) {
              goto LABEL_58;
            }
          }
        }
      }
      goto LABEL_58;
    }
    sub_1001AA530();
    while (1)
    {
      while (1)
      {
        while (1)
        {
          swift_retain();
          swift_retain();
          uint64_t v13 = StringProtocol.localizedLowercase.getter();
          uint64_t v15 = v14;
          LegacyLockup.title.getter();
          if (!v16) {
            break;
          }
          StringProtocol.localizedLowercase.getter();
          swift_bridgeObjectRelease();
          v17._uint64_t countAndFlagsBits = v13;
          v17._unint64_t object = v15;
          Swift::Bool v18 = String.hasPrefix(_:)(v17);
          swift_bridgeObjectRelease();
          if (!v18) {
            break;
          }
          LegacyLockup.title.getter();
          if (v19)
          {
            StringProtocol.localizedLowercase.getter();
            swift_bridgeObjectRelease();
            v20._uint64_t countAndFlagsBits = v13;
            v20._unint64_t object = v15;
            Swift::Bool v21 = String.hasPrefix(_:)(v20);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v21)
            {
              type metadata accessor for LegacyEpisodeLockup();
              Swift::Int v3 = v120;
              if (!swift_dynamicCastClass()) {
                goto LABEL_24;
              }
              goto LABEL_32;
            }
            swift_release();
            swift_release();
          }
          else
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
          }
          Swift::Int v3 = v120;
          uint64_t v29 = v129;
          if (!v130)
          {
            Swift::Int v26 = v12;
            if (v12 >= v120) {
              goto LABEL_97;
            }
            goto LABEL_59;
          }
          Swift::Int v26 = v12 + 1;
          Swift::Int v12 = v26;
          if (v26 >= v120) {
            goto LABEL_50;
          }
        }
        LegacyLockup.title.getter();
        if (!v23) {
          break;
        }
        StringProtocol.localizedLowercase.getter();
        swift_bridgeObjectRelease();
        v24._uint64_t countAndFlagsBits = v13;
        v24._unint64_t object = v15;
        Swift::Bool v25 = String.hasPrefix(_:)(v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int v3 = v120;
        if (!v25) {
          goto LABEL_31;
        }
        swift_release();
        swift_release();
        if (v130)
        {
          Swift::Int v26 = v12;
          uint64_t v29 = v129;
          goto LABEL_50;
        }
        Swift::Int v26 = v12 + 1;
        Swift::Int v12 = v26;
        if (v26 >= v120) {
          goto LABEL_58;
        }
      }
      swift_bridgeObjectRelease();
      Swift::Int v3 = v120;
LABEL_31:
      type metadata accessor for LegacyEpisodeLockup();
      if (!swift_dynamicCastClass())
      {
LABEL_24:
        type metadata accessor for LegacyChannelLockup();
        unsigned int v22 = swift_dynamicCastClass() != 0;
        goto LABEL_33;
      }
LABEL_32:
      unsigned int v22 = 2;
LABEL_33:
      if (swift_dynamicCastClass())
      {
        swift_release();
        swift_release();
        BOOL v27 = v22 < 2;
        goto LABEL_37;
      }
      type metadata accessor for LegacyChannelLockup();
      uint64_t v28 = swift_dynamicCastClass();
      swift_release();
      swift_release();
      if (v28) {
        break;
      }
      uint64_t v29 = v129;
      if (v130)
      {
        Swift::Int v26 = v12;
        goto LABEL_50;
      }
LABEL_38:
      Swift::Int v26 = v12 + 1;
      Swift::Int v12 = v26;
      if (v26 >= v3) {
        goto LABEL_49;
      }
    }
    BOOL v27 = v22 == 0;
LABEL_37:
    uint64_t v29 = v129;
    if (((v130 ^ v27) & 1) == 0) {
      goto LABEL_38;
    }
    Swift::Int v26 = v12;
    if (v130) {
      goto LABEL_50;
    }
LABEL_58:
    if (v26 >= v3) {
      goto LABEL_97;
    }
LABEL_59:
    if (__OFSUB__(v26, v121)) {
      goto LABEL_185;
    }
    if (v26 - v121 >= v118) {
      goto LABEL_97;
    }
    if (__OFADD__(v121, v118)) {
      goto LABEL_188;
    }
    if (v121 + v118 >= v3) {
      Swift::Int v35 = v3;
    }
    else {
      Swift::Int v35 = v121 + v118;
    }
    if (v35 >= v121)
    {
      if (v26 == v35) {
        goto LABEL_97;
      }
      sub_1001AA530();
      unint64_t v36 = (void *)(v116 + 8 * v26);
      Swift::Int v119 = v35;
      while (2)
      {
        Swift::Int v37 = v121;
        uint64_t v122 = v36;
        Swift::Int v127 = v26;
        while (2)
        {
          Swift::Int v131 = v37;
          swift_retain();
          swift_retain();
          uint64_t v38 = StringProtocol.localizedLowercase.getter();
          uint64_t v40 = v39;
          LegacyLockup.title.getter();
          if (v41)
          {
            StringProtocol.localizedLowercase.getter();
            swift_bridgeObjectRelease();
            v42._uint64_t countAndFlagsBits = v38;
            v42._unint64_t object = v40;
            Swift::Bool v43 = String.hasPrefix(_:)(v42);
            swift_bridgeObjectRelease();
            if (v43)
            {
              LegacyLockup.title.getter();
              if (v44)
              {
                StringProtocol.localizedLowercase.getter();
                swift_bridgeObjectRelease();
                v45._uint64_t countAndFlagsBits = v38;
                v45._unint64_t object = v40;
                Swift::Bool v46 = String.hasPrefix(_:)(v45);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v46)
                {
                  type metadata accessor for LegacyEpisodeLockup();
                  Swift::Int v47 = v127;
                  if (swift_dynamicCastClass())
                  {
                    unsigned int v48 = 2;
                    goto LABEL_88;
                  }
LABEL_87:
                  type metadata accessor for LegacyChannelLockup();
                  unsigned int v48 = swift_dynamicCastClass() != 0;
                  goto LABEL_88;
                }
                swift_release();
                swift_release();
              }
              else
              {
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
              }
              Swift::Int v47 = v127;
LABEL_93:
              if (!v129) {
                goto LABEL_190;
              }
              uint64_t v52 = *v36;
              void *v36 = v36[1];
              v36[1] = v52;
              --v36;
              Swift::Int v37 = v131 + 1;
              if (v47 == v131 + 1) {
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        LegacyLockup.title.getter();
        if (v49)
        {
          StringProtocol.localizedLowercase.getter();
          swift_bridgeObjectRelease();
          v50._uint64_t countAndFlagsBits = v38;
          v50._unint64_t object = v40;
          Swift::Bool v51 = String.hasPrefix(_:)(v50);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          Swift::Int v47 = v127;
          if (v51) {
            goto LABEL_68;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          Swift::Int v47 = v127;
        }
        type metadata accessor for LegacyEpisodeLockup();
        if (!swift_dynamicCastClass()) {
          goto LABEL_87;
        }
        unsigned int v48 = 2;
LABEL_88:
        if (swift_dynamicCastClass())
        {
          swift_release();
          swift_release();
          if (v48 >= 2) {
            goto LABEL_69;
          }
          goto LABEL_93;
        }
        type metadata accessor for LegacyChannelLockup();
        if (swift_dynamicCastClass())
        {
          swift_release();
          swift_release();
          if (v48) {
            goto LABEL_69;
          }
          goto LABEL_93;
        }
LABEL_68:
        swift_release();
        swift_release();
LABEL_69:
        Swift::Int v26 = v47 + 1;
        unint64_t v36 = v122 + 1;
        if (v26 != v119) {
          continue;
        }
        break;
      }
      Swift::Int v26 = v119;
LABEL_97:
      if (v26 < v121) {
        goto LABEL_180;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_10025C908(0, *((void *)v9 + 2) + 1, 1, v9);
      }
      unint64_t v54 = *((void *)v9 + 2);
      unint64_t v53 = *((void *)v9 + 3);
      unint64_t v11 = v54 + 1;
      uint64_t v55 = v129;
      if (v54 >= v53 >> 1)
      {
        uint64_t v108 = sub_10025C908((char *)(v53 > 1), v54 + 1, 1, v9);
        uint64_t v55 = v129;
        uint64_t v9 = v108;
      }
      *((void *)v9 + 2) = v11;
      uint64_t v56 = v9 + 32;
      uint64_t v57 = &v9[16 * v54 + 32];
      *(void *)uint64_t v57 = v121;
      *((void *)v57 + 1) = v26;
      Swift::Int v128 = v26;
      if (!v54)
      {
        unint64_t v11 = 1;
LABEL_15:
        Swift::Int v3 = v120;
        Swift::Int v10 = v128;
        if (v128 >= v120) {
          goto LABEL_150;
        }
        continue;
      }
      uint64_t v124 = v9;
      uint64_t v132 = v9 + 32;
LABEL_104:
      unint64_t v58 = v11 - 1;
      if (v11 >= 4)
      {
        uint64_t v63 = &v56[16 * v11];
        uint64_t v64 = *((void *)v63 - 8);
        uint64_t v65 = *((void *)v63 - 7);
        BOOL v69 = __OFSUB__(v65, v64);
        uint64_t v66 = v65 - v64;
        if (v69) {
          goto LABEL_169;
        }
        uint64_t v68 = *((void *)v63 - 6);
        uint64_t v67 = *((void *)v63 - 5);
        BOOL v69 = __OFSUB__(v67, v68);
        uint64_t v61 = v67 - v68;
        char v62 = v69;
        if (v69) {
          goto LABEL_170;
        }
        unint64_t v70 = v11 - 2;
        uint64_t v71 = &v56[16 * v11 - 32];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v69 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v69) {
          goto LABEL_172;
        }
        BOOL v69 = __OFADD__(v61, v74);
        uint64_t v75 = v61 + v74;
        if (v69) {
          goto LABEL_175;
        }
        if (v75 >= v66)
        {
          uint64_t v93 = &v56[16 * v58];
          uint64_t v95 = *(void *)v93;
          uint64_t v94 = *((void *)v93 + 1);
          BOOL v69 = __OFSUB__(v94, v95);
          uint64_t v96 = v94 - v95;
          if (v69) {
            goto LABEL_179;
          }
          BOOL v86 = v61 < v96;
        }
        else
        {
LABEL_117:
          if (v62) {
            goto LABEL_171;
          }
          unint64_t v70 = v11 - 2;
          id v76 = &v56[16 * v11 - 32];
          uint64_t v78 = *(void *)v76;
          uint64_t v77 = *((void *)v76 + 1);
          BOOL v79 = __OFSUB__(v77, v78);
          uint64_t v80 = v77 - v78;
          char v81 = v79;
          if (v79) {
            goto LABEL_174;
          }
          long long v82 = &v56[16 * v58];
          uint64_t v84 = *(void *)v82;
          uint64_t v83 = *((void *)v82 + 1);
          BOOL v69 = __OFSUB__(v83, v84);
          uint64_t v85 = v83 - v84;
          if (v69) {
            goto LABEL_177;
          }
          if (__OFADD__(v80, v85)) {
            goto LABEL_178;
          }
          if (v80 + v85 < v61) {
            goto LABEL_129;
          }
          BOOL v86 = v61 < v85;
        }
        if (v86) {
          unint64_t v58 = v70;
        }
      }
      else
      {
        if (v11 == 3)
        {
          uint64_t v60 = *((void *)v9 + 4);
          uint64_t v59 = *((void *)v9 + 5);
          BOOL v69 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          char v62 = v69;
          goto LABEL_117;
        }
        uint64_t v87 = *((void *)v9 + 4);
        uint64_t v88 = *((void *)v9 + 5);
        BOOL v69 = __OFSUB__(v88, v87);
        uint64_t v80 = v88 - v87;
        char v81 = v69;
LABEL_129:
        if (v81) {
          goto LABEL_173;
        }
        uint64_t v89 = &v56[16 * v58];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v69 = __OFSUB__(v90, v91);
        uint64_t v92 = v90 - v91;
        if (v69) {
          goto LABEL_176;
        }
        if (v92 < v80) {
          goto LABEL_15;
        }
      }
      unint64_t v97 = v58 - 1;
      if (v58 - 1 >= v11)
      {
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
        break;
      }
      if (!v55) {
        goto LABEL_191;
      }
      unint64_t v98 = v56;
      unint64_t v99 = &v56[16 * v97];
      uint64_t v100 = *(void *)v99;
      unint64_t v101 = v58;
      uint64_t v102 = &v98[16 * v58];
      uint64_t v103 = *((void *)v102 + 1);
      uint64_t v104 = (char *)(v55 + 8 * *(void *)v99);
      uint64_t v105 = (char *)(v55 + 8 * *(void *)v102);
      unint64_t v106 = v55 + 8 * v103;
      swift_bridgeObjectRetain();
      sub_1001A9B00(v104, v105, v106, __dst);
      if (v126)
      {
LABEL_162:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()();
        goto LABEL_164;
      }
      swift_bridgeObjectRelease();
      if (v103 < v100) {
        goto LABEL_166;
      }
      uint64_t v9 = v124;
      if (v101 > *((void *)v124 + 2)) {
        goto LABEL_167;
      }
      *(void *)unint64_t v99 = v100;
      uint64_t v56 = v132;
      *(void *)&v132[16 * v97 + 8] = v103;
      unint64_t v107 = *((void *)v124 + 2);
      if (v101 >= v107) {
        goto LABEL_168;
      }
      unint64_t v11 = v107 - 1;
      memmove(v102, v102 + 16, 16 * (v107 - 1 - v101));
      *((void *)v124 + 2) = v107 - 1;
      uint64_t v55 = v129;
      if (v107 <= 2) {
        goto LABEL_15;
      }
      goto LABEL_104;
    }
    break;
  }
  __break(1u);
LABEL_190:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_191:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_192:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_193:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_194:
  swift_bridgeObjectRelease_n();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001A9B00(char *__src, char *a2, unint64_t a3, char *__dst)
{
  Swift::Int v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v8 = a2 - __src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  BOOL v27 = __src;
  Swift::Int v26 = __dst;
  if (v9 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      Swift::String v17 = &v4[8 * v13];
      Swift::Bool v25 = v17;
      BOOL v27 = v5;
      Swift::String v24 = v6;
      if (v6 < v5 && v11 >= 8)
      {
        Swift::Bool v18 = (char *)(a3 - 8);
        uint64_t v19 = v5;
        uint64_t v23 = v4;
        do
        {
          Swift::String v20 = v18 + 8;
          v19 -= 8;
          swift_retain();
          swift_retain();
          BOOL v21 = sub_1001A3BF0();
          swift_release();
          swift_release();
          if (v21)
          {
            if (v20 != v5 || v18 >= v5) {
              *(void *)Swift::Bool v18 = *(void *)v19;
            }
            BOOL v27 = v19;
          }
          else
          {
            Swift::Bool v25 = v17 - 8;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(void *)Swift::Bool v18 = *((void *)v17 - 1);
            }
            uint64_t v19 = v5;
            v17 -= 8;
          }
          if (v19 <= v24) {
            break;
          }
          v18 -= 8;
          uint64_t v5 = v19;
        }
        while (v17 > v23);
      }
      goto LABEL_42;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[8 * v9] <= __dst) {
      memmove(__dst, __src, 8 * v9);
    }
    uint64_t v14 = &v4[8 * v9];
    Swift::Bool v25 = v14;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      do
      {
        swift_retain();
        swift_retain();
        BOOL v15 = sub_1001A3BF0();
        swift_release();
        swift_release();
        if (v15)
        {
          uint64_t v16 = v5 + 8;
          if (v6 < v5 || v6 >= v16 || v6 != v5) {
            *(void *)uint64_t v6 = *(void *)v5;
          }
        }
        else
        {
          if (v6 != v4) {
            *(void *)uint64_t v6 = *(void *)v4;
          }
          v4 += 8;
          Swift::Int v26 = v4;
          uint64_t v16 = v5;
        }
        v6 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v5 = v16;
      }
      while ((unint64_t)v16 < a3);
      BOOL v27 = v6;
    }
LABEL_42:
    sub_10025CAC0(&v27, &v26, &v25);
    return 1;
  }
  swift_bridgeObjectRelease();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001A9DE4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v24 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v26 = *a4;
    uint64_t v5 = (void *)(*a4 + 8 * a3 - 8);
    sub_1001AA530();
LABEL_6:
    uint64_t v7 = v24;
    Swift::Bool v25 = v5;
    uint64_t v27 = v4;
    while (1)
    {
      uint64_t v28 = v7;
      swift_retain();
      swift_retain();
      uint64_t v8 = StringProtocol.localizedLowercase.getter();
      Swift::Int v10 = v9;
      LegacyLockup.title.getter();
      if (v11
        && (StringProtocol.localizedLowercase.getter(),
            swift_bridgeObjectRelease(),
            v12._uint64_t countAndFlagsBits = v8,
            v12._unint64_t object = v10,
            Swift::Bool v13 = String.hasPrefix(_:)(v12),
            swift_bridgeObjectRelease(),
            v13))
      {
        LegacyLockup.title.getter();
        if (!v14)
        {
          swift_release();
          swift_release();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v6 = v27;
LABEL_22:
          uint64_t v21 = v28;
          goto LABEL_29;
        }
        StringProtocol.localizedLowercase.getter();
        swift_bridgeObjectRelease();
        v15._uint64_t countAndFlagsBits = v8;
        v15._unint64_t object = v10;
        Swift::Bool v16 = String.hasPrefix(_:)(v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v16)
        {
          swift_release();
          uint64_t result = swift_release();
          uint64_t v6 = v27;
          goto LABEL_22;
        }
        type metadata accessor for LegacyEpisodeLockup();
        if (swift_dynamicCastClass())
        {
          unsigned int v17 = 2;
          goto LABEL_24;
        }
      }
      else
      {
        LegacyLockup.title.getter();
        if (v18)
        {
          StringProtocol.localizedLowercase.getter();
          swift_bridgeObjectRelease();
          v19._uint64_t countAndFlagsBits = v8;
          v19._unint64_t object = v10;
          Swift::Bool v20 = String.hasPrefix(_:)(v19);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v20) {
            goto LABEL_4;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        type metadata accessor for LegacyEpisodeLockup();
        if (swift_dynamicCastClass())
        {
          unsigned int v17 = 2;
          goto LABEL_24;
        }
      }
      type metadata accessor for LegacyChannelLockup();
      unsigned int v17 = swift_dynamicCastClass() != 0;
LABEL_24:
      if (swift_dynamicCastClass())
      {
        swift_release();
        uint64_t result = swift_release();
        uint64_t v6 = v27;
        uint64_t v21 = v28;
        if (v17 >= 2) {
          goto LABEL_5;
        }
      }
      else
      {
        type metadata accessor for LegacyChannelLockup();
        if (!swift_dynamicCastClass())
        {
LABEL_4:
          swift_release();
          uint64_t result = swift_release();
          uint64_t v6 = v27;
LABEL_5:
          uint64_t v4 = v6 + 1;
          uint64_t v5 = v25 + 1;
          if (v4 == a2) {
            return result;
          }
          goto LABEL_6;
        }
        swift_release();
        uint64_t result = swift_release();
        uint64_t v6 = v27;
        uint64_t v21 = v28;
        if (v17) {
          goto LABEL_5;
        }
      }
LABEL_29:
      if (!v26)
      {
        __break(1u);
        return result;
      }
      uint64_t v22 = *v5;
      *uint64_t v5 = v5[1];
      v5[1] = v22;
      --v5;
      uint64_t v7 = v21 + 1;
      if (v6 == v7) {
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1001AA188(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_10025D8E8(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  swift_bridgeObjectRetain();
  sub_1001A8D50(v6);
  swift_bridgeObjectRelease();
  specialized ContiguousArray._endMutation()();
  return swift_bridgeObjectRelease_n();
}

void *sub_1001AA244()
{
  uint64_t v0 = (objc_class *)type metadata accessor for MTDebugActionTestCategory();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  uint64_t v2 = &v1[OBJC_IVAR____TtC8Podcasts25MTDebugActionTestCategory_name];
  *(void *)uint64_t v2 = 0x64616F6C6E776F44;
  *((void *)v2 + 1) = 0xE900000000000073;
  Swift::Int v3 = &v1[OBJC_IVAR____TtC8Podcasts25MTDebugActionTestCategory_title];
  *(void *)Swift::Int v3 = 0x64616F6C6E776F44;
  *((void *)v3 + 1) = 0xE900000000000073;
  v18.receiver = v1;
  v18.super_class = v0;
  id v4 = [super init];
  unsigned int v17 = _swiftEmptyArrayStorage;
  sub_100054B78(&qword_1005F7658);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D010;
  uint64_t v6 = (objc_class *)type metadata accessor for MTDebugActionTestCase();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_category];
  *(void *)&v7[OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_category + 24] = v0;
  *((void *)v8 + 4) = sub_100042FDC((unint64_t *)&qword_1005F7660, (void (*)(uint64_t))type metadata accessor for MTDebugActionTestCategory);
  *(void *)uint64_t v8 = v4;
  uint64_t v9 = &v7[OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_name];
  *(void *)uint64_t v9 = 0x6F44656C62616E45;
  *((void *)v9 + 1) = 0xEF7364616F6C6E77;
  Swift::Int v10 = &v7[OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_title];
  *(void *)Swift::Int v10 = 0xD000000000000022;
  *((void *)v10 + 1) = 0x80000001004D3E30;
  uint64_t v11 = (uint64_t (**)())&v7[OBJC_IVAR____TtC8Podcasts21MTDebugActionTestCase_handler];
  *uint64_t v11 = sub_1001A4320;
  v11[1] = 0;
  v16.receiver = v7;
  v16.super_class = v6;
  id v12 = v4;
  id v13 = [super init];
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = sub_100042FDC(&qword_1005F7668, (void (*)(uint64_t))type metadata accessor for MTDebugActionTestCase);
  *(void *)(inited + 32) = v13;
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_1001B13B4(v14);

  swift_setDeallocating();
  sub_100054B78(&qword_1005F7670);
  swift_arrayDestroy();
  return v17;
}

uint64_t sub_1001AA4D0()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1001AA508()
{
  return Promise.resolve(_:)();
}

unint64_t sub_1001AA530()
{
  unint64_t result = qword_1005F76B0;
  if (!qword_1005F76B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F76B0);
  }
  return result;
}

uint64_t sub_1001AA58C(uint64_t a1)
{
  return sub_100057EC8(a1, type metadata accessor for LibraryDataProvider._Station, (uint64_t (*)(uint64_t, uint64_t))sub_10019F798);
}

uint64_t sub_1001AA5BC()
{
  uint64_t v1 = (int *)(type metadata accessor for LibraryDataProvider._Station(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();

  uint64_t v3 = v2 + v1[9];
  uint64_t v4 = type metadata accessor for StationSortOrder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001AA6D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001AA73C(a1, 25, (void (*)(uint64_t))sub_1001B779C, a2);
}

uint64_t sub_1001AA6F0(uint64_t a1)
{
  return sub_100057EC8(a1, type metadata accessor for LibraryDataProvider._Station, (uint64_t (*)(uint64_t, uint64_t))sub_10019F83C);
}

uint64_t sub_1001AA720@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001AA73C(a1, 4, (void (*)(uint64_t))sub_1001B7768, a2);
}

uint64_t sub_1001AA73C@<X0>(uint64_t *a1@<X0>, int a2@<W1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  return sub_10019FA70(a1, a2, a3, a4);
}

uint64_t sub_1001AA7C8()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for EpisodeListSettings);
}

uint64_t sub_1001AA7E0(uint64_t a1)
{
  return sub_1001AB028(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10019CAC0);
}

uint64_t sub_1001AA7F8()
{
  uint64_t v1 = type metadata accessor for EpisodeListSettings();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1001AA8E8@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for EpisodeListSettings() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_10019E2EC(a1, v2 + v6, v8, v9, a2);
}

uint64_t sub_1001AA9A4()
{
  uint64_t v1 = type metadata accessor for EpisodeListSettings();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1001AAA34@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for EpisodeListSettings();

  return sub_10019DC18(a1, a2);
}

uint64_t sub_1001AAABC()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for EpisodeListSettings);
}

uint64_t sub_1001AAAD4(uint64_t a1)
{
  return sub_100057EC8(a1, (uint64_t (*)(void))&type metadata accessor for EpisodeListSettings, (uint64_t (*)(uint64_t, uint64_t))sub_10019AA28);
}

uint64_t sub_1001AAB00()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for EpisodeListSettings);
}

uint64_t sub_1001AAB18(uint64_t a1)
{
  return sub_1001AB130(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10019AD18);
}

unint64_t sub_1001AAB30()
{
  unint64_t result = qword_1005F7868;
  if (!qword_1005F7868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F7868);
  }
  return result;
}

uint64_t sub_1001AAB84()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for EpisodeListSettings);
}

uint64_t sub_1001AAB9C(uint64_t a1)
{
  return sub_100057EC8(a1, (uint64_t (*)(void))&type metadata accessor for EpisodeListSettings, (uint64_t (*)(uint64_t, uint64_t))sub_10019BBF0);
}

uint64_t sub_1001AABCC(uint64_t a1)
{
  return sub_1001AB3D8(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_10019C010);
}

unint64_t sub_1001AABE4()
{
  unint64_t result = qword_1005F7890;
  if (!qword_1005F7890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F7890);
  }
  return result;
}

uint64_t sub_1001AAC38()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1001AAC70(NSPredicate *a1@<X8>)
{
  MTPlaylist.unsafePredicateForStationEpisodesFromPodcast(podcastUuid:)(a1, v1[1]);
  a1->super.Class isa = v3;
}

uint64_t sub_1001AACA4()
{
  uint64_t v1 = type metadata accessor for EpisodeListSettings();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001AAD6C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for EpisodeListSettings() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v2 + v6;
  uint64_t v10 = *(void *)(v2 + v7);
  uint64_t v11 = *(void **)(v2 + v8);
  id v12 = (uint64_t *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];

  return sub_1001A05A0(a1, a2, v9, v10, v11, v13, v14);
}

uint64_t sub_1001AAE34()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001AAE6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1001AAEA8()
{
  uint64_t v1 = type metadata accessor for EpisodeListSettings();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1001AAF74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for EpisodeListSettings() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1001A0AB4(a1, v6, v7, v8, a2);
}

uint64_t sub_1001AAFF8()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for EpisodeListSettings);
}

uint64_t sub_1001AB010(uint64_t a1)
{
  return sub_1001AB028(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1001A0DA0);
}

uint64_t sub_1001AB028(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for EpisodeListSettings() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_1001AB0BC()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for EpisodeListSettings);
}

uint64_t sub_1001AB0D4(uint64_t a1)
{
  return sub_100057EC8(a1, (uint64_t (*)(void))&type metadata accessor for EpisodeListSettings, (uint64_t (*)(uint64_t, uint64_t))sub_100197944);
}

uint64_t sub_1001AB100()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for EpisodeListSettings);
}

uint64_t sub_1001AB118(uint64_t a1)
{
  return sub_1001AB130(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100197C40);
}

uint64_t sub_1001AB130(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for EpisodeListSettings() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_1001AB1C4()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for EpisodeListSettings);
}

uint64_t sub_1001AB1DC(uint64_t a1)
{
  return sub_100057EC8(a1, (uint64_t (*)(void))&type metadata accessor for EpisodeListSettings, (uint64_t (*)(uint64_t, uint64_t))sub_100198BDC);
}

uint64_t sub_1001AB208(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100044244(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001AB270()
{
  uint64_t v1 = type metadata accessor for Calendar();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for EpisodeListSettings();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_1001AB3C0(uint64_t a1)
{
  return sub_1001AB3D8(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_100198FB8);
}

uint64_t sub_1001AB3D8(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for Calendar() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for EpisodeListSettings() - 8);
  uint64_t v8 = v2 + ((v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a2(a1, v2 + v5, v8);
}

uint64_t sub_1001AB4D0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100199C70(a1, a2, a3);
}

uint64_t sub_1001AB4D8(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, *((void *)a1 + 1), a1[16]);
}

uint64_t sub_1001AB50C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001AB54C(void *a1)
{
  return sub_100196F90(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001AB558(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001AB5C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001AB620(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1001AB688()
{
  unint64_t result = qword_1005FBC20;
  if (!qword_1005FBC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FBC20);
  }
  return result;
}

uint64_t sub_1001AB6DC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001AB724()
{
  return sub_100196D74(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AB730()
{
  return Promise.resolve(_:)();
}

uint64_t sub_1001AB758()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001AB790()
{
  return sub_1003BC6FC();
}

uint64_t sub_1001AB798()
{
  return sub_100058550((uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_1001AB7B0()
{
  sub_10004D2D8(v0 + 16);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001AB850()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for PresentationSource();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001ABB04(v12);
  uint64_t result = sub_1001AC574((uint64_t)v12, (uint64_t)v13);
  if (v14 == 3) {
    return result;
  }
  sub_1001AC5DC((uint64_t)v13, (uint64_t)v15);
  sub_1001AC5DC((uint64_t)v15, (uint64_t)v16);
  if (v17 < 3 || v16[0] != 1) {
    return sub_1001AC638((uint64_t)v12);
  }
  sub_100041A98(v0 + 4, v0[7]);
  dispatch thunk of LibraryActionControllerProtocol.unsubscribe(podcast:)();
  swift_release();
  swift_beginAccess();
  if (!v0[3])
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_12;
  }
  swift_retain();
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_12:
    sub_1001AC638((uint64_t)v12);
    return sub_1001AC7B4((uint64_t)v3);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v3, v4);
  sub_100041A98(v0 + 10, v0[13]);
  uint64_t v9 = dispatch thunk of LibraryRemovalControllerProtocol.removalOptionsAfterUnfollow(uuid:)();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)();
  }
  sub_1001AC638((uint64_t)v12);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1001ABB04@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowOffer();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t result = __chkstk_darwin(v11);
  objc_super v16 = (char *)&v24 - v15;
  uint64_t v17 = *(void *)(v1 + 16);
  if (v17)
  {
    uint64_t v18 = v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess();
    sub_1001AC690(v18, (uint64_t)v13);
    sub_1001AC6F4((uint64_t)v13, (uint64_t)v16);
    sub_1001AC690((uint64_t)v16, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
      ShowOffer.adamId.getter();
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v32 = 2;
      dispatch thunk of PodcastStateController.stateMachine(for:initialState:)();
      dispatch thunk of PodcastStateMachine.currentState.getter();
      uint64_t v19 = v25;
      uint64_t v20 = v26;
      uint64_t v21 = v27;
      uint64_t v22 = v28;
      uint64_t v24 = v3;
      uint64_t v23 = v29;
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v32 = 2;
      dispatch thunk of PodcastStateController.stateMachine(for:initialState:)();
      swift_bridgeObjectRelease();
      dispatch thunk of PodcastStateMachine.currentState.getter();
      uint64_t v19 = v25;
      uint64_t v20 = v26;
      uint64_t v21 = v27;
      uint64_t v22 = v28;
      uint64_t v23 = v29;
      swift_release();
    }
    uint64_t result = sub_1001AC758((uint64_t)v16);
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v21 = 3;
  }
  *a1 = v19;
  a1[1] = v20;
  a1[2] = v21;
  a1[3] = v22;
  a1[4] = v23;
  return result;
}

uint64_t sub_1001ABDB4()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 32);
  swift_release();
  sub_10004D2D8(v0 + 80);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts31UnsubscribePodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1001ABE7C()
{
  return type metadata accessor for UnsubscribePodcastContextAction();
}

uint64_t type metadata accessor for UnsubscribePodcastContextAction()
{
  uint64_t result = qword_1005F7AE8;
  if (!qword_1005F7AE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001ABED0()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001ABF88()
{
  return swift_retain();
}

uint64_t sub_1001ABF90(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t sub_1001ABFA0()
{
  id v0 = [self mainBundle];
  v5._unint64_t object = (void *)0xE000000000000000;
  v1._uint64_t countAndFlagsBits = 0x574F4C4C4F464E55;
  v1._unint64_t object = (void *)0xED0000574F48535FLL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._unint64_t object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1001AC048()
{
  return 0x69632E73756E696DLL;
}

uint64_t sub_1001AC068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts31UnsubscribePodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1001AC0DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.unsubscribe(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_1001AC1B4()
{
  if (*(void *)(v0 + 16))
  {
    sub_1001ABB04(v3);
    sub_1001AC574((uint64_t)v3, (uint64_t)v4);
    if (v5 != 3)
    {
      sub_1001AC5DC((uint64_t)v4, (uint64_t)v6);
      sub_1001AC5DC((uint64_t)v6, (uint64_t)v7);
      if (v8 >= 3)
      {
        char v1 = v7[0];
        sub_1001AC638((uint64_t)v3);
        if (v1) {
          return 1;
        }
      }
      else
      {
        sub_1001AC638((uint64_t)v3);
      }
    }
  }
  return 0;
}

uint64_t sub_1001AC250(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

uint64_t sub_1001AC2B0()
{
  return swift_retain();
}

uint64_t sub_1001AC2E8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t (*sub_1001AC330())()
{
  return j__swift_endAccess;
}

void *sub_1001AC388(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1001AC3E8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1001AC448(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1001AC4A8(uint64_t a1)
{
  uint64_t result = sub_1001AC530((unint64_t *)&unk_100608BE0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001AC4EC(uint64_t a1)
{
  uint64_t result = sub_1001AC530(&qword_1005F7C00);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001AC530(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UnsubscribePodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001AC574(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(qword_1005F7C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AC5DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001AC638(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001AC66C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 != 3) {
    return sub_1001AC67C(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1001AC67C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001AC690(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PodcastContextActionDataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AC6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PodcastContextActionDataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AC758(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PodcastContextActionDataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001AC7B4(uint64_t a1)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_100605DC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001AC814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

uint64_t sub_1001AC81C()
{
  uint64_t result = type metadata accessor for Binding();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001AC8C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = v5;
  unint64_t v7 = v5 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = ((v6 + 16) & ~v6) + *(void *)(v4 + 64) + 7;
  unint64_t v9 = ((v8 + (v7 & (v5 + 64))) & 0xFFFFFFFFFFFFFFF8) + 16;
  int v10 = v5 & 0x100000;
  if (v6 > 7 || v10 != 0 || v9 > 0x18)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + (v7 & (v6 + 16));
  }
  else
  {
    uint64_t v31 = *(void *)(a3 + 16);
    uint64_t v14 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v14;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    unint64_t v15 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = ((unint64_t)a2 + 39) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    char v19 = *(unsigned char *)(v16 + 16);
    uint64_t v32 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001ACAB4(v17, v18, v19);
    *(void *)unint64_t v15 = v17;
    *(void *)(v15 + 8) = v18;
    *(unsigned char *)(v15 + 16) = v19;
    *(void *)(v15 + 24) = *(void *)(v16 + 24);
    uint64_t v20 = (void *)(v7 & (v15 + 39));
    uint64_t v21 = (void *)(v7 & (v16 + 39));
    *uint64_t v20 = *v21;
    uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v22 = *v23;
    uint64_t v24 = ((unint64_t)v22 + v6 + 8) & ~v6;
    uint64_t v25 = ((unint64_t)v23 + v6 + 8) & ~v6;
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v26(v24, v25, v31);
    uint64_t v27 = (void *)(((unint64_t)v21 + v32) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = v27[1];
    uint64_t v29 = (void *)(((unint64_t)v20 + v32) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v29 = *v27;
    v29[1] = v28;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1001ACAB4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1001ACAC4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
  sub_1001ACBD0(*(void *)v4, *(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))((v7 + ((((v4 + (v7 | 7) + 32) & ~(v7 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7, v5);

  return swift_release();
}

uint64_t sub_1001ACBD0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001ACBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  unint64_t v6 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (a2 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(v7 + 8);
  char v10 = *(unsigned char *)(v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001ACAB4(v8, v9, v10);
  *(void *)unint64_t v6 = v8;
  *(void *)(v6 + 8) = v9;
  *(unsigned char *)(v6 + 16) = v10;
  *(void *)(v6 + 24) = *(void *)(v7 + 24);
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v13 = v12 + 16;
  uint64_t v14 = *(_DWORD *)(v12 + 80);
  unint64_t v15 = *(_DWORD *)(v12 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (void *)((v14 + 32 + v6) & v15);
  uint64_t v17 = (void *)((v14 + 32 + v7) & v15);
  *unint64_t v16 = *v17;
  uint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  uint64_t v20 = ((unint64_t)v18 + v14 + 8) & ~v14;
  uint64_t v21 = ((unint64_t)v19 + v14 + 8) & ~v14;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v29(v20, v21, v11);
  uint64_t v22 = *(void *)(v13 + 48) + ((v14 + 16) & ~v14) + 7;
  unint64_t v23 = (unint64_t)v16 + v22;
  uint64_t v24 = (uint64_t *)(((unint64_t)v17 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  uint64_t v27 = (void *)(v23 & 0xFFFFFFFFFFFFFFF8);
  void *v27 = v26;
  v27[1] = v25;
  swift_retain();
  return a1;
}

uint64_t sub_1001ACD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (a2 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(v7 + 8);
  char v10 = *(unsigned char *)(v7 + 16);
  sub_1001ACAB4(*(void *)v7, v9, v10);
  uint64_t v11 = *(void *)v6;
  uint64_t v12 = *(void *)(v6 + 8);
  char v13 = *(unsigned char *)(v6 + 16);
  *(void *)unint64_t v6 = v8;
  *(void *)(v6 + 8) = v9;
  *(unsigned char *)(v6 + 16) = v10;
  sub_1001ACBD0(v11, v12, v13);
  *(void *)(v6 + 24) = *(void *)(v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80);
  unint64_t v17 = *(_DWORD *)(v15 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (void *)((v16 + 32 + v6) & v17);
  char v19 = (void *)((v16 + 32 + v7) & v17);
  *uint64_t v18 = *v19;
  swift_retain();
  swift_release();
  uint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 24))(((unint64_t)v20 + v16 + 8) & ~v16, ((unint64_t)v21 + v16 + 8) & ~v16, v14);
  uint64_t v22 = *(void *)(v15 + 64) + ((v16 + 16) & ~v16) + 7;
  unint64_t v23 = (void *)(((unint64_t)v18 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v19 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  *unint64_t v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1001ACF40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (_OWORD *)(((unint64_t)a1 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (_OWORD *)(((unint64_t)a2 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v7 = v6[1];
  *uint64_t v5 = *v6;
  v5[1] = v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  unint64_t v10 = *(_DWORD *)(v8 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = (void *)(((unint64_t)v5 + v9 + 32) & v10);
  uint64_t v12 = (void *)(((unint64_t)v6 + v9 + 32) & v10);
  *uint64_t v11 = *v12;
  char v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *char v13 = *v14;
  uint64_t v15 = v8 + 32;
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))(((unint64_t)v13 + v9 + 8) & ~v9, ((unint64_t)v14 + v9 + 8) & ~v9);
  uint64_t v16 = *(void *)(v15 + 32) + ((v9 + 16) & ~v9) + 7;
  *(_OWORD *)(((unint64_t)v11 + v16) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + v16) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1001AD058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  unint64_t v7 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (a2 + 39) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 16);
  uint64_t v10 = *(void *)v7;
  uint64_t v11 = *(void *)(v7 + 8);
  char v12 = *(unsigned char *)(v7 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(unsigned char *)(v7 + 16) = v9;
  sub_1001ACBD0(v10, v11, v12);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a3 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  unint64_t v16 = *(_DWORD *)(v14 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (void *)((v15 + 32 + v7) & v16);
  uint64_t v18 = (void *)((v15 + 32 + v8) & v16);
  void *v17 = *v18;
  swift_release();
  char v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  *char v19 = *v20;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 40))(((unint64_t)v19 + v15 + 8) & ~v15, ((unint64_t)v20 + v15 + 8) & ~v15, v13);
  uint64_t v21 = *(void *)(v14 + 64) + ((v15 + 16) & ~v15) + 7;
  *(_OWORD *)(((unint64_t)v17 + v21) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v18 + v21) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1001AD1E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= 0) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v7;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v10 = v8 | 7;
  if (v9 < a2)
  {
    unint64_t v11 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v8 + 16) & ~v8) + ((v8 + 64) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unsigned int v12 = a2 - v9;
    uint64_t v13 = v11 & 0xFFFFFFF8;
    if ((v11 & 0xFFFFFFF8) != 0) {
      unsigned int v14 = 2;
    }
    else {
      unsigned int v14 = v12 + 1;
    }
    if (v14 >= 0x10000) {
      unsigned int v15 = 4;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v14 < 0x100) {
      unsigned int v15 = 1;
    }
    if (v14 >= 2) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *(unsigned __int8 *)(a1 + v11);
        if (!v17) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v17 = *(unsigned __int16 *)(a1 + v11);
        if (v17) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1001AD378);
      case 4:
        int v17 = *(_DWORD *)(a1 + v11);
        if (!v17) {
          break;
        }
LABEL_25:
        int v19 = v17 - 1;
        if (v13)
        {
          int v19 = 0;
          LODWORD(v13) = *(_DWORD *)a1;
        }
        return v9 + (v13 | v19) + 1;
      default:
        break;
    }
  }
  if (v9 != 0x7FFFFFFF) {
    return (*(uint64_t (**)(unint64_t))(v5 + 48))((v8
  }
                                                                  + ((((((a1 + 39) & 0xFFFFFFFFFFFFFFF8) + v10 + 32) & ~v10)
                                                                    + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                  + 8) & ~v8);
  unint64_t v20 = *(void *)(a1 + 8);
  if (v20 >= 0xFFFFFFFF) {
    LODWORD(v20) = -1;
  }
  return (v20 + 1);
}

void sub_1001AD38C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  if (v7 >= 0) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 64) & ~(v9 | 7)) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_19:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_44;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v8 == 0x7FFFFFFF)
            {
              if ((a2 & 0x80000000) != 0)
              {
                *((void *)a1 + 2) = 0;
                *((void *)a1 + 3) = 0;
                *(void *)a1 = a2 ^ 0x80000000;
                *((void *)a1 + 1) = 0;
              }
              else
              {
                *((void *)a1 + 1) = a2 - 1;
              }
            }
            else
            {
              unint64_t v18 = (v9
                   + ((((((unint64_t)(a1 + 39) & 0xFFFFFFFFFFFFFFF8) + (v9 | 7) + 32) & ~(v9 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 8) & ~v9;
              int v19 = *(void (**)(unint64_t))(v6 + 56);
              v19(v18);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
         + ((v9 + 64) & ~(v9 | 7))
         + ((v9 + 16) & ~v9)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_19;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((v9 + 64) & ~(v9 | 7))
       + ((v9 + 16) & ~v9)
       + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((v9 + 64) & ~(v9 | 7))
       + ((v9 + 16) & ~v9)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1001AD5C4);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for CustomLinkPicker()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1001AD604()
{
  return sub_1001B0AF4();
}

uint64_t sub_1001AD61C()
{
  return Binding.projectedValue.getter();
}

uint64_t sub_1001AD658@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  int v19 = a2;
  uint64_t v3 = sub_100044244(&qword_1005F7C90);
  uint64_t v4 = a1[2];
  uint64_t v17 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v16 = a1[5];
  type metadata accessor for CustomLinkPicker.DismissingPicker();
  type metadata accessor for InlinePickerStyle();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  type metadata accessor for Form();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v3;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  unint64_t v32 = sub_1001AEF2C();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v6 = type metadata accessor for NavigationLink();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  size_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unsigned int v12 = (char *)&v16 - v11;
  uint64_t v25 = v4;
  uint64_t v26 = v17;
  uint64_t v27 = v5;
  uint64_t v28 = v16;
  uint64_t v29 = v18;
  uint64_t v20 = v4;
  uint64_t v21 = v17;
  uint64_t v22 = v5;
  uint64_t v23 = v16;
  uint64_t v24 = v18;
  sub_1001AE644((uint64_t)sub_1001AEF88);
  swift_getWitnessTable();
  int v13 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v13(v12, v10, v6);
  int v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  v13(v19, v12, v6);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_1001AD9C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, char *a6@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v42 = a1;
  Swift::Bool v46 = a6;
  uint64_t v10 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  __chkstk_darwin(v10);
  Swift::Bool v43 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v12 = type metadata accessor for CustomLinkPicker.DismissingPicker();
  uint64_t v13 = type metadata accessor for InlinePickerStyle();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v52 = v12;
  uint64_t v53 = v13;
  uint64_t v54 = WitnessTable;
  uint64_t v55 = &protocol witness table for InlinePickerStyle;
  _OWORD v35[2] = swift_getOpaqueTypeMetadata2();
  uint64_t v52 = v12;
  uint64_t v53 = v13;
  uint64_t v54 = WitnessTable;
  uint64_t v55 = &protocol witness table for InlinePickerStyle;
  v35[1] = swift_getOpaqueTypeConformance2();
  uint64_t v15 = type metadata accessor for Form();
  uint64_t v37 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v35 - v16;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v52 = v15;
  uint64_t v53 = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v36 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v21 = (char *)v35 - v20;
  uint64_t v52 = v15;
  uint64_t v53 = v18;
  v35[0] = swift_getOpaqueTypeConformance2();
  uint64_t v52 = OpaqueTypeMetadata2;
  uint64_t v53 = v35[0];
  uint64_t v22 = swift_getOpaqueTypeMetadata2();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v35 - v27;
  uint64_t v47 = v38;
  uint64_t v48 = v39;
  uint64_t v49 = v40;
  Swift::String v50 = v41;
  uint64_t v51 = v42;
  Form.init(content:)();
  View.navigationTitle(_:)();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v15);
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  uint64_t v31 = v45;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v45);
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v21, OpaqueTypeMetadata2);
  unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v32(v28, v26, v22);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v23 + 8);
  v33(v26, v22);
  v32(v46, v28, v22);
  return ((uint64_t (*)(char *, uint64_t))v33)(v28, v22);
}

uint64_t sub_1001ADEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, char *a6@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v51 = a1;
  uint64_t v55 = a6;
  uint64_t v10 = type metadata accessor for InlinePickerStyle();
  uint64_t v48 = v10;
  uint64_t v54 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v53 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_1005F7CA0);
  __chkstk_darwin(v12 - 8);
  Swift::String v50 = (void *)((char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for Binding();
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v44 - v15;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v17 = a2;
  v44[1] = a5;
  void v44[2] = a2;
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  uint64_t v18 = a4;
  v44[0] = a4;
  int v19 = a5;
  uint64_t v20 = type metadata accessor for CustomLinkPicker.DismissingPicker();
  uint64_t v49 = v20;
  uint64_t v52 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v46 = (uint64_t)v44 - v21;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v56 = v20;
  uint64_t v57 = v10;
  uint64_t v58 = WitnessTable;
  uint64_t v59 = &protocol witness table for InlinePickerStyle;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v23 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v24 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v26 = (char *)v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v44 - v27;
  uint64_t v56 = v17;
  uint64_t v57 = v45;
  uint64_t v58 = v18;
  uint64_t v59 = v19;
  uint64_t v29 = type metadata accessor for CustomLinkPicker();
  uint64_t v30 = v51;
  type metadata accessor for Binding();
  uint64_t v31 = (uint64_t)v16;
  Binding.projectedValue.getter();
  unint64_t v32 = (uint64_t *)(v30 + *(int *)(v29 + 60));
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = (uint64_t)v50;
  *Swift::String v50 = KeyPath;
  sub_100054B78(qword_1005F7CA8);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = v46;
  sub_1001AE338(v31, v34, v33, v36, v46);
  swift_retain();
  uint64_t v38 = v53;
  InlinePickerStyle.init()();
  uint64_t v39 = v48;
  uint64_t v40 = v49;
  View.pickerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v39);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v37, v40);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v41(v28, v26, OpaqueTypeMetadata2);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v23 + 8);
  v42(v26, OpaqueTypeMetadata2);
  v41(v55, v28, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v42)(v28, OpaqueTypeMetadata2);
}

uint64_t sub_1001AE338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for Binding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t v11 = type metadata accessor for CustomLinkPicker.DismissingPicker();
  uint64_t v12 = (void *)(a5 + *(int *)(v11 + 52));
  *uint64_t v12 = a2;
  v12[1] = a3;
  return sub_1001AEFE0(a4, a5 + *(int *)(v11 + 56));
}

__n128 sub_1001AE410@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static VerticalAlignment.center.getter();
  sub_1001AE4CC((uint64_t)&v11);
  char v3 = v12;
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  char v6 = v15;
  char v7 = v17;
  uint64_t v8 = v18;
  __n128 result = v11;
  long long v10 = v16;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  return result;
}

uint64_t sub_1001AE4CC@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v9 = Text.foregroundStyle<A>(_:)();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v12 & 1;
  *(void *)(a1 + 72) = v14;
  sub_1001ACAB4(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1001ACAB4(v9, v11, v13);
  swift_bridgeObjectRetain();
  sub_1001ACBD0(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_1001ACBD0(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001AE644(uint64_t a1)
{
  unint64_t v1 = (void (*)(void))__chkstk_darwin(a1);
  v1();
  return NavigationLink.init(destination:label:)();
}

uint64_t sub_1001AE714@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v44 = *(void *)(a1 - 8);
  uint64_t v49 = *(void *)(v44 + 64);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v50 = *(void *)(v6 - 8);
  __chkstk_darwin(v4);
  Swift::Bool v43 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Binding();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v54 = &type metadata for EmptyView;
  uint64_t v55 = v6;
  uint64_t v56 = v11;
  uint64_t v57 = &protocol witness table for EmptyView;
  uint64_t v58 = v12;
  uint64_t v59 = v13;
  uint64_t v37 = v13;
  uint64_t v40 = type metadata accessor for Picker();
  uint64_t v48 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v15 = (char *)&v37 - v14;
  uint64_t v38 = (char *)&v37 - v14;
  uint64_t v41 = *(void *)(v12 + 8);
  uint64_t v46 = type metadata accessor for _ValueActionModifier();
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v47 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v39 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v45 = (char *)&v37 - v19;
  Binding.projectedValue.getter();
  uint64_t v20 = v11;
  sub_1001AEC4C((uint64_t)v10, *(void *)(v2 + *(int *)(a1 + 52)), *(void *)(v2 + *(int *)(a1 + 52) + 8), (uint64_t)UInt64.int64Representation.getter, v11, (uint64_t)v15, (uint64_t)&protocol witness table for EmptyView);
  uint64_t v21 = v43;
  Binding.wrappedValue.getter();
  uint64_t v22 = v44;
  uint64_t v23 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v42, v2, a1);
  unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = v6;
  *((void *)v25 + 3) = v20;
  uint64_t v26 = v37;
  *((void *)v25 + 4) = v12;
  *((void *)v25 + 5) = v26;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v25[v24], v23, a1);
  uint64_t v27 = v40;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v29 = v39;
  uint64_t v30 = v38;
  View.onChange<A>(of:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v6);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v30, v27);
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v52 = WitnessTable;
  uint64_t v53 = v31;
  swift_getWitnessTable();
  uint64_t v32 = v47;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v34 = v45;
  v33(v45, v29, v16);
  Swift::Int v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  v35(v29, v16);
  v33(v51, v34, v16);
  return ((uint64_t (*)(char *, uint64_t))v35)(v34, v16);
}

uint64_t sub_1001AEC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7)
{
  void v13[4] = a3;
  v13[5] = a5;
  v13[0] = a4;
  v13[1] = a6;
  v13[2] = a2;
  v13[3] = a7;
  __chkstk_darwin(a1);
  uint64_t v8 = type metadata accessor for Binding();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v13 - v10, a1, v8);
  ((void (*)(uint64_t))v13[0])(v11);
  Picker.init(selection:label:content:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

uint64_t sub_1001AEDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for DismissAction();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = a3;
  v15[1] = a4;
  v15[2] = a5;
  v15[3] = a6;
  type metadata accessor for CustomLinkPicker.DismissingPicker();
  sub_1001AF048((uint64_t)v13);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1001AEEF0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t type metadata accessor for CustomLinkPicker.DismissingPicker()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1001AEF2C()
{
  unint64_t result = qword_1005F7C98;
  if (!qword_1005F7C98)
  {
    sub_100044244(&qword_1005F7C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F7C98);
  }
  return result;
}

uint64_t sub_1001AEF88()
{
  return sub_1001AEFC8((uint64_t (*)(void, void, void, void, void))sub_1001AD9C8);
}

double sub_1001AEFA0@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1001AE410(a1).n128_u64[0];
  return result;
}

uint64_t sub_1001AEFB0()
{
  return sub_1001AEFC8((uint64_t (*)(void, void, void, void, void))sub_1001ADEC8);
}

uint64_t sub_1001AEFC8(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001AEFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AF048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(qword_1005F7CA8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B0D60(v2, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for DismissAction();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = static os_log_type_t.fault.getter();
    uint64_t v14 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v18[1] = a1;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v18[2] = sub_10004B974(0x417373696D736944, 0xED00006E6F697463, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1001AF300()
{
  return EnvironmentValues.dismiss.getter();
}

void sub_1001AF324()
{
  type metadata accessor for Binding();
  if (v0 <= 0x3F)
  {
    sub_1001B08A4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1001AF3FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  unint64_t v8 = ((v7 + 16) & ~(unint64_t)v7) + *(void *)(v6 + 64);
  uint64_t v9 = type metadata accessor for DismissAction();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11 & 0xF8 | 7;
  if (*(void *)(v10 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  int v14 = (v11 | v7) & 0x100000;
  uint64_t v15 = *a2;
  *a1 = *a2;
  if ((v12 | v7) != 7
    || v14 != 0
    || v13 + ((v12 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + 1 > 0x18)
  {
    a1 = (uint64_t *)(v15 + (((v12 | v7) + 16) & ~(v12 | v7)));
LABEL_28:
    swift_retain();
    return a1;
  }
  uint64_t v34 = v10;
  uint64_t v35 = v9;
  uint64_t v18 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + v7 + 8) & ~(unint64_t)v7;
  unint64_t v21 = ((unint64_t)v19 + v7 + 8) & ~(unint64_t)v7;
  uint64_t v22 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  swift_retain();
  swift_retain();
  v22(v20, v21, v5);
  uint64_t v23 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (void *)(((unint64_t)v23 + v12 + 16) & ~v12);
  uint64_t v27 = (unsigned __int8 *)(((unint64_t)v24 + v12 + 16) & ~v12);
  unsigned int v28 = v27[v13];
  swift_retain();
  if (v28 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v29 = v13;
    }
    else {
      uint64_t v29 = 4;
    }
    switch(v29)
    {
      case 1:
        int v30 = *v27;
        goto LABEL_22;
      case 2:
        int v30 = *(unsigned __int16 *)v27;
        goto LABEL_22;
      case 3:
        int v30 = *(unsigned __int16 *)v27 | (v27[2] << 16);
        goto LABEL_22;
      case 4:
        int v30 = *(_DWORD *)v27;
LABEL_22:
        int v31 = (v30 | ((v28 - 2) << (8 * v13))) + 2;
        unsigned int v32 = v30 + 2;
        if (v13 >= 4) {
          unsigned int v28 = v32;
        }
        else {
          unsigned int v28 = v31;
        }
        break;
      default:
        break;
    }
  }
  if (v28 != 1)
  {
    *uint64_t v26 = *(void *)v27;
    *((unsigned char *)v26 + v13) = 0;
    goto LABEL_28;
  }
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v34 + 16))(v26, v27, v35);
  *((unsigned char *)v26 + v13) = 1;
  return a1;
}

uint64_t sub_1001AF6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 15;
  swift_release();
  swift_release();
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = v5 + 8;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(((v4 & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7);
  unint64_t v8 = (a1 + *(void *)(v6 + 56) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v9 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  int v11 = (unsigned __int8 *)((v8 + v10 + 16) & ~v10);
  unint64_t v12 = *(void *)(v9 + 64);
  if (v12 <= 8) {
    unint64_t v12 = 8;
  }
  unsigned int v13 = v11[v12];
  unsigned int v14 = v13 - 2;
  if (v13 >= 2)
  {
    if (v12 <= 3) {
      uint64_t v15 = v12;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *v11;
        goto LABEL_12;
      case 2:
        int v16 = *(unsigned __int16 *)v11;
        goto LABEL_12;
      case 3:
        int v16 = *(unsigned __int16 *)v11 | (v11[2] << 16);
        goto LABEL_12;
      case 4:
        int v16 = *(_DWORD *)v11;
LABEL_12:
        int v17 = (v16 | (v14 << (8 * v12))) + 2;
        unsigned int v13 = v16 + 2;
        if (v12 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 1)
  {
    uint64_t v18 = *(uint64_t (**)(void))(v9 + 8);
    return v18();
  }
  else
  {
    return swift_release();
  }
}

void *sub_1001AF8C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 16);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 8) & ~v10;
  swift_retain();
  swift_retain();
  v8(v11, v12, v7);
  uint64_t v13 = ((v10 + 16) & ~v10) + *(void *)(v9 + 48) + 7;
  unsigned int v14 = (void *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = v14[1];
  int v16 = (void *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  *int v16 = *v14;
  v16[1] = v15;
  uint64_t v17 = type metadata accessor for DismissAction();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(_DWORD *)(v18 + 80) & 0xF8;
  uint64_t v20 = v19 + 23;
  unint64_t v21 = (unint64_t)v16 + v19 + 23;
  unint64_t v22 = ~v19 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = (void *)(v21 & v22);
  unint64_t v24 = (unsigned __int8 *)(((unint64_t)v14 + v20) & v22);
  if (*(void *)(v18 + 64) <= 8uLL) {
    uint64_t v25 = 8;
  }
  else {
    uint64_t v25 = *(void *)(*(void *)(v17 - 8) + 64);
  }
  unsigned int v26 = v24[v25];
  swift_retain();
  if (v26 >= 2)
  {
    if (v25 <= 3) {
      uint64_t v27 = v25;
    }
    else {
      uint64_t v27 = 4;
    }
    switch(v27)
    {
      case 1:
        int v28 = *v24;
        goto LABEL_13;
      case 2:
        int v28 = *(unsigned __int16 *)v24;
        goto LABEL_13;
      case 3:
        int v28 = *(unsigned __int16 *)v24 | (v24[2] << 16);
        goto LABEL_13;
      case 4:
        int v28 = *(_DWORD *)v24;
LABEL_13:
        int v29 = (v28 | ((v26 - 2) << (8 * v25))) + 2;
        unsigned int v30 = v28 + 2;
        if (v25 >= 4) {
          unsigned int v26 = v30;
        }
        else {
          unsigned int v26 = v29;
        }
        break;
      default:
        break;
    }
  }
  if (v26 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v18 + 16))(v23, v24, v17);
    char v31 = 1;
  }
  else
  {
    *uint64_t v23 = *(void *)v24;
    swift_retain();
    char v31 = 0;
  }
  *((unsigned char *)v23 + v25) = v31;
  return a1;
}

void *sub_1001AFB08(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)v6;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 40) + 7;
  uint64_t v12 = (void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = type metadata accessor for DismissAction();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  uint64_t v18 = v17 + 23;
  unint64_t v19 = (unint64_t)v12 + v17 + 23;
  unint64_t v20 = ~v17 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (unsigned __int8 *)(v19 & v20);
  unint64_t v22 = (unint64_t)v13 + v18;
  uint64_t v23 = (unsigned __int8 *)(v22 & v20);
  if ((v19 & v20) != (v22 & v20))
  {
    uint64_t v24 = v15;
    uint64_t v25 = *(void *)(v15 - 8);
    if (*(void *)(v16 + 64) <= 8uLL) {
      uint64_t v26 = 8;
    }
    else {
      uint64_t v26 = *(void *)(v16 + 64);
    }
    unsigned int v27 = v21[v26];
    unsigned int v28 = v27 - 2;
    if (v27 >= 2)
    {
      if (v26 <= 3) {
        uint64_t v29 = v26;
      }
      else {
        uint64_t v29 = 4;
      }
      switch(v29)
      {
        case 1:
          int v30 = *v21;
          goto LABEL_14;
        case 2:
          int v30 = *(unsigned __int16 *)v21;
          goto LABEL_14;
        case 3:
          int v30 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_14;
        case 4:
          int v30 = *(_DWORD *)v21;
LABEL_14:
          int v31 = (v30 | (v28 << (8 * v26))) + 2;
          unsigned int v27 = v30 + 2;
          if (v26 < 4) {
            unsigned int v27 = v31;
          }
          break;
        default:
          break;
      }
    }
    if (v27 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v25 + 8))(v21, v15);
    }
    else {
      swift_release();
    }
    unsigned int v32 = v23[v26];
    unsigned int v33 = v32 - 2;
    if (v32 >= 2)
    {
      if (v26 <= 3) {
        uint64_t v34 = v26;
      }
      else {
        uint64_t v34 = 4;
      }
      switch(v34)
      {
        case 1:
          int v35 = *v23;
          goto LABEL_28;
        case 2:
          int v35 = *(unsigned __int16 *)v23;
          goto LABEL_28;
        case 3:
          int v35 = *(unsigned __int16 *)v23 | (v23[2] << 16);
          goto LABEL_28;
        case 4:
          int v35 = *(_DWORD *)v23;
LABEL_28:
          int v36 = (v35 | (v33 << (8 * v26))) + 2;
          unsigned int v32 = v35 + 2;
          if (v26 < 4) {
            unsigned int v32 = v36;
          }
          break;
        default:
          break;
      }
    }
    if (v32 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v25 + 16))(v21, v23, v24);
      v21[v26] = 1;
    }
    else
    {
      *(void *)unint64_t v21 = *(void *)v23;
      v21[v26] = 0;
      swift_retain();
    }
  }
  return a1;
}

void *sub_1001AFE00(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(((unint64_t)v5 + v9 + 8) & ~v9, ((unint64_t)v6 + v9 + 8) & ~v9);
  uint64_t v10 = ((v9 + 16) & ~v9) + *(void *)(v8 + 32) + 7;
  uint64_t v11 = (_OWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (_OWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = v14 + 23;
  unint64_t v16 = (unint64_t)v11 + v14 + 23;
  unint64_t v17 = ~v14 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (void *)(v16 & v17);
  unint64_t v19 = (unsigned __int8 *)(((unint64_t)v12 + v15) & v17);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(v13 + 64);
  }
  unsigned int v21 = v19[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *v19;
        goto LABEL_13;
      case 2:
        int v24 = *(unsigned __int16 *)v19;
        goto LABEL_13;
      case 3:
        int v24 = *(unsigned __int16 *)(((unint64_t)v12 + v15) & v17) | (*(unsigned __int8 *)((((unint64_t)v12
                                                                                                 + v15) & v17)
                                                                                               + 2) << 16);
        goto LABEL_13;
      case 4:
        int v24 = *(_DWORD *)v19;
LABEL_13:
        int v25 = (v24 | (v22 << (8 * v20))) + 2;
        unsigned int v21 = v24 + 2;
        if (v20 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    (*(void (**)(void *))(v13 + 32))(v18);
    char v26 = 1;
  }
  else
  {
    char v26 = 0;
    *uint64_t v18 = *(void *)v19;
  }
  *((unsigned char *)v18 + v20) = v26;
  return a1;
}

void *sub_1001B0000(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)v6;
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 24) + 7;
  uint64_t v12 = (_OWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (_OWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_release();
  uint64_t v14 = type metadata accessor for DismissAction();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80) & 0xF8;
  uint64_t v17 = v16 + 23;
  unint64_t v18 = (unint64_t)v12 + v16 + 23;
  unint64_t v19 = ~v16 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = (unsigned __int8 *)(v18 & v19);
  unint64_t v21 = (unint64_t)v13 + v17;
  unsigned int v22 = (unsigned __int8 *)(v21 & v19);
  if ((v18 & v19) != (v21 & v19))
  {
    uint64_t v23 = v14;
    uint64_t v24 = *(void *)(v14 - 8);
    if (*(void *)(v15 + 64) <= 8uLL) {
      uint64_t v25 = 8;
    }
    else {
      uint64_t v25 = *(void *)(v15 + 64);
    }
    unsigned int v26 = v20[v25];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v20;
          goto LABEL_14;
        case 2:
          int v29 = *(unsigned __int16 *)v20;
          goto LABEL_14;
        case 3:
          int v29 = *(unsigned __int16 *)v20 | (v20[2] << 16);
          goto LABEL_14;
        case 4:
          int v29 = *(_DWORD *)v20;
LABEL_14:
          int v30 = (v29 | (v27 << (8 * v25))) + 2;
          unsigned int v26 = v29 + 2;
          if (v25 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v24 + 8))(v20, v14);
    }
    else {
      swift_release();
    }
    unsigned int v31 = v22[v25];
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v33 = v25;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *v22;
          goto LABEL_28;
        case 2:
          int v34 = *(unsigned __int16 *)v22;
          goto LABEL_28;
        case 3:
          int v34 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_28;
        case 4:
          int v34 = *(_DWORD *)v22;
LABEL_28:
          int v35 = (v34 | (v32 << (8 * v25))) + 2;
          unsigned int v31 = v34 + 2;
          if (v25 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 32))(v20, v22, v23);
      char v36 = 1;
    }
    else
    {
      char v36 = 0;
      *(void *)uint64_t v20 = *(void *)v22;
    }
    v20[v25] = v36;
  }
  return a1;
}

uint64_t sub_1001B02DC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v10 = 8;
  if (*(void *)(v9 + 64) > 8uLL) {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_25;
  }
  uint64_t v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  unint64_t v13 = v10 + ((v12 + ((*(void *)(v6 + 64) + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_25:
      unint64_t v19 = (unint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if ((v7 & 0x80000000) != 0)
      {
        unint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
        return v21(((unint64_t)v19 + v11 + 8) & ~v11, v7, v5);
      }
      else
      {
        unint64_t v20 = *v19;
        if (v20 >= 0xFFFFFFFF) {
          LODWORD(v20) = -1;
        }
        return (v20 + 1);
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_25;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *a1;
        break;
      case 3:
        LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v13 | v18) + 1;
}

void sub_1001B0570(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v12 = 8;
  if (*(void *)(v11 + 64) > 8uLL) {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  size_t v15 = v12 + ((v14 + ((*(void *)(v8 + 64) + ((v13 + 16) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v14) + 1;
  if (a3 <= v10)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v10 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1001B087CLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        unint64_t v21 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if ((v9 & 0x80000000) != 0)
        {
          uint64_t v23 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(((unint64_t)v21 + v13 + 8) & ~v13, a2, v9, v7);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v22 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v22 = (a2 - 1);
          }
          *unint64_t v21 = v22;
        }
      }
      return;
  }
}

void sub_1001B08A4()
{
  if (!qword_1005F7D30)
  {
    type metadata accessor for DismissAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1005F7D30);
    }
  }
}

uint64_t sub_1001B08FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001B0ADC()
{
  return sub_1001B0AF4();
}

uint64_t sub_1001B0AF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B0B28()
{
  long long v7 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)(type metadata accessor for CustomLinkPicker.DismissingPicker() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  uint64_t v3 = type metadata accessor for Binding();
  (*(void (**)(uint64_t, void))(*(void *)(v7 - 8) + 8))(v2 + *(int *)(v3 + 32), v7);
  swift_release();
  uint64_t v4 = v2 + v1[16];
  sub_100054B78(qword_1005F7CA8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1001B0CB4(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(type metadata accessor for CustomLinkPicker.DismissingPicker() - 8);
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1001AEDDC(a1, v8, v3, v4, v5, v6);
}

uint64_t sub_1001B0D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(qword_1005F7CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B0DC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001B0EC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ParentFlowController.viewControllerProvider.getter();
  if (result)
  {
    uint64_t v3 = (objc_class *)type metadata accessor for LibraryTabGroupManager();
    id v4 = objc_allocWithZone(v3);
    swift_retain();
    uint64_t result = LibraryTabGroupManager.init(asPartOf:viewControllerProvider:)();
    a1[3] = (uint64_t)v3;
    a1[4] = (uint64_t)&protocol witness table for LibraryTabGroupManager;
    *a1 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B0F54()
{
  return swift_dynamicCast();
}

uint64_t sub_1001B0FD0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_10004CEAC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B1124(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8 = a4 >> 1;
  uint64_t v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_11;
  }
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v9;
  if (!__OFADD__(v10, v9)) {
    goto LABEL_4;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *int64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v11 = v14 + v9;
      if (__OFADD__(v14, v9)) {
        goto LABEL_14;
      }
LABEL_4:
      unint64_t v7 = *v4;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *int64_t v4 = v7;
      if (!isUniquelyReferenced_nonNull_bridgeObject) {
        goto LABEL_15;
      }
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      if ((v7 & 0x4000000000000000) != 0) {
        goto LABEL_15;
      }
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_15;
      }
      if (v8 != v5) {
        goto LABEL_18;
      }
    }
    goto LABEL_25;
  }
LABEL_18:
  uint64_t v15 = *(void *)(v13 + 16);
  if ((*(void *)(v13 + 24) >> 1) - v15 < v9)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 < 0) {
    goto LABEL_30;
  }
  unint64_t v16 = v13 + 8 * v15 + 32;
  unint64_t v17 = v6 + 8 * v5;
  if (v17 < v16 + 8 * v9 && v16 < v17 + 8 * v9) {
    goto LABEL_30;
  }
  type metadata accessor for LegacyLockup();
  swift_arrayInitWithCopy();
  if (v9)
  {
    uint64_t v18 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v19 = __OFADD__(v18, v9);
    uint64_t v20 = v18 + v9;
    if (!v19)
    {
      *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
      goto LABEL_25;
    }
    goto LABEL_29;
  }
LABEL_25:
  swift_unknownObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1001B13B4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1002EF360(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_100054B78(&qword_1005F7670);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B152C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1002EF380(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B1678(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1001B2734(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1, (void (*)(void))&type metadata accessor for LegacyEpisodeLockup, (unint64_t *)&unk_1005F7E40, (uint64_t *)&unk_1005FBC30, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1003F8E18);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1001B187C(unint64_t a1)
{
  return sub_1001B2428(a1, &qword_1005F7E20, (unint64_t *)&unk_1005F7E30, &qword_1005F7E28, (uint64_t *)sub_1003F8E80);
}

uint64_t sub_1001B18AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1002EF774(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for ModernShelf() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B1A50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_1002EF8B8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B1BAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8 = a4 >> 1;
  uint64_t v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_11;
  }
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v9;
  if (!__OFADD__(v10, v9)) {
    goto LABEL_4;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *int64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v11 = v14 + v9;
      if (__OFADD__(v14, v9)) {
        goto LABEL_14;
      }
LABEL_4:
      unint64_t v7 = *v4;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *int64_t v4 = v7;
      if (!isUniquelyReferenced_nonNull_bridgeObject) {
        goto LABEL_15;
      }
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      if ((v7 & 0x4000000000000000) != 0) {
        goto LABEL_15;
      }
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_15;
      }
      if (v8 != v5) {
        goto LABEL_18;
      }
    }
    goto LABEL_25;
  }
LABEL_18:
  uint64_t v15 = *(void *)(v13 + 16);
  if ((*(void *)(v13 + 24) >> 1) - v15 < v9)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 < 0) {
    goto LABEL_30;
  }
  unint64_t v16 = v13 + 8 * v15 + 32;
  unint64_t v17 = v6 + 8 * v5;
  if (v17 < v16 + 8 * v9 && v16 < v17 + 8 * v9) {
    goto LABEL_30;
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
  swift_arrayInitWithCopy();
  if (v9)
  {
    uint64_t v18 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v19 = __OFADD__(v18, v9);
    uint64_t v20 = v18 + v9;
    if (!v19)
    {
      *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
      goto LABEL_25;
    }
    goto LABEL_29;
  }
LABEL_25:
  swift_unknownObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1001B1E4C(unint64_t a1)
{
  return sub_1001B1E9C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1001B2D98);
}

uint64_t sub_1001B1E64(uint64_t a1)
{
  return sub_1001B20B0(a1, (uint64_t (*)(void))sub_1002EF760, &qword_1005F8430);
}

uint64_t sub_1001B1E84(unint64_t a1)
{
  return sub_1001B1E9C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1001B2FB8);
}

uint64_t sub_1001B1E9C(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1001B2070(uint64_t a1)
{
  return sub_1001B20B0(a1, (uint64_t (*)(void))sub_1002EF5E8, (uint64_t *)&unk_1005F7F40);
}

uint64_t sub_1001B2090(uint64_t a1)
{
  return sub_1001B20B0(a1, (uint64_t (*)(void))sub_1002F0064, &qword_1005F82D0);
}

uint64_t sub_1001B20B0(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4) {
    goto LABEL_21;
  }
  sub_100054B78(a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
  uint64_t v13 = *(void *)(v5 + 16);
  BOOL v14 = __OFADD__(v13, v4);
  uint64_t v15 = v13 + v4;
  if (!v14)
  {
    *(void *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B222C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1001B31D8(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1001B23F8(unint64_t a1)
{
  return sub_1001B2428(a1, &qword_1005F9F90, &qword_1005F7E58, &qword_1005F7E50, (uint64_t *)sub_1003F8EE8);
}

uint64_t sub_1001B2428(unint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_1001B33F8(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

void *sub_1001B264C()
{
  id v1 = [*(id *)(v0 + 24) debugTestCases];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v4 = sub_1003E4498(v3);
    swift_bridgeObjectRelease();
    if (v4) {
      sub_1001B13B4((uint64_t)v4);
    }
  }
  uint64_t v5 = sub_1001AA244();
  sub_1001B13B4((uint64_t)v5);
  return _swiftEmptyArrayStorage;
}

char *sub_1001B26E8()
{
  return &v1;
}

uint64_t sub_1001B26F8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1001B2734(a1, a2, a3, (void (*)(void))&type metadata accessor for LegacyLockup, (unint64_t *)&unk_1005F7F50, &qword_1005F76C0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1003F8D48);
}

uint64_t sub_1001B2734(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1001B4074(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_100054B78(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B2958(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1001B4074((unint64_t *)&unk_1005FD610, (uint64_t *)&unk_1005F7E10);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100054B78((uint64_t *)&unk_1005F7E10);
          uint64_t v12 = sub_1003F8DB0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005FD240);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B2B78(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1001B4074((unint64_t *)&unk_1005F7F30, (uint64_t *)&unk_1005F8BD0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100054B78((uint64_t *)&unk_1005F8BD0);
          uint64_t v12 = sub_1003F8CDC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B2D98(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1001B4074(&qword_1005F7F18, &qword_1005F7F10);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100054B78(&qword_1005F7F10);
          uint64_t v12 = sub_1003F8CDC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B2FB8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1001B4074((unint64_t *)&unk_1005F7F00, &qword_1005F7EF8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100054B78(&qword_1005F7EF8);
          uint64_t v12 = sub_1003F8CDC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004D29C(0, &qword_1005F7EF0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B31D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1001B4074((unint64_t *)&unk_1005F7E00, (uint64_t *)&unk_1005F7DF0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100054B78((uint64_t *)&unk_1005F7DF0);
          uint64_t v12 = sub_1003F8CDC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004D29C(0, (unint64_t *)&qword_100603220);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B33F8(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1001B4074(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_100054B78(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_unknownObjectRetain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_100054B78(a4);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1001B3618(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = *(void *)(type metadata accessor for TabMenu.Item() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    while (1)
    {
      uint64_t result = (void *)ParentFlowController.viewControllerProvider.getter();
      if (!result) {
        break;
      }
      uint64_t v7 = (uint64_t)result;
      TabMenu.Item.tab(asPartOf:viewControllerProvider:)();
      sub_1000536BC(v7);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v5 += v6;
      if (!--v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B3768@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_1001B3774()
{
  return swift_deallocObject();
}

uint64_t sub_1001B37AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001B0EC4(a1);
}

void *sub_1001B37C8(uint64_t a1, uint64_t a2)
{
  if (static Podcasts.isUIPSidebarEnabled.getter())
  {
    id v3 = [self currentTraitCollection];
    UITraitCollection.interfaceMode.getter();
  }
  v14[3] = type metadata accessor for TabBarFlowController();
  v14[4] = &protocol witness table for BaseFlowController;
  v14[0] = a2;
  swift_retain();
  unint64_t v4 = static TabMenu.viewControllers(for:interfaceMode:using:asPartOf:)();
  sub_10004D2D8((uint64_t)v14);
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_15;
  }
LABEL_5:
  v14[0] = _swiftEmptyArrayStorage;
  uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v4 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      self;
      if (!swift_dynamicCastObjCClass())
      {
        type metadata accessor for FlowNavigationController();
        swift_retain();
        id v10 = (id)FlowNavigationController.__allocating_init(asPartOf:)();
        [v10 setDelegate:dispatch thunk of TabBarFlowController.navigationControllerDelegate.getter()];

        swift_unknownObjectRelease();
        id v11 = v10;
        id v12 = [v9 tabBarItem];
        [v11 setTabBarItem:v12];

        [v11 pushViewController:v9 animated:0];
      }
      ++v7;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v5 != v7);
    uint64_t v13 = v14[0];
    swift_bridgeObjectRelease();
    return (void *)v13;
  }
  __break(1u);
  return result;
}

id sub_1001B3A54(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = type metadata accessor for TabMenu.Item();
  uint64_t v7 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100054B78(&qword_1005F7E60);
  BaseObjectGraph.inject<A>(_:)();
  uint64_t v10 = v49[0];
  uint64_t v9 = v49[1];
  id v11 = (uint64_t *)&a1[OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_actionRunner];
  swift_beginAccess();
  *id v11 = v10;
  v11[1] = v9;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRelease();
  dispatch thunk of RootSplitViewController.actionRunner.setter();
  id result = [self _currentTraitCollection];
  if (result)
  {
    uint64_t v13 = result;
    char v14 = UITraitCollection.interfaceMode.getter();

    uint64_t v50 = type metadata accessor for ParentFlowController();
    uint64_t v51 = &protocol witness table for BaseFlowController;
    v49[0] = a3;
    uint64_t v15 = (uint64_t)&a1[OBJC_IVAR____TtC8Podcasts28PodcastsFlowTabBarController_flowController];
    swift_beginAccess();
    swift_retain();
    sub_10005DF4C((uint64_t)v49, v15);
    swift_endAccess();
    if (static Podcasts.isUIPSidebarEnabled.getter())
    {
      uint64_t v16 = type metadata accessor for Podcasts();
      uint64_t v50 = v16;
      uint64_t v51 = (void *)sub_10000A204((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
      uint64_t v17 = sub_10004A244(v49);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, enum case for Podcasts.tabRewrite(_:), v16);
      LOBYTE(v16) = isFeatureEnabled(_:)();
      sub_10004D2D8((uint64_t)v49);
      if (v16)
      {
        uint64_t v18 = TabMenu.Group.items(for:)();
        swift_retain();
        swift_retain();
        sub_1001B3618(v18);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        sub_10004D29C(0, &qword_1005F7EC0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [a1 setTabs:isa];

        uint64_t v45 = TabMenu.Group.items(for:)();
        int64_t v20 = *(void *)(v45 + 16);
        if (v20)
        {
          uint64_t v42 = a1;
          uint64_t v43 = a3;
          uint64_t v44 = v10;
          v49[0] = (uint64_t)_swiftEmptyArrayStorage;
          sub_10005986C(0, v20, 0);
          uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
          uint64_t v21 = v7 + 16;
          uint64_t v46 = v22;
          unint64_t v23 = v45 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
          uint64_t v24 = *(void *)(v21 + 56);
          uint64_t v25 = (void (**)(char *, uint64_t))(v21 - 8);
          do
          {
            unsigned int v27 = v47;
            uint64_t v26 = v48;
            v46(v47, v23, v48);
            uint64_t v28 = TabMenu.Item.identifier.getter();
            uint64_t v30 = v29;
            (*v25)(v27, v26);
            uint64_t v31 = v49[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_10005986C(0, *(void *)(v31 + 16) + 1, 1);
              uint64_t v31 = v49[0];
            }
            unint64_t v33 = *(void *)(v31 + 16);
            unint64_t v32 = *(void *)(v31 + 24);
            if (v33 >= v32 >> 1)
            {
              sub_10005986C(v32 > 1, v33 + 1, 1);
              uint64_t v31 = v49[0];
            }
            *(void *)(v31 + 16) = v33 + 1;
            uint64_t v34 = v31 + 16 * v33;
            *(void *)(v34 + 32) = v28;
            *(void *)(v34 + 40) = v30;
            v23 += v24;
            --v20;
          }
          while (v20);
          swift_bridgeObjectRelease();
          a1 = v42;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        Class v39 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [a1 setCompactTabIdentifiers:v39];
      }
      else
      {
        sub_1000360CC(a4, v14 & 1, a3);
        sub_10004D29C(0, (unint64_t *)&qword_1005F7EB0);
        Class v38 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [a1 setViewControllers:v38];

        [a1 setSelectedIndex:0];
      }
      id v40 = [a1 _uip_sidebar];
      [v40 _setEditable:1];

      ParentFlowController.initializePageContextForMetrics()();
    }
    else
    {
      type metadata accessor for FlowNavigationController();
      swift_retain();
      int v35 = a1;
      FlowNavigationController.__allocating_init(asPartOf:)();
      type metadata accessor for TabBarFlowController();
      swift_allocObject();
      swift_retain();
      uint64_t v36 = TabBarFlowController.init(tabBarController:loadingNavigationController:asPartOf:)();
      sub_1001B37C8(a4, v36);
      sub_10004D29C(0, (unint64_t *)&qword_1005F7EB0);
      Class v37 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v35 setViewControllers:v37];

      [v35 setSelectedIndex:0];
      dispatch thunk of TabBarFlowController.initializePageContextForMetrics()();
      swift_release();
    }
    return (id)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B4074(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100044244(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B40C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for InteractionContext();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(void *)(v0 + 24)
    && (swift_retain(),
        dispatch thunk of ContextActionsConfiguration.context.getter(),
        swift_release(),
        InteractionContext.page.getter(),
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5),
        char v9 = InteractionContext.Page.isRecentlyUnfollowedPage.getter(),
        sub_1001B4BB0((uint64_t)v4),
        (v9 & 1) != 0)
    && *(void *)(v1 + 16))
  {
    swift_retain();
    char v10 = sub_100241FD4();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

void sub_1001B4260()
{
  if (v0[2])
  {
    swift_retain();
    sub_100241FD4();
    if (v1)
    {
      sub_100041A98(v0 + 4, v0[7]);
      sub_1001B433C();
      dispatch thunk of LibraryActionControllerProtocol.subscribe(podcast:displaySuccessHUD:)();
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_release();
  }
}

uint64_t sub_1001B433C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (!*(void *)(v0 + 24)) {
    goto LABEL_9;
  }
  swift_retain();
  dispatch thunk of ContextActionsConfiguration.context.getter();
  swift_release();
  InteractionContext.page.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_1001B4BB0((uint64_t)v8);
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_1005F80A0);
  sub_1001B4C0C((uint64_t)&v8[*(int *)(v11 + 64)]);
  if (v10)
  {
LABEL_9:
    char v19 = 1;
    return v19 & 1;
  }
  uint64_t v22 = v9;
  sub_1001A5874();
  uint64_t v12 = BinaryInteger.description.getter();
  uint64_t v14 = v13;
  if (!*(void *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v15 = v12;
  swift_retain();
  uint64_t v16 = sub_100241804();
  uint64_t v18 = v17;
  swift_release();
  if (v15 == v16 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
    char v19 = 0;
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v19 = v21 ^ 1;
  }
  return v19 & 1;
}

uint64_t sub_1001B4598()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 32);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28RefollowPodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1001B4650()
{
  return type metadata accessor for RefollowPodcastContextAction();
}

uint64_t type metadata accessor for RefollowPodcastContextAction()
{
  uint64_t result = qword_1005F7F88;
  if (!qword_1005F7F88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001B46A4()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001B474C()
{
  id v0 = [self mainBundle];
  v5._unint64_t object = (void *)0xE000000000000000;
  v1._uint64_t countAndFlagsBits = 0x5F5245564F434552;
  v1._unint64_t object = (void *)0xEC000000574F4853;
  v2._uint64_t countAndFlagsBits = 0;
  v2._unint64_t object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1001B47F0()
{
  return 0x7269632E73756C70;
}

uint64_t sub_1001B4810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28RefollowPodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1001B4884@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.refollowShow(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_1001B4964(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

void *sub_1001B49C4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1001B4A24(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1001B4A84(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1001B4AE4(uint64_t a1)
{
  uint64_t result = sub_1001B4B6C(&qword_1005F8090);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001B4B28(uint64_t a1)
{
  uint64_t result = sub_1001B4B6C(&qword_1005F8098);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001B4B6C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RefollowPodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B4BB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InteractionContext.Page();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B4C0C(uint64_t a1)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MTPodcast.carPlayContentItemChildSortDescriptors.getter()
{
  id v1 = [self sortDescriptorsForPubDateAscending:[v0 sortAscending]];
  sub_1000099EC();
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

void __swiftcall MTPodcast.carPlayContentItemChildPredicate(forContext:)(NSPredicate_optional *__return_ptr retstr, NSManagedObjectContext forContext)
{
  id v4 = [v2 uuid];
  if (v4)
  {
    Swift::String v5 = v4;
    uint64_t v6 = self;
    id v7 = [v6 predicateForAllEpisodesOnPodcastUuid:v5];

    id v8 = [v6 predicateForEpisodeTypeFilter:5];
    id v9 = [v7 AND:v8];

    id v16 = v9;
    char v10 = (NSManagedObjectContext *)swift_allocObject();
    v10[2].super.Class isa = (Class)v2;
    v10[3].super.Class isa = forContext.super.isa;
    v10[4].super.Class isa = (Class)&v16;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_1001B5138;
    *(void *)(v11 + 24) = v10;
    aBlock[4] = sub_10004A018;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018818;
    void aBlock[3] = &unk_100557668;
    uint64_t v12 = _Block_copy(aBlock);
    id v13 = v2;
    Class v14 = forContext.super.isa;
    swift_retain();
    swift_release();
    [(objc_class *)v14 performBlockAndWait:v12];
    _Block_release(v12);
    LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v14) {
      __break(1u);
    }
    else {
      swift_release();
    }
  }
}

void sub_1001B4F10(void *a1, void *a2, void **a3)
{
  id v6 = [a1 nextEpisodeUuid];
  if (v6)
  {
    id v7 = v6;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    NSString v8 = String._bridgeToObjectiveC()();
    id v23 = [a2 episodeForUuid:v8];
    swift_bridgeObjectRelease_n();
  }
  else
  {
    id v23 = 0;
  }
  [a1 hidesPlayedEpisodes];
  if (MTPodcastHidesPlayedEpisodesResolved())
  {
    id v9 = *a3;
    char v10 = self;
    id v11 = v9;
    id v12 = [v10 predicateForVisuallyPlayed:0];
    id v13 = [v11 AND:v12];

    Class v14 = *a3;
    *a3 = v13;
  }
  else
  {
    unint64_t v15 = sub_10022D330(v23);
    if (v16)
    {
      Class v14 = v23;
    }
    else
    {
      unint64_t v17 = v15;
      uint64_t v18 = *a3;
      char v19 = self;
      id v20 = v18;
      id v21 = [v19 predicateForSeasonNumber:v17];
      id v22 = [v20 AND:v21];

      Class v14 = *a3;
      *a3 = v22;
    }
  }
}

uint64_t sub_1001B50F8()
{
  return swift_deallocObject();
}

void sub_1001B5138()
{
  sub_1001B4F10(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_1001B5144()
{
  return swift_deallocObject();
}

id sub_1001B5154()
{
  [*(id *)&v0[OBJC_IVAR____TtC8Podcasts19ChannelListObserver_channelObserver] setDelegate:0];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChannelListObserver();
  [super dealloc];
}

uint64_t (*sub_1001B52D8())(void *)
{
  id v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8Podcasts19ChannelListObserver_didChange);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  if (v2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    Swift::String v5 = sub_1001B5718;
  }
  else
  {
    Swift::String v5 = 0;
  }
  sub_10004ACDC(v2);
  return v5;
}

void (*sub_1001B5380(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = OBJC_IVAR____TtC8Podcasts19ChannelListObserver_didChange;
  void v3[5] = *v1;
  v3[6] = v5;
  id v6 = (uint64_t *)(v4 + v5);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*v6)
  {
    uint64_t v8 = v6[1];
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v8;
    char v10 = sub_1001B5588;
  }
  else
  {
    char v10 = 0;
    uint64_t v9 = 0;
  }
  v3[3] = v10;
  v3[4] = v9;
  return sub_1001B544C;
}

void sub_1001B544C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    if (v3)
    {
      uint64_t v4 = v2[4];
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v4;
      id v6 = sub_1001B5550;
      goto LABEL_7;
    }
  }
  else if (v3)
  {
    uint64_t v7 = v2[4];
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v7;
    id v6 = sub_1001B572C;
    goto LABEL_7;
  }
  id v6 = 0;
  uint64_t v5 = 0;
LABEL_7:
  uint64_t v8 = (uint64_t (**)(uint64_t))(v2[5] + v2[6]);
  *uint64_t v8 = v6;
  v8[1] = (uint64_t (*)(uint64_t))v5;
  swift_endAccess();

  free(v2);
}

uint64_t sub_1001B5518()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001B5550(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1001B5588(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1001B55B4()
{
  objc_sync_enter(v0);
  id v1 = *(id *)&v0[OBJC_IVAR____TtC8Podcasts19ChannelListObserver_channelObserver];
  unint64_t v2 = sub_10001F4D8(v1);

  *(void *)&v0[OBJC_IVAR____TtC8Podcasts19ChannelListObserver_currentValue] = v2;
  swift_bridgeObjectRelease();
  objc_sync_exit(v0);
  uint64_t v3 = &v0[OBJC_IVAR____TtC8Podcasts19ChannelListObserver_didChange];
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t))v3;
  if (*(void *)v3)
  {
    sub_10004ACDC((uint64_t)v5);
    uint64_t v6 = swift_bridgeObjectRetain();
    v5(v6);
    sub_1000536BC((uint64_t)v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001B5688()
{
  return swift_deallocObject();
}

uint64_t sub_1001B56C0()
{
  return swift_deallocObject();
}

uint64_t sub_1001B56D0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001B5708()
{
  return swift_deallocObject();
}

uint64_t sub_1001B5730(void *a1, int a2, uint64_t a3)
{
  uint64_t v118 = a3;
  int v122 = a2;
  Swift::Int v121 = a1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v119 = v4;
  uint64_t v120 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v117 = (char *)&v115 - v10;
  __chkstk_darwin(v9);
  unint64_t v115 = (char *)&v115 - v11;
  uint64_t v12 = sub_100054B78(&qword_1005F5D20);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  unint64_t v15 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v115 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  id v21 = (char *)&v115 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v115 - v23;
  __chkstk_darwin(v22);
  uint64_t v116 = (uint64_t)&v115 - v25;
  uint64_t v26 = _s27CarPlayEpisodeSubtitleStyleOMa();
  __chkstk_darwin(v26);
  uint64_t v28 = (double *)((char *)&v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = type metadata accessor for EpisodePlayState();
  __chkstk_darwin(v29);
  uint64_t v31 = (double *)((char *)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001B6C24(v3, (uint64_t)v31, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      double v32 = v31[1];
      double v33 = v32 - *v31;
      char v34 = v122;
      if (v33 > 0.0
        && (id v35 = [self prettyShortStringWithDuration:1 includeTimeRemainingPhrase:0 abbreviated:v33]) != 0|| v32 > 0.0&& (id v35 = objc_msgSend(self, "prettyShortStringWithDuration:", v32)) != 0)
      {
        uint64_t v36 = v35;
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v39 = v38;

        id v40 = sub_10004CEAC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
        unint64_t v42 = *((void *)v40 + 2);
        unint64_t v41 = *((void *)v40 + 3);
        goto LABEL_7;
      }
      id v40 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_48;
    case 2u:
      uint64_t v44 = (uint64_t)v18;
      sub_1001B6AF4((uint64_t)v31, (uint64_t)v18);
      sub_1001B6B5C((uint64_t)v18, (uint64_t)v15);
      uint64_t v45 = v119;
      uint64_t v46 = v120;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v15, 1, v119) == 1)
      {
        sub_1001B6BC4((uint64_t)v18);
        sub_1001B6BC4((uint64_t)v15);
        goto LABEL_13;
      }
      uint64_t v57 = v117;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v117, v15, v45);
      uint64_t v123 = Date.friendlyDisplayString.getter();
      uint64_t v124 = v58;
      sub_1001AB688();
      char v59 = Collection.isNotEmpty.getter();
      swift_bridgeObjectRelease();
      char v34 = v122;
      if (v59)
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v8, v57, v45);
        Date.friendlyDisplayString.getter();
        uint64_t countAndFlagsBits = String.init(playedOn:dateString:)();
        unint64_t object = v61;
      }
      else
      {
        id v79 = [self mainBundle];
        v126._unint64_t object = (void *)0xE000000000000000;
        v80._unint64_t object = (void *)0x80000001004D4500;
        v80._uint64_t countAndFlagsBits = 0xD000000000000014;
        v81._uint64_t countAndFlagsBits = 0;
        v81._unint64_t object = (void *)0xE000000000000000;
        v126._uint64_t countAndFlagsBits = 0;
        Swift::String v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)0, (NSBundle)v79, v81, v126);
        uint64_t countAndFlagsBits = v82._countAndFlagsBits;
        unint64_t object = v82._object;
      }
      id v40 = sub_10004CEAC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v84 = *((void *)v40 + 2);
      unint64_t v83 = *((void *)v40 + 3);
      if (v84 >= v83 >> 1) {
        id v40 = sub_10004CEAC((char *)(v83 > 1), v84 + 1, 1, v40);
      }
      *((void *)v40 + 2) = v84 + 1;
      uint64_t v85 = &v40[16 * v84];
      *((void *)v85 + 4) = countAndFlagsBits;
      *((void *)v85 + 5) = object;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v57, v45);
      sub_1001B6BC4(v44);
      goto LABEL_48;
    case 4u:
      sub_1001B6C24(v118, (uint64_t)v28, (uint64_t (*)(void))_s27CarPlayEpisodeSubtitleStyleOMa);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v48 = *(void *)v28;
      if (EnumCaseMultiPayload == 1)
      {
        double v49 = v28[4];
        char v50 = *((unsigned char *)v28 + 40);
        if (((_BYTE)v28[3] & 1) != 0
          || ((_BYTE)v28[1] & 1) != 0
          || (type metadata accessor for AlbumStringBuilder(),
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v21, 1, 1, v119),
              uint64_t v51 = static AlbumStringBuilder.albumString(podcastTitle:episodeNumber:seasonNumber:isSerialType:pubDate:)(),
              uint64_t v53 = v52,
              sub_1001B6BC4((uint64_t)v21),
              !v53))
        {
          id v40 = (char *)_swiftEmptyArrayStorage;
          char v34 = v122;
          if (v50) {
            goto LABEL_48;
          }
        }
        else
        {
          id v40 = sub_10004CEAC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
          unint64_t v55 = *((void *)v40 + 2);
          unint64_t v54 = *((void *)v40 + 3);
          char v34 = v122;
          if (v55 >= v54 >> 1) {
            id v40 = sub_10004CEAC((char *)(v54 > 1), v55 + 1, 1, v40);
          }
          *((void *)v40 + 2) = v55 + 1;
          uint64_t v56 = &v40[16 * v55];
          *((void *)v56 + 4) = v51;
          *((void *)v56 + 5) = v53;
          if (v50) {
            goto LABEL_48;
          }
        }
        goto LABEL_43;
      }
      char v63 = *((unsigned char *)v28 + 8);
      uint64_t v64 = sub_100054B78(&qword_1005F8140);
      uint64_t v65 = (uint64_t)v28 + *(int *)(v64 + 48);
      uint64_t v66 = (char *)v28 + *(int *)(v64 + 64);
      double v49 = *(double *)v66;
      char v67 = v66[8];
      uint64_t v68 = v116;
      sub_1001B6AF4(v65, v116);
      if ((v63 & 1) == 0 && v48 >= 1)
      {
        id v69 = [self mainBundle];
        v70._uint64_t countAndFlagsBits = 0xD000000000000015;
        v125._unint64_t object = (void *)0xE000000000000000;
        v70._unint64_t object = (void *)0x80000001004D4520;
        v71._uint64_t countAndFlagsBits = 0;
        v71._unint64_t object = (void *)0xE000000000000000;
        v125._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v70, (Swift::String_optional)0, (NSBundle)v69, v71, v125);

        sub_100054B78(&qword_1005F7720);
        uint64_t v72 = swift_allocObject();
        *(_OWORD *)(v72 + 16) = xmmword_10046D010;
        *(void *)(v72 + 56) = &type metadata for Int64;
        *(void *)(v72 + 64) = &protocol witness table for Int64;
        *(void *)(v72 + 32) = v48;
        uint64_t v73 = static String.localizedStringWithFormat(_:_:)();
        uint64_t v75 = v74;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v40 = sub_10004CEAC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
        unint64_t v77 = *((void *)v40 + 2);
        unint64_t v76 = *((void *)v40 + 3);
        char v34 = v122;
        if (v77 >= v76 >> 1) {
          id v40 = sub_10004CEAC((char *)(v76 > 1), v77 + 1, 1, v40);
        }
        *((void *)v40 + 2) = v77 + 1;
        uint64_t v78 = &v40[16 * v77];
        *((void *)v78 + 4) = v73;
        *((void *)v78 + 5) = v75;
        goto LABEL_42;
      }
      sub_1001B6B5C(v68, (uint64_t)v24);
      uint64_t v87 = v119;
      uint64_t v86 = v120;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v24, 1, v119) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v115, v24, v87);
        uint64_t v88 = Date.friendlyDisplayString.getter();
        uint64_t v90 = v89;
        id v40 = sub_10004CEAC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
        unint64_t v92 = *((void *)v40 + 2);
        unint64_t v91 = *((void *)v40 + 3);
        if (v92 >= v91 >> 1) {
          id v40 = sub_10004CEAC((char *)(v91 > 1), v92 + 1, 1, v40);
        }
        char v34 = v122;
        *((void *)v40 + 2) = v92 + 1;
        uint64_t v93 = &v40[16 * v92];
        *((void *)v93 + 4) = v88;
        *((void *)v93 + 5) = v90;
        (*(void (**)(char *, uint64_t))(v120 + 8))(v115, v87);
LABEL_42:
        sub_1001B6BC4(v68);
        if (v67) {
          goto LABEL_48;
        }
        goto LABEL_43;
      }
      sub_1001B6BC4(v68);
      sub_1001B6BC4((uint64_t)v24);
      id v40 = (char *)_swiftEmptyArrayStorage;
      char v34 = v122;
      if (v67) {
        goto LABEL_48;
      }
LABEL_43:
      if (v49 > 0.0)
      {
        id v94 = [self prettyShortStringWithDuration:v49];
        if (v94)
        {
          uint64_t v95 = v94;
          uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v39 = v96;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v40 = sub_10004CEAC(0, *((void *)v40 + 2) + 1, 1, v40);
          }
          unint64_t v42 = *((void *)v40 + 2);
          unint64_t v41 = *((void *)v40 + 3);
LABEL_7:
          if (v42 >= v41 >> 1) {
            id v40 = sub_10004CEAC((char *)(v41 > 1), v42 + 1, 1, v40);
          }
          *((void *)v40 + 2) = v42 + 1;
          uint64_t v43 = &v40[16 * v42];
          *((void *)v43 + 4) = v37;
          *((void *)v43 + 5) = v39;
        }
      }
LABEL_48:
      if (v34)
      {
        sub_100041A98(v121, v121[3]);
        uint64_t v97 = dispatch thunk of StoreDataProvider.explicitSymbol.getter();
        uint64_t v99 = v98;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v40 = sub_10004CEAC(0, *((void *)v40 + 2) + 1, 1, v40);
        }
        unint64_t v101 = *((void *)v40 + 2);
        unint64_t v100 = *((void *)v40 + 3);
        unint64_t v102 = v101 + 1;
        if (v101 >= v100 >> 1) {
          id v40 = sub_10004CEAC((char *)(v100 > 1), v101 + 1, 1, v40);
        }
        *((void *)v40 + 2) = v102;
        uint64_t v103 = &v40[16 * v101];
        *((void *)v103 + 4) = v97;
        *((void *)v103 + 5) = v99;
      }
      else
      {
        unint64_t v102 = *((void *)v40 + 2);
        if (!v102)
        {
          uint64_t v105 = _swiftEmptyArrayStorage;
          goto LABEL_68;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v104 = (uint64_t *)(v40 + 40);
      uint64_t v105 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v109 = *(v104 - 1);
        uint64_t v110 = *v104;
        if (v109) {
          BOOL v111 = 0;
        }
        else {
          BOOL v111 = v110 == 0xE000000000000000;
        }
        if (!v111 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v123 = (uint64_t)v105;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10005986C(0, v105[2] + 1, 1);
            uint64_t v105 = (void *)v123;
          }
          unint64_t v107 = v105[2];
          unint64_t v106 = v105[3];
          if (v107 >= v106 >> 1)
          {
            sub_10005986C(v106 > 1, v107 + 1, 1);
            uint64_t v105 = (void *)v123;
          }
          v105[2] = v107 + 1;
          uint64_t v108 = &v105[2 * v107];
          v108[4] = v109;
          v108[5] = v110;
        }
        v104 += 2;
        --v102;
      }
      while (v102);
      swift_bridgeObjectRelease();
LABEL_68:
      swift_bridgeObjectRelease();
      uint64_t v123 = (uint64_t)v105;
      static String.eyebrowSeparatorSymbol.getter();
      sub_100054B78((uint64_t *)&unk_100603260);
      sub_1001B6A98();
      uint64_t v113 = BidirectionalCollection<>.joined(separator:)();
      swift_release();
      swift_bridgeObjectRelease();
      return v113;
    default:
      sub_1001B6C8C((uint64_t)v31, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
LABEL_13:
      id v40 = (char *)_swiftEmptyArrayStorage;
      char v34 = v122;
      goto LABEL_48;
  }
}

uint64_t _s27CarPlayEpisodeSubtitleStyleOMa()
{
  uint64_t result = qword_1005F81B8;
  if (!qword_1005F81B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001B6380(void *a1, uint64_t a2, char a3)
{
  uint64_t v5 = _s27CarPlayEpisodeSubtitleStyleOMa();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = type metadata accessor for ShowOffer();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  EpisodeOffer.showOffer.getter();
  ShowOffer.showType.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v15 = ShowType.rawValue.getter();
  uint64_t v17 = v16;
  if (v15 == ShowType.rawValue.getter() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
    if (a3)
    {
LABEL_7:
      if (EpisodeOffer.contentRating.getter() == 2)
      {
        char v21 = 0;
      }
      else
      {
        uint64_t v30 = ContentRating.rawValue.getter();
        uint64_t v32 = v31;
        char v21 = 1;
        if (v30 != ContentRating.rawValue.getter() || v32 != v33) {
          char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v34 = EpisodeOffer.seasonNumber.getter();
      char v36 = v35;
      uint64_t v37 = EpisodeOffer.episodeNumber.getter();
      char v39 = v38;
      uint64_t v40 = EpisodeOffer.duration.getter();
      *(void *)uint64_t v10 = v34;
      v10[8] = v36 & 1;
      *((void *)v10 + 2) = v37;
      v10[24] = v39 & 1;
      *((void *)v10 + 4) = v40;
      v10[40] = v41 & 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = sub_1001B5730(a1, v21 & 1, (uint64_t)v10);
      goto LABEL_25;
    }
  }
  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20 & 1) != 0 && (a3) {
      goto LABEL_7;
    }
  }
  if (EpisodeOffer.contentRating.getter() == 2)
  {
    char v22 = 0;
  }
  else
  {
    uint64_t v23 = ContentRating.rawValue.getter();
    uint64_t v25 = v24;
    char v22 = 1;
    if (v23 != ContentRating.rawValue.getter() || v25 != v26) {
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = sub_100054B78(&qword_1005F8140);
  uint64_t v28 = &v8[*(int *)(v27 + 48)];
  *(void *)uint64_t v8 = EpisodeOffer.episodeNumber.getter();
  v8[8] = v29 & 1;
  if (EpisodeOffer.releaseDate.getter())
  {
    LazyDate.value.getter();
    swift_release();
  }
  else
  {
    uint64_t v43 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v28, 1, 1, v43);
  }
  uint64_t v44 = &v8[*(int *)(v27 + 64)];
  *(void *)uint64_t v44 = EpisodeOffer.duration.getter();
  v44[8] = v45 & 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = sub_1001B5730(a1, v22 & 1, (uint64_t)v8);
  uint64_t v10 = v8;
LABEL_25:
  sub_1001B6C8C((uint64_t)v10, (uint64_t (*)(void))_s27CarPlayEpisodeSubtitleStyleOMa);
  return v42;
}

uint64_t sub_1001B67C4(void *a1, uint64_t a2, char a3)
{
  uint64_t v5 = _s27CarPlayEpisodeSubtitleStyleOMa();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = LegacyEpisodeLockup.showTypeIsSerial.getter();
  char v9 = LegacyLockup.isExplicit.getter();
  if (v8 & 1) != 0 && (a3)
  {
    uint64_t v10 = LegacyEpisodeLockup.seasonNumber.getter();
    char v12 = v11;
    uint64_t v13 = LegacyEpisodeLockup.episodeNumber.getter();
    char v15 = v14;
    uint64_t v16 = LegacyEpisodeLockup.duration.getter();
    *(void *)uint64_t v7 = v10;
    v7[8] = v12 & 1;
    *((void *)v7 + 2) = v13;
    v7[24] = v15 & 1;
    *((void *)v7 + 4) = v16;
    v7[40] = v17 & 1;
  }
  else
  {
    uint64_t v18 = &v7[*(int *)(sub_100054B78(&qword_1005F8140) + 64)];
    *(void *)uint64_t v7 = LegacyEpisodeLockup.episodeNumber.getter();
    v7[8] = v19 & 1;
    LegacyEpisodeLockup.releaseDate.getter();
    *(void *)uint64_t v18 = LegacyEpisodeLockup.duration.getter();
    v18[8] = v20 & 1;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = sub_1001B5730(a1, v9 & 1, (uint64_t)v7);
  sub_1001B6C8C((uint64_t)v7, (uint64_t (*)(void))_s27CarPlayEpisodeSubtitleStyleOMa);
  return v21;
}

uint64_t sub_1001B6954()
{
  uint64_t v1 = type metadata accessor for EpisodePlayState();
  __chkstk_darwin(v1);
  uint64_t v3 = (double *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001B6C24(v0, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
  int v4 = swift_getEnumCaseMultiPayload() - 1;
  *(double *)&uint64_t result = 0.0;
  switch(v4)
  {
    case 0:
    case 2:
      float v6 = v3[1];
      float v7 = *v3;
      if (v7 >= v6) {
        goto LABEL_5;
      }
      *(double *)&uint64_t result = (float)(v7 / v6);
      break;
    case 1:
      sub_1001B6BC4((uint64_t)v3);
      *(double *)&uint64_t result = 1.0;
      break;
    case 3:
      return result;
    default:
      sub_1001B6C8C((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
LABEL_5:
      *(double *)&uint64_t result = 0.0;
      break;
  }
  return result;
}

unint64_t sub_1001B6A98()
{
  unint64_t result = qword_1005F8138;
  if (!qword_1005F8138)
  {
    sub_100044244((uint64_t *)&unk_100603260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F8138);
  }
  return result;
}

uint64_t sub_1001B6AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F5D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B6B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F5D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B6BC4(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F5D20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B6C24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B6C8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *sub_1001B6CEC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (unsigned char *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v8 = sub_100054B78(&qword_1005F8140);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = &a1[v9];
      char v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for Date();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_100054B78(&qword_1005F5D20);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(v8 + 64);
      uint64_t v16 = &a1[v15];
      char v17 = &a2[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      unsigned char v16[8] = v17[8];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1001B6ECC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = a1 + *(int *)(sub_100054B78(&qword_1005F8140) + 48);
    uint64_t v4 = type metadata accessor for Date();
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(v3, v4);
    }
  }
  return result;
}

unsigned char *sub_1001B6FA4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    uint64_t v6 = sub_100054B78(&qword_1005F8140);
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100054B78(&qword_1005F5D20);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(v6 + 64);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_1001B7140(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001B6C8C((uint64_t)a1, (uint64_t (*)(void))_s27CarPlayEpisodeSubtitleStyleOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = *(void *)a2;
      a1[8] = a2[8];
      *(void *)a1 = v6;
      uint64_t v7 = sub_100054B78(&qword_1005F8140);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for Date();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100054B78(&qword_1005F5D20);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v14 = *(int *)(v7 + 64);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = *(void *)v16;
      v15[8] = v16[8];
      *(void *)uint64_t v15 = v17;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

unsigned char *sub_1001B7300(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    uint64_t v6 = sub_100054B78(&qword_1005F8140);
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100054B78(&qword_1005F5D20);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(v6 + 64);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_1001B749C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001B6C8C((uint64_t)a1, (uint64_t (*)(void))_s27CarPlayEpisodeSubtitleStyleOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v6 = sub_100054B78(&qword_1005F8140);
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100054B78(&qword_1005F5D20);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(v6 + 64);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      *(void *)uint64_t v14 = *(void *)v15;
      v14[8] = v15[8];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastsPlayerAdapter.CurrentItemType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PodcastsPlayerAdapter.CurrentItemType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1001B76B0()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1001B76C0()
{
  sub_100006B48();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v1[4] = v1;
    v1[5] = &unk_10046DDE8;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1001B7768(unint64_t a1)
{
  return sub_1001B77D0(a1, (uint64_t (*)(void))&type metadata accessor for LibraryEpisodeLockup, &qword_1005F8438, (void (*)(uint64_t))&type metadata accessor for LibraryEpisodeLockup);
}

uint64_t sub_1001B779C(unint64_t a1)
{
  return sub_1001B77D0(a1, (uint64_t (*)(void))&type metadata accessor for LibraryShowLockup, &qword_1005F8420, (void (*)(uint64_t))&type metadata accessor for LibraryShowLockup);
}

uint64_t sub_1001B77D0(unint64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return (uint64_t)v9;
  }
  char v22 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001BA4D0(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        char v22 = v9;
        unint64_t v14 = v9[2];
        unint64_t v13 = v9[3];
        if (v14 >= v13 >> 1)
        {
          sub_1001BA4D0(v13 > 1, v14 + 1, 1);
          uint64_t v9 = v22;
        }
        ++v11;
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_100022E5C(a3, a4);
        *(void *)&long long v19 = v12;
        v9[2] = v14 + 1;
        sub_100042FC4(&v19, (uint64_t)&v9[5 * v14 + 4]);
      }
      while (v8 != v11);
    }
    else
    {
      uint64_t v15 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v16 = *v15;
        char v22 = v9;
        unint64_t v18 = v9[2];
        unint64_t v17 = v9[3];
        swift_retain();
        if (v18 >= v17 >> 1)
        {
          sub_1001BA4D0(v17 > 1, v18 + 1, 1);
          uint64_t v9 = v22;
        }
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_100022E5C(a3, a4);
        *(void *)&long long v19 = v16;
        v9[2] = v18 + 1;
        sub_100042FC4(&v19, (uint64_t)&v9[5 * v18 + 4]);
        ++v15;
        --v8;
      }
      while (v8);
    }
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

void *sub_1001B79E8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_1001BA500(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA500(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_1001BA500(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      v2[2] = v6 + 1;
      sub_10004D384(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1001B7B10(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v16 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001BA550(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v16 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1001BA550(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v16;
        }
        ++v5;
        uint64_t v14 = type metadata accessor for LegacyLockup();
        uint64_t v15 = sub_100022E5C(&qword_1005F8408, (void (*)(uint64_t))&type metadata accessor for LegacyLockup);
        *(void *)&long long v13 = v6;
        v3[2] = v8 + 1;
        sub_100042FC4(&v13, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v16 = v3;
        unint64_t v11 = v3[2];
        unint64_t v12 = v3[3];
        swift_retain();
        if (v11 >= v12 >> 1)
        {
          sub_1001BA550(v12 > 1, v11 + 1, 1);
          uint64_t v3 = v16;
        }
        uint64_t v14 = type metadata accessor for LegacyLockup();
        uint64_t v15 = sub_100022E5C(&qword_1005F8408, (void (*)(uint64_t))&type metadata accessor for LegacyLockup);
        *(void *)&long long v13 = v10;
        v3[2] = v11 + 1;
        sub_100042FC4(&v13, (uint64_t)&v3[5 * v11 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B7D44(unint64_t a1)
{
  return sub_1001B7D6C(a1, (unint64_t *)&qword_1005F8288);
}

uint64_t sub_1001B7D58(unint64_t a1)
{
  return sub_1001B7D6C(a1, (unint64_t *)&qword_1005F8120);
}

uint64_t sub_1001B7D6C(unint64_t a1, unint64_t *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (!v4) {
    return (uint64_t)v5;
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001BA500(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_10004D29C(0, a2);
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001BA500(0, v5[2] + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v9 = v5[2];
        unint64_t v8 = v5[3];
        if (v9 >= v8 >> 1)
        {
          sub_1001BA500(v8 > 1, v9 + 1, 1);
          uint64_t v5 = v15;
        }
        v5[2] = v9 + 1;
        sub_10004D384(v14, &v5[4 * v9 + 4]);
      }
    }
    else
    {
      uint64_t v10 = (id *)(a1 + 32);
      sub_10004D29C(0, a2);
      do
      {
        id v11 = *v10;
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001BA500(0, v5[2] + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v13 = v5[2];
        unint64_t v12 = v5[3];
        if (v13 >= v12 >> 1)
        {
          sub_1001BA500(v12 > 1, v13 + 1, 1);
          uint64_t v5 = v15;
        }
        v5[2] = v13 + 1;
        sub_10004D384(v14, &v5[4 * v13 + 4]);
        ++v10;
        --v4;
      }
      while (v4);
    }
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void *sub_1001B7FC0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    sub_1001BA500(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain();
      sub_100054B78(&qword_1005F8378);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA500(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_1001BA500(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v2[2] = v6 + 1;
      sub_10004D384(&v8, &v2[4 * v6 + 4]);
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1001B80F0(unint64_t a1)
{
  return sub_1001B7D6C(a1, (unint64_t *)&unk_100608000);
}

uint64_t sub_1001B8104(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_100054B78(&qword_1005F7E20);
    uint64_t v3 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    return a1;
  }
}

uint64_t sub_1001B8180(unint64_t a1)
{
  return sub_1001B8444(a1, (void (*)(BOOL, unint64_t, uint64_t))sub_1001BA974, (uint64_t (*)(void))type metadata accessor for ShowData, (uint64_t)&off_100561620, (void (*)(void *, void *))sub_100042FC4);
}

uint64_t sub_1001B81C8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v16 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001BA9C4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v16 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1001BA9C4(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v16;
        }
        ++v5;
        uint64_t v14 = type metadata accessor for Action();
        uint64_t v15 = sub_100022E5C((unint64_t *)&qword_1005F8290, (void (*)(uint64_t))&type metadata accessor for Action);
        *(void *)&long long v13 = v6;
        v3[2] = v8 + 1;
        sub_100042FC4(&v13, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v9 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v16 = v3;
        unint64_t v11 = v3[2];
        unint64_t v12 = v3[3];
        swift_retain();
        if (v11 >= v12 >> 1)
        {
          sub_1001BA9C4(v12 > 1, v11 + 1, 1);
          uint64_t v3 = v16;
        }
        uint64_t v14 = type metadata accessor for Action();
        uint64_t v15 = sub_100022E5C((unint64_t *)&qword_1005F8290, (void (*)(uint64_t))&type metadata accessor for Action);
        *(void *)&long long v13 = v10;
        v3[2] = v11 + 1;
        sub_100042FC4(&v13, (uint64_t)&v3[5 * v11 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B83FC(unint64_t a1)
{
  return sub_1001B8444(a1, (void (*)(BOOL, unint64_t, uint64_t))sub_1001BA9F4, (uint64_t (*)(void))type metadata accessor for MTNotificationTestAction.PostFakeContentStep, (uint64_t)&off_100557970, (void (*)(void *, void *))sub_100042FC4);
}

uint64_t sub_1001B8444(unint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t), uint64_t (*a3)(void), uint64_t a4, void (*a5)(void *, void *))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v11 = _swiftEmptyArrayStorage;
  if (!v10) {
    return (uint64_t)v11;
  }
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t result = ((uint64_t (*)(void, uint64_t, void))a2)(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = a2;
    unint64_t v11 = v25;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = 0;
      do
      {
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v25 = v11;
        unint64_t v16 = v11[2];
        unint64_t v15 = v11[3];
        if (v16 >= v15 >> 1)
        {
          v21(v15 > 1, v16 + 1, 1);
          unint64_t v11 = v25;
        }
        ++v13;
        uint64_t v23 = a3(0);
        uint64_t v24 = a4;
        v22[0] = v14;
        v11[2] = v16 + 1;
        a5(v22, &v11[5 * v16 + 4]);
      }
      while (v10 != v13);
    }
    else
    {
      unint64_t v17 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v18 = *v17;
        uint64_t v25 = v11;
        unint64_t v19 = v11[2];
        unint64_t v20 = v11[3];
        swift_retain();
        if (v19 >= v20 >> 1)
        {
          v21(v20 > 1, v19 + 1, 1);
          unint64_t v11 = v25;
        }
        uint64_t v23 = a3(0);
        uint64_t v24 = a4;
        v22[0] = v18;
        v11[2] = v19 + 1;
        a5(v22, &v11[5 * v19 + 4]);
        ++v17;
        --v10;
      }
      while (v10);
    }
    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

void *sub_1001B8638(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1001BA7D0(0, v1, 0);
    uint64_t v3 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_100054B78(&qword_1005F93A0);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1001BA7D0(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_1001BA7D0(v4 > 1, v5 + 1, 1);
      }
      v3 += 16;
      _swiftEmptyArrayStorage[2] = v5 + 1;
      uint64_t v6 = &_swiftEmptyArrayStorage[2 * v5];
      v6[4] = v8;
      void v6[5] = v9;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

id NonFollowedShowsSyncStorage.importContext.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_importContext);
}

id sub_1001B8788()
{
  int64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 sharedInstance];
  id v4 = [v3 importContext];

  type metadata accessor for FetchNonFollowedShows();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  uint64_t v6 = qword_1005F5AE0;
  id v7 = v4;
  if (v6 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v8 = (id)static PodcastsStateCoordinator.shared;

  id v9 = sub_1001BC174((uint64_t)v7, v5, (uint64_t)v8);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v9;
}

id NonFollowedShowsSyncStorage.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NonFollowedShowsSyncStorage();
  [super dealloc];
}

uint64_t type metadata accessor for NonFollowedShowsSyncStorage()
{
  return self;
}

id sub_1001B8984()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_importContext);
}

uint64_t NonFollowedShowsSyncStorage.isNonFollowedShowsSyncDirty.getter()
{
  type metadata accessor for SyncKeysRepository();
  uint64_t v0 = (void *)static SyncKeysRepository.shared.getter();
  char v1 = SyncKeysRepository.isNonFollowedShowsSyncDirty.getter();

  return v1 & 1;
}

void NonFollowedShowsSyncStorage.isNonFollowedShowsSyncDirty.setter()
{
  type metadata accessor for SyncKeysRepository();
  id v0 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.isNonFollowedShowsSyncDirty.setter();
}

void (*NonFollowedShowsSyncStorage.isNonFollowedShowsSyncDirty.modify(uint64_t a1))()
{
  *(void *)a1 = type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  char v3 = SyncKeysRepository.isNonFollowedShowsSyncDirty.getter();

  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_1001B8AA8;
}

void sub_1001B8AA8()
{
  id v0 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.isNonFollowedShowsSyncDirty.setter();
}

uint64_t NonFollowedShowsSyncStorage.nonFollowedShowsLastSyncTimestamp.getter()
{
  type metadata accessor for SyncKeysRepository();
  id v0 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t Sync = SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.getter();

  return Sync;
}

void NonFollowedShowsSyncStorage.nonFollowedShowsLastSyncTimestamp.setter()
{
  type metadata accessor for SyncKeysRepository();
  id v0 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.setter();
}

uint64_t (*sub_1001B8BC4(void *a1))()
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = NonFollowedShowsSyncStorage.nonFollowedShowsLastSyncTimestamp.modify((uint64_t)v2);
  return sub_1001B8C14;
}

void (*NonFollowedShowsSyncStorage.nonFollowedShowsLastSyncTimestamp.modify(uint64_t a1))()
{
  *(void *)(a1 + 16) = type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t Sync = SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.getter();
  char v5 = v4;

  *(void *)a1 = Sync;
  *(unsigned char *)(a1 + 8) = v5 & 1;
  return sub_1001B8C90;
}

void sub_1001B8C90()
{
  id v0 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.setter();
}

uint64_t sub_1001B8CFC(uint64_t a1, uint64_t a2)
{
  return sub_1001B8E4C(a1, a2, (uint64_t (*)(void))&SyncKeysRepository.nonFollowedShowsSyncVersion.getter);
}

uint64_t NonFollowedShowsSyncStorage.syncVersion.getter()
{
  return sub_1001B8EBC((uint64_t (*)(void))&SyncKeysRepository.nonFollowedShowsSyncVersion.getter);
}

void sub_1001B8D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void NonFollowedShowsSyncStorage.syncVersion.setter(uint64_t a1, uint64_t a2)
{
}

uint64_t (*sub_1001B8D5C(uint64_t **a1))()
{
  objc_super v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)NonFollowedShowsSyncStorage.syncVersion.modify(v2);
  return sub_1001B8C14;
}

void (*NonFollowedShowsSyncStorage.syncVersion.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t v3 = SyncKeysRepository.nonFollowedShowsSyncVersion.getter();
  uint64_t v5 = v4;

  *a1 = v3;
  a1[1] = v5;
  return sub_1001B8E1C;
}

void sub_1001B8E1C(uint64_t *a1, char a2)
{
}

uint64_t sub_1001B8E34(uint64_t a1, uint64_t a2)
{
  return sub_1001B8E4C(a1, a2, (uint64_t (*)(void))&SyncKeysRepository.podcastsDomainVersion.getter);
}

uint64_t sub_1001B8E4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  type metadata accessor for SyncKeysRepository();
  uint64_t v4 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t v5 = a3();

  return v5;
}

uint64_t NonFollowedShowsSyncStorage.podcastsDomainVersion.getter()
{
  return sub_1001B8EBC((uint64_t (*)(void))&SyncKeysRepository.podcastsDomainVersion.getter);
}

uint64_t sub_1001B8EBC(uint64_t (*a1)(void))
{
  type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t v3 = a1();

  return v3;
}

void sub_1001B8F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1001B8F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  type metadata accessor for SyncKeysRepository();
  id v8 = (id)static SyncKeysRepository.shared.getter();
  a5(a1, a2);
}

void NonFollowedShowsSyncStorage.podcastsDomainVersion.setter(uint64_t a1, uint64_t a2)
{
}

void sub_1001B8FBC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  type metadata accessor for SyncKeysRepository();
  id v6 = (id)static SyncKeysRepository.shared.getter();
  a3(a1, a2);
}

uint64_t (*sub_1001B9034(uint64_t **a1))()
{
  objc_super v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)NonFollowedShowsSyncStorage.podcastsDomainVersion.modify(v2);
  return sub_1001B8C14;
}

void sub_1001B9084(void *a1)
{
  char v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*NonFollowedShowsSyncStorage.podcastsDomainVersion.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = type metadata accessor for SyncKeysRepository();
  objc_super v2 = (void *)static SyncKeysRepository.shared.getter();
  uint64_t v3 = SyncKeysRepository.podcastsDomainVersion.getter();
  uint64_t v5 = v4;

  *a1 = v3;
  a1[1] = v5;
  return sub_1001B913C;
}

void sub_1001B913C(uint64_t *a1, char a2)
{
}

void sub_1001B9154(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v6 = (id)static SyncKeysRepository.shared.getter();
    a3(v5, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = (id)static SyncKeysRepository.shared.getter();
    a3(v5, v4);
  }
}

BOOL sub_1001B91F8()
{
  return NonFollowedShowsSyncStorage.fetchHasLocalChanges()();
}

Swift::Bool __swiftcall NonFollowedShowsSyncStorage.fetchHasLocalChanges()()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Podcasts();
  char v35 = (void *)v6;
  uint64_t v36 = sub_100022E5C((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  id v7 = sub_10004A244(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for Podcasts.simplifiedSyncDirtyHandling(_:), v6);
  char v8 = isFeatureEnabled(_:)();
  sub_10004D2D8((uint64_t)aBlock);
  type metadata accessor for SyncKeysRepository();
  id v9 = (void *)static SyncKeysRepository.shared.getter();
  char v10 = SyncKeysRepository.isNonFollowedShowsSyncDirty.getter();

  char v11 = v8 ^ 1 | v10;
  if (v8 & 1) != 0 || (v10) {
    return v11 & 1;
  }
  unint64_t v12 = (void *)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.getter();

  Date.init(timeIntervalSinceReferenceDate:)();
  uint64_t v13 = self;
  id v14 = [v13 predicateForNonFollowedShowsWithPlayState];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v16 = [v13 predicateForLastDatePlayedAfterDate:isa];

  id v17 = [v14 AND:v16];
  uint64_t v33 = v2;
  id v18 = v17;

  id v19 = [v13 predicateForLastDatePlayedNotInTheFuture];
  id v20 = [v18 AND:v19];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v21 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [v21 initWithEntityName:v22];

  [v23 setIncludesPropertyValues:0];
  [v23 setIncludesSubentities:0];
  [v23 setFetchLimit:1];
  [v23 setPredicate:v20];
  uint64_t v38 = 0;
  uint64_t v24 = *(void **)&v1[OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_importContext];
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v1;
  v25[3] = v23;
  v25[4] = &v38;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1001BA484;
  *(void *)(v26 + 24) = v25;
  uint64_t v36 = (uint64_t)sub_10004A010;
  uint64_t v37 = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100018818;
  char v35 = &unk_100557898;
  uint64_t v27 = _Block_copy(aBlock);
  uint64_t v28 = v1;
  id v29 = v23;
  swift_retain();
  swift_release();
  [v24 performBlockAndWait:v27];
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v33);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  Swift::Bool result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v32 = v38;
    swift_release();
    char v11 = v32 > 0;
    return v11 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B96C4()
{
  return NonFollowedShowsSyncStorage.fetchNonFollowedShowsDictionaries()();
}

uint64_t NonFollowedShowsSyncStorage.fetchNonFollowedShowsDictionaries()()
{
  uint64_t v1 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v1 - 8);
  uint64_t v64 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithEntityName:v6];

  id v8 = [self predicateForNonFollowedShowsWithPlayState];
  [v7 setPredicate:v8];

  [v7 setResultType:2];
  uint64_t v9 = static RemoteNonFollowedShow.allSyncKeys.getter();
  sub_1001B79E8(v9);
  swift_bridgeObjectRelease();
  uint64_t v68 = (char *)&type metadata for Any + 8;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 setPropertiesToFetch:isa];

  uint64_t v69 = *sub_100041A98((void *)(v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_fetchNonFollowedShows), *(void *)(v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_fetchNonFollowedShows + 24));
  id v70 = v7;
  sub_100054B78((uint64_t *)&unk_1005F8210);
  NSManagedObjectContext.performAndWait<A>(_:)();
  int64_t v11 = *(void *)(v73[0] + 16);
  unint64_t v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    id v54 = v7;
    uint64_t v74 = _swiftEmptyArrayStorage;
    uint64_t v13 = v73[0];
    sub_1001BA6A8(0, v11, 0);
    uint64_t v57 = sub_100054B78(&qword_1005F6388);
    uint64_t v14 = 0;
    uint64_t v53 = v13;
    uint64_t v56 = v13 + 32;
    char v63 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    uint64_t v60 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    char v59 = (void (**)(char *, uint64_t))(v3 + 8);
    int64_t v55 = v11;
    char v67 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    while (1)
    {
      uint64_t v15 = *(void *)(v56 + 8 * v14);
      uint64_t v58 = v14 + 1;
      uint64_t v16 = static _DictionaryStorage.copy(original:)();
      id v17 = (void *)v16;
      uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
      uint64_t v19 = *(void *)(v15 + 64);
      uint64_t v65 = v15 + 64;
      if (v18 < 64) {
        uint64_t v20 = ~(-1 << v18);
      }
      else {
        uint64_t v20 = -1;
      }
      unint64_t v21 = v20 & v19;
      int64_t v66 = (unint64_t)(v18 + 63) >> 6;
      uint64_t v22 = v16 + 64;
      uint64_t result = swift_bridgeObjectRetain();
      int64_t v24 = 0;
      uint64_t v25 = v62;
      uint64_t v26 = (uint64_t)v64;
      if (v21)
      {
LABEL_7:
        unint64_t v27 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        unint64_t v28 = v27 | (v24 << 6);
        goto LABEL_22;
      }
      while (1)
      {
        int64_t v29 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_45;
        }
        if (v29 >= v66) {
          break;
        }
        unint64_t v30 = *(void *)(v65 + 8 * v29);
        ++v24;
        if (v30) {
          goto LABEL_21;
        }
        int64_t v24 = v29 + 1;
        if (v29 + 1 >= v66) {
          break;
        }
        unint64_t v30 = *(void *)(v65 + 8 * v24);
        if (v30) {
          goto LABEL_21;
        }
        int64_t v24 = v29 + 2;
        if (v29 + 2 >= v66) {
          break;
        }
        unint64_t v30 = *(void *)(v65 + 8 * v24);
        if (v30) {
          goto LABEL_21;
        }
        int64_t v31 = v29 + 3;
        if (v31 >= v66) {
          break;
        }
        unint64_t v30 = *(void *)(v65 + 8 * v31);
        if (!v30)
        {
          while (1)
          {
            int64_t v24 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_46;
            }
            if (v24 >= v66) {
              goto LABEL_30;
            }
            unint64_t v30 = *(void *)(v65 + 8 * v24);
            ++v31;
            if (v30) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v31;
LABEL_21:
        unint64_t v21 = (v30 - 1) & v30;
        unint64_t v28 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_22:
        uint64_t v32 = (uint64_t *)(*(void *)(v15 + 48) + 16 * v28);
        uint64_t v34 = *v32;
        uint64_t v33 = v32[1];
        sub_10004D328(*(void *)(v15 + 56) + 32 * v28, (uint64_t)v73);
        sub_10004D328((uint64_t)v73, (uint64_t)&v71);
        swift_bridgeObjectRetain();
        int v35 = swift_dynamicCast();
        uint64_t v36 = *v67;
        if (v35)
        {
          v36(v26, 0, 1, v25);
          if ((*v63)(v26, 1, v25) != 1)
          {
            uint64_t v37 = v61;
            (*v60)(v61, v64, v25);
            Date.timeIntervalSinceReferenceDate.getter();
            uint64_t v25 = v62;
            uint64_t v72 = &type metadata for Double;
            *(void *)&long long v71 = v38;
            char v39 = v37;
            uint64_t v26 = (uint64_t)v64;
            (*v59)(v39, v62);
            goto LABEL_27;
          }
        }
        else
        {
          v36(v26, 1, 1, v25);
        }
        sub_1001B6BC4(v26);
        sub_10004D328((uint64_t)v73, (uint64_t)&v71);
LABEL_27:
        sub_10004D2D8((uint64_t)v73);
        *(void *)(v22 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
        uint64_t v40 = (void *)(v17[6] + 16 * v28);
        void *v40 = v34;
        v40[1] = v33;
        uint64_t result = (uint64_t)sub_10004D384(&v71, (_OWORD *)(v17[7] + 32 * v28));
        uint64_t v41 = v17[2];
        BOOL v42 = __OFADD__(v41, 1);
        uint64_t v43 = v41 + 1;
        if (v42)
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        void v17[2] = v43;
        if (v21) {
          goto LABEL_7;
        }
      }
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v44 = v74;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001BA6A8(0, v44[2] + 1, 1);
        uint64_t v44 = v74;
      }
      int64_t v45 = v55;
      uint64_t v14 = v58;
      unint64_t v47 = v44[2];
      unint64_t v46 = v44[3];
      if (v47 >= v46 >> 1)
      {
        sub_1001BA6A8(v46 > 1, v47 + 1, 1);
        uint64_t v44 = v74;
      }
      void v44[2] = v47 + 1;
      v44[v47 + 4] = v17;
      if (v14 == v45)
      {
        swift_bridgeObjectRelease();
        id v7 = v54;
        unint64_t v12 = _swiftEmptyArrayStorage;
        int64_t v48 = v44[2];
        if (v48) {
          goto LABEL_39;
        }
        goto LABEL_43;
      }
    }
  }
  swift_bridgeObjectRelease();
  int64_t v48 = _swiftEmptyArrayStorage[2];
  if (v48)
  {
LABEL_39:
    v73[0] = _swiftEmptyArrayStorage;
    sub_1001BA6A8(0, v48, 0);
    type metadata accessor for RemoteNonFollowedShow();
    uint64_t v49 = 0;
    unint64_t v12 = (void *)v73[0];
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = Dictionary<>.flatteningUnknownSyncProperties<A>(for:)();
      swift_bridgeObjectRelease();
      v73[0] = v12;
      unint64_t v52 = v12[2];
      unint64_t v51 = v12[3];
      if (v52 >= v51 >> 1)
      {
        sub_1001BA6A8(v51 > 1, v52 + 1, 1);
        unint64_t v12 = (void *)v73[0];
      }
      ++v49;
      void v12[2] = v52 + 1;
      v12[v52 + 4] = v50;
    }
    while (v48 != v49);
  }
LABEL_43:
  swift_bridgeObjectRelease();

  return (uint64_t)v12;
}

uint64_t sub_1001B9E4C()
{
  sub_100041A98((void *)(*v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator), *(void *)(*v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator + 24));
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeInsertNewImplicitFollow(for:from:in:)();
}

uint64_t NonFollowedShowsSyncStorage.unsafeInsertNewImplicitFollow(for:in:)()
{
  sub_100041A98((void *)(v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator), *(void *)(v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator + 24));
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeInsertNewImplicitFollow(for:from:in:)();
}

uint64_t sub_1001B9F20()
{
  sub_100041A98((void *)(*v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator), *(void *)(*v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator + 24));
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeImplicitlyFollowIfNeeded(_:for:from:)();
}

uint64_t NonFollowedShowsSyncStorage.unsafeImplicitlyFollowIfNeeded(_:for:)()
{
  sub_100041A98((void *)(v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator), *(void *)(v0 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator + 24));
  return dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeImplicitlyFollowIfNeeded(_:for:from:)();
}

void sub_1001B9FF4(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall NonFollowedShowsSyncStorage.unsafeRemoveImplicitFollowsIfNeeded(for:)(Swift::OpaquePointer a1)
{
  if ((unint64_t)a1._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = 0;
  id v5 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator);
  do
  {
    if (((unint64_t)a1._rawValue & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *((id *)a1._rawValue + v4 + 4);
    }
    id v7 = v6;
    ++v4;
    sub_100041A98(v5, v5[3]);
    dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveImplicitFollowIfNeeded(_:from:)();
  }
  while (v3 != v4);
LABEL_10:

  swift_bridgeObjectRelease();
}

void static NonFollowedShowsSyncStorage.resetNonFollowedShowsSync()()
{
  type metadata accessor for SyncKeysRepository();
  uint64_t v0 = (void *)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.setter();

  uint64_t v1 = (void *)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.nonFollowedShowsSyncVersion.setter();

  id v2 = (id)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.isNonFollowedShowsSyncDirty.setter();
}

uint64_t sub_1001BA25C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = type metadata accessor for OSSignpostID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_signpost_type_t.begin.getter();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  id v8 = (void *)static OS_os_log.cloudSyncSignpost.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)();

  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  sub_10004D29C(0, (unint64_t *)&qword_1005F71F0);
  *a3 = NSManagedObjectContext.count<A>(for:)();
  static os_signpost_type_t.end.getter();
  char v10 = (void *)static OS_os_log.cloudSyncSignpost.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)();

  return ((uint64_t (*)(char *, uint64_t))v9)(v7, v4);
}

uint64_t sub_1001BA444()
{
  return swift_deallocObject();
}

uint64_t sub_1001BA484()
{
  return sub_1001BA25C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1001BA490()
{
  return swift_deallocObject();
}

uint64_t sub_1001BA4A0@<X0>(void *a1@<X8>)
{
  return sub_10027616C(a1);
}

uint64_t sub_1001BA4A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBB84(a1, a2, a3, *v3, &qword_1005F82F0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA4D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBFCC(a1, a2, a3, (void *)*v3, &qword_1005F8428, &qword_1005F8430);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA500(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BAA54(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA520(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB7AC(a1, a2, a3, (void *)*v3, &qword_1005F76B8, &qword_1005F76C0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA550(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBFCC(a1, a2, a3, (void *)*v3, &qword_1005F8410, &qword_1005F8418);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA580(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB93C(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1006005A0, (uint64_t (*)(void))&type metadata accessor for EpisodeOffer);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA5BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB93C(a1, a2, a3, (void *)*v3, &qword_1005F8320, (uint64_t (*)(void))&type metadata accessor for EpisodePlayState);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA5F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB62C(a1, a2, a3, *v3, &qword_1005F8328);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA628(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BABC4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA648(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB62C(a1, a2, a3, *v3, &qword_1005F82D8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA678(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBFCC(a1, a2, a3, (void *)*v3, &qword_1005F7658, &qword_1005F7670);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA6A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB7AC(a1, a2, a3, (void *)*v3, &qword_1005F8400, &qword_1005F8378);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA6D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BAD24(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA6F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB93C(a1, a2, a3, (void *)*v3, &qword_1005F82E0, type metadata accessor for DownloadJob);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA734(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BAE90(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA754(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB00C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA774(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB198(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA794(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB93C(a1, a2, a3, (void *)*v3, &qword_1005F7838, (uint64_t (*)(void))&type metadata accessor for ModernShelf);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA7D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB340(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA7F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBB84(a1, a2, a3, *v3, &qword_1005F82E8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA818(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB4CC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA838(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB62C(a1, a2, a3, *v3, (uint64_t *)&unk_1005F8250);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA868(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB93C(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1005FD2A0, (uint64_t (*)(void))&type metadata accessor for MediaLibraryPid);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA8A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB7AC(a1, a2, a3, (void *)*v3, &qword_1005F8358, &qword_1005F8360);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA8D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB93C(a1, a2, a3, (void *)*v3, &qword_1005F8370, (uint64_t (*)(void))&type metadata accessor for URL);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA910(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BB93C(a1, a2, a3, (void *)*v3, &qword_1005F8458, (uint64_t (*)(void))&type metadata accessor for EpisodeEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA94C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBB84(a1, a2, a3, *v3, &qword_1005F8368);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA974(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBFCC(a1, a2, a3, (void *)*v3, &qword_1005F82C8, &qword_1005F82D0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA9A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBCE0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001BA9C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBFCC(a1, a2, a3, (void *)*v3, &qword_100603DD0, &qword_1005F82A0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BA9F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBFCC(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1005F8340, (uint64_t *)&unk_1005F7F40);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BAA24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BBFCC(a1, a2, a3, (void *)*v3, &qword_1005F8448, &qword_1005F8450);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001BAA54(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78(&qword_1005F8130);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    char v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BABC4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78((uint64_t *)&unk_1005F8260);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    char v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BAD24(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78((uint64_t *)&unk_1005F8330);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    char v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BAE90(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78(&qword_1005F8308);
    char v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    char v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 48 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BB00C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78(&qword_1005F82F8);
    char v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    char v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100054B78(&qword_1005F8300);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BB198(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78(&qword_1005F83E0);
    char v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    char v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_100054B78(&qword_1005F83E8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BB340(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78(&qword_1005F8280);
    char v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    char v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100054B78(&qword_1005F93A0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BB4CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78(&qword_1005F8350);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    char v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BB62C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_100054B78(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    int64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 24 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BB7AC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_100054B78(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_100054B78(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BB93C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100054B78(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  int64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BBB84(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_100054B78(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BBCE0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78(&qword_1005F82C0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BBE40(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78((uint64_t *)&unk_1005F8310);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100054B78(&qword_100603690);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BBFCC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_100054B78(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_100054B78(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1001BC174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t NonFollowedShows = type metadata accessor for FetchNonFollowedShows();
  v20[3] = NonFollowedShows;
  void v20[4] = &off_10055C8E0;
  v20[0] = a2;
  v19[3] = type metadata accessor for PodcastsStateCoordinator();
  v19[4] = sub_100022E5C((unint64_t *)&unk_1005F74D0, (void (*)(uint64_t))type metadata accessor for PodcastsStateCoordinator);
  v19[0] = a3;
  int64_t v7 = (objc_class *)type metadata accessor for NonFollowedShowsSyncStorage();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  uint64_t v9 = sub_100055EF0((uint64_t)v20, NonFollowedShows);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = *v11;
  void v18[3] = NonFollowedShows;
  v18[4] = &off_10055C8E0;
  v18[0] = v13;
  *(void *)&v8[OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_importContext] = a1;
  sub_100056D54((uint64_t)v18, (uint64_t)&v8[OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_fetchNonFollowedShows]);
  sub_100056D54((uint64_t)v19, (uint64_t)&v8[OBJC_IVAR____TtC8Podcasts27NonFollowedShowsSyncStorage_podcastsStateCoordinator]);
  v17.receiver = v8;
  v17.super_class = v7;
  id v14 = [super init];
  sub_10004D2D8((uint64_t)v19);
  sub_10004D2D8((uint64_t)v18);
  sub_10004D2D8((uint64_t)v20);
  return v14;
}

id sub_1001BC330()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SyncKeysRepository();
  uint64_t v8 = (void *)static SyncKeysRepository.shared.getter();
  SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.getter();
  char v10 = v9;

  if (v10)
  {
    static Logger.cloudSync.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    unint64_t v20 = Logger.logObject.getter();
    if (os_log_type_enabled(v20, v19))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "[NonFollowedShows] We never synced before, so there are no old Implicit Follows to clean up.", v21, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v22 = [self falsePredicate];
    return v22;
  }
  else
  {
    Date.init(timeIntervalSinceReferenceDate:)();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v13 = [self predicateForDateKey:v11 isLessThanDate:isa];

    id v14 = self;
    Class v15 = Array._bridgeToObjectiveC()().super.isa;
    id v16 = [v14 predicateForImplicitlyFollowedPodcastsExcludingUUIDs:v15];

    id v17 = [v16 AND:v13];
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v17;
  }
}

void *_s8Podcasts27NonFollowedShowsSyncStorageC045unsafeImplicitFollowsOnlyInLocalAndBeforeLastE014excludingUUIDs2inSaySo9MTPodcastCGSgSaySSG_So22NSManagedObjectContextCtF_0(uint64_t a1, void *a2)
{
  id v3 = sub_1001BC330();
  id v4 = kMTPodcastEntityName;
  id v5 = v3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  int64_t v7 = [a2 objectsInEntity:v4 predicate:v5 sortDescriptors:isa];

  if (v7)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F7130);
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    int64_t v7 = sub_1003E4610(v8);
    swift_bridgeObjectRelease();
  }

  return v7;
}

void sub_1001BC750(uint64_t a1, uint64_t a2)
{
  sub_1001BD510();
  sub_1001BD648();
  sub_10004D29C(0, (unint64_t *)&unk_1005FBA00);
  id v5 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  v8[4] = sub_1001BEC90;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10003B424;
  v8[3] = &unk_100557AE8;
  int64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  [v5 processNotificationsForDebuggingWithCompletion:v7];
  _Block_release(v7);
}

uint64_t sub_1001BC884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v13 = (void *)static OS_dispatch_queue.main.getter();
  id v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_1001BECE0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100557B38;
  Class v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
}

uint64_t sub_1001BCB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  unint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for DispatchQoS();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v44 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for DispatchTime();
  uint64_t v43 = *(void *)(v51 - 8);
  uint64_t v9 = __chkstk_darwin(v51);
  BOOL v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v50 = (char *)&v39 - v11;
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 112);
  int64_t v13 = *(void *)(v12 + 16);
  id v14 = (void **)_swiftEmptyArrayStorage;
  uint64_t v52 = a3;
  if (v13)
  {
    uint64_t v41 = (void *)a2;
    aBlock = (void **)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10005986C(0, v13, 0);
    id v14 = aBlock;
    Class v15 = (void **)(v12 + 40);
    do
    {
      uint64_t v17 = *(v15 - 1);
      id v16 = *v15;
      aBlock = v14;
      unint64_t v19 = (unint64_t)v14[2];
      unint64_t v18 = (unint64_t)v14[3];
      swift_bridgeObjectRetain();
      if (v19 >= v18 >> 1)
      {
        sub_10005986C(v18 > 1, v19 + 1, 1);
        id v14 = aBlock;
      }
      v15 += 4;
      _OWORD v14[2] = (void *)(v19 + 1);
      unint64_t v20 = &v14[2 * v19];
      void v20[4] = v17;
      void v20[5] = v16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    a3 = v52;
    a2 = (uint64_t)v41;
  }
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  *(void *)(v21 + 24) = a3;
  if (!v14[2])
  {
    swift_retain_n();
    sub_1001BD1C4(a2, a3);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  id v22 = self;
  swift_retain_n();
  id v23 = [v22 sharedInstance];
  id v24 = [v23 mainOrPrivateContext];

  unint64_t v25 = (void *)swift_allocObject();
  v25[2] = v24;
  v25[3] = a1;
  v25[4] = v14;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1001BED3C;
  *(void *)(v26 + 24) = v25;
  uint64_t v57 = sub_100018840;
  uint64_t v58 = v26;
  aBlock = _NSConcreteStackBlock;
  uint64_t v54 = 1107296256;
  int64_t v55 = sub_100018818;
  uint64_t v56 = &unk_100557BD8;
  unint64_t v27 = _Block_copy(&aBlock);
  id v28 = v24;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v28 performBlockAndWait:v27];
  _Block_release(v27);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v27 & 1) == 0)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    uint64_t v40 = static OS_dispatch_queue.main.getter();
    unint64_t v30 = v42;
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v41 = v25;
    uint64_t v43 = *(void *)(v43 + 8);
    ((void (*)(char *, uint64_t))v43)(v30, v51);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_1001BECEC;
    *(void *)(v31 + 24) = v21;
    uint64_t v57 = sub_1001BED58;
    uint64_t v58 = v31;
    aBlock = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    int64_t v55 = sub_10003B424;
    uint64_t v56 = &unk_100557C28;
    uint64_t v32 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v33 = v44;
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10002FC48();
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_10002FBEC();
    uint64_t v34 = v46;
    int v35 = v28;
    uint64_t v36 = v49;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v37 = v50;
    uint64_t v38 = (void *)v40;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v36);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v47);
    ((void (*)(char *, uint64_t))v43)(v37, v51);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001BD1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v19 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v19 - v13;
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  Class v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  aBlock[4] = v20;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100557C50;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v19);
}

uint64_t sub_1001BD510()
{
  uint64_t v1 = v0;
  type metadata accessor for MTNotificationTestAction();
  uint64_t v2 = sub_100244C34(v0);
  int64_t v3 = v2[2];
  if (v3)
  {
    sub_1001BA6D8(0, v3, 0);
    id v4 = v2 + 7;
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1001BA6D8(v10 > 1, v9 + 1, 1);
      }
      v4 += 4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[4 * v9];
      v11[4] = v6;
      v11[5] = v5;
      void v11[6] = v8;
      v11[7] = v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v1 = v0;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v1[13] = _swiftEmptyArrayStorage;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BD648()
{
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v2) {
    return swift_bridgeObjectRelease_n();
  }
  while (1)
  {
    uint64_t result = self;
    id v31 = (id)result;
    if (v2 < 1) {
      break;
    }
    unint64_t v28 = v1 & 0xC000000000000001;
    uint64_t v29 = *(void *)(v30 + 48);
    id v27 = self;
    uint64_t v4 = 0;
    uint64_t v25 = v2;
    unint64_t v26 = v1;
    while (1)
    {
      uint64_t v5 = v28 ? specialized _ArrayBuffer._getElementSlowPath(_:)() : swift_retain();
      uint64_t v6 = *(void *)(v5 + 16);
      uint64_t v7 = v6 - v29;
      if (__OFSUB__(v6, v29)) {
        break;
      }
      uint64_t v8 = *(void *)(v5 + 24);
      id v9 = [v31 sharedInstance];
      id v10 = [v9 mainOrPrivateContext];

      id v11 = [objc_allocWithZone((Class)MTEpisodeLookupRequest) init];
      [v11 setStoreTrackId:*(void *)(v8 + 48)];
      id v12 = [v27 sharedInstance];
      id v13 = [v12 findEpisodeWithRequest:v11];

      if (v13)
      {
        id v14 = [v13 managedObjectContext];
        if (v14)
        {
          Class v15 = v14;
          id v16 = (void *)swift_allocObject();
          v16[2] = v13;
          void v16[3] = sub_1001BEBCC;
          v16[4] = v30;
          uint64_t v17 = swift_allocObject();
          id v24 = v10;
          *(void *)(v17 + 16) = sub_1001BEC70;
          *(void *)(v17 + 24) = v16;
          uint64_t v36 = sub_100018840;
          uint64_t v37 = v17;
          aBlock = _NSConcreteStackBlock;
          uint64_t v33 = 1107296256;
          uint64_t v34 = sub_100018818;
          int v35 = &unk_100557A98;
          unint64_t v1 = (unint64_t)_Block_copy(&aBlock);
          id v18 = v13;
          swift_retain();
          swift_release();
          [v15 performBlockAndWait:v1];

          _Block_release((const void *)v1);
          LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if (v18) {
            goto LABEL_19;
          }
        }
        else
        {
        }
      }
      id v19 = [v31 sharedInstance:v24];
      id v20 = [v19 mainOrPrivateContext];

      uint64_t v21 = (void *)swift_allocObject();
      v21[2] = v30;
      v21[3] = v7;
      v21[4] = v10;
      v21[5] = v8;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = sub_1001BEC1C;
      *(void *)(v22 + 24) = v21;
      uint64_t v36 = sub_10004A010;
      uint64_t v37 = v22;
      aBlock = _NSConcreteStackBlock;
      uint64_t v33 = 1107296256;
      uint64_t v34 = sub_100018818;
      int v35 = &unk_100557A20;
      unint64_t v1 = (unint64_t)_Block_copy(&aBlock);
      swift_retain();
      id v23 = v10;
      swift_retain();
      swift_retain();
      swift_release();
      [v20 performBlockAndWait:v1];

      _Block_release((const void *)v1);
      LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      if (v20) {
        goto LABEL_18;
      }
      ++v4;
      unint64_t v1 = v26;
      if (v25 == v4) {
        return swift_bridgeObjectRelease_n();
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain_n();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (!v2) {
      return swift_bridgeObjectRelease_n();
    }
  }
  __break(1u);
  return result;
}

void sub_1001BDB24(void *a1, id a2, uint64_t a3)
{
  id v5 = [a2 uuid];
  if (!v5)
  {
LABEL_7:
    id v12 = [a1 uuid];
    if (v12)
    {
      id v13 = v12;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v14 = [self sharedInstance];
      if (v14)
      {
        Class v15 = v14;
        sub_100054B78(&qword_1005F6ED0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10046D010;
        AnyHashable.init<A>(_:)();
        sub_100172008(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        Class isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v15 deleteEpisodeUuids:isa];
      }
      else
      {
        __break(1u);
      }
    }
    return;
  }
  uint64_t v6 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (v7 != *(void *)(a3 + 16) || v9 != *(void *)(a3 + 24))
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v11) {
      return;
    }
    goto LABEL_7;
  }

  swift_bridgeObjectRelease();
}

void sub_1001BDCF8(void *a1, unint64_t a2, void *a3, uint64_t a4)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v13 = a1[13];
  if (*(void *)(v13 + 16) <= a2)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    id v10 = sub_1002EF4D8(0, v10[2] + 1, 1, v10);
    *uint64_t v9 = v10;
LABEL_7:
    unint64_t v21 = v10[2];
    unint64_t v20 = v10[3];
    if (v21 >= v20 >> 1)
    {
      id v10 = sub_1002EF4D8((void *)(v20 > 1), v21 + 1, 1, v10);
      *uint64_t v9 = v10;
    }
    v10[2] = v21 + 1;
    uint64_t v22 = &v10[4 * v21];
    v22[4] = v6;
    v22[5] = v5;
    void v22[6] = v11;
    v22[7] = v8;
    swift_endAccess();
    [v4 saveInCurrentBlock];

    return;
  }
  uint64_t v4 = a3;
  uint64_t v15 = v13 + 32 * a2;
  uint64_t v6 = *(void *)(v15 + 32);
  uint64_t v5 = *(void *)(v15 + 40);
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  id v7 = [v4 episodeForUuid:v16];

  if (v7)
  {
    [v7 setStoreTrackId:*(void *)(a4 + 48)];
    id v17 = [v7 podcast];
    if (v17)
    {
      id v18 = v17;
      [v17 setStoreCollectionId:*(void *)(a4 + 56)];
    }
    uint64_t v11 = a1[2];
    uint64_t v8 = a1[3];
    uint64_t v9 = a1 + 14;
    swift_beginAccess();
    id v10 = (void *)a1[14];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a1[14] = v10;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }

  swift_bridgeObjectRelease();
}

void sub_1001BDEE4(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v16 = [a1 podcastForUuid:v5];

  if (!v16) {
    goto LABEL_9;
  }
  id v6 = [v16 episodes];
  if (!v6) {
    goto LABEL_9;
  }
  id v7 = v6;
  sub_10004D29C(0, (unint64_t *)&qword_100603220);
  sub_1001BED60();
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = (v8 & 0xC000000000000001) != 0 ? __CocoaSet.count.getter() : *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a3 + 16) >= v9)
  {
LABEL_9:
    id v15 = [self sharedInstance];
    if (v15)
    {
      uint64_t v11 = v15;
      v14.super.Class isa = (Class)String._bridgeToObjectiveC()();
      [v11 deletePodcastWithUuid:v14.super.isa];
      goto LABEL_11;
    }
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  id v10 = [self sharedInstance];
  if (!v10) {
    goto LABEL_15;
  }
  uint64_t v11 = v10;
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000505EC(v12);
  swift_bridgeObjectRelease();
  sub_1001BE0E4(v13);
  swift_bridgeObjectRelease();
  v14.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 deleteEpisodeUuids:v14.super.isa];
LABEL_11:
}

uint64_t sub_1001BE0E4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100054B78(&qword_1005F64F0);
    uint64_t v2 = (void *)static _SetStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1 + 56;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  uint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t v8 = (char *)(v2 + 7);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_28;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v7) {
      goto LABEL_37;
    }
    uint64_t v14 = *(void *)(v3 + 8 * v13);
    int64_t v15 = v10 + 1;
    if (!v14)
    {
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v7) {
        goto LABEL_37;
      }
      uint64_t v14 = *(void *)(v3 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v10 + 3;
        if (v10 + 3 >= v7) {
          goto LABEL_37;
        }
        uint64_t v14 = *(void *)(v3 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v10 + 4;
          if (v10 + 4 >= v7) {
            goto LABEL_37;
          }
          uint64_t v14 = *(void *)(v3 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v6 = (v14 - 1) & v14;
    int64_t v10 = v15;
LABEL_28:
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v17 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)&v8[8 * (v18 >> 6)]) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v18) & ~*(void *)&v8[8 * (v18 >> 6)])) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v22 = v19 == v21;
        if (v19 == v21) {
          unint64_t v19 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)&v8[8 * v19];
      }
      while (v23 == -1);
      unint64_t v11 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(void *)&v8[(v11 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v11;
    uint64_t v12 = v2[6] + 40 * v11;
    *(_OWORD *)uint64_t v12 = v24;
    *(_OWORD *)(v12 + 16) = v25;
    *(void *)(v12 + 32) = v26;
    ++v2[2];
  }
  int64_t v16 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_10004E644();
    return (uint64_t)v2;
  }
  uint64_t v14 = *(void *)(v3 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v7) {
      goto LABEL_37;
    }
    uint64_t v14 = *(void *)(v3 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_1001BE3D8(uint64_t (*a1)(void))
{
  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v3 = result;
    [result immediatelyDeleteAllHiddenPodcasts];

    return (id)a1();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BE448()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1001BE4A8()
{
  sub_1001BE448();

  return swift_deallocClassInstance();
}

void sub_1001BE4DC(uint64_t a1, uint64_t a2)
{
}

uint64_t ChannelLockupGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1001BE514()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1001BE54C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_1001BE58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  v10[6] = a5;
  v10[7] = a5;
  swift_bridgeObjectRetain();
  return v10;
}

uint64_t MTNotificationTestAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MTNotificationTestAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTNotificationTestAction()
{
  return self;
}

uint64_t type metadata accessor for MTNotificationTestAction.PostFakeContentStep()
{
  return self;
}

uint64_t type metadata accessor for MTNotificationTestAction.ClearAllHistoryStep()
{
  return self;
}

uint64_t type metadata accessor for MTNotificationTestAction.RealContentForDeletion()
{
  return self;
}

uint64_t type metadata accessor for MTNotificationTestAction.RealContent()
{
  return self;
}

void sub_1001BE734(void *a1, void (*a2)(void *))
{
  id v4 = [a1 podcast];
  if (v4)
  {
    id v5 = v4;
    a2(a1);
  }
}

uint64_t sub_1001BE7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  __chkstk_darwin(v5);
  int64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v24 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  int64_t v15 = self;
  id v16 = [v15 currentNotificationCenter];
  [v16 removeAllDeliveredNotifications];

  id v17 = [v15 currentNotificationCenter];
  [v17 removeAllPendingNotificationRequests];

  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  unint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v26;
  *(void *)(v20 + 16) = v25;
  *(void *)(v20 + 24) = v21;
  aBlock[4] = sub_10004A018;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_1005579A8;
  BOOL v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
  return ((uint64_t (*)(char *, uint64_t))v19)(v14, v24);
}

uint64_t sub_1001BEB94()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1001BEBCC(void *a1, void *a2)
{
  sub_1001BDB24(a1, a2, v2);
}

uint64_t sub_1001BEBD4()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_1001BEC1C()
{
  sub_1001BDCF8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001BEC28()
{
  return swift_deallocObject();
}

uint64_t sub_1001BEC38()
{
  return swift_deallocObject();
}

void sub_1001BEC70()
{
  sub_1001BE734(*(void **)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

uint64_t sub_1001BEC7C()
{
  return swift_deallocObject();
}

uint64_t sub_1001BEC90()
{
  return sub_1001BC884(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001BECA0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001BECE0()
{
  return sub_1001BCB28(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001BECEC()
{
  return sub_1001BD1C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001BECF4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1001BED3C()
{
  sub_1001BDEE4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001BED48()
{
  return swift_deallocObject();
}

id sub_1001BED58()
{
  return sub_1001BE3D8(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t sub_1001BED60()
{
  unint64_t result = qword_1005F8890;
  if (!qword_1005F8890)
  {
    sub_10004D29C(255, (unint64_t *)&qword_100603220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F8890);
  }
  return result;
}

id sub_1001BEDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v100 = a6;
  uint64_t v101 = a7;
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v12 - 8);
  uint64_t v96 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v14 - 8);
  uint64_t v99 = (uint64_t)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v98 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v97 = (uint64_t *)((char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_1005F88A0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  BOOL v22 = (char *)&v89 - v21;
  uint64_t v23 = a2;
  if (!a2)
  {
    a1 = Action.title.getter();
    uint64_t v23 = v24;
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005FD240);
  id v25 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v26 = sub_1001BF7FC(a1, v23, a3, a4, a5, 0, 1);
  id v104 = v26;
  dispatch thunk of FlowAction.destination.getter();
  uint64_t v27 = type metadata accessor for FlowDestination();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v22, 1, v27) != 1)
  {
    sub_100054BBC((uint64_t)v22, (uint64_t)v20, (uint64_t *)&unk_1005F88A0);
    int v30 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v20, v27);
    if (v30 == enum case for FlowDestination.page(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v20, v27);
      uint64_t v31 = *(void *)v20;
      uint64_t v32 = sub_100054B78(&qword_1005F88B8);
      uint64_t v33 = (uint64_t)v96;
      sub_100053820((uint64_t)&v20[*(int *)(v32 + 48)], (uint64_t)v96, (uint64_t *)&unk_1005F7750);
      uint64_t v34 = *(int *)(sub_100054B78((uint64_t *)&unk_1005F88C0) + 48);
      int v35 = v97;
      sub_100054BBC(v33, (uint64_t)v97, (uint64_t *)&unk_1005F7750);
      *(uint64_t *)((char *)v35 + v34) = v31;
      uint64_t v36 = v102;
      swift_storeEnumTagMultiPayload();
      id v37 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
      swift_retain();
      uint64_t v38 = [v37 init];
      uint64_t v39 = (uint64_t)v35;
      uint64_t v40 = v99;
      sub_1001BF8D0(v39, v99);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v98 + 56))(v40, 0, 1, v36);
      uint64_t v41 = (uint64_t)&v38[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
      swift_beginAccess();
      sub_1001BF934(v40, v41);
      swift_endAccess();
      v38[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
      sub_10004D29C(0, &qword_1005F88B0);
      BOOL v42 = NSString.init(stringLiteral:)();
      uint64_t v43 = v38;
      sub_1001BFB4C((uint64_t)v42, (uint64_t)v38);
      swift_release();

      sub_100054B1C(v33, (uint64_t *)&unk_1005F7750);
    }
    else if (v30 == enum case for FlowDestination.episodeList(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v20, v27);
      uint64_t v96 = v22;
      uint64_t v44 = *(void *)v20;
      uint64_t v90 = *((void *)v20 + 1);
      uint64_t v45 = v90;
      uint64_t v47 = *((void *)v20 + 2);
      uint64_t v46 = *((void *)v20 + 3);
      uint64_t v48 = *((void *)v20 + 4);
      uint64_t v49 = *((void *)v20 + 5);
      uint64_t v50 = *((void *)v20 + 6);
      uint64_t v51 = *((void *)v20 + 7);
      int v52 = v20[64];
      uint64_t v53 = v97;
      uint64_t *v97 = v44;
      v53[1] = v45;
      uint64_t v54 = v44;
      uint64_t v92 = v44;
      uint64_t v93 = v47;
      v53[2] = v47;
      v53[3] = v46;
      uint64_t v94 = v46;
      uint64_t v95 = v48;
      v53[4] = v48;
      v53[5] = v49;
      v53[6] = v50;
      v53[7] = v51;
      uint64_t v55 = v50;
      *((unsigned char *)v53 + 64) = v52;
      int v91 = v52;
      swift_storeEnumTagMultiPayload();
      id v56 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
      uint64_t v57 = v54;
      uint64_t v58 = v90;
      uint64_t v59 = v47;
      uint64_t v60 = v49;
      sub_1001A5920(v57, v90, v59, v46, v48, v49, v55, v51, v52);
      uint64_t v61 = [v56 init];
      uint64_t v62 = (uint64_t)v53;
      uint64_t v63 = v99;
      sub_1001BF8D0(v62, v99);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v98 + 56))(v63, 0, 1, v102);
      uint64_t v64 = (uint64_t)&v61[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
      swift_beginAccess();
      sub_1001BF934(v63, v64);
      swift_endAccess();
      v61[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
      sub_10004D29C(0, &qword_1005F88B0);
      uint64_t v65 = NSString.init(stringLiteral:)();
      int64_t v66 = v61;
      sub_1001BFB4C((uint64_t)v65, (uint64_t)v61);

      BOOL v22 = v96;
      sub_100053720(v92, v58, v93, v94, v95, v60, v55, v51, v91);
    }
    else if (v30 == enum case for FlowDestination.station(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v20, v27);
      char v67 = v97;
      uint64_t *v97 = *(void *)v20;
      uint64_t v68 = v102;
      swift_storeEnumTagMultiPayload();
      id v69 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
      swift_retain();
      id v70 = [v69 init];
      uint64_t v71 = (uint64_t)v67;
      uint64_t v72 = v99;
      sub_1001BF8D0(v71, v99);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v98 + 56))(v72, 0, 1, v68);
      uint64_t v73 = (uint64_t)&v70[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
      swift_beginAccess();
      sub_1001BF934(v72, v73);
      swift_endAccess();
      v70[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
      sub_10004D29C(0, &qword_1005F88B0);
      uint64_t v74 = NSString.init(stringLiteral:)();
      uint64_t v75 = v70;
      sub_1001BFB4C((uint64_t)v74, (uint64_t)v70);
      swift_release();
    }
    else
    {
      if (v30 != enum case for FlowDestination.shows(_:))
      {

        (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v27);
        goto LABEL_5;
      }
      unint64_t v76 = v97;
      *(unsigned char *)uint64_t v97 = 8;
      uint64_t v77 = v102;
      swift_storeEnumTagMultiPayload();
      uint64_t v78 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
      uint64_t v79 = (uint64_t)v76;
      uint64_t v80 = v99;
      sub_1001BF8D0(v79, v99);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v98 + 56))(v80, 0, 1, v77);
      uint64_t v81 = (uint64_t)&v78[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
      swift_beginAccess();
      sub_1001BF934(v80, v81);
      swift_endAccess();
      v78[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
      sub_10004D29C(0, &qword_1005F88B0);
      Swift::String v82 = NSString.init(stringLiteral:)();
      unint64_t v83 = v78;
      sub_1001BFB4C((uint64_t)v82, (uint64_t)v78);
    }
    sub_100054B1C((uint64_t)v22, (uint64_t *)&unk_1005F88A0);
    unint64_t v84 = v104;
    uint64_t v85 = swift_allocObject();
    uint64_t v86 = v101;
    *(void *)(v85 + 16) = v100;
    *(void *)(v85 + 24) = v86;
    aBlock[4] = sub_1001BFA88;
    aBlock[5] = v85;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001BF99C;
    uint64_t aBlock[3] = &unk_100557CA0;
    uint64_t v87 = _Block_copy(aBlock);
    id v29 = v84;
    swift_retain();
    swift_release();
    [v29 setHandler:v87];
    _Block_release(v87);

    return v29;
  }

LABEL_5:
  sub_100054B1C((uint64_t)v22, (uint64_t *)&unk_1005F88A0);
  return 0;
}

id sub_1001BF7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  if (!a2)
  {
    NSString v11 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v12 = 0;
    goto LABEL_6;
  }
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithText:v11 detailText:v12 image:a5 accessoryImage:a6 accessoryType:a7];

  return v13;
}

uint64_t sub_1001BF8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BF934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BF99C(uint64_t a1, int a2, void *aBlock)
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t))(a1 + 32);
  uint64_t v4 = _Block_copy(aBlock);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  swift_retain();
  uint64_t v6 = swift_unknownObjectRetain();
  v3(v6, sub_1000343E0, v5);
  swift_release();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1001BFA50()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001BFA88(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 16))();
  return a2(v4);
}

uint64_t sub_1001BFB14()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_1001BFB4C(uint64_t a1, uint64_t a2)
{
  if ([*v2 userInfo])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)int64_t v7 = 0u;
    long long v8 = 0u;
  }
  sub_100053820((uint64_t)v7, (uint64_t)v9, &qword_1005F5D30);
  if (!v9[3])
  {
    sub_100054B1C((uint64_t)v9, &qword_1005F5D30);
    goto LABEL_10;
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F88D0);
  if ((swift_dynamicCast() & 1) == 0
    || (id v5 = v7[0],
        [v7[0] mutableCopy],
        v5,
        _bridgeAnyObjectToAny(_:)(),
        swift_unknownObjectRelease(),
        sub_10004D29C(0, &qword_1005F88D8),
        (swift_dynamicCast() & 1) == 0))
  {
LABEL_10:
    id v6 = [objc_allocWithZone((Class)NSMutableDictionary) init];
    if (!a2) {
      goto LABEL_8;
    }
LABEL_11:
    [v6 setObject:a2 forKey:a1 v7[0], v7[1], v8];
    goto LABEL_12;
  }
  id v6 = v9[0];
  if (a2) {
    goto LABEL_11;
  }
LABEL_8:
  [v6 removeObjectForKey:a1, v7[0], v7[1], v8];
LABEL_12:
  [*v2 setUserInfo:v6];
}

uint64_t sub_1001BFD04()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CarPlayStationsProvider()
{
  return self;
}

uint64_t sub_1001BFD68()
{
  uint64_t v1 = type metadata accessor for ObserverQueue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StationListOptions();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F8998);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v18 = v9;
  uint64_t v19 = v10;
  __chkstk_darwin(v9);
  NSString v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v0;
  swift_getObjectType();
  static StationListOptions.list.getter();
  dispatch thunk of LibraryDataProviderProtocol.fetchStationsObserver(with:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for ObserverQueue.main(_:), v1);
  sub_100044200(&qword_1005F89A0, &qword_1005F89A8);
  uint64_t v13 = Promise<A>.observerPublisher(receiveOn:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v20 = v13;
  swift_retain();
  sub_100054B78((uint64_t *)&unk_1005F89B0);
  sub_100054B78((uint64_t *)&unk_1005F8BD0);
  sub_100044200(&qword_1005F89C0, (uint64_t *)&unk_1005F89B0);
  Publisher.map<A>(_:)();
  swift_release();
  swift_release();
  sub_100044200(&qword_1005F89C8, &qword_1005F8998);
  uint64_t v14 = v18;
  uint64_t v15 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v14);
  return v15;
}

uint64_t sub_1001C00E0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *a1;
  swift_retain();
  unint64_t v11 = (unint64_t)sub_1001C09BC(v10, a2);
  swift_release();
  sub_1001C0DD4();
  static OS_os_log.carPlay.getter();
  swift_bridgeObjectRetain_n();
  NSString v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  unint64_t v14 = v11 >> 62;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 134217984;
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v23 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "CarPlayStationsProvider: section total items count is %ld.", v15, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10046D060;
  swift_bridgeObjectRetain();
  if (v14)
  {
    sub_100054B78(&qword_1005F7E20);
    unint64_t v18 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    unint64_t v18 = v11;
  }
  swift_bridgeObjectRelease();
  id v19 = objc_allocWithZone((Class)CPListSection);
  sub_1001C04A0(v18);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v21 = [v19 initWithItems:isa];

  *(void *)(v17 + 32) = v21;
  uint64_t v23 = v17;
  uint64_t result = specialized Array._endMutation()();
  *a3 = v23;
  return result;
}

uint64_t sub_1001C03F4()
{
  return sub_1001BFD68();
}

uint64_t sub_1001C0418()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_1001C0498@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001C00E0(a1, v2, a2);
}

char *sub_1001C04A0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (char *)v3;
  }
  NSString v12 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001C06E0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      unint64_t v5 = 0;
      uint64_t v3 = v12;
      do
      {
        sub_1001C0700(v5, a1);
        sub_100054B78(&qword_1005F7E20);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001C06E0(0, v3[2] + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_1001C06E0((char *)(v6 > 1), v7 + 1, 1);
          uint64_t v3 = v12;
        }
        ++v5;
        v3[2] = v7 + 1;
        sub_10004D384(v11, &v3[4 * v7 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v8 = a1 + 32;
      uint64_t v3 = v12;
      do
      {
        swift_unknownObjectRetain();
        sub_100054B78(&qword_1005F7E20);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001C06E0(0, v3[2] + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v10 = v3[2];
        unint64_t v9 = v3[3];
        if (v10 >= v9 >> 1)
        {
          sub_1001C06E0((char *)(v9 > 1), v10 + 1, 1);
          uint64_t v3 = v12;
        }
        v3[2] = v10 + 1;
        sub_10004D384(v11, &v3[4 * v10 + 4]);
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return (char *)v3;
  }
  __break(1u);
  return result;
}

char *sub_1001C06E0(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001C08B4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001C0700(unint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    uint64_t v2 = _CocoaArrayWrapper.subscript.getter();
    if (swift_dynamicCastObjCProtocolConditional()) {
      return v2;
    }
LABEL_10:
    _StringGuts.grow(_:)(85);
    unint64_t v3 = 0xD000000000000046;
    uint64_t v4 = "NSArray element failed to match the Swift Array Element type\nExpected ";
    goto LABEL_11;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain();
  if (swift_dynamicCastObjCProtocolConditional()) {
    return v2;
  }
  _StringGuts.grow(_:)(82);
  unint64_t v3 = 0xD000000000000043;
  uint64_t v4 = "Down-casted Array element failed to match the target type\nExpected ";
LABEL_11:
  unint64_t v6 = (unint64_t)(v4 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
  v7._unint64_t object = (void *)0x80000001004D4950;
  v7._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = 0x756F662074756220;
  v8._unint64_t object = (void *)0xEB0000000020646ELL;
  String.append(_:)(v8);
  swift_getObjectType();
  swift_unknownObjectRelease();
  v9._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:flags:)();
  __break(1u);
  return result;
}

char *sub_1001C08B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100054B78(&qword_1005F8130);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  os_log_type_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1001C09BC(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = type metadata accessor for FlowPresentationContext();
  unint64_t v6 = *(unint64_t **)(v30 - 8);
  __chkstk_darwin(v30);
  id v29 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Link();
  __chkstk_darwin(v28);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      uint64_t v26 = a2;
      uint64_t v22 = v3;
      unint64_t v31 = a1 & 0xC000000000000001;
      unsigned int v25 = enum case for FlowPresentationContext.showDetail(_:);
      uint64_t v23 = v10;
      uint64_t v24 = (void (**)(char *, void, uint64_t))(v6 + 13);
      uint64_t v11 = 4;
      unint64_t v27 = a1;
      while (1)
      {
        uint64_t v3 = v11 - 4;
        if (v31)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          a2 = v11 - 3;
          if (__OFADD__(v3, 1)) {
            goto LABEL_25;
          }
        }
        else
        {
          uint64_t v12 = *(void *)(a1 + 8 * v11);
          swift_retain();
          a2 = v11 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        unint64_t v6 = (unint64_t *)v12;
        if (StationDetail.showCount.getter() < 1)
        {
          swift_release();
        }
        else
        {
          (*v24)(v29, v25, v30);
          swift_retain();
          Link.init(station:presentationContext:showChevron:)();
          os_log_type_t v13 = self;
          unint64_t v6 = (unint64_t *)v12;
          id v14 = [v13 stringForEpisodeCount:StationDetail.episodeCount.getter() titleCase:1];
          if (v14)
          {
            uint64_t v15 = v14;
            uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v18 = v17;
          }
          else
          {
            uint64_t v16 = 0;
            uint64_t v18 = 0;
          }
          sub_1001C0E3C((uint64_t)&v9[*(int *)(v28 + 36)], (uint64_t)v33);
          if (v34)
          {
            uint64_t v19 = v26;
            swift_retain();
            sub_100054B78(&qword_1005F82A0);
            type metadata accessor for FlowAction();
            if (swift_dynamicCast())
            {
              unint64_t v6 = v32;
              id v20 = sub_1001BEDF8(*((void *)v9 + 2), *((void *)v9 + 3), v16, v18, 0, (uint64_t)sub_1001C0E14, v19);
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              sub_1001C0F04((uint64_t)v9);
              swift_release();
              a1 = v27;
              uint64_t v10 = v23;
              if (v20)
              {
                unint64_t v6 = &v35;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              goto LABEL_5;
            }
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v10 = v23;
          }
          else
          {
            swift_retain();
            sub_1001C0EA4((uint64_t)v33);
            swift_release();
            swift_bridgeObjectRelease();
          }
          sub_1001C0F04((uint64_t)v9);
          swift_release();
          a1 = v27;
        }
LABEL_5:
        ++v11;
        if (a2 == v10)
        {
          swift_bridgeObjectRelease();
          return (void *)v35;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1001C0DD4()
{
  unint64_t result = qword_1005F89D0;
  if (!qword_1005F89D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005F89D0);
  }
  return result;
}

uint64_t sub_1001C0E14()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_1001C0E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F89E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C0EA4(uint64_t a1)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005F89E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001C0F04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Link();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1001C0F60(uint64_t a1)
{
  uint64_t v3 = sub_100054B78(&qword_1005F7768);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v23 = (uint64_t)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v22 - v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return (char *)_swiftEmptyArrayStorage;
  }
  void v22[2] = v1;
  uint64_t v9 = *(void *)(type metadata accessor for ModernShelf() - 8);
  uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v9 + 72);
  v22[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  do
  {
    ModernShelf.header.getter();
    uint64_t v13 = type metadata accessor for Header();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
    {
      sub_100054B1C((uint64_t)v7, &qword_1005F7768);
    }
    else
    {
      uint64_t v15 = v23;
      sub_1001C6848((uint64_t)v7, v23);
      uint64_t v24 = Header.title.getter();
      uint64_t v17 = v16;
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
      sub_100054B1C((uint64_t)v7, &qword_1005F7768);
      if (v17)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_10004CEAC(0, *((void *)v12 + 2) + 1, 1, v12);
        }
        unint64_t v19 = *((void *)v12 + 2);
        unint64_t v18 = *((void *)v12 + 3);
        if (v19 >= v18 >> 1) {
          uint64_t v12 = sub_10004CEAC((char *)(v18 > 1), v19 + 1, 1, v12);
        }
        *((void *)v12 + 2) = v19 + 1;
        id v20 = &v12[16 * v19];
        *((void *)v20 + 4) = v24;
        *((void *)v20 + 5) = v17;
      }
    }
    v10 += v11;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t (*sub_1001C11F4())()
{
  uint64_t v1 = v0[26];
  if (v1)
  {
    uint64_t v2 = (uint64_t (*)())v0[26];
  }
  else
  {
    uint64_t v3 = v0[23];
    uint64_t v2 = sub_1001C0E14;
    v0[26] = sub_1001C0E14;
    v0[27] = v3;
    swift_retain_n();
    sub_1000536BC(0);
  }
  sub_10004ACDC(v1);
  return v2;
}

uint64_t sub_1001C127C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v2 - 8);
  uint64_t v43 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F8B20);
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005FBC00);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_1005F8B30);
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78(&qword_1005F8B38);
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v45 = v13;
  __chkstk_darwin(v13);
  BOOL v42 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78((uint64_t *)&unk_1005F8B40);
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  __chkstk_darwin(v15);
  uint64_t v46 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "CarPlayHomePageProvider: Fetch content called.", v23, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  id v49 = (id)HomePageProvider.pageContent.getter();
  swift_allocObject();
  swift_weakInit();
  sub_100054B78(&qword_1005F5BC0);
  sub_100054B78(&qword_1005F7800);
  sub_100044200((unint64_t *)&unk_1005F8B50, &qword_1005F5BC0);
  Publisher.compactMap<A>(_:)();
  swift_release();
  swift_release();
  sub_100044200((unint64_t *)&unk_1005FBC10, (uint64_t *)&unk_1005F8B20);
  uint64_t v24 = v37;
  Publisher.removeDuplicates(by:)();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v24);
  id v49 = *(id *)(v1 + 192);
  sub_100054B78((uint64_t *)&unk_1005F8B00);
  sub_100044200((unint64_t *)&unk_1005F8B60, (uint64_t *)&unk_1005FBC00);
  sub_100044200(&qword_1005F9F40, (uint64_t *)&unk_1005F8B00);
  uint64_t v25 = v39;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v25);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v49 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v26 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v27 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v43, 1, 1, v26);
  sub_100044200(&qword_1005F8B78, &qword_1005F8B30);
  sub_100059BE0();
  uint64_t v28 = v41;
  id v29 = v42;
  Publisher.receive<A>(on:options:)();
  sub_100054B1C(v27, &qword_1005F9F20);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v28);
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1001C4A34;
  *(void *)(v31 + 24) = v30;
  static Subscribers.Demand.unlimited.getter();
  sub_100054B78((uint64_t *)&unk_1005F9EB0);
  sub_100044200(&qword_1005F8B90, &qword_1005F8B38);
  sub_100044200(&qword_1005F8B98, (uint64_t *)&unk_1005F9EB0);
  uint64_t v32 = v45;
  uint64_t v33 = v46;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v32);
  swift_allocObject();
  swift_weakInit();
  sub_100044200((unint64_t *)&unk_1005F8BA0, (uint64_t *)&unk_1005F8B40);
  uint64_t v34 = v48;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v34);
  swift_beginAccess();
  sub_100054B78((uint64_t *)&unk_1005F9ED0);
  sub_100044200(qword_1005F8BB0, (uint64_t *)&unk_1005F9ED0);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001C1B80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v32 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = type metadata accessor for ModernPage();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PageContent();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_8:
    *a2 = 0;
    return result;
  }
  sub_1001C6A68(a1, (uint64_t)v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "CarPlayHomePageProvider: The page has no content. Returning an empty shelf list.", v27, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v34);
    swift_release();
    *a2 = _swiftEmptyArrayStorage;
    return sub_1001C6B34((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for PageContent);
  }
  if (EnumCaseMultiPayload != 3)
  {
    swift_release();
    *a2 = 0;
    return sub_1001C6B34((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for PageContent);
  }
  sub_1001C6ACC((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for ModernPage);
  swift_retain();
  char v21 = HomePageProvider.isStillLoading.getter();
  swift_release();
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  if (v21)
  {
    static OS_os_log.carPlay.getter();
    os_log_type_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "CarPlayHomePageProvider: Received sections and some sections are still loading.", v24, 2u);
      swift_slowDealloc();
    }
    swift_release();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
    uint64_t result = sub_1001C6B34((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for ModernPage);
    goto LABEL_8;
  }
  static OS_os_log.carPlay.getter();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "CarPlayHomePageProvider: Received sections and all sections are loaded.", v30, 2u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  uint64_t v31 = *(void *)&v15[*(int *)(v13 + 24)];
  swift_bridgeObjectRetain();
  uint64_t result = sub_1001C6B34((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for ModernPage);
  *a2 = v31;
  return result;
}

uint64_t sub_1001C2050(void *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ModernShelf();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = (void *)*a1;
  uint64_t v12 = *a2;
  uint64_t v59 = _swiftEmptyArrayStorage;
  uint64_t v54 = v11[2];
  uint64_t v55 = v4;
  uint64_t v49 = v12;
  if (v54)
  {
    uint64_t v46 = v8;
    uint64_t v47 = v5;
    uint64_t v14 = *(char **)(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v51 = (char *)v11 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    int v52 = v14;
    uint64_t v50 = *(void (***)(char *, uint64_t))(v13 + 56);
    uint64_t v53 = (void (*)(char *, char *, uint64_t))v13;
    unint64_t v48 = (unint64_t)v11;
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    do
    {
      ((void (*)(char *, char *, uint64_t))v52)(v10, &v51[(void)v50 * v15], v4);
      uint64_t v17 = ModernShelf.items.getter();
      uint64_t v58 = _swiftEmptyArrayStorage;
      uint64_t v18 = *(void *)(v17 + 16);
      specialized ContiguousArray.reserveCapacity(_:)();
      if (v18)
      {
        uint64_t v19 = v17 + 32;
        while (1)
        {
          sub_100056D54(v19, (uint64_t)v57);
          sub_100054B78(&qword_1005F8430);
          type metadata accessor for LegacyEpisodeLockup();
          if (!swift_dynamicCast()) {
            break;
          }
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v19 += 40;
          if (!--v18) {
            goto LABEL_3;
          }
        }
        uint64_t v56 = 0;
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v16 = _swiftEmptyArrayStorage;
      }
      else
      {
LABEL_3:
        uint64_t v16 = v58;
        swift_bridgeObjectRelease();
      }
      ++v15;
      uint64_t v4 = v55;
      (*(void (**)(char *, uint64_t))(v13 - 8))(v10, v55);
      sub_1001B1678((unint64_t)v16);
    }
    while (v15 != v54);
    swift_bridgeObjectRelease();
    unint64_t v48 = (unint64_t)v59;
    uint64_t v8 = v46;
    uint64_t v5 = v47;
    uint64_t v12 = v49;
  }
  else
  {
    unint64_t v48 = (unint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v59 = _swiftEmptyArrayStorage;
  uint64_t v54 = *(void *)(v12 + 16);
  if (v54)
  {
    char v21 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v20 = v5 + 16;
    int v52 = (char *)(v12 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64)));
    uint64_t v53 = v21;
    os_log_type_t v22 = *(char **)(v20 + 56);
    uint64_t v50 = (void (**)(char *, uint64_t))(v20 - 8);
    uint64_t v51 = v22;
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    do
    {
      uint64_t v27 = v20;
      v53(v8, &v52[(void)v51 * v23], v4);
      uint64_t v28 = ModernShelf.items.getter();
      uint64_t v58 = _swiftEmptyArrayStorage;
      uint64_t v29 = *(void *)(v28 + 16);
      specialized ContiguousArray.reserveCapacity(_:)();
      if (v29)
      {
        uint64_t v30 = v28 + 32;
        while (1)
        {
          sub_100056D54(v30, (uint64_t)v57);
          sub_100054B78(&qword_1005F8430);
          type metadata accessor for LegacyEpisodeLockup();
          if (!swift_dynamicCast()) {
            break;
          }
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v30 += 40;
          if (!--v29) {
            goto LABEL_15;
          }
        }
        uint64_t v56 = 0;
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v24 = _swiftEmptyArrayStorage;
      }
      else
      {
LABEL_15:
        uint64_t v24 = v58;
        swift_bridgeObjectRelease();
      }
      ++v23;
      uint64_t v25 = v55;
      (*v50)(v8, v55);
      unint64_t v26 = (unint64_t)v24;
      uint64_t v4 = v25;
      sub_1001B1678(v26);
      uint64_t v20 = v27;
    }
    while (v23 != v54);
    swift_bridgeObjectRelease();
    unint64_t v31 = (unint64_t)v59;
  }
  else
  {
    unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (!(v48 >> 62))
  {
    uint64_t v32 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v32) {
      goto LABEL_27;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    unint64_t v35 = _swiftEmptyArrayStorage;
    if (!(v31 >> 62)) {
      goto LABEL_33;
    }
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v32) {
    goto LABEL_41;
  }
LABEL_27:
  v57[0] = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001BA628(0, v32 & ~(v32 >> 63), 0);
  if (v32 < 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v34 = 0;
  unint64_t v35 = (void *)v57[0];
  do
  {
    swift_retain();
    uint64_t v36 = LegacyLockup.adamId.getter();
    swift_release();
    v57[0] = v35;
    unint64_t v38 = v35[2];
    unint64_t v37 = v35[3];
    if (v38 >= v37 >> 1)
    {
      sub_1001BA628(v37 > 1, v38 + 1, 1);
      unint64_t v35 = (void *)v57[0];
    }
    ++v34;
    _OWORD v35[2] = v38 + 1;
    v35[v38 + 4] = v36;
  }
  while (v32 != v34);
  swift_bridgeObjectRelease();
  if (!(v31 >> 62))
  {
LABEL_33:
    uint64_t v39 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v39) {
      goto LABEL_34;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v41 = _swiftEmptyArrayStorage;
LABEL_44:
    BOOL v45 = sub_10019F684(v35, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v45;
  }
LABEL_42:
  swift_bridgeObjectRetain();
  uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v39) {
    goto LABEL_43;
  }
LABEL_34:
  v57[0] = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001BA628(0, v39 & ~(v39 >> 63), 0);
  if ((v39 & 0x8000000000000000) == 0)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (void *)v57[0];
    do
    {
      swift_retain();
      uint64_t v42 = LegacyLockup.adamId.getter();
      swift_release();
      v57[0] = v41;
      unint64_t v44 = v41[2];
      unint64_t v43 = v41[3];
      if (v44 >= v43 >> 1)
      {
        sub_1001BA628(v43 > 1, v44 + 1, 1);
        uint64_t v41 = (void *)v57[0];
      }
      ++v40;
      void v41[2] = v44 + 1;
      v41[v44 + 4] = v42;
    }
    while (v39 != v40);
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1001C26BC(void *a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F8BC8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v6 = sub_1001C2834(a1);
    swift_release();
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    sub_100054B78((uint64_t *)&unk_1005F8BD0);
    Just.init(_:)();
    sub_100044200(&qword_1006089E0, &qword_1005F8BC8);
    uint64_t v6 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6;
}

uint64_t sub_1001C2834(void *a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F8BE0);
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100054B78(&qword_1005F8BE8);
  uint64_t v28 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100054B78(&qword_1005F8BF0);
  uint64_t v29 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F8BF8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  uint64_t v31 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100054B78(&qword_1005F8C00);
  uint64_t v34 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100054B78(&qword_1005F8C08);
  uint64_t v35 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v36 = a1;
  swift_bridgeObjectRetain();
  sub_100054B78(&qword_1005F7800);
  sub_100044200((unint64_t *)&unk_1005F8C10, &qword_1005F7800);
  Publishers.Sequence.init(sequence:)();
  swift_allocObject();
  swift_weakInit();
  sub_100054B78((uint64_t *)&unk_1005FD550);
  Publishers.Sequence.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
  swift_release();
  static Subscribers.Demand.unlimited.getter();
  sub_100044200(&qword_1005F8C20, &qword_1005F8BE8);
  sub_100044200(&qword_1005F8C28, (uint64_t *)&unk_1005FD550);
  uint64_t v17 = v26;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v17);
  sub_100044200(&qword_1005F8C30, &qword_1005F8BF0);
  uint64_t v18 = v27;
  Publisher.collect()();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v18);
  uint64_t v36 = _swiftEmptyArrayStorage;
  sub_100044200(&qword_1005F8C38, &qword_1005F8BF8);
  uint64_t v19 = v30;
  Publisher.replaceEmpty(with:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v19);
  *(void *)(swift_allocObject() + 16) = v24;
  swift_bridgeObjectRetain();
  sub_100054B78((uint64_t *)&unk_1005F8BD0);
  sub_100044200(&qword_1005F8C40, &qword_1005F8C00);
  uint64_t v20 = v32;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v20);
  sub_100044200(&qword_1005F8C48, &qword_1005F8C08);
  uint64_t v21 = v33;
  uint64_t v22 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v21);
  return v22;
}

uint64_t sub_1001C2EE0(unint64_t *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    int v10 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v9, (os_log_type_t)v10))
    {

      swift_bridgeObjectRelease_n();
LABEL_17:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      unint64_t v28 = v6;
      PassthroughSubject.send(_:)();
      return swift_release();
    }
    int v27 = v10;
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134218240;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    unint64_t v28 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v13 = result;
      uint64_t v26 = (uint8_t *)v11;
      if (result)
      {
LABEL_7:
        uint64_t v22 = v9;
        uint64_t v23 = v8;
        uint64_t v24 = v3;
        uint64_t v25 = v2;
        if (v13 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v14 = 0;
        do
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v15 = *(id *)(v6 + 8 * v14 + 32);
          }
          uint64_t v16 = v15;
          ++v14;
          id v17 = [v15 items:v22, v23, v24, v25];
          sub_100054B78(&qword_1005F7E20);
          unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_1001B187C(v18);
        }
        while (v13 != v14);
        swift_bridgeObjectRelease();
        unint64_t v19 = v28;
        uint64_t v3 = v24;
        uint64_t v2 = v25;
        uint64_t v9 = v22;
        if (!(v28 >> 62)) {
          goto LABEL_15;
        }
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v26 = (uint8_t *)v11;
      if (v13) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_15:
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = v26;
      unint64_t v28 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v27, "CarPlayHomePageProvider: Returned sections count %ld and total section items count %ld.", v21, 0x16u);
      swift_slowDealloc();

      goto LABEL_17;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001C32BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v62 = sub_100054B78(&qword_1005F8C50);
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100054B78(&qword_1005F8C58);
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100054B78(&qword_1005F8C60);
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100054B78(&qword_1005F8C68);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  char v67 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F8C70);
  uint64_t v71 = *(void *)(v9 - 8);
  uint64_t v72 = v9;
  __chkstk_darwin(v9);
  id v70 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_1005F8C78);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v73 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v60 = v12;
  uint64_t v15 = ModernShelf.items.getter();
  uint64_t v16 = sub_1003E461C(v15);
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_16;
  }
  uint64_t v59 = v11;
  uint64_t v78 = (uint64_t)v16;
  sub_100054B78((uint64_t *)&unk_1005F71D0);
  sub_100044200(&qword_1005F8C88, (uint64_t *)&unk_1005F71D0);
  if ((Collection.isNotEmpty.getter() & 1) == 0)
  {
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v51 = 0;
    goto LABEL_18;
  }
  uint64_t v17 = ModernShelf.id.getter();
  uint64_t v19 = v18;
  type metadata accessor for HomePageProvider();
  uint64_t Shelf = static HomePageProvider.upNextShelfID.getter();
  uint64_t v58 = a1;
  if (Shelf == v17 && v21 == v19)
  {
    int v22 = 5;
    char v23 = 7;
    uint64_t v24 = 6;
LABEL_7:
    uint64_t v57 = v24;
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v25)
  {
    int v22 = 5;
    char v23 = 7;
    uint64_t v57 = 6;
    a1 = v58;
    goto LABEL_11;
  }
  uint64_t v52 = static HomePageProvider.recentlyPlayedShelfID.getter();
  a1 = v58;
  if (v52 == v17 && v53 == v19)
  {
    int v22 = 9;
    char v23 = 8;
    uint64_t v24 = 4;
    goto LABEL_7;
  }
  char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v54 & 1) == 0) {
    goto LABEL_15;
  }
  int v22 = 9;
  char v23 = 8;
  uint64_t v57 = 4;
LABEL_12:
  uint64_t v78 = 1;
  long long v79 = 0u;
  long long v80 = 0u;
  long long v81 = 0u;
  uint64_t v82 = 0;
  char v83 = v22;
  uint64_t v26 = EpisodeListType.title.getter();
  if (!v27)
  {
    sub_100053720(1, 0, 0, 0, 0, 0, 0, 0, v22);
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t result = swift_release();
    goto LABEL_17;
  }
  uint64_t v56 = v26;
  uint64_t v55 = v27;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1004126A4(v57, (unint64_t)v16);
  LODWORD(v57) = v22;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v34 = v23;
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t v74 = v29;
  uint64_t v75 = v31;
  uint64_t v76 = v33;
  uint64_t v77 = v36;
  sub_100054B78(&qword_1005F8C90);
  sub_100044200(&qword_1005F8C98, &qword_1005F8C90);
  Publishers.Sequence.init(sequence:)();
  uint64_t v37 = swift_allocObject();
  swift_weakInit();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v37;
  *(unsigned char *)(v38 + 24) = v34;
  static Subscribers.Demand.unlimited.getter();
  sub_100054B78(&qword_1005F8CA0);
  sub_100044200(&qword_1005F8CA8, &qword_1005F8C50);
  sub_100044200((unint64_t *)&unk_1005F8CB0, &qword_1005F8CA0);
  uint64_t v39 = v62;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  a1 = v58;
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v3, v39);
  sub_10004D29C(0, (unint64_t *)&qword_1005FD240);
  sub_100044200(&qword_1005F8CC0, &qword_1005F8C58);
  uint64_t v40 = v65;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v5, v40);
  sub_100044200((unint64_t *)&unk_1005F8CC8, &qword_1005F8C60);
  uint64_t v41 = v67;
  uint64_t v42 = v66;
  Publisher.collect()();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v42);
  *(void *)(swift_allocObject() + 16) = v16;
  sub_100054B78((uint64_t *)&unk_1005F7E10);
  sub_100044200(&qword_1005F8CD8, &qword_1005F8C68);
  uint64_t v43 = v69;
  unint64_t v44 = v70;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v43);
  uint64_t v45 = swift_allocObject();
  swift_weakInit();
  uint64_t v46 = (void *)swift_allocObject();
  v46[2] = v45;
  sub_1001A5FC8((uint64_t)&v78, (uint64_t)(v46 + 3));
  uint64_t v47 = v55;
  v46[12] = v56;
  v46[13] = v47;
  LOBYTE(v36) = v57;
  sub_1001A5920(1, 0, 0, 0, 0, 0, 0, 0, v57);
  sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
  sub_100044200(&qword_1005F8CE0, &qword_1005F8C70);
  uint64_t v49 = v72;
  unint64_t v48 = v73;
  Publisher.compactMap<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v44, v49);
  sub_100044200(&qword_1005F8CE8, (uint64_t *)&unk_1005F8C78);
  uint64_t v50 = v59;
  uint64_t v51 = Publisher.eraseToAnyPublisher()();
  swift_release();
  sub_100053720(1, 0, 0, 0, 0, 0, 0, 0, v36);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v48, v50);
LABEL_18:
  *a1 = v51;
  return result;
}

uint64_t sub_1001C3DA4@<X0>(int a1@<W2>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F8D00);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    unint64_t v9 = Strong + 120;
    uint64_t v10 = *(void *)(Strong + 160);
    long long v11 = *(_OWORD *)(Strong + 32);
    v18[0] = *(_OWORD *)(Strong + 16);
    v18[1] = v11;
    v18[2] = *(_OWORD *)(Strong + 48);
    uint64_t v19 = *(void *)(Strong + 64);
    uint64_t v12 = Strong + 72;
    swift_retain();
    uint64_t v13 = sub_1001C11F4();
    uint64_t v15 = sub_100380CA0(v9, v10, 1, 0, a1, v18, v12, (uint64_t)v13, v14);
    swift_release();
    swift_release();
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)&v18[0] = 0;
    sub_100054B78(&qword_1005FD280);
    Just.init(_:)();
    sub_100044200(&qword_1005F8D10, (uint64_t *)&unk_1005F8D00);
    uint64_t v15 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *a2 = v15;
  return result;
}

id sub_1001C3F9C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_1001C3FA8@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  if (!(a2 >> 62))
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    if (v5 < 0) {
      goto LABEL_28;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  if (!v6) {
    goto LABEL_24;
  }
LABEL_3:
  if (v6 >= 1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = 0;
      uint64_t v8 = (char *)_swiftEmptyArrayStorage;
      do
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v10 = LegacyLockup.title.getter();
        uint64_t v12 = v11;
        swift_unknownObjectRelease();
        if (v12)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_10004CEAC(0, *((void *)v8 + 2) + 1, 1, v8);
          }
          unint64_t v14 = *((void *)v8 + 2);
          unint64_t v13 = *((void *)v8 + 3);
          if (v14 >= v13 >> 1) {
            uint64_t v8 = sub_10004CEAC((char *)(v13 > 1), v14 + 1, 1, v8);
          }
          *((void *)v8 + 2) = v14 + 1;
          unint64_t v9 = &v8[16 * v14];
          *((void *)v9 + 4) = v10;
          *((void *)v9 + 5) = v12;
        }
        ++v7;
      }
      while (v6 != v7);
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v8 = (char *)_swiftEmptyArrayStorage;
      do
      {
        swift_retain();
        uint64_t v17 = LegacyLockup.title.getter();
        uint64_t v19 = v18;
        swift_release();
        if (v19)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_10004CEAC(0, *((void *)v8 + 2) + 1, 1, v8);
          }
          unint64_t v21 = *((void *)v8 + 2);
          unint64_t v20 = *((void *)v8 + 3);
          if (v21 >= v20 >> 1) {
            uint64_t v8 = sub_10004CEAC((char *)(v20 > 1), v21 + 1, 1, v8);
          }
          *((void *)v8 + 2) = v21 + 1;
          uint64_t v16 = &v8[16 * v21];
          *((void *)v16 + 4) = v17;
          *((void *)v16 + 5) = v19;
        }
        ++v15;
      }
      while (v6 != v15);
    }
    swift_bridgeObjectRelease();
    if (v5 < 0) {
      goto LABEL_28;
    }
LABEL_25:
    if ((v5 & 0x4000000000000000) == 0)
    {
      uint64_t v22 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_27:
      uint64_t v25 = v22;
      sub_10025F1BC(&v25, v8);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v25;
      return result;
    }
LABEL_28:
    swift_bridgeObjectRetain();
    unint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v22 = (uint64_t)sub_10025BFA4(v24);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1001C4248(unint64_t *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  unint64_t v5 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1001C11F4();
    sub_1001C4AC0(a2, (uint64_t)v6, v7);
    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_bridgeObjectRetain();
    if (v5 >> 62)
    {
      sub_100054B78(&qword_1005F7E20);
      unint64_t v5 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone((Class)CPListSection);
    swift_bridgeObjectRetain();
    sub_1001C04A0(v5);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v11 = [v8 initWithItems:isa header:v10 sectionIndexTitle:0];
    swift_release();

    *a3 = v11;
  }
  else
  {
    *a3 = 0;
  }
}

uint64_t sub_1001C444C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1001C4458@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v5 = sub_1001C0F60(a2);
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t)sub_10025BFBC(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = v6;
  sub_1001C679C(&v9, v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v9;
  return result;
}

void sub_1001C451C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, void *a5, void (*a6)(void))
{
  EpisodeListType.title.getter();
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  id v11 = [objc_allocWithZone((Class)CPListItem) initWithText:v10 detailText:0];

  sub_10004D29C(0, &qword_1005F88B0);
  id v12 = a5;
  unint64_t v13 = NSString.init(stringLiteral:)();
  id v14 = v12;
  sub_1001BFA4C((uint64_t)v13, (uint64_t)v12);

  id v15 = v11;
  a6();

  a2();
}

uint64_t sub_1001C4664()
{
  sub_10004D2D8(v0 + 72);
  swift_release();
  sub_10004D2D8(v0 + 120);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000536BC(*(void *)(v0 + 208));
  return v0;
}

uint64_t sub_1001C46CC()
{
  sub_1001C4664();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CarPlayHomePageProvider()
{
  return self;
}

uint64_t sub_1001C4724()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_1001C47A4()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_1001C4824()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t sub_1001C484C(uint64_t a1, uint64_t a2)
{
  sub_100054B78(&qword_1005F8AF0);
  swift_allocObject();
  *(void *)(v2 + 176) = PassthroughSubject.init()();
  sub_100054B78((uint64_t *)&unk_1005F8AE0);
  swift_allocObject();
  *(void *)(v2 + 184) = PassthroughSubject.init()();
  sub_100054B78((uint64_t *)&unk_1005F8B00);
  swift_allocObject();
  *(void *)(v2 + 192) = CurrentValueSubject.init(_:)();
  *(void *)(v2 + 200) = _swiftEmptyArrayStorage;
  *(void *)(v2 + 208) = 0;
  *(void *)(v2 + 216) = 0;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a2 + 32);
  *(void *)(v2 + 64) = *(void *)(a2 + 48);
  sub_100054B78((uint64_t *)&unk_1005FBBF0);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v6, v2 + 72);
  type metadata accessor for HomePageProvider();
  swift_allocObject();
  swift_retain();
  *(void *)(v2 + 112) = HomePageProvider.init(asPartOf:platformContext:)();
  sub_100054B78((uint64_t *)&unk_1005F8B10);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(v6, v2 + 120);
  sub_100054B78(&qword_1005F7050);
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(v2 + 160) = *(void *)&v6[0];
  sub_100054B78((uint64_t *)&unk_1005F74C0);
  BaseObjectGraph.inject<A>(_:)();
  *(void *)(v2 + 168) = *(void *)&v6[0];
  swift_retain();
  HomePageProvider.loadPageContent()();
  swift_release();
  sub_1001C127C();
  return v2;
}

uint64_t sub_1001C49F4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001C4A2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1001C1B80(a1, a2);
}

uint64_t sub_1001C4A34(void *a1)
{
  return sub_1001C26BC(a1);
}

uint64_t sub_1001C4A3C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001C4A74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001C4AA8(unint64_t *a1)
{
  return sub_1001C2EE0(a1);
}

uint64_t sub_1001C4AB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001C32BC(a1);
}

uint64_t sub_1001C4AB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001C4458(a1, *(void *)(v2 + 16), a2);
}

id sub_1001C4AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  sub_1001A5FC8(a1, (uint64_t)v43);
  long long v38 = v43[0];
  long long v37 = v43[1];
  long long v36 = v43[2];
  uint64_t v5 = v44;
  uint64_t v4 = v45;
  int v35 = v46;
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v13 = [self mainBundle];
  v47._unint64_t object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0x4C4C415F454553;
  v14._unint64_t object = (void *)0xE700000000000000;
  v15._uint64_t countAndFlagsBits = 0;
  v15._unint64_t object = (void *)0xE000000000000000;
  v47._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v47);

  id v16 = objc_allocWithZone((Class)CPListItem);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [v16 initWithText:v17 detailText:0 image:0 accessoryImage:0 accessoryType:1];

  id v42 = v18;
  long long v19 = v37;
  *(_OWORD *)id v12 = v38;
  *((_OWORD *)v12 + 1) = v19;
  *((_OWORD *)v12 + 2) = v36;
  *((void *)v12 + 6) = v5;
  *((void *)v12 + 7) = v4;
  v12[64] = v35;
  swift_storeEnumTagMultiPayload();
  id v20 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
  sub_1001C69A8(a1);
  unint64_t v21 = [v20 init];
  sub_1001C6ACC((uint64_t)v12, (uint64_t)v8, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t v22 = (uint64_t)&v21[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_1001BF934((uint64_t)v8, v22);
  swift_endAccess();
  v21[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_10004D29C(0, &qword_1005F88B0);
  char v23 = v21;
  unint64_t v24 = NSString.init(stringLiteral:)();
  uint64_t v25 = v23;
  sub_1001BFA4C((uint64_t)v24, (uint64_t)v23);

  uint64_t v26 = v42;
  uint64_t v27 = (void *)swift_allocObject();
  sub_1001A5FC8(a1, (uint64_t)(v27 + 2));
  uint64_t v28 = v39;
  uint64_t v29 = v40;
  v27[11] = v25;
  v27[12] = v28;
  v27[13] = v29;
  aBlock[4] = sub_1001C6A58;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BF99C;
  uint64_t aBlock[3] = &unk_100557E58;
  uint64_t v30 = _Block_copy(aBlock);
  sub_1001C69A8(a1);
  uint64_t v31 = v25;
  id v32 = v26;
  swift_retain();
  swift_release();
  [v32 setHandler:v30];

  _Block_release(v30);
  return v32;
}

uint64_t sub_1001C4F04(id *a1, id *a2, id *a3, void **__dst, void *a5)
{
  uint64_t v5 = __dst;
  uint64_t v6 = a3;
  uint64_t v7 = (char *)a2 - (char *)a1;
  uint64_t v8 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v8 = (char *)a2 - (char *)a1;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = (char *)a3 - (char *)a2;
  uint64_t v11 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v11 = (char *)a3 - (char *)a2;
  }
  uint64_t v12 = v11 >> 3;
  int v91 = a1;
  uint64_t v90 = __dst;
  __src = a1;
  if (v9 < v11 >> 3)
  {
    if (v7 < -7) {
      goto LABEL_122;
    }
    if (__dst != a1 || &a1[v9] <= __dst)
    {
      id v13 = a2;
      memmove(__dst, a1, 8 * v9);
      a2 = v13;
      a1 = __src;
    }
    char v83 = &v5[v9];
    uint64_t v89 = v83;
    if (a2 < v6 && v7 >= 8)
    {
      long long v81 = v6;
      unint64_t v14 = a5[2];
      if (v14 <= 1) {
        uint64_t v15 = 1;
      }
      else {
        uint64_t v15 = a5[2];
      }
      uint64_t v87 = v15;
      while (1)
      {
        uint64_t v78 = v5;
        __srca = a1;
        uint64_t v85 = a2;
        id v16 = *v5;
        id v17 = *a2;
        id v18 = v16;
        id v19 = [v17 header];
        if (v19)
        {
          id v20 = v19;
          uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v23 = v22;

          if (!v14) {
            goto LABEL_40;
          }
        }
        else
        {
          uint64_t v21 = 0;
          unint64_t v23 = 0xE000000000000000;
          if (!v14) {
            goto LABEL_40;
          }
        }
        uint64_t v24 = a5[4];
        uint64_t v25 = a5[5];
        if ((v24 != v21 || v25 != v23) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v33 = a5 + 7;
          uint64_t v34 = 1;
          while (v14 != v34)
          {
            uint64_t v26 = v34;
            if (*(v33 - 1) != v21 || *v33 != v23)
            {
              char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
              uint64_t v34 = v26 + 1;
              v33 += 2;
              if ((v36 & 1) == 0) {
                continue;
              }
            }
            goto LABEL_24;
          }
LABEL_40:

          swift_bridgeObjectRelease();
          goto LABEL_54;
        }
        uint64_t v26 = 0;
LABEL_24:
        swift_bridgeObjectRelease();
        id v27 = [v18 header];
        if (v27)
        {
          uint64_t v28 = v27;
          uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v31 = v30;

          if (v24 != v29) {
            goto LABEL_30;
          }
        }
        else
        {
          uint64_t v29 = 0;
          unint64_t v31 = 0xE000000000000000;
          if (v24) {
            goto LABEL_30;
          }
        }
        if (v25 != v31)
        {
LABEL_30:
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            long long v37 = a5 + 7;
            uint64_t v38 = 1;
            while (v14 != v38)
            {
              uint64_t v32 = v38;
              if (v87 == v38) {
                goto LABEL_121;
              }
              if (*(v37 - 1) != v29 || *v37 != v31)
              {
                char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
                uint64_t v38 = v32 + 1;
                v37 += 2;
                if ((v40 & 1) == 0) {
                  continue;
                }
              }
              goto LABEL_49;
            }

            swift_bridgeObjectRelease();
LABEL_50:
            uint64_t v41 = v85 + 1;
            uint64_t v5 = v78;
            id v42 = __srca;
            if (__srca < v85 || __srca >= v41 || __srca != v85) {
              *__srca = *v85;
            }
            goto LABEL_57;
          }
          uint64_t v32 = 0;
          goto LABEL_49;
        }
        uint64_t v32 = 0;
LABEL_49:

        swift_bridgeObjectRelease();
        if (v26 < v32) {
          goto LABEL_50;
        }
LABEL_54:
        id v42 = __srca;
        if (__srca != v78) {
          *__srca = *v78;
        }
        uint64_t v5 = v78 + 1;
        uint64_t v90 = v78 + 1;
        uint64_t v41 = v85;
LABEL_57:
        a1 = v42 + 1;
        if (v5 < v83)
        {
          a2 = v41;
          if (v41 < v81) {
            continue;
          }
        }
        int v91 = a1;
        break;
      }
    }
LABEL_119:
    sub_10025CAC0(&v91, &v90, &v89);
    return 1;
  }
  if (v10 < -7) {
    goto LABEL_122;
  }
  if (__dst != a2 || &a2[v12] <= __dst)
  {
    uint64_t v43 = a2;
    memmove(__dst, a2, 8 * v12);
    a2 = v43;
    a1 = __src;
  }
  uint64_t v44 = &v5[v12];
  uint64_t v89 = v44;
  int v91 = a2;
  if (a1 >= a2 || v10 < 8) {
    goto LABEL_119;
  }
  unint64_t v45 = a5[2];
  unint64_t v88 = v45;
  if (v45 <= 1) {
    unint64_t v45 = 1;
  }
  unint64_t v75 = v45;
  unsigned __int8 v46 = a2;
  while (1)
  {
    uint64_t v86 = a2;
    Swift::String v47 = *--v46;
    id v48 = *(v44 - 1);
    id v84 = v47;
    uint64_t v76 = v48;
    id v49 = [v48 header];
    if (v49)
    {
      uint64_t v50 = v49;
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v53 = v52;
    }
    else
    {
      uint64_t v51 = 0;
      unint64_t v53 = 0xE000000000000000;
    }
    uint64_t v82 = v6;
    uint64_t v77 = v6 - 1;
    if (!v88) {
      goto LABEL_94;
    }
    uint64_t v54 = a5[4];
    uint64_t v55 = a5[5];
    if ((v54 != v51 || v55 != v53) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v63 = a5 + 7;
      uint64_t v64 = 1;
      while (1)
      {
        uint64_t v56 = v64;
        if (v88 == v64) {
          break;
        }
        if (*(v63 - 1) != v51 || *v63 != v53)
        {
          char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v64 = v56 + 1;
          v63 += 2;
          if ((v66 & 1) == 0) {
            continue;
          }
        }
        goto LABEL_78;
      }
LABEL_94:

      swift_bridgeObjectRelease();
      uint64_t v6 = v77;
      goto LABEL_109;
    }
    uint64_t v56 = 0;
LABEL_78:
    swift_bridgeObjectRelease();
    id v57 = [v84 header];
    if (v57)
    {
      uint64_t v58 = v57;
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v61 = v60;

      if (v54 != v59) {
        goto LABEL_84;
      }
    }
    else
    {
      uint64_t v59 = 0;
      unint64_t v61 = 0xE000000000000000;
      if (v54) {
        goto LABEL_84;
      }
    }
    if (v55 == v61)
    {
      uint64_t v62 = 0;
      goto LABEL_103;
    }
LABEL_84:
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      break;
    }
    uint64_t v62 = 0;
LABEL_103:

    swift_bridgeObjectRelease();
    BOOL v71 = v56 < v62;
    uint64_t v6 = v77;
    if (v71)
    {
LABEL_105:
      uint64_t v72 = __src;
      if (v82 != v86 || v6 >= v86) {
        id *v6 = *v46;
      }
      int v91 = v46;
      goto LABEL_114;
    }
LABEL_109:
    uint64_t v89 = v44 - 1;
    uint64_t v72 = __src;
    unsigned __int8 v46 = v86;
    if (v82 < v44 || v6 >= v44 || v82 != v44) {
      id *v6 = *(v44 - 1);
    }
    --v44;
LABEL_114:
    if (v46 > v72)
    {
      a2 = v46;
      if (v44 > v5) {
        continue;
      }
    }
    goto LABEL_119;
  }
  char v67 = a5 + 7;
  uint64_t v68 = 1;
  while (1)
  {
    uint64_t v62 = v68;
    if (v88 == v68)
    {

      swift_bridgeObjectRelease();
      uint64_t v6 = v77;
      goto LABEL_105;
    }
    if (v75 == v68) {
      break;
    }
    if (*(v67 - 1) != v59 || *v67 != v61)
    {
      char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v68 = v62 + 1;
      v67 += 2;
      if ((v70 & 1) == 0) {
        continue;
      }
    }
    goto LABEL_103;
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  swift_bridgeObjectRelease();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1001C560C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  if (a3 == a2) {
    return;
  }
  uint64_t v5 = a3;
  uint64_t v6 = *a4;
  unint64_t v7 = a5[2];
  if (v7 <= 1) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = a5[2];
  }
  uint64_t v35 = v8;
  long long v37 = a5 + 7;
LABEL_9:
  uint64_t v9 = *(void **)(v6 + 8 * v5);
  uint64_t v36 = v5;
  while (1)
  {
    uint64_t v10 = *(void **)(v6 + 8 * (v5 - 1));
    id v11 = v9;
    id v42 = v10;
    id v12 = [v11 header];
    uint64_t v40 = v5 - 1;
    uint64_t v41 = v11;
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;

      if (!v7) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v14 = 0;
      unint64_t v16 = 0xE000000000000000;
      if (!v7) {
        goto LABEL_7;
      }
    }
    uint64_t v18 = a5[4];
    uint64_t v17 = a5[5];
    if ((v18 != v14 || v17 != v16) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v26 = v37;
      uint64_t v27 = 1;
      while (v7 != v27)
      {
        uint64_t v19 = v27;
        if (*(v26 - 1) != v14 || *v26 != v16)
        {
          char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v27 = v19 + 1;
          v26 += 2;
          if ((v29 & 1) == 0) {
            continue;
          }
        }
        goto LABEL_18;
      }
LABEL_7:

      swift_bridgeObjectRelease();
LABEL_8:
      uint64_t v5 = v36 + 1;
      if (v36 + 1 == a2) {
        return;
      }
      goto LABEL_9;
    }
    uint64_t v19 = 0;
LABEL_18:
    swift_bridgeObjectRelease();
    id v20 = [v42 header];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;

      if (v18 != v22) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v22 = 0;
      unint64_t v24 = 0xE000000000000000;
      if (v18) {
        goto LABEL_24;
      }
    }
    if (v17 == v24)
    {
      uint64_t v25 = 0;
LABEL_42:

      swift_bridgeObjectRelease();
      if (v19 >= v25) {
        goto LABEL_8;
      }
      if (!v6) {
        break;
      }
      goto LABEL_44;
    }
LABEL_24:
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      uint64_t v25 = 0;
      goto LABEL_42;
    }
    unint64_t v30 = v37;
    uint64_t v31 = 1;
    while (v7 != v31)
    {
      uint64_t v25 = v31;
      if (v35 == v31) {
        goto LABEL_48;
      }
      if (*(v30 - 1) != v22 || *v30 != v24)
      {
        char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v31 = v25 + 1;
        v30 += 2;
        if ((v33 & 1) == 0) {
          continue;
        }
      }
      goto LABEL_42;
    }

    swift_bridgeObjectRelease();
    if (!v6) {
      break;
    }
LABEL_44:
    uint64_t v9 = *(void **)(v6 + 8 * v5);
    *(void *)(v6 + 8 * v5) = *(void *)(v6 + 8 * v40);
    *(void *)(v6 + 8 * v40) = v9;
    --v5;
    if (v40 == a1) {
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

uint64_t sub_1001C58EC(uint64_t *a1, void *a2)
{
  Swift::Int v5 = a1[1];
  swift_bridgeObjectRetain_n();
  Swift::Int v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 < v5)
  {
    if (v5 >= 0) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v5 + 1;
    }
    if (v5 < -1) {
      goto LABEL_267;
    }
    uint64_t v187 = a2;
    uint64_t v171 = a1;
    Swift::Int v172 = v6;
    uint64_t v184 = v2;
    if (v5 < 2)
    {
      id v11 = (char *)_swiftEmptyArrayStorage;
      uint64_t v193 = (uint64_t)_swiftEmptyArrayStorage;
      __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
      if (v5 != 1)
      {
        unint64_t v111 = _swiftEmptyArrayStorage[2];
        goto LABEL_222;
      }
    }
    else
    {
      uint64_t v8 = v7 >> 1;
      sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
      uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
      __dst = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v193 = v9;
    }
    Swift::Int v12 = 0;
    uint64_t v13 = *a1;
    uint64_t v183 = a2 + 7;
    uint64_t v170 = *a1 - 8;
    id v11 = (char *)_swiftEmptyArrayStorage;
    Swift::Int v14 = v5;
    Swift::Int v176 = v5;
    uint64_t v186 = *a1;
    while (1)
    {
      Swift::Int v15 = v12 + 1;
      uint64_t v177 = v11;
      Swift::Int v185 = v12;
      if (v12 + 1 >= v14) {
        goto LABEL_110;
      }
      Swift::Int v180 = v12 + 1;
      unint64_t v16 = *(void **)(v13 + 8 * v15);
      uint64_t v17 = *(void **)(v13 + 8 * v12);
      id v18 = v16;
      id v19 = v17;
      id v20 = [v18 header];
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v24 = v23;
      }
      else
      {
        uint64_t v22 = 0;
        unint64_t v24 = 0xE000000000000000;
      }
      a2 = v187;
      unint64_t v190 = v187[2];
      if (v190) {
        break;
      }

      swift_bridgeObjectRelease();
      int v188 = 0;
LABEL_55:
      Swift::Int v12 = v185;
      Swift::Int v45 = v185 + 2;
      Swift::Int v14 = v176;
      uint64_t v13 = v186;
      Swift::Int v46 = v180;
      if (v185 + 2 >= v176) {
        goto LABEL_101;
      }
      if (v190 <= 1) {
        uint64_t v47 = 1;
      }
      else {
        uint64_t v47 = v190;
      }
      uint64_t v174 = v47;
      do
      {
        id v48 = *(void **)(v13 + 8 * v46);
        id v49 = *(id *)(v13 + 8 * v45);
        id v50 = v48;
        id v51 = [v49 header];
        if (v51)
        {
          unint64_t v52 = v51;
          uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v55 = v54;
        }
        else
        {
          uint64_t v53 = 0;
          unint64_t v55 = 0xE000000000000000;
        }
        a2 = v187;
        if (v190)
        {
          uint64_t v57 = v187[4];
          uint64_t v56 = v187[5];
          if (v57 == v53 && v56 == v55 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v58 = 0;
LABEL_71:
            swift_bridgeObjectRelease();
            id v59 = [v50 header];
            if (v59)
            {
              unint64_t v60 = v59;
              uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v63 = v62;

              if (v57 != v61)
              {
LABEL_77:
                if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                {
                  uint64_t v69 = v183;
                  uint64_t v70 = 1;
                  while (1)
                  {
                    uint64_t v64 = v70;
                    if (v190 == v70) {
                      break;
                    }
                    if (v174 == v70) {
                      goto LABEL_240;
                    }
                    if (*(v69 - 1) != v61 || *v69 != v63)
                    {
                      char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      uint64_t v70 = v64 + 1;
                      v69 += 2;
                      if ((v72 & 1) == 0) {
                        continue;
                      }
                    }
                    goto LABEL_95;
                  }

                  swift_bridgeObjectRelease();
                  a2 = v187;
                  id v11 = v177;
                  if ((v188 & 1) == 0)
                  {
                    Swift::Int v15 = v45;
                    Swift::Int v14 = v176;
                    uint64_t v13 = v186;
                    Swift::Int v12 = v185;
                    goto LABEL_110;
                  }
                  goto LABEL_62;
                }
                uint64_t v64 = 0;
                goto LABEL_95;
              }
            }
            else
            {
              uint64_t v61 = 0;
              unint64_t v63 = 0xE000000000000000;
              if (v57) {
                goto LABEL_77;
              }
            }
            if (v56 != v63) {
              goto LABEL_77;
            }
            uint64_t v64 = 0;
LABEL_95:

            swift_bridgeObjectRelease();
            int v73 = v58 >= v64;
            a2 = v187;
            id v11 = v177;
            if (v188 == v73)
            {
              Swift::Int v14 = v176;
              uint64_t v13 = v186;
              goto LABEL_100;
            }
            goto LABEL_62;
          }
          uint64_t v65 = v183;
          uint64_t v66 = 1;
          while (1)
          {
            uint64_t v58 = v66;
            if (v190 == v66) {
              break;
            }
            if (*(v65 - 1) != v53 || *v65 != v55)
            {
              char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
              uint64_t v66 = v58 + 1;
              v65 += 2;
              if ((v68 & 1) == 0) {
                continue;
              }
            }
            goto LABEL_71;
          }
          a2 = v187;
          id v11 = v177;
        }

        swift_bridgeObjectRelease();
        if (v188)
        {
          Swift::Int v14 = v176;
          uint64_t v13 = v186;
          Swift::Int v12 = v185;
          if (v45 < v185) {
            goto LABEL_260;
          }
          goto LABEL_103;
        }
LABEL_62:
        Swift::Int v46 = v45++;
        Swift::Int v14 = v176;
        uint64_t v13 = v186;
      }
      while (v45 != v176);
      Swift::Int v45 = v176;
LABEL_100:
      Swift::Int v12 = v185;
LABEL_101:
      Swift::Int v15 = v45;
      if (!v188) {
        goto LABEL_110;
      }
      if (v45 < v12) {
        goto LABEL_260;
      }
LABEL_103:
      if (v12 < v45)
      {
        uint64_t v74 = (uint64_t *)(v170 + 8 * v45);
        Swift::Int v75 = v45;
        Swift::Int v76 = v12;
        uint64_t v77 = (uint64_t *)(v13 + 8 * v12);
        do
        {
          if (v76 != --v75)
          {
            if (!v13) {
              goto LABEL_265;
            }
            uint64_t v78 = *v77;
            *uint64_t v77 = *v74;
            *uint64_t v74 = v78;
          }
          ++v76;
          --v74;
          ++v77;
        }
        while (v76 < v75);
      }
      Swift::Int v15 = v45;
LABEL_110:
      if (v15 >= v14) {
        goto LABEL_165;
      }
      if (__OFSUB__(v15, v12)) {
        goto LABEL_258;
      }
      if (v15 - v12 >= v172) {
        goto LABEL_165;
      }
      Swift::Int v79 = v12 + v172;
      if (__OFADD__(v12, v172)) {
        goto LABEL_261;
      }
      if (v79 >= v14) {
        Swift::Int v79 = v14;
      }
      if (v79 < v12)
      {
LABEL_262:
        __break(1u);
LABEL_263:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_264:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_265:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_266:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_267:
        swift_bridgeObjectRelease_n();
        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      if (v15 == v79) {
        goto LABEL_165;
      }
      unint64_t v80 = a2[2];
      if (v80 <= 1) {
        uint64_t v81 = 1;
      }
      else {
        uint64_t v81 = a2[2];
      }
      Swift::Int v173 = v79;
      uint64_t v175 = v81;
      while (2)
      {
        char v83 = *(void **)(v13 + 8 * v15);
        Swift::Int v181 = v15;
        Swift::Int v84 = v15;
        while (2)
        {
          Swift::Int v85 = v84 - 1;
          uint64_t v86 = *(void **)(v13 + 8 * (v84 - 1));
          id v82 = v83;
          id v191 = v86;
          id v87 = [v82 header];
          if (v87)
          {
            unint64_t v88 = v87;
            uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v91 = v90;

            if (!v80) {
              goto LABEL_123;
            }
          }
          else
          {
            uint64_t v89 = 0;
            unint64_t v91 = 0xE000000000000000;
            if (!v80) {
              goto LABEL_123;
            }
          }
          uint64_t v93 = a2[4];
          uint64_t v92 = a2[5];
          unint64_t v189 = v82;
          if (v93 == v89 && v92 == v91 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v94 = 0;
LABEL_134:
            swift_bridgeObjectRelease();
            id v95 = [v191 header];
            if (v95)
            {
              uint64_t v96 = v95;
              uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v99 = v98;

              if (v93 != v97)
              {
LABEL_140:
                if (_stringCompareWithSmolCheck(_:_:expecting:)())
                {
                  uint64_t v100 = 0;
                  goto LABEL_158;
                }
                uint64_t v105 = v183;
                uint64_t v106 = 1;
                while (v80 != v106)
                {
                  uint64_t v100 = v106;
                  if (v175 == v106)
                  {
                    __break(1u);
LABEL_236:
                    __break(1u);
LABEL_237:
                    __break(1u);
LABEL_238:
                    __break(1u);
LABEL_239:
                    __break(1u);
LABEL_240:
                    __break(1u);
LABEL_241:
                    __break(1u);
LABEL_242:
                    __break(1u);
LABEL_243:
                    __break(1u);
LABEL_244:
                    __break(1u);
LABEL_245:
                    __break(1u);
LABEL_246:
                    __break(1u);
LABEL_247:
                    __break(1u);
LABEL_248:
                    __break(1u);
LABEL_249:
                    __break(1u);
LABEL_250:
                    __break(1u);
LABEL_251:
                    __break(1u);
LABEL_252:
                    __break(1u);
LABEL_253:
                    __break(1u);
LABEL_254:
                    __break(1u);
LABEL_255:
                    __break(1u);
LABEL_256:
                    __break(1u);
LABEL_257:
                    __break(1u);
LABEL_258:
                    __break(1u);
LABEL_259:
                    __break(1u);
LABEL_260:
                    __break(1u);
LABEL_261:
                    __break(1u);
                    goto LABEL_262;
                  }
                  if (*(v105 - 1) != v97 || *v105 != v99)
                  {
                    char v108 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    uint64_t v106 = v100 + 1;
                    v105 += 2;
                    if ((v108 & 1) == 0) {
                      continue;
                    }
                  }
                  goto LABEL_158;
                }

                swift_bridgeObjectRelease();
                uint64_t v13 = v186;
                a2 = v187;
                if (!v186) {
                  goto LABEL_263;
                }
LABEL_160:
                char v83 = *(void **)(v13 + 8 * v84);
                *(void *)(v13 + 8 * v84) = *(void *)(v13 + 8 * v85);
                *(void *)(v13 + 8 * v85) = v83;
                --v84;
                if (v85 == v185) {
                  goto LABEL_124;
                }
                continue;
              }
            }
            else
            {
              uint64_t v97 = 0;
              unint64_t v99 = 0xE000000000000000;
              if (v93) {
                goto LABEL_140;
              }
            }
            if (v92 != v99) {
              goto LABEL_140;
            }
            uint64_t v100 = 0;
LABEL_158:

            swift_bridgeObjectRelease();
            uint64_t v13 = v186;
            a2 = v187;
            if (v94 >= v100) {
              goto LABEL_124;
            }
            if (!v186) {
              goto LABEL_263;
            }
            goto LABEL_160;
          }
          break;
        }
        uint64_t v101 = v183;
        uint64_t v102 = 1;
        while (v80 != v102)
        {
          uint64_t v94 = v102;
          if (*(v101 - 1) != v89 || *v101 != v91)
          {
            char v104 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t v102 = v94 + 1;
            v101 += 2;
            if ((v104 & 1) == 0) {
              continue;
            }
          }
          goto LABEL_134;
        }
        a2 = v187;
        id v82 = v189;
LABEL_123:

        swift_bridgeObjectRelease();
        uint64_t v13 = v186;
LABEL_124:
        Swift::Int v15 = v181 + 1;
        if (v181 + 1 != v173) {
          continue;
        }
        break;
      }
      Swift::Int v15 = v173;
      id v11 = v177;
      Swift::Int v12 = v185;
LABEL_165:
      if (v15 < v12) {
        goto LABEL_253;
      }
      Swift::Int v182 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v11 = sub_10025C908(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v110 = *((void *)v11 + 2);
      unint64_t v109 = *((void *)v11 + 3);
      unint64_t v111 = v110 + 1;
      uint64_t v13 = v186;
      if (v110 >= v109 >> 1)
      {
        uint64_t v162 = sub_10025C908((char *)(v109 > 1), v110 + 1, 1, v11);
        uint64_t v13 = v186;
        id v11 = v162;
      }
      *((void *)v11 + 2) = v111;
      uint64_t v112 = v11 + 32;
      uint64_t v113 = &v11[16 * v110 + 32];
      *(void *)uint64_t v113 = v185;
      *((void *)v113 + 1) = v182;
      if (v110)
      {
        while (2)
        {
          unint64_t v114 = v111 - 1;
          if (v111 >= 4)
          {
            uint64_t v119 = &v112[16 * v111];
            uint64_t v120 = *((void *)v119 - 8);
            uint64_t v121 = *((void *)v119 - 7);
            BOOL v125 = __OFSUB__(v121, v120);
            uint64_t v122 = v121 - v120;
            if (v125) {
              goto LABEL_241;
            }
            uint64_t v124 = *((void *)v119 - 6);
            uint64_t v123 = *((void *)v119 - 5);
            BOOL v125 = __OFSUB__(v123, v124);
            uint64_t v117 = v123 - v124;
            char v118 = v125;
            if (v125) {
              goto LABEL_242;
            }
            unint64_t v126 = v111 - 2;
            Swift::Int v127 = &v112[16 * v111 - 32];
            uint64_t v129 = *(void *)v127;
            uint64_t v128 = *((void *)v127 + 1);
            BOOL v125 = __OFSUB__(v128, v129);
            uint64_t v130 = v128 - v129;
            if (v125) {
              goto LABEL_244;
            }
            BOOL v125 = __OFADD__(v117, v130);
            uint64_t v131 = v117 + v130;
            if (v125) {
              goto LABEL_247;
            }
            if (v131 >= v122)
            {
              unint64_t v149 = &v112[16 * v114];
              uint64_t v151 = *(void *)v149;
              uint64_t v150 = *((void *)v149 + 1);
              BOOL v125 = __OFSUB__(v150, v151);
              uint64_t v152 = v150 - v151;
              if (v125) {
                goto LABEL_251;
              }
              BOOL v142 = v117 < v152;
            }
            else
            {
LABEL_184:
              if (v118) {
                goto LABEL_243;
              }
              unint64_t v126 = v111 - 2;
              uint64_t v132 = &v112[16 * v111 - 32];
              uint64_t v134 = *(void *)v132;
              uint64_t v133 = *((void *)v132 + 1);
              BOOL v135 = __OFSUB__(v133, v134);
              uint64_t v136 = v133 - v134;
              char v137 = v135;
              if (v135) {
                goto LABEL_246;
              }
              uint64_t v138 = &v112[16 * v114];
              uint64_t v140 = *(void *)v138;
              uint64_t v139 = *((void *)v138 + 1);
              BOOL v125 = __OFSUB__(v139, v140);
              uint64_t v141 = v139 - v140;
              if (v125) {
                goto LABEL_249;
              }
              if (__OFADD__(v136, v141)) {
                goto LABEL_250;
              }
              if (v136 + v141 < v117) {
                goto LABEL_196;
              }
              BOOL v142 = v117 < v141;
            }
            if (v142) {
              unint64_t v114 = v126;
            }
          }
          else
          {
            if (v111 == 3)
            {
              uint64_t v116 = *((void *)v11 + 4);
              uint64_t v115 = *((void *)v11 + 5);
              BOOL v125 = __OFSUB__(v115, v116);
              uint64_t v117 = v115 - v116;
              char v118 = v125;
              goto LABEL_184;
            }
            uint64_t v143 = *((void *)v11 + 4);
            uint64_t v144 = *((void *)v11 + 5);
            BOOL v125 = __OFSUB__(v144, v143);
            uint64_t v136 = v144 - v143;
            char v137 = v125;
LABEL_196:
            if (v137) {
              goto LABEL_245;
            }
            unint64_t v145 = &v112[16 * v114];
            uint64_t v147 = *(void *)v145;
            uint64_t v146 = *((void *)v145 + 1);
            BOOL v125 = __OFSUB__(v146, v147);
            uint64_t v148 = v146 - v147;
            if (v125) {
              goto LABEL_248;
            }
            if (v148 < v136) {
              goto LABEL_213;
            }
          }
          unint64_t v153 = v114 - 1;
          if (v114 - 1 >= v111) {
            goto LABEL_236;
          }
          if (!v13) {
            goto LABEL_264;
          }
          uint64_t v154 = &v112[16 * v153];
          uint64_t v155 = *(void *)v154;
          unint64_t v156 = v114;
          uint64_t v157 = &v112[16 * v114];
          uint64_t v158 = *((void *)v157 + 1);
          uint64_t v159 = (id *)(v13 + 8 * *(void *)v154);
          char v160 = (id *)(v13 + 8 * *(void *)v157);
          unint64_t v192 = (id *)(v13 + 8 * v158);
          swift_bridgeObjectRetain();
          sub_1001C4F04(v159, v160, v192, __dst, v187);
          if (v184)
          {
LABEL_219:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
            specialized Array._endMutation()();
            swift_bridgeObjectRelease_n();
            return swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          if (v158 < v155) {
            goto LABEL_237;
          }
          if (v156 > *((void *)v11 + 2)) {
            goto LABEL_238;
          }
          uint64_t v184 = 0;
          *(void *)uint64_t v154 = v155;
          uint64_t v112 = v11 + 32;
          *(void *)&v11[16 * v153 + 40] = v158;
          unint64_t v161 = *((void *)v11 + 2);
          if (v156 >= v161) {
            goto LABEL_239;
          }
          unint64_t v111 = v161 - 1;
          memmove(v157, v157 + 16, 16 * (v161 - 1 - v156));
          *((void *)v11 + 2) = v161 - 1;
          uint64_t v13 = v186;
          if (v161 <= 2) {
            goto LABEL_213;
          }
          continue;
        }
      }
      unint64_t v111 = 1;
LABEL_213:
      Swift::Int v14 = v176;
      Swift::Int v12 = v182;
      a2 = v187;
      if (v182 >= v176)
      {
LABEL_222:
        unint64_t v178 = v11;
        if (v111 >= 2)
        {
          uint64_t v163 = *v171;
          do
          {
            unint64_t v164 = v111 - 2;
            if (v111 < 2) {
              goto LABEL_252;
            }
            if (!v163) {
              goto LABEL_266;
            }
            uint64_t v165 = *(void *)&v178[16 * v164 + 32];
            uint64_t v166 = *(void *)&v178[16 * v111 + 24];
            unint64_t v167 = (id *)(v163 + 8 * *(void *)&v178[16 * v111 + 16]);
            swift_bridgeObjectRetain();
            sub_1001C4F04((id *)(v163 + 8 * v165), v167, (id *)(v163 + 8 * v166), __dst, v187);
            if (v184) {
              goto LABEL_219;
            }
            swift_bridgeObjectRelease();
            if (v166 < v165) {
              goto LABEL_254;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v178 = sub_10025CC4C((uint64_t)v178);
            }
            if (v164 >= *((void *)v178 + 2)) {
              goto LABEL_255;
            }
            uint64_t v184 = 0;
            id v168 = &v178[16 * v164 + 32];
            *(void *)id v168 = v165;
            *((void *)v168 + 1) = v166;
            unint64_t v169 = *((void *)v178 + 2);
            if (v111 > v169) {
              goto LABEL_256;
            }
            memmove(&v178[16 * v111 + 16], &v178[16 * v111 + 32], 16 * (v169 - v111));
            *((void *)v178 + 2) = v169 - 1;
            unint64_t v111 = v169 - 1;
          }
          while (v169 > 2);
        }
        swift_bridgeObjectRelease();
        *(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()();
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v26 = v187[4];
    uint64_t v25 = v187[5];
    if ((v26 != v22 || v25 != v24) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v34 = v183;
      uint64_t v35 = 1;
      while (1)
      {
        uint64_t v27 = v35;
        if (v190 == v35) {
          break;
        }
        if (*(v34 - 1) != v22 || *v34 != v24)
        {
          char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v35 = v27 + 1;
          v34 += 2;
          if ((v37 & 1) == 0) {
            continue;
          }
        }
        goto LABEL_23;
      }

      swift_bridgeObjectRelease();
      int v188 = 0;
      goto LABEL_54;
    }
    uint64_t v27 = 0;
LABEL_23:
    swift_bridgeObjectRelease();
    id v28 = [v19 header];
    if (v28)
    {
      char v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v32 = v31;

      if (v26 != v30) {
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v30 = 0;
      unint64_t v32 = 0xE000000000000000;
      if (v26) {
        goto LABEL_30;
      }
    }
    if (v25 == v32)
    {
      uint64_t v33 = 0;
      goto LABEL_52;
    }
LABEL_30:
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      uint64_t v33 = 0;
      goto LABEL_52;
    }
    uint64_t v38 = v19;
    if (v190 <= 1) {
      uint64_t v39 = 1;
    }
    else {
      uint64_t v39 = v190;
    }
    uint64_t v40 = v183;
    uint64_t v41 = 1;
    do
    {
      uint64_t v33 = v41;
      if (v190 == v41)
      {

        swift_bridgeObjectRelease();
        BOOL v44 = 1;
        goto LABEL_53;
      }
      if (v39 == v41) {
        goto LABEL_257;
      }
      if (*(v40 - 1) == v30 && *v40 == v32) {
        break;
      }
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v41 = v33 + 1;
      v40 += 2;
    }
    while ((v43 & 1) == 0);
    id v19 = v38;
LABEL_52:

    swift_bridgeObjectRelease();
    BOOL v44 = v27 < v33;
LABEL_53:
    int v188 = v44;
LABEL_54:
    a2 = v187;
    id v11 = v177;
    goto LABEL_55;
  }
  if (v5 < 0) {
    goto LABEL_259;
  }
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1001C560C(0, v5, 1, a1, a2);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1001C679C(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_10025F26C(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_bridgeObjectRetain();
  sub_1001C58EC(v8, a2);
  swift_bridgeObjectRelease();
  specialized ContiguousArray._endMutation()();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1001C6848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7768);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C68B0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001C68E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001C3DA4(*(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_1001C68F4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001C692C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001C3FA8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1001C6934()
{
  swift_release();
  sub_100053720(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1001C6998(unint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1001C4248(a1, v2 + 24, a2);
}

uint64_t sub_1001C69A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001C69F4()
{
  sub_100053720(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));

  swift_release();

  return swift_deallocObject();
}

void sub_1001C6A58(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  sub_1001C451C(a1, a2, a3, v3 + 16, *(void **)(v3 + 88), *(void (**)(void))(v3 + 96));
}

uint64_t sub_1001C6A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C6ACC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001C6B34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1001C6B98(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [objc_allocWithZone((Class)MTPlayerItem) init];
  uint64_t v5 = PendingPlaybackMetadata.adamId.getter();
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = v5;
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  uint64_t v7 = 0;
LABEL_5:
  [v4 setEpisodeStoreId:v7];
  id v8 = v4;
  PendingPlaybackMetadata.uuid.getter();
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  [v8 setEpisodeUuid:v10];

  id v11 = self;
  id v12 = v8;
  id v13 = [v11 mainBundle];
  v26._unint64_t object = (void *)0x80000001004D4B70;
  v14._uint64_t countAndFlagsBits = 0x474E4944414F4CLL;
  v14._unint64_t object = (void *)0xE700000000000000;
  v15._uint64_t countAndFlagsBits = 0;
  v15._unint64_t object = (void *)0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v26);

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setTitle:v16];

  [v12 setIsPlaceholder:1];
  id v17 = v12;
  PendingPlaybackMetadata.duration.getter();
  [v17 setDuration:];

  id v18 = v17;
  PendingPlaybackMetadata.position.getter();
  [v18 setPlayhead:];

  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10046D060;
  *(void *)(v19 + 32) = v18;
  uint64_t v25 = v19;
  specialized Array._endMutation()();
  sub_1001C6F20();
  id v20 = v18;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v24.receiver = v2;
  v24.super_class = (Class)type metadata accessor for PlaceholderManifest();
  id v22 = [super initWithItems:isa];

  if (v22)
  {
    uint64_t v23 = type metadata accessor for PendingPlaybackMetadata();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
  }
  else
  {
    __break(1u);
  }
}

id sub_1001C6EC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderManifest();
  [super dealloc];
}

uint64_t type metadata accessor for PlaceholderManifest()
{
  return self;
}

unint64_t sub_1001C6F20()
{
  unint64_t result = qword_1005FD2C0;
  if (!qword_1005FD2C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005FD2C0);
  }
  return result;
}

uint64_t LibraryEpisodePagePresenter.Configuration.episodeUUID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryEpisodePagePresenter.Configuration.episodeUUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *objc_super v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LibraryEpisodePagePresenter.Configuration.episodeUUID.modify())()
{
  return UInt64.int64Representation.getter;
}

uint64_t LibraryEpisodePagePresenter.Configuration.stationUUID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryEpisodePagePresenter.Configuration.stationUUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*LibraryEpisodePagePresenter.Configuration.stationUUID.modify())()
{
  return UInt64.int64Representation.getter;
}

uint64_t LibraryEpisodePagePresenter.Configuration.referenceTime.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t LibraryEpisodePagePresenter.Configuration.referenceTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*LibraryEpisodePagePresenter.Configuration.referenceTime.modify())()
{
  return UInt64.int64Representation.getter;
}

uint64_t LibraryEpisodePagePresenter.Configuration.playerTime.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t LibraryEpisodePagePresenter.Configuration.playerTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*LibraryEpisodePagePresenter.Configuration.playerTime.modify())()
{
  return UInt64.int64Representation.getter;
}

void __swiftcall LibraryEpisodePagePresenter.Configuration.init(episodeUUID:stationUUID:referenceTime:playerTime:)(Podcasts::LibraryEpisodePagePresenter::Configuration *__return_ptr retstr, Swift::String episodeUUID, Swift::String_optional stationUUID, Swift::Double_optional referenceTime, Swift::Double_optional playerTime)
{
  retstr->episodeUUID = episodeUUID;
  retstr->stationUUID = stationUUID;
  retstr->referenceTime.value = *(Swift::Double *)&referenceTime.is_nil;
  retstr->referenceTime.is_nil = playerTime.is_nil;
  retstr->playerTime.value = v5;
  retstr->playerTime.is_nil = v6 & 1;
}

uint64_t LibraryEpisodePagePresenter.__allocating_init(asPartOf:with:)(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  LibraryEpisodePagePresenter.init(asPartOf:with:)(a1, a2);
  return v4;
}

void *LibraryEpisodePagePresenter.init(asPartOf:with:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for PageContent();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[10] = &_swiftEmptySetSingleton;
  *(void *)&long long v24 = _swiftEmptyArrayStorage;
  sub_100054B78(&qword_1005F5BB8);
  swift_allocObject();
  v2[29] = CurrentValueSubject.init(_:)();
  *uint64_t v7 = 0;
  swift_storeEnumTagMultiPayload();
  sub_100054B78(&qword_1005F5BC0);
  swift_allocObject();
  v2[30] = CurrentValueSubject.init(_:)();
  long long v24 = xmmword_10046B3B0;
  char v26 = 64;
  int v25 = 1;
  sub_100054B78(&qword_1005F5BC8);
  swift_allocObject();
  v2[31] = CurrentValueSubject.init(_:)();
  sub_100054B78((uint64_t *)&unk_1005F5BD0);
  swift_allocObject();
  v2[32] = PassthroughSubject.init()();
  id v8 = (char *)v2 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_interactionContextPage;
  *(void *)id v8 = 0;
  v8[8] = 1;
  type metadata accessor for InteractionContext.Page();
  *((void *)v8 + 2) = 0;
  *((void *)v8 + 3) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = static MetricsPageType.episode.getter();
  uint64_t v11 = v10;
  uint64_t v12 = static MetricsPageID.unknown.getter();
  Swift::String v14 = v13;
  *(void *)&long long v24 = v9;
  *((void *)&v24 + 1) = v11;
  v15._uint64_t countAndFlagsBits = 95;
  v15._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  v16._uint64_t countAndFlagsBits = v12;
  v16._unint64_t object = v14;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  PageID.init(with:)();
  static PageMetrics.notInstrumented.getter();
  uint64_t v17 = OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageRenderContentTypes;
  *((unsigned char *)v3 + v17) = static PageRenderContentTypes.unspecified.getter();
  id v18 = (char *)v3 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_headerShelf;
  uint64_t v19 = type metadata accessor for ModernShelf();
  id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v20((char *)v3 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_upsellBannerShelf, 1, 1, v19);
  *((unsigned char *)v3 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_upsellBannerHasBeenDismissed) = 0;
  v20((char *)v3 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_highlightShelf, 1, 1, v19);
  v20((char *)v3 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_descriptionShelf, 1, 1, v19);
  v20((char *)v3 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_websiteShelf, 1, 1, v19);
  *(void *)((char *)v3 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_footerShelves) = _swiftEmptyArrayStorage;
  uint64_t v21 = a2[1];
  v3[2] = *a2;
  v3[3] = v21;
  sub_100053820((uint64_t)(a2 + 2), (uint64_t)v31, &qword_1005F93A0);
  sub_100053820((uint64_t)v31, (uint64_t)(v3 + 4), &qword_1005F93A0);
  sub_100053820((uint64_t)(a2 + 4), (uint64_t)v30, &qword_1005FC2B0);
  sub_100053820((uint64_t)v30, (uint64_t)(v3 + 6), &qword_1005FC2B0);
  sub_100053820((uint64_t)(a2 + 6), (uint64_t)v29, &qword_1005FC2B0);
  sub_100053820((uint64_t)v29, (uint64_t)(v3 + 8), &qword_1005FC2B0);
  uint64_t v27 = type metadata accessor for EpisodeTextInfoProvider();
  id v28 = &protocol witness table for EpisodeTextInfoProvider;
  sub_10004A244((uint64_t *)&v24);
  swift_bridgeObjectRetain();
  sub_1001C761C((uint64_t)v31);
  EpisodeTextInfoProvider.init()();
  sub_100042FC4(&v24, (uint64_t)(v3 + 11));
  sub_100054B78(&qword_100603F10);
  BaseObjectGraph.inject<A>(_:)();
  *((_OWORD *)v3 + 8) = v24;
  sub_100054B78(&qword_1005FD620);
  BaseObjectGraph.inject<A>(_:)();
  *((_OWORD *)v3 + 9) = v24;
  type metadata accessor for PageRenderController();
  BaseObjectGraph.injectIfAvailable<A>(_:)();
  v3[20] = v24;
  sub_100054B78(&qword_1005F8DF8);
  BaseObjectGraph.inject<A>(_:)();
  *(_OWORD *)(v3 + 21) = v24;
  sub_100054B78((uint64_t *)&unk_1005F8B10);
  BaseObjectGraph.inject<A>(_:)();
  sub_100042FC4(&v24, (uint64_t)(v3 + 23));
  type metadata accessor for EpisodeUpsellBannerProvider();
  swift_allocObject();
  uint64_t v22 = EpisodeUpsellBannerProvider.init(graph:uuid:presentationType:)();
  sub_100053884((uint64_t)v31);
  v3[28] = v22;
  return v3;
}

uint64_t sub_1001C761C(uint64_t a1)
{
  return a1;
}

uint64_t LibraryEpisodePagePresenter.headerButtonItems.getter()
{
  return swift_retain();
}

uint64_t LibraryEpisodePagePresenter.pageContent.getter()
{
  return swift_retain();
}

uint64_t LibraryEpisodePagePresenter.pageHeader.getter()
{
  return swift_retain();
}

uint64_t LibraryEpisodePagePresenter.pageRender.getter()
{
  return swift_retain();
}

Swift::Void __swiftcall LibraryEpisodePagePresenter.viewDidLoad()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PageRenderEvent();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + 256);
  *uint64_t v5 = 1;
  uint64_t v7 = enum case for PageRenderActivity.primaryDataFetchStarted(_:);
  uint64_t v8 = type metadata accessor for PageRenderActivity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v5, v7, v8);
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, enum case for PageRenderEvent.activity(_:), v2);
  PassthroughSubject.send(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  swift_getObjectType();
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  dispatch thunk of LibraryDataProviderProtocol.fetchEpisode(with:)();
  swift_allocObject();
  swift_weakInit();
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = v9;
  v11[3] = v10;
  v11[4] = v6;
  uint64_t v12 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = static OS_dispatch_queue.main.getter();
  v15[3] = v12;
  void v15[4] = &protocol witness table for OS_dispatch_queue;
  v15[0] = v13;
  Promise.then(perform:orCatchError:on:)();
  swift_release();
  swift_release();
  swift_release();
  sub_10004D2D8((uint64_t)v15);
}

uint64_t sub_1001C78C8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1001C7900(void **a1)
{
  uint64_t v2 = type metadata accessor for PageRenderEvent();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (v6)
    {
      id v8 = v6;
      sub_1001C7AE0(v8);
      swift_release();
    }
    else
    {
      uint64_t v10 = *(void *)(Strong + 16);
      uint64_t v9 = *(void *)(Strong + 24);
      sub_1001D3018();
      uint64_t v11 = swift_allocError();
      *uint64_t v12 = v10;
      v12[1] = v9;
      *uint64_t v5 = v11;
      uint64_t v13 = enum case for PageRenderActivity.primaryDataFetchFailed(_:);
      uint64_t v14 = type metadata accessor for PageRenderActivity();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v5, v13, v14);
      (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for PageRenderEvent.activity(_:), v2);
      swift_bridgeObjectRetain();
      PassthroughSubject.send(_:)();
      (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
  }
}

void sub_1001C7AD8(void **a1)
{
}

uint64_t sub_1001C7AE0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PageContent();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PageID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 storeTrackId];
  uint64_t v14 = AdamID.init(rawValue:)();
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  *(void *)uint64_t v13 = v14;
  v13[8] = 0;
  *((void *)v13 + 2) = v15;
  *((void *)v13 + 3) = v16;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = v1 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_interactionContextPage;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1001D306C((uint64_t)v13, v17);
  swift_endAccess();
  v28[1] = static MetricsPageType.episode.getter();
  v28[2] = v18;
  v19._uint64_t countAndFlagsBits = 95;
  v19._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  v28[0] = v14;
  sub_1001A5874();
  v20._uint64_t countAndFlagsBits = BinaryInteger.description.getter();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  PageID.init(with:)();
  uint64_t v21 = v2 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageID;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v21, v10, v7);
  swift_endAccess();
  id v22 = [a1 bestTitle];
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0xE000000000000000;
  }
  sub_1001C82CC(v14, v24, v26);
  swift_bridgeObjectRelease();
  sub_1001C8920(a1);
  sub_1001C9460(a1);
  sub_1001C9914(a1);
  sub_1001C9D08(a1);
  sub_1001CA1A4(a1);
  sub_1001CA6A0(a1);
  sub_1001CAB20((uint64_t)v6);
  return CurrentValueSubject.value.setter();
}

uint64_t sub_1001C7DE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v7 = type metadata accessor for PageRenderEvent();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v29 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.database.getter();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = v8;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v26 = v7;
    Swift::String v19 = (void *)v18;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v31 = v24;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v27 = a4;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_10004B974(v28, a3, &v31);
    uint64_t v28 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2112;
    swift_errorRetain();
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v30 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *Swift::String v19 = v20;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unable to fetch episode for UUID %s: %@", (uint8_t *)v17, 0x16u);
    sub_100054B78((uint64_t *)&unk_1005F9F00);
    swift_arrayDestroy();
    uint64_t v7 = v26;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v25;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v28);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v11);
  }
  void *v10 = a1;
  uint64_t v21 = enum case for PageRenderActivity.primaryDataFetchFailed(_:);
  uint64_t v22 = type metadata accessor for PageRenderActivity();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v10, v21, v22);
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for PageRenderEvent.activity(_:), v7);
  swift_errorRetain();
  PassthroughSubject.send(_:)();
  return (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1001C81DC()
{
  return sub_1001D3144((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001C8208(uint64_t a1)
{
  return sub_1001C7DE4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t LibraryEpisodePagePresenter.interactionContextPage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_interactionContextPage;
  swift_beginAccess();
  return sub_1001C8268(v3, a1);
}

uint64_t sub_1001C8268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InteractionContext.Page();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C82CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v40 = type metadata accessor for PageRenderEvent();
  uint64_t v39 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for ScalarDictionary();
  uint64_t v8 = *(void *)(v34 - 8);
  uint64_t v9 = __chkstk_darwin(v34);
  uint64_t v33 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v38 = type metadata accessor for MetricsPageFields();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for PageMetrics();
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v31 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MetricsPageType.episode.getter();
  sub_100054B78(&qword_1005F9068);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D010;
  *(void *)(inited + 32) = 0x656C746974;
  *(void *)(inited + 40) = 0xE500000000000000;
  *(void *)(inited + 48) = v30;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain();
  sub_10016EB10(inited);
  uint64_t v32 = v3;
  swift_getObjectType();
  HighlightsProviderProtocol.isSharedContent(_:)();
  v41[0] = a1;
  sub_1001A5874();
  BinaryInteger.description.getter();
  MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)();
  ScalarDictionary.init()();
  static MetricsDataConfiguration.default.getter();
  sub_100054B78(&qword_1005F76C8);
  type metadata accessor for PageMetrics.Instruction();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D030;
  static PageMetrics.Instruction.page(fields:configuration:)();
  static PageMetrics.Instruction.impressions(fields:configuration:)();
  MetricsPageFields.metricsFields.getter();
  uint64_t v17 = v34;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v12, v34);
  uint64_t v18 = v31;
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)();
  sub_100053820((uint64_t)v41, (uint64_t)v44, (uint64_t *)&unk_1005F76D0);
  sub_100053884((uint64_t)v44);
  uint64_t v43 = v41[2];
  sub_1000537F4((uint64_t)&v43);
  uint64_t v42 = v41[3];
  sub_1000537F4((uint64_t)&v42);
  sub_1000536BC(v41[4]);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v17);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v38);
  uint64_t v19 = v32;
  uint64_t v20 = v32 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageMetrics;
  swift_beginAccess();
  uint64_t v21 = v35;
  uint64_t v22 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 40))(v20, v18, v37);
  swift_endAccess();
  static PageRenderContentTypes.primaryData.getter();
  uint64_t v23 = (unsigned char *)(v19 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageRenderContentTypes);
  swift_beginAccess();
  *uint64_t v23 = PageRenderContentTypes.init(rawValue:)();
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v7, v20, v22);
  uint64_t v24 = enum case for PageRenderActivity.primaryDataFetchCompleted(_:);
  uint64_t v25 = type metadata accessor for PageRenderActivity();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v7, v24, v25);
  uint64_t v26 = v39;
  uint64_t v27 = v40;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v7, enum case for PageRenderEvent.activity(_:), v40);
  PassthroughSubject.send(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v27);
}

uint64_t sub_1001C8920(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v76 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v82 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v9 - 8);
  uint64_t v81 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v11 - 8);
  Swift::Int v85 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_1005FD290);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v80 = *(void *)(v84 - 8);
  uint64_t v16 = __chkstk_darwin(v84);
  Swift::Int v79 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v83 = (char *)&v74 - v18;
  uint64_t v19 = type metadata accessor for HeaderButtonItem();
  uint64_t v77 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char **)((char *)&v74 - v24);
  __chkstk_darwin(v23);
  uint64_t v27 = (char **)((char *)&v74 - v26);
  id v78 = a1;
  uint64_t v28 = sub_1001CB81C(a1);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v74 = v15;
    Swift::Int v75 = v8;
    swift_retain();
    uint64_t v30 = LegacyLockup.title.getter();
    unint64_t v32 = v31;
    swift_release();
    if (v32) {
      uint64_t v33 = v30;
    }
    else {
      uint64_t v33 = 0;
    }
    unint64_t v34 = 0xE000000000000000;
    if (v32) {
      unint64_t v34 = v32;
    }
    *(void *)&long long v86 = v33;
    *((void *)&v86 + 1) = v34;
    BYTE4(v87) = 64;
    LODWORD(v87) = 1;
    CurrentValueSubject.value.setter();
    uint64_t v35 = v2;
    uint64_t v36 = *(void *)(v2 + 16);
    uint64_t v76 = v35;
    uint64_t v37 = *(void *)(v35 + 24);
    void *v27 = v36;
    v27[1] = v37;
    uint64_t v38 = enum case for BookmarkButtonPresenter.Data.uuid(_:);
    uint64_t v39 = type metadata accessor for BookmarkButtonPresenter.Data();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v27, v38, v39);
    id v82 = (char *)v19;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_1002EF72C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v42 = *(void *)(v40 + 16);
    unint64_t v41 = *(void *)(v40 + 24);
    if (v42 >= v41 >> 1) {
      unint64_t v40 = sub_1002EF72C(v41 > 1, v42 + 1, 1, v40);
    }
    uint64_t v43 = v77;
    *(void *)(v40 + 16) = v42 + 1;
    unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v45 = *(void *)(v43 + 72);
    sub_1001D33EC((uint64_t)v27, v40 + v44 + v45 * v42);
    if ([v78 isEntitled])
    {
      *uint64_t v25 = v36;
      v25[1] = v37;
      uint64_t v46 = enum case for DownloadButtonPresenter.Data.uuid(_:);
      uint64_t v47 = type metadata accessor for DownloadButtonPresenter.Data();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v25, v46, v47);
      swift_storeEnumTagMultiPayload();
      unint64_t v48 = *(void *)(v40 + 16);
      unint64_t v49 = *(void *)(v40 + 24);
      swift_bridgeObjectRetain();
      if (v48 >= v49 >> 1) {
        unint64_t v40 = sub_1002EF72C(v49 > 1, v48 + 1, 1, v40);
      }
      *(void *)(v40 + 16) = v48 + 1;
      sub_1001D33EC((uint64_t)v25, v40 + v44 + v48 * v45);
    }
    void v22[3] = type metadata accessor for LibraryEpisodeLockup();
    v22[4] = sub_1001D29FC(&qword_1005F9058, (void (*)(uint64_t))&type metadata accessor for LibraryEpisodeLockup);
    *uint64_t v22 = v29;
    swift_storeEnumTagMultiPayload();
    unint64_t v50 = *(void *)(v40 + 16);
    unint64_t v51 = *(void *)(v40 + 24);
    swift_retain();
    if (v50 >= v51 >> 1) {
      unint64_t v40 = sub_1002EF72C(v51 > 1, v50 + 1, 1, v40);
    }
    *(void *)(v40 + 16) = v50 + 1;
    sub_1001D33EC((uint64_t)v22, v40 + v44 + v50 * v45);
    uint64_t v52 = v76;
    *(void *)&long long v86 = v40;
    swift_bridgeObjectRetain();
    CurrentValueSubject.send(_:)();
    swift_bridgeObjectRelease();
    LOBYTE(v86) = 1;
    uint64_t v53 = v83;
    ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
    if (qword_1005F59E0 != -1) {
      swift_once();
    }
    id v82 = (char *)qword_1005F8D40;
    id v78 = *(id *)algn_1005F8D48;
    uint64_t v54 = type metadata accessor for Header();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v85, 1, 1, v54);
    uint64_t v55 = v80;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v79, v53, v84);
    sub_100054B78(&qword_1005F8428);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_10046D010;
    uint64_t v57 = type metadata accessor for EpisodeHeader();
    *(void *)&long long v86 = 0;
    *((void *)&v86 + 1) = 0xE000000000000000;
    swift_retain();
    swift_bridgeObjectRetain();
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease();
    *(void *)&long long v86 = 0xD000000000000029;
    *((void *)&v86 + 1) = 0x80000001004D5030;
    swift_retain();
    uint64_t v58 = LegacyLockup.adamId.getter();
    swift_release();
    uint64_t v89 = v58;
    sub_1001A5874();
    v59._uint64_t countAndFlagsBits = BinaryInteger.description.getter();
    String.append(_:)(v59);
    swift_bridgeObjectRelease();
    v60._uint64_t countAndFlagsBits = 93;
    v60._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v60);
    uint64_t v61 = EpisodeHeader.__allocating_init(lockup:headerButtonItems:shelfUniqueId:referenceTime:playerTime:)();
    *(void *)(v56 + 56) = v57;
    *(void *)(v56 + 64) = sub_1001D29FC(&qword_1005F9060, (void (*)(uint64_t))&type metadata accessor for EpisodeHeader);
    *(void *)(v56 + 32) = v61;
    uint64_t v62 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v81, 1, 1, v62);
    uint64_t v88 = 0;
    long long v86 = 0u;
    long long v87 = 0u;
    static MetricsTargetType.swoosh.getter();
    unint64_t v63 = v75;
    static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
    swift_bridgeObjectRelease();
    uint64_t v64 = type metadata accessor for ImpressionMetrics();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
    uint64_t v65 = (uint64_t)v74;
    ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v83, v84);
    uint64_t v66 = type metadata accessor for ModernShelf();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 0, 1, v66);
    uint64_t v67 = v52 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_headerShelf;
    swift_beginAccess();
    sub_1001D31A8(v65, v67);
    return swift_endAccess();
  }
  else
  {
    static Logger.database.getter();
    swift_retain();
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v69, v70))
    {
      BOOL v71 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v86 = swift_slowAlloc();
      *(_DWORD *)BOOL v71 = 136315138;
      uint64_t v73 = *(void *)(v2 + 16);
      unint64_t v72 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      uint64_t v89 = sub_10004B974(v73, v72, (uint64_t *)&v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "episode is unavailable: %s", v71, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v82, v4);
  }
}

uint64_t sub_1001C9460(void *a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005F9030);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_1005F9038);
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v24 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  [a1 storeTrackId];
  AdamID.init(rawValue:)();
  id v12 = [a1 podcast];
  uint64_t v13 = v12;
  if (v12)
  {
    [v12 storeCollectionId];
    AdamID.init(rawValue:)();
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1001D3370;
  *(void *)(v14 + 24) = v11;
  swift_retain();
  uint64_t v15 = dispatch thunk of EpisodeUpsellBannerProvider.episodeUpsellBannerShelfPublisher(episodeAdamID:showAdamID:dismissalCompletion:)();
  swift_release();
  uint64_t v25 = v15;
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v27 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v16 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  sub_100054B78(&qword_1005F9040);
  sub_100044200(&qword_1005F9048, &qword_1005F9040);
  sub_100059BE0();
  Publisher.receive<A>(on:options:)();
  sub_100054B1C((uint64_t)v4, &qword_1005F9F20);

  swift_release();
  uint64_t v17 = sub_100044200(&qword_1005F9050, &qword_1005F9030);
  uint64_t v18 = v22;
  Publisher.emitPageRenderResourceEvents(using:onScreen:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v18);
  swift_allocObject();
  swift_weakInit();
  uint64_t v25 = v18;
  uint64_t v26 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = v24;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v19);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_1001C9914(void *a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005F9008);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F9010);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 storeTrackId];
  AdamID.init(rawValue:)();
  uint64_t result = AdamID.isEmpty.getter();
  if ((result & 1) == 0)
  {
    uint64_t v17 = v9;
    uint64_t v18 = v10;
    swift_getObjectType();
    uint64_t v19 = dispatch thunk of HighlightsProviderProtocol.pageHighlightShelfPublisherForId(adamId:)();
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    id v21 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v14 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
    sub_100054B78(&qword_1005F9018);
    sub_100044200(&qword_1005F9020, &qword_1005F9018);
    sub_100059BE0();
    Publisher.receive<A>(on:options:)();
    sub_100054B1C((uint64_t)v4, &qword_1005F9F20);

    swift_release();
    uint64_t v15 = sub_100044200(&qword_1005F9028, &qword_1005F9008);
    Publisher.emitPageRenderResourceEvents(using:onScreen:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_allocObject();
    swift_weakInit();
    uint64_t v19 = v5;
    uint64_t v20 = v15;
    swift_getOpaqueTypeConformance2();
    uint64_t v16 = v17;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v16);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001C9D08(void *a1)
{
  uint64_t v3 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005FD290);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v21 = (char *)v29 - v20;
  sub_1001CC440(a1, (uint64_t *)&v32);
  if (!*((void *)&v33 + 1)) {
    return sub_100054B1C((uint64_t)&v32, &qword_1005F8FC8);
  }
  uint64_t v30 = v5;
  uint64_t v31 = v1;
  sub_100042FC4(&v32, (uint64_t)v35);
  LOBYTE(v32) = 1;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
  if (qword_1005F59E8 != -1) {
    swift_once();
  }
  v29[1] = qword_1005F8D50;
  uint64_t v22 = type metadata accessor for Header();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  sub_100054B78(&qword_1005F8428);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10046D010;
  sub_100056D54((uint64_t)v35, v23 + 32);
  uint64_t v24 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
  uint64_t v25 = type metadata accessor for ImpressionMetrics();
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v34 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v30, 1, 1, v25);
  swift_bridgeObjectRetain();
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  sub_10004D2D8((uint64_t)v35);
  uint64_t v26 = type metadata accessor for ModernShelf();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v14, 0, 1, v26);
  uint64_t v27 = v31 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_descriptionShelf;
  swift_beginAccess();
  sub_1001D31A8((uint64_t)v14, v27);
  return swift_endAccess();
}

uint64_t sub_1001CA1A4(void *a1)
{
  uint64_t v3 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005FD290);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v21 = (char *)v31 - v20;
  sub_1001CCE20(a1, (uint64_t)&v36);
  if (!*((void *)&v37 + 1)) {
    return sub_100054B1C((uint64_t)&v36, &qword_1005F8FC8);
  }
  uint64_t v34 = v14;
  uint64_t v35 = v1;
  sub_100042FC4(&v36, (uint64_t)v39);
  LOBYTE(v36) = 1;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
  if (qword_1005F59F0 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_1005F8D60;
  uint64_t v22 = type metadata accessor for Header();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v32 = v15;
  v23(v19, v21, v15);
  sub_100054B78(&qword_1005F8428);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10046D010;
  sub_100056D54((uint64_t)v39, v24 + 32);
  uint64_t v25 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
  uint64_t v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  v31[1] = v19;
  swift_bridgeObjectRetain();
  static MetricsTargetType.swoosh.getter();
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)();
  swift_bridgeObjectRelease();
  uint64_t v26 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 0, 1, v26);
  uint64_t v27 = (uint64_t)v34;
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v32);
  sub_10004D2D8((uint64_t)v39);
  uint64_t v28 = type metadata accessor for ModernShelf();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  uint64_t v29 = v35 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_websiteShelf;
  swift_beginAccess();
  sub_1001D31A8(v27, v29);
  return swift_endAccess();
}

uint64_t sub_1001CA6A0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PageRenderEvent();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PageContent();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001CD5A4(a1);
  if ([self isRunningOnInternalOS])
  {
    swift_getObjectType();
    if (qword_1005F5A08 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_100054B78(&qword_1005F8FB0);
    sub_10018A370(v12, (uint64_t)qword_1005F8D90);
    Preferences.subscript.getter();
    if (LOBYTE(v27[0]) != 2 && (v27[0] & 1) != 0) {
      goto LABEL_7;
    }
  }
  [a1 storeTrackId];
  uint64_t v13 = AdamID.init(rawValue:)();
  if (AdamID.isEmpty.getter())
  {
LABEL_7:
    *(void *)(v1 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_footerShelves) = v11;
    swift_bridgeObjectRelease();
    sub_1001CAB20((uint64_t)v10);
    return CurrentValueSubject.value.setter();
  }
  else
  {
    id v15 = [a1 podcast];
    if (v15)
    {
      uint64_t v16 = v15;
      id v17 = [v15 channel];

      if (v17)
      {
        [v17 subscriptionActive];
      }
    }
    *uint64_t v7 = 1;
    uint64_t v18 = enum case for PageRenderActivity.resourceFetchStarted(_:);
    uint64_t v19 = type metadata accessor for PageRenderActivity();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v7, v18, v19);
    (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, enum case for PageRenderEvent.activity(_:), v4);
    PassthroughSubject.send(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100041A98((void *)(v2 + 184), *(void *)(v2 + 208));
    dispatch thunk of StoreDataProvider.fetchEpisodePageFooter(for:isSubscribed:)();
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = v11;
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v13;
    void v23[3] = v22;
    v23[4] = v11;
    uint64_t v24 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v25 = static OS_dispatch_queue.main.getter();
    v27[3] = v24;
    v27[4] = &protocol witness table for OS_dispatch_queue;
    v27[0] = v25;
    Promise.then(perform:orCatchError:on:)();
    swift_release();
    swift_release();
    swift_release();
    sub_10004D2D8((uint64_t)v27);
    return swift_release();
  }
}

uint64_t sub_1001CAB20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v101 = type metadata accessor for PageMetrics();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  unint64_t v99 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for PageID();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  unint64_t v98 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005FD290);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v93 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v84 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v88 = (uint64_t)&v84 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v84 - v14;
  __chkstk_darwin(v13);
  id v17 = (char *)&v84 - v16;
  uint64_t v18 = type metadata accessor for ModernShelf();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v94 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  id v95 = (char *)&v84 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v91 = (char *)&v84 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v92 = (char *)&v84 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v89 = (char *)&v84 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v90 = (char *)&v84 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  long long v86 = (char *)&v84 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  long long v87 = (char *)&v84 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  long long v37 = (char *)&v84 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v84 - v38;
  uint64_t v106 = _swiftEmptyArrayStorage;
  uint64_t v103 = v1;
  uint64_t v40 = v1 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_headerShelf;
  uint64_t v42 = v41;
  swift_beginAccess();
  sub_100054BBC(v40, (uint64_t)v17, (uint64_t *)&unk_1005FD290);
  uint64_t v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  int v43 = v105(v17, 1, v18);
  uint64_t v104 = v42 + 48;
  uint64_t v102 = a1;
  if (v43 == 1)
  {
    sub_100054B1C((uint64_t)v17, (uint64_t *)&unk_1005FD290);
  }
  else
  {
    Swift::Int v85 = v10;
    unint64_t v44 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
    v44(v39, v17, v18);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v37, v39, v18);
    unint64_t v45 = sub_1002EF774(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v47 = *(void *)(v45 + 16);
    unint64_t v46 = *(void *)(v45 + 24);
    if (v47 >= v46 >> 1) {
      unint64_t v45 = sub_1002EF774(v46 > 1, v47 + 1, 1, v45);
    }
    *(void *)(v45 + 16) = v47 + 1;
    v44((char *)(v45+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v47), v37, v18);
    uint64_t v106 = (void *)v45;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v18);
    a1 = v102;
    uint64_t v10 = v85;
  }
  uint64_t v48 = v103;
  uint64_t v49 = v103 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_upsellBannerShelf;
  swift_beginAccess();
  sub_100054BBC(v49, (uint64_t)v15, (uint64_t *)&unk_1005FD290);
  if (v105(v15, 1, v18) == 1)
  {
    sub_100054B1C((uint64_t)v15, (uint64_t *)&unk_1005FD290);
    uint64_t v50 = (uint64_t)v93;
  }
  else
  {
    unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
    uint64_t v52 = v87;
    v51(v87, v15, v18);
    uint64_t v53 = v86;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v86, v52, v18);
    unint64_t v54 = (unint64_t)v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v54 = sub_1002EF774(0, *(void *)(v54 + 16) + 1, 1, v54);
    }
    unint64_t v56 = *(void *)(v54 + 16);
    unint64_t v55 = *(void *)(v54 + 24);
    if (v56 >= v55 >> 1) {
      unint64_t v54 = sub_1002EF774(v55 > 1, v56 + 1, 1, v54);
    }
    *(void *)(v54 + 16) = v56 + 1;
    v51((char *)(v54+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v56), v53, v18);
    uint64_t v106 = (void *)v54;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v87, v18);
    uint64_t v48 = v103;
    uint64_t v50 = (uint64_t)v93;
  }
  uint64_t v57 = v48 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_highlightShelf;
  swift_beginAccess();
  uint64_t v58 = v57;
  uint64_t v59 = v88;
  sub_100054BBC(v58, v88, (uint64_t *)&unk_1005FD290);
  if (v105((char *)v59, 1, v18) == 1)
  {
    sub_100054B1C(v59, (uint64_t *)&unk_1005FD290);
  }
  else
  {
    Swift::String v60 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
    uint64_t v61 = v59;
    uint64_t v62 = v90;
    v60(v90, v61, v18);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v89, v62, v18);
    unint64_t v63 = (unint64_t)v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v63 = sub_1002EF774(0, *(void *)(v63 + 16) + 1, 1, v63);
    }
    unint64_t v65 = *(void *)(v63 + 16);
    unint64_t v64 = *(void *)(v63 + 24);
    if (v65 >= v64 >> 1) {
      unint64_t v63 = sub_1002EF774(v64 > 1, v65 + 1, 1, v63);
    }
    *(void *)(v63 + 16) = v65 + 1;
    v60((char *)(v63+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v65), (uint64_t)v89, v18);
    uint64_t v106 = (void *)v63;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v90, v18);
    a1 = v102;
  }
  uint64_t v66 = v48 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_descriptionShelf;
  swift_beginAccess();
  sub_100054BBC(v66, (uint64_t)v10, (uint64_t *)&unk_1005FD290);
  if (v105(v10, 1, v18) == 1)
  {
    sub_100054B1C((uint64_t)v10, (uint64_t *)&unk_1005FD290);
  }
  else
  {
    uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
    char v68 = v92;
    v67(v92, v10, v18);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v91, v68, v18);
    unint64_t v69 = (unint64_t)v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v69 = sub_1002EF774(0, *(void *)(v69 + 16) + 1, 1, v69);
    }
    unint64_t v71 = *(void *)(v69 + 16);
    unint64_t v70 = *(void *)(v69 + 24);
    if (v71 >= v70 >> 1) {
      unint64_t v69 = sub_1002EF774(v70 > 1, v71 + 1, 1, v69);
    }
    *(void *)(v69 + 16) = v71 + 1;
    v67((char *)(v69+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v71), v91, v18);
    uint64_t v106 = (void *)v69;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v92, v18);
  }
  uint64_t v72 = v48 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_websiteShelf;
  swift_beginAccess();
  sub_100054BBC(v72, v50, (uint64_t *)&unk_1005FD290);
  if (v105((char *)v50, 1, v18) == 1)
  {
    sub_100054B1C(v50, (uint64_t *)&unk_1005FD290);
  }
  else
  {
    uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
    uint64_t v74 = v95;
    v73(v95, v50, v18);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v94, v74, v18);
    unint64_t v75 = (unint64_t)v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v75 = sub_1002EF774(0, *(void *)(v75 + 16) + 1, 1, v75);
    }
    unint64_t v77 = *(void *)(v75 + 16);
    unint64_t v76 = *(void *)(v75 + 24);
    if (v77 >= v76 >> 1) {
      unint64_t v75 = sub_1002EF774(v76 > 1, v77 + 1, 1, v75);
    }
    *(void *)(v75 + 16) = v77 + 1;
    v73((char *)(v75+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v77), (uint64_t)v94, v18);
    uint64_t v106 = (void *)v75;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v95, v18);
  }
  uint64_t v78 = swift_bridgeObjectRetain();
  sub_1001B18AC(v78);
  uint64_t v79 = v48 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageID;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v98, v79, v97);
  uint64_t v80 = v48 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageMetrics;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v99, v80, v101);
  ModernPage.init(id:pageMetrics:shelves:)();
  uint64_t v81 = *(int *)(sub_100054B78(&qword_1005F8FA8) + 48);
  id v82 = (unsigned char *)(v48 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageRenderContentTypes);
  swift_beginAccess();
  *(unsigned char *)(a1 + v81) = *v82;
  type metadata accessor for PageContent();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001CB7FC(uint64_t a1)
{
  return sub_1001D0654(a1, 0x726564616568, 0xE600000000000000, &qword_1005F8D40, (void **)algn_1005F8D48);
}

uint64_t sub_1001CB81C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  if (!v3)
  {
    type metadata accessor for Episode();
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    if (Episode.init(from:clickAction:wantsListenNowReason:)(a1, (uint64_t)v8, 0)) {
      goto LABEL_3;
    }
    return 0;
  }
  uint64_t v4 = *(void *)(v1 + 32);
  type metadata accessor for StationEpisode();
  id v5 = a1;
  swift_bridgeObjectRetain();
  if (!sub_1002E2390(v5, v4, v3)) {
    return 0;
  }
LABEL_3:
  swift_retain();
  uint64_t v6 = dispatch thunk of Episode.playableLockupForEpisodeDetails.getter();
  swift_release_n();
  return v6;
}

uint64_t sub_1001CB8E8()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v9 = self;
  swift_retain_n();
  if ([v9 isMainThread])
  {
    sub_1001CBC7C();
  }
  else
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    uint64_t v17 = static OS_dispatch_queue.main.getter();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_1001D33E4;
    *(void *)(v10 + 24) = v8;
    aBlock[4] = sub_10004A018;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003B424;
    uint64_t aBlock[3] = &unk_100558020;
    uint64_t v11 = _Block_copy(aBlock);
    uint64_t v16 = v4;
    uint64_t v12 = v11;
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001D29FC((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v13 = (void *)v17;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v12);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  }
  return swift_release_n();
}

uint64_t sub_1001CBC7C()
{
  uint64_t v0 = type metadata accessor for PageContent();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v10[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_100054B78((uint64_t *)&unk_1005FD290);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    *(unsigned char *)(result + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_upsellBannerHasBeenDismissed) = 1;
    uint64_t v8 = type metadata accessor for ModernShelf();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
    uint64_t v9 = v7 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_upsellBannerShelf;
    swift_beginAccess();
    sub_1001D3308((uint64_t)v5, v9);
    swift_endAccess();
    sub_1001CAB20((uint64_t)v2);
    CurrentValueSubject.value.setter();
    sub_100054B1C((uint64_t)v5, (uint64_t *)&unk_1005FD290);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001CBE20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageContent();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005FD290);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v19[-v9];
  uint64_t v11 = type metadata accessor for ModernShelf();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v16 = result;
    sub_100054BBC(a1, (uint64_t)v10, (uint64_t *)&unk_1005FD290);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_100054B1C((uint64_t)v10, (uint64_t *)&unk_1005FD290);
LABEL_6:
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v11);
      uint64_t v17 = v16 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_upsellBannerShelf;
      swift_beginAccess();
      sub_1001D3308((uint64_t)v8, v17);
      swift_endAccess();
      sub_1001CAB20((uint64_t)v4);
      CurrentValueSubject.value.setter();
      sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005FD290);
      return swift_release();
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
    if (*(unsigned char *)(v16 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_upsellBannerHasBeenDismissed))
    {
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
      goto LABEL_6;
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v8, v14, v11);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    uint64_t v18 = v16 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_upsellBannerShelf;
    swift_beginAccess();
    sub_1001D3308((uint64_t)v8, v18);
    swift_endAccess();
    sub_1001CAB20((uint64_t)v4);
    CurrentValueSubject.value.setter();
    sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005FD290);
    swift_release();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t sub_1001CC19C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageContent();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005FD290);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for ModernShelf();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16);
  v12(v11, a1, v8);
  ModernShelf.metricsName.setter();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = Strong;
    v12(v7, (uint64_t)v11, v8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    uint64_t v15 = v14 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_highlightShelf;
    swift_beginAccess();
    sub_1001D3308((uint64_t)v7, v15);
    swift_endAccess();
    sub_1001CAB20((uint64_t)v4);
    CurrentValueSubject.value.setter();
    sub_100054B1C((uint64_t)v7, (uint64_t *)&unk_1005FD290);
    swift_release();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001CC418(uint64_t a1)
{
  return sub_1001D0654(a1, 0xD000000000000013, 0x80000001004D5010, &qword_1005F8D50, (void **)algn_1005F8D58);
}

double sub_1001CC440@<D0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v3 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v3 - 8);
  uint64_t v61 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005F8FE8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for EpisodeTextInfoContext();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  __chkstk_darwin(v8);
  char v68 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EpisodeTextInfoDetail();
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  __chkstk_darwin(v10);
  uint64_t v74 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LibraryEpisodeContextItem();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v72 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v59 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v59 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v59 - v25;
  sub_10004D29C(0, &qword_1005F8FF0);
  id v27 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  id v67 = [v27 descriptionForEpisode:a1 options:48];

  [a1 storeTrackId];
  uint64_t v28 = AdamID.init(rawValue:)();
  id v29 = [a1 podcast];
  uint64_t v73 = v13;
  if (!v29) {
    goto LABEL_7;
  }
  uint64_t v30 = v29;
  unint64_t v63 = (char *)v28;
  id v31 = [v29 shareURL];

  if (v31)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v32 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v21, 0, 1, v32);
  }
  else
  {
    uint64_t v32 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v21, 1, 1, v32);
  }
  sub_100053820((uint64_t)v21, (uint64_t)v24, (uint64_t *)&unk_1005F7750);
  type metadata accessor for URL();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v24, 1, v32) == 1)
  {
    sub_100054B1C((uint64_t)v24, (uint64_t *)&unk_1005F7750);
LABEL_7:
    uint64_t v34 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v26, 1, 1, v34);
    goto LABEL_9;
  }
  sub_100054B78(&qword_1005F9000);
  type metadata accessor for URLQueryItem();
  uint64_t v62 = v18;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
  uint64_t v76 = (uint64_t)v63;
  sub_1001A5874();
  BinaryInteger.description.getter();
  uint64_t v18 = v62;
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  URL.appending(queryItems:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v26, 0, 1, v32);
LABEL_9:
  id v35 = [a1 itemDescription];
  if (v35)
  {
    uint64_t v36 = v35;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v37 = [a1 itemDescriptionWithoutHTML];
  Swift::String v60 = v7;
  uint64_t v75 = v12;
  if (v37)
  {
    uint64_t v38 = v37;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v39 = v74;
  [a1 itemDescriptionHasHTML];
  unint64_t v63 = v26;
  sub_100054BBC((uint64_t)v26, (uint64_t)v18, (uint64_t *)&unk_1005F7750);
  uint64_t v62 = (char *)v67;
  uint64_t v40 = v72;
  LibraryEpisodeContextItem.init(summary:cachedDescription:description:descriptionWithoutHTML:descriptionHasHTML:episodeShareURL:)();
  sub_100041A98((void *)(v71 + 88), *(void *)(v71 + 112));
  uint64_t v41 = v73;
  uint64_t v42 = v68;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v68, v40, v75);
  uint64_t v44 = v69;
  uint64_t v43 = v70;
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v42, enum case for EpisodeTextInfoContext.library(_:), v70);
  dispatch thunk of EpisodeTextInfoProviderProtocol.textInfoDetailForContext(_:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v42, v43);
  uint64_t v45 = EpisodeTextInfoDetail.notes.getter();
  if (v45)
  {
    unint64_t v46 = (void *)v45;
    unint64_t v47 = v40;
    uint64_t v48 = v60;
    void *v60 = a1;
    uint64_t v49 = type metadata accessor for ShareSheetContentSource();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
    uint64_t v50 = type metadata accessor for ImpressionMetrics();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v61, 1, 1, v50);
    uint64_t v51 = type metadata accessor for Paragraph();
    swift_allocObject();
    uint64_t v52 = v41;
    id v53 = v46;
    id v54 = a1;
    uint64_t v55 = Paragraph.init(text:alignment:style:isCollapsed:isLinkDetectionEnabled:shareSheetContentSource:impressionMetrics:)();
    unint64_t v56 = v66;
    v66[3] = v51;
    v56[4] = sub_1001D29FC(&qword_1005F8FF8, (void (*)(uint64_t))&type metadata accessor for Paragraph);

    *unint64_t v56 = v55;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v74, v65);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v75);
    sub_100054B1C((uint64_t)v63, (uint64_t *)&unk_1005F7750);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v65);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v75);
    sub_100054B1C((uint64_t)v63, (uint64_t *)&unk_1005F7750);
    double result = 0.0;
    uint64_t v58 = v66;
    *(_OWORD *)uint64_t v66 = 0u;
    *((_OWORD *)v58 + 1) = 0u;
    v58[4] = 0;
  }
  return result;
}

uint64_t sub_1001CCDFC(uint64_t a1)
{
  return sub_1001D0654(a1, 0x65746973626577, 0xE700000000000000, &qword_1005F8D60, (void **)algn_1005F8D68);
}

double sub_1001CCE20@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v43 = (char *)v38 - v19;
  id v20 = [a1 webpageURL];
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_7;
  }
  uint64_t v21 = v20;
  uint64_t v41 = v6;
  uint64_t v42 = v10;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  URL.init(string:)();
  swift_bridgeObjectRelease_n();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_7:
    sub_100054B1C((uint64_t)v13, (uint64_t *)&unk_1005F7750);
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(void *)(a2 + 32) = 0;
    return result;
  }
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v23 = v43;
  v22(v43, v13, v14);
  uint64_t v24 = (void (*)(unint64_t, char *, uint64_t))v22;
  id v25 = [self mainBundle];
  v50._unint64_t object = (void *)0xEF65746973626557;
  v26._uint64_t countAndFlagsBits = 0x5F45444F53495045;
  v26._unint64_t object = (void *)0xEF45544953424557;
  v27._uint64_t countAndFlagsBits = 0;
  v27._unint64_t object = (void *)0xE000000000000000;
  v50._uint64_t countAndFlagsBits = 0x2065646F73697045;
  Swift::String v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v50);
  unint64_t object = v28._object;
  uint64_t countAndFlagsBits = v28._countAndFlagsBits;

  uint64_t v29 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v42, 1, 1, v29);
  v38[3] = static Link.Presentation.textFollowsTintColor.getter();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v23, v14);
  unint64_t v30 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v31 = swift_allocObject();
  v24(v31 + v30, v18, v14);
  LOBYTE(v24) = static Link.Presentation.textFollowsTintColor.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v24) {
    Link.Presentation.init(rawValue:)();
  }
  static ActionMetrics.notInstrumented.getter();
  uint64_t v32 = type metadata accessor for ClosureAction();
  swift_allocObject();
  uint64_t v33 = ClosureAction.init(title:presentationStyle:actionMetrics:closure:)();
  uint64_t v48 = v32;
  uint64_t v49 = sub_1001D29FC(&qword_1005F8FD8, (void (*)(uint64_t))&type metadata accessor for ClosureAction);
  uint64_t v47 = v33;
  static MetricsTargetType.link.getter();
  swift_bridgeObjectRetain();
  uint64_t v34 = v41;
  static ImpressionMetrics.shelfItem(id:idType:uniqueID:impressionType:kind:name:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  uint64_t v36 = type metadata accessor for Link();
  long long v44 = 0u;
  long long v45 = 0u;
  uint64_t v46 = 0;
  *(void *)(a2 + 24) = v36;
  *(void *)(a2 + 32) = sub_1001D29FC(&qword_1005F8FE0, (void (*)(uint64_t))&type metadata accessor for Link);
  sub_10004A244((uint64_t *)a2);
  Link.init(id:title:subtitle:artwork:presentation:segue:impressionMetrics:entity:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v43, v14);
  return result;
}

void sub_1001CD498()
{
  id v0 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  sub_10016E9B0((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1001D29FC(&qword_1005F66F0, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 openURL:v3 options:isa completionHandler:0];
}

char *sub_1001CD5A4(void *a1)
{
  uint64_t v3 = sub_100054B78((uint64_t *)&unk_1005FD290);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ModernShelf();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v23 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - v14;
  type metadata accessor for RestrictionsController();
  if ((static RestrictionsController.isExplicitContentAllowed.getter() & 1) == 0
    && ([a1 isExplicit] & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_6:
    sub_100054B1C((uint64_t)v5, (uint64_t *)&unk_1005FD290);
    uint64_t v16 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_11;
  }
  if ([a1 isEntitled])
  {
    sub_1001D06B4(a1, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_1001D1B88((uint64_t)v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  }
  uint64_t v23 = v1;
  uint64_t v24 = v10;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v15, v5, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v15, v6);
  uint64_t v16 = (char *)sub_1002EF774(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v19 = *((void *)v16 + 2);
  unint64_t v18 = *((void *)v16 + 3);
  if (v19 >= v18 >> 1) {
    uint64_t v16 = (char *)sub_1002EF774(v18 > 1, v19 + 1, 1, (unint64_t)v16);
  }
  *((void *)v16 + 2) = v19 + 1;
  v17(&v16[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v19], v13, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  uint64_t v10 = v24;
LABEL_11:
  sub_1001CE0B4(a1, (uint64_t)v10);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = (char *)sub_1002EF774(0, *((void *)v16 + 2) + 1, 1, (unint64_t)v16);
  }
  unint64_t v21 = *((void *)v16 + 2);
  unint64_t v20 = *((void *)v16 + 3);
  if (v21 >= v20 >> 1) {
    uint64_t v16 = (char *)sub_1002EF774(v20 > 1, v21 + 1, 1, (unint64_t)v16);
  }
  *((void *)v16 + 2) = v21 + 1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v21], v10, v6);
  return v16;
}

uint64_t sub_1001CD95C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PageContent();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PageRenderEvent();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = Strong;
    static PageRenderContentTypes.resource.getter();
    uint64_t v15 = (unsigned char *)(v14 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageRenderContentTypes);
    swift_beginAccess();
    *uint64_t v15 = PageRenderContentTypes.init(rawValue:)();
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    *uint64_t v11 = 1;
    uint64_t v16 = enum case for PageRenderActivity.resourceFetchCompleted(_:);
    uint64_t v17 = type metadata accessor for PageRenderActivity();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v11, v16, v17);
    (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v11, enum case for PageRenderEvent.activity(_:), v8);
    PassthroughSubject.send(_:)();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v18)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    *(void *)(result + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_footerShelves) = Array<A>.mapToModernShelves()();
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    *(void *)(result + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_footerShelves) = a3;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1001CAB20((uint64_t)v7);
  CurrentValueSubject.value.setter();
  return swift_release();
}

uint64_t sub_1001CDC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a2;
  uint64_t v6 = type metadata accessor for PageContent();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PageRenderEvent();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.js.getter();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v29 = v8;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v28 = a1;
    v36[0] = v19;
    uint64_t v30 = a4;
    *(_DWORD *)uint64_t v18 = 136315138;
    Swift::String v27 = v18 + 4;
    uint64_t v35 = v31;
    sub_1001A5874();
    uint64_t v20 = BinaryInteger.description.getter();
    uint64_t v35 = sub_10004B974(v20, v21, v36);
    a4 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to fetch episode page footer content for %s.", v18, 0xCu);
    swift_arrayDestroy();
    a1 = v28;
    swift_slowDealloc();
    uint64_t v8 = v29;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    *(void *)uint64_t v11 = a1;
    v11[8] = 1;
    uint64_t v22 = enum case for PageRenderActivity.resourceFetchFailed(_:);
    uint64_t v23 = type metadata accessor for PageRenderActivity();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v11, v22, v23);
    uint64_t v25 = v32;
    uint64_t v24 = v33;
    (*(void (**)(char *, void, uint64_t))(v32 + 104))(v11, enum case for PageRenderEvent.activity(_:), v33);
    swift_errorRetain();
    PassthroughSubject.send(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v24);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_footerShelves) = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1001CAB20((uint64_t)v8);
    CurrentValueSubject.value.setter();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001CE0B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  Swift::String v27 = a1;
  uint64_t v29 = a2;
  uint64_t v2 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v2 - 8);
  uint64_t v28 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ModernShelf.ItemPresentation();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v14 - 8);
  os_log_type_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v17 - 8);
  id v18 = [self mainBundle];
  v33._unint64_t object = (void *)0xE000000000000000;
  v19._unint64_t object = (void *)0x80000001004D4E40;
  v19._uint64_t countAndFlagsBits = 0xD000000000000011;
  v20._uint64_t countAndFlagsBits = 0;
  v20._unint64_t object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v33);

  if (qword_1005F59F8 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 1, 1, v21);
  uint64_t v22 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
  uint64_t v23 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 1, 1, v23);
  swift_bridgeObjectRetain();
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  LOBYTE(v30) = 1;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
  sub_1001CE5D4(v27);
  uint64_t v24 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v6, 1, 1, v24);
  uint64_t v25 = type metadata accessor for ImpressionMetrics();
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v32 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v28, 1, 1, v25);
  return ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
}

uint64_t sub_1001CE5A8(uint64_t a1)
{
  return sub_1001D0654(a1, 0x74616D726F666E69, 0xEB000000006E6F69, &qword_1005F8D70, (void **)algn_1005F8D78);
}

void *sub_1001CE5D4(void *a1)
{
  sub_1001CEA6C(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_100042FC4(&v16, (uint64_t)v18);
    sub_100056D54((uint64_t)v18, (uint64_t)&v16);
    uint64_t v2 = sub_1002EF760(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    if (v4 >= v3 >> 1) {
      uint64_t v2 = sub_1002EF760((void *)(v3 > 1), v4 + 1, 1, v2);
    }
    v2[2] = v4 + 1;
    sub_100042FC4(&v16, (uint64_t)&v2[5 * v4 + 4]);
    sub_10004D2D8((uint64_t)v18);
  }
  else
  {
    sub_100054B1C((uint64_t)&v16, &qword_1005F8FC8);
    uint64_t v2 = _swiftEmptyArrayStorage;
  }
  sub_1001CF3AC(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_100042FC4(&v16, (uint64_t)v18);
    sub_100056D54((uint64_t)v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1002EF760(0, v2[2] + 1, 1, v2);
    }
    unint64_t v6 = v2[2];
    unint64_t v5 = v2[3];
    if (v6 >= v5 >> 1) {
      uint64_t v2 = sub_1002EF760((void *)(v5 > 1), v6 + 1, 1, v2);
    }
    v2[2] = v6 + 1;
    sub_100042FC4(&v16, (uint64_t)&v2[5 * v6 + 4]);
    sub_10004D2D8((uint64_t)v18);
  }
  else
  {
    sub_100054B1C((uint64_t)&v16, &qword_1005F8FC8);
  }
  sub_1001CFC94(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_100042FC4(&v16, (uint64_t)v18);
    sub_100056D54((uint64_t)v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1002EF760(0, v2[2] + 1, 1, v2);
    }
    unint64_t v8 = v2[2];
    unint64_t v7 = v2[3];
    if (v8 >= v7 >> 1) {
      uint64_t v2 = sub_1002EF760((void *)(v7 > 1), v8 + 1, 1, v2);
    }
    v2[2] = v8 + 1;
    sub_100042FC4(&v16, (uint64_t)&v2[5 * v8 + 4]);
    sub_10004D2D8((uint64_t)v18);
  }
  else
  {
    sub_100054B1C((uint64_t)&v16, &qword_1005F8FC8);
  }
  sub_1001CFF64(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_100042FC4(&v16, (uint64_t)v18);
    sub_100056D54((uint64_t)v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1002EF760(0, v2[2] + 1, 1, v2);
    }
    unint64_t v10 = v2[2];
    unint64_t v9 = v2[3];
    if (v10 >= v9 >> 1) {
      uint64_t v2 = sub_1002EF760((void *)(v9 > 1), v10 + 1, 1, v2);
    }
    v2[2] = v10 + 1;
    sub_100042FC4(&v16, (uint64_t)&v2[5 * v10 + 4]);
    sub_10004D2D8((uint64_t)v18);
  }
  else
  {
    sub_100054B1C((uint64_t)&v16, &qword_1005F8FC8);
  }
  sub_1001D01C0(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_100042FC4(&v16, (uint64_t)v18);
    sub_100056D54((uint64_t)v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1002EF760(0, v2[2] + 1, 1, v2);
    }
    unint64_t v12 = v2[2];
    unint64_t v11 = v2[3];
    if (v12 >= v11 >> 1) {
      uint64_t v2 = sub_1002EF760((void *)(v11 > 1), v12 + 1, 1, v2);
    }
    v2[2] = v12 + 1;
    sub_100042FC4(&v16, (uint64_t)&v2[5 * v12 + 4]);
    sub_10004D2D8((uint64_t)v18);
  }
  else
  {
    sub_100054B1C((uint64_t)&v16, &qword_1005F8FC8);
  }
  sub_1001D03F4(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_100042FC4(&v16, (uint64_t)v18);
    sub_100056D54((uint64_t)v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1002EF760(0, v2[2] + 1, 1, v2);
    }
    unint64_t v14 = v2[2];
    unint64_t v13 = v2[3];
    if (v14 >= v13 >> 1) {
      uint64_t v2 = sub_1002EF760((void *)(v13 > 1), v14 + 1, 1, v2);
    }
    v2[2] = v14 + 1;
    sub_100042FC4(&v16, (uint64_t)&v2[5 * v14 + 4]);
    sub_10004D2D8((uint64_t)v18);
  }
  else
  {
    sub_100054B1C((uint64_t)&v16, &qword_1005F8FC8);
  }
  return v2;
}

void sub_1001CEA6C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v4 - 8);
  uint64_t v58 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for FlowPresentationContext();
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v55 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v11 - 8);
  id v54 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v51 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v57 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FlowDestination();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v56 = (void *)((char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v18 = [a1 podcast];
  if (!v18) {
    goto LABEL_16;
  }
  Swift::String v19 = v18;
  id v20 = [v18 title];

  if (!v20) {
    goto LABEL_16;
  }
  uint64_t v47 = v10;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v23 = v22;

  uint64_t v24 = HIBYTE(v23) & 0xF;
  uint64_t v48 = v21;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (!v24)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  unint64_t v49 = v23;
  id v25 = [self mainBundle];
  v66._unint64_t object = (void *)0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0x5449545F574F4853;
  v26._unint64_t object = (void *)0xEA0000000000454CLL;
  v27._uint64_t countAndFlagsBits = 0;
  v27._unint64_t object = (void *)0xE000000000000000;
  v66._uint64_t countAndFlagsBits = 0;
  Swift::String v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v66);
  unint64_t object = v28._object;

  id v29 = [a1 podcast];
  if (!v29)
  {
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    uint64_t v61 = 0;
    long long v59 = 0u;
    long long v60 = 0u;
    goto LABEL_21;
  }
  long long v30 = v29;
  type metadata accessor for PodcastDetail();
  id v31 = v30;
  uint64_t v32 = sub_10022B704(v31, 0, 0, 0, 1);
  if (!v32)
  {

    goto LABEL_19;
  }
  uint64_t v33 = v32;
  swift_retain();
  uint64_t v34 = Podcast.adamId.getter();
  char v36 = v35;
  swift_release();
  if (v36)
  {

    swift_release();
    goto LABEL_19;
  }
  v46[0] = v31;
  v46[1] = v28._countAndFlagsBits;
  *unint64_t v56 = v33;
  (*(void (**)(void))(v16 + 104))();
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v57, enum case for FlowDestinationPageHeader.uber(_:), v13);
  v62[0] = v34;
  sub_1001A5874();
  uint64_t v51 = v33;
  swift_retain();
  BinaryInteger.description.getter();
  static MetricsTargetType.button.getter();
  uint64_t v37 = type metadata accessor for URL();
  uint64_t v38 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v47, 1, 1, v37);
  static MetricsDataConfiguration.default.getter();
  sub_100054B78((uint64_t *)&unk_1006027F0);
  type metadata accessor for MetricsData();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
  static MetricsActionType.navigate.getter();
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
  swift_bridgeObjectRelease();
  ScalarDictionary.init()();
  ActionMetrics.init(data:custom:)();
  sub_100053820((uint64_t)v62, (uint64_t)v65, (uint64_t *)&unk_1005F76D0);
  sub_100053884((uint64_t)v65);
  uint64_t v64 = v62[2];
  sub_1000537F4((uint64_t)&v64);
  uint64_t v63 = v62[3];
  sub_1000537F4((uint64_t)&v63);
  sub_1000536BC(v62[4]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100054B1C(v38, (uint64_t *)&unk_1005F7750);
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v55, enum case for FlowPresentationContext.infer(_:), v53);
  unsigned __int8 v39 = static Link.Presentation.textFollowsTintColor.getter();
  char v40 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v39) {
    Link.Presentation.init(rawValue:)();
  }
  Link.Presentation.init(rawValue:)();
  char v41 = Link.Presentation.init(rawValue:)();
  uint64_t v42 = (void *)v46[0];
  if (v41 != v40) {
    Link.Presentation.init(rawValue:)();
  }
  type metadata accessor for FlowAction();
  swift_allocObject();
  uint64_t v43 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
  swift_release();

  if (!v43) {
    goto LABEL_20;
  }
  *((void *)&v60 + 1) = type metadata accessor for Action();
  uint64_t v61 = sub_1001D29FC((unint64_t *)&qword_1005F8290, (void (*)(uint64_t))&type metadata accessor for Action);
  *(void *)&long long v59 = v43;
LABEL_21:
  long long v44 = v58;
  uint64_t v45 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
  *(void *)(a2 + 24) = type metadata accessor for Information();
  *(void *)(a2 + 32) = sub_1001D29FC(&qword_1005F8FD0, (void (*)(uint64_t))&type metadata accessor for Information);
  sub_10004A244((uint64_t *)a2);
  Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)();
}

double sub_1001CF3AC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v4 - 8);
  id v54 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FlowPresentationContext();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  __chkstk_darwin(v6);
  uint64_t v53 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v12 - 8);
  uint64_t v52 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v55 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FlowDestination();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (void *)((char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v21 = [a1 podcast];
  if (!v21) {
    goto LABEL_14;
  }
  unint64_t v22 = v21;
  id v23 = [v21 channel];

  if (!v23) {
    goto LABEL_14;
  }
  if (![v23 isMultiShow]
    || (id v24 = [v23 name]) == 0)
  {

LABEL_14:
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  id v25 = v24;
  uint64_t v47 = v15;
  unint64_t v49 = v20;
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v28 = v27;

  uint64_t v29 = HIBYTE(v28) & 0xF;
  uint64_t v48 = v26;
  if ((v28 & 0x2000000000000000) == 0) {
    uint64_t v29 = v26 & 0xFFFFFFFFFFFFLL;
  }
  if (!v29)
  {

    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v43[1] = v28;
  id v30 = [self mainBundle];
  v63._unint64_t object = (void *)0xE000000000000000;
  v31._uint64_t countAndFlagsBits = 0x5F4C454E4E414843;
  v31._unint64_t object = (void *)0xED0000454C544954;
  v32._uint64_t countAndFlagsBits = 0;
  v32._unint64_t object = (void *)0xE000000000000000;
  v63._uint64_t countAndFlagsBits = 0;
  Swift::String v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v63);
  uint64_t countAndFlagsBits = v33._countAndFlagsBits;
  unint64_t object = v33._object;

  type metadata accessor for ChannelDetail();
  id v34 = v23;
  uint64_t v35 = sub_1003A9830(v34);
  id v44 = v34;

  *unint64_t v49 = v35;
  (*(void (**)(void))(v18 + 104))();
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v55, enum case for FlowDestinationPageHeader.uber(_:), v14);
  swift_retain();
  uint64_t v47 = v35;
  v59[0] = ChannelDetail.adamId.getter();
  sub_1001A5874();
  v43[0] = BinaryInteger.description.getter();
  static MetricsTargetType.link.getter();
  uint64_t v36 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v11, 1, 1, v36);
  static MetricsDataConfiguration.default.getter();
  sub_100054B78((uint64_t *)&unk_1006027F0);
  type metadata accessor for MetricsData();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
  static MetricsActionType.navigate.getter();
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
  swift_bridgeObjectRelease();
  ScalarDictionary.init()();
  ActionMetrics.init(data:custom:)();
  sub_100053820((uint64_t)v59, (uint64_t)v62, (uint64_t *)&unk_1005F76D0);
  sub_100053884((uint64_t)v62);
  uint64_t v61 = v59[2];
  sub_1000537F4((uint64_t)&v61);
  uint64_t v60 = v59[3];
  sub_1000537F4((uint64_t)&v60);
  sub_1000536BC(v59[4]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100054B1C((uint64_t)v11, (uint64_t *)&unk_1005F7750);
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v53, enum case for FlowPresentationContext.infer(_:), v51);
  unsigned __int8 v37 = static Link.Presentation.textFollowsTintColor.getter();
  unsigned __int8 v38 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  Link.Presentation.init(rawValue:)();
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v37) {
    Link.Presentation.init(rawValue:)();
  }
  Link.Presentation.init(rawValue:)();
  if (Link.Presentation.init(rawValue:)() != v38) {
    Link.Presentation.init(rawValue:)();
  }
  uint64_t v39 = type metadata accessor for FlowAction();
  swift_allocObject();
  uint64_t v40 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
  uint64_t v57 = v39;
  uint64_t v58 = sub_1001D29FC((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
  uint64_t v56 = v40;
  uint64_t v41 = type metadata accessor for ImpressionMetrics();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v54, 1, 1, v41);
  *(void *)(a2 + 24) = type metadata accessor for Information();
  *(void *)(a2 + 32) = sub_1001D29FC(&qword_1005F8FD0, (void (*)(uint64_t))&type metadata accessor for Information);
  sub_10004A244((uint64_t *)a2);
  Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)();
  swift_release();

  return result;
}

uint64_t sub_1001CFC94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 pubDate];
  Date.init(timeIntervalSinceReferenceDate:)();
  Swift::String v11 = Date.verboseDisplayString()();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  unint64_t v12 = ((unint64_t)v11._object >> 56) & 0xF;
  if (((uint64_t)v11._object & 0x2000000000000000) == 0) {
    unint64_t v12 = v11._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    id v13 = [self mainBundle];
    v20._unint64_t object = (void *)0xE000000000000000;
    v14._uint64_t countAndFlagsBits = 0x454853494C425550;
    v14._unint64_t object = (void *)0xEF454C5449545F44;
    v15._uint64_t countAndFlagsBits = 0;
    v15._unint64_t object = (void *)0xE000000000000000;
    v20._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v20);

    uint64_t v16 = type metadata accessor for ImpressionMetrics();
    memset(v18, 0, sizeof(v18));
    uint64_t v19 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
    *(void *)(a2 + 24) = type metadata accessor for Information();
    *(void *)(a2 + 32) = sub_1001D29FC(&qword_1005F8FD0, (void (*)(uint64_t))&type metadata accessor for Information);
    sub_10004A244((uint64_t *)a2);
    return Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return swift_bridgeObjectRelease();
  }
}

double sub_1001CFF64@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 duration];
  uint64_t v7 = static Localization.duration(_:)();
  if (v8)
  {
    *(void *)&v18[0] = v7;
    *((void *)&v18[0] + 1) = v8;
    sub_1001AA530();
    uint64_t v9 = StringProtocol.localizedLowercase.getter();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (v12)
    {
      id v13 = [self mainBundle];
      v20._unint64_t object = (void *)0xE000000000000000;
      v14._uint64_t countAndFlagsBits = 0x545F4854474E454CLL;
      v14._unint64_t object = (void *)0xEC000000454C5449;
      v15._uint64_t countAndFlagsBits = 0;
      v15._unint64_t object = (void *)0xE000000000000000;
      v20._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v20);

      uint64_t v16 = type metadata accessor for ImpressionMetrics();
      memset(v18, 0, sizeof(v18));
      uint64_t v19 = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
      *(void *)(a2 + 24) = type metadata accessor for Information();
      *(void *)(a2 + 32) = sub_1001D29FC(&qword_1005F8FD0, (void (*)(uint64_t))&type metadata accessor for Information);
      sub_10004A244((uint64_t *)a2);
      Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)();
      return result;
    }
    swift_bridgeObjectRelease();
  }
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

double sub_1001D01C0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 seasonNumber];
  if (v7)
  {
    id v8 = v7;
    id v9 = [self mainBundle];
    v16._unint64_t object = (void *)0xE000000000000000;
    v10._uint64_t countAndFlagsBits = 0x545F4E4F53414553;
    v10._unint64_t object = (void *)0xEC000000454C5449;
    v11._uint64_t countAndFlagsBits = 0;
    v11._unint64_t object = (void *)0xE000000000000000;
    v16._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v16);

    *(void *)&v14[0] = v8;
    dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v12 = type metadata accessor for ImpressionMetrics();
    memset(v14, 0, sizeof(v14));
    uint64_t v15 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    *(void *)(a2 + 24) = type metadata accessor for Information();
    *(void *)(a2 + 32) = sub_1001D29FC(&qword_1005F8FD0, (void (*)(uint64_t))&type metadata accessor for Information);
    sub_10004A244((uint64_t *)a2);
    Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1001D03F4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 episodeNumber];
  if (v7)
  {
    id v8 = v7;
    id v9 = [self mainBundle];
    v16._unint64_t object = (void *)0xE000000000000000;
    v10._uint64_t countAndFlagsBits = 0x5F45444F53495045;
    v10._unint64_t object = (void *)0xED0000454C544954;
    v11._uint64_t countAndFlagsBits = 0;
    v11._unint64_t object = (void *)0xE000000000000000;
    v16._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v16);

    *(void *)&v14[0] = v8;
    dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v12 = type metadata accessor for ImpressionMetrics();
    memset(v14, 0, sizeof(v14));
    uint64_t v15 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    *(void *)(a2 + 24) = type metadata accessor for Information();
    *(void *)(a2 + 32) = sub_1001D29FC(&qword_1005F8FD0, (void (*)(uint64_t))&type metadata accessor for Information);
    sub_10004A244((uint64_t *)a2);
    Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1001D062C(uint64_t a1)
{
  return sub_1001D0654(a1, 0xD000000000000012, 0x80000001004D4E20, &qword_1005F8D80, (void **)algn_1005F8D88);
}

uint64_t sub_1001D0654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void **a5)
{
  ShelfIDBuilder.init(named:)();
  Swift::String v7 = ShelfIDBuilder.build()();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v7._countAndFlagsBits;
  *a5 = v7._object;
  return result;
}

uint64_t sub_1001D06B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v4 - 8);
  BOOL v135 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v6 - 8);
  uint64_t v134 = (char **)((char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v8 - 8);
  uint64_t v133 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v113 - v18;
  uint64_t v20 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v20 - 8);
  uint64_t v147 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for TranscriptSnippet();
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v148 = (char *)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for FlowDestinationPageHeader();
  unint64_t object = *(void (***)(char *, void, uint64_t))(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v131 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for FlowPresentationContext();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v128 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v25 - 8);
  uint64_t v124 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v27 - 8);
  uint64_t v146 = (char *)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v29 - 8);
  Swift::Int v127 = (char *)&v113 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v123 = type metadata accessor for FlowDestination();
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  BOOL v142 = (char *)&v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for TranscriptRequestInformation();
  uint64_t v144 = *(void *)(v32 - 8);
  uint64_t v145 = v32;
  __chkstk_darwin(v32);
  uint64_t v143 = (char *)&v113 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100054B78(&qword_1005F8FB8);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v120 = (uint64_t)&v113 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v132 = (uint64_t)&v113 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v113 - v40;
  __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v113 - v42;
  id v44 = [a1 transcriptIdentifier];
  if (v44)
  {
    uint64_t v45 = v44;
    uint64_t v115 = v17;
    uint64_t v141 = v19;
    uint64_t v116 = v12;
    uint64_t v117 = v14;
    uint64_t v118 = v13;
    uint64_t v119 = a2;
    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v138 = v46;

    [a1 storeTrackId];
    uint64_t v47 = AdamID.init(rawValue:)();
    id v48 = [a1 transcriptProvider];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    TranscriptSource.init(rawValue:)();
    v152[0] = v47;
    sub_1001A5874();
    BinaryInteger.description.getter();
    id v49 = [a1 title];
    if (v49)
    {
      uint64_t v50 = v49;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    id v121 = a1;
    id v54 = [a1 podcast];
    uint64_t v55 = v54;
    if (v54)
    {
      id v56 = [v54 title];

      if (v56)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
    }
    uint64_t v140 = v43;
    sub_100054BBC((uint64_t)v43, (uint64_t)v41, &qword_1005F8FB8);
    swift_bridgeObjectRetain();
    uint64_t v57 = v143;
    TranscriptRequestInformation.init(episodeAdamId:episodeTitle:ttmlIdentifier:selectedTextTimeInterval:showName:source:)();
    uint64_t v58 = v142;
    (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v142, v57, v145);
    (*(void (**)(char *, void, void))(v122 + 104))(v58, enum case for FlowDestination.episodeDetailTranscript(_:), v123);
    static MetricsTargetID.viewTranscript.getter();
    static MetricsTargetType.button.getter();
    uint64_t v59 = type metadata accessor for URL();
    uint64_t v60 = *(void *)(v59 - 8);
    uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56);
    uint64_t v62 = (uint64_t)v146;
    uint64_t v122 = v59;
    unint64_t v114 = v61;
    uint64_t v113 = v60 + 56;
    ((void (*)(char *, uint64_t, uint64_t))v61)(v146, 1, 1);
    static MetricsDataConfiguration.default.getter();
    sub_100054B78((uint64_t *)&unk_1006027F0);
    type metadata accessor for MetricsData();
    uint64_t v63 = swift_allocObject();
    long long v123 = xmmword_10046D010;
    *(_OWORD *)(v63 + 16) = xmmword_10046D010;
    static MetricsActionType.navigate.getter();
    static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
    swift_bridgeObjectRelease();
    ScalarDictionary.init()();
    ActionMetrics.init(data:custom:)();
    sub_100053820((uint64_t)v152, (uint64_t)v155, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v155);
    uint64_t v154 = v152[2];
    sub_1000537F4((uint64_t)&v154);
    uint64_t v153 = v152[3];
    sub_1000537F4((uint64_t)&v153);
    sub_1000536BC(v152[4]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100054B1C(v62, (uint64_t *)&unk_1005F7750);
    (*(void (**)(char *, void, uint64_t))(v125 + 104))(v128, enum case for FlowPresentationContext.infer(_:), v126);
    LOBYTE(v57) = static Link.Presentation.textFollowsTintColor.getter();
    char v64 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
    Link.Presentation.init(rawValue:)();
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v57) {
      Link.Presentation.init(rawValue:)();
    }
    Link.Presentation.init(rawValue:)();
    char v65 = Link.Presentation.init(rawValue:)();
    Swift::String v66 = v141;
    id v67 = v121;
    if (v65 != v64) {
      Link.Presentation.init(rawValue:)();
    }
    object[13](v131, enum case for FlowDestinationPageHeader.standard(_:), v130);
    uint64_t v68 = type metadata accessor for FlowAction();
    swift_allocObject();
    uint64_t v69 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
    id v70 = [v67 transcriptSnippet];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    *((void *)&v150 + 1) = v68;
    uint64_t v151 = sub_1001D29FC((unint64_t *)&unk_1005FEA80, (void (*)(uint64_t))&type metadata accessor for FlowAction);
    *(void *)&long long v149 = v69;
    uint64_t v71 = type metadata accessor for ImpressionMetrics();
    uint64_t v72 = *(void *)(v71 - 8);
    uint64_t v73 = *(char **)(v72 + 56);
    BOOL v142 = (char *)v71;
    uint64_t v131 = v73;
    uint64_t v130 = v72 + 56;
    ((void (*)(char *, uint64_t, uint64_t))v73)(v147, 1, 1);
    uint64_t v74 = (char *)v69;
    swift_retain();
    TranscriptSnippet.init(id:text:clickAction:impressionMetrics:)();
    uint64_t v75 = self;
    id v76 = [v75 mainBundle];
    v157._unint64_t object = (void *)0xE000000000000000;
    v77._uint64_t countAndFlagsBits = 0x495243534E415254;
    v77._unint64_t object = (void *)0xEA00000000005450;
    v78._uint64_t countAndFlagsBits = 0;
    v78._unint64_t object = (void *)0xE000000000000000;
    v157._uint64_t countAndFlagsBits = 0;
    Swift::String v79 = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, (Swift::String_optional)0, (NSBundle)v76, v78, v157);
    uint64_t countAndFlagsBits = v79._countAndFlagsBits;
    unint64_t object = (void (**)(char *, void, uint64_t))v79._object;

    uint64_t v80 = v132;
    sub_100054BBC((uint64_t)v140, v132, &qword_1005F8FB8);
    uint64_t v81 = type metadata accessor for TranscriptSource();
    uint64_t v82 = *(void *)(v81 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81) != 1)
    {
      uint64_t v83 = v120;
      sub_100054BBC(v80, v120, &qword_1005F8FB8);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v82 + 88))(v83, v81) == enum case for TranscriptSource.provider(_:))
      {
        id v84 = [v121 podcast];
        if (v84)
        {
          Swift::Int v85 = v84;
          id v86 = [v84 title];

          if (v86)
          {
            uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v89 = v88;

            id v90 = [v75 mainBundle];
            v158._unint64_t object = (void *)0xE000000000000000;
            v91._unint64_t object = (void *)0x80000001004D4E00;
            v91._uint64_t countAndFlagsBits = 0xD000000000000015;
            v92._uint64_t countAndFlagsBits = 0;
            v92._unint64_t object = (void *)0xE000000000000000;
            v158._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v91, (Swift::String_optional)0, (NSBundle)v90, v92, v158);

            sub_100054B78(&qword_1005F7720);
            uint64_t v93 = swift_allocObject();
            *(_OWORD *)(v93 + 16) = v123;
            *(void *)(v93 + 56) = &type metadata for String;
            *(void *)(v93 + 64) = sub_10004DA4C();
            *(void *)(v93 + 32) = v87;
            *(void *)(v93 + 40) = v89;
            static String.localizedStringWithFormat(_:_:)();
            swift_bridgeObjectRelease();
            Swift::String v66 = v141;
            swift_bridgeObjectRelease();
          }
        }
        goto LABEL_21;
      }
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v81);
    }
    id v94 = [v75 mainBundle];
    v95._uint64_t countAndFlagsBits = 0xD000000000000017;
    v159._unint64_t object = (void *)0xE000000000000000;
    v95._unint64_t object = (void *)0x80000001004D4DE0;
    v96._uint64_t countAndFlagsBits = 0;
    v96._unint64_t object = (void *)0xE000000000000000;
    v159._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v95, (Swift::String_optional)0, (NSBundle)v94, v96, v159);

LABEL_21:
    sub_100054B1C(v80, &qword_1005F8FB8);
    LOBYTE(v149) = 1;
    ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
    uint64_t v97 = v66;
    if (qword_1005F5A00 != -1) {
      swift_once();
    }
    uint64_t v138 = qword_1005F8D80;
    uint64_t v132 = *(void *)algn_1005F8D88;
    uint64_t v98 = type metadata accessor for ActionMenu();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v133, 1, 1, v98);
    unint64_t v99 = v134;
    *uint64_t v134 = v74;
    uint64_t v128 = v74;
    uint64_t v100 = enum case for Header.PrimaryAction.seeAll(_:);
    uint64_t v101 = type metadata accessor for Header.PrimaryAction();
    uint64_t v102 = *(void *)(v101 - 8);
    (*(void (**)(char **, uint64_t, uint64_t))(v102 + 104))(v99, v100, v101);
    (*(void (**)(char **, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
    uint64_t v103 = type metadata accessor for ArtworkModel();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v135, 1, 1, v103);
    swift_retain();
    swift_bridgeObjectRetain();
    Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
    uint64_t v104 = v117;
    uint64_t v105 = v118;
    (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v115, v97, v118);
    sub_100054B78(&qword_1005F8428);
    uint64_t v106 = swift_allocObject();
    *(_OWORD *)(v106 + 16) = v123;
    uint64_t v107 = v137;
    *(void *)(v106 + 56) = v137;
    *(void *)(v106 + 64) = sub_1001D29FC(&qword_1005F8FC0, (void (*)(uint64_t))&type metadata accessor for TranscriptSnippet);
    char v108 = sub_10004A244((uint64_t *)(v106 + 32));
    uint64_t v109 = v136;
    unint64_t v110 = v148;
    (*(void (**)(uint64_t *, char *, uint64_t))(v136 + 16))(v108, v148, v107);
    v114(v146, 1, 1, v122);
    uint64_t v151 = 0;
    long long v149 = 0u;
    long long v150 = 0u;
    ((void (*)(char *, uint64_t, uint64_t, char *))v131)(v147, 1, 1, v142);
    uint64_t v111 = v119;
    ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v141, v105);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v107);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v143, v145);
    sub_100054B1C((uint64_t)v140, &qword_1005F8FB8);
    uint64_t v112 = type metadata accessor for ModernShelf();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v111, 0, 1, v112);
  }
  uint64_t v51 = type metadata accessor for ModernShelf();
  uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56);

  return v52(a2, 1, 1, v51);
}

uint64_t sub_1001D1B88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v1 - 8);
  uint64_t v52 = (char *)v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v3 - 8);
  uint64_t v51 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v5 - 8);
  id v49 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_100600E60);
  __chkstk_darwin(v7 - 8);
  id v48 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F7760);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78(&qword_1005F7768);
  __chkstk_darwin(v12 - 8);
  id v54 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for ModernShelf.ItemPresentation();
  uint64_t v14 = *(void *)(v50 - 8);
  uint64_t v15 = __chkstk_darwin(v50);
  uint64_t v47 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v46 - v17;
  uint64_t v19 = self;
  id v20 = [v19 mainBundle];
  v58._unint64_t object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0x495243534E415254;
  v21._unint64_t object = (void *)0xEA00000000005450;
  v22._uint64_t countAndFlagsBits = 0;
  v22._unint64_t object = (void *)0xE000000000000000;
  v58._uint64_t countAndFlagsBits = 0;
  Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v58);
  void v46[2] = v23._object;
  v46[3] = v23._countAndFlagsBits;

  uint64_t v25 = MTEpisode.subscriptionName.getter();
  if (v24)
  {
    uint64_t v26 = v24;
    id v27 = [v19 mainBundle];
    v59._unint64_t object = (void *)0xE000000000000000;
    v28._unint64_t object = (void *)0x80000001004D4FC0;
    v28._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v29._uint64_t countAndFlagsBits = 0;
    v29._unint64_t object = (void *)0xE000000000000000;
    v59._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v59);

    sub_100054B78(&qword_1005F7720);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_10046D010;
    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = sub_10004DA4C();
    *(void *)(v30 + 32) = v25;
    *(void *)(v30 + 40) = v26;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v31 = [v19 mainBundle];
    v32._uint64_t countAndFlagsBits = 0xD000000000000037;
    v60._unint64_t object = (void *)0xE000000000000000;
    v32._unint64_t object = (void *)0x80000001004D4F80;
    v33._uint64_t countAndFlagsBits = 0;
    v33._unint64_t object = (void *)0xE000000000000000;
    v60._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)(unint64_t)v25, (NSBundle)v31, v33, v60);
  }
  LOBYTE(v55) = 1;
  uint64_t v34 = v18;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)();
  if (qword_1005F5A00 != -1) {
    swift_once();
  }
  v46[0] = *(void *)algn_1005F8D88;
  v46[1] = qword_1005F8D80;
  uint64_t v35 = type metadata accessor for ActionMenu();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v11, 1, 1, v35);
  uint64_t v36 = type metadata accessor for Header.PrimaryAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v48, 1, 1, v36);
  uint64_t v37 = type metadata accessor for ArtworkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v49, 1, 1, v37);
  swift_bridgeObjectRetain();
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)();
  uint64_t v38 = v18;
  uint64_t v39 = v50;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v47, v38, v50);
  sub_100054B78(&qword_1005F8428);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_10046D010;
  uint64_t v41 = type metadata accessor for ImpressionMetrics();
  long long v55 = 0u;
  long long v56 = 0u;
  uint64_t v57 = 0;
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
  uint64_t v43 = v51;
  v42(v51, 1, 1, v41);
  *(void *)(v40 + 56) = type metadata accessor for TranscriptSnippet();
  *(void *)(v40 + 64) = sub_1001D29FC(&qword_1005F8FC0, (void (*)(uint64_t))&type metadata accessor for TranscriptSnippet);
  sub_10004A244((uint64_t *)(v40 + 32));
  TranscriptSnippet.init(id:text:clickAction:impressionMetrics:)();
  uint64_t v44 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v52, 1, 1, v44);
  uint64_t v57 = 0;
  long long v55 = 0u;
  long long v56 = 0u;
  v42(v43, 1, 1, v41);
  ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v34, v39);
}

uint64_t LibraryEpisodePagePresenter.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004D2D8(v0 + 88);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  sub_10004D2D8(v0 + 184);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1001B4BB0(v0 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_interactionContextPage);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageID;
  uint64_t v2 = type metadata accessor for PageID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_pageMetrics;
  uint64_t v4 = type metadata accessor for PageMetrics();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_headerShelf, (uint64_t *)&unk_1005FD290);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_upsellBannerShelf, (uint64_t *)&unk_1005FD290);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_highlightShelf, (uint64_t *)&unk_1005FD290);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_descriptionShelf, (uint64_t *)&unk_1005FD290);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_websiteShelf, (uint64_t *)&unk_1005FD290);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LibraryEpisodePagePresenter.__deallocating_deinit()
{
  LibraryEpisodePagePresenter.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1001D2528()
{
  return sub_1001D29FC(&qword_1005F8E00, (void (*)(uint64_t))type metadata accessor for LibraryEpisodePagePresenter);
}

uint64_t type metadata accessor for LibraryEpisodePagePresenter()
{
  uint64_t result = qword_1005F8E38;
  if (!qword_1005F8E38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001D25BC()
{
  return ModernPagePresenter.appEntityAnnotation.getter(*v0);
}

uint64_t sub_1001D25E8()
{
  return ModernPagePresenter.scrollToTop.getter(*v0);
}

uint64_t sub_1001D2614()
{
  return ModernPagePresenter.dismiss.getter(*v0);
}

uint64_t sub_1001D2640()
{
  return ModernShelvesPresenter.interactionContextOrigin.getter();
}

uint64_t sub_1001D26E4()
{
  return ModernPagePresenter.pageExtensions.getter(*v0);
}

uint64_t sub_1001D2710()
{
  return ModernPagePresenter.deletableExtension.getter(*v0);
}

uint64_t sub_1001D273C()
{
  return ModernPagePresenter.reorderingExtension.getter(*v0);
}

uint64_t sub_1001D2768()
{
  return ModernPagePresenter.multiSelectableExtension.getter(*v0);
}

uint64_t sub_1001D2794()
{
  return ModernPagePresenter.hideAllHeaderSeparators.getter(*v0);
}

uint64_t sub_1001D27C0()
{
  return ModernPagePresenter.showsHeaders.getter(*v0);
}

uint64_t sub_1001D27EC()
{
  return ModernPagePresenter.animateSectionChanges.getter(*v0);
}

uint64_t sub_1001D2818()
{
  return ModernPagePresenter.clearsSelectionOnViewWillAppear.getter(*v0);
}

void sub_1001D2844(Swift::Bool collapsed)
{
}

uint64_t sub_1001D2870()
{
  return ModernPagePresenter.hasLoadedContent.getter(*v0);
}

uint64_t sub_1001D289C()
{
  return ModernPagePresenter.pageRender.getter(*v0);
}

uint64_t sub_1001D28C8(uint64_t a1, _OWORD *a2)
{
  long long v3 = a2[1];
  v6[0] = *a2;
  v6[1] = v3;
  v7[0] = a2[2];
  *(_OWORD *)((char *)v7 + 9) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v4 = swift_allocObject();
  LibraryEpisodePagePresenter.init(asPartOf:with:)(a1, v6);
  return v4;
}

uint64_t sub_1001D292C(uint64_t a1)
{
  return ModernPagePresenter.dependenciesDidChange(_:)(a1, *v1);
}

uint64_t sub_1001D2958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8Podcasts27LibraryEpisodePagePresenter_interactionContextPage;
  swift_beginAccess();
  return sub_1001C8268(v3, a1);
}

uint64_t sub_1001D29B4()
{
  return sub_1001D29FC(&qword_1005F8E08, (void (*)(uint64_t))type metadata accessor for LibraryEpisodePagePresenter);
}

uint64_t sub_1001D29FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001D2A48()
{
}

void sub_1001D2A74()
{
}

uint64_t sub_1001D2AA0(uint64_t a1)
{
  return ViewControllerPresenter.viewWillDisappear(forReason:)(a1, *v1);
}

void sub_1001D2ACC()
{
}

void sub_1001D2AF8()
{
}

uint64_t sub_1001D2B24()
{
  return type metadata accessor for LibraryEpisodePagePresenter();
}

void sub_1001D2B2C()
{
  type metadata accessor for InteractionContext.Page();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PageID();
    if (v1 <= 0x3F)
    {
      type metadata accessor for PageMetrics();
      if (v2 <= 0x3F)
      {
        sub_1001D2CF8();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1001D2CF8()
{
  if (!qword_1005F8E48)
  {
    type metadata accessor for ModernShelf();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1005F8E48);
    }
  }
}

uint64_t _s7EpisodeVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LibraryEpisodePagePresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LibraryEpisodePagePresenter.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  return a1;
}

__n128 initializeWithTake for LibraryEpisodePagePresenter.Configuration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LibraryEpisodePagePresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEpisodePagePresenter.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryEpisodePagePresenter.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEpisodePagePresenter.Configuration()
{
  return &type metadata for LibraryEpisodePagePresenter.Configuration;
}

uint64_t sub_1001D2FA8()
{
  uint64_t v0 = sub_100054B78(&qword_1005F8FB0);
  sub_10018A30C(v0, qword_1005F8D90);
  sub_10018A370(v0, (uint64_t)qword_1005F8D90);
  return PreferenceKey.init(_:)();
}

unint64_t sub_1001D3018()
{
  unint64_t result = qword_1005F8FA0;
  if (!qword_1005F8FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F8FA0);
  }
  return result;
}

uint64_t sub_1001D306C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InteractionContext.Page();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D30D0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001D3110(unint64_t *a1)
{
  return sub_1001CD95C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001D3118()
{
  return sub_1001D3144((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001D3144(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 24));
  a2(*(void *)(v2 + 32));

  return swift_deallocObject();
}

uint64_t sub_1001D319C(uint64_t a1)
{
  return sub_1001CDC90(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001D31A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005FD290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D3210()
{
  uint64_t v1 = type metadata accessor for URL();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_1001D32A0()
{
  type metadata accessor for URL();

  sub_1001CD498();
}

uint64_t sub_1001D3300(uint64_t a1)
{
  return sub_1001CC19C(a1);
}

uint64_t sub_1001D3308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005FD290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D3370()
{
  return sub_1001CB8E8();
}

uint64_t sub_1001D3378()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001D33B0()
{
  (*(void (**)(void))(v0 + 16))();
  return 0;
}

uint64_t sub_1001D33DC(uint64_t a1)
{
  return sub_1001CBE20(a1);
}

uint64_t sub_1001D33E4()
{
  return sub_1001CBC7C();
}

uint64_t sub_1001D33EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeaderButtonItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for LibraryEpisodePagePresenter.PageLoadError()
{
  return &type metadata for LibraryEpisodePagePresenter.PageLoadError;
}

uint64_t sub_1001D3464()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28PlayNextEpisodeContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1001D351C()
{
  return type metadata accessor for PlayNextEpisodeContextAction();
}

uint64_t type metadata accessor for PlayNextEpisodeContextAction()
{
  uint64_t result = qword_1005F9098;
  if (!qword_1005F9098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001D3570()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t ImplicitFollowsDecayCoordinator.implicitFollowsEvents.getter()
{
  return swift_retain();
}

uint64_t sub_1001D3624(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t sub_1001D3634()
{
  id v0 = [self mainBundle];
  v5._unint64_t object = (void *)0xE000000000000000;
  v1._uint64_t countAndFlagsBits = 0x78654E2079616C50;
  v1._unint64_t object = (void *)0xE900000000000074;
  v2._uint64_t countAndFlagsBits = 0;
  v2._unint64_t object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

unint64_t sub_1001D36D4()
{
  return 0xD000000000000029;
}

uint64_t sub_1001D36F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28PlayNextEpisodeContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1001D3764@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.playEpisodeNext(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

void sub_1001D383C(uint64_t a1@<X8>)
{
  id v2 = [self systemOrangeColor];
  id v3 = [self mainBundle];
  v7._unint64_t object = (void *)0xE000000000000000;
  v4._uint64_t countAndFlagsBits = 0x78654E2079616C50;
  v4._unint64_t object = (void *)0xE900000000000074;
  v5._uint64_t countAndFlagsBits = 0;
  v5._unint64_t object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v7);

  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0xD000000000000029;
  *(void *)(a1 + 16) = 0x80000001004D50A0;
  *(Swift::String *)(a1 + 24) = v6;
}

uint64_t sub_1001D3928(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

uint64_t sub_1001D3988()
{
  return swift_retain();
}

uint64_t sub_1001D39C0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t (*sub_1001D3A08())()
{
  return j__swift_endAccess;
}

void *sub_1001D3A5C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1001D3ABC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1001D3B1C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1001D3B7C(uint64_t a1)
{
  uint64_t result = sub_1001D3C48(&qword_1005F9198);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001D3BC0(uint64_t a1)
{
  uint64_t result = sub_1001D3C48(&qword_1005F91A0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001D3C04(uint64_t a1)
{
  uint64_t result = sub_1001D3C48(&qword_1005F91A8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001D3C48(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PlayNextEpisodeContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PlayPreviousChapterIntentImplementation.init(asPartOf:performing:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PlaybackController();
  BaseObjectGraph.inject<A>(_:)();
  swift_release();
  uint64_t v3 = type metadata accessor for PlayPreviousChapterIntent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a2, v3);
  return v5;
}

uint64_t PlayPreviousChapterIntentImplementation.perform()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001D3DA8;
  return PlaybackController.seekToPreviousChapter()();
}

uint64_t sub_1001D3DA8(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1001D3EA8@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  type metadata accessor for PlaybackController();
  BaseObjectGraph.inject<A>(_:)();
  swift_release();
  uint64_t v4 = type metadata accessor for PlayPreviousChapterIntent();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  *a2 = v6;
  return result;
}

uint64_t sub_1001D3F3C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *id v2 = v1;
  v2[1] = sub_1001D3FD4;
  return PlaybackController.seekToPreviousChapter()();
}

uint64_t sub_1001D3FD4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

ValueMetadata *type metadata accessor for PlayPreviousChapterIntentImplementation()
{
  return &type metadata for PlayPreviousChapterIntentImplementation;
}

uint64_t sub_1001D40F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v53 = (void *)a3;
  uint64_t v6 = sub_100054B78(&qword_1005F7748);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005F76A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ShowLockupStyle.LockupStyleOptions();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [a1 uuid];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v47 = v8;
    uint64_t v49 = v3;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    [a1 storeCollectionId];
    uint64_t v50 = AdamID.init(rawValue:)();
    uint64_t v21 = sub_1001D4710(a1);
    uint64_t v51 = v22;
    uint64_t v52 = v21;
    ShowLockupStyle.subline.getter();
    uint64_t v43 = MTPodcast.lockupString(with:)((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (ShowLockupStyle.includesOfferButton.getter())
    {
      type metadata accessor for LibraryFollowAction();
      swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v23 = LibraryFollowAction.init(podcastUuid:displaySuccessHUD:)();
    }
    else
    {
      uint64_t v23 = 0;
    }
    MTPodcast.artworkModel.getter();
    id v27 = [a1 title];
    if (v27)
    {
      Swift::String v28 = v27;
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v41 = v29;
    }
    else
    {
      uint64_t v42 = 0;
      uint64_t v41 = 0;
    }
    [a1 addedDate];
    swift_retain();
    id v30 = sub_1001D4918(a1, a2, v52, v51, (uint64_t)v53);
    id v48 = v11;
    uint64_t v45 = v20;
    uint64_t v46 = v18;
    uint64_t v44 = v23;
    if (v30)
    {
      id v31 = v30;
      *((void *)&v55 + 1) = type metadata accessor for Action();
      unint64_t v56 = sub_1001D61A8();
      *(void *)&long long v54 = v31;
    }
    else
    {
      unint64_t v56 = 0;
      long long v54 = 0u;
      long long v55 = 0u;
    }
    Swift::String v32 = v53;
    uint64_t v39 = sub_1001D5E3C(a1);
    id v38 = sub_1001D6078(a1);
    v37[3] = [a1 subscribed];
    v37[2] = [a1 isExplicit];
    v58[0] = v50;
    sub_1001A5874();
    BinaryInteger.description.getter();
    uint64_t v40 = a2;
    static MetricsIDType.itsContentID.getter();
    static MetricsTargetType.lockup.getter();
    static MetricsContentKind.show.getter();
    Swift::String v33 = v47;
    static ImpressionMetrics.shelfItem(id:idType:uniqueID:impressionType:kind:name:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = type metadata accessor for ImpressionMetrics();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
    LOBYTE(v58[0]) = 1;
    uint64_t v26 = dispatch thunk of LibraryShowLockup.__allocating_init(uuid:adamId:icon:name:title:addedDate:subtitles:ordinal:rating:buttonAction:clickAction:providerAction:playAction:contextAction:isSubscribed:isExplicit:shelfUniqueId:impressionMetrics:)();
    sub_100053820((uint64_t)v32, (uint64_t)v58, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)v58);
    v59[0] = v32[2];
    sub_1000537F4((uint64_t)v59);
    uint64_t v57 = v32[3];
    sub_1000537F4((uint64_t)&v57);
    sub_1000536BC(v32[4]);
    swift_release();

    uint64_t v35 = type metadata accessor for ShowLockupStyle();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v40, v35);
  }
  else
  {
    uint64_t v24 = v53;
    sub_100053820((uint64_t)v53, (uint64_t)&v54, (uint64_t *)&unk_1005F76D0);
    sub_100053884((uint64_t)&v54);
    v58[0] = v24[2];
    sub_1000537F4((uint64_t)v58);
    v59[0] = v24[3];
    sub_1000537F4((uint64_t)v59);
    sub_1000536BC(v24[4]);

    uint64_t v25 = type metadata accessor for ShowLockupStyle();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a2, v25);
    return 0;
  }
  return v26;
}

uint64_t sub_1001D4710(void *a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F91C8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ShowLockupStyle.LockupStyleOptions();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowLockupStyle.title.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100054B1C((uint64_t)v4, &qword_1005F91C8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v9 = MTPodcast.lockupString(with:)((uint64_t)v8);
    if (v9[2])
    {
      uint64_t v10 = v9[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v10;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  id v11 = [a1 title];
  if (!v11) {
    return 0;
  }
  uint64_t v12 = v11;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v10;
}

id sub_1001D4918(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v112 = a5;
  uint64_t v98 = a4;
  uint64_t v97 = a3;
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F88A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v9 - 8);
  unint64_t v114 = (char *)v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActionMetrics();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  v94[1] = (char *)v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v94[2] = (char *)v94 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::String v96 = (char *)v94 - v17;
  __chkstk_darwin(v16);
  uint64_t v104 = (char *)v94 - v18;
  uint64_t v113 = type metadata accessor for FlowDestinationPageHeader();
  uint64_t v111 = *(void *)(v113 - 8);
  uint64_t v19 = __chkstk_darwin(v113);
  v94[0] = (char *)v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v103 = (char *)v94 - v22;
  __chkstk_darwin(v21);
  uint64_t v107 = (char *)v94 - v23;
  uint64_t v110 = type metadata accessor for FlowPresentationContext();
  uint64_t v109 = *(void *)(v110 - 8);
  uint64_t v24 = __chkstk_darwin(v110);
  uint64_t v101 = (char *)v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v102 = (char *)v94 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  Swift::String v95 = (char *)v94 - v29;
  __chkstk_darwin(v28);
  id v31 = (char *)v94 - v30;
  uint64_t v115 = type metadata accessor for FlowDestination();
  uint64_t v116 = *(void *)(v115 - 8);
  uint64_t v32 = __chkstk_darwin(v115);
  unint64_t v99 = (void *)((char *)v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)v94 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v105 = (char *)v94 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v106 = (char *)v94 - v40;
  __chkstk_darwin(v39);
  uint64_t v42 = (void *)((char *)v94 - v41);
  uint64_t v43 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v44 = __chkstk_darwin(v43 - 8);
  uint64_t v100 = (char *)v94 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  id v48 = (char *)v94 - v47;
  uint64_t v49 = __chkstk_darwin(v46);
  uint64_t v51 = (char *)v94 - v50;
  uint64_t v52 = __chkstk_darwin(v49);
  long long v54 = (char *)v94 - v53;
  __chkstk_darwin(v52);
  unint64_t v56 = (char *)v94 - v55;
  [a1 storeCollectionId];
  uint64_t v108 = AdamID.init(rawValue:)();
  if ([a1 isHiddenOrImplicitlyFollowed])
  {
    [a1 lastUnfollowedDate];
    if (v57 > 0.0)
    {
      id v58 = [a1 bestAvailableStoreCleanURL];
      if (v58)
      {
        Swift::String v59 = v58;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v60 = type metadata accessor for URL();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v54, 0, 1, v60);
      }
      else
      {
        uint64_t v79 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v54, 1, 1, v79);
      }
      uint64_t v80 = v115;
      uint64_t v81 = v116;
      sub_100053820((uint64_t)v54, (uint64_t)v56, (uint64_t *)&unk_1005F7750);
      uint64_t v82 = (uint64_t)v42 + *(int *)(sub_100054B78(&qword_1005F88B8) + 48);
      *uint64_t v42 = 0;
      sub_10003B19C((uint64_t)v56, v82);
      (*(void (**)(void *, void, uint64_t))(v81 + 104))(v42, enum case for FlowDestination.page(_:), v80);
      (*(void (**)(char *, void, uint64_t))(v109 + 104))(v31, enum case for FlowPresentationContext.pushDetail(_:), v110);
      (*(void (**)(char *, void, uint64_t))(v111 + 104))(v107, enum case for FlowDestinationPageHeader.uber(_:), v113);
      uint64_t v120 = v108;
      sub_1001A5874();
      BinaryInteger.description.getter();
      static MetricsTargetType.lockup.getter();
      sub_100054B78((uint64_t *)&unk_1006027F0);
      type metadata accessor for MetricsData();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
      static MetricsActionType.navigate.getter();
      static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
      swift_bridgeObjectRelease();
      ScalarDictionary.init()();
      ActionMetrics.init(data:custom:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned __int8 v83 = static Link.Presentation.textFollowsTintColor.getter();
      unsigned __int8 v84 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      Link.Presentation.init(rawValue:)();
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v83) {
        Link.Presentation.init(rawValue:)();
      }
      Link.Presentation.init(rawValue:)();
      if (Link.Presentation.init(rawValue:)() != v84) {
        Link.Presentation.init(rawValue:)();
      }
      type metadata accessor for FlowAction();
      swift_allocObject();
      id v61 = (id)FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
      sub_100054B1C((uint64_t)v56, (uint64_t *)&unk_1005F7750);
      return v61;
    }
  }
  ShowLockupStyle.groupedEpisodesListType.getter();
  sub_100053820((uint64_t)v118, (uint64_t)v119, (uint64_t *)&unk_100606170);
  if (v119[64] != 255)
  {
    sub_1001A5FC8((uint64_t)v119, (uint64_t)&v120);
    id v61 = [a1 uuid];
    if (!v61)
    {
      sub_1001D6200((uint64_t)v118);
      return v61;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    EpisodeListType.groupedFlowDestination(podcastUUID:)();
    swift_bridgeObjectRelease();
    uint64_t v62 = v116;
    uint64_t v63 = v115;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v8, 1, v115) == 1)
    {
      sub_1001D6200((uint64_t)v118);
      sub_100054B1C((uint64_t)v8, (uint64_t *)&unk_1005F88A0);
      return 0;
    }
    uint64_t v73 = v106;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v106, v8, v63);
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v105, v73, v63);
    uint64_t v117 = v108;
    sub_1001A5874();
    BinaryInteger.description.getter();
    static MetricsTargetType.lockup.getter();
    id v74 = [a1 uuid];
    if (v74)
    {
      uint64_t v75 = v74;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      URL.init(string:)();
      swift_bridgeObjectRelease();
      uint64_t v76 = type metadata accessor for URL();
      uint64_t v77 = *(void *)(v76 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v48, 1, v76) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v51, v48, v76);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v51, 0, 1, v76);
        goto LABEL_35;
      }
      sub_100054B1C((uint64_t)v48, (uint64_t *)&unk_1005F7750);
    }
    uint64_t v78 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v51, 1, 1, v78);
LABEL_35:
    sub_100054B78((uint64_t *)&unk_1006027F0);
    type metadata accessor for MetricsData();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    static MetricsActionType.navigate.getter();
    static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
    swift_bridgeObjectRelease();
    ScalarDictionary.init()();
    ActionMetrics.init(data:custom:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100054B1C((uint64_t)v51, (uint64_t *)&unk_1005F7750);
    (*(void (**)(char *, void, uint64_t))(v109 + 104))(v95, enum case for FlowPresentationContext.infer(_:), v110);
    unsigned __int8 v91 = static Link.Presentation.textFollowsTintColor.getter();
    unsigned __int8 v92 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
    Link.Presentation.init(rawValue:)();
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v91) {
      Link.Presentation.init(rawValue:)();
    }
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v92) {
      Link.Presentation.init(rawValue:)();
    }
    (*(void (**)(char *, void, uint64_t))(v111 + 104))(v103, enum case for FlowDestinationPageHeader.standard(_:), v113);
    type metadata accessor for FlowAction();
    swift_allocObject();
    swift_bridgeObjectRetain();
    id v61 = (id)FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
    sub_1001D6200((uint64_t)v118);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v106, v63);
    return v61;
  }
  type metadata accessor for PodcastDetail();
  id v64 = a1;
  uint64_t v65 = sub_10022B704(v64, 0, 0, 0, 1);
  if (!v65) {
    return 0;
  }
  uint64_t v66 = v65;
  sub_1001D6264();
  int v67 = static UITraitCollection.interfaceIdiomIsMac.getter() & 1;
  unsigned __int8 v68 = [v64 subscribed];
  LODWORD(v107) = v67;
  if (v68)
  {
    *unint64_t v99 = v66;
    (*(void (**)(void))(v116 + 104))();
    (*(void (**)(char *, void, uint64_t))(v109 + 104))(v101, enum case for FlowPresentationContext.push(_:), v110);
    (*(void (**)(void, void, uint64_t))(v111 + 104))(v94[0], enum case for FlowDestinationPageHeader.uber(_:), v113);
    uint64_t v120 = v108;
    sub_1001A5874();
    swift_retain();
    BinaryInteger.description.getter();
    static MetricsTargetType.lockup.getter();
    uint64_t v69 = type metadata accessor for URL();
    uint64_t v70 = (uint64_t)v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v100, 1, 1, v69);
    sub_100054B78((uint64_t *)&unk_1006027F0);
    type metadata accessor for MetricsData();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    static MetricsActionType.navigate.getter();
    static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
    swift_bridgeObjectRelease();
    ScalarDictionary.init()();
    ActionMetrics.init(data:custom:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100054B1C(v70, (uint64_t *)&unk_1005F7750);
    unsigned __int8 v71 = static Link.Presentation.textFollowsTintColor.getter();
    unsigned __int8 v72 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
    Link.Presentation.init(rawValue:)();
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v71) {
      Link.Presentation.init(rawValue:)();
    }
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v72) {
      Link.Presentation.init(rawValue:)();
    }
    type metadata accessor for FlowAction();
    swift_allocObject();
  }
  else
  {
    swift_retain();
    uint64_t v85 = Podcast.uuid.getter();
    uint64_t v87 = v86;
    swift_release();
    *(void *)uint64_t v36 = v85;
    *((void *)v36 + 1) = v87;
    *((_OWORD *)v36 + 1) = 0u;
    *((_OWORD *)v36 + 2) = 0u;
    *((_OWORD *)v36 + 3) = 0u;
    v36[64] = 8;
    (*(void (**)(char *, void, uint64_t))(v116 + 104))(v36, enum case for FlowDestination.episodeList(_:), v115);
    (*(void (**)(char *, void, uint64_t))(v109 + 104))(v102, enum case for FlowPresentationContext.push(_:), v110);
    uint64_t v120 = v108;
    sub_1001A5874();
    BinaryInteger.description.getter();
    static MetricsTargetType.lockup.getter();
    swift_retain();
    Podcast.uuid.getter();
    swift_release();
    uint64_t v88 = (uint64_t)v100;
    URL.init(string:)();
    swift_bridgeObjectRelease();
    sub_100054B78((uint64_t *)&unk_1006027F0);
    type metadata accessor for MetricsData();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    static MetricsActionType.navigate.getter();
    static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)();
    swift_bridgeObjectRelease();
    ScalarDictionary.init()();
    ActionMetrics.init(data:custom:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100054B1C(v88, (uint64_t *)&unk_1005F7750);
    unsigned __int8 v89 = static Link.Presentation.textFollowsTintColor.getter();
    unsigned __int8 v90 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
    Link.Presentation.init(rawValue:)();
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v89) {
      Link.Presentation.init(rawValue:)();
    }
    Link.Presentation.init(rawValue:)();
    if (Link.Presentation.init(rawValue:)() != v90) {
      Link.Presentation.init(rawValue:)();
    }
    (*(void (**)(char *, void, uint64_t))(v111 + 104))(v103, enum case for FlowDestinationPageHeader.standard(_:), v113);
    type metadata accessor for FlowAction();
    swift_allocObject();
  }
  id v61 = (id)FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)();
  swift_release();
  return v61;
}

uint64_t sub_1001D5E3C(void *a1)
{
  uint64_t v2 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100054B78((uint64_t *)&unk_1005FEA40);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [a1 smartPlayEpisode];
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  id v8 = [v6 uuid];
  if (!v8)
  {

    return 0;
  }
  uint64_t v9 = v8;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  MTEpisode.contentId.getter();
  uint64_t v10 = type metadata accessor for EpisodeListSettings();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  [v7 storeTrackId];
  AdamID.init(rawValue:)();
  static MetricsTargetType.button.getter();
  static ActionMetrics.play(adamID:targetType:fields:configuration:)();
  swift_bridgeObjectRelease();
  type metadata accessor for LibraryPlayAction();
  swift_allocObject();
  uint64_t v11 = LibraryPlayAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:title:timestamp:actionMetrics:)();

  return v11;
}

id sub_1001D6078(void *a1)
{
  id result = [a1 uuid];
  if (result)
  {
    uint64_t v2 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    ShowLockupStyle.groupedEpisodesListType.getter();
    sub_100053820((uint64_t)v3, (uint64_t)v6, (uint64_t *)&unk_100606170);
    if (v6[64] == 255
      || (sub_1001A5FC8((uint64_t)v6, (uint64_t)v7),
          EpisodeListType.singleShowListType(showUuid:)(),
          sub_1001D6200((uint64_t)v3),
          sub_100053820((uint64_t)v4, (uint64_t)v5, (uint64_t *)&unk_100606170),
          v5[64] == 255))
    {
      memset(v8, 0, 64);
      v8[64] = -1;
    }
    else
    {
      sub_1001A5FC8((uint64_t)v5, (uint64_t)v8);
    }
    type metadata accessor for LibraryPodcastContextAction();
    swift_allocObject();
    return (id)LibraryPodcastContextAction.init(podcastUuid:groupedEpisodeListType:)();
  }
  return result;
}

unint64_t sub_1001D61A8()
{
  unint64_t result = qword_1005F8290;
  if (!qword_1005F8290)
  {
    type metadata accessor for Action();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F8290);
  }
  return result;
}

uint64_t sub_1001D6200(uint64_t a1)
{
  return a1;
}

void sub_1001D624C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 != 255) {
    sub_100053720(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
}

unint64_t sub_1001D6264()
{
  unint64_t result = qword_100603DE0;
  if (!qword_100603DE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100603DE0);
  }
  return result;
}

void sub_1001D62A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
  sub_100054B78(&qword_1005F7720);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10046D010;
  id v7 = [self shared];
  id v8 = [v7 mainAppContext];

  id v9 = [v8 objectID];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_10004DA4C();
  *(void *)(v6 + 32) = v10;
  *(void *)(v6 + 40) = v12;
  id v19 = (id)NSPredicate.init(format:_:)();
  sub_10004D29C(0, (unint64_t *)&unk_1005F91D0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v14 = [self queryWithObjectType:ObjCClassFromMetadata predicate:v19];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a1;
    *(void *)(v16 + 24) = a2;
    aBlock[4] = sub_1001D66AC;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001D66B4;
    uint64_t aBlock[3] = &unk_1005581E8;
    uint64_t v17 = _Block_copy(aBlock);
    id v18 = v15;
    swift_retain();
    swift_release();
    [v18 setCompletion:v17];
    _Block_release(v17);
    [v3 executeQuery:v18];
  }
  else
  {
  }
}

uint64_t sub_1001D6538(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  if (!a1)
  {
    uint64_t v6 = 0;
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (!v5)
  {
LABEL_7:
    a3(v6, a2);
    return swift_bridgeObjectRelease();
  }
  uint64_t v11 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v7 = a1 + 32;
  do
  {
    sub_10004D328(v7, (uint64_t)v10);
    sub_10004D29C(0, (unint64_t *)&unk_1005F91D0);
    swift_dynamicCast();
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    v7 += 32;
    --v5;
  }
  while (v5);
  a3(v11, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001D6674()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001D66AC(uint64_t a1, uint64_t a2)
{
  return sub_1001D6538(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1001D66B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001D6750()
{
  return swift_deallocClassInstance();
}

void sub_1001D6788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a2;
  uint64_t v6 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin();
  id v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [*(id *)(v3 + 16) newBackgroundContext];
  id v10 = [self sharedInstance];
  id v11 = [v10 privateQueueContext];

  sub_1001D89BC(a1, (uint64_t)v8);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v13 = (v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  sub_1001D8788((uint64_t)v8, v15 + v12, type metadata accessor for DownloadJob);
  *(void *)(v15 + v13) = v11;
  *(void *)(v15 + v14) = v9;
  uint64_t v16 = (void *)(v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v16 = v21;
  v16[1] = a3;
  aBlock[4] = sub_1001D8CC4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_1005582C8;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  id v18 = v11;
  id v19 = v9;
  swift_retain();
  swift_release();
  [v18 performBlock:v17];
  _Block_release(v17);
}

void sub_1001D69D4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a5;
  uint64_t v11 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin();
  unint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [a3 episodeForUuid:v14];

  uint64_t v30 = a4;
  if (!v15) {
    goto LABEL_5;
  }
  id v16 = [v15 assetURL];
  if (!v16)
  {

LABEL_5:
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    goto LABEL_6;
  }
  uint64_t v17 = v16;
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

LABEL_6:
  sub_1001D89BC(a2, (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v21 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v18;
  *(void *)(v24 + 24) = v20;
  sub_1001D8788((uint64_t)v13, v24 + v21, type metadata accessor for DownloadJob);
  uint64_t v25 = (void *)(v24 + v22);
  *uint64_t v25 = v29;
  v25[1] = a6;
  *(void *)(v24 + v23) = a1;
  uint64_t v26 = v30;
  *(void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8)) = v30;
  aBlock[4] = sub_1001D9014;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100558318;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v28 = v26;
  swift_release();
  [v28 performBlock:v27];
  _Block_release(v27);
}

uint64_t sub_1001D6C54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v61 = a1;
  uint64_t v58 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v58 - 8);
  __chkstk_darwin();
  NSString v14 = &v55[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v63 = sub_100054B78(&qword_1005F93C0);
  __chkstk_darwin();
  uint64_t v62 = (uint64_t *)&v55[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for DownloadJob(0);
  __chkstk_darwin();
  uint64_t v18 = &v55[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v20 = &v55[-v19];
  if (a2)
  {
    uint64_t v60 = a5;
    swift_bridgeObjectRetain();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    unint64_t v22 = static OS_os_log.downloads.getter();
    sub_1001D89BC(a3, (uint64_t)v20);
    os_log_type_t v23 = v21;
    if (os_log_type_enabled(v22, v21))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      id v65 = (id)swift_slowAlloc();
      Swift::String v59 = a4;
      *(_DWORD *)uint64_t v24 = 136315138;
      sub_100055B68(&qword_1005F93C8, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v64 = sub_10004B974(v25, v26, (uint64_t *)&v65);
      a4 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001D92EC((uint64_t)v20);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Download job %s is for an episode that is already downloaded. This is invalid, so the job will not be saved.", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_1001D92EC((uint64_t)v20);
    }
    id v28 = v62;
    uint64_t *v62 = v61;
    v28[1] = a2;
    type metadata accessor for JobStorageError();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    a4(v28);
  }
  else
  {
    double v57 = v14;
    uint64_t v61 = v12;
    Swift::String v59 = a4;
    sub_1001D90C0(a3);
    uint64_t v30 = v27;
    uint64_t v60 = a5;
    if (v27)
    {
      os_log_type_t v31 = static os_log_type_t.info.getter();
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v32 = static OS_os_log.downloads.getter();
      sub_1001D89BC(a3, (uint64_t)v18);
      int v33 = v31;
      BOOL v34 = os_log_type_enabled(v32, v31);
      id v35 = v30;
      if (v34)
      {
        uint64_t v36 = swift_slowAlloc();
        id v65 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 136315394;
        uint64_t v37 = (uint64_t *)&v18[*(int *)(v16 + 20)];
        int v56 = v33;
        uint64_t v38 = *v37;
        unint64_t v39 = v37[1];
        swift_bridgeObjectRetain();
        uint64_t v64 = sub_10004B974(v38, v39, (uint64_t *)&v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001D92EC((uint64_t)v18);
        *(_WORD *)(v36 + 12) = 2080;
        id v40 = [v35 id];
        uint64_t v41 = v57;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100055B68(&qword_1005F93C8, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v42 = v58;
        uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v45 = v44;
        (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v41, v42);
        uint64_t v64 = sub_10004B974(v43, v45, (uint64_t *)&v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v56, "Found existing download job for episode %s, id: %s", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_1001D92EC((uint64_t)v18);
      }
      uint64_t v51 = (void (*)(uint64_t *))v59;
      id v28 = v62;
      id v52 = v35;
      sub_1001D73B0(v52, (uint64_t)v28);
      type metadata accessor for JobStorageError();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      v51(v28);
    }
    else
    {
      type metadata accessor for CDDownloadJob();
      id v46 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:a7];
      sub_1001D7924(a3);

      id v65 = 0;
      unsigned __int8 v47 = [a7 save:&v65];
      id v48 = v65;
      if (v47)
      {
        uint64_t v49 = a3;
        id v28 = v62;
        sub_1001D89BC(v49, (uint64_t)v62);
        swift_storeEnumTagMultiPayload();
        id v50 = v48;
        v59(v28);
      }
      else
      {
        id v53 = v65;
        uint64_t v54 = _convertNSErrorToError(_:)();

        swift_willThrow();
        id v28 = v62;
        uint64_t *v62 = v54;
        type metadata accessor for JobStorageError();
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        swift_errorRetain();
        v59(v28);
        swift_errorRelease();
      }
    }
  }
  return sub_100054B1C((uint64_t)v28, &qword_1005F93C0);
}

uint64_t sub_1001D73B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for URL();
  uint64_t v64 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  id v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (int *)type metadata accessor for EpisodeMetadata(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = v12;
  __chkstk_darwin(v12);
  NSString v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [a1 id];
  unsigned __int8 v68 = v14;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = [a1 episodeUuid];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v65 = v18;
  uint64_t v66 = v17;

  uint64_t v19 = sub_1001D81D8();
  uint64_t v61 = v20;
  uint64_t v62 = v19;
  int v59 = v21;
  id v60 = [a1 taskIdentifier];
  id v22 = [a1 url];
  uint64_t v63 = v8;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  id v23 = [a1 type];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  v27._uint64_t countAndFlagsBits = v24;
  v27._unint64_t object = v26;
  Swift::Int v58 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100554290, v27);
  swift_bridgeObjectRelease();
  id v28 = [a1 guid];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v56 = v31;
    uint64_t v57 = v30;
  }
  else
  {
    uint64_t v56 = 0;
    uint64_t v57 = 0;
  }
  id v32 = [a1 adamId];
  if (v32) {
    id v55 = [a1 adamId];
  }
  else {
    id v55 = 0;
  }
  id v33 = [a1 podcastAdamId:v55];
  if (v33) {
    id v34 = [a1 podcastAdamId];
  }
  else {
    id v34 = 0;
  }
  id v35 = [a1 lastCacheDeletePurge];
  if (v35)
  {
    uint64_t v36 = v35;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v37 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v6, 0, 1, v37);
  }
  else
  {
    uint64_t v38 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v6, 1, 1, v38);
  }
  uint64_t v39 = (uint64_t)v6;
  BOOL v40 = v33 == 0;
  BOOL v41 = v32 == 0;
  BOOL v42 = v58 == 1;
  char v43 = v59 & 1;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v11[v9[11]], v63, v67);
  v11[v9[12]] = v42;
  unint64_t v44 = &v11[v9[13]];
  *(void *)unint64_t v44 = 0;
  v44[8] = 1;
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  uint64_t v45 = v56;
  *((void *)v11 + 2) = v57;
  *((void *)v11 + 3) = v45;
  *((void *)v11 + 4) = v55;
  v11[40] = v41;
  *((void *)v11 + 6) = v34;
  v11[56] = v40;
  *((_OWORD *)v11 + 5) = 0u;
  *((_OWORD *)v11 + 6) = 0u;
  *((_OWORD *)v11 + 4) = 0u;
  id v46 = &v11[v9[14]];
  *(void *)id v46 = 0;
  v46[8] = 1;
  sub_100053820(v39, (uint64_t)&v11[v9[15]], &qword_1005F5D20);
  id v47 = [a1 creationDate];
  id v48 = (int *)type metadata accessor for DownloadJob(0);
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(a2, v68, v70);
  uint64_t result = sub_1001D8788((uint64_t)v11, a2 + v48[9], type metadata accessor for EpisodeMetadata);
  *(void *)(a2 + v48[7]) = v60;
  uint64_t v50 = a2 + v48[8];
  uint64_t v51 = v61;
  *(void *)uint64_t v50 = v62;
  *(void *)(v50 + 8) = v51;
  *(unsigned char *)(v50 + 16) = v43;
  id v52 = (uint64_t *)(a2 + v48[5]);
  uint64_t v53 = v65;
  *id v52 = v66;
  v52[1] = v53;
  uint64_t v54 = a2 + v48[10];
  *(void *)uint64_t v54 = 0;
  *(void *)(v54 + 8) = 0;
  *(void *)(v54 + 16) = 0;
  *(void *)(v54 + 24) = 1;
  *(void *)(v54 + 32) = 0;
  *(void *)(v54 + 40) = 0;
  *(_WORD *)(v54 + 48) = 0;
  return result;
}

void sub_1001D7924(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100054B78(&qword_1005F5D20);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v2 setId:isa];

  uint64_t v7 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v8 = a1 + v7[8];
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  char v11 = *(unsigned char *)(v8 + 16);
  swift_bridgeObjectRetain();
  sub_1001D8588(v9, v10, v11);
  uint64_t v12 = a1 + v7[9];
  uint64_t v13 = type metadata accessor for EpisodeMetadata(0);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setType:v14];

  NSString v15 = String._bridgeToObjectiveC()();
  [v2 setEpisodeUuid:v15];

  Class v16 = Date._bridgeToObjectiveC()().super.isa;
  [v2 setCreationDate:v16];

  [v2 setTaskIdentifier:*(void *)(a1 + v7[7])];
  URL._bridgeToObjectiveC()((NSURL *)*(int *)(v13 + 44));
  uint64_t v18 = v17;
  [v2 setUrl:v17];

  if (*(void *)(v12 + 24)) {
    NSString v19 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v19 = 0;
  }
  [v2 setGuid:v19];

  sub_100054BBC(v12 + *(int *)(v13 + 60), (uint64_t)v5, &qword_1005F5D20);
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v20 - 8);
  Class v22 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v5, 1, v20) != 1)
  {
    Class v22 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
  }
  [v2 setLastCacheDeletePurge:v22];
}

void sub_1001D7BF0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  id v11 = [*(id *)(v4 + 16) newBackgroundContext];
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  unint64_t v14 = v13 + ((v12 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v14 = v11;
  *(unsigned char *)(v14 + 8) = a2;
  NSString v15 = (void *)(v13 + ((v12 + v10 + 23) & 0xFFFFFFFFFFFFFFF8));
  *NSString v15 = v19;
  v15[1] = a4;
  aBlock[4] = sub_1001D88B0;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  uint64_t aBlock[3] = &unk_100558278;
  Class v16 = _Block_copy(aBlock);
  id v17 = v11;
  swift_retain();
  swift_release();
  [v17 performBlock:v16];
  _Block_release(v16);
}

uint64_t sub_1001D7DFC(uint64_t a1, void *a2, char a3, void (*a4)(uint64_t *))
{
  uint64_t v7 = sub_100054B78(&qword_1005F93A8);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v28[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v10 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 initWithEntityName:v11];

  sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
  sub_100054B78(&qword_1005F7720);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10046D030;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_10004DA4C();
  *(void *)(v13 + 32) = 25705;
  *(void *)(v13 + 40) = 0xE200000000000000;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  *(void *)(v13 + 96) = sub_10004D29C(0, &qword_1005F93B0);
  *(void *)(v13 + 104) = sub_1001D8954();
  *(void *)(v13 + 72) = isa;
  NSString v15 = NSPredicate.init(format:_:)();
  [v12 setPredicate:v15];

  type metadata accessor for CDDownloadJob();
  unint64_t v16 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v17 = v16;
  if (!(v16 >> 62))
  {
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    if (a3)
    {
      type metadata accessor for JobStorageError();
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
    a4(v9);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v17 & 0xC000000000000001) != 0)
  {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v18 = *(id *)(v17 + 32);
  }
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  [a2 deleteObject:v19];
  v28[0] = 0;
  unsigned int v20 = [a2 save:v28];
  id v21 = v28[0];
  if (v20)
  {
    swift_storeEnumTagMultiPayload();
    id v22 = v21;
    a4(v9);

LABEL_13:
    return sub_100054B1C((uint64_t)v9, &qword_1005F93A8);
  }
  id v23 = v28[0];
  uint64_t v24 = _convertNSErrorToError(_:)();

  swift_willThrow();
  *uint64_t v9 = v24;
  type metadata accessor for JobStorageError();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  a4(v9);

  swift_errorRelease();
  return sub_100054B1C((uint64_t)v9, &qword_1005F93A8);
}

uint64_t sub_1001D81D8()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v0 primitiveValueForKey:v5];

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v29, 0, sizeof(v29));
  }
  sub_100053820((uint64_t)v29, (uint64_t)v30, &qword_1005F5D30);
  if (!v30[3])
  {
    sub_100054B1C((uint64_t)v30, &qword_1005F5D30);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    goto LABEL_10;
  }
  uint64_t v8 = v27;
  uint64_t v7 = v28;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_100175204();
  if (v10)
  {
    uint64_t v11 = v9;
    swift_bridgeObjectRelease();
    return v11;
  }
LABEL_10:
  strcpy((char *)v30, "malformed.id.");
  HIWORD(v30[1]) = -4864;
  if (v7) {
    uint64_t v12 = v8;
  }
  else {
    uint64_t v12 = 1819047278;
  }
  if (v7) {
    uint64_t v13 = v7;
  }
  else {
    uint64_t v13 = (void *)0xE400000000000000;
  }
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = v12;
  v14._unint64_t object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  uint64_t v11 = v30[0];
  uint64_t v15 = v30[1];
  static Logger.downloads.getter();
  swift_bridgeObjectRetain();
  unint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v26 = v11;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v24 = v1;
    uint64_t v19 = (uint8_t *)v18;
    *(void *)&v29[0] = swift_slowAlloc();
    uint64_t v25 = v15;
    *(_DWORD *)uint64_t v19 = 136315138;
    v30[0] = v8;
    v30[1] = v7;
    swift_bridgeObjectRetain();
    sub_100054B78(&qword_1005F93A0);
    uint64_t v20 = String.init<A>(describing:)();
    v30[0] = sub_10004B974(v20, v21, (uint64_t *)v29);
    uint64_t v11 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "CDDownloadJob found with invalid session identifier string: '%s'", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v11;
}

void sub_1001D8588(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  NSString v6 = String._bridgeToObjectiveC()();
  [v4 willChangeValueForKey:v6];

  if (a3) {
    uint64_t v7 = 1936484398;
  }
  else {
    uint64_t v7 = 0x7261646E6174732ELL;
  }
  if (a3) {
    uint64_t v8 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v8 = (void *)0xE900000000000064;
  }
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v7;
  v9._unint64_t object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  [v4 setPrimitiveValue:v10 forKey:v11];

  id v12 = String._bridgeToObjectiveC()();
  [v4 didChangeValueForKey:v12];
}

id sub_1001D874C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CDDownloadJob();
  return [super dealloc];
}

uint64_t sub_1001D8788(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001D87F0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (v3 + *(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001D88B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  unint64_t v4 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void **)(v0 + v4);
  char v6 = *(unsigned char *)(v0 + v4 + 8);
  uint64_t v7 = *(void (**)(uint64_t *))(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_1001D7DFC(v0 + v2, v5, v6, v7);
}

unint64_t sub_1001D8954()
{
  unint64_t result = qword_1005F93B8;
  if (!qword_1005F93B8)
  {
    sub_10004D29C(255, &qword_1005F93B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F93B8);
  }
  return result;
}

uint64_t sub_1001D89BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadJob(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D8A20()
{
  uint64_t v1 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v17 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v3 = v0 + ((v2 + 24) & ~v2);
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v1[6];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v10 = v8 + *(int *)(v9 + 44);
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v8 + *(int *)(v9 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6)) {
    v16(v12, v6);
  }
  if ((unint64_t)(*(void *)(v3 + v1[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }
  unint64_t v13 = (v17 + ((v2 + 24) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();

  return swift_deallocObject();
}

void sub_1001D8CC4()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + v3);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = *(void **)(v0 + v4);
  uint64_t v9 = (uint64_t *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  sub_1001D69D4(v5, v7, v6, v8, v10, v11);
}

uint64_t sub_1001D8D70()
{
  uint64_t v1 = (int *)type metadata accessor for DownloadJob(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v15 = *(void *)(*((void *)v1 - 1) + 64);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2);
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v1[6];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v14(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for EpisodeMetadata(0);
  uint64_t v10 = v8 + *(int *)(v9 + 44);
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v8 + *(int *)(v9 + 60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6)) {
    v14(v12, v6);
  }
  if ((unint64_t)(*(void *)(v3 + v1[10] + 24) - 1) >= 4) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + ((((((v15 + ((v2 + 32) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

uint64_t sub_1001D9014()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadJob(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void (**)(void))(v0 + v3);
  uint64_t v8 = *(void *)(v0 + v3 + 8);
  uint64_t v9 = *(void *)(v0 + v4);
  uint64_t v10 = *(void **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1001D6C54(v5, v6, v0 + v2, v7, v8, v9, v10);
}

void sub_1001D90C0(uint64_t a1)
{
  type metadata accessor for CDDownloadJob();
  id v3 = [(id)swift_getObjCClassFromMetadata() fetchRequest];
  unint64_t v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DownloadJob(0) + 20));
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
  sub_100054B78(&qword_1005F7720);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10046D030;
  *(void *)(v7 + 56) = &type metadata for String;
  unint64_t v8 = sub_10004DA4C();
  *(void *)(v7 + 32) = 0x5565646F73697065;
  *(void *)(v7 + 40) = 0xEB00000000646975;
  *(void *)(v7 + 96) = &type metadata for String;
  *(void *)(v7 + 104) = v8;
  *(void *)(v7 + 64) = v8;
  *(void *)(v7 + 72) = v6;
  *(void *)(v7 + 80) = v5;
  swift_bridgeObjectRetain();
  uint64_t v9 = NSPredicate.init(format:_:)();
  [v3 setPredicate:v9];

  sub_100054B78((uint64_t *)&unk_1005F9430);
  unint64_t v10 = NSManagedObjectContext.fetch<A>(_:)();
  if (v1)
  {

    return;
  }
  unint64_t v11 = v10;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_5;
    }
LABEL_11:
    swift_bridgeObjectRelease();

    return;
  }
  if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_11;
  }
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();

  if (!swift_dynamicCastClass()) {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1001D92EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadJob(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001D9358(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    if (!v8) {
      return (uint64_t)v9;
    }
    uint64_t v15 = _swiftEmptyArrayStorage;
    uint64_t result = sub_1001BA5BC(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    v14[0] = v2;
    uint64_t v11 = 0;
    uint64_t v9 = v15;
    while (v8 != v11)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v12 = *(void *)(a1 + 8 * v11 + 32);
        swift_retain();
      }
      swift_getKeyPath();
      v14[1] = v12;
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      swift_release_n();
      uint64_t v15 = v9;
      unint64_t v2 = v9[2];
      unint64_t v13 = v9[3];
      if (v2 >= v13 >> 1)
      {
        sub_1001BA5BC(v13 > 1, v2 + 1, 1);
        uint64_t v9 = v15;
      }
      ++v11;
      v9[2] = v2 + 1;
      sub_1001DD7D4((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v2);
      if (v8 == v11) {
        return (uint64_t)v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_1001D9574(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_1001BA4A8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      id v7 = [v5 episodeStoreId];

      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_1001BA4A8(v8 > 1, v9 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      _swiftEmptyArrayStorage[v9 + 4] = v7;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_1001D96D8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1001BA5F8(0, v2, 0);
    uint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v5 = v6;
      unint64_t v10 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_1001BA5F8(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      result[2] = v8 + 1;
      unint64_t v9 = &result[3 * v8];
      id v9[4] = v5;
      v9[5] = 0;
      *((unsigned char *)v9 + 48) = 0;
      --v2;
    }
    while (v2);
  }
  return result;
}

id sub_1001D97A8()
{
  unint64_t v1 = *(void **)(v0 + 136);
  id v2 = v1;
  if (v1 == (void *)1)
  {
    if (static Podcasts.isBlueMoonEnabled()()) {
      id v2 = 0;
    }
    else {
      id v2 = [self defaultInstance];
    }
    id v3 = *(void **)(v0 + 136);
    *(void *)(v0 + 136) = v2;
    id v4 = v2;
    sub_1001DD914(v3);
  }
  sub_1001DD924(v1);
  return v2;
}

uint64_t sub_1001D9830()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1) {
    return 0;
  }
  swift_retain();
  if (sub_100400E80())
  {
    swift_release();
    return 0;
  }
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      char v8 = *(unsigned char *)(v0 + 32);
      uint64_t v9 = swift_bridgeObjectRetain();
      char v10 = sub_1001D9DCC(v9, v8);
      uint64_t v11 = v3;
      uint64_t v12 = v4;
      unsigned __int8 v13 = 1;
      goto LABEL_10;
    case 2:
      int v14 = *(unsigned __int8 *)(v0 + 32);
      unint64_t v15 = swift_bridgeObjectRetain();
      char v10 = sub_1001DA064(v15, v14);
      uint64_t v11 = v3;
      uint64_t v12 = v4;
      unsigned __int8 v13 = 2;
      goto LABEL_10;
    case 3:
      int v16 = *(unsigned __int8 *)(v0 + 32);
      unint64_t v17 = swift_bridgeObjectRetain();
      char v10 = sub_1001DA33C(v17, v16);
      uint64_t v11 = v3;
      uint64_t v12 = v4;
      unsigned __int8 v13 = 3;
LABEL_10:
      sub_1001DCDF8(v11, v12, v13);
      swift_release();
      uint64_t result = v10 & 1;
      break;
    default:
      swift_bridgeObjectRetain();
      id v5 = [self sharedInstance];
      id v6 = [v5 mainOrPrivateContext];

      __chkstk_darwin(v7);
      NSManagedObjectContext.performAndWait<A>(_:)();
      swift_release();
      swift_bridgeObjectRelease();

      uint64_t result = v18;
      break;
  }
  return result;
}

uint64_t sub_1001D9A20@<X0>(uint64_t result@<X0>, void *a2@<X1>, char a3@<W2>, char *a4@<X8>)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v7 = result;
    int v14 = a4;
    swift_bridgeObjectRetain_n();
    id v8 = a2;
    uint64_t v9 = v7 + 40;
    do
    {
      swift_bridgeObjectRetain();
      NSString v10 = String._bridgeToObjectiveC()();
      id v11 = [v8 episodeForUuid:v10];
      swift_bridgeObjectRelease();

      if (v11)
      {
        unsigned __int8 v12 = [v11 isVisuallyPlayed];

        if (v12)
        {
          if (a3) {
            goto LABEL_8;
          }
        }
        else if ((a3 & 1) == 0)
        {
LABEL_8:
          char v13 = 1;
          goto LABEL_11;
        }
      }
      v9 += 16;
      --v4;
    }
    while (v4);
    char v13 = 0;
LABEL_11:

    uint64_t result = swift_bridgeObjectRelease_n();
    a4 = v14;
  }
  else
  {
    char v13 = 0;
  }
  *a4 = v13;
  return result;
}

uint64_t sub_1001D9B3C(uint64_t (*a1)(uint64_t *), uint64_t a2, void (*a3)(unint64_t *), void (*a4)(unint64_t *))
{
  void (*v20)(uint64_t *__return_ptr, uint64_t *);
  uint64_t (*v22)(uint64_t *);
  void (*v23)(uint64_t *__return_ptr, id *);
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  unint64_t v6 = *v4;
  unint64_t v7 = v4[2];
  id v22 = (uint64_t (*)(uint64_t *))v4[3];
  uint64_t v23 = (void (*)(uint64_t *__return_ptr, id *))v4[1];
  uint64_t v29 = v6;
  uint64_t v20 = (void (*)(uint64_t *__return_ptr, uint64_t *))v4[5];
  if (v6 >> 62) {
    goto LABEL_20;
  }
  uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  a3(&v29);
  swift_retain();
  swift_retain();
  swift_retain();
LABEL_3:
  if (v8)
  {
    unint64_t v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v9 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_19:
          __break(1u);
LABEL_20:
          a3(&v29);
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_3;
        }
        id v10 = *(id *)(v6 + 8 * v9 + 32);
      }
      id v11 = v10;
      unint64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_19;
      }
      uint64_t v13 = v8;
      uint64_t v26 = v10;
      unint64_t v14 = v7;
      v23(&v24, &v26);

      uint64_t v15 = v24;
      uint64_t v16 = v25;
      uint64_t v27 = v24;
      id v28 = v25;
      if (v22(&v27))
      {
        uint64_t v27 = v15;
        id v28 = v16;
        v20(&v24, &v27);
        swift_bridgeObjectRelease();
        uint64_t v27 = v24;
        id v28 = v25;
        char v17 = a1(&v27);
        swift_bridgeObjectRelease();
        if (v5 || (unint64_t v7 = v14, (v17 & 1) != 0))
        {
          a4(&v29);
          swift_release();
          swift_release();
          swift_release();
          return 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v7 = v14;
      }
      ++v9;
      uint64_t v8 = v13;
    }
    while (v12 != v13);
  }
  a4(&v29);
  swift_release();
  swift_release();
  swift_release();
  return 0;
}

uint64_t sub_1001D9DCC(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for EpisodePlayState();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v2 + 32) & 1) == 0)
  {
    unint64_t v9 = (void *)swift_allocObject();
    v9[2] = sub_1001DA054;
    v9[3] = 0;
    id v9[4] = a1;
    v9[5] = sub_1001DA028;
    v9[6] = 0;
    uint64_t v10 = *(void *)(v2 + 40);
    swift_bridgeObjectRetain_n();
    swift_retain();
    unint64_t v11 = sub_1001DD004(a1, (void (*)(uint64_t *__return_ptr, char *))sub_1001DD8A0, (uint64_t)v9, v10);
    swift_release();
    uint64_t v12 = sub_1001D9358(v11);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v14 = v12 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v15 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1001DD65C(v14, (uint64_t)v8);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if ((EnumCaseMultiPayload - 3) < 2 || EnumCaseMultiPayload == 1)
        {
          if ((a2 & 1) == 0) {
            goto LABEL_18;
          }
        }
        else if (EnumCaseMultiPayload == 2)
        {
          sub_1001B6BC4((uint64_t)v8);
          if (a2)
          {
LABEL_18:
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        else
        {
          sub_1001DD6C0((uint64_t)v8);
        }
        v14 += v15;
        if (!--v13)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1001DA028@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EpisodeOffer.contentId.getter();
  *a1 = result;
  return result;
}

void *sub_1001DA054@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_1001DA064(unint64_t a1, int a2)
{
  uint64_t v5 = type metadata accessor for EpisodePlayState();
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + 32)) {
    return 0;
  }
  uint64_t v26 = v6;
  int64_t v10 = sub_1001D9574(a1)[2];
  if (v10)
  {
    v24[0] = v2;
    v24[1] = v5;
    int v25 = a2;
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_1001BA628(0, v10, 0);
    uint64_t v11 = 0;
    uint64_t v12 = v27;
    do
    {
      uint64_t v13 = AdamID.init(rawValue:)();
      uint64_t v27 = v12;
      unint64_t v15 = v12[2];
      unint64_t v14 = v12[3];
      if (v15 >= v14 >> 1)
      {
        sub_1001BA628(v14 > 1, v15 + 1, 1);
        uint64_t v12 = v27;
      }
      ++v11;
      void v12[2] = v15 + 1;
      v12[v15 + 4] = v13;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    LOBYTE(a2) = v25;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  uint64_t v16 = sub_1001D96D8((uint64_t)v12);
  swift_bridgeObjectRelease();
  swift_retain();
  char v17 = sub_1001DD550((uint64_t)v16);
  swift_release();
  uint64_t v18 = sub_1001D9358((unint64_t)v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v20 = v18 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  uint64_t v21 = *(void *)(v26 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1001DD65C(v20, (uint64_t)v8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 3) < 2 || EnumCaseMultiPayload == 1)
    {
      if ((a2 & 1) == 0) {
        break;
      }
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload != 2)
    {
      sub_1001DD6C0((uint64_t)v8);
      goto LABEL_13;
    }
    sub_1001B6BC4((uint64_t)v8);
    if (a2) {
      break;
    }
LABEL_13:
    v20 += v21;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_1001DA33C(unint64_t a1, int a2)
{
  uint64_t v5 = type metadata accessor for EpisodePlayState();
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + 32)) {
    return 0;
  }
  uint64_t v47 = v7;
  uint64_t v49 = v6;
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v48 = v2;
    if (v11) {
      goto LABEL_5;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
    int64_t v30 = _swiftEmptyArrayStorage[2];
    if (v30)
    {
LABEL_28:
      HIDWORD(v46) = a2;
      uint64_t v50 = _swiftEmptyArrayStorage;
      sub_1001BA5F8(0, v30, 0);
      uint64_t v31 = 0;
      id v32 = v50;
      uint64_t v33 = v50[2];
      uint64_t v34 = 3 * v33;
      do
      {
        uint64_t v35 = v13[v31 + 4];
        uint64_t v50 = v32;
        unint64_t v36 = v32[3];
        uint64_t v37 = v33 + v31 + 1;
        if (v33 + v31 >= v36 >> 1)
        {
          sub_1001BA5F8(v36 > 1, v33 + v31 + 1, 1);
          id v32 = v50;
        }
        ++v31;
        void v32[2] = v37;
        uint64_t v38 = &v32[v34];
        _DWORD v38[4] = v35;
        v38[5] = 0;
        *((unsigned char *)v38 + 48) = 0;
        v34 += 3;
      }
      while (v30 != v31);
      swift_bridgeObjectRelease();
      LOBYTE(a2) = BYTE4(v46);
      goto LABEL_36;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    id v32 = _swiftEmptyArrayStorage;
LABEL_36:
    swift_retain();
    uint64_t v39 = sub_1001DD550((uint64_t)v32);
    swift_release();
    uint64_t v40 = sub_1001D9358((unint64_t)v39);
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(v40 + 16);
    if (!v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v42 = v40 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    uint64_t v43 = *(void *)(v47 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1001DD65C(v42, (uint64_t)v9);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 3) < 2 || EnumCaseMultiPayload == 1)
      {
        if ((a2 & 1) == 0) {
          goto LABEL_50;
        }
      }
      else if (EnumCaseMultiPayload == 2)
      {
        sub_1001B6BC4((uint64_t)v9);
        if (a2)
        {
LABEL_50:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
      }
      else
      {
        sub_1001DD6C0((uint64_t)v9);
      }
      v42 += v43;
      if (!--v41)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v11 = result;
  uint64_t v48 = v2;
  if (!result) {
    goto LABEL_34;
  }
LABEL_5:
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = 0;
      uint64_t v13 = _swiftEmptyArrayStorage;
      do
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v14 = MPCPlayerResponseItem.podcastEpisode.getter();
        if (v14)
        {
          unint64_t v15 = (void *)v14;
          uint64_t v16 = MPModelObject.adamID.getter();
          char v18 = v17;
          swift_unknownObjectRelease();

          if ((v18 & 1) == 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v13 = sub_1002EF380(0, v13[2] + 1, 1, v13);
            }
            unint64_t v20 = v13[2];
            unint64_t v19 = v13[3];
            if (v20 >= v19 >> 1) {
              uint64_t v13 = sub_1002EF380((void *)(v19 > 1), v20 + 1, 1, v13);
            }
            v13[2] = v20 + 1;
            v13[v20 + 4] = v16;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v12;
      }
      while (v11 != v12);
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v13 = _swiftEmptyArrayStorage;
      do
      {
        id v22 = *(id *)(a1 + 8 * v21 + 32);
        uint64_t v23 = MPCPlayerResponseItem.podcastEpisode.getter();
        if (v23)
        {
          uint64_t v24 = (void *)v23;
          uint64_t v25 = MPModelObject.adamID.getter();
          char v27 = v26;

          if ((v27 & 1) == 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v13 = sub_1002EF380(0, v13[2] + 1, 1, v13);
            }
            unint64_t v29 = v13[2];
            unint64_t v28 = v13[3];
            if (v29 >= v28 >> 1) {
              uint64_t v13 = sub_1002EF380((void *)(v28 > 1), v29 + 1, 1, v13);
            }
            v13[2] = v29 + 1;
            v13[v29 + 4] = v25;
          }
        }
        else
        {
        }
        ++v21;
      }
      while (v11 != v21);
    }
    swift_bridgeObjectRelease();
    int64_t v30 = v13[2];
    if (v30) {
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  __break(1u);
  return result;
}

void sub_1001DA808(void (*a1)(char *, unint64_t, uint64_t), uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EpisodeOffer();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + 16);
  if (v9)
  {
    if (*(unsigned char *)(v2 + 32)) {
      uint64_t v10 = 2;
    }
    else {
      uint64_t v10 = 0;
    }
    unint64_t v11 = *(void *)(v9 + 16);
    uint64_t v76 = *(void *)(v9 + 24);
    switch(*(unsigned char *)(v9 + 32))
    {
      case 1:
        sub_100056D54(v2 + 48, (uint64_t)v83);
        uint64_t v78 = a1;
        uint64_t v79 = v2;
        uint64_t v73 = v85;
        sub_100041A98(v83, v84);
        swift_retain();
        uint64_t v12 = v76;
        sub_1001DCD9C(v11, v76, 1u);
        uint64_t v74 = v10;
        dispatch thunk of LibraryActionControllerProtocol.mark(episodeOffers:as:completion:)();
        sub_10004D2D8((uint64_t)v83);
        if (os_feature_enabled_bluemoon())
        {
          swift_retain();
          uint64_t v13 = dispatch thunk of PlaybackController.queueController.getter();
          swift_release();
          int64_t v14 = *(void *)(v11 + 16);
          if (v14)
          {
            uint64_t v72 = v13;
            uint64_t v75 = v9;
            v83[0] = _swiftEmptyArrayStorage;
            sub_1001BA628(0, v14, 0);
            uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
            uint64_t v15 = v6 + 16;
            uint64_t v17 = *(unsigned __int8 *)(v15 + 64);
            uint64_t v73 = v11;
            unint64_t v18 = v11 + ((v17 + 32) & ~v17);
            uint64_t v77 = *(void *)(v15 + 56);
            uint64_t v78 = v16;
            uint64_t v79 = v15;
            unint64_t v19 = (void (**)(char *, uint64_t))(v15 - 8);
            do
            {
              v78(v8, v18, v5);
              uint64_t v20 = EpisodeOffer.contentId.getter();
              (*v19)(v8, v5);
              uint64_t v21 = v83[0];
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1001BA628(0, *(void *)(v21 + 16) + 1, 1);
                uint64_t v21 = v83[0];
              }
              unint64_t v23 = *(void *)(v21 + 16);
              unint64_t v22 = *(void *)(v21 + 24);
              if (v23 >= v22 >> 1)
              {
                sub_1001BA628(v22 > 1, v23 + 1, 1);
                uint64_t v21 = v83[0];
              }
              *(void *)(v21 + 16) = v23 + 1;
              *(void *)(v21 + 8 * v23 + 32) = v20;
              v18 += v77;
              --v14;
            }
            while (v14);
            sub_1001DCDF8(v73, v76, 1u);
          }
          else
          {
            sub_1001DCDF8(v11, v76, 1u);
          }
          PlaybackController.QueueController.updatePlayerIfNeededForMarking(adamIDs:as:)();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1001DBEF4(v11);
          sub_1001DCDF8(v11, v12, 1u);
        }
        swift_release();
        return;
      case 2:
        uint64_t v78 = a1;
        uint64_t v79 = v2;
        if (v11 >> 62)
        {
          uint64_t v70 = v76;
          sub_1001DCD9C(v11, v76, 2u);
          swift_retain();
          sub_1001DCD9C(v11, v70, 2u);
          uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
          sub_1001DCDF8(v11, v70, 2u);
        }
        else
        {
          uint64_t v24 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          sub_1001DCD9C(v11, v76, 2u);
        }
        uint64_t v75 = v9;
        uint64_t v77 = a2;
        if (!v24) {
          goto LABEL_44;
        }
        uint64_t v74 = v10;
        v83[0] = _swiftEmptyArrayStorage;
        sub_1001BA628(0, v24 & ~(v24 >> 63), 0);
        if (v24 < 0)
        {
          __break(1u);
LABEL_68:
          __break(1u);
          JUMPOUT(0x1001DB228);
        }
        uint64_t v25 = 0;
        uint64_t v26 = v83[0];
        do
        {
          if ((v11 & 0xC000000000000001) != 0) {
            id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v27 = *(id *)(v11 + 8 * v25 + 32);
          }
          unint64_t v28 = v27;
          [v27 episodeStoreId];
          uint64_t v29 = AdamID.init(rawValue:)();

          v83[0] = v26;
          unint64_t v31 = *(void *)(v26 + 16);
          unint64_t v30 = *(void *)(v26 + 24);
          if (v31 >= v30 >> 1)
          {
            sub_1001BA628(v30 > 1, v31 + 1, 1);
            uint64_t v26 = v83[0];
          }
          ++v25;
          *(void *)(v26 + 16) = v31 + 1;
          *(void *)(v26 + 8 * v31 + 32) = v29;
        }
        while (v24 != v25);
        uint64_t v10 = v74;
LABEL_44:
        uint64_t v43 = v79;
        sub_100056D54(v79 + 88, (uint64_t)v83);
        sub_100041A98(v83, v84);
        dispatch thunk of StoreDataProvider.fetchEpisodeOffers(with:)();
        swift_bridgeObjectRelease();
        unint64_t v44 = (void *)swift_allocObject();
        void v44[2] = v43;
        void v44[3] = v10;
        uint64_t v45 = v77;
        uint64_t v46 = (uint64_t)v78;
        v44[4] = v78;
        v44[5] = v45;
        v44[6] = v11;
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = v46;
        *(void *)(v47 + 24) = v45;
        unint64_t v48 = sub_1000566BC();
        sub_10004ACDC(v46);
        sub_10004ACDC(v46);
        swift_retain();
        uint64_t v49 = static OS_dispatch_queue.main.getter();
        unint64_t v81 = v48;
        uint64_t v82 = &protocol witness table for OS_dispatch_queue;
        v80[0] = v49;
        Promise.then(perform:orCatchError:on:)();
        swift_release();
        goto LABEL_50;
      case 3:
        uint64_t v79 = v2;
        if (v11 >> 62)
        {
          uint64_t v71 = v76;
          sub_1001DCD9C(v11, v76, 3u);
          swift_retain();
          sub_1001DCD9C(v11, v71, 3u);
          uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
        }
        else
        {
          uint64_t v32 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v33 = v76;
          sub_1001DCD9C(v11, v76, 3u);
          swift_retain();
          sub_1001DCD9C(v11, v33, 3u);
        }
        uint64_t v75 = v9;
        uint64_t v77 = a2;
        uint64_t v78 = a1;
        if (!v32) {
          goto LABEL_49;
        }
        if (v32 < 1) {
          goto LABEL_68;
        }
        if ((v11 & 0xC000000000000001) != 0)
        {
          uint64_t v34 = 0;
          uint64_t v35 = _swiftEmptyArrayStorage;
          do
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v36 = MPCPlayerResponseItem.podcastEpisode.getter();
            if (v36)
            {
              uint64_t v37 = (void *)v36;
              uint64_t v38 = MPModelObject.adamID.getter();
              char v40 = v39;
              swift_unknownObjectRelease();

              if ((v40 & 1) == 0)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v35 = sub_1002EF380(0, v35[2] + 1, 1, v35);
                }
                unint64_t v42 = v35[2];
                unint64_t v41 = v35[3];
                if (v42 >= v41 >> 1) {
                  uint64_t v35 = sub_1002EF380((void *)(v41 > 1), v42 + 1, 1, v35);
                }
                _OWORD v35[2] = v42 + 1;
                v35[v42 + 4] = v38;
              }
            }
            else
            {
              swift_unknownObjectRelease();
            }
            ++v34;
          }
          while (v32 != v34);
        }
        else
        {
          int v59 = (id *)(v11 + 32);
          id v60 = _swiftEmptyArrayStorage;
          do
          {
            id v61 = *v59;
            uint64_t v62 = MPCPlayerResponseItem.podcastEpisode.getter();
            if (v62)
            {
              uint64_t v63 = (void *)v62;
              uint64_t v64 = MPModelObject.adamID.getter();
              char v66 = v65;

              if ((v66 & 1) == 0)
              {
                uint64_t v67 = v10;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  id v60 = sub_1002EF380(0, v60[2] + 1, 1, v60);
                }
                unint64_t v69 = v60[2];
                unint64_t v68 = v60[3];
                if (v69 >= v68 >> 1) {
                  id v60 = sub_1002EF380((void *)(v68 > 1), v69 + 1, 1, v60);
                }
                v60[2] = v69 + 1;
                v60[v69 + 4] = v64;
                uint64_t v10 = v67;
              }
            }
            else
            {
            }
            ++v59;
            --v32;
          }
          while (v32);
        }
LABEL_49:
        sub_1001DCDF8(v11, v76, 3u);
        uint64_t v52 = v79;
        sub_100056D54(v79 + 88, (uint64_t)v83);
        sub_100041A98(v83, v84);
        dispatch thunk of StoreDataProvider.fetchEpisodeOffers(with:)();
        swift_bridgeObjectRelease();
        uint64_t v53 = (void *)swift_allocObject();
        v53[2] = v52;
        v53[3] = v10;
        uint64_t v54 = v77;
        uint64_t v55 = (uint64_t)v78;
        v53[4] = v78;
        v53[5] = v54;
        v53[6] = v11;
        uint64_t v56 = swift_allocObject();
        *(void *)(v56 + 16) = v55;
        *(void *)(v56 + 24) = v54;
        unint64_t v57 = sub_1000566BC();
        sub_10004ACDC(v55);
        sub_10004ACDC(v55);
        swift_retain();
        uint64_t v58 = static OS_dispatch_queue.main.getter();
        unint64_t v81 = v57;
        uint64_t v82 = &protocol witness table for OS_dispatch_queue;
        v80[0] = v58;
        Promise.then(perform:orCatchError:on:)();
        swift_release();
LABEL_50:
        swift_release();
        swift_release();
        swift_release();
        sub_10004D2D8((uint64_t)v80);
        sub_10004D2D8((uint64_t)v83);
        return;
      default:
        swift_retain();
        sub_1001DCD9C(v11, v76, 0);
        swift_bridgeObjectRelease();
        sub_100056D54(v2 + 48, (uint64_t)v83);
        sub_100041A98(v83, v84);
        dispatch thunk of LibraryActionControllerProtocol.mark(episodeUUIDS:as:completion:)();
        sub_10004D2D8((uint64_t)v83);
        if (os_feature_enabled_bluemoon())
        {
          swift_retain();
          dispatch thunk of PlaybackController.queueController.getter();
          swift_release();
          PlaybackController.QueueController.updatePlayerIfNeededForMarking(uuids:as:)();
          swift_release();
        }
        else
        {
          id v50 = sub_1001D97A8();
          if (v50)
          {
            uint64_t v51 = v50;
            sub_1001DB238((void *)v11, v10);
            swift_bridgeObjectRelease();
            swift_release();

            return;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        break;
    }
  }
}

void sub_1001DB238(void *a1, uint64_t a2)
{
  id v5 = [v2 currentItem];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v5 episodeUuid];

    if (v7)
    {
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      char v11 = sub_1000124B0(v8, v10, a1);
      swift_bridgeObjectRelease();
      if (v11)
      {
        if (a2) {
          uint64_t v12 = 15;
        }
        else {
          uint64_t v12 = 14;
        }
        [v2 stopWithReason:v12 initiator:1];
      }
    }
  }
}

void sub_1001DB320(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *), void (*a4)(unint64_t *), void (*a5)(unint64_t *))
{
  uint64_t v9 = v5;
  id v11 = [v5 currentItem];
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = [v11 episodeUuid];

    if (v13)
    {
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      v21[0] = v14;
      v21[1] = v16;
      __chkstk_darwin(v17);
      _OWORD v20[2] = v21;
      char v18 = sub_1001D9B3C(a3, (uint64_t)v20, a4, a5);
      swift_bridgeObjectRelease();
      if (v18)
      {
        if (a2) {
          uint64_t v19 = 15;
        }
        else {
          uint64_t v19 = 14;
        }
        [v9 stopWithReason:v19 initiator:1];
      }
    }
  }
}

void sub_1001DB448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  sub_100056D54(a2 + 48, (uint64_t)v10);
  sub_100041A98(v10, (uint64_t)v11);
  dispatch thunk of LibraryActionControllerProtocol.mark(episodeOffers:as:completion:)();
  sub_10004D2D8((uint64_t)v10);
  if (os_feature_enabled_bluemoon())
  {
    swift_retain();
    dispatch thunk of PlaybackController.queueController.getter();
    swift_release();
    sub_1001DB5D0(a6);
    swift_release();
  }
  else
  {
    id v8 = sub_1001D97A8();
    if (v8)
    {
      uint64_t v9 = v8;
      v10[0] = a6;
      v10[1] = sub_1001DBA04;
      v10[2] = 0;
      id v11 = sub_1001DCF34;
      uint64_t v12 = 0;
      id v13 = sub_1001DCF44;
      uint64_t v14 = 0;
      swift_bridgeObjectRetain();
      sub_1001DB320((uint64_t)v10, a3, sub_1001DCF48, (void (*)(unint64_t *))sub_1001DCF64, (void (*)(unint64_t *))sub_1000537F4);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1001DB5D0(unint64_t a1)
{
  uint64_t v2 = v1;
  if (!dispatch thunk of PlaybackController.QueueController.playbackController.getter())
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v4 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter();
  swift_release();
  if (!v4 || (MPModelObject.uuid.getter(), uint64_t v6 = v5, v4, !v6))
  {
    if (!dispatch thunk of PlaybackController.QueueController.playbackController.getter())
    {
LABEL_54:
      __break(1u);
      return;
    }
    uint64_t v20 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter();
    swift_release();
    if (!v20) {
      return;
    }
    MPModelObject.adamID.getter();
    char v22 = v21;

    if (v22) {
      return;
    }
    if (!(a1 >> 62))
    {
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v23)
      {
LABEL_48:
        swift_bridgeObjectRelease();
        PlaybackController.QueueController.updatePlayerIfNeededForMarking(adamIDs:as:)();
        goto LABEL_49;
      }
      goto LABEL_24;
    }
LABEL_47:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    if (!v23) {
      goto LABEL_48;
    }
LABEL_24:
    if (v23 >= 1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v24 = 0;
        uint64_t v25 = _swiftEmptyArrayStorage;
        do
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v26 = IMPlayerItem.adamID.getter();
          char v28 = v27;
          swift_unknownObjectRelease();
          if ((v28 & 1) == 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v25 = sub_1002EF380(0, v25[2] + 1, 1, v25);
            }
            unint64_t v30 = v25[2];
            unint64_t v29 = v25[3];
            if (v30 >= v29 >> 1) {
              uint64_t v25 = sub_1002EF380((void *)(v29 > 1), v30 + 1, 1, v25);
            }
            v25[2] = v30 + 1;
            v25[v30 + 4] = v26;
          }
          ++v24;
        }
        while (v23 != v24);
      }
      else
      {
        uint64_t v31 = 0;
        uint64_t v32 = _swiftEmptyArrayStorage;
        do
        {
          id v33 = *(id *)(a1 + 8 * v31 + 32);
          uint64_t v34 = IMPlayerItem.adamID.getter();
          char v36 = v35;

          if ((v36 & 1) == 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v32 = sub_1002EF380(0, v32[2] + 1, 1, v32);
            }
            unint64_t v38 = v32[2];
            unint64_t v37 = v32[3];
            if (v38 >= v37 >> 1) {
              uint64_t v32 = sub_1002EF380((void *)(v37 > 1), v38 + 1, 1, v32);
            }
            void v32[2] = v38 + 1;
            v32[v38 + 4] = v34;
          }
          ++v31;
        }
        while (v23 != v31);
      }
      goto LABEL_48;
    }
    __break(1u);
    goto LABEL_53;
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = v2;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_6:
      if (v7 >= 1)
      {
        uint64_t v8 = 0;
        uint64_t v9 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(a1 + 8 * v8 + 32);
          }
          id v11 = v10;
          id v12 = [v10 episodeUuid:v39];
          if (v12)
          {
            id v13 = v12;
            uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v16 = v15;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v9 = sub_10004CEAC(0, *((void *)v9 + 2) + 1, 1, v9);
            }
            unint64_t v18 = *((void *)v9 + 2);
            unint64_t v17 = *((void *)v9 + 3);
            if (v18 >= v17 >> 1) {
              uint64_t v9 = sub_10004CEAC((char *)(v17 > 1), v18 + 1, 1, v9);
            }
            *((void *)v9 + 2) = v18 + 1;
            uint64_t v19 = &v9[16 * v18];
            *((void *)v19 + 4) = v14;
            *((void *)v19 + 5) = v16;
          }
          else
          {
          }
          ++v8;
        }
        while (v7 != v8);
        goto LABEL_45;
      }
      __break(1u);
      goto LABEL_47;
    }
  }
LABEL_45:
  swift_bridgeObjectRelease();
  PlaybackController.QueueController.updatePlayerIfNeededForMarking(uuids:as:)();
LABEL_49:

  swift_bridgeObjectRelease();
}

void sub_1001DBA04(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 episodeUuid];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1001DBA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100056D54(a2 + 48, (uint64_t)v10);
  sub_100041A98(v10, (uint64_t)v11);
  dispatch thunk of LibraryActionControllerProtocol.mark(episodeOffers:as:completion:)();
  sub_10004D2D8((uint64_t)v10);
  if (os_feature_enabled_bluemoon())
  {
    swift_retain();
    dispatch thunk of PlaybackController.queueController.getter();
    swift_release();
    PlaybackController.QueueController.updatePlayerIfNeededForMarking(playerItems:as:)();
    swift_release();
  }
  else
  {
    id v8 = sub_1001D97A8();
    if (v8)
    {
      uint64_t v9 = v8;
      v10[0] = a6;
      v10[1] = sub_1001DBBF4;
      v10[2] = 0;
      id v11 = sub_1001DD93C;
      uint64_t v12 = 0;
      id v13 = sub_1001DCF44;
      uint64_t v14 = 0;
      swift_bridgeObjectRetain();
      sub_1001DB320((uint64_t)v10, a3, sub_1001DCF48, (void (*)(unint64_t *))sub_1001DD934, (void (*)(unint64_t *))sub_1001DD938);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1001DBBF4(uint64_t *a1@<X8>)
{
  uint64_t v2 = MPCPlayerResponseItem.podcastEpisode.getter();
  if (v2)
  {
    id v3 = (void *)v2;
    uint64_t v4 = MPModelObject.uuid.getter();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v4;
  a1[1] = v6;
}

uint64_t sub_1001DBC50()
{
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = (objc_class *)[self mainBundle];
  if (v1)
  {
    unint64_t v3 = 0xD00000000000001ALL;
    unint64_t v11 = 0x80000001004D5490;
    unint64_t v4 = 0x80000001004D5470;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    unint64_t v8 = 0xD000000000000010;
  }
  else
  {
    unint64_t v3 = 0xD000000000000018;
    unint64_t v11 = 0xEE00646579616C50;
    unint64_t v4 = 0x80000001004D54B0;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    unint64_t v8 = 0x207361206B72614DLL;
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_1001DBD5C(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  type metadata accessor for Theme();
  uint64_t v4 = static Theme.appTintColor.getter();
  char v5 = *(unsigned char *)(v2 + 32);
  uint64_t v6 = (objc_class *)[self mainBundle];
  if (v5)
  {
    unint64_t v7 = 0xD000000000000016;
    unint64_t v17 = 0xE800000000000000;
    unint64_t v8 = 0x80000001004D5450;
    v9.super.Class isa = v6;
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    uint64_t v12 = 0x646579616C706E55;
  }
  else
  {
    unint64_t v17 = 0xE000000000000000;
    unint64_t v8 = 0x80000001004D4500;
    unint64_t v7 = 0xD000000000000014;
    v9.super.Class isa = v6;
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    uint64_t v12 = 0;
  }
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, v9, *(Swift::String *)&v10, *(Swift::String *)&v12);

  BOOL v14 = *(unsigned char *)(v2 + 32) == 0;
  if (*(unsigned char *)(v2 + 32)) {
    unint64_t v15 = 0xD000000000000015;
  }
  else {
    unint64_t v15 = 0xD000000000000019;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v15;
  if (v14) {
    unint64_t v16 = 0x80000001004D5430;
  }
  else {
    unint64_t v16 = 0x80000001004D5410;
  }
  *(void *)(a1 + 16) = v16;
  *(Swift::String *)(a1 + 24) = v13;
}

unint64_t sub_1001DBEB4()
{
  if (*(unsigned char *)(v0 + 32)) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000019;
  }
}

void sub_1001DBEF4(uint64_t a1)
{
  id v3 = [self sharedInstance];
  id v4 = [v3 mainOrPrivateContext];

  if (*(unsigned char *)(v1 + 32)) {
    uint64_t v5 = 2;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a1;
  v6[3] = v4;
  v6[4] = v1;
  void v6[5] = v5;
  id v9[4] = sub_1001DCCDC;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10003B424;
  v9[3] = &unk_100558498;
  unint64_t v7 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  id v8 = v4;
  swift_retain();
  swift_release();
  [v8 performBlock:v7];
  _Block_release(v7);
}

void sub_1001DC040(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v46 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  __chkstk_darwin(v6);
  id v50 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  __chkstk_darwin(v8);
  uint64_t v47 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EpisodeOffer();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1006005C0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  unint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v54 = v11 + 16;
  uint64_t v55 = v11;
  uint64_t v20 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  char v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  unint64_t v57 = *(void *)(a1 + 16);
  uint64_t v58 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  char v22 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v56 = a1;
  swift_bridgeObjectRetain_n();
  id v59 = a2;
  unint64_t v23 = 0;
  uint64_t v53 = (char *)_swiftEmptyArrayStorage;
LABEL_2:
  unint64_t v24 = v57;
  while (v23 == v24)
  {
    uint64_t v25 = 1;
    unint64_t v23 = v24;
LABEL_7:
    (*v20)(v19, v25, 1, v10);
    sub_1001DCCE8((uint64_t)v19, (uint64_t)v17);
    if ((*v21)(v17, 1, v10) == 1)
    {

      swift_bridgeObjectRelease_n();
      sub_1000566BC();
      char v36 = (void *)static OS_dispatch_queue.main.getter();
      unint64_t v37 = (void *)swift_allocObject();
      unint64_t v38 = v53;
      v37[2] = v46;
      v37[3] = v38;
      _DWORD v37[4] = v45;
      aBlock[4] = sub_1001DCD90;
      aBlock[5] = v37;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10003B424;
      uint64_t aBlock[3] = &unk_1005584E8;
      uint64_t v39 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      char v40 = v47;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1001DD768((unint64_t *)&qword_1005FA630, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100054B78((uint64_t *)&unk_1005FE4B0);
      sub_10002FBEC();
      unint64_t v41 = v50;
      uint64_t v42 = v52;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v41, v42);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v40, v49);
      return;
    }
    (*v58)(v13, v17, v10);
    type metadata accessor for CoreDataFetcher();
    uint64_t v26 = (void *)static CoreDataFetcher.unsafeFindEpisode(for:in:)();
    (*v22)(v13, v10);
    if (v26)
    {
      id v27 = v26;
      id v28 = [v27 uuid];
      if (v28)
      {
        unint64_t v29 = v28;
        uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v30;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v53 = sub_10004CEAC(0, *((void *)v53 + 2) + 1, 1, v53);
        }
        unint64_t v32 = *((void *)v53 + 2);
        unint64_t v31 = *((void *)v53 + 3);
        if (v32 >= v31 >> 1) {
          uint64_t v53 = sub_10004CEAC((char *)(v31 > 1), v32 + 1, 1, v53);
        }
        id v33 = v53;
        *((void *)v53 + 2) = v32 + 1;
        uint64_t v34 = &v33[16 * v32];
        uint64_t v35 = v43;
        *((void *)v34 + 4) = v44;
        *((void *)v34 + 5) = v35;
      }
      else
      {
      }
      goto LABEL_2;
    }
  }
  if (v23 < v24)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v19, v56+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v23, v10);
    uint64_t v25 = 0;
    ++v23;
    goto LABEL_7;
  }
  __break(1u);
}

void sub_1001DC634(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = sub_1001D97A8();
  if (v5)
  {
    id v6 = v5;
    sub_1001DB238(a2, a3);
  }
}

uint64_t sub_1001DC6B4()
{
  swift_release();
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 48);
  sub_10004D2D8(v0 + 88);
  swift_release();
  sub_1001DD914(*(id *)(v0 + 136));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MarkEpisodeContextAction()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for MarkAsPlayedType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001DC80CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkAsPlayedType()
{
  return &type metadata for MarkAsPlayedType;
}

unint64_t sub_1001DC848()
{
  unint64_t result = qword_1005F96A0;
  if (!qword_1005F96A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F96A0);
  }
  return result;
}

uint64_t sub_1001DC8A4@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  unsigned int v6 = (unsigned int *)&enum case for MetricsLabel.markEpisodeUnplayed(_:);
  if (!v3) {
    unsigned int v6 = (unsigned int *)&enum case for MetricsLabel.markEpisodePlayed(_:);
  }
  uint64_t v7 = *v6;

  return v5(a1, v7, v4);
}

uint64_t sub_1001DC928@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v5 = (unsigned int *)&enum case for ContextActionType.markUnplayed(_:);
  if (!v3) {
    uint64_t v5 = (unsigned int *)&enum case for ContextActionType.markPlayed(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(a1, *v5, v4);
  unsigned int v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);

  return v6(a1, 0, 1, v4);
}

void sub_1001DCA14()
{
}

double sub_1001DCA20@<D0>(uint64_t a1@<X8>)
{
  sub_1001DBD5C((uint64_t)v5);
  uint64_t v2 = v6;
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_1001DCA64(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

void *sub_1001DCAC4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1001DCB24(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1001DCB84(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1001DCBE4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1001DD768((unint64_t *)&unk_100608B60, a2, (void (*)(uint64_t))type metadata accessor for MarkEpisodeContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001DCC3C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1001DD768(&qword_1005F96A8, a2, (void (*)(uint64_t))type metadata accessor for MarkEpisodeContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001DCC94()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

void sub_1001DCCDC()
{
  sub_1001DC040(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001DCCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1006005C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DCD50()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1001DCD90()
{
  sub_1001DC634(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001DCD9C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 >= 3)
  {
    if (a3) {
      return result;
    }
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001DCDF8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 >= 3)
  {
    if (a3) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001DCE5C(uint64_t a1)
{
  return sub_1001DCEE8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1001DBA6C);
}

uint64_t sub_1001DCE80()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001DCED0(uint64_t a1)
{
  return sub_1001DCEE8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1001DB448);
}

uint64_t sub_1001DCEE8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1001DCF04()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

BOOL sub_1001DCF34(uint64_t a1)
{
  return *(void *)(a1 + 8) != 0;
}

uint64_t sub_1001DCF48(void *a1)
{
  return sub_1001DCFAC(a1) & 1;
}

uint64_t sub_1001DCF64(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001DCF90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = a1[1];
  if (result)
  {
    *a2 = *a1;
    a2[1] = result;
    return swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001DCFAC(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
  }
}

uint64_t sub_1001DD004(uint64_t a1, void (*a2)(uint64_t *__return_ptr, char *), uint64_t a3, uint64_t a4)
{
  void (*v51)(uint64_t *__return_ptr, char *);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;

  uint64_t v53 = a4;
  uint64_t v51 = a2;
  uint64_t v6 = type metadata accessor for EpisodeOffer();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v50 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1006005C0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v39 - v14);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v48 = (char *)v39 - v17;
  __chkstk_darwin(v16);
  uint64_t v47 = (char *)v39 - v18;
  unint64_t v19 = *(void *)(a1 + 16);
  unint64_t v57 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v52 = a3;
  uint64_t v42 = a1;
  uint64_t v43 = v7;
  unint64_t v49 = v19;
  if (v19)
  {
    uint64_t v45 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v46 = v15;
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    unint64_t v41 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    void v39[2] = v7 + 16;
    char v40 = (void (**)(char *, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v20 = 0;
    unint64_t v21 = v19;
    while (1)
    {
      if (v20 == v19)
      {
        uint64_t v22 = 1;
        unint64_t v20 = v19;
        uint64_t v23 = (uint64_t)v46;
      }
      else
      {
        uint64_t v23 = (uint64_t)v46;
        if (v20 >= v19) {
          goto LABEL_20;
        }
        (*(void (**)(void (**)(uint64_t, uint64_t, uint64_t, uint64_t), unint64_t, uint64_t))(v43 + 16))(v46, v42+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v20, v6);
        uint64_t v22 = 0;
        ++v20;
      }
      (*v45)(v23, v22, 1, v6);
      sub_1001DCCE8(v23, (uint64_t)v12);
      if ((*v44)(v12, 1, v6) == 1) {
        break;
      }
      unint64_t v24 = v50;
      (*v41)(v50, v12, v6);
      v51(&v54, v24);
      uint64_t v25 = v54;
      uint64_t v26 = v55;
      char v27 = v56;
      (*v40)(v24, v6);
      dispatch thunk of EpisodeStateController.stateMachine(for:)();
      sub_1001DD848(v25, v26, v27);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v21;
      unint64_t v19 = v49;
      if (!v21) {
        goto LABEL_11;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v20 = 0;
LABEL_11:
    unint64_t v41 = (void (**)(char *, char *, uint64_t))(v43 + 16);
    id v28 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    uint64_t v45 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 32);
    uint64_t v46 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 8);
    uint64_t v29 = (uint64_t)v48;
    BOOL v30 = v20 >= v19;
    if (v20 != v19) {
      goto LABEL_13;
    }
LABEL_12:
    uint64_t v31 = 1;
    unint64_t v20 = v19;
    uint64_t v32 = (uint64_t)v47;
    while (1)
    {
      (*v46)(v32, v31, 1, v6);
      sub_1001DCCE8(v32, v29);
      if ((*v28)(v29, 1, v6) == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v57;
      }
      id v33 = v50;
      ((void (*)(char *, uint64_t, uint64_t))*v45)(v50, v29, v6);
      v51(&v54, v33);
      uint64_t v34 = v54;
      uint64_t v35 = v55;
      char v36 = v56;
      unint64_t v37 = v33;
      unint64_t v19 = v49;
      ((void (*)(char *, uint64_t))*v44)(v37, v6);
      dispatch thunk of EpisodeStateController.stateMachine(for:)();
      sub_1001DD848(v34, v35, v36);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      uint64_t v29 = (uint64_t)v48;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      BOOL v30 = v20 >= v19;
      if (v20 == v19) {
        goto LABEL_12;
      }
LABEL_13:
      uint64_t v32 = (uint64_t)v47;
      if (v30) {
        break;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v47, v42+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v20, v6);
      uint64_t v31 = 0;
      ++v20;
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void *sub_1001DD550(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v2)
  {
    swift_bridgeObjectRetain();
    int v3 = (char *)(a1 + 48);
    do
    {
      uint64_t v4 = *((void *)v3 - 2);
      uint64_t v5 = *((void *)v3 - 1);
      char v6 = *v3;
      v3 += 24;
      sub_1001DD838(v4, v5, v6);
      dispatch thunk of EpisodeStateController.stateMachine(for:)();
      sub_1001DD848(v4, v5, v6);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001DD65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DD6C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodePlayState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001DD71C()
{
  return sub_1001DD768(&qword_1005F96B0, 255, (void (*)(uint64_t))&type metadata accessor for AnyEpisodePlayStateRule);
}

uint64_t sub_1001DD768(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001DD7B0()
{
  return dispatch thunk of EpisodeStateMachine.currentState.getter();
}

uint64_t sub_1001DD7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DD838(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001DD848(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001DD858()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

double sub_1001DD8A0@<D0>(uint64_t a1@<X8>)
{
  void (*v3)(long long *__return_ptr, uint64_t *);
  char v4;
  double result;
  uint64_t v6;
  long long v7;
  char v8;

  int v3 = *(void (**)(long long *__return_ptr, uint64_t *))(v1 + 16);
  (*(void (**)(uint64_t *__return_ptr))(v1 + 40))(&v6);
  v3(&v7, &v6);
  uint64_t v4 = v8;
  uint64_t result = *(double *)&v7;
  *(_OWORD *)a1 = v7;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1001DD908@<X0>(char *a1@<X8>)
{
  return sub_1001D9A20(*(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

void sub_1001DD914(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_1001DD924(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_1001DDCE0()
{
  unint64_t v1 = *(void *)(v0 + 88);
  if (v1 > 5) {
    return 2;
  }
  else {
    return qword_10046E8A8[v1];
  }
}

uint64_t sub_1001DDD28()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyDownload()
{
  return self;
}

double sub_1001DDDAC()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 8sub_1001DA808(0, 0) = 0;
  *(void *)(v0 + 88) = 1;
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 0;
  *(unsigned char *)(v0 + 112) = 0;
  *(void *)(v0 + 12sub_1001DA808(0, 0) = 0;
  *(void *)(v0 + 128) = 0;
  return result;
}

uint64_t sub_1001DDDD4()
{
  uint64_t v1 = type metadata accessor for BookmarksControllerEpisodeData();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (unint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + 16)) {
    return 0;
  }
  swift_retain();
  sub_1004011E8(v4);
  uint64_t v5 = BookmarksController.notBookmarkedEpisodesCount(in:)();
  (*(void (**)(unint64_t *, uint64_t))(v2 + 8))(v4, v1);
  id v6 = [self mainBundle];
  if (v5 >= 2)
  {
    unint64_t v13 = 0xED00007365646F73;
    unint64_t v8 = 0x80000001004D5760;
    unint64_t v7 = 0xD000000000000013;
  }
  else
  {
    unint64_t v7 = 0xD000000000000015;
    unint64_t v13 = 0xEC00000065646F73;
    unint64_t v8 = 0x80000001004D5780;
  }
  v10._uint64_t countAndFlagsBits = 0;
  v10._unint64_t object = (void *)0xE000000000000000;
  uint64_t v11 = 0x6970452065766153;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, (NSBundle)v6, v10, *(Swift::String *)(&v13 - 1))._countAndFlagsBits;

  swift_release();
  return countAndFlagsBits;
}

uint64_t sub_1001DDFB0()
{
  uint64_t v1 = type metadata accessor for InteractionContext();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BookmarksControllerEpisodeData();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (unint64_t *)((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v0 + 16))
  {
    swift_retain();
    sub_1004011E8(v9);
    swift_beginAccess();
    if (*(void *)(v0 + 24))
    {
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.context.getter();
      swift_release();
      char v10 = InteractionContext.view.getter();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      if ((v10 - 5) > 2u) {
        InteractionContext.EpisodeCellType.showsEpisodeControls.getter();
      }
    }
    BookmarksController.bookmarkEpisodes(with:showHUDConfirmation:)();
    swift_release();
    return (*(uint64_t (**)(unint64_t *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_1001DE1C8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1001DE9EC(v0 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_contextActionType);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1001DE2A0()
{
  return type metadata accessor for BookmarkEpisodeContextAction();
}

uint64_t type metadata accessor for BookmarkEpisodeContextAction()
{
  uint64_t result = qword_1005F9900;
  if (!qword_1005F9900) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001DE2F4()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1001DE3EC()
{
  if (!qword_100605BC0)
  {
    type metadata accessor for ContextActionType();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100605BC0);
    }
  }
}

uint64_t sub_1001DE448()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1001DE450()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001DE480@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1001DE4F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts28BookmarkEpisodeContextAction_contextActionType, a1);
}

uint64_t sub_1001DE508()
{
  uint64_t v1 = type metadata accessor for BookmarksControllerEpisodeData();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (unint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v0 + 16))
  {
    swift_retain();
    sub_1004011E8(v4);
    char v5 = BookmarksController.containsNotBookmarkedEpisodes(in:)();
    swift_release();
    (*(void (**)(unint64_t *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

double sub_1001DE618@<D0>(uint64_t a1@<X8>)
{
  sub_1001DE8A4((uint64_t)v5);
  uint64_t v2 = v6;
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_1001DE658(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

void *sub_1001DE6B8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1001DE718(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1001DE778(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1001DE7D8(uint64_t a1)
{
  uint64_t result = sub_1001DE860((unint64_t *)&unk_100608B50);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001DE81C(uint64_t a1)
{
  uint64_t result = sub_1001DE860(&qword_1005F9A50);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001DE860(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for BookmarkEpisodeContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1001DE8A4@<D0>(uint64_t a1@<X8>)
{
  id v2 = [self systemOrangeColor];
  id v3 = [self mainBundle];
  v8._unint64_t object = (void *)0xE400000000000000;
  v4._unint64_t object = (void *)0x80000001004D5740;
  v4._uint64_t countAndFlagsBits = 0xD000000000000018;
  v5._uint64_t countAndFlagsBits = 0;
  v5._unint64_t object = (void *)0xE000000000000000;
  v8._uint64_t countAndFlagsBits = 1702256979;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v8);

  *(void *)a1 = v2;
  double result = 3.77673152e209;
  *(_OWORD *)(a1 + 8) = xmmword_10046E8E0;
  *(Swift::String *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_1001DE984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DE9EC(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F9A58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001DEA50()
{
  unint64_t result = qword_1005F9A60;
  if (!qword_1005F9A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F9A60);
  }
  return result;
}

unint64_t sub_1001DEAA8()
{
  unint64_t result = qword_1005F9A68;
  if (!qword_1005F9A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F9A68);
  }
  return result;
}

unint64_t sub_1001DEB00()
{
  unint64_t result = qword_1005F9A70;
  if (!qword_1005F9A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F9A70);
  }
  return result;
}

unint64_t sub_1001DEB58()
{
  unint64_t result = qword_1005F9A78;
  if (!qword_1005F9A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005F9A78);
  }
  return result;
}

uint64_t sub_1001DEBAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001DEBC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001DEC18()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10018A30C(v0, qword_10061A9B0);
  sub_10018A370(v0, (uint64_t)qword_10061A9B0);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1001DEC7C(uint64_t a1)
{
  v2[49] = a1;
  v2[50] = v1;
  uint64_t v3 = sub_100054B78(&qword_1005F9AD8);
  v2[51] = v3;
  v2[52] = *(void *)(v3 - 8);
  v2[53] = swift_task_alloc();
  uint64_t v4 = sub_100054B78(&qword_1005F9AE0);
  v2[54] = v4;
  v2[55] = *(void *)(v4 - 8);
  v2[56] = swift_task_alloc();
  v2[57] = swift_task_alloc();
  sub_100054B78(&qword_1005F9F20);
  v2[58] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  v2[59] = v5;
  v2[60] = *(void *)(v5 - 8);
  v2[61] = swift_task_alloc();
  uint64_t v6 = sub_100054B78(&qword_1005F9AE8);
  v2[62] = v6;
  v2[63] = *(void *)(v6 - 8);
  v2[64] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Publishers.PrefetchStrategy();
  v2[65] = v7;
  v2[66] = *(void *)(v7 - 8);
  v2[67] = swift_task_alloc();
  uint64_t v8 = sub_100054B78(&qword_1005F9AF0);
  v2[68] = v8;
  v2[69] = *(void *)(v8 - 8);
  v2[70] = swift_task_alloc();
  uint64_t v9 = sub_100054B78(&qword_1005F9AF8);
  v2[71] = v9;
  v2[72] = *(void *)(v9 - 8);
  v2[73] = swift_task_alloc();
  uint64_t v10 = sub_100054B78(&qword_1005F9B00);
  v2[74] = v10;
  v2[75] = *(void *)(v10 - 8);
  v2[76] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ActionMetricsBehavior();
  v2[77] = v11;
  v2[78] = *(void *)(v11 - 8);
  v2[79] = swift_task_alloc();
  type metadata accessor for ActionMetrics();
  v2[80] = swift_task_alloc();
  sub_100054B78((uint64_t *)&unk_1005FEA40);
  v2[81] = swift_task_alloc();
  type metadata accessor for EpisodePlayState();
  v2[82] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Logger();
  v2[83] = v12;
  v2[84] = *(void *)(v12 - 8);
  v2[85] = swift_task_alloc();
  v2[86] = swift_task_alloc();
  v2[87] = swift_task_alloc();
  v2[88] = swift_task_alloc();
  v2[89] = swift_task_alloc();
  v2[90] = type metadata accessor for MainActor();
  v2[91] = static MainActor.shared.getter();
  uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[92] = v14;
  v2[93] = v13;
  return _swift_task_switch(sub_1001DF1C8, v14, v13);
}

uint64_t sub_1001DF1C8()
{
  uint64_t v17 = v0;
  uint64_t v1 = (void *)v0[50];
  static Logger.widget.getter();
  v0[94] = *v1;
  v0[95] = v1[1];
  v0[96] = v1[2];
  v0[97] = v1[3];
  v0[98] = v1[4];
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v13 = v0[84];
    uint64_t v14 = v0[83];
    uint64_t v15 = v0[89];
    log = v2;
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    IntentParameter.wrappedValue.getter();
    v0[42] = sub_10004B974(v0[26], v0[27], &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, log, v3, "PlayPauseWidgetIntent: Toggling %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v5(v15, v14);
  }
  else
  {
    uint64_t v6 = v0[89];
    uint64_t v7 = v0[84];
    uint64_t v8 = v0[83];
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();

    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v5(v6, v8);
  }
  v0[99] = v5;
  AppDependency.wrappedValue.getter();
  v0[100] = v0[36];
  uint64_t v9 = sub_100054B78(&qword_1005F7050);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[101] = v10;
  void *v10 = v0;
  v10[1] = sub_1001DF518;
  return BaseObjectGraph.inject<A>(_:)(v0 + 46, v9, v9);
}

uint64_t sub_1001DF518()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 816) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 744);
    uint64_t v4 = *(void *)(v2 + 736);
    uint64_t v5 = sub_1001E12CC;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 744);
    uint64_t v4 = *(void *)(v2 + 736);
    uint64_t v5 = sub_1001DF63C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1001DF63C()
{
  uint64_t v56 = v0;
  uint64_t v1 = *(void *)(v0 + 656);
  IntentParameter.wrappedValue.getter();
  uint64_t v2 = EpisodeStateController.stateMachine(for:)();
  *(void *)(v0 + 824) = v2;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v54 = v2;
  dispatch thunk of EpisodeStateMachine.currentState.getter();
  char v3 = EpisodePlayState.isEpisodePlaying.getter();
  *(unsigned char *)(v0 + 82) = v3 & 1;
  sub_1001DD6C0(v1);
  static Logger.widget.getter();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  char v37 = v3;
  if (os_log_type_enabled(v4, v5))
  {
    id v50 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
    uint64_t v45 = *(void *)(v0 + 664);
    uint64_t v46 = *(void *)(v0 + 704);
    uint64_t v6 = swift_slowAlloc();
    v55[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    if (v3) {
      uint64_t v7 = 0xD000000000000010;
    }
    else {
      uint64_t v7 = 0x6974736575716552;
    }
    if (v3) {
      unint64_t v8 = 0x80000001004D57D0;
    }
    else {
      unint64_t v8 = 0xEF79616C5020676ELL;
    }
    *(void *)(v0 + 36sub_1001DA808(0, 0) = sub_10004B974(v7, v8, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    IntentParameter.wrappedValue.getter();
    *(void *)(v0 + 376) = sub_10004B974(*(void *)(v0 + 224), *(void *)(v0 + 232), v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "PlayPauseWidgetIntent: %s %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v50(v46, v45);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
    uint64_t v10 = *(void *)(v0 + 704);
    uint64_t v11 = *(void *)(v0 + 664);
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();

    v9(v10, v11);
  }
  IntentParameter.wrappedValue.getter();
  IntentParameter.wrappedValue.getter();
  uint64_t v12 = *(void *)(v0 + 816);
  if (*(void *)(v0 + 184))
  {
    swift_bridgeObjectRetain();
    static AdamID.parse(_:)();
    swift_bridgeObjectRelease();
    if (v12)
    {
      static AdamID.empty.getter();
      swift_errorRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = 0;
  }
  IntentParameter.wrappedValue.getter();
  if (*(void *)(v0 + 200))
  {
    swift_bridgeObjectRetain();
    static AdamID.parse(_:)();
    swift_bridgeObjectRelease();
    if (v12)
    {
      static AdamID.empty.getter();
      swift_errorRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = *(void *)(v0 + 648);
  uint64_t v14 = *(void *)(v0 + 632);
  uint64_t v15 = *(void *)(v0 + 624);
  uint64_t v40 = *(void *)(v0 + 616);
  *(void *)(v0 + 16) = 1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 4sub_1001DA808(0, 0) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 8sub_1001DA808(0, 0) = 5;
  EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)();
  uint64_t v16 = type metadata accessor for EpisodeListSettings();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 0, 1, v16);
  static ActionMetrics.notInstrumented.getter();
  uint64_t v17 = type metadata accessor for LibraryPlayPauseAction();
  swift_allocObject();
  uint64_t v18 = LibraryPlayPauseAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:isSmartPlayButton:isWidgetPlayButton:timestamp:waitForEngine:shouldPreventQueueing:actionMetrics:)();
  *(void *)(v0 + 832) = v18;
  AppDependency.wrappedValue.getter();
  *(void *)(v0 + 112) = v17;
  *(void *)(v0 + 12sub_1001DA808(0, 0) = sub_1001E20C8(&qword_1005F9B08, (void (*)(uint64_t))&type metadata accessor for LibraryPlayPauseAction);
  *(void *)(v0 + 88) = v18;
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v14, enum case for ActionMetricsBehavior.notProcessed(_:), v40);
  swift_retain();
  AppDependency.wrappedValue.getter();
  type metadata accessor for FlowActionRunner();
  sub_1001E20C8(&qword_1005F9B10, (void (*)(uint64_t))&type metadata accessor for FlowActionRunner);
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v40);
  sub_10004D2D8(v0 + 88);
  static Logger.widget.getter();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  unint64_t v19 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v19, v53);
  unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
  uint64_t v22 = *(void *)(v0 + 696);
  uint64_t v23 = *(void *)(v0 + 664);
  if (v20)
  {
    uint64_t v51 = *(void *)(v0 + 664);
    uint64_t v48 = *(void *)(v0 + 696);
    uint64_t v24 = swift_slowAlloc();
    v55[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    IntentParameter.wrappedValue.getter();
    *(void *)(v0 + 344) = sub_10004B974(*(void *)(v0 + 240), *(void *)(v0 + 248), v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_release();
    *(_WORD *)(v24 + 12) = 2080;
    if (v37) {
      uint64_t v25 = 0x6573756170;
    }
    else {
      uint64_t v25 = 0x6C70207472617473;
    }
    if (v37) {
      unint64_t v26 = 0xE500000000000000;
    }
    else {
      unint64_t v26 = 0xED0000676E697961;
    }
    *(void *)(v0 + 352) = sub_10004B974(v25, v26, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v53, "PlayPauseWidgetIntent: Waiting for %{public}s to %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v21(v48, v51);
  }
  else
  {
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();

    v21(v22, v23);
  }
  uint64_t v39 = *(void *)(v0 + 584);
  uint64_t v52 = *(void *)(v0 + 576);
  os_log_t log = *(os_log_t *)(v0 + 568);
  uint64_t v27 = *(void *)(v0 + 560);
  uint64_t v38 = *(void *)(v0 + 544);
  uint64_t v28 = *(void *)(v0 + 536);
  uint64_t v29 = *(void *)(v0 + 528);
  uint64_t v30 = *(void *)(v0 + 520);
  uint64_t v32 = *(void *)(v0 + 504);
  uint64_t v31 = *(void *)(v0 + 512);
  uint64_t v33 = *(void *)(v0 + 496);
  uint64_t v41 = *(void *)(v0 + 552);
  uint64_t v42 = *(void *)(v0 + 488);
  uint64_t v47 = *(void *)(v0 + 480);
  uint64_t v49 = *(void *)(v0 + 472);
  uint64_t v43 = *(void *)(v0 + 464);
  sub_100054B78(&qword_1005F9B18);
  sub_100044200(&qword_1005F9B20, &qword_1005F9B18);
  *(void *)(v0 + 312) = ObservableObject<>.objectWillChange.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))(v28, enum case for Publishers.PrefetchStrategy.byRequest(_:), v30);
  (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v31, enum case for Publishers.BufferingStrategy.dropOldest<A>(_:), v33);
  type metadata accessor for ObservableObjectPublisher();
  Publisher.buffer(size:prefetch:whenFull:)();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  swift_release();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1001E2054;
  *(void *)(v34 + 24) = v54;
  sub_100044200(&qword_1005F9B28, &qword_1005F9AF0);
  swift_retain();
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v27, v38);
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  sub_1000566BC();
  *(void *)(v0 + 272) = static OS_dispatch_queue.main.getter();
  uint64_t v35 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v43, 1, 1, v35);
  sub_100044200(&qword_1005F9B30, &qword_1005F9AF8);
  sub_1001E20C8((unint64_t *)&qword_1005F8B80, (void (*)(uint64_t))sub_1000566BC);
  Publisher.timeout<A>(_:scheduler:options:customError:)();
  sub_100059C48(v43);

  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v42, v49);
  (*(void (**)(uint64_t, os_log_t))(v52 + 8))(v39, log);
  sub_100044200(&qword_1005F9B38, &qword_1005F9B00);
  Publisher<>.values.getter();
  return _swift_task_switch(sub_1001E0428, 0, 0);
}

uint64_t sub_1001E0428()
{
  (*(void (**)(void, void, void))(v0[55] + 16))(v0[56], v0[57], v0[54]);
  sub_100044200(&qword_1005F9B40, &qword_1005F9AE0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100044200(&qword_1005F9B48, &qword_1005F9AD8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[105] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001E0564;
  uint64_t v3 = v0[51];
  return dispatch thunk of AsyncIteratorProtocol.next()((char *)v0 + 81, v3, v1);
}

uint64_t sub_1001E0564()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[53];
    uint64_t v4 = v2[51];
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2[52] + 8);
    return v5(v3, v4);
  }
  else
  {
    return _swift_task_switch(sub_1001E0698, 0, 0);
  }
}

uint64_t sub_1001E0698()
{
  int v1 = *(unsigned __int8 *)(v0 + 81);
  *(unsigned char *)(v0 + 83) = v1;
  if (v1 == 2)
  {
    uint64_t v2 = *(void *)(v0 + 456);
    uint64_t v3 = *(void *)(v0 + 432);
    uint64_t v4 = *(void *)(v0 + 440);
    (*(void (**)(void, void))(*(void *)(v0 + 416) + 8))(*(void *)(v0 + 424), *(void *)(v0 + 408));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    uint64_t v5 = *(void *)(v0 + 744);
    uint64_t v6 = *(void *)(v0 + 736);
    uint64_t v7 = sub_1001E0964;
  }
  else
  {
    *(void *)(v0 + 848) = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v9;
    uint64_t v7 = sub_1001E0794;
    uint64_t v6 = v8;
    uint64_t v5 = v10;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_1001E0794()
{
  swift_release();
  return _swift_task_switch(sub_1001E07FC, 0, 0);
}

uint64_t sub_1001E07FC()
{
  if (*(unsigned char *)(v0 + 82) == ((*(unsigned char *)(v0 + 83) & 1) == 0))
  {
    uint64_t v4 = *(void *)(v0 + 456);
    uint64_t v5 = *(void *)(v0 + 432);
    uint64_t v6 = *(void *)(v0 + 440);
    (*(void (**)(void, void))(*(void *)(v0 + 416) + 8))(*(void *)(v0 + 424), *(void *)(v0 + 408));
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v7 = *(void *)(v0 + 744);
    uint64_t v8 = *(void *)(v0 + 736);
    return _swift_task_switch(sub_1001E0E18, v8, v7);
  }
  else
  {
    uint64_t v1 = sub_100044200(&qword_1005F9B48, &qword_1005F9AD8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 84sub_1001DA808(0, 0) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1001E0564;
    uint64_t v3 = *(void *)(v0 + 408);
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 81, v3, v1);
  }
}

uint64_t sub_1001E0964()
{
  uint64_t v19 = v0;
  swift_release();
  static Logger.widget.getter();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    int v14 = *(unsigned __int8 *)(v0 + 82);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
    uint64_t v15 = *(void *)(v0 + 664);
    uint64_t v16 = *(void *)(v0 + 688);
    uint64_t v3 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446466;
    IntentParameter.wrappedValue.getter();
    *(void *)(v0 + 296) = sub_10004B974(*(void *)(v0 + 128), *(void *)(v0 + 136), &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_release();
    *(_WORD *)(v3 + 12) = 2080;
    if (v14) {
      uint64_t v4 = 0x6573756170;
    }
    else {
      uint64_t v4 = 0x6C70207472617473;
    }
    if (v14) {
      unint64_t v5 = 0xE500000000000000;
    }
    else {
      unint64_t v5 = 0xED0000676E697961;
    }
    *(void *)(v0 + 304) = sub_10004B974(v4, v5, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "PlayPauseWidgetIntent: timed out waiting for %{public}s to %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v17(v16, v15);
  }
  else
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
    uint64_t v7 = *(void *)(v0 + 688);
    uint64_t v8 = *(void *)(v0 + 664);
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();

    v6(v7, v8);
  }
  uint64_t v9 = *(void *)(v0 + 608);
  uint64_t v10 = *(void *)(v0 + 600);
  uint64_t v11 = *(void *)(v0 + 592);
  static IntentResult.result<>()();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1001E0E18()
{
  uint64_t v19 = v0;
  swift_release();
  static Logger.widget.getter();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    int v14 = *(unsigned __int8 *)(v0 + 82);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
    uint64_t v15 = *(void *)(v0 + 664);
    uint64_t v16 = *(void *)(v0 + 680);
    uint64_t v3 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446466;
    IntentParameter.wrappedValue.getter();
    *(void *)(v0 + 32sub_1001DA808(0, 0) = sub_10004B974(*(void *)(v0 + 256), *(void *)(v0 + 264), &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_release();
    *(_WORD *)(v3 + 12) = 2080;
    if (v14) {
      uint64_t v4 = 0x646573756170;
    }
    else {
      uint64_t v4 = 0x2064657472617473;
    }
    if (v14) {
      unint64_t v5 = 0xE600000000000000;
    }
    else {
      unint64_t v5 = 0xEF676E6979616C70;
    }
    *(void *)(v0 + 328) = sub_10004B974(v4, v5, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "PlayPauseWidgetIntent: %{public}s %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v17(v16, v15);
  }
  else
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
    uint64_t v7 = *(void *)(v0 + 680);
    uint64_t v8 = *(void *)(v0 + 664);
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();

    v6(v7, v8);
  }
  uint64_t v9 = *(void *)(v0 + 608);
  uint64_t v10 = *(void *)(v0 + 600);
  uint64_t v11 = *(void *)(v0 + 592);
  static IntentResult.result<>()();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1001E12CC()
{
  swift_release();
  return swift_unexpectedError();
}

uint64_t sub_1001E1338()
{
  uint64_t v0 = type metadata accessor for EpisodePlayState();
  __chkstk_darwin(v0 - 8);
  os_log_type_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of EpisodeStateMachine.currentState.getter();
  char v3 = EpisodePlayState.isEpisodePlaying.getter();
  sub_1001DD6C0((uint64_t)v2);
  return v3 & 1;
}

uint64_t sub_1001E13C0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1005F5A28 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10018A370(v2, (uint64_t)qword_10061A9B0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1001E1478(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1001E1530;
  return sub_1001DEC7C(a1);
}

uint64_t sub_1001E1530()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double sub_1001E1624@<D0>(uint64_t a1@<X8>)
{
  sub_1001E1A08((uint64_t *)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1001E1668(uint64_t a1)
{
  unint64_t v2 = sub_1001DEAA8();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_1001E16A4()
{
  return sub_1001E1974();
}

uint64_t destroy for PlayPauseWidgetIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for PlayPauseWidgetIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PlayPauseWidgetIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for PlayPauseWidgetIntent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PlayPauseWidgetIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayPauseWidgetIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayPauseWidgetIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4sub_1001DA808(0, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4sub_1001DA808(0, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayPauseWidgetIntent()
{
  return &type metadata for PlayPauseWidgetIntent;
}

uint64_t sub_1001E1938()
{
  return sub_100044200(&qword_1005F9A88, &qword_1005F9A90);
}

uint64_t sub_1001E1974()
{
  return 1;
}

uint64_t sub_1001E1A08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v47 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  long long v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78(&qword_1005F9A98);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78(&qword_1005F9AA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_1005F9AA8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LocalizedStringResource();
  uint64_t v35 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_100054B78(&qword_1005F9AB0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v40(v12, 1, 1, v13);
  uint64_t v41 = type metadata accessor for String.IntentInputOptions();
  uint64_t v49 = 0;
  unint64_t v50 = 0;
  uint64_t v15 = *(void *)(v41 - 8);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v39 = v15 + 56;
  v34(v9, 1, 1, v41);
  uint64_t v45 = type metadata accessor for IntentDialog();
  uint64_t v16 = *(void *)(v45 - 8);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v46 = v16 + 56;
  uint64_t v31 = v6;
  v44(v6, 1, 1, v45);
  unsigned int v43 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v33 = *(void (**)(char *))(v1 + 104);
  uint64_t v42 = v1 + 104;
  uint64_t v32 = v3;
  uint64_t v17 = v47;
  v33(v3);
  uint64_t v37 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_100054B78(&qword_1005F9AB8);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v18 = v35;
  v40(v12, 1, 1, v35);
  uint64_t v49 = 0;
  unint64_t v50 = 0;
  uint64_t v19 = v34;
  v34(v9, 1, 1, v41);
  uint64_t v20 = v31;
  v44(v31, 1, 1, v45);
  unint64_t v21 = v32;
  uint64_t v22 = v17;
  uint64_t v23 = v33;
  ((void (*)(char *, void, uint64_t))v33)(v32, v43, v22);
  uint64_t v36 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  v40(v12, 1, 1, v18);
  uint64_t v49 = 0;
  unint64_t v50 = 0;
  v19(v9, 1, 1, v41);
  v44(v20, 1, 1, v45);
  ((void (*)(char *, void, uint64_t))v23)(v21, v43, v47);
  uint64_t v24 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_100054B78(&qword_1005F9AC0);
  char v48 = 1;
  sub_10005E33C();
  swift_retain();
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v25 = AppDependency.__allocating_init(key:manager:)();
  sub_100054B78(&qword_1005F9AC8);
  char v48 = 2;
  swift_retain();
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t v26 = AppDependency.__allocating_init(key:manager:)();
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  uint64_t v27 = v37;
  swift_retain();
  uint64_t v28 = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  IntentParameter.wrappedValue.setter();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  uint64_t v30 = v38;
  *uint64_t v38 = v27;
  v30[1] = v28;
  v30[2] = v24;
  v30[3] = v25;
  void v30[4] = v26;
  return result;
}

uint64_t sub_1001E2054()
{
  return sub_1001E1338();
}

uint64_t sub_1001E205C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001E2094@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1001E20C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001E2110()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v2);
  uint64_t v4 = v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = v1[13];
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v6 = v5 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess();
  sub_1001AC690(v6, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1001AC758((uint64_t)v4);
LABEL_7:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v14 = 2;
  dispatch thunk of PodcastStateController.stateMachine(for:initialState:)();
  dispatch thunk of PodcastStateMachine.currentState.getter();
  swift_release();
  char v7 = PodcastState.isSubscribed.getter();
  sub_1001E2BF8((uint64_t)v11);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_100041A98(v1 + 2, v1[5]);
  char v8 = dispatch thunk of LibraryActionControllerProtocol.hasDownloadedEpisodes(podcastUuid:)();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1001E2288()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for PresentationSource();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for PodcastContextActionDataType(0);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v1[13];
  if (v13)
  {
    uint64_t v14 = v13 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess();
    sub_1001AC690(v14, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() == 1) {
      return sub_1001AC758((uint64_t)v12);
    }
    swift_beginAccess();
    if (v1[14])
    {
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
      swift_release();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
        sub_100041A98(v1 + 7, v1[10]);
        uint64_t v15 = (void *)dispatch thunk of LibraryRemovalControllerProtocol.removeAllDownloadsAlertController(uuid:)();
        swift_bridgeObjectRelease();
        PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)();

        return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }
    swift_bridgeObjectRelease();
    return sub_100054B1C((uint64_t)v4, (uint64_t *)&unk_100605DC0);
  }
  return result;
}

uint64_t sub_1001E2558()
{
  sub_10004D2D8(v0 + 16);
  sub_10004D2D8(v0 + 56);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts39RemoveAllDownloadsFromShowContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100054B1C(v0 + OBJC_IVAR____TtC8Podcasts39RemoveAllDownloadsFromShowContextAction_contextActionType, &qword_1005F9A58);
  return v0;
}

uint64_t sub_1001E260C()
{
  sub_1001E2558();

  return swift_deallocClassInstance();
}

uint64_t sub_1001E2664()
{
  return type metadata accessor for RemoveAllDownloadsFromShowContextAction();
}

uint64_t type metadata accessor for RemoveAllDownloadsFromShowContextAction()
{
  uint64_t result = qword_1005F9B78;
  if (!qword_1005F9B78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001E26B8()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_1001DE3EC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1001E27C8()
{
  return swift_retain();
}

uint64_t sub_1001E27D0(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
  return swift_release();
}

uint64_t sub_1001E27E0()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001E2810()
{
  return 2;
}

uint64_t sub_1001E2818()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001E2848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts39RemoveAllDownloadsFromShowContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1001E28BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE984(v1 + OBJC_IVAR____TtC8Podcasts39RemoveAllDownloadsFromShowContextAction_contextActionType, a1);
}

uint64_t sub_1001E28D8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266940(a1, a2, WitnessTable);
}

uint64_t sub_1001E2938()
{
  return swift_retain();
}

uint64_t sub_1001E2970(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t (*sub_1001E29B8())()
{
  return j__swift_endAccess;
}

void *sub_1001E2A0C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_1001E2A6C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_1001E2ACC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_1001E2B2C(uint64_t a1)
{
  uint64_t result = sub_1001E2BB4(&qword_1005F9C88);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001E2B70(uint64_t a1)
{
  uint64_t result = sub_1001E2BB4((unint64_t *)&unk_1005F9C90);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001E2BB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RemoveAllDownloadsFromShowContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001E2BF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001E2C2C()
{
  uint64_t v1 = &v0[OBJC_IVAR___CarPlayController_cachedScale];
  if (v0[OBJC_IVAR___CarPlayController_cachedScale + 8] != 1)
  {
    uint64_t v7 = 0;
    return sub_1000536BC((uint64_t)v7);
  }
  uint64_t v2 = v0;
  if ([self isMainThread])
  {
    uint64_t v3 = *(void **)&v0[OBJC_IVAR___CarPlayController_interfaceController];
    if (v3)
    {
      id v4 = [v3 carTraitCollection];
      [v4 displayScale];
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v6 = 0;
    }
    uint64_t v7 = 0;
    *(void *)uint64_t v1 = v6;
    v1[8] = v3 == 0;
    return sub_1000536BC((uint64_t)v7);
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v8 = static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1001ED42C;
  *(void *)(v10 + 24) = v9;
  v14[4] = sub_100018840;
  void v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  void v14[2] = sub_100018818;
  v14[3] = &unk_100558A78;
  uint64_t v11 = _Block_copy(v14);
  id v12 = v2;
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v8, v11);

  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v8 & 1) == 0)
  {
    uint64_t v7 = sub_1001ED42C;
    return sub_1000536BC((uint64_t)v7);
  }
  __break(1u);
  return result;
}

void CarPlayController.deviceInfo.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___CarPlayController____lazy_storage___deviceInfo;
  if (*(unsigned char *)(v1 + OBJC_IVAR___CarPlayController____lazy_storage___deviceInfo + 56))
  {
    double v4 = sub_1001E2F70();
    uint64_t v6 = v5;
    double v7 = sub_1001E2F70();
    uint64_t v9 = v8;
    sub_1001E2C2C();
    uint64_t v11 = v10;
    id v12 = [self maximumItemCount];
    *(double *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = v6;
    *(double *)(v3 + 16) = v7;
    *(void *)(v3 + 24) = v9;
    *(void *)(v3 + 32) = v11;
    *(void *)(v3 + 4sub_1001DA808(0, 0) = v12;
    *(void *)(v3 + 48) = 200;
    *(unsigned char *)(v3 + 56) = 0;
    int64x2_t v13 = vdupq_n_s64(0xC8uLL);
    v13.i64[0] = (uint64_t)v12;
  }
  else
  {
    int64x2_t v13 = *(int64x2_t *)(v3 + 40);
    uint64_t v9 = *(void *)(v3 + 24);
    uint64_t v11 = *(void *)(v3 + 32);
    uint64_t v6 = *(void *)(v3 + 8);
    double v7 = *(double *)(v3 + 16);
    double v4 = *(double *)v3;
  }
  *(double *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(double *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v11;
  *(int64x2_t *)(a1 + 4sub_1001DA808(0, 0) = v13;
}

double sub_1001E2F70()
{
  sub_1001E2C2C();
  double v1 = v0;
  uint64_t v2 = self;
  [v2 maximumImageSize];
  double v4 = v1 * v3;
  sub_1001E2C2C();
  [v2 maximumImageSize];
  uint64_t v5 = self;
  id v6 = [v5 mainScreen];
  [v6 scale];
  double v8 = v7;

  double v9 = sub_1001ED360(v4 / v8);
  sub_1001E2C2C();
  [v2 maximumImageSize];
  sub_1001E2C2C();
  double v11 = v10;
  [v2 maximumImageSize];
  double v13 = v11 * v12;
  id v14 = [v5 mainScreen];
  [v14 scale];
  double v16 = v15;

  sub_1001ED360(v13 / v16);
  return v9;
}

id _s8Podcasts17CarPlayControllerC17listenNowTemplate33_1837259AE273DECDE141DFAB9CAB2C47LLSo06CPListG0Cvpfi_0()
{
  uint64_t v0 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v34[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v34[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Podcasts();
  v34[3] = v7;
  v34[4] = sub_100022EA4((unint64_t *)&qword_1005F79D0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  double v8 = sub_10004A244(v34);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, enum case for Podcasts.homeTab(_:), v7);
  LOBYTE(v7) = isFeatureEnabled(_:)();
  sub_10004D2D8((uint64_t)v34);
  if (v7)
  {
    id v9 = [self mainBundle];
    v35._unint64_t object = (void *)0xE000000000000000;
    v10._uint64_t countAndFlagsBits = 0x454D4F485F424154;
    v10._unint64_t object = (void *)0xE800000000000000;
    v11._uint64_t countAndFlagsBits = 0;
    v11._unint64_t object = (void *)0xE000000000000000;
    v35._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v35);

    id v12 = objc_allocWithZone((Class)CPListTemplate);
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v15 = [v12 initWithTitle:v13 sections:isa];

    id v33 = v15;
    id v16 = v15;
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [self _systemImageNamed:v17];

    if (v18) {
      goto LABEL_5;
    }
LABEL_6:
    id v27 = 0;
    goto LABEL_7;
  }
  id v19 = [self mainBundle];
  v36._unint64_t object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0x4E5F4E455453494CLL;
  v20._unint64_t object = (void *)0xEA0000000000574FLL;
  v21._uint64_t countAndFlagsBits = 0;
  v21._unint64_t object = (void *)0xE000000000000000;
  v36._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v36);

  id v22 = objc_allocWithZone((Class)CPListTemplate);
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
  Class v24 = Array._bridgeToObjectiveC()().super.isa;
  id v25 = [v22 initWithTitle:v23 sections:v24];

  id v33 = v25;
  id v16 = v25;
  NSString v26 = String._bridgeToObjectiveC()();
  id v18 = [self _systemImageNamed:v26];

  if (!v18) {
    goto LABEL_6;
  }
LABEL_5:
  id v27 = [v18 imageWithRenderingMode:2];

LABEL_7:
  [v16 setTabImage:v27];

  swift_storeEnumTagMultiPayload();
  uint64_t v28 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  sub_1001BF8D0((uint64_t)v6, (uint64_t)v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  uint64_t v29 = (uint64_t)&v28[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_100039D84((uint64_t)v2, v29, (uint64_t *)&unk_1005F8CF0);
  swift_endAccess();
  v28[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_10004D29C(0, &qword_1005F88B0);
  uint64_t v30 = NSString.init(stringLiteral:)();
  uint64_t v31 = v28;
  sub_1001BFA4C((uint64_t)v30, (uint64_t)v28);

  return v33;
}

id _s8Podcasts17CarPlayControllerC14browseTemplate33_1837259AE273DECDE141DFAB9CAB2C47LLSo06CPListF0Cvpfi_0()
{
  uint64_t v0 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v27[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  id v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = [self mainBundle];
  v29._unint64_t object = (void *)0xE600000000000000;
  v11._unint64_t object = (void *)0x80000001004D5BA0;
  v11._uint64_t countAndFlagsBits = 0xD000000000000012;
  v12._uint64_t countAndFlagsBits = 0;
  v12._unint64_t object = (void *)0xE000000000000000;
  v29._uint64_t countAndFlagsBits = 0x6573776F7242;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v29);

  id v13 = objc_allocWithZone((Class)CPListTemplate);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v16 = [v13 initWithTitle:v14 sections:isa];

  id v28 = v16;
  id v17 = v16;
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [self _systemImageNamed:v18];

  if (v19)
  {
    id v20 = [v19 imageWithRenderingMode:2];
  }
  else
  {
    id v20 = 0;
  }
  [v17 setTabImage:v20];

  static ASKConstants.PodcastCatalogUrl.getter();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(int *)(sub_100054B78((uint64_t *)&unk_1005F88C0) + 48);
  sub_100054BBC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1005F7750);
  *(void *)&v6[v21] = 0;
  swift_storeEnumTagMultiPayload();
  id v22 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  sub_1001BF8D0((uint64_t)v6, (uint64_t)v2);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  uint64_t v23 = (uint64_t)&v22[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_100039D84((uint64_t)v2, v23, (uint64_t *)&unk_1005F8CF0);
  swift_endAccess();
  v22[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_10004D29C(0, &qword_1005F88B0);
  Class v24 = NSString.init(stringLiteral:)();
  id v25 = v22;
  sub_1001BFA4C((uint64_t)v24, (uint64_t)v22);

  sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
  return v28;
}

id _s8Podcasts17CarPlayControllerC15libraryTemplate33_1837259AE273DECDE141DFAB9CAB2C47LLSo06CPListF0Cvpfi_0()
{
  uint64_t v0 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v23[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v7 = [self mainBundle];
  v25._unint64_t object = (void *)0xE700000000000000;
  v8._uint64_t countAndFlagsBits = 0x5242494C5F424154;
  v8._unint64_t object = (void *)0xEB00000000595241;
  v9._uint64_t countAndFlagsBits = 0;
  v9._unint64_t object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0x7972617262694CLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v25);

  id v10 = objc_allocWithZone((Class)CPListTemplate);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v13 = [v10 initWithTitle:v11 sections:isa];

  id v24 = v13;
  id v14 = v13;
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [self _systemImageNamed:v15];

  if (v16)
  {
    id v17 = [v16 imageWithRenderingMode:2];
  }
  else
  {
    id v17 = 0;
  }
  [v14 setTabImage:v17];

  swift_storeEnumTagMultiPayload();
  NSString v18 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  sub_1001BF8D0((uint64_t)v6, (uint64_t)v2);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  uint64_t v19 = (uint64_t)&v18[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_100039D84((uint64_t)v2, v19, (uint64_t *)&unk_1005F8CF0);
  swift_endAccess();
  v18[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_10004D29C(0, &qword_1005F88B0);
  id v20 = NSString.init(stringLiteral:)();
  uint64_t v21 = v18;
  sub_1001BFA4C((uint64_t)v20, (uint64_t)v18);

  return v24;
}

id _s8Podcasts17CarPlayControllerC16stationsTemplate33_1837259AE273DECDE141DFAB9CAB2C47LLSo06CPListF0Cvpfi_0()
{
  uint64_t v0 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v23[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v7 = [self mainBundle];
  v25._unint64_t object = (void *)0xE800000000000000;
  v8._unint64_t object = (void *)0x80000001004D5B30;
  v8._uint64_t countAndFlagsBits = 0xD000000000000014;
  v9._uint64_t countAndFlagsBits = 0;
  v9._unint64_t object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0x736E6F6974617453;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v25);

  id v10 = objc_allocWithZone((Class)CPListTemplate);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v13 = [v10 initWithTitle:v11 sections:isa];

  id v24 = v13;
  id v14 = v13;
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [self _systemImageNamed:v15];

  if (v16)
  {
    id v17 = [v16 imageWithRenderingMode:2];
  }
  else
  {
    id v17 = 0;
  }
  [v14 setTabImage:v17];

  swift_storeEnumTagMultiPayload();
  NSString v18 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
  sub_1001BF8D0((uint64_t)v6, (uint64_t)v2);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  uint64_t v19 = (uint64_t)&v18[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess();
  sub_100039D84((uint64_t)v2, v19, (uint64_t *)&unk_1005F8CF0);
  swift_endAccess();
  v18[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_10004D29C(0, &qword_1005F88B0);
  id v20 = NSString.init(stringLiteral:)();
  uint64_t v21 = v18;
  sub_1001BFA4C((uint64_t)v20, (uint64_t)v18);

  return v24;
}

id CarPlayController.welcomeScreenTemplate.getter()
{
  return sub_1001E41CC(&OBJC_IVAR___CarPlayController____lazy_storage___welcomeScreenTemplate, (uint64_t (*)(void))sub_1001EAAFC);
}

id CarPlayController.migrationTemplate.getter()
{
  return sub_1001E41CC(&OBJC_IVAR___CarPlayController____lazy_storage___migrationTemplate, (uint64_t (*)(void))sub_1001E422C);
}

id sub_1001E41CC(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1001E422C()
{
  id v0 = [self mainBundle];
  v10._unint64_t object = (void *)0xAA0000000000A680;
  v1._unint64_t object = (void *)0x80000001004D5A40;
  v1._uint64_t countAndFlagsBits = 0xD000000000000011;
  v2._uint64_t countAndFlagsBits = 0;
  v2._unint64_t object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0xE2676E6964616F4CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v10);

  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10046D010;
  *(Swift::String *)(v4 + 32) = v3;
  id v5 = objc_allocWithZone((Class)CPAlertTemplate);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10004D29C(0, &qword_1005F9F10);
  Class v7 = Array._bridgeToObjectiveC()().super.isa;
  id v8 = [v5 initWithTitleVariants:isa actions:v7];

  return v8;
}

uint64_t CarPlayController.setUpCarPlayInterface()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78(&qword_1005F9EA0);
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005F9EA8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = __chkstk_darwin(v9);
  id v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *(void **)(v1 + OBJC_IVAR___CarPlayController_interfaceController);
  if (v14 && *(void *)(v1 + OBJC_IVAR___CarPlayController_graph))
  {
    uint64_t v28 = v6;
    uint64_t v29 = v5;
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    id v27 = v14;
    swift_retain();
    static OS_os_log.carPlay.getter();
    NSString v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Setting up the CarPlay interface.", v17, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    id v18 = v27;
    [v27 setDelegate:v1];
    type metadata accessor for CarPlayStationsProvider();
    uint64_t inited = swift_initStackObject();
    sub_100054B78((uint64_t *)&unk_1005F8AE0);
    swift_allocObject();
    swift_retain();
    *(void *)(inited + 32) = PassthroughSubject.init()();
    sub_100054B78(&qword_1005FD620);
    type metadata accessor for BaseObjectGraph();
    inject<A, B>(_:from:)();
    swift_release();
    long long v26 = v32;
    *(_OWORD *)(inited + 16) = v32;
    uint64_t v20 = sub_1001BFD68();
    swift_release();
    swift_unknownObjectRelease();
    *(void *)&long long v32 = v20;
    sub_100054B78((uint64_t *)&unk_1005F9EB0);
    sub_100044200(&qword_1005F8B98, (uint64_t *)&unk_1005F9EB0);
    Publisher.map<A>(_:)();
    swift_release();
    sub_100044200(&qword_1005F9EC0, &qword_1005F9EA0);
    uint64_t v21 = v31;
    Publisher<>.removeDuplicates()();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v21);
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v22;
    *(void *)(v23 + 24) = v18;
    sub_100044200(&qword_1005F9EC8, &qword_1005F9EA8);
    id v24 = v18;
    uint64_t v25 = v29;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v25);
    swift_beginAccess();
    sub_100054B78((uint64_t *)&unk_1005F9ED0);
    sub_100044200(qword_1005F8BB0, (uint64_t *)&unk_1005F9ED0);
    AnyCancellable.store<A>(in:)();
    swift_endAccess();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001E48FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_10:
      uint64_t v11 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRelease();
LABEL_11:
      *a2 = v11;
      return result;
    }
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  if (v4 < 1) {
    goto LABEL_16;
  }
  uint64_t v6 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v3 + 8 * v6 + 32);
    }
    id v8 = v7;
    ++v6;
    id v9 = [v7 items];
    sub_100054B78(&qword_1005F7E20);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1001B187C(v10);
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
    goto LABEL_10;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease_n();
  if ((v11 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_1001E4AE0(uint64_t *a1, uint64_t a2, void *a3)
{
  id v49 = a3;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v13 = (char *)Strong;
  uint64_t v48 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = v4;
    id v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v17 = 134217984;
    aBlock[0] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "The finish fetching stations with station items count %lu.", v17, 0xCu);
    uint64_t v4 = v16;
    swift_slowDealloc();
  }

  id v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v10, v4);
  if (v11)
  {
    if (*(void *)&v13[OBJC_IVAR___CarPlayController_previousStationItemsCount])
    {
      uint64_t v19 = _swiftEmptyArrayStorage;
      goto LABEL_10;
    }
    uint64_t v47 = v4;
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_10046ECF0;
    uint64_t v46 = v18;
    uint64_t v25 = *(void **)&v13[OBJC_IVAR___CarPlayController_listenNowTemplate];
    *(void *)(v24 + 32) = v25;
    uint64_t v21 = *(void **)&v13[OBJC_IVAR___CarPlayController_browseTemplate];
    *(void *)(v24 + 4sub_1001DA808(0, 0) = v21;
    uint64_t v22 = *(void **)&v13[OBJC_IVAR___CarPlayController_libraryTemplate];
    *(void *)(v24 + 48) = v22;
    uint64_t v23 = *(void **)&v13[OBJC_IVAR___CarPlayController_stationsTemplate];
    *(void *)(v24 + 56) = v23;
    aBlock[0] = v24;
    specialized Array._endMutation()();
    uint64_t v19 = (void *)aBlock[0];
    id v26 = v25;
    id v18 = v46;
  }
  else
  {
    uint64_t v47 = v4;
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_10046D070;
    uint64_t v21 = *(void **)&v13[OBJC_IVAR___CarPlayController_listenNowTemplate];
    *(void *)(v20 + 32) = v21;
    uint64_t v22 = *(void **)&v13[OBJC_IVAR___CarPlayController_browseTemplate];
    *(void *)(v20 + 4sub_1001DA808(0, 0) = v22;
    uint64_t v23 = *(void **)&v13[OBJC_IVAR___CarPlayController_libraryTemplate];
    *(void *)(v20 + 48) = v23;
    aBlock[0] = v20;
    specialized Array._endMutation()();
    uint64_t v19 = (void *)aBlock[0];
  }
  id v27 = v21;
  id v28 = v22;
  id v29 = v23;
  uint64_t v4 = v47;
LABEL_10:
  *(void *)&v13[OBJC_IVAR___CarPlayController_previousStationItemsCount] = v11;
  aBlock[0] = v19;
  sub_100054B78(&qword_1005F9EE0);
  sub_100044200(&qword_1005F9EE8, &qword_1005F9EE0);
  if (Collection.isNotEmpty.getter())
  {
    uint64_t v30 = OBJC_IVAR___CarPlayController_tabBarTemplate;
    uint64_t v31 = *(void **)&v13[OBJC_IVAR___CarPlayController_tabBarTemplate];
    if (v31)
    {
      sub_10004D29C(0, (unint64_t *)&unk_1005F9EF0);
      id v32 = v31;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v32 updateTemplates:isa];
    }
    else
    {
      id v38 = objc_allocWithZone((Class)CPTabBarTemplate);
      sub_10004D29C(0, (unint64_t *)&unk_1005F9EF0);
      swift_bridgeObjectRetain();
      Class v39 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v40 = [v38 initWithTemplates:v39];

      uint64_t v41 = *(void **)&v13[v30];
      *(void *)&v13[v30] = v40;
      id v42 = v40;

      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v19;
      aBlock[4] = sub_1001ED358;
      aBlock[5] = v43;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10018FFEC;
      uint64_t aBlock[3] = &unk_1005588E8;
      uint64_t v44 = _Block_copy(aBlock);
      swift_release();
      [v49 setRootTemplate:v42 animated:0 completion:v44];

      _Block_release(v44);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    static OS_os_log.carPlay.getter();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      Swift::String v36 = v18;
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 134217984;
      aBlock[0] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "The tab bar templates is empty with station items count %lu.", v37, 0xCu);
      id v18 = v36;
      swift_slowDealloc();
    }

    v18(v8, v4);
  }
}

uint64_t sub_1001E50C4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v39 - v10;
  unint64_t v40 = a3;
  if (a2)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    swift_errorRetain();
    static OS_os_log.carPlay.getter();
    swift_errorRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      Class v39 = (char *)v5;
      uint64_t v16 = (void *)v15;
      *(_DWORD *)id v14 = 138412290;
      uint64_t v17 = _convertErrorToNSError(_:)();
      *(void *)&long long v45 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v16 = v17;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Error setting the root tab bar template: %@", v14, 0xCu);
      sub_100054B78((uint64_t *)&unk_1005F9F00);
      swift_arrayDestroy();
      uint64_t v5 = (uint64_t)v39;
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v9 = v11;
    a3 = v40;
  }
  else
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    id v18 = Logger.logObject.getter();
    uint64_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v19, "Successfully created the root tab bar template.", v20, 2u);
      swift_slowDealloc();
    }
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (a3 >> 62)
  {
LABEL_52:
    swift_bridgeObjectRetain_n();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    if (v21) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v21)
    {
LABEL_11:
      unint64_t v22 = a3 & 0xC000000000000001;
      uint64_t v23 = 4;
      Class v39 = (char *)&type metadata for Any + 8;
      while (1)
      {
        if (v22) {
          id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v24 = *(id *)(a3 + 8 * v23);
        }
        uint64_t v25 = v24;
        uint64_t v26 = v23 - 3;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
          goto LABEL_52;
        }
        self;
        uint64_t v27 = swift_dynamicCastObjCClass();
        if (!v27)
        {

          if (v26 == v21) {
            return swift_bridgeObjectRelease_n();
          }
          goto LABEL_13;
        }
        id v28 = (void *)v27;
        id v29 = v25;
        if (objc_msgSend(v29, "userInfo", v39))
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v41 = 0u;
          long long v42 = 0u;
        }
        sub_100053820((uint64_t)&v41, (uint64_t)&v43, &qword_1005F5D30);
        if (!*((void *)&v44 + 1)) {
          break;
        }
        sub_10004D29C(0, (unint64_t *)&qword_1005F88D0);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_27;
        }
        uint64_t v30 = (void *)v41;
        strcpy((char *)&v43, "templateInfo");
        BYTE13(v43) = 0;
        HIWORD(v43) = -5120;
        id v31 = [v41 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
        swift_unknownObjectRelease();
        if (v31)
        {
          _bridgeAnyObjectToAny(_:)();

          swift_unknownObjectRelease();
        }
        else
        {

          long long v43 = 0u;
          long long v44 = 0u;
        }
        sub_100053820((uint64_t)&v43, (uint64_t)&v45, &qword_1005F5D30);
        if (!*((void *)&v46 + 1)) {
          goto LABEL_28;
        }
        type metadata accessor for CarPlayTemplateInfo(0);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_29;
        }
        id v32 = (id)v43;
LABEL_30:
        sub_1003DC840();

        swift_bridgeObjectRelease();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v28 setEmptyViewTitleVariants:isa];

        if ([v29 userInfo])
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v41 = 0u;
          long long v42 = 0u;
        }
        sub_100053820((uint64_t)&v41, (uint64_t)&v43, &qword_1005F5D30);
        if (!*((void *)&v44 + 1))
        {
          sub_100054B1C((uint64_t)&v43, &qword_1005F5D30);
LABEL_38:
          long long v45 = 0u;
          long long v46 = 0u;
LABEL_39:
          sub_100054B1C((uint64_t)&v45, &qword_1005F5D30);
LABEL_40:
          id v36 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
          goto LABEL_41;
        }
        sub_10004D29C(0, (unint64_t *)&qword_1005F88D0);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_38;
        }
        uint64_t v34 = (void *)v41;
        strcpy((char *)&v43, "templateInfo");
        BYTE13(v43) = 0;
        HIWORD(v43) = -5120;
        id v35 = [v41 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
        swift_unknownObjectRelease();
        if (v35)
        {
          _bridgeAnyObjectToAny(_:)();

          swift_unknownObjectRelease();
        }
        else
        {

          long long v43 = 0u;
          long long v44 = 0u;
        }
        sub_100053820((uint64_t)&v43, (uint64_t)&v45, &qword_1005F5D30);
        if (!*((void *)&v46 + 1)) {
          goto LABEL_39;
        }
        type metadata accessor for CarPlayTemplateInfo(0);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_40;
        }
        id v36 = (id)v43;
LABEL_41:
        sub_1003DC840();

        swift_bridgeObjectRelease();
        Class v37 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v28 setEmptyViewSubtitleVariants:v37];

        a3 = v40;
        if (v26 == v21) {
          return swift_bridgeObjectRelease_n();
        }
LABEL_13:
        ++v23;
      }
      sub_100054B1C((uint64_t)&v43, &qword_1005F5D30);
LABEL_27:
      long long v45 = 0u;
      long long v46 = 0u;
LABEL_28:
      sub_100054B1C((uint64_t)&v45, &qword_1005F5D30);
LABEL_29:
      id v32 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
      goto LABEL_30;
    }
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t CarPlayController.createProvider(forListTemplate:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v74 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v74 + 64);
  uint64_t v8 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v72 - v11;
  __chkstk_darwin(v10);
  id v14 = (char *)&v72 - v13;
  uint64_t v15 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  id v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v72 - v20;
  uint64_t v22 = *(void *)(v3 + OBJC_IVAR___CarPlayController_graph);
  if (!v22)
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  swift_retain();
  id v23 = a1;
  sub_1001EA894(0x6574616C706D6574, 0xEC0000006F666E49, &v82);
  uint64_t v75 = a2;
  if (*((void *)&v83 + 1))
  {
    type metadata accessor for CarPlayTemplateInfo(0);
    if (swift_dynamicCast())
    {
      id v24 = (id)aBlock[0];
      goto LABEL_8;
    }
  }
  else
  {
    sub_100054B1C((uint64_t)&v82, &qword_1005F5D30);
  }
  id v24 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
LABEL_8:

  uint64_t v25 = (uint64_t)v24 + OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type;
  swift_beginAccess();
  sub_100054BBC(v25, (uint64_t)v21, (uint64_t *)&unk_1005F8CF0);

  uint64_t v26 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v21, 1, v26) == 1)
  {
    swift_release();
LABEL_10:
    uint64_t v27 = (_OWORD *)v75;
    *(void *)(v75 + 32) = 0;
    _OWORD *v27 = 0u;
    v27[1] = 0u;
  }
  else
  {
    sub_100054BBC((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_1005F8CF0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_1001A5FC8((uint64_t)v18, (uint64_t)&v82);
        swift_retain();
        sub_1000536CC((uint64_t)&v82, (void (*)(void, void, void, void, void, void, void, void, char))sub_1001A5920);
        CarPlayController.deviceInfo.getter((uint64_t)aBlock);
        uint64_t v28 = type metadata accessor for CarPlayEpisodesProvider();
        swift_allocObject();
        uint64_t v29 = sub_10036F7A0(v22, (uint64_t)&v82, (uint64_t)aBlock);
        sub_1000536CC((uint64_t)&v82, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
        swift_release();
        uint64_t v30 = (uint64_t *)v75;
        *(void *)(v75 + 24) = v28;
        void v30[4] = (uint64_t)&off_100564B18;
        swift_release();
        sub_1000536CC((uint64_t)&v82, (void (*)(void, void, void, void, void, void, void, void, char))sub_100053720);
        goto LABEL_22;
      case 1u:
        uint64_t v31 = *(void *)v18;
        uint64_t v32 = *((void *)v18 + 1);
        int v33 = v18[16];
        swift_retain();
        CarPlayController.deviceInfo.getter((uint64_t)&v82);
        uint64_t v34 = type metadata accessor for CarPlayLibraryShowProvider();
        swift_allocObject();
        uint64_t v35 = sub_1002651EC(v22, v31, v32, v33, (uint64_t)&v82);
        swift_release();
        swift_bridgeObjectRelease();
        id v36 = &off_10055C380;
        Class v37 = (uint64_t *)v75;
        *(void *)(v75 + 24) = v34;
        goto LABEL_20;
      case 3u:
        uint64_t v38 = *(void *)&v18[*(int *)(sub_100054B78((uint64_t *)&unk_1005F88C0) + 48)];
        sub_100053820((uint64_t)v18, (uint64_t)v14, (uint64_t *)&unk_1005F7750);
        sub_100054BBC((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_1005F7750);
        swift_retain();
        swift_retain();
        CarPlayController.deviceInfo.getter((uint64_t)&v82);
        uint64_t v39 = type metadata accessor for CarPlayStoreProvider();
        swift_allocObject();
        uint64_t v40 = sub_1002E8B24(v22, (uint64_t)v12, v38, (uint64_t)&v82);
        swift_release();
        swift_release();
        long long v41 = (uint64_t *)v75;
        *(void *)(v75 + 24) = v39;
        v41[4] = (uint64_t)&off_10055F658;
        swift_release();
        swift_release();
        *long long v41 = v40;
        sub_100054B1C((uint64_t)v14, (uint64_t *)&unk_1005F7750);
        return sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F8CF0);
      case 4u:
        unint64_t v42 = *(void *)v18;
        swift_retain();
        CarPlayController.deviceInfo.getter((uint64_t)&v82);
        uint64_t v43 = type metadata accessor for CarPlayShowcaseProvider();
        swift_allocObject();
        long long v44 = sub_1003647B0(v22, v42, (uint64_t)&v82);
        swift_release();
        swift_bridgeObjectRelease();
        long long v45 = (void *)v75;
        *(void *)(v75 + 24) = v43;
        v45[4] = &off_1005644A0;
        swift_release();
        *long long v45 = v44;
        return sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F8CF0);
      case 5u:
        char v46 = *v18;
        swift_retain();
        CarPlayController.deviceInfo.getter((uint64_t)&v82);
        uint64_t v47 = type metadata accessor for CarPlayShowsProvider();
        swift_allocObject();
        uint64_t v35 = sub_10025A10C(v22, v46, (uint64_t)&v82);
        id v36 = &off_10055C160;
        Class v37 = (uint64_t *)v75;
        *(void *)(v75 + 24) = v47;
LABEL_20:
        _DWORD v37[4] = (uint64_t)v36;
        swift_release();
        *Class v37 = v35;
        return sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F8CF0);
      case 6u:
        uint64_t v48 = *(void *)v18;
        swift_retain();
        swift_retain();
        CarPlayController.deviceInfo.getter((uint64_t)&v82);
        uint64_t v49 = type metadata accessor for CarPlayStationDetailProvider();
        swift_allocObject();
        uint64_t v29 = sub_1003DFB9C(v22, v48, (uint64_t)&v82);
        swift_release();
        swift_release();
        uint64_t v30 = (uint64_t *)v75;
        *(void *)(v75 + 24) = v49;
        void v30[4] = (uint64_t)&off_100568B28;
        swift_release();
        swift_release();
LABEL_22:
        *uint64_t v30 = v29;
        return sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F8CF0);
      case 7u:
        uint64_t v50 = sub_100054B78(&qword_1005F9E90);
        uint64_t v51 = *(void *)&v18[*(int *)(v50 + 48)];
        uint64_t v52 = &v18[*(int *)(v50 + 64)];
        uint64_t v53 = *(void *)v52;
        char v54 = v52[8];
        sub_100053820((uint64_t)v18, (uint64_t)v9, (uint64_t *)&unk_1005F7750);
        uint64_t v77 = 0;
        memset(v76, 0, sizeof(v76));
        if ((v54 & 1) == 0)
        {
          uint64_t v73 = v51;
          if (v53 < 0)
          {
            __break(1u);
          }
          else
          {
            id v64 = [self sharedInstance];
            id v65 = [v64 mainOrPrivateContext];

            CarPlayController.deviceInfo.getter((uint64_t)&v82);
            sub_100054BBC((uint64_t)v9, (uint64_t)v14, (uint64_t *)&unk_1005F7750);
            unint64_t v66 = (*(unsigned __int8 *)(v74 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
            uint64_t v67 = swift_allocObject();
            *(void *)(v67 + 16) = v65;
            *(void *)(v67 + 24) = v53;
            *(void *)(v67 + 32) = v76;
            *(void *)(v67 + 4sub_1001DA808(0, 0) = v22;
            long long v68 = v83;
            *(_OWORD *)(v67 + 48) = v82;
            *(_OWORD *)(v67 + 64) = v68;
            *(_OWORD *)(v67 + 8sub_1001DA808(0, 0) = v84;
            *(void *)(v67 + 96) = v85;
            sub_100053820((uint64_t)v14, v67 + v66, (uint64_t *)&unk_1005F7750);
            *(void *)(v67 + ((v7 + v66 + 7) & 0xFFFFFFFFFFFFFFF8)) = v73;
            uint64_t v69 = swift_allocObject();
            *(void *)(v69 + 16) = sub_1001ED230;
            *(void *)(v69 + 24) = v67;
            uint64_t v80 = sub_10004A010;
            uint64_t v81 = v69;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_100018818;
            uint64_t v79 = &unk_100558848;
            uint64_t v70 = _Block_copy(aBlock);
            swift_retain();
            swift_retain();
            swift_retain();
            id v71 = v65;
            swift_release();
            [v71 performBlockAndWait:v70];
            _Block_release(v70);
            swift_release();
            swift_release();

            sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
            LOBYTE(v7sub_1001DA808(0, 0) = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if ((v70 & 1) == 0)
            {
              sub_100053820((uint64_t)v76, v75, &qword_1005F9E98);
              sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F8CF0);
              return swift_release();
            }
          }
          __break(1u);
          JUMPOUT(0x1001E6478);
        }
        sub_100054BBC((uint64_t)v9, (uint64_t)v14, (uint64_t *)&unk_1005F7750);
        swift_retain();
        swift_retain();
        CarPlayController.deviceInfo.getter((uint64_t)&v82);
        uint64_t v55 = type metadata accessor for CarPlayStoreShowProvider();
        swift_allocObject();
        uint64_t v56 = sub_10022A73C(v22, (uint64_t)v14, v51, (uint64_t)&v82);
        swift_release();
        swift_release();
        uint64_t v79 = (void *)v55;
        uint64_t v80 = (uint64_t (*)())&off_10055A7A0;
        swift_release();
        swift_release();
        aBlock[0] = v56;
        sub_100054B1C((uint64_t)v9, (uint64_t *)&unk_1005F7750);
        sub_100039D84((uint64_t)aBlock, (uint64_t)v76, &qword_1005F9E98);
        sub_100053820((uint64_t)v76, v75, &qword_1005F9E98);
        break;
      case 8u:
        swift_retain();
        CarPlayController.deviceInfo.getter((uint64_t)&v82);
        uint64_t Provider = type metadata accessor for CarPlayLibraryProvider();
        swift_allocObject();
        uint64_t v58 = sub_100409C1C(v22, (uint64_t)&v82);
        swift_release();
        id v59 = &off_10056A038;
        goto LABEL_28;
      case 9u:
        swift_retain();
        CarPlayController.deviceInfo.getter((uint64_t)&v82);
        uint64_t Provider = type metadata accessor for CarPlayHomePageProvider();
        swift_allocObject();
        uint64_t v58 = sub_1001C484C(v22, (uint64_t)&v82);
        swift_release();
        id v59 = &off_100557D18;
        goto LABEL_28;
      case 0xAu:
        swift_retain();
        CarPlayController.deviceInfo.getter((uint64_t)&v82);
        uint64_t Provider = type metadata accessor for CarPlayPlayingNextProvider();
        swift_allocObject();
        uint64_t v58 = sub_10032C124(v22, (uint64_t)&v82);
        id v59 = &off_100561F48;
LABEL_28:
        id v60 = (uint64_t *)v75;
        *(void *)(v75 + 24) = Provider;
        v60[4] = (uint64_t)v59;
        swift_release();
        uint64_t *v60 = v58;
        return sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F8CF0);
      case 0xCu:
        uint64_t v61 = type metadata accessor for CarPlayStationsProvider();
        uint64_t v62 = swift_allocObject();
        sub_100054B78((uint64_t *)&unk_1005F8AE0);
        swift_allocObject();
        swift_retain();
        *(void *)(v62 + 32) = PassthroughSubject.init()();
        sub_100054B78(&qword_1005FD620);
        type metadata accessor for BaseObjectGraph();
        inject<A, B>(_:from:)();
        swift_release();
        *(_OWORD *)(v62 + 16) = v82;
        uint64_t v63 = (uint64_t *)v75;
        *(void *)(v75 + 24) = v61;
        void v63[4] = (uint64_t)&off_100557CF0;
        swift_release();
        *uint64_t v63 = v62;
        return sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F8CF0);
      default:
        swift_release();
        sub_1001ED088((uint64_t)v18);
        goto LABEL_10;
    }
  }
  return sub_100054B1C((uint64_t)v21, (uint64_t *)&unk_1005F8CF0);
}

uint64_t sub_1001E64AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v29[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [a1 podcastForStoreId:a2];
  if (v16 && (v17 = v16, id v18 = [v16 uuid], v17, v18))
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    uint64_t v22 = type metadata accessor for CarPlayLibraryShowProvider();
    swift_allocObject();
    uint64_t v23 = swift_retain();
    uint64_t v24 = sub_1002651EC(v23, v19, v21, 1, a5);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v25 = &off_10055C380;
  }
  else
  {
    sub_100054BBC(a6, (uint64_t)v15, (uint64_t *)&unk_1005F7750);
    uint64_t v22 = type metadata accessor for CarPlayStoreShowProvider();
    swift_allocObject();
    swift_retain();
    uint64_t v26 = swift_retain();
    uint64_t v24 = sub_10022A73C(v26, (uint64_t)v15, a7, a5);
    swift_release();
    swift_release();
    uint64_t v25 = &off_10055A7A0;
  }
  v29[3] = v22;
  v29[4] = v25;
  v29[0] = v24;
  return sub_100039D84((uint64_t)v29, a3, &qword_1005F9E98);
}

id CarPlayController.init()()
{
  *(void *)&v0[OBJC_IVAR___CarPlayController_graph] = 0;
  *(void *)&v0[OBJC_IVAR___CarPlayController_interfaceController] = 0;
  uint64_t v1 = &v0[OBJC_IVAR___CarPlayController_nowPlayingController];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR___CarPlayController_syncController] = 0;
  uint64_t v2 = &v0[OBJC_IVAR___CarPlayController____lazy_storage___deviceInfo];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((void *)v2 + 6) = 0;
  v2[56] = 1;
  uint64_t v3 = &v0[OBJC_IVAR___CarPlayController_cachedScale];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  *(void *)&v0[OBJC_IVAR___CarPlayController_subscriptions] = _swiftEmptyArrayStorage;
  uint64_t v4 = &v0[OBJC_IVAR___CarPlayController_activeTemplateProvider];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  *(void *)&v0[OBJC_IVAR___CarPlayController_activeTemplateItemsSubscription] = 0;
  *(void *)&v0[OBJC_IVAR___CarPlayController_activeTemplateDidSelectItemSubscription] = 0;
  uint64_t v5 = OBJC_IVAR___CarPlayController_listenNowTemplate;
  uint64_t v6 = v0;
  *(void *)&v0[v5] = _s8Podcasts17CarPlayControllerC17listenNowTemplate33_1837259AE273DECDE141DFAB9CAB2C47LLSo06CPListG0Cvpfi_0();
  uint64_t v7 = OBJC_IVAR___CarPlayController_browseTemplate;
  *(void *)&v6[v7] = _s8Podcasts17CarPlayControllerC14browseTemplate33_1837259AE273DECDE141DFAB9CAB2C47LLSo06CPListF0Cvpfi_0();
  uint64_t v8 = OBJC_IVAR___CarPlayController_libraryTemplate;
  *(void *)&v6[v8] = _s8Podcasts17CarPlayControllerC15libraryTemplate33_1837259AE273DECDE141DFAB9CAB2C47LLSo06CPListF0Cvpfi_0();
  uint64_t v9 = OBJC_IVAR___CarPlayController_stationsTemplate;
  *(void *)&v6[v9] = _s8Podcasts17CarPlayControllerC16stationsTemplate33_1837259AE273DECDE141DFAB9CAB2C47LLSo06CPListF0Cvpfi_0();
  *(void *)&v6[OBJC_IVAR___CarPlayController____lazy_storage___welcomeScreenTemplate] = 0;
  *(void *)&v6[OBJC_IVAR___CarPlayController____lazy_storage___migrationTemplate] = 0;
  *(void *)&v6[OBJC_IVAR___CarPlayController_tabBarTemplate] = 0;
  *(void *)&v6[OBJC_IVAR___CarPlayController_previousStationItemsCount] = 0;

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for CarPlayController();
  return [super init];
}

uint64_t type metadata accessor for CarPlayController()
{
  return self;
}

id CarPlayController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlayController();
  return [super dealloc];
}

Swift::Void __swiftcall CarPlayController.templateApplicationScene(_:didConnect:)(CPTemplateApplicationScene _, CPInterfaceController didConnect)
{
}

void sub_1001E69AC(id a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR___CarPlayController_interfaceController;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR___CarPlayController_interfaceController);
  if (v9 && (id v10 = [v9 presentedTemplate]) != 0)
  {
  }
  else
  {
    id v11 = CarPlayController.welcomeScreenTemplate.getter();

    if (v11 == a1)
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.carPlay.getter();
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Presenting the welcome screen template.", v14, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    uint64_t v15 = *(void **)(v2 + v8);
    if (v15)
    {
      aBlock[4] = j___ss6UInt64V8PodcastsE19int64Representations5Int64Vvg;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10018FFEC;
      void aBlock[3] = &unk_100558AF0;
      id v16 = _Block_copy(aBlock);
      id v17 = v15;
      [v17 presentTemplate:a1 animated:1 completion:v16];
      _Block_release(v16);
    }
  }
}

void sub_1001E6C24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    id v10 = [a3 presentedTemplate];
    id v11 = CarPlayController.welcomeScreenTemplate.getter();
    if (v10)
    {

      if (v10 == v11)
      {
        [a3 dismissTemplateAnimated:1 completion:0];
        sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
        static OS_os_log.carPlay.getter();
        uint64_t v12 = Logger.logObject.getter();
        os_log_type_t v13 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v14 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "Did dismiss the welcome screen template.", v14, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        sub_1001E6E20();
      }
    }
    else
    {

      uint64_t v9 = v11;
    }
  }
}

void sub_1001E6E20()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v52 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v52 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v52 - v13;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = v12;
    *(_WORD *)id v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Creating the initial CarPlay interface.", v17, 2u);
    uint64_t v12 = v53;
    swift_slowDealloc();
  }

  id v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v14, v2);
  uint64_t v19 = (void *)qword_10061ACE0;
  if (!qword_10061ACE0)
  {
    id v20 = [objc_allocWithZone((Class)type metadata accessor for AppDelegate()) init];
    uint64_t v21 = (void *)qword_10061ACE0;
    qword_10061ACE0 = (uint64_t)v20;

    uint64_t v19 = (void *)qword_10061ACE0;
    if (!qword_10061ACE0) {
      goto LABEL_11;
    }
  }
  id v22 = v19;
  sub_10001A048();

  if (qword_10061ACE0)
  {
    uint64_t v23 = *(void *)(qword_10061ACE0 + OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph);
    swift_retain();
    static OS_os_log.carPlay.getter();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Successfully grabbed a reference to the object graph. Continuing to handle the CarPlay scene connection.", v26, 2u);
      swift_slowDealloc();
    }

    v18(v12, v2);
    uint64_t v27 = type metadata accessor for CarPlayNowPlayingController();
    swift_retain();
    uint64_t v28 = sub_100321C28();
    uint64_t v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v30 = (uint64_t (**)())&v28[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback];
    uint64_t v31 = *(void *)&v28[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback];
    *uint64_t v30 = sub_1001ED4E4;
    v30[1] = (uint64_t (*)())v29;
    sub_1000536BC(v31);
    uint64_t v32 = OBJC_IVAR___CarPlayController_interfaceController;
    int v33 = *(void **)(v1 + OBJC_IVAR___CarPlayController_interfaceController);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v33;
    uint64_t v35 = (void (**)(uint64_t))&v28[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateAlbumArtistButtonTappedCallback];
    uint64_t v36 = *(void *)&v28[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateAlbumArtistButtonTappedCallback];
    *uint64_t v35 = sub_1001ED524;
    v35[1] = (void (*)(uint64_t))v34;
    id v37 = v33;
    sub_1000536BC(v36);
    uint64_t v38 = *(void **)(v1 + v32);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v38;
    uint64_t v40 = (void (**)(uint64_t))&v28[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateUpNextButtonTappedCallback];
    uint64_t v41 = *(void *)&v28[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateUpNextButtonTappedCallback];
    char *v40 = sub_1001ED55C;
    v40[1] = (void (*)(uint64_t))v39;
    id v42 = v38;
    sub_1000536BC(v41);
    *(void *)(v1 + OBJC_IVAR___CarPlayController_graph) = v23;
    swift_retain();
    swift_release();
    v54[3] = v27;
    v54[4] = &off_100561B48;
    v54[0] = v28;
    uint64_t v43 = v1 + OBJC_IVAR___CarPlayController_nowPlayingController;
    swift_beginAccess();
    long long v44 = v28;
    sub_100039D84((uint64_t)v54, v43, &qword_1005F9D38);
    swift_endAccess();
    sub_100054B78(&qword_1005FF770);
    BaseObjectGraph.inject<A>(_:)();
    *(void *)(v1 + OBJC_IVAR___CarPlayController_syncController) = v54[0];
    swift_unknownObjectRelease();
    if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0)
    {
      id v45 = [self defaultInstance];
      [v45 setDialogProxy:v1];
    }
    sub_1001EADE0();
    CarPlayController.setUpCarPlayInterface()();
    swift_release();
  }
  else
  {
LABEL_11:
    static OS_os_log.carPlay.getter();
    char v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Could not grab the object graph from the app bootstrap.", v48, 2u);
      swift_slowDealloc();
    }

    v18(v9, v2);
    if (!qword_10061ACE0)
    {
      static OS_os_log.carPlay.getter();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v51 = 0;
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "AccessAppDelegate shared instance is nil.", v51, 2u);
        swift_slowDealloc();
      }

      v18(v6, v2);
    }
  }
}

BOOL sub_1001E7460(unsigned char *a1)
{
  return (*a1 & 1) == 0;
}

void sub_1001E7470(uint64_t a1, void *a2)
{
  id v40 = a2;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v39 = (char *)&v39 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v39 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v39 - v12;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Migration finished.", v16, 2u);
    swift_slowDealloc();
  }

  id v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  id v18 = v13;
  uint64_t v19 = v2;
  v17(v18, v2);
  if ([self carPlayShouldShowWelcome])
  {
    static OS_os_log.carPlay.getter();
    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Migration is finished, but the welcome screen is still needed.", v22, 2u);
      swift_slowDealloc();
    }

    v17(v6, v2);
  }
  else
  {
    static OS_os_log.carPlay.getter();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Welcome not needed. Proceeding to the scene connection.", v25, 2u);
      swift_slowDealloc();
    }

    v17(v11, v2);
    id v26 = v40;
    id v27 = [v40 presentedTemplate];
    if (v27)
    {
      uint64_t v28 = v27;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v30 = (void *)Strong;
        id v31 = v28;
        id v32 = CarPlayController.migrationTemplate.getter();

        if (v31 == v32)
        {
          int v33 = v39;
          static OS_os_log.carPlay.getter();
          uint64_t v34 = Logger.logObject.getter();
          os_log_type_t v35 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v36 = 0;
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "Dismissing welcome template.", v36, 2u);
            swift_slowDealloc();
          }

          v17(v33, v19);
          [v26 dismissTemplateAnimated:1 completion:0];
        }
      }
    }
    swift_beginAccess();
    uint64_t v37 = swift_unknownObjectWeakLoadStrong();
    if (v37)
    {
      uint64_t v38 = (void *)v37;
      sub_1001E6E20();
    }
  }
}

uint64_t sub_1001E7950()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = result + OBJC_IVAR___CarPlayController_activeTemplateProvider;
    swift_beginAccess();
    sub_100054BBC(v2, (uint64_t)v8, &qword_1005F9E98);

    if (v9)
    {
      sub_100056D54((uint64_t)v8, (uint64_t)v5);
      sub_100054B1C((uint64_t)v8, &qword_1005F9E98);
      uint64_t v3 = v6;
      uint64_t v4 = v7;
      sub_100041A98(v5, v6);
      (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
      return sub_10004D2D8((uint64_t)v5);
    }
    else
    {
      return sub_100054B1C((uint64_t)v8, &qword_1005F9E98);
    }
  }
  return result;
}

void sub_1001E7A4C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    v7[4] = a3;
    v7[5] = 0;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    _OWORD v7[2] = sub_10018FFEC;
    v7[3] = a4;
    uint64_t v6 = _Block_copy(v7);
    [a2 pushTemplate:a1 animated:1 completion:v6];
    _Block_release(v6);
  }
}

Swift::Void __swiftcall CarPlayController.templateApplicationScene(_:didDisconnect:)(CPTemplateApplicationScene _, CPInterfaceController didDisconnect)
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v23 - v9;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Did disconnect the CarPlay scene.", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v10, v4);
  os_log_type_t v15 = *(void **)(v3 + OBJC_IVAR___CarPlayController_interfaceController);
  *(void *)(v3 + OBJC_IVAR___CarPlayController_interfaceController) = 0;

  uint64_t v16 = v3 + OBJC_IVAR___CarPlayController_cachedScale;
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  sub_1001E2C2C();
  uint64_t v17 = v3 + OBJC_IVAR___CarPlayController_nowPlayingController;
  swift_beginAccess();
  sub_100054BBC(v17, (uint64_t)&v24, &qword_1005F9D38);
  if (*((void *)&v25 + 1))
  {
    sub_100056D54((uint64_t)&v24, (uint64_t)v23);
    sub_100054B1C((uint64_t)&v24, &qword_1005F9D38);
    sub_100041A98(v23, v23[3]);
    static OS_os_log.carPlay.getter();
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "CarPlayNowPlayingController tearDown called. Removing observers.", v20, 2u);
      swift_slowDealloc();
    }

    v14(v8, v4);
    sub_1003231D4();
    sub_10004D2D8((uint64_t)v23);
  }
  else
  {
    sub_100054B1C((uint64_t)&v24, &qword_1005F9D38);
  }
  uint64_t v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  swift_beginAccess();
  sub_100039D84((uint64_t)&v24, v17, &qword_1005F9D38);
  swift_endAccess();
  if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0)
  {
    id v21 = [self defaultInstance];
    [v21 setDialogProxy:0];
  }
  id v22 = [self sharedInstance];
  [v22 endObserving];
}

void sub_1001E7EF0(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = &v40[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  os_log_type_t v12 = &v40[-v11];
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  id v13 = a2;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  os_log_type_t v47 = v10;
  uint64_t v48 = v7;
  if (v16)
  {
    uint64_t v45 = v6;
    uint64_t v46 = a3;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    v50[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    id v44 = v13;
    id v18 = [v13 title];
    if (v18)
    {
      os_log_type_t v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;
    }
    else
    {
      unint64_t v22 = 0xE200000000000000;
      uint64_t v20 = 16718;
    }
    uint64_t v49 = sub_10004B974(v20, v22, (uint64_t *)v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v24 = v44;

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Did receive section updates for list template with title %s.", v17, 0xCu);
    swift_arrayDestroy();
    id v13 = v24;
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v48 + 8);
    uint64_t v6 = v45;
    v23(v12, v45);
    a3 = v46;
    uint64_t v10 = v47;
  }
  else
  {

    uint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
    v23(v12, v6);
  }
  static OS_os_log.carPlay.getter();
  swift_bridgeObjectRetain_n();
  long long v25 = Logger.logObject.getter();
  int v26 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v25, (os_log_type_t)v26))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  uint64_t v43 = v23;
  uint64_t v27 = swift_slowAlloc();
  *(_DWORD *)uint64_t v27 = 134218240;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v50[0] = v28;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v27 + 12) = 2048;
  v50[0] = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    if (v29)
    {
LABEL_12:
      if (v29 < 1)
      {
        __break(1u);
        return;
      }
      int v41 = v26;
      id v42 = v25;
      id v44 = v13;
      uint64_t v45 = v6;
      uint64_t v46 = a3;
      uint64_t v30 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v31 = *(id *)(a1 + 8 * v30 + 32);
        }
        id v32 = v31;
        ++v30;
        id v33 = [v31 items];
        sub_100054B78(&qword_1005F7E20);
        unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1001B187C(v34);
      }
      while (v29 != v30);
      swift_bridgeObjectRelease();
      unint64_t v35 = v50[0];
      uint64_t v6 = v45;
      id v13 = v44;
      long long v25 = v42;
      LOBYTE(v26) = v41;
      if (!(v50[0] >> 62)) {
        goto LABEL_20;
      }
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_27;
  }
LABEL_20:
  uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50[0] = v36;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v26, "Did receive section updates with section count %ld and total section items count %ld.", (uint8_t *)v27, 0x16u);
  swift_slowDealloc();

  uint64_t v10 = v47;
  uint64_t v23 = v43;
LABEL_22:
  v23(v10, v6);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v38 = (void *)Strong;
    sub_1001E99E8(a1);
    sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v13 updateSections:isa];
  }
}

void sub_1001E84E0(void **a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_unknownObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v18[1] = a2 + 16;
    os_log_type_t v12 = (uint8_t *)v11;
    v19[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v12 = 136315138;
    swift_getObjectType();
    uint64_t v13 = sub_1001F1DF4();
    if (v14)
    {
      unint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 16718;
      unint64_t v15 = 0xE200000000000000;
    }
    v18[0] = v4;
    _OWORD v18[2] = sub_10004B974(v13, v15, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Did select item with title %s.", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, void))(v5 + 8))(v7, v18[0]);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (void *)Strong;
    sub_1001E8770(v8);
  }
}

uint64_t sub_1001E8770(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  os_log_type_t v10 = (char *)&v82 - v9;
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v82 - v11;
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  BOOL v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v82 - v17;
  v90[0] = a1;
  swift_unknownObjectRetain();
  sub_100054B78(&qword_1005F9F90);
  sub_100054B78(&qword_1005F9F98);
  if (swift_dynamicCast())
  {
    uint64_t v88 = v4;
    unsigned __int8 v89 = v1;
    uint64_t v20 = *((void *)&v95 + 1);
    os_log_type_t v19 = v96;
    sub_100041A98(&aBlock, *((uint64_t *)&v95 + 1));
    id v21 = (id)(*((uint64_t (**)(uint64_t, uint64_t (*)()))v19 + 1))(v20, v19);
    sub_10004D2D8((uint64_t)&aBlock);
    uint64_t v22 = (uint64_t)v21 + OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type;
    swift_beginAccess();
    sub_100054BBC(v22, (uint64_t)v18, (uint64_t *)&unk_1005F8CF0);
    uint64_t v23 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
    int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v18, 1, v23);
    id v87 = v21;
    if (v24 != 1)
    {
      sub_100054BBC((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_1005F8CF0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        unint64_t v34 = *(void **)v16;
        uint64_t v35 = v16[8];
        sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
        static OS_os_log.carPlay.getter();
        swift_unknownObjectRetain_n();
        uint64_t v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.default.getter();
        int v38 = v37;
        if (os_log_type_enabled(v36, v37))
        {
          LODWORD(v85) = v38;
          uint64_t v39 = swift_slowAlloc();
          os_log_t v83 = v36;
          id v40 = (uint8_t *)v39;
          uint64_t v84 = swift_slowAlloc();
          *(void *)&long long aBlock = v84;
          *(_DWORD *)id v40 = 136315138;
          swift_getObjectType();
          uint64_t v41 = sub_1001F1DF4();
          if (v42)
          {
            unint64_t v43 = v42;
          }
          else
          {
            uint64_t v41 = 16718;
            unint64_t v43 = 0xE200000000000000;
          }
          v90[0] = (id)sub_10004B974(v41, v43, (uint64_t *)&aBlock);
          id v21 = v87;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v44 = v83;
          _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v85, "Did select item with title %s for template info type now playing.", v40, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v88 + 8))(v10, v3);
        uint64_t v72 = v89;
        uint64_t v73 = *(void **)&v89[OBJC_IVAR___CarPlayController_interfaceController];
        if (!v73)
        {

          sub_1001ED3B4(v34, v35);
LABEL_54:
          id v32 = (uint64_t *)&unk_1005F8CF0;
          p_long long aBlock = v18;
          return sub_100054B1C((uint64_t)p_aBlock, v32);
        }
        if (v35 == 3)
        {
          uint64_t v74 = swift_allocObject();
          *(void *)(v74 + 16) = v72;
          id v75 = v73;
          id v76 = v72;
          uint64_t v77 = sub_1001ED3D0;
        }
        else
        {
          id v79 = v73;
          sub_1001EA344();
          uint64_t v77 = 0;
          uint64_t v74 = 0;
        }
        uint64_t v80 = (uint64_t)v72 + OBJC_IVAR___CarPlayController_nowPlayingController;
        swift_beginAccess();
        sub_100054BBC(v80, (uint64_t)&aBlock, &qword_1005F9D38);
        if (*((void *)&v95 + 1))
        {
          sub_100056D54((uint64_t)&aBlock, (uint64_t)v90);
          sub_100054B1C((uint64_t)&aBlock, &qword_1005F9D38);
          sub_100041A98(v90, v91);
          sub_10032476C(v34, v35, *((unsigned char *)v21 + OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource), v73, (void (*)(void))v77, v74);
          sub_1001ED3B4(v34, v35);
          sub_1000536BC((uint64_t)v77);

          goto LABEL_51;
        }
        sub_1000536BC((uint64_t)v77);
        sub_1001ED3B4(v34, v35);

        uint64_t v78 = &qword_1005F9D38;
LABEL_53:
        sub_100054B1C((uint64_t)&aBlock, v78);
        goto LABEL_54;
      }
      if (EnumCaseMultiPayload == 11)
      {
        sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
        static OS_os_log.carPlay.getter();
        swift_unknownObjectRetain_n();
        int v26 = Logger.logObject.getter();
        os_log_type_t v27 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          *(void *)&long long aBlock = v85;
          *(_DWORD *)uint64_t v28 = 136315138;
          swift_getObjectType();
          uint64_t v29 = sub_1001F1DF4();
          if (v30)
          {
            unint64_t v31 = v30;
          }
          else
          {
            uint64_t v29 = 16718;
            unint64_t v31 = 0xE200000000000000;
          }
          v90[0] = (id)sub_10004B974(v29, v31, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "Did select item with title %s for template info type reload.", v28, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v88 + 8))(v12, v3);
        uint64_t v69 = (uint64_t)&v89[OBJC_IVAR___CarPlayController_activeTemplateProvider];
        swift_beginAccess();
        sub_100054BBC(v69, (uint64_t)&aBlock, &qword_1005F9E98);
        if (*((void *)&v95 + 1))
        {
          sub_100056D54((uint64_t)&aBlock, (uint64_t)v90);
          sub_100054B1C((uint64_t)&aBlock, &qword_1005F9E98);
          uint64_t v70 = v91;
          uint64_t v71 = v92;
          sub_100041A98(v90, v91);
          (*(void (**)(uint64_t, uint64_t))(v71 + 24))(v70, v71);

LABEL_51:
          sub_10004D2D8((uint64_t)v90);
          goto LABEL_54;
        }

        uint64_t v78 = &qword_1005F9E98;
        goto LABEL_53;
      }
      sub_1001ED088((uint64_t)v16);
    }
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    swift_unknownObjectRetain_n();
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    BOOL v47 = os_log_type_enabled(v45, v46);
    uint64_t v86 = v18;
    if (v47)
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 136315138;
      swift_getObjectType();
      uint64_t v49 = sub_1001F1DF4();
      if (v50)
      {
        unint64_t v51 = v50;
      }
      else
      {
        uint64_t v49 = 16718;
        unint64_t v51 = 0xE200000000000000;
      }
      v90[0] = (id)sub_10004B974(v49, v51, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Did select item with title %s and will attempt to push to a new list template.", v48, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v7, v3);
    swift_getObjectType();
    sub_1001F1DF4();
    if (v52)
    {
      NSString v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v53 = 0;
    }
    id v54 = objc_allocWithZone((Class)CPListTemplate);
    sub_10004D29C(0, (unint64_t *)&unk_1005F7F20);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v56 = [v54 initWithTitle:v53 sections:isa];

    v90[0] = v56;
    sub_10004D29C(0, &qword_1005F88B0);
    id v57 = v87;
    uint64_t v58 = NSString.init(stringLiteral:)();
    id v59 = v57;
    sub_1001BFA4C((uint64_t)v58, (uint64_t)v57);

    id v60 = *(void **)&v89[OBJC_IVAR___CarPlayController_interfaceController];
    if (v60)
    {
      Swift::String v96 = j___ss6UInt64V8PodcastsE19int64Representations5Int64Vvg;
      uint64_t v97 = 0;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v95 = sub_10018FFEC;
      *((void *)&v95 + 1) = &unk_100558988;
      uint64_t v61 = _Block_copy(&aBlock);
      id v62 = v60;
      id v63 = v56;
      [v62 pushTemplate:v63 animated:1 completion:v61];
      _Block_release(v61);
    }
    id v64 = v90[0];
    sub_1001EA894(0x6574616C706D6574, 0xEC0000006F666E49, &aBlock);
    if (*((void *)&v95 + 1))
    {
      type metadata accessor for CarPlayTemplateInfo(0);
      if (swift_dynamicCast())
      {
        id v65 = v93;
        goto LABEL_33;
      }
    }
    else
    {
      sub_100054B1C((uint64_t)&aBlock, &qword_1005F5D30);
    }
    id v65 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
LABEL_33:
    sub_1003DC840();

    swift_bridgeObjectRelease();
    Class v66 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v64 setEmptyViewTitleVariants:v66];

    sub_1001EA894(0x6574616C706D6574, 0xEC0000006F666E49, &aBlock);
    if (*((void *)&v95 + 1))
    {
      type metadata accessor for CarPlayTemplateInfo(0);
      if (swift_dynamicCast())
      {
        id v67 = v93;
LABEL_38:
        sub_1003DC840();

        swift_bridgeObjectRelease();
        Class v68 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v64 setEmptyViewSubtitleVariants:v68];

        id v32 = (uint64_t *)&unk_1005F8CF0;
        p_long long aBlock = v86;
        return sub_100054B1C((uint64_t)p_aBlock, v32);
      }
    }
    else
    {
      sub_100054B1C((uint64_t)&aBlock, &qword_1005F5D30);
    }
    id v67 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
    goto LABEL_38;
  }
  Swift::String v96 = 0;
  long long aBlock = 0u;
  long long v95 = 0u;
  id v32 = (uint64_t *)&unk_1005F9FA0;
  p_long long aBlock = (char *)&aBlock;
  return sub_100054B1C((uint64_t)p_aBlock, v32);
}

uint64_t CarPlayController.proxyShouldShowDialog(for:podcastTitle:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 longStringForUnavailableReason:a1 podcastTitle:v8];

  if (v9)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    uint64_t v13 = *(void **)(v1 + OBJC_IVAR___CarPlayController_interfaceController);
    if (v13)
    {
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a1;
      id v15 = v13;
      CPInterfaceController.showAlert(with:completion:)(v10, v12, (void (*)(uint64_t))sub_1001ED080, v14);

      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    static OS_os_log.carPlay.getter();
    uint64_t v17 = Logger.logObject.getter();
    uint64_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v19 = 134349056;
      v20[1] = EpisodeUnavailableReason.rawValue.getter();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v18, "Playback failed with reason %{public}ld and a reason string could not be created.", v19, 0xCu);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1001E97D8()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134349056;
    v8[1] = EpisodeUnavailableReason.rawValue.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Playback failed with reason %{public}ld.  Alert was presented.", v6, 0xCu);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1001E99E8(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100054B78((uint64_t *)&unk_1005F8CF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v55 = *(char **)(v8 - 8);
  unint64_t v56 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&long long v60 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v17 = _swiftEmptyArrayStorage;
    goto LABEL_12;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_11;
  }
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
LABEL_62:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_21;
    }
    goto LABEL_63;
  }
  NSString v53 = v10;
  uint64_t v54 = v1;
  uint64_t v12 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v13 = *(id *)(a1 + 8 * v12 + 32);
    }
    uint64_t v14 = v13;
    ++v12;
    id v15 = [v13 items];
    sub_100054B78(&qword_1005F7E20);
    unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1001B187C(v16);
  }
  while (v11 != v12);
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)v60;
  uint64_t v3 = v54;
  uint64_t v10 = v53;
LABEL_12:
  unint64_t v18 = (unint64_t)sub_1003E4634((unint64_t)v17);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v18) {
    return result;
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  unint64_t v22 = v18 >> 62;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 134217984;
    if (v22)
    {
      uint64_t v54 = v3;
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v3 = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v60 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_type_t v25 = v21;
    uint64_t v11 = v18;
    _os_log_impl((void *)&_mh_execute_header, v20, v25, "Attempting to update the play state for %ld items.", v23, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v11 = v18;
  }
  (*((void (**)(unsigned char *, unint64_t))v55 + 1))(v10, v56);
  if (!*(void *)(v3 + OBJC_IVAR___CarPlayController_graph)) {
    return swift_bridgeObjectRelease();
  }
  type metadata accessor for PlaybackController();
  swift_retain();
  BaseObjectGraph.inject<A>(_:)();
  uint64_t result = swift_release();
  uint64_t v2 = v60;
  if (v22) {
    goto LABEL_62;
  }
  uint64_t v26 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v26)
  {
LABEL_63:
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_21:
  if (v26 >= 1)
  {
    uint64_t v27 = 0;
    unint64_t v56 = v11 & 0xC000000000000001;
    uint64_t v55 = (char *)&type metadata for Any + 8;
    uint64_t v51 = v11;
    uint64_t v54 = v2;
    NSString v53 = (unsigned char *)v26;
    while (1)
    {
      id v29 = v56 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v11 + 8 * v27 + 32);
      unint64_t v30 = v29;
      if ([v29 userInfo])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v62, 0, 32);
      }
      sub_100053820((uint64_t)v62, (uint64_t)&v57, &qword_1005F5D30);
      if (!*((void *)&v58 + 1)) {
        break;
      }
      sub_10004D29C(0, (unint64_t *)&qword_1005F88D0);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_37;
      }
      unint64_t v31 = *(void **)&v62[0];
      strcpy((char *)&v57, "templateInfo");
      BYTE13(v57) = 0;
      HIWORD(v57) = -5120;
      id v32 = [*(id *)&v62[0] __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
      swift_unknownObjectRelease();
      if (v32)
      {
        _bridgeAnyObjectToAny(_:)();

        swift_unknownObjectRelease();
      }
      else
      {

        long long v57 = 0u;
        long long v58 = 0u;
      }
      sub_100053820((uint64_t)&v57, (uint64_t)&v60, &qword_1005F5D30);
      if (!*((void *)&v61 + 1)) {
        goto LABEL_38;
      }
      type metadata accessor for CarPlayTemplateInfo(0);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_39;
      }
      id v33 = (id)v57;
LABEL_40:
      uint64_t v34 = (uint64_t)v33 + OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type;
      swift_beginAccess();
      sub_100054BBC(v34, (uint64_t)v7, (uint64_t *)&unk_1005F8CF0);

      uint64_t v35 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v7, 1, v35) == 1)
      {
        sub_100054B1C((uint64_t)v7, (uint64_t *)&unk_1005F8CF0);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v36 = *(void **)v7;
          int v37 = v7[8];
          uint64_t v38 = dispatch thunk of PlaybackController.nowPlayingItem.getter();
          if (v38)
          {
            uint64_t v39 = (void *)v38;
            uint64_t v52 = MPModelObject.uuid.getter();
          }
          else
          {
            uint64_t v52 = 0;
          }
          uint64_t v40 = dispatch thunk of PlaybackController.nowPlayingItem.getter();
          if (v40)
          {
            uint64_t v41 = (void *)v40;
            MPModelObject.adamID.getter();

            if (v37) {
              goto LABEL_52;
            }
LABEL_54:
            *(void *)&v62[0] = v36;
            type metadata accessor for Action();
            swift_retain_n();
            sub_100054B78(&qword_1005F9FA8);
            if (swift_dynamicCast())
            {
              sub_100042FC4(&v57, (uint64_t)&v60);
              sub_100041A98(&v60, *((uint64_t *)&v61 + 1));
              uint64_t v42 = dispatch thunk of PlayEpisodeActionModel.episodeIdentifier.getter();
              if (v44 != 0xFF)
              {
                uint64_t v45 = v43;
                unsigned __int8 v46 = v44;
                unsigned int v50 = v44 & 1;
                uint64_t v47 = v42;
                uint64_t v48 = static EpisodeStateIdentifier.generateIdsFrom(uuid:contentId:)();
                swift_bridgeObjectRelease();
                char v28 = sub_10030AA74(v47, v45, v50, v48);
                sub_1001ED3B4(v36, 0);
                swift_bridgeObjectRelease();
                sub_1001ED3B4(v36, 0);
                sub_1001ED414(v47, v45, v46);
                sub_10004D2D8((uint64_t)&v60);
                uint64_t v11 = v51;
                goto LABEL_60;
              }
              sub_1001ED3B4(v36, 0);
              swift_bridgeObjectRelease();
              sub_1001ED3B4(v36, 0);
              sub_10004D2D8((uint64_t)&v60);
              uint64_t v11 = v51;
            }
            else
            {
              uint64_t v59 = 0;
              long long v57 = 0u;
              long long v58 = 0u;
              swift_bridgeObjectRelease();
              sub_1001ED3B4(v36, 0);
              sub_1001ED3B4(v36, 0);
              sub_100054B1C((uint64_t)&v57, (uint64_t *)&unk_1005F9FB0);
            }
            char v28 = 0;
            goto LABEL_60;
          }
          if (!v37) {
            goto LABEL_54;
          }
LABEL_52:
          swift_bridgeObjectRelease();
          sub_1001ED3B4(v36, v37);
          char v28 = 0;
LABEL_60:
          uint64_t v26 = (uint64_t)v53;
          goto LABEL_25;
        }
        sub_1001ED088((uint64_t)v7);
      }
      char v28 = 0;
LABEL_25:
      ++v27;
      [v30 setPlaying:v28 & 1];

      if (v26 == v27) {
        goto LABEL_63;
      }
    }
    sub_100054B1C((uint64_t)&v57, &qword_1005F5D30);
LABEL_37:
    long long v60 = 0u;
    long long v61 = 0u;
LABEL_38:
    sub_100054B1C((uint64_t)&v60, &qword_1005F5D30);
LABEL_39:
    id v33 = [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
    goto LABEL_40;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001EA344()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = v0 + OBJC_IVAR___CarPlayController_nowPlayingController;
  swift_beginAccess();
  sub_100054BBC(v8, (uint64_t)&aBlock, &qword_1005F9D38);
  if (!v26) {
    return sub_100054B1C((uint64_t)&aBlock, &qword_1005F9D38);
  }
  sub_100042FC4(&aBlock, (uint64_t)v29);
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR___CarPlayController_interfaceController);
  if (v9)
  {
    id v10 = v9;
    id v11 = [v10 templates];
    sub_10004D29C(0, (unint64_t *)&unk_1005F9EF0);
    unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    __chkstk_darwin(v13);
    *(&v23 - 2) = (uint64_t)v29;
    id v14 = sub_100248780((uint64_t (*)(id *))sub_1001ED3F4, (uint64_t)(&v23 - 4), v12);
    swift_bridgeObjectRelease();
    if (v14)
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.carPlay.getter();
      id v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Showing the Now Playing template by popping to an existing template.", v17, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      uint64_t v27 = j___ss6UInt64V8PodcastsE19int64Representations5Int64Vvg;
      uint64_t v28 = 0;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      os_log_type_t v25 = sub_10018FFEC;
      uint64_t v26 = &unk_100558A00;
      unint64_t v18 = _Block_copy(&aBlock);
      [v10 popToTemplate:v14 animated:1 completion:v18];
    }
    else
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      static OS_os_log.carPlay.getter();
      uint64_t v20 = Logger.logObject.getter();
      uint64_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, (os_log_type_t)v21))
      {
        unint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v21, "Showing the Now Playing template by pushing a new template onto the stack.", v22, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      id v14 = [self sharedTemplate];
      uint64_t v27 = j___ss6UInt64V8PodcastsE19int64Representations5Int64Vvg;
      uint64_t v28 = 0;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      os_log_type_t v25 = sub_10018FFEC;
      uint64_t v26 = &unk_1005589D8;
      unint64_t v18 = _Block_copy(&aBlock);
      [v10 pushTemplate:v14 animated:1 completion:v18];
    }

    _Block_release(v18);
  }
  return sub_10004D2D8((uint64_t)v29);
}

BOOL sub_1001EA7A0(id *a1)
{
  id v1 = *a1;
  id v2 = [self sharedTemplate];

  return v1 == v2;
}

void sub_1001EA800(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR___CarPlayController_interfaceController);
  if (v2)
  {
    id v3 = [*(id *)(a1 + OBJC_IVAR___CarPlayController_interfaceController) carTraitCollection];
    [v3 displayScale];
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v6 = a1 + OBJC_IVAR___CarPlayController_cachedScale;
  *(void *)uint64_t v6 = v5;
  *(unsigned char *)(v6 + 8) = v2 == 0;
}

uint64_t sub_1001EA894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  if ([v4 userInfo])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_100053820((uint64_t)v11, (uint64_t)&v12, &qword_1005F5D30);
  if (!*((void *)&v13 + 1))
  {
    uint64_t result = sub_100054B1C((uint64_t)&v12, &qword_1005F5D30);
    goto LABEL_9;
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F88D0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_9:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  uint64_t v9 = *(void **)&v11[0];
  *(void *)&long long v12 = a1;
  *((void *)&v12 + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v10 = [v9 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();
  if (v10)
  {
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
  }
  else
  {

    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_100053820((uint64_t)&v12, (uint64_t)a3, &qword_1005F5D30);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001EAA20@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_1001EAA50()
{
  id v0 = [self defaultService];
  if (v0)
  {
    id v1 = v0;
    id v2 = String._bridgeToObjectiveC()();
    [v1 openApplication:v2 completion:0];
  }
}

id sub_1001EAAFC()
{
  id v0 = self;
  id v1 = [v0 mainBundle];
  v21._unint64_t object = (void *)0x80000001004D5A80;
  v2._unint64_t object = (void *)0x80000001004D5A60;
  v2._uint64_t countAndFlagsBits = 0xD000000000000016;
  v3._uint64_t countAndFlagsBits = 0;
  v3._unint64_t object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0x1000000000000061;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v21);

  id v5 = [v0 mainBundle];
  v22._unint64_t object = (void *)0xE700000000000000;
  v6._uint64_t countAndFlagsBits = 0x5F59414C50524143;
  v6._unint64_t object = (void *)0xEF5353494D534944;
  v7._uint64_t countAndFlagsBits = 0;
  v7._unint64_t object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0x7373696D736944;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v22);

  id v8 = objc_allocWithZone((Class)CPAlertAction);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1001EAA50;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001F2B1C;
  void aBlock[3] = &unk_100558910;
  id v10 = _Block_copy(aBlock);
  id v11 = [v8 initWithTitle:v9 style:1 handler:v10];

  _Block_release(v10);
  swift_release();
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10046D010;
  *(Swift::String *)(v12 + 32) = v4;
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10046D060;
  *(void *)(v13 + 32) = v11;
  aBlock[0] = v13;
  specialized Array._endMutation()();
  id v14 = objc_allocWithZone((Class)CPAlertTemplate);
  id v15 = v11;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10004D29C(0, &qword_1005F9F10);
  Class v17 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [v14 initWithTitleVariants:isa actions:v17];

  return v18;
}

void sub_1001EADE0()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  Swift::String v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    Swift::String v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting processors for CarPlay", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10004D29C(0, &qword_1005FA010);
  id v7 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  [v7 startProcessorsForCarPlay];

  sub_10004D29C(0, &qword_1005FA018);
  id v8 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  [v8 startIfNeeded];

  id v9 = [self sharedInstance];
  [v9 startObserving];
}

void sub_1001EAFE8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1006063D0);
  uint64_t v96 = *(void *)(v4 - 8);
  uint64_t v97 = v4;
  __chkstk_darwin(v4);
  id v94 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1005F9FC0);
  uint64_t v98 = *(void *)(v6 - 8);
  uint64_t v99 = v6;
  __chkstk_darwin(v6);
  long long v95 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_1005F9FC8);
  uint64_t v101 = *(void *)(v8 - 8);
  uint64_t v102 = v8;
  __chkstk_darwin(v8);
  uint64_t v100 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v10 - 8);
  uint64_t v104 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100054B78((uint64_t *)&unk_1005F9FD0);
  uint64_t v92 = *(void *)(v14 - 8);
  uint64_t v93 = v14;
  __chkstk_darwin(v14);
  os_log_type_t v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v107 - 8);
  uint64_t v18 = __chkstk_darwin(v107);
  id v87 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  unsigned __int8 v89 = (char *)&v86 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v103 = (char *)&v86 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v88 = (char *)&v86 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v86 - v27;
  __chkstk_darwin(v26);
  unint64_t v30 = (char *)&v86 - v29;
  uint64_t v105 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  unint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Did connect to the CarPlay scene.", v33, 2u);
    swift_slowDealloc();
  }

  uint64_t v34 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v35 = v30;
  uint64_t v106 = v17 + 8;
  uint64_t v36 = v34;
  v34(v35, v107);
  id v37 = [self sharedInstance];
  [v37 beginObserving];

  uint64_t v38 = *(void **)(v2 + OBJC_IVAR___CarPlayController_interfaceController);
  *(void *)(v2 + OBJC_IVAR___CarPlayController_interfaceController) = a1;
  id v39 = a1;

  uint64_t v40 = v2 + OBJC_IVAR___CarPlayController_cachedScale;
  *(void *)uint64_t v40 = 0;
  *(unsigned char *)(v40 + 8) = 1;
  sub_1001E2C2C();

  unsigned __int8 v110 = 0;
  if ([self carPlayShouldShowWelcome])
  {
    static OS_os_log.carPlay.getter();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Attempting to present the welcome screen template.", v43, 2u);
      swift_slowDealloc();
    }

    v36(v28, v107);
    unsigned __int8 v110 = 1;
    id v44 = CarPlayController.welcomeScreenTemplate.getter();
    sub_1001E69AC(v44);

    id v45 = [self defaultCenter];
    NSNotificationCenter.publisher(for:object:)();

    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    id v109 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v46 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v47 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v104, 1, 1, v46);
    sub_100022EA4(&qword_100603E40, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
    sub_100059BE0();
    uint64_t v48 = v91;
    Publisher.receive<A>(on:options:)();
    sub_100054B1C(v47, &qword_1005F9F20);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v13, v48);
    uint64_t v49 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v49;
    *(void *)(v50 + 24) = v39;
    sub_100044200((unint64_t *)&unk_1005FA000, (uint64_t *)&unk_1005F9FD0);
    id v51 = v39;
    uint64_t v52 = v93;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v16, v52);
    swift_beginAccess();
    sub_100054B78((uint64_t *)&unk_1005F9ED0);
    sub_100044200(qword_1005F8BB0, (uint64_t *)&unk_1005F9ED0);
    AnyCancellable.store<A>(in:)();
    swift_endAccess();
    swift_release();
  }
  if (qword_1005F59D8 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v109)
  {
    static OS_os_log.carPlay.getter();
    NSString v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Migration is happening. Waiting until after it's finished...", v55, 2u);
      swift_slowDealloc();
    }

    v36(v103, v107);
    swift_beginAccess();
    sub_100054B78(&qword_1005F6E18);
    unint64_t v56 = v94;
    Published.projectedValue.getter();
    swift_endAccess();
    sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
    id v109 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v57 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v58 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v104, 1, 1, v57);
    sub_100044200(&qword_1005F9FE0, (uint64_t *)&unk_1006063D0);
    sub_100059BE0();
    uint64_t v59 = v95;
    uint64_t v60 = v97;
    Publisher.receive<A>(on:options:)();
    sub_100054B1C(v58, &qword_1005F9F20);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v56, v60);
    sub_100044200(&qword_1005F9FE8, &qword_1005F9FC0);
    uint64_t v61 = v99;
    id v62 = v100;
    Publisher.first(where:)();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v59, v61);
    uint64_t v63 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = v39;
    *(void *)(v64 + 24) = v63;
    sub_100044200((unint64_t *)&unk_1005F9FF0, &qword_1005F9FC8);
    id v65 = v39;
    uint64_t v66 = v102;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v62, v66);
    swift_beginAccess();
    sub_100054B78((uint64_t *)&unk_1005F9ED0);
    sub_100044200(qword_1005F8BB0, (uint64_t *)&unk_1005F9ED0);
    AnyCancellable.store<A>(in:)();
    swift_endAccess();
    swift_release();
    id v67 = [v65 presentedTemplate];
    id v68 = CarPlayController.welcomeScreenTemplate.getter();
    id v69 = v68;
    if (v67)
    {

      uint64_t v70 = v89;
      if (v67 == v69)
      {
        uint64_t v71 = v87;
        static OS_os_log.carPlay.getter();
        uint64_t v72 = Logger.logObject.getter();
        os_log_type_t v73 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v72, v73))
        {
          uint64_t v74 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v74 = 0;
          id v75 = "Skipping displyaing the migration template because the welcome template is already visible.";
          id v76 = v72;
          os_log_type_t v77 = v73;
          uint64_t v78 = v74;
          uint32_t v79 = 2;
LABEL_19:
          _os_log_impl((void *)&_mh_execute_header, v76, v77, v75, v78, v79);
          swift_slowDealloc();
          goto LABEL_20;
        }
        goto LABEL_20;
      }
    }
    else
    {

      uint64_t v70 = v89;
    }
    static OS_os_log.carPlay.getter();
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "Displaying migration template.", v84, 2u);
      swift_slowDealloc();
    }

    v36(v70, v107);
    id v85 = CarPlayController.migrationTemplate.getter();
    sub_1001E69AC(v85);
  }
  else
  {
    if (v110)
    {
      uint64_t v71 = v88;
      static OS_os_log.carPlay.getter();
      uint64_t v72 = Logger.logObject.getter();
      os_log_type_t v80 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v72, v80))
      {
        uint64_t v81 = swift_slowAlloc();
        *(_DWORD *)uint64_t v81 = 67109376;
        LODWORD(v109) = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v81 + 8) = 1024;
        swift_beginAccess();
        int v108 = v110;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v75 = "Bootstrap not starting. isMigrating: %{BOOL}d, isShowingWelcome: %{BOOL}d";
        id v76 = v72;
        os_log_type_t v77 = v80;
        uint64_t v78 = (uint8_t *)v81;
        uint32_t v79 = 14;
        goto LABEL_19;
      }
LABEL_20:

      v36(v71, v107);
      return;
    }
    sub_1001E6E20();
  }
}

id _s8Podcasts17CarPlayControllerC20sceneDidBecomeActiveyySo7UISceneCF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Scene became active. Attempt to sync everything.", v8, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id result = *(id *)(v1 + OBJC_IVAR___CarPlayController_syncController);
  if (result) {
    return [result syncEverything];
  }
  return result;
}

uint64_t _s8Podcasts17CarPlayControllerC18templateWillAppear_8animatedySo10CPTemplateC_SbtF_0(void *a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005F9F18);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1005F9F20);
  __chkstk_darwin(v6 - 8);
  uint64_t v101 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100054B78(&qword_1005F9F28);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v90 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78((uint64_t *)&unk_1005F9F30);
  uint64_t v94 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(char **)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unsigned __int8 v89 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v99 = (char *)&v88 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v100 = (char *)&v88 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v103 = (char *)&v88 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v88 - v21;
  uint64_t v105 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  id v23 = a1;
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v98 = v2;
  uint64_t v97 = v3;
  uint64_t v96 = v5;
  uint64_t v95 = v9;
  if (v26)
  {
    uint64_t v102 = v11;
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v111 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    id v28 = [v23 tabTitle];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v32 = v31;
    }
    else
    {
      unint64_t v32 = 0xE200000000000000;
      uint64_t v30 = 16718;
    }
    *(void *)&long long v109 = sub_10004B974(v30, v32, &v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Template will appear called for template with tab title %s.", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v33 = (void (*)(char *, uint64_t))*((void *)v12 + 1);
    uint64_t v11 = v102;
    v33(v22, v102);
  }
  else
  {

    id v33 = (void (*)(char *, uint64_t))*((void *)v12 + 1);
    v33(v22, v11);
  }
  uint64_t v34 = v104;
  self;
  uint64_t v35 = swift_dynamicCastObjCClass();
  if (v35)
  {
    uint64_t v36 = (void *)v35;
    id v37 = v23;
    uint64_t v38 = v103;
    static OS_os_log.carPlay.getter();
    id v39 = v37;
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v99 = v12;
      uint64_t v102 = v11;
      os_log_type_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v42 = 136315138;
      id v43 = [v36 title];
      if (v43)
      {
        id v44 = v43;
        uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v47 = v46;
      }
      else
      {
        unint64_t v47 = 0xE200000000000000;
        uint64_t v45 = 16718;
      }
      *(void *)&long long v109 = sub_10004B974(v45, v47, &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Template will appear called for list template with title %s.", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v11 = v102;
      v33(v103, v102);
      uint64_t v34 = v104;
    }
    else
    {

      v33(v38, v11);
    }
    CarPlayController.createProvider(forListTemplate:)(v36, (uint64_t)&v109);
    if (v110)
    {
      sub_100042FC4(&v109, (uint64_t)&v111);
      uint64_t v57 = v34 + OBJC_IVAR___CarPlayController_nowPlayingController;
      swift_beginAccess();
      sub_100054BBC(v57, (uint64_t)&v107, &qword_1005F9D38);
      if (v108)
      {
        sub_100042FC4(&v107, (uint64_t)&v109);
        sub_100056D54((uint64_t)&v111, (uint64_t)&v107);
        uint64_t v58 = v34 + OBJC_IVAR___CarPlayController_activeTemplateProvider;
        swift_beginAccess();
        sub_100039D84((uint64_t)&v107, v58, &qword_1005F9E98);
        swift_endAccess();
        uint64_t v59 = v112;
        uint64_t v60 = v113;
        sub_100041A98(&v111, v112);
        *(void *)&long long v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v59, v60);
        id v106 = *(id *)(*sub_100041A98(&v109, v110)
                     + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackItemDidChangeSubject);
        sub_100054B78((uint64_t *)&unk_1005F8B00);
        sub_100044200(&qword_1005F9F40, (uint64_t *)&unk_1005F8B00);
        id v106 = (id)Publisher.eraseToAnyPublisher()();
        sub_100054B78((uint64_t *)&unk_1005F9EB0);
        sub_100054B78(&qword_1005F9F48);
        sub_100044200(&qword_1005F8B98, (uint64_t *)&unk_1005F9EB0);
        sub_100044200((unint64_t *)&unk_1005F9F50, &qword_1005F9F48);
        uint64_t v61 = v90;
        Publishers.CombineLatest.init(_:_:)();
        sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
        *(void *)&long long v107 = static OS_dispatch_queue.main.getter();
        uint64_t v62 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
        uint64_t v63 = *(void *)(v62 - 8);
        uint64_t v64 = v34;
        uint64_t v65 = (uint64_t)v101;
        uint64_t v103 = *(char **)(v63 + 56);
        uint64_t v102 = v63 + 56;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v103)(v101, 1, 1, v62);
        sub_100044200((unint64_t *)&unk_1005F9F60, &qword_1005F9F28);
        unint64_t v66 = sub_100059BE0();
        id v67 = v93;
        uint64_t v68 = v92;
        uint64_t v105 = v66;
        Publisher.receive<A>(on:options:)();
        sub_100054B1C(v65, &qword_1005F9F20);

        (*(void (**)(char *, uint64_t))(v91 + 8))(v61, v68);
        uint64_t v69 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v70 = swift_allocObject();
        *(void *)(v70 + 16) = v36;
        *(void *)(v70 + 24) = v69;
        uint64_t v71 = swift_allocObject();
        *(void *)(v71 + 16) = sub_1001ED36C;
        *(void *)(v71 + 24) = v70;
        sub_100044200(&qword_1005F9F70, (uint64_t *)&unk_1005F9F30);
        uint64_t v72 = v39;
        uint64_t v73 = v95;
        uint64_t v74 = Publisher<>.sink(receiveValue:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v94 + 8))(v67, v73);
        uint64_t v75 = OBJC_IVAR___CarPlayController_activeTemplateItemsSubscription;
        if (*(void *)(v64 + OBJC_IVAR___CarPlayController_activeTemplateItemsSubscription))
        {
          swift_retain();
          AnyCancellable.cancel()();
          swift_release();
        }
        *(void *)(v64 + v75) = v74;
        swift_release();
        uint64_t v81 = v112;
        uint64_t v82 = v113;
        sub_100041A98(&v111, v112);
        *(void *)&long long v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 16))(v81, v82);
        id v106 = (id)static OS_dispatch_queue.main.getter();
        uint64_t v83 = (uint64_t)v101;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v103)(v101, 1, 1, v62);
        sub_100054B78(&qword_1005F9F78);
        sub_100044200(&qword_1005F9F80, &qword_1005F9F78);
        uint64_t v84 = v96;
        Publisher.receive<A>(on:options:)();
        sub_100054B1C(v83, &qword_1005F9F20);

        swift_release();
        swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_100044200(&qword_1005F9F88, &qword_1005F9F18);
        uint64_t v85 = v98;
        uint64_t v86 = Publisher<>.sink(receiveValue:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v97 + 8))(v84, v85);
        uint64_t v87 = OBJC_IVAR___CarPlayController_activeTemplateDidSelectItemSubscription;
        if (*(void *)(v64 + OBJC_IVAR___CarPlayController_activeTemplateDidSelectItemSubscription))
        {
          swift_retain();
          AnyCancellable.cancel()();
          swift_release();
        }
        *(void *)(v64 + v87) = v86;

        swift_release();
        sub_10004D2D8((uint64_t)&v109);
        return sub_10004D2D8((uint64_t)&v111);
      }
      sub_100054B1C((uint64_t)&v107, &qword_1005F9D38);
      sub_10004D2D8((uint64_t)&v111);
    }
    else
    {
      sub_100054B1C((uint64_t)&v109, &qword_1005F9E98);
    }
    id v76 = v100;
    static OS_os_log.carPlay.getter();
    os_log_type_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v77, v78))
    {
      uint32_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint32_t v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "Could not create a provider and now playing controller.", v79, 2u);
      swift_slowDealloc();
      os_log_type_t v80 = v39;
    }
    else
    {
      os_log_type_t v80 = v77;
      os_log_type_t v77 = v39;
    }

    return ((uint64_t (*)(char *, uint64_t))v33)(v76, v11);
  }
  uint64_t v48 = v99;
  static OS_os_log.carPlay.getter();
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v49, v50))
  {
    id v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v51 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "aTemplate is not a list template.", v51, 2u);
    swift_slowDealloc();
  }

  v33(v48, v11);
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result)
  {
    NSString v53 = v89;
    static OS_os_log.carPlay.getter();
    os_log_type_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      unint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Cancelling active template subscriptions for a template that is not a CPTabBarTemplate.", v56, 2u);
      swift_slowDealloc();
    }

    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v53, v11);
    if (*(void *)(v34 + OBJC_IVAR___CarPlayController_activeTemplateItemsSubscription))
    {
      swift_retain();
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
    }
    if (*(void *)(v34 + OBJC_IVAR___CarPlayController_activeTemplateDidSelectItemSubscription))
    {
      swift_retain();
      AnyCancellable.cancel()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1001ED070()
{
  return swift_deallocObject();
}

uint64_t sub_1001ED080()
{
  return sub_1001E97D8();
}

uint64_t sub_1001ED088(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001ED0E4()
{
  uint64_t v1 = *(void *)(sub_100054B78((uint64_t *)&unk_1005F7750) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  swift_release();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001ED230()
{
  uint64_t v1 = *(void *)(sub_100054B78((uint64_t *)&unk_1005F7750) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (void *)v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = *(void *)((char *)v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1001E64AC(v3, v4, v5, v6, (uint64_t)(v0 + 6), (uint64_t)v0 + v2, v7);
}

uint64_t sub_1001ED2CC()
{
  return swift_deallocObject();
}

uint64_t sub_1001ED2DC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1001ED318(uint64_t *a1)
{
  sub_1001E4AE0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001ED320()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001ED358(uint64_t a1, uint64_t a2)
{
  return sub_1001E50C4(a1, a2, *(void *)(v2 + 16));
}

double sub_1001ED360(double a1)
{
  return round(a1);
}

void sub_1001ED36C(unint64_t a1)
{
  sub_1001E7EF0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001ED374()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1001ED3AC(void **a1)
{
  sub_1001E84E0(a1, v1);
}

void sub_1001ED3B4(void *a1, char a2)
{
  if (a2 == 2)
  {
  }
  else if (!a2)
  {
    swift_release();
  }
}

uint64_t sub_1001ED3D0()
{
  return sub_1001EA344();
}

BOOL sub_1001ED3F4(id *a1)
{
  return sub_1001EA7A0(a1);
}

uint64_t sub_1001ED414(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1001DD848(result, a2, a3 & 1);
  }
  return result;
}

void sub_1001ED42C()
{
  sub_1001EA800(*(void *)(v0 + 16));
}

uint64_t sub_1001ED434()
{
  return swift_deallocObject();
}

uint64_t sub_1001ED450()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1001ED490(uint64_t a1)
{
  sub_1001E7470(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001ED49C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1001ED4DC(uint64_t a1)
{
  sub_1001E6C24(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001ED4E4()
{
  return sub_1001E7950();
}

uint64_t sub_1001ED4EC()
{
  return swift_deallocObject();
}

void sub_1001ED524(uint64_t a1)
{
  sub_1001E7A4C(a1, *(void **)(v1 + 16), (uint64_t)UInt64.int64Representation.getter, (uint64_t)&unk_100558B90);
}

void sub_1001ED55C(uint64_t a1)
{
  sub_1001E7A4C(a1, *(void **)(v1 + 16), (uint64_t)j___ss6UInt64V8PodcastsE19int64Representations5Int64Vvg, (uint64_t)&unk_100558B68);
}

uint64_t sub_1001ED5EC(int a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for NowPlayingViewModel.PlayerStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v25 - v13;
  uint64_t v15 = os_feature_enabled_red_sun();
  if (v15)
  {
    uint64_t v27 = a2;
    uint64_t v28 = a3;
    int v26 = a1;
    sub_100012998();
    uint64_t v16 = type metadata accessor for NowPlayingMediaPlayerController();
    v25[1] = sub_10001E544(&qword_1005FA170, 255, (void (*)(uint64_t))&type metadata accessor for NowPlayingMediaPlayerController);
    v25[2] = v16;
    NowPlayingController.playerStyle.getter();
    swift_release();
    uint64_t v17 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    v17(v12, enum case for NowPlayingViewModel.PlayerStyle.mini(_:), v8);
    char v18 = static NowPlayingViewModel.PlayerStyle.== infix(_:_:)();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v12, v8);
    uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
    if (v18)
    {
      uint64_t v21 = *(void *)(v4 + 96);
      uint64_t v22 = (uint64_t)v27;
      uint64_t v23 = v28;
      *(void *)(v4 + 96) = v27;
      *(void *)(v4 + 104) = v23;
      sub_10004ACDC(v22);
      sub_1000536BC(v21);
      sub_100012998();
      v17(v14, enum case for NowPlayingViewModel.PlayerStyle.fullScreen(_:), v8);
      NowPlayingController.transition(to:animated:)();
      swift_release();
      v19(v14, v8);
    }
    else if (v27)
    {
      v27(v20);
    }
  }
  return v15;
}

uint64_t sub_1001ED850(int a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for NowPlayingViewModel.PlayerStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v25 - v13;
  uint64_t v15 = os_feature_enabled_red_sun();
  if (v15)
  {
    uint64_t v27 = a2;
    uint64_t v28 = a3;
    int v26 = a1;
    sub_100012998();
    uint64_t v16 = type metadata accessor for NowPlayingMediaPlayerController();
    v25[1] = sub_10001E544(&qword_1005FA170, 255, (void (*)(uint64_t))&type metadata accessor for NowPlayingMediaPlayerController);
    v25[2] = v16;
    NowPlayingController.playerStyle.getter();
    swift_release();
    uint64_t v17 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    v17(v12, enum case for NowPlayingViewModel.PlayerStyle.fullScreen(_:), v8);
    char v18 = static NowPlayingViewModel.PlayerStyle.== infix(_:_:)();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v12, v8);
    uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
    if (v18)
    {
      uint64_t v21 = *(void *)(v4 + 112);
      uint64_t v22 = (uint64_t)v27;
      uint64_t v23 = v28;
      *(void *)(v4 + 112) = v27;
      *(void *)(v4 + 12sub_1001DA808(0, 0) = v23;
      sub_10004ACDC(v22);
      sub_1000536BC(v21);
      sub_100012998();
      v17(v14, enum case for NowPlayingViewModel.PlayerStyle.mini(_:), v8);
      NowPlayingController.transition(to:animated:)();
      swift_release();
      v19(v14, v8);
    }
    else if (v27)
    {
      v27(v20);
    }
  }
  return v15;
}

uint64_t sub_1001EDAB4(char a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005FA180);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1005FA188);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = RepublishingValueSubject.value.getter();
  uint64_t v11 = v13;
  if (v13)
  {
    if (a1)
    {
      UISplitViewController.mcui.getter();
      MCUINamespace<A>.installNowPlayingViewController<A>(_:)();

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      UITabBarController.mcui.getter();
      MCUINamespace<A>.installNowPlayingViewController<A>(_:)();

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  return result;
}

uint64_t sub_1001EDC7C(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1001EDAB4(v1);
    return swift_release();
  }
  return result;
}

void sub_1001EDCDC()
{
  char v1 = v0;
  if ((static Podcasts.isUIPSidebarEnabled.getter() & 1) != 0
    || (uint64_t v0 = (void *)v0[6], (dispatch thunk of RootSplitViewController.interfaceMode.getter() & 1) == 0))
  {
    id v2 = [(id)v1[7] view];
    if (v2) {
      goto LABEL_6;
    }
    __break(1u);
  }
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    return;
  }
LABEL_6:
  id v3 = v2;
  [v2 endEditing:1];
}

uint64_t sub_1001EDD80()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000536BC(*(void *)(v0 + 96));
  sub_1000536BC(*(void *)(v0 + 112));
  return v0;
}

uint64_t sub_1001EDDF0()
{
  sub_1001EDD80();

  return swift_deallocClassInstance();
}

uint64_t sub_1001EDE34()
{
  sub_100012998();
  NowPlayingMediaPlayerController.didUpdateSelectedContent(from:to:)();

  return swift_release();
}

uint64_t sub_1001EDE98()
{
  swift_retain();
  sub_100012998();
  swift_retain();
  swift_release();
  NowPlayingMetricsControllerWrapper.observe(lifecycleEvent:)();
  swift_release();

  return swift_release();
}

uint64_t sub_1001EDF10(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v3 = type metadata accessor for NowPlayingViewModel.PlayerStyle();
  uint64_t v4 = *(void **)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = &v25[-v9];
  __chkstk_darwin(v8);
  uint64_t v12 = &v25[-v11];
  uint64_t v13 = (void (*)(unsigned char *))v4[13];
  unsigned int v28 = enum case for NowPlayingViewModel.PlayerStyle.mini(_:);
  v13(&v25[-v11]);
  uint64_t v30 = a1;
  char v14 = static NowPlayingViewModel.PlayerStyle.== infix(_:_:)();
  uint64_t v15 = (void (*)(unsigned char *, uint64_t))v4[1];
  v15(v12, v3);
  unint64_t v31 = (void (*)(unsigned char *, uint64_t, uint64_t))v4[2];
  unint64_t v32 = v4 + 2;
  v31(v10, v35, v3);
  id v33 = v4 + 13;
  uint64_t v34 = (void (*)(unsigned char *, void, uint64_t))v13;
  if (v14)
  {
    uint64_t v27 = v7;
    unsigned int v26 = enum case for NowPlayingViewModel.PlayerStyle.fullScreen(_:);
    v13(v12);
    char v16 = static NowPlayingViewModel.PlayerStyle.== infix(_:_:)();
    v15(v12, v3);
    v15(v10, v3);
    uint64_t v17 = v15;
    if ((v16 & 1) != 0
      && ((id v18 = [*(id *)(v29 + 56) presentedViewController]) != 0
       || (id v18 = [*(id *)(v29 + 48) presentedViewController]) != 0))
    {
      if ([v18 modalPresentationStyle] == (id)7) {
        [v18 dismissViewControllerAnimated:1 completion:0];
      }

      uint64_t v7 = v27;
      uint64_t v19 = v35;
    }
    else
    {
      uint64_t v7 = v27;
      uint64_t v19 = v35;
    }
    uint64_t v20 = v26;
  }
  else
  {
    v15(v10, v3);
    uint64_t v20 = enum case for NowPlayingViewModel.PlayerStyle.fullScreen(_:);
    uint64_t v19 = v35;
    uint64_t v17 = v15;
  }
  uint64_t v21 = v34;
  v34(v12, v20, v3);
  char v22 = static NowPlayingViewModel.PlayerStyle.== infix(_:_:)();
  v17(v12, v3);
  v31(v7, v19, v3);
  if ((v22 & 1) == 0) {
    return ((uint64_t (*)(unsigned char *, uint64_t))v17)(v7, v3);
  }
  v21(v12, v28, v3);
  char v23 = static NowPlayingViewModel.PlayerStyle.== infix(_:_:)();
  v17(v12, v3);
  uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v17)(v7, v3);
  if (v23)
  {
    sub_100012998();
    NowPlayingMediaPlayerController.willTransitionToMiniPlayer()();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001EE2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100054B78(&qword_1005FA178);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v9[*(int *)(v7 + 56)];
  uint64_t v11 = type metadata accessor for NowPlayingViewModel.PlayerStyle();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v13(v9, a1, v11);
  v13(v10, a2, v11);
  char v14 = *(uint64_t (**)(char *, uint64_t))(v12 + 88);
  int v15 = v14(v9, v11);
  int v16 = enum case for NowPlayingViewModel.PlayerStyle.mini(_:);
  if (v15 != enum case for NowPlayingViewModel.PlayerStyle.mini(_:))
  {
    if (v15 == enum case for NowPlayingViewModel.PlayerStyle.fullScreen(_:) && v14(v10, v11) == v16)
    {
      uint64_t v20 = (void (*)(uint64_t))v3[14];
      if (v20)
      {
        uint64_t v21 = swift_retain();
        v20(v21);
        sub_1000536BC((uint64_t)v20);
        uint64_t v22 = v3[14];
      }
      else
      {
        uint64_t v22 = 0;
      }
      v3[14] = 0;
      v3[15] = 0;
      sub_1000536BC(v22);
      uint64_t v27 = self;
      id v28 = [v27 defaultCenter];
      [v28 removeObserver:v3 name:MTApplicationDidEnterBackgroundNotification object:0];

      id v29 = [v27 defaultCenter];
      [v29 removeObserver:v3 name:MTApplicationDidBecomeActiveNotification object:0];

      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    }
    return sub_100054B1C((uint64_t)v9, &qword_1005FA178);
  }
  if (v14(v10, v11) != enum case for NowPlayingViewModel.PlayerStyle.fullScreen(_:)) {
    return sub_100054B1C((uint64_t)v9, &qword_1005FA178);
  }
  sub_100012998();
  NowPlayingMediaPlayerController.didTransitionToFullScreenPlayer()();
  swift_release();
  uint64_t v17 = (void (*)(uint64_t))v3[12];
  if (v17)
  {
    uint64_t v18 = swift_retain();
    v17(v18);
    sub_1000536BC((uint64_t)v17);
    uint64_t v19 = v3[12];
  }
  else
  {
    uint64_t v19 = 0;
  }
  v3[12] = 0;
  v3[13] = 0;
  sub_1000536BC(v19);
  uint64_t v24 = self;
  id v25 = [v24 defaultCenter];
  [v25 addObserver:v3 selector:"appExitedWhileFullPlayerAppeared" name:MTApplicationDidEnterBackgroundNotification object:0];

  id v26 = [v24 defaultCenter];
  [v26 addObserver:v3 selector:"appEnteredWhileFullPlayerAppeared" name:MTApplicationDidBecomeActiveNotification object:0];

  sub_1001EDCDC();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, v11);
}

uint64_t sub_1001EE630()
{
  return swift_deallocObject();
}

uint64_t sub_1001EE640()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1001EE678()
{
  unint64_t result = qword_1005FA230;
  if (!qword_1005FA230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FA230);
  }
  return result;
}

uint64_t sub_1001EE6CC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001EE704(char *a1)
{
  return sub_1001EDC7C(a1);
}

void sub_1001EE70C(void *a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    sub_1001EE720(a1, a2, a3);
  }
}

void sub_1001EE720(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a3 == 1)
  {
  }
}

id sub_1001EE76C()
{
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_allowNotificationsSection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_newEpisodeSection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_serverPushSection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_orderedSections] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  char v1 = &v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_newEpisodeNotifcationGroupInitialHighlightedPodcastUuid];
  *char v1 = 0;
  v1[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_subscriptions] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_hasLoadedSettings] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MTNotificationSettingsSectionedViewController();
  id result = [super init];
  if (result)
  {
    id v3 = result;
    sub_1001F06C4();

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001EE860()
{
  if ((v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_hasLoadedSettings] & 1) == 0)
  {
    char v1 = v0;
    v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_hasLoadedSettings] = 1;
    id v2 = sub_10024A4DC();
    uint64_t v3 = OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_newEpisodeSection;
    *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_newEpisodeSection] = v2;
    swift_release();
    uint64_t v4 = *(void *)&v0[v3];
    if (v4)
    {
      uint64_t v34 = type metadata accessor for MTNotificationSettingsSectionedViewController();
      uint64_t v35 = &off_100558C48;
      v33[0] = v1;
      sub_1001F1BDC((uint64_t)v33, (uint64_t)v32);
      swift_beginAccess();
      swift_retain();
      uint64_t v5 = v1;
      sub_1001F1C44((uint64_t)v32, v4 + 48);
      swift_endAccess();
      swift_release();
    }
    sub_10004D29C(0, (unint64_t *)&unk_1005FE480);
    id v6 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
    unsigned int v7 = [v6 isUserLoggedIn];

    if (v7)
    {
      id v8 = [v1 traitCollection];
      char v9 = UITraitCollection.interfaceIdiomIsMac.getter();

      if ((v9 & 1) == 0)
      {
        _s14descr10054C489C17ServerPushSectionCMa();
        swift_allocObject();
        sub_10035CAD8((uint64_t)&off_1005542E0);
        uint64_t v10 = OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_serverPushSection;
        *(void *)&v1[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_serverPushSection] = v11;
        swift_release();
        uint64_t v12 = *(void *)&v1[v10];
        if (v12)
        {
          uint64_t v34 = type metadata accessor for MTNotificationSettingsSectionedViewController();
          uint64_t v35 = &off_100558C48;
          v33[0] = v1;
          sub_1001F1BDC((uint64_t)v33, (uint64_t)v32);
          swift_beginAccess();
          uint64_t v13 = v1;
          swift_retain();
          sub_1001F1C44((uint64_t)v32, v12 + 48);
          swift_endAccess();
          swift_release();
        }
      }
    }
    sub_100054B78(&qword_1005FA388);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10046D030;
    *(void *)(inited + 32) = *(void *)&v1[v3];
    *(void *)(inited + 4sub_1001DA808(0, 0) = *(void *)&v1[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_serverPushSection];
    v33[0] = inited;
    specialized Array._endMutation()();
    uint64_t v15 = v33[0];
    v33[0] = _swiftEmptyArrayStorage;
    if (*(void *)(v15 + 32))
    {
      swift_retain();
      swift_retain();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v33[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if (!*(void *)(v15 + 40))
      {
LABEL_17:
        uint64_t v16 = v33[0];
        swift_bridgeObjectRelease();
        uint64_t v17 = (uint64_t *)&v1[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_orderedSections];
        swift_beginAccess();
        uint64_t *v17 = v16;
        swift_bridgeObjectRelease();
        uint64_t v18 = self;
        id v19 = [v18 _applePodcastsFoundationSharedUserDefaults];
        unsigned __int8 v20 = [v19 BOOLForKey:kMTDidPromptForNotificationsPermissionsKey];

        if ((v20 & 1) != 0
          && (id v21 = [v18 _applePodcastsFoundationSharedUserDefaults],
              unsigned __int8 v22 = [v21 BOOLForKey:kMTNotificationStatusIsAuthorizedKey],
              v21,
              (v22 & 1) == 0))
        {
          _s14descr10054C569C25AllowNotificationsSectionCMa();
          swift_allocObject();
          sub_1003664EC();
          uint64_t v25 = v26;
          uint64_t v34 = type metadata accessor for MTNotificationSettingsSectionedViewController();
          uint64_t v35 = &off_100558C48;
          v33[0] = v1;
          sub_1001F1BDC((uint64_t)v33, (uint64_t)v32);
          swift_beginAccess();
          uint64_t v27 = v1;
          sub_1001F1C44((uint64_t)v32, v25 + 48);
          swift_endAccess();
          *(void *)&v27[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_allowNotificationsSection] = v25;
          swift_retain();
          swift_release();
          swift_beginAccess();
          uint64_t v24 = *v17;
          if (!((unint64_t)*v17 >> 62))
          {
            swift_retain();
            goto LABEL_25;
          }
        }
        else
        {
          if (*(void *)&v1[v3] && byte_10061A9D8 != 1) {
            goto LABEL_31;
          }
          _s14descr10054B1E1C22NoSubscriptionsSectionCMa();
          swift_allocObject();
          sub_10026D2B0();
          uint64_t v24 = v23;
          swift_beginAccess();
          uint64_t v25 = *v17;
          if (!((unint64_t)*v17 >> 62)
            || (swift_bridgeObjectRetain(),
                uint64_t v29 = _CocoaArrayWrapper.endIndex.getter(),
                swift_bridgeObjectRelease(),
                (v29 & 0x8000000000000000) == 0))
          {
            sub_1001FA960(0, 0, v24);
            swift_endAccess();
LABEL_31:
            sub_1001EFA1C();
            return;
          }
          __break(1u);
        }
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v30 < 0)
        {
          __break(1u);
          goto LABEL_37;
        }
LABEL_25:
        sub_1001FA960(0, 0, v25);
        swift_endAccess();
        if (*(void *)&v1[v3] && byte_10061A9D8 != 1) {
          goto LABEL_30;
        }
        _s14descr10054B1E1C22NoSubscriptionsSectionCMa();
        swift_allocObject();
        sub_10026D2B0();
        uint64_t v24 = v28;
        swift_beginAccess();
        if (!((unint64_t)*v17 >> 62))
        {
          if (*(uint64_t *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
          {
LABEL_38:
            __break(1u);
            return;
          }
          goto LABEL_29;
        }
LABEL_37:
        swift_bridgeObjectRetain();
        uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v31 < 1) {
          goto LABEL_38;
        }
LABEL_29:
        sub_1001FA960(1, 1, v24);
        swift_endAccess();
LABEL_30:
        swift_release();
        goto LABEL_31;
      }
    }
    else
    {
      swift_retain();
      swift_retain();
      if (!*(void *)(v15 + 40)) {
        goto LABEL_17;
      }
    }
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v33[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_17;
  }
}

id sub_1001EEEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = type metadata accessor for IndexSet();
  uint64_t v6 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EFA1C();
  uint64_t v52 = *(void *)(a1 + 16);
  if (!v52) {
    goto LABEL_58;
  }
  id v8 = &v2[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_orderedSections];
  uint64_t v51 = a1 + 32;
  v43[1] = a1;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v9 = 0;
  unint64_t v47 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v48 = (char *)&type metadata for Any + 8;
  uint64_t v45 = v2;
  uint64_t v44 = a2;
  unint64_t v46 = v8;
  while (1)
  {
    uint64_t v10 = (uint64_t *)(v51 + 16 * v9);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    uint64_t v13 = *(void *)v8;
    if (*(void *)v8 >> 62) {
      break;
    }
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_7;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    if (++v9 == v52)
    {
      swift_bridgeObjectRelease();
LABEL_58:
      id result = (id)swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        sub_1001EE860();
        return (id)swift_unknownObjectRelease();
      }
      return result;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  if (!v14) {
    goto LABEL_3;
  }
LABEL_7:
  if ((v13 & 0xC000000000000001) != 0)
  {
    uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v15 = *(void *)(v13 + 32);
    swift_retain();
  }
  if (*(void *)(v15 + 16) == v12 && *(void *)(v15 + 24) == v11)
  {
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v18 = 0;
    goto LABEL_35;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_release();
  if (v17)
  {
    swift_bridgeObjectRelease();
    unint64_t v18 = 0;
LABEL_34:
    id v8 = v46;
LABEL_35:
    id result = [v3 settingsController];
    if (!result) {
      goto LABEL_64;
    }
    uint64_t v25 = result;
    *(void *)&long long v55 = v12;
    *((void *)&v55 + 1) = v11;
    swift_bridgeObjectRetain();
    id result = (id)AnyHashable.init<A>(_:)();
    uint64_t v26 = *(void *)v8;
    if ((*(void *)v8 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v18 & 0x8000000000000000) != 0) {
        goto LABEL_62;
      }
      if (v18 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_63;
      }
      uint64_t v27 = *(void *)(v26 + 8 * v18 + 32);
      swift_retain();
    }
    id v28 = *(id *)(v27 + 40);
    swift_release();
    uint64_t v56 = sub_10004D29C(0, &qword_1005FA380);
    *(void *)&long long v55 = v28;
    id result = [v25 groups];
    if (!result) {
      goto LABEL_65;
    }
    uint64_t v29 = result;
    uint64_t v30 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    if (v56)
    {
      sub_10004D384(&v55, v54);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v53 = v30;
      sub_10027F164(v54, (uint64_t)v57, isUniquelyReferenced_nonNull_native);
      uint64_t v32 = v53;
      swift_bridgeObjectRelease();
      sub_100172F18((uint64_t)v57);
      if (v32) {
        goto LABEL_43;
      }
LABEL_50:
      v33.super.Class isa = 0;
    }
    else
    {
      sub_100054B1C((uint64_t)&v55, &qword_1005F5D30);
      swift_bridgeObjectRetain();
      unint64_t v34 = sub_100226C5C((uint64_t)v57);
      char v36 = v35;
      swift_bridgeObjectRelease();
      if (v36)
      {
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v53 = v30;
        if ((v37 & 1) == 0)
        {
          sub_100280B90();
          uint64_t v30 = v53;
        }
        sub_100172F18(*(void *)(v30 + 48) + 40 * v34);
        sub_10004D384((_OWORD *)(*(void *)(v30 + 56) + 32 * v34), v54);
        sub_10027DD18(v34, v30);
        swift_bridgeObjectRelease();
      }
      else
      {
        memset(v54, 0, sizeof(v54));
      }
      sub_100172F18((uint64_t)v57);
      sub_100054B1C((uint64_t)v54, &qword_1005F5D30);
      if (!v30) {
        goto LABEL_50;
      }
LABEL_43:
      v33.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    [v25 setGroups:v33.super.isa];

    id result = [v3 tableView];
    if (!result) {
      goto LABEL_66;
    }
    uint64_t v38 = result;
    id v39 = v49;
    IndexSet.init(integer:)();
    IndexSet._bridgeToObjectiveC()(v40);
    os_log_type_t v42 = v41;
    (*v47)(v39, v50);
    [v38 reloadSections:v42 withRowAnimation:a2];

    goto LABEL_4;
  }
  if (v14 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_30:
    id v8 = v46;
    goto LABEL_4;
  }
  uint64_t v19 = 5;
  while (2)
  {
    unint64_t v18 = v19 - 4;
    if ((v13 & 0xC000000000000001) != 0)
    {
      uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v20 = *(void *)(v13 + 8 * v19);
      swift_retain();
    }
    if (*(void *)(v20 + 16) == v12 && *(void *)(v20 + 24) == v11)
    {
      swift_bridgeObjectRelease();
      swift_release();
LABEL_33:
      uint64_t v3 = v45;
      a2 = v44;
      goto LABEL_34;
    }
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    id result = (id)swift_release();
    if (v22)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    uint64_t v24 = v19 - 3;
    if (!__OFADD__(v18, 1))
    {
      ++v19;
      if (v24 == v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v45;
        a2 = v44;
        goto LABEL_30;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

void sub_1001EF54C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  __chkstk_darwin(v8);
  char v36 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = *(void *)&v3[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_newEpisodeSection];
  if (v19)
  {
    uint64_t v20 = *(void **)(v19 + 40);
    swift_retain();
    id v21 = [v20 groupSettings];
    if (v21)
    {
      char v22 = v21;
      sub_10004D29C(0, (unint64_t *)&qword_1005F8288);
      unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      __chkstk_darwin(v24);
      *(&v34 - 2) = a1;
      *(&v34 - 1) = a2;
      uint64_t v25 = sub_100248780((uint64_t (*)(id *))sub_1001F1D30, (uint64_t)(&v34 - 4), v23);
      swift_release();
      swift_bridgeObjectRelease();
      if (v25)
      {
        [v4 setCellEmphasisStyle:2];
        [v4 setEmphasizedSetting:v25];
        uint64_t v26 = &v4[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_newEpisodeNotifcationGroupInitialHighlightedPodcastUuid];
        *(void *)uint64_t v26 = 0;
        *((void *)v26 + 1) = 0;
        swift_bridgeObjectRelease();
        if (a3)
        {
          sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
          uint64_t v35 = static OS_dispatch_queue.main.getter();
          static DispatchTime.now()();
          + infix(_:_:)();
          uint64_t v37 = *(void *)(v37 + 8);
          uint64_t v27 = v16;
          uint64_t v28 = v38;
          ((void (*)(char *, uint64_t))v37)(v27, v38);
          uint64_t v29 = swift_allocObject();
          swift_unknownObjectWeakInit();
          aBlock[4] = sub_1001F1D14;
          aBlock[5] = v29;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10003B424;
          void aBlock[3] = &unk_100558CB0;
          uint64_t v30 = _Block_copy(aBlock);
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_10002FC48();
          sub_100054B78((uint64_t *)&unk_1005FE4B0);
          sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
          uint64_t v31 = v36;
          uint64_t v32 = v42;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          NSDictionary v33 = (void *)v35;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
          _Block_release(v30);

          (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v32);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v40);
          ((void (*)(char *, uint64_t))v37)(v18, v28);
        }
        else
        {
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1001EFA1C()
{
  id v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_orderedSections);
  swift_beginAccess();
  uint64_t v85 = v2;
  uint64_t v3 = *v2;
  if ((unint64_t)*v2 >> 62) {
    goto LABEL_77;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if ((unint64_t)*v85 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((*v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_15;
  }
LABEL_3:
  uint64_t v5 = 0;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t i = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t i = *(id **)(v3 + 8 * v5 + 32);
      swift_retain();
    }
    id v6 = [i[5] groupSettings:v80];
    if (v6)
    {
      uint64_t v7 = v6;
      sub_10004D29C(0, (unint64_t *)&qword_1005F8288);
      uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v8 = 0;
    }
    unsigned __int8 v89 = (void *)v8;
    sub_100054B78(&qword_1005FA368);
    sub_100044200(&qword_1005FA370, &qword_1005FA378);
    char v9 = Optional<A>.isEmpty.getter();
    swift_release();
    swift_bridgeObjectRelease();
    if (v9) {
      break;
    }
    uint64_t v10 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        goto LABEL_13;
      }
      goto LABEL_3;
    }
    ++v5;
    if (v10 == v4) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t i = (id *)(v5 + 1);
  if (__OFADD__(v5, 1)) {
    goto LABEL_148;
  }
  if ((unint64_t)*v85 >> 62) {
    goto LABEL_149;
  }
  if (i != *(id **)((*v85 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_28:
    uint64_t v3 = v5 + 5;
    while (1)
    {
      unint64_t v14 = v3 - 4;
      uint64_t v15 = *v85;
      if ((*v85 & 0xC000000000000001) != 0)
      {
        uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_67;
        }
        if (v14 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_68;
        }
        uint64_t v16 = *(void *)(v15 + 8 * v3);
        swift_retain();
      }
      id v17 = [*(id *)(v16 + 40) groupSettings:v80];
      if (v17)
      {
        unint64_t v18 = v17;
        sub_10004D29C(0, (unint64_t *)&qword_1005F8288);
        uint64_t i = (id *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t i = 0;
      }
      unsigned __int8 v89 = i;
      char v19 = Optional<A>.isEmpty.getter();
      swift_release();
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_57;
      }
      if (v14 != v5) {
        break;
      }
LABEL_56:
      BOOL v26 = __OFADD__(v5++, 1);
      if (v26) {
        goto LABEL_70;
      }
LABEL_57:
      uint64_t i = (id *)(v3 - 3);
      if (__OFADD__(v14, 1)) {
        goto LABEL_69;
      }
      if ((unint64_t)*v85 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v27 = *(void *)((*v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      ++v3;
      if (i == (id *)v27) {
        goto LABEL_15;
      }
    }
    uint64_t v20 = *v85;
    if ((*v85 & 0xC000000000000001) != 0)
    {
      uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v20 = *v85;
      if ((*v85 & 0xC000000000000001) == 0)
      {
LABEL_42:
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_73;
        }
        if (v14 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_74;
        }
        uint64_t v22 = *(void *)(v20 + 8 * v3);
        swift_retain();
        goto LABEL_45;
      }
    }
    else
    {
      if (v5 < 0) {
        goto LABEL_71;
      }
      if ((unint64_t)v5 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_72;
      }
      uint64_t v21 = *(void *)(v20 + 8 * v5 + 32);
      swift_retain();
      if ((v20 & 0xC000000000000001) == 0) {
        goto LABEL_42;
      }
    }
    uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v20 = *v85;
LABEL_45:
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v85 = v20;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v20 < 0 || (v20 & 0x4000000000000000) != 0)
    {
      uint64_t v20 = sub_10041875C(v20);
      *uint64_t v85 = v20;
    }
    *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x2sub_1001DA808(0, 0) = v22;
    swift_release();
    specialized Array._endMutation()();
    uint64_t v24 = *v85;
    int v25 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v85 = v24;
    if (!v25 || v24 < 0 || (v24 & 0x4000000000000000) != 0)
    {
      uint64_t v24 = sub_10041875C(v24);
      *uint64_t v85 = v24;
    }
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_75;
    }
    if (v14 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_76;
    }
    *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v3) = v21;
    swift_release();
    specialized Array._endMutation()();
    goto LABEL_56;
  }
  while (1)
  {
LABEL_15:
    uint64_t v11 = *v85;
    if ((unint64_t)*v85 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v12 < v5)
      {
LABEL_80:
        __break(1u);
LABEL_81:
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        if (!v13) {
          goto LABEL_82;
        }
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12 < v5) {
        goto LABEL_80;
      }
    }
    sub_1001FBA68(v5, v12);
    swift_endAccess();
    uint64_t v11 = *v85;
    if ((unint64_t)*v85 >> 62) {
      goto LABEL_81;
    }
    uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v13) {
      goto LABEL_82;
    }
LABEL_19:
    if (v13 < 1)
    {
      __break(1u);
      goto LABEL_145;
    }
    for (uint64_t i = 0; i != (id *)v13; uint64_t i = (id *)((char *)i + 1))
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v5 = *(void *)(v11 + 8 * (void)i + 32);
        swift_retain();
      }
      [*(id *)(v5 + 40) setCustomHeaderHeight:0.0 v80];
      swift_release();
    }
LABEL_82:
    swift_bridgeObjectRelease();
    uint64_t v28 = *v85;
    if ((unint64_t)*v85 >> 62)
    {
      swift_bridgeObjectRetain();
      if (!_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_89;
      }
LABEL_84:
      if ((v28 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_147;
        }
        uint64_t v30 = *(void *)(v28 + 32);
        swift_retain();
        goto LABEL_87;
      }
LABEL_145:
      uint64_t v30 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_87:
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void **)(v30 + 40);
      uint64_t i = (id *)objc_allocWithZone((Class)MTDynamicTypeConstant);
      uint64_t v5 = v31;
      uint64_t v32 = [i initWithDefaultConstant:UIFontTextStyleBody textStyle:55.0];
      [v32 currentConstant];
      double v34 = v33;

      [(id)v5 setCustomHeaderHeight:v34];
      swift_release();

      goto LABEL_90;
    }
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_84;
    }
LABEL_89:
    swift_bridgeObjectRelease();
LABEL_90:
    id v80 = [objc_allocWithZone((Class)MTSettingsController) init];
    uint64_t v35 = *v85;
    if ((unint64_t)*v85 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      if (!v36)
      {
LABEL_102:
        swift_bridgeObjectRelease();
        goto LABEL_103;
      }
    }
    else
    {
      uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v36) {
        goto LABEL_102;
      }
    }
    unsigned __int8 v89 = _swiftEmptyArrayStorage;
    sub_1001BA500(0, v36 & ~(v36 >> 63), 0);
    if ((v36 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    swift_bridgeObjectRetain();
    uint64_t v79 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (i != (id *)v79) {
      goto LABEL_28;
    }
  }
  uint64_t v37 = 0;
  uint64_t v38 = v89;
  do
  {
    if ((v35 & 0xC000000000000001) != 0)
    {
      uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v39 = *(void *)(v35 + 8 * v37 + 32);
      swift_retain();
    }
    uint64_t v41 = *(void *)(v39 + 16);
    uint64_t v40 = *(void *)(v39 + 24);
    uint64_t v88 = &type metadata for String;
    swift_bridgeObjectRetain();
    swift_release();
    *(void *)&long long v87 = v41;
    *((void *)&v87 + 1) = v40;
    unsigned __int8 v89 = v38;
    unint64_t v43 = v38[2];
    unint64_t v42 = v38[3];
    if (v43 >= v42 >> 1)
    {
      sub_1001BA500(v42 > 1, v43 + 1, 1);
      uint64_t v38 = v89;
    }
    ++v37;
    v38[2] = v43 + 1;
    sub_10004D384(&v87, &v38[4 * v43 + 4]);
  }
  while (v36 != v37);
  swift_bridgeObjectRelease();
LABEL_103:
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v80 setOrder:isa];

  unint64_t v45 = *v85;
  if ((unint64_t)*v85 >> 62) {
    goto LABEL_127;
  }
  uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v46)
  {
LABEL_105:
    unint64_t v83 = v45 & 0xC000000000000001;
    unint64_t v47 = &_swiftEmptyDictionarySingleton;
    uint64_t v48 = 4;
    uint64_t v81 = v46;
    unint64_t v82 = v45;
    while (1)
    {
      uint64_t v50 = v48 - 4;
      if (v83)
      {
        uint64_t v51 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v52 = v48 - 3;
        if (__OFADD__(v50, 1)) {
          goto LABEL_124;
        }
      }
      else
      {
        uint64_t v51 = *(void **)(v45 + 8 * v48);
        swift_retain();
        uint64_t v52 = v48 - 3;
        if (__OFADD__(v50, 1))
        {
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          swift_bridgeObjectRetain_n();
          uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v46) {
            break;
          }
          goto LABEL_105;
        }
      }
      uint64_t v86 = v52;
      uint64_t v53 = v51[2];
      uint64_t v54 = v51[3];
      long long v55 = (void *)v51[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v45 = v55;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v87 = v47;
      unint64_t v58 = sub_100051E78(v53, v54);
      uint64_t v59 = v47[2];
      BOOL v60 = (v57 & 1) == 0;
      uint64_t v61 = v59 + v60;
      if (__OFADD__(v59, v60)) {
        goto LABEL_125;
      }
      char v62 = v57;
      if (v47[3] >= v61)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v65 = (void *)v87;
          if (v57) {
            goto LABEL_106;
          }
        }
        else
        {
          sub_100280B84();
          uint64_t v65 = (void *)v87;
          if (v62) {
            goto LABEL_106;
          }
        }
      }
      else
      {
        sub_100279E60(v61, isUniquelyReferenced_nonNull_native);
        unint64_t v63 = sub_100051E78(v53, v54);
        if ((v62 & 1) != (v64 & 1)) {
          goto LABEL_152;
        }
        unint64_t v58 = v63;
        uint64_t v65 = (void *)v87;
        if (v62)
        {
LABEL_106:
          uint64_t v49 = v65[7];

          *(void *)(v49 + 8 * v58) = v45;
          goto LABEL_107;
        }
      }
      v65[(v58 >> 6) + 8] |= 1 << v58;
      unint64_t v66 = (uint64_t *)(v65[6] + 16 * v58);
      *unint64_t v66 = v53;
      v66[1] = v54;
      *(void *)(v65[7] + 8 * v58) = v45;
      uint64_t v67 = v65[2];
      BOOL v26 = __OFADD__(v67, 1);
      uint64_t v68 = v67 + 1;
      if (v26) {
        goto LABEL_126;
      }
      v65[2] = v68;
      swift_bridgeObjectRetain();
LABEL_107:
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v48;
      unint64_t v47 = v65;
      unint64_t v45 = v82;
      if (v86 == v81) {
        goto LABEL_129;
      }
    }
  }
  uint64_t v65 = &_swiftEmptyDictionarySingleton;
LABEL_129:
  swift_bridgeObjectRelease_n();
  sub_100277634((uint64_t)v65);
  swift_bridgeObjectRelease();
  Class v69 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v80 setGroups:v69];

  [v84 setSettingsController:v80];
  uint64_t v70 = *v85;
  if ((unint64_t)*v85 >> 62)
  {
LABEL_141:
    swift_bridgeObjectRetain_n();
    uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
    if (!v71) {
      goto LABEL_139;
    }
LABEL_131:
    uint64_t v72 = 4;
    while (1)
    {
      uint64_t v73 = v72 - 4;
      if ((v70 & 0xC000000000000001) != 0)
      {
        uint64_t v74 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v75 = v72 - 3;
        if (__OFADD__(v73, 1)) {
          goto LABEL_140;
        }
      }
      else
      {
        uint64_t v74 = *(void *)(v70 + 8 * v72);
        swift_retain();
        uint64_t v75 = v72 - 3;
        if (__OFADD__(v73, 1))
        {
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
      }
      id v76 = [v84 settingsController];
      if (!v76) {
        break;
      }
      os_log_type_t v77 = v76;
      (*(void (**)(void))(*(void *)v74 + 224))();
      swift_release();

      ++v72;
      if (v75 == v71) {
        goto LABEL_139;
      }
    }
    __break(1u);
LABEL_152:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t v71 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v71) {
      goto LABEL_131;
    }
LABEL_139:

    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1001F06C4()
{
  id v0 = [self _applePodcastsFoundationSharedUserDefaults];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSUserDefaults.BOOLPublisher(forKey:)();

  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100054B78((uint64_t *)&unk_1005FCA40);
  sub_100044200(&qword_100603460, (uint64_t *)&unk_1005FCA40);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_100054B78((uint64_t *)&unk_1005F9ED0);
  sub_100044200(qword_1005F8BB0, (uint64_t *)&unk_1005F9ED0);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

void sub_1001F0854(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (char *)Strong;
    id v4 = [self _applePodcastsFoundationSharedUserDefaults];
    unsigned int v5 = [v4 BOOLForKey:kMTDidPromptForNotificationsPermissionsKey];

    if (v5)
    {
      char v19 = v1;
      id v6 = &v3[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_orderedSections];
      swift_beginAccess();
      uint64_t v7 = *(void *)v6;
      unint64_t v18 = v3;
      if (*(void *)v6 >> 62) {
        goto LABEL_26;
      }
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      while (v8)
      {
        uint64_t v9 = 4;
        while (1)
        {
          uint64_t v10 = v9 - 4;
          if ((v7 & 0xC000000000000001) == 0) {
            break;
          }
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_25;
          }
LABEL_11:
          if (*(void *)(v11 + 16) == 0xD000000000000019 && *(void *)(v11 + 24) == 0x80000001004D1BF0)
          {
            swift_bridgeObjectRelease_n();
            swift_release();
LABEL_20:
            uint64_t v3 = v18;
            goto LABEL_21;
          }
          char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_release();
          if (v13)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_20;
          }
          ++v9;
          if (v12 == v8) {
            goto LABEL_15;
          }
        }
        uint64_t v11 = *(void *)(v7 + 8 * v9);
        swift_retain();
        uint64_t v12 = v9 - 3;
        if (!__OFADD__(v10, 1)) {
          goto LABEL_11;
        }
LABEL_25:
        __break(1u);
LABEL_26:
        swift_bridgeObjectRetain_n();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      }
LABEL_15:
      swift_bridgeObjectRelease_n();
      _s14descr10054C569C25AllowNotificationsSectionCMa();
      swift_allocObject();
      sub_1003664EC();
      uint64_t v15 = v14;
      v21[3] = type metadata accessor for MTNotificationSettingsSectionedViewController();
      v21[4] = &off_100558C48;
      uint64_t v3 = v18;
      v21[0] = v18;
      sub_1001F1BDC((uint64_t)v21, (uint64_t)v20);
      swift_beginAccess();
      uint64_t v16 = v18;
      sub_1001F1C44((uint64_t)v20, v15 + 48);
      swift_endAccess();
      *(void *)&v16[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_allowNotificationsSection] = v15;
      swift_retain();
      swift_release();
      swift_beginAccess();
      if (*(void *)v6 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v17 < 0)
        {
          __break(1u);
          return;
        }
      }
      else
      {
        swift_retain();
      }
      sub_1001FA960(0, 0, v15);
      swift_endAccess();
      swift_release();
LABEL_21:
      if (*(void *)&v3[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_allowNotificationsSection])
      {
        swift_retain();
        sub_1003667F8(v19);
        swift_release();
      }
    }
  }
}

uint64_t sub_1001F0CA4(char a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v24 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = (objc_class *)type metadata accessor for MTNotificationSettingsSectionedViewController();
  v29.receiver = v2;
  v29.super_class = v17;
  [super viewDidAppear:a1 & 1];
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  unint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  unint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v14, v10);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1001F1D14;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100558C88;
  uint64_t v20 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  return ((uint64_t (*)(char *, uint64_t))v23)(v16, v24);
}

void sub_1001F105C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v1 = Strong;
    [Strong setEmphasizedSetting:0];
  }
}

void sub_1001F1110(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v6 = v5;
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_1005FCBD0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F1CAC(a2, (uint64_t)v14);
  uint64_t v15 = type metadata accessor for IndexPath();
  uint64_t v16 = *(void *)(v15 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  if (a5) {
    NSString v18 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v18 = 0;
  }
  uint64_t v19 = (objc_class *)type metadata accessor for MTNotificationSettingsSectionedViewController();
  v30.receiver = v6;
  v30.super_class = v19;
  [super configureCell:a1 atIndexPath:isa withDescription:a3 inGroupWithIdentifier:v18];

  if (!a3)
  {
LABEL_12:
    if (!a1) {
      return;
    }
    goto LABEL_15;
  }
  uint64_t v20 = (unint64_t *)&v6[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_orderedSections];
  swift_beginAccess();
  unint64_t v21 = *v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = a3;
  uint64_t v23 = sub_1001F186C(v21, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v23)
  {

    goto LABEL_12;
  }
  if (!a1)
  {
    __break(1u);
    return;
  }
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = *(void (**)(uint64_t, id))(*(void *)v23 + 216);
    id v27 = a1;
    v26(v25, v22);

    swift_release();
  }
  else
  {

    swift_release();
  }
LABEL_15:
  self;
  uint64_t v28 = (void *)swift_dynamicCastObjCClass();
  if (v28) {
    [v28 setShowsSeparator:0];
  }
}

double sub_1001F1540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [v3 traitCollection];
  char v9 = UITraitCollection.interfaceIdiomIsMac.getter();

  if (v9) {
    return 48.0;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1001F186C(v11, a2, a3);
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  double v10 = UITableViewAutomaticDimension;
  if (v12)
  {
    double v10 = (*(double (**)(uint64_t))(*(void *)v12 + 232))(v13);
    swift_release();
  }
  if (v10 == UITableViewAutomaticDimension)
  {
    if (a3) {
      NSString v14 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v14 = 0;
    }
    v17.receiver = v4;
    v17.super_class = (Class)type metadata accessor for MTNotificationSettingsSectionedViewController();
    [super heightForRowWithDescription:a1 inGroupWithIdentifier:v14];
    double v10 = v15;
  }
  return v10;
}

id sub_1001F1750()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTNotificationSettingsSectionedViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for MTNotificationSettingsSectionedViewController()
{
  return self;
}

uint64_t type metadata accessor for MTNotificationSettingsSectionedViewController.DEBUG()
{
  return self;
}

uint64_t sub_1001F186C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a1 + 8 * v7);
          swift_retain();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10)
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        if (a3)
        {
          BOOL v12 = *(void *)(v9 + 16) == a2 && *(void *)(v9 + 24) == a3;
          if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return v9;
          }
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1001F199C()
{
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_allowNotificationsSection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_newEpisodeSection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_serverPushSection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_orderedSections] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  char v1 = &v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_newEpisodeNotifcationGroupInitialHighlightedPodcastUuid];
  *char v1 = 0;
  v1[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_subscriptions] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC8Podcasts45MTNotificationSettingsSectionedViewController_hasLoadedSettings] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001F1A78(char a1, id a2, uint64_t a3, unsigned __int8 *a4)
{
  id v8 = [a2 settingsController];
  if (!v8) {
    return;
  }
  id v14 = v8;
  if ((a1 & 1) == 0)
  {
    sub_100249420(v8, a3, a4);
    uint64_t v13 = v14;
    goto LABEL_8;
  }
  id v9 = [a2 tableView];
  if (!v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  BOOL v10 = v9;
  [v9 beginUpdates];

  sub_100249420(v14, a3, a4);
  id v11 = [a2 tableView];
  if (!v11)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v12 = v11;
  [v11 endUpdates];

  uint64_t v13 = v12;
LABEL_8:
}

uint64_t sub_1001F1B9C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1001F1BD4(char *a1)
{
}

uint64_t sub_1001F1BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005FCA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F1C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005FCA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F1CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005FCBD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1001F1D14()
{
}

BOOL sub_1001F1D30(id *a1)
{
  return sub_100249CC8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_1001F1D50(uint64_t a1, uint64_t a2)
{
  sub_1001F2698(0x6574616C706D6574, 0xEC0000006F666E49, a1, a2, &v4);
  if (v5)
  {
    type metadata accessor for CarPlayTemplateInfo(0);
    if (swift_dynamicCast()) {
      return (id)v3;
    }
  }
  else
  {
    sub_100172424((uint64_t)&v4);
  }
  return [objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)) init];
}

uint64_t sub_1001F1DF4()
{
  self;
  id v0 = (void *)swift_dynamicCastObjCClass();
  if (!v0 || (id v1 = [v0 text]) == 0)
  {
    self;
    objc_super v2 = (void *)swift_dynamicCastObjCClass();
    if (!v2) {
      return 0;
    }
    id v1 = [v2 text];
    if (!v1) {
      return 0;
    }
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void CPInterfaceController.showAlert(with:completion:)(uint64_t a1, unint64_t a2, void (*a3)(uint64_t a1), uint64_t a4)
{
  uint64_t v5 = v4;
  v44[0] = a4;
  unint64_t v45 = a3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v48 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v44 - v12;
  uint64_t v46 = sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_bridgeObjectRetain_n();
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v49 = v8;
  v44[1] = v9;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    unint64_t v47 = (void *)a1;
    NSString v18 = (uint8_t *)v17;
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)NSString v18 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_10004B974((uint64_t)v47, a2, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Attempting to show CarPlay alert with message: %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = (uint64_t)v47;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v13, v49);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v13, v8);
  }
  id v20 = [self mainBundle];
  v57._unint64_t object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 19279;
  v21._unint64_t object = (void *)0xE200000000000000;
  v22._uint64_t countAndFlagsBits = 0;
  v22._unint64_t object = (void *)0xE000000000000000;
  v57._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v57);

  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = (void *)swift_allocObject();
  void v24[2] = a1;
  void v24[3] = a2;
  void v24[4] = v23;
  uint64_t v25 = a1;
  id v26 = objc_allocWithZone((Class)CPAlertAction);
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  long long v55 = sub_1001F2B10;
  uint64_t v56 = v24;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  uint64_t v53 = sub_1001F2B1C;
  uint64_t v54 = &unk_100558D28;
  uint64_t v28 = _Block_copy(&aBlock);
  id v29 = [v26 initWithTitle:v27 style:0 handler:v28];

  _Block_release(v28);
  swift_release();
  swift_release();
  id v30 = [v5 presentedTemplate];

  if (!v30)
  {
    uint64_t v31 = v48;
    static OS_os_log.carPlay.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      unint64_t v47 = v5;
      double v34 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)double v34 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_10004B974(v25, a2, &aBlock);
      uint64_t v5 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Presenting CarPlay alert with message: %s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v35 = v48;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v35 = v31;
    }
    v19(v35, v49);
    uint64_t v36 = v45;
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_10046D010;
    *(void *)(v37 + 32) = v25;
    *(void *)(v37 + 4sub_1001DA808(0, 0) = a2;
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_10046D060;
    *(void *)(v38 + 32) = v29;
    uint64_t aBlock = v38;
    specialized Array._endMutation()();
    id v39 = objc_allocWithZone((Class)CPAlertTemplate);
    swift_bridgeObjectRetain();
    id v40 = v29;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    sub_10004D29C(0, &qword_1005F9F10);
    Class v42 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v29 = [v39 initWithTitleVariants:isa actions:v42];

    if (v36)
    {
      long long v55 = v36;
      uint64_t v56 = (void *)v44[0];
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v52 = 1107296256;
      uint64_t v53 = sub_10018FFEC;
      uint64_t v54 = &unk_100558D50;
      unint64_t v43 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      unint64_t v43 = 0;
    }
    [v5 presentTemplate:v29 animated:1 completion:v43, v44[0]];

    _Block_release(v43);
  }
}

uint64_t sub_1001F25C8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

id sub_1001F2600(uint64_t a1)
{
  return sub_1001F1D50(a1, (uint64_t)&off_100558D98);
}

id sub_1001F2610(uint64_t a1)
{
  return sub_1001F1D50(a1, (uint64_t)&off_100558DD8);
}

id sub_1001F261C(uint64_t a1)
{
  return sub_1001F1D50(a1, (uint64_t)&off_100558E18);
}

double sub_1001F2628@<D0>(_OWORD *a1@<X8>)
{
  if ([*v1 userInfo])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_1001F2698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a4 + 8))(&v11, a3, a4);
  if (!*((void *)&v12 + 1))
  {
    uint64_t result = sub_100172424((uint64_t)&v11);
    goto LABEL_6;
  }
  sub_10004D29C(0, (unint64_t *)&qword_1005F88D0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_6:
    *a5 = 0u;
    a5[1] = 0u;
    return result;
  }
  *(void *)&long long v11 = a1;
  *((void *)&v11 + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v9 = [v10 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();
  if (v9)
  {
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
  }
  else
  {

    long long v11 = 0u;
    long long v12 = 0u;
  }
  sub_100004C04((uint64_t)&v11, (uint64_t)a5);
  return swift_bridgeObjectRelease();
}

void sub_1001F27E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a4 + 16;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  static OS_os_log.carPlay.getter();
  swift_bridgeObjectRetain_n();
  long long v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v21 = v7;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v11;
    uint64_t v15 = a2;
    BOOL v16 = (uint8_t *)v14;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)BOOL v16 = 136315138;
    swift_bridgeObjectRetain();
    void aBlock[6] = sub_10004B974(v15, a3, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Dismissing CarPlay alert with message: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v18 = (void *)Strong;
    aBlock[4] = (uint64_t)UInt64.int64Representation.getter;
    aBlock[5] = 0;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10018FFEC;
    void aBlock[3] = (uint64_t)&unk_100558E38;
    uint64_t v19 = _Block_copy(aBlock);
    [v18 dismissTemplateAnimated:1 completion:v19];
    _Block_release(v19);
  }
}

uint64_t sub_1001F2AD0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1001F2B10(uint64_t a1)
{
  sub_1001F27E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1001F2B1C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void *sub_1001F2B84()
{
  return &protocol witness table for String;
}

uint64_t sub_1001F2BDC()
{
  uint64_t v1 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 48);
  swift_unknownObjectRetain();
  v6(ObjectType, v4);
  swift_unknownObjectRelease();
  uint64_t v7 = type metadata accessor for ContextActionType();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
  {
    sub_1001DE9EC((uint64_t)v3);
    return 0;
  }
  else
  {
    uint64_t v9 = ContextActionType.activityType.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v7);
  }
  return v9;
}

id sub_1001F2FF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextActionActivity();
  return [super dealloc];
}

uint64_t type metadata accessor for ContextActionActivity()
{
  return self;
}

id DebouncedAssetRemovalProcessor.__allocating_init(context:)(uint64_t a1)
{
  uint64_t v3 = objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___MTDebouncedAssetRemovalProcessor_debounceInterval] = 0x3FF0000000000000;
  v3[OBJC_IVAR___MTDebouncedAssetRemovalProcessor_isRunning] = 0;
  uint64_t v4 = &v3[OBJC_IVAR___MTDebouncedAssetRemovalProcessor____lazy_storage___episodeStorage];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  *(void *)&v3[OBJC_IVAR___MTDebouncedAssetRemovalProcessor____lazy_storage___debouncedProcessor] = 0;
  *(void *)&v3[OBJC_IVAR___MTDebouncedAssetRemovalProcessor_context] = a1;
  v6.receiver = v3;
  v6.super_class = v1;
  return [super init];
}

uint64_t *DebouncedAssetRemovalProcessor.sharedInstance.unsafeMutableAddressor()
{
  if (qword_1005F5A30 != -1) {
    swift_once();
  }
  return &static DebouncedAssetRemovalProcessor.sharedInstance;
}

id static DebouncedAssetRemovalProcessor.sharedInstance.getter()
{
  if (qword_1005F5A30 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static DebouncedAssetRemovalProcessor.sharedInstance;

  return v0;
}

uint64_t DebouncedAssetRemovalProcessor.isRunning.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MTDebouncedAssetRemovalProcessor_isRunning);
  swift_beginAccess();
  return *v1;
}

uint64_t DebouncedAssetRemovalProcessor.isRunning.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___MTDebouncedAssetRemovalProcessor_isRunning);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*DebouncedAssetRemovalProcessor.isRunning.modify())()
{
  return j__swift_endAccess;
}

id DebouncedAssetRemovalProcessor.init(context:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___MTDebouncedAssetRemovalProcessor_debounceInterval] = 0x3FF0000000000000;
  v1[OBJC_IVAR___MTDebouncedAssetRemovalProcessor_isRunning] = 0;
  objc_super v2 = &v1[OBJC_IVAR___MTDebouncedAssetRemovalProcessor____lazy_storage___episodeStorage];
  *(_OWORD *)objc_super v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  *(void *)&v1[OBJC_IVAR___MTDebouncedAssetRemovalProcessor____lazy_storage___debouncedProcessor] = 0;
  *(void *)&v1[OBJC_IVAR___MTDebouncedAssetRemovalProcessor_context] = a1;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DebouncedAssetRemovalProcessor();
  return [super init];
}

Swift::Void __swiftcall DebouncedAssetRemovalProcessor.reevaluate()()
{
  sub_100006BA0();
  dispatch thunk of DebouncedEpisodeAndShowProcessor.requestEvaluation()();

  swift_release();
}

void DebouncedAssetRemovalProcessor.init()()
{
}

id DebouncedAssetRemovalProcessor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebouncedAssetRemovalProcessor();
  return [super dealloc];
}

Swift::Int LegacyEnqueueEpisodeForPlaybackIntentImplementation.EnqueueEpisodeError.hashValue.getter()
{
  return Hasher._finalize()();
}

void LegacyEnqueueEpisodeForPlaybackIntentImplementation.EnqueueEpisodeError.hash(into:)()
{
}

Swift::Int sub_1001F352C()
{
  return Hasher._finalize()();
}

void sub_1001F356C()
{
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 4sub_1001DA808(0, 0) = 0;
  uint64_t v1 = self;
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 predicateForVisiblePlaylistWithUUID:v2];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = objc_allocWithZone((Class)MTPropertyChangeQueryObserver);
  id v5 = v3;
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v4 initWithEntityName:v6 predicate:v5];

  if (v7)
  {
    *(void *)(v0 + 16) = v7;
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_10046F080;
    *(void *)(v8 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v8 + 4sub_1001DA808(0, 0) = v9;
    *(void *)(v8 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v8 + 56) = v10;
    *(void *)(v8 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v8 + 72) = v11;
    *(void *)(v8 + 8sub_1001DA808(0, 0) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v8 + 88) = v12;
    *(void *)(v8 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v8 + 104) = v13;
    *(void *)(v8 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v8 + 12sub_1001DA808(0, 0) = v14;
    *(void *)(v8 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v8 + 136) = v15;
    *(void *)(v8 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v8 + 152) = v16;
    *(void *)(v8 + 16sub_1001DA808(0, 0) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v8 + 168) = v17;
    id v18 = v7;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 setPropertyKeys:isa];

    [*(id *)(v0 + 16) startObserving];
    uint64_t v20 = *(void **)(v0 + 16);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = 0;
    uint64_t v22 = (uint64_t *)(v21 + 16);
    uint64_t v35 = sub_1001F4218;
    uint64_t v36 = v21;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    os_log_type_t v33 = sub_1001F3C04;
    double v34 = &unk_100558F50;
    uint64_t v23 = _Block_copy(&aBlock);
    id v24 = v20;
    swift_retain();
    swift_release();
    [v24 results:v23];
    _Block_release(v23);
    swift_beginAccess();
    uint64_t v25 = *v22;
    swift_retain();

    swift_release();
    if (v25)
    {
      *(void *)(v0 + 24) = v25;
      swift_retain();
      swift_release();
      id v26 = *(void **)(v0 + 16);
      uint64_t v27 = swift_allocObject();
      swift_weakInit();
      uint64_t v35 = sub_1001F42AC;
      uint64_t v36 = v27;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      os_log_type_t v33 = sub_1001F3C04;
      double v34 = &unk_100558FA0;
      uint64_t v28 = _Block_copy(&aBlock);
      id v29 = v26;
      swift_release();
      id v30 = [v29 addResultsChangedHandler:v28];

      swift_release();
      _Block_release(v28);
    }
    else
    {
      swift_release();
      sub_1001F4220();
      swift_allocError();
      swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001F39CC(unint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    if (!a1) {
      goto LABEL_16;
    }
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_5:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          id v5 = *(id *)(a1 + 32);
        }
        NSString v6 = v5;
        swift_bridgeObjectRelease();
        self;
        uint64_t v7 = swift_dynamicCastObjCClass();
        if (v7)
        {
          uint64_t v8 = (void *)v7;
          type metadata accessor for StationDetail();
          id v9 = v6;
          sub_10004BE90(v8, 0, 0, 0);
          *(void *)(v3 + 24) = v10;
          swift_retain();
          swift_release();
          swift_beginAccess();
          uint64_t v11 = *(void (**)(uint64_t))(v3 + 32);
          if (v11)
          {
            sub_10004ACDC(*(void *)(v3 + 32));
            uint64_t v12 = swift_retain();
            v11(v12);
            sub_1000536BC((uint64_t)v11);

            swift_release();
          }
          else
          {
          }
          swift_release();
          return swift_release();
        }

LABEL_16:
        *(void *)(v3 + 24) = 0;
        swift_release();
        swift_beginAccess();
        uint64_t v13 = *(void (**)(uint64_t))(v3 + 32);
        if (v13)
        {
          sub_10004ACDC(*(void *)(v3 + 32));
          uint64_t v14 = swift_retain();
          v13(v14);
          sub_1000536BC((uint64_t)v13);
          swift_release();
        }
        return swift_release();
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001F3C04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1001F42B4();
    uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  v3(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F3C7C()
{
  [*(id *)(v0 + 16) stop];

  swift_release();
  sub_1000536BC(*(void *)(v0 + 32));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StationDetailObserver()
{
  return self;
}

unint64_t sub_1001F3CFC()
{
  unint64_t result = qword_1005FA560;
  if (!qword_1005FA560)
  {
    sub_100044244(&qword_1005FA568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FA560);
  }
  return result;
}

uint64_t sub_1001F3D58@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 24);
  return swift_retain();
}

uint64_t (*sub_1001F3D68())(void *)
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  if (v2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    id v5 = sub_1001F4474;
  }
  else
  {
    id v5 = 0;
  }
  sub_10004ACDC(v2);
  return v5;
}

uint64_t sub_1001F3E04(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    NSString v6 = sub_1001B572C;
  }
  else
  {
    NSString v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *v2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 32);
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 4sub_1001DA808(0, 0) = v5;
  return sub_1000536BC(v8);
}

void (*sub_1001F3E9C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  void v3[5] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 32);
  if (v5)
  {
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = sub_1001F404C;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  v3[3] = v8;
  v3[4] = v7;
  return sub_1001F3F5C;
}

void sub_1001F3F5C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (v3)
  {
    if (a2) {
      uint64_t v4 = sub_1001B5550;
    }
    else {
      uint64_t v4 = sub_1001B572C;
    }
    uint64_t v5 = v2[4];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = v2[5];
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 4sub_1001DA808(0, 0) = v6;
  swift_endAccess();

  free(v2);
}

uint64_t sub_1001F4014()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001F404C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1001F4078()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1001F40B0(unint64_t a1, uint64_t a2)
{
  if (!a1) {
    return;
  }
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_14;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v4 + 16))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(a1 + 32);
  }
  id v11 = v6;
  swift_bridgeObjectRelease();
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    type metadata accessor for StationDetail();
    sub_10004BE90(v8, 0, 0, 0);
    uint64_t v10 = v9;
    swift_beginAccess();
    *(void *)(a2 + 16) = v10;
    swift_release();
  }
  else
  {
  }
}

void sub_1001F4218(unint64_t a1)
{
  sub_1001F40B0(a1, v1);
}

unint64_t sub_1001F4220()
{
  unint64_t result = qword_1005FA570;
  if (!qword_1005FA570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FA570);
  }
  return result;
}

uint64_t sub_1001F4274()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001F42AC(unint64_t a1)
{
  return sub_1001F39CC(a1);
}

unint64_t sub_1001F42B4()
{
  unint64_t result = qword_1005F7130;
  if (!qword_1005F7130)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005F7130);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StationDetailObserver.Error(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for StationDetailObserver.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001F43E4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StationDetailObserver.Error()
{
  return &type metadata for StationDetailObserver.Error;
}

unint64_t sub_1001F4420()
{
  unint64_t result = qword_1005FA578;
  if (!qword_1005FA578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FA578);
  }
  return result;
}

void sub_1001F4490(uint64_t a1)
{
  if (os_feature_enabled_prototype_up_next())
  {
    int v2 = self;
    id v3 = [v2 _applePodcastsFoundationSharedUserDefaults];
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 integerForKey:v4];

    if ((uint64_t)v5 < a1)
    {
      if (!sub_1001F5130())
      {
        static UpNextScoringWeightsManager.resetToDefaultValues()();
        static UpNextScoringWeightsManager.recalculateUpNext()();
      }
      id v6 = [v2 _applePodcastsFoundationSharedUserDefaults];
      Class isa = Int._bridgeToObjectiveC()().super.super.isa;
      id v8 = String._bridgeToObjectiveC()();
      [v6 setValue:isa forKey:v8];
    }
  }
}

uint64_t sub_1001F45D4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  unint64_t v45 = a2;
  uint64_t v3 = sub_100054B78(&qword_1005FA5A0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  uint64_t v52 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v49 = (char *)&v39 - v7;
  uint64_t v43 = sub_100054B78(&qword_1005FA5A8);
  uint64_t v47 = *(void *)(v43 - 8);
  uint64_t v8 = __chkstk_darwin(v43);
  uint64_t v50 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Class v42 = (char *)&v39 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v48 = (char *)&v39 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v46 = (char *)&v39 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  id v18 = (char *)&v39 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v55 = a1;
  unint64_t v60 = 0xD000000000000042;
  unint64_t v61 = 0x80000001004D61A0;
  char v62 = 0;
  unint64_t v63 = _swiftEmptyArrayStorage;
  unint64_t v56 = 0xD00000000000008DLL;
  unint64_t v57 = 0x80000001004D61F0;
  char v58 = 0;
  uint64_t v59 = _swiftEmptyArrayStorage;
  sub_100054B78(&qword_1005FA5B0);
  sub_100044200(&qword_1005FA5B8, &qword_1005FA5B0);
  uint64_t v41 = v20;
  Section<>.init(header:footer:content:)();
  uint64_t v54 = a1;
  unint64_t v60 = 0xD000000000000024;
  unint64_t v61 = 0x80000001004D6280;
  char v62 = 0;
  unint64_t v63 = _swiftEmptyArrayStorage;
  unint64_t v56 = 0xD000000000000066;
  unint64_t v57 = 0x80000001004D62B0;
  char v58 = 0;
  uint64_t v59 = _swiftEmptyArrayStorage;
  uint64_t v21 = v18;
  id v40 = v18;
  Section<>.init(header:footer:content:)();
  uint64_t v53 = a1;
  unint64_t v60 = 0xD000000000000017;
  unint64_t v61 = 0x80000001004D6320;
  char v62 = 0;
  unint64_t v63 = _swiftEmptyArrayStorage;
  unint64_t v56 = 0xD000000000000107;
  unint64_t v57 = 0x80000001004D6340;
  char v58 = 0;
  uint64_t v59 = _swiftEmptyArrayStorage;
  uint64_t v22 = v46;
  Section<>.init(header:footer:content:)();
  unint64_t v60 = 0xD000000000000036;
  unint64_t v61 = 0x80000001004D6450;
  char v62 = 0;
  unint64_t v63 = _swiftEmptyArrayStorage;
  sub_100054B78(&qword_1005FA5C0);
  sub_100044200(&qword_1005FA5C8, &qword_1005FA5C0);
  uint64_t v23 = v49;
  Section<>.init(footer:content:)();
  id v24 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v25 = v48;
  uint64_t v26 = v43;
  v24(v48, v20, v43);
  uint64_t v27 = v42;
  v24(v42, v21, v26);
  uint64_t v28 = v50;
  id v29 = v22;
  uint64_t v30 = v26;
  v24(v50, v29, v26);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v32 = v44;
  v31(v44, v23, v51);
  os_log_type_t v33 = v45;
  v24(v45, v25, v30);
  double v34 = (int *)sub_100054B78(&qword_1005FA5D0);
  v24(&v33[v34[12]], v27, v30);
  v24(&v33[v34[16]], v28, v30);
  uint64_t v35 = v51;
  v31(&v33[v34[20]], v32, v51);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v52 + 8);
  v36(v49, v35);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v47 + 8);
  v37(v46, v30);
  v37(v40, v30);
  v37(v41, v30);
  v36(v32, v35);
  v37(v50, v30);
  v37(v27, v30);
  return ((uint64_t (*)(char *, uint64_t))v37)(v48, v30);
}

uint64_t sub_1001F4C94(uint64_t a1)
{
  AppStorage.projectedValue.getter();
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v2 + 64) = *(void *)(a1 + 48);
  sub_1001F5798(a1);
  sub_1001F5800();
  return Slider<>.init<A>(value:in:onEditingChanged:)();
}

uint64_t sub_1001F4D6C(uint64_t a1)
{
  AppStorage.projectedValue.getter();
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v2 + 64) = *(void *)(a1 + 48);
  sub_1001F5798(a1);
  sub_1001F5800();
  return Slider<>.init<A>(value:in:onEditingChanged:)();
}

uint64_t sub_1001F4E44(uint64_t a1)
{
  AppStorage.projectedValue.getter();
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v2 + 64) = *(void *)(a1 + 48);
  sub_1001F5798(a1);
  sub_1001F5800();
  return Slider<>.init<A>(value:in:onEditingChanged:)();
}

uint64_t sub_1001F4F1C()
{
  return Button.init(action:label:)(j___s8ShelfKit27UpNextScoringWeightsManagerO20resetToDefaultValuesyyFZ, 0, sub_1001F4F64, 0, &type metadata for Text, &protocol witness table for Text);
}

void sub_1001F4F64(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000017;
  *(void *)(a1 + 8) = 0x80000001004D6490;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_1001F4F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100054B78(&qword_1005FA580);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v7 = *(_OWORD *)(v1 + 16);
  v12[0] = *(_OWORD *)v1;
  v12[1] = v7;
  void v12[2] = *(_OWORD *)(v1 + 32);
  uint64_t v13 = *(void *)(v1 + 48);
  uint64_t v11 = v12;
  sub_100054B78(&qword_1005FA588);
  sub_100044200(&qword_1005FA590, &qword_1005FA588);
  Form.init(content:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  uint64_t v8 = (void *)(a1 + *(int *)(sub_100054B78(&qword_1005FA598) + 36));
  *uint64_t v8 = 0;
  v8[1] = 0;
  void v8[2] = j___s8ShelfKit27UpNextScoringWeightsManagerO011recalculatecD0yyFZ;
  v8[3] = 0;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL sub_1001F5130()
{
  sub_100054B78((uint64_t *)&unk_1005F83F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D050;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 4sub_1001DA808(0, 0) = v1;
  *(void *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 72) = v3;
  uint64_t v4 = self;
  swift_bridgeObjectRetain();
  id v5 = [v4 _applePodcastsFoundationSharedUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 doubleForKey:v6];
  double v8 = v7;

  if (v8 != 0.0) {
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  id v9 = [v4 _applePodcastsFoundationSharedUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 doubleForKey:v10];
  double v12 = v11;

  if (v12 == 0.0)
  {
    swift_bridgeObjectRetain();
    id v13 = [v4 _applePodcastsFoundationSharedUserDefaults];
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v13 doubleForKey:v14];
    double v16 = v15;
    swift_release();

    return v16 != 0.0;
  }
  else
  {
LABEL_4:
    swift_release();
    return 1;
  }
}

uint64_t sub_1001F5338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  double v7 = self;
  id v8 = [v7 _applePodcastsFoundationSettingsUserDefaults];
  uint64_t v9 = AppStorage.init<A>(wrappedValue:_:store:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = [v7 _applePodcastsFoundationSettingsUserDefaults];
  uint64_t v11 = AppStorage.init<A>(wrappedValue:_:store:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = [v7 _applePodcastsFoundationSettingsUserDefaults];
  uint64_t v13 = AppStorage.init<A>(wrappedValue:_:store:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = [v7 _applePodcastsFoundationSettingsUserDefaults];
  uint64_t result = AppStorage.init<A>(wrappedValue:_:store:)();
  *a4 = v9;
  a4[1] = v11;
  a4[2] = v13;
  a4[3] = result;
  a4[4] = a1;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t destroy for PrototypeUpNextSettingsView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrototypeUpNextSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PrototypeUpNextSettingsView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PrototypeUpNextSettingsView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrototypeUpNextSettingsView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrototypeUpNextSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_1001DA808(0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrototypeUpNextSettingsView()
{
  return &type metadata for PrototypeUpNextSettingsView;
}

uint64_t sub_1001F5754()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F5770@<X0>(char *a1@<X8>)
{
  return sub_1001F45D4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001F5778()
{
  return sub_1001F4C94(*(void *)(v0 + 16));
}

uint64_t sub_1001F5780()
{
  return sub_1001F4D6C(*(void *)(v0 + 16));
}

uint64_t sub_1001F5788()
{
  return sub_1001F4E44(*(void *)(v0 + 16));
}

uint64_t sub_1001F5798(uint64_t a1)
{
  return a1;
}

unint64_t sub_1001F5800()
{
  unint64_t result = qword_1005FE4D0;
  if (!qword_1005FE4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FE4D0);
  }
  return result;
}

uint64_t sub_1001F585C()
{
  return AppStorage.wrappedValue.setter();
}

uint64_t initializeBufferWithCopyOfBuffer for PrototypeUpNextController(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrototypeUpNextController()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PrototypeUpNextController(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PrototypeUpNextController(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrototypeUpNextController(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrototypeUpNextController(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrototypeUpNextController()
{
  return &type metadata for PrototypeUpNextController;
}

unint64_t sub_1001F59F4()
{
  unint64_t result = qword_1005FA5D8;
  if (!qword_1005FA5D8)
  {
    sub_100044244(&qword_1005FA598);
    sub_100044200((unint64_t *)&unk_1005FA5E0, &qword_1005FA580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FA5D8);
  }
  return result;
}

id MTTestActionListViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

void MTTestActionListViewController.init(coder:)()
{
}

id MTTestActionListViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

void MTTestActionListViewController.init(nibName:bundle:)()
{
}

id MTTestActionListViewController.__allocating_init(title:tests:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return MTTestActionListViewController.init(title:tests:)(a1, a2, a3);
}

id MTTestActionListViewController.init(title:tests:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionCategories] = _swiftEmptyArrayStorage;
  uint64_t v5 = OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionsByCategoryName;
  NSString v6 = v3;
  *(void *)&v3[v5] = sub_10016ED60((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v7 = OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_testRunner;
  type metadata accessor for MTTestActionRunner();
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 0;
  *(void *)&v6[v7] = v8;
  *(void *)&v6[OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_testStartDelay] = 0x4000000000000000;
  id v9 = [objc_allocWithZone((Class)UITableView) initWithFrame:1 style:0.0];
  *(void *)&v6[OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_tableView] = v9;

  v16.receiver = v6;
  v16.super_class = (Class)type metadata accessor for MTTestActionListViewController();
  id v10 = [super initWithNibName:0 bundle:0];
  id v11 = [v10 navigationItem];
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setTitle:v12];

  id v13 = [v10 navigationItem];
  id v14 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v10 action:"dismissFrom:"];
  [v13 setRightBarButtonItem:v14];

  sub_1001F5E24(a3);
  swift_bridgeObjectRelease();
  sub_1001F656C();

  return v10;
}

uint64_t sub_1001F5E24(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  unint64_t v42 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_65;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (2)
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
    unint64_t v43 = v3;
    uint64_t v44 = v2;
    if (v4)
    {
      uint64_t v48 = _swiftEmptyArrayStorage;
      uint64_t result = sub_10005986C(0, v4 & ~(v4 >> 63), 0);
      if (v4 < 0)
      {
        __break(1u);
        goto LABEL_67;
      }
      uint64_t v5 = v48;
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = 0;
        do
        {
          uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v9 = *(void *)(v8 + 32);
          uint64_t v10 = *(void *)(v8 + 40);
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          uint64_t v48 = v5;
          unint64_t v12 = v5[2];
          unint64_t v11 = v5[3];
          if (v12 >= v11 >> 1)
          {
            sub_10005986C(v11 > 1, v12 + 1, 1);
            uint64_t v5 = v48;
          }
          ++v7;
          _OWORD v5[2] = v12 + 1;
          id v13 = &v5[2 * v12];
          void v13[4] = v9;
          v13[5] = v10;
        }
        while (v4 != v7);
      }
      else
      {
        id v14 = (void *)(v3 + 32);
        do
        {
          uint64_t v15 = *(void *)(*v14 + 32);
          uint64_t v16 = *(void *)(*v14 + 40);
          uint64_t v48 = v5;
          unint64_t v17 = v5[2];
          unint64_t v18 = v5[3];
          swift_bridgeObjectRetain();
          if (v17 >= v18 >> 1)
          {
            sub_10005986C(v18 > 1, v17 + 1, 1);
            uint64_t v5 = v48;
          }
          _OWORD v5[2] = v17 + 1;
          uint64_t v19 = &v5[2 * v17];
          v19[4] = v15;
          void v19[5] = v16;
          ++v14;
          --v4;
        }
        while (v4);
      }
    }
    uint64_t v20 = v5[2];
    if (v20)
    {
      uint64_t v21 = v5 + 4;
      swift_bridgeObjectRetain();
      uint64_t v22 = 0;
      uint64_t v23 = (char *)_swiftEmptyArrayStorage;
      while (1)
      {
        id v24 = &v21[2 * v22];
        uint64_t v26 = *v24;
        uint64_t v25 = v24[1];
        uint64_t v27 = *((void *)v23 + 2);
        if (!v27) {
          goto LABEL_27;
        }
        BOOL v28 = *((void *)v23 + 4) == v26 && *((void *)v23 + 5) == v25;
        if (!v28 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v27 == 1) {
            goto LABEL_27;
          }
          BOOL v33 = *((void *)v23 + 6) == v26 && *((void *)v23 + 7) == v25;
          if (!v33 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
        }
LABEL_19:
        if (++v22 == v20)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_49;
        }
      }
      if (v27 != 2)
      {
        double v34 = v23 + 72;
        uint64_t v35 = 2;
        uint64_t v45 = v20;
        while (1)
        {
          unint64_t v3 = (unint64_t)v21;
          uint64_t v2 = v35 + 1;
          if (__OFADD__(v35, 1)) {
            break;
          }
          BOOL v36 = *(v34 - 1) == v26 && *v34 == v25;
          if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v21 = (void *)v3;
            uint64_t v20 = v45;
            goto LABEL_19;
          }
          v34 += 2;
          ++v35;
          BOOL v28 = v2 == v27;
          uint64_t v21 = (void *)v3;
          uint64_t v20 = v45;
          if (v28) {
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_65:
        swift_bridgeObjectRetain();
        uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        continue;
      }
LABEL_27:
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      id v29 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v29 = sub_10004CEAC(0, v27 + 1, 1, v23);
      }
      unint64_t v31 = *((void *)v29 + 2);
      unint64_t v30 = *((void *)v29 + 3);
      if (v31 >= v30 >> 1) {
        id v29 = sub_10004CEAC((char *)(v30 > 1), v31 + 1, 1, v29);
      }
      *((void *)v29 + 2) = v31 + 1;
      uint64_t v32 = &v29[16 * v31];
      *((void *)v32 + 4) = v26;
      *((void *)v32 + 5) = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = v29;
      goto LABEL_19;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = (char *)_swiftEmptyArrayStorage;
LABEL_49:
  *(void *)(v44 + OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionCategories) = v23;
  swift_bridgeObjectRelease();
  uint64_t v48 = &_swiftEmptyDictionarySingleton;
  if (v42)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v37 = result;
    if (result)
    {
LABEL_51:
      if (v37 >= 1)
      {
        if ((v43 & 0xC000000000000001) != 0)
        {
          uint64_t v38 = 0;
          do
          {
            ++v38;
            uint64_t v47 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            sub_1001F62CC((uint64_t *)&v48, &v47, (uint64_t *)&v46);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v39 = v46;
            uint64_t v48 = v46;
          }
          while (v37 != v38);
        }
        else
        {
          uint64_t v40 = 0;
          do
          {
            uint64_t v41 = *(void *)(v43 + 8 * v40++ + 32);
            uint64_t v47 = v41;
            sub_1001F62CC((uint64_t *)&v48, &v47, (uint64_t *)&v46);
            swift_bridgeObjectRelease();
            uint64_t v39 = v46;
            uint64_t v48 = v46;
          }
          while (v37 != v40);
        }
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
LABEL_67:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v37 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v37) {
      goto LABEL_51;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = &_swiftEmptyDictionarySingleton;
LABEL_61:
  *(void *)(v44 + OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionsByCategoryName) = v39;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F62CC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  if (!*(void *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(v5 + 32);
  uint64_t v6 = *(void *)(v5 + 40);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_100051E78(v7, v6);
  LOBYTE(v7) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
LABEL_9:
    uint64_t v20 = *(void *)(v5 + 32);
    uint64_t v21 = *(void *)(v5 + 40);
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10046D060;
    *(void *)(v22 + 32) = v5;
    uint64_t v27 = v22;
    specialized Array._endMutation()();
    swift_retain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10027F2B0(v27, v20, v21, isUniquelyReferenced_nonNull_native);
    uint64_t v24 = v4;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_14:
    *a3 = v24;
    return result;
  }
  uint64_t v10 = *(void *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  char v11 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = v4;
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_100051E78(v10, v9);
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  if (*(void *)(v4 + 24) >= v16)
  {
    if (v11)
    {
      if (v12) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_100280D78();
      if (v17) {
        goto LABEL_12;
      }
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_10027A184(v16, v11);
  unint64_t v18 = sub_100051E78(v10, v9);
  if ((v17 & 1) == (v19 & 1))
  {
    unint64_t v13 = v18;
    if ((v17 & 1) == 0) {
      goto LABEL_18;
    }
LABEL_12:
    uint64_t v26 = *(void *)(*(void *)(v27 + 56) + 8 * v13);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_13:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_1001F7A98(&v26, 1, &v27, v13, v10, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v27;
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_14;
    }
LABEL_16:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_13;
  }
LABEL_19:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1001F656C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_tableView];
  [v1 setDelegate:v0];
  [v1 setDataSource:v0];
  sub_10004D29C(0, (unint64_t *)&unk_100603270);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v3];

  type metadata accessor for MTToggleTestActionCell();
  uint64_t v4 = swift_getObjCClassFromMetadata();
  NSString v5 = String._bridgeToObjectiveC()();
  [v1 registerClass:v4 forCellReuseIdentifier:v5];

  id v6 = [v0 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = v6;
  [v6 addSubview:v1];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v8 = [v1 leadingAnchor];
  id v9 = [v0 view];
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = v9;
  id v11 = [v9 leadingAnchor];

  id v12 = [v8 constraintEqualToAnchor:v11];
  [v12 setActive:1];

  id v13 = [v1 trailingAnchor];
  id v14 = [v0 view];
  if (!v14)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  BOOL v15 = v14;
  id v16 = [v14 trailingAnchor];

  id v17 = [v13 constraintEqualToAnchor:v16];
  [v17 setActive:1];

  id v18 = [v1 topAnchor];
  id v19 = [v0 view];
  if (!v19)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v20 = v19;
  id v21 = [v19 topAnchor];

  id v22 = [v18 constraintEqualToAnchor:v21];
  [v22 setActive:1];

  id v23 = [v1 bottomAnchor];
  id v24 = [v0 view];
  if (!v24)
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v25 = v24;
  id v26 = [v24 bottomAnchor];

  id v27 = [v23 constraintEqualToAnchor:v26];
  [v27 setActive:1];
}

Swift::Int __swiftcall MTTestActionListViewController.numberOfSections(in:)(UITableView in)
{
  return *(void *)(*(void *)(v1
                               + OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionCategories)
                   + 16);
}

Swift::String_optional __swiftcall MTTestActionListViewController.tableView(_:titleForHeaderInSection:)(UITableView _, Swift::Int titleForHeaderInSection)
{
  if (titleForHeaderInSection < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionCategories);
  if (*(void *)(v3 + 16) <= (unint64_t)titleForHeaderInSection)
  {
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  Swift::Int v4 = v3 + 16 * titleForHeaderInSection;
  NSString v5 = *(objc_class **)(v4 + 32);
  Swift::Int v6 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  _.super.super.super.super.Class isa = v5;
  titleForHeaderInSection = v6;
LABEL_6:
  result.value._unint64_t object = (void *)titleForHeaderInSection;
  result.value._uint64_t countAndFlagsBits = (uint64_t)_.super.super.super.super.isa;
  return result;
}

Swift::Int __swiftcall MTTestActionListViewController.tableView(_:numberOfRowsInSection:)(UITableView _, Swift::Int numberOfRowsInSection)
{
  return sub_1001F7C2C(numberOfRowsInSection);
}

uint64_t MTTestActionListViewController.cellIdentifierForTestAction(_:)()
{
  if (swift_dynamicCastClass()) {
    return 0x656C67676F74;
  }
  else {
    return 0x6E6F69746361;
  }
}

id MTTestActionListViewController.tableView(_:cellForRowAt:)(void *a1)
{
  uint64_t v2 = (Swift::String *)sub_1001F725C();
  type metadata accessor for MTToggleTestAction();
  swift_dynamicCastClass();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v5 = [a1 dequeueReusableCellWithIdentifier:v3 forIndexPath:isa];

  id v6 = [v5 textLabel];
  if (v6)
  {
    uint64_t v7 = v6;
    String.append(_:)(v2[1]);
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 setText:v8];
  }
  type metadata accessor for MTToggleTestActionCell();
  uint64_t v9 = swift_dynamicCastClass();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = swift_dynamicCastClass();
    if (v11)
    {
      uint64_t v12 = OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_toggleAction;
      *(void *)(v10 + OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_toggleAction) = v11;
      swift_retain_n();
      id v13 = v5;
      swift_release();
      id v14 = *(void **)(v10 + OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_switchView);
      if (v14)
      {
        uint64_t v15 = *(void *)(v10 + v12);
        if (v15) {
          uint64_t v16 = *(unsigned __int8 *)(v15 + 64);
        }
        else {
          uint64_t v16 = 0;
        }
        [v14 setOn:v16];
      }

      swift_release_n();
    }
  }
  swift_release();
  return v5;
}

uint64_t MTTestActionListViewController.tableView(_:didSelectRowAt:)(void *a1)
{
  uint64_t v28 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  id v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  __chkstk_darwin(v4);
  id v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v26 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v24 - v12;
  id v14 = v1;
  uint64_t v15 = sub_1001F725C();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a1 deselectRowAtIndexPath:isa animated:1];

  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  id v17 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v11, v7);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v14;
  *(void *)(v18 + 24) = v15;
  aBlock[4] = sub_1001F7DA0;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100559208;
  id v19 = _Block_copy(aBlock);
  id v20 = v14;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_10002FBEC();
  id v21 = v27;
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v19);
  swift_release();

  (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v22);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
  return ((uint64_t (*)(char *, uint64_t))v25)(v13, v26);
}

uint64_t sub_1001F725C()
{
  unint64_t v1 = IndexPath.section.getter();
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionCategories);
  if (v1 >= *(void *)(v2 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = v2 + 16 * v1;
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v4 = *(void *)(v3 + 40);
  swift_bridgeObjectRetain();
  uint64_t v6 = IndexPath.row.getter();
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionsByCategoryName);
  if (!*(void *)(v7 + 16))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v8 = v6;
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_100051E78(v5, v4);
  if (v10)
  {
    uint64_t v11 = *(void *)(*(void *)(v7 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 0xC000000000000001) == 0)
    {
      if ((v8 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v8 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v12 = *(void *)(v11 + 8 * v8 + 32);
        swift_retain();
LABEL_9:
        swift_bridgeObjectRelease();
        return v12;
      }
      __break(1u);
      goto LABEL_15;
    }
LABEL_12:
    uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

id MTTestActionListViewController.__deallocating_deinit()
{
  return sub_1001F7A14(type metadata accessor for MTTestActionListViewController);
}

id sub_1001F74A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_switchView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_toggleAction] = 0;
  if (a3)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for MTToggleTestActionCell();
  id v6 = [super initWithStyle:a1 reuseIdentifier:v5];

  id v7 = v6;
  sub_1001F7658();

  return v7;
}

id sub_1001F7598()
{
  uint64_t v1 = OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_toggleAction;
  *(void *)(v0 + OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_toggleAction) = 0;
  swift_release();
  id result = *(id *)(v0 + OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_switchView);
  if (result)
  {
    uint64_t v3 = *(void *)(v0 + v1);
    if (v3) {
      uint64_t v4 = *(unsigned __int8 *)(v3 + 64);
    }
    else {
      uint64_t v4 = 0;
    }
    return [result setOn:v4];
  }
  return result;
}

void sub_1001F7658()
{
  id v1 = [objc_allocWithZone((Class)UISwitch) init];
  [v1 sizeToFit];
  [v0 addSubview:v1];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = [v1 centerYAnchor];
  id v3 = [v0 centerYAnchor];
  id v4 = [v2 constraintEqualToAnchor:v3];

  [v4 setActive:1];
  id v5 = [v1 trailingAnchor];
  id v6 = [v0 layoutMarginsGuide];
  id v7 = [v6 trailingAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7];
  [v8 setActive:1];

  id v9 = [v1 heightAnchor];
  [v1 frame];
  id v10 = [v9 constraintEqualToConstant:CGRectGetHeight(v15)];

  [v10 setActive:1];
  id v11 = [v1 widthAnchor];
  [v1 frame];
  id v12 = [v11 constraintEqualToConstant:CGRectGetWidth(v16)];

  [v12 setActive:1];
  [v1 addTarget:v0 action:"switchActionWithSender:" forControlEvents:64];
  id v13 = *(void **)&v0[OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_switchView];
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_switchView] = v1;
}

void sub_1001F78D8()
{
  uint64_t v1 = v0;
  id v2 = *(unsigned __int8 **)(v0 + OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_toggleAction);
  if (v2)
  {
    id v3 = *(void (**)(uint64_t))(*(void *)v2 + 200);
    uint64_t v4 = swift_retain();
    v3(v4);
    id v5 = *(void **)(v1 + OBJC_IVAR____TtC8Podcasts22MTToggleTestActionCell_switchView);
    if (v5)
    {
      uint64_t v6 = v2[64];
      id v7 = v5;
      [v7 setOn:v6];
    }
    swift_release();
  }
}

id sub_1001F79FC()
{
  return sub_1001F7A14(type metadata accessor for MTToggleTestActionCell);
}

id sub_1001F7A14(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t sub_1001F7A98(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_1002804B0(a4, a5, a6, v8, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_10027DEE4(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

void sub_1001F7B48()
{
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionCategories] = _swiftEmptyArrayStorage;
  uint64_t v1 = OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionsByCategoryName;
  *(void *)&v0[v1] = sub_10016ED60((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v2 = OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_testRunner;
  type metadata accessor for MTTestActionRunner();
  uint64_t v3 = swift_allocObject();
  *(void *)&v0[v2] = v3;
  *(unsigned char *)(v3 + 16) = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_testStartDelay] = 0x4000000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for MTTestActionListViewController()
{
  return self;
}

uint64_t sub_1001F7C2C(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionCategories);
  if (*(void *)(v2 + 16) <= a1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_orderedTestActionsByCategoryName);
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  uint64_t v4 = v2 + 16 * a1;
  uint64_t v5 = *(void *)(v4 + 40);
  uint64_t v6 = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_100051E78(v6, v5);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v9 = *(void *)(*(void *)(v3 + 56) + 8 * v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease_n();
    return v10;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for MTToggleTestActionCell()
{
  return self;
}

uint64_t sub_1001F7D60()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001F7DA0()
{
  return sub_1002FAAF0(*(void *)(v0 + 24), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Podcasts30MTTestActionListViewController_testRunner));
}

uint64_t type metadata accessor for MTTestActionListViewController.CellID()
{
  return self;
}

BOOL sub_1001F7DD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *((unsigned __int8 *)a1 + 40);
  uint64_t v3 = *((unsigned __int8 *)a2 + 40);
  if (!*((unsigned char *)a1 + 40))
  {
LABEL_11:
    if (!*((unsigned char *)a2 + 40)) {
      return v2 == v3;
    }
    goto LABEL_12;
  }
  if (v2 == 1)
  {
    uint64_t v2 = 4;
    if (!*((unsigned char *)a2 + 40)) {
      return v2 == v3;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3] | a1[4];
  if (!(v7 | *a1 | v6 | v5))
  {
    uint64_t v2 = 2;
    goto LABEL_11;
  }
  uint64_t v8 = v7 | v6 | v5;
  if (v4 == 1 && !v8)
  {
    uint64_t v2 = 3;
    if (!*((unsigned char *)a2 + 40)) {
      return v2 == v3;
    }
    goto LABEL_12;
  }
  if (v8) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = v4 == 2;
  }
  uint64_t v2 = 5;
  if (!v14) {
    uint64_t v2 = 6;
  }
  if (*((unsigned char *)a2 + 40))
  {
LABEL_12:
    if (v3 == 1)
    {
      uint64_t v3 = 4;
    }
    else
    {
      uint64_t v9 = *a2;
      uint64_t v10 = a2[3];
      uint64_t v11 = a2[4];
      uint64_t v12 = a2[2] | a2[1];
      if (v12 | *a2 | v10 | v11)
      {
        uint64_t v13 = v12 | v10 | v11;
        if (v9 != 1 || v13)
        {
          if (v13) {
            BOOL v15 = 0;
          }
          else {
            BOOL v15 = v9 == 2;
          }
          uint64_t v3 = 5;
          if (!v15) {
            uint64_t v3 = 6;
          }
        }
        else
        {
          uint64_t v3 = 3;
        }
      }
      else
      {
        uint64_t v3 = 2;
      }
    }
  }
  return v2 == v3;
}

void sub_1001F7EC8(void *a1@<X8>)
{
  sub_1001FBD48();
  *a1 = v2;
}

BOOL sub_1001F7EF0(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *((unsigned __int8 *)a1 + 40);
  unint64_t v3 = *((unsigned __int8 *)a2 + 40);
  if (!*((unsigned char *)a1 + 40))
  {
LABEL_11:
    if (!*((unsigned char *)a2 + 40)) {
      return v2 < v3;
    }
    goto LABEL_12;
  }
  if (v2 == 1)
  {
    unint64_t v2 = 4;
    if (!*((unsigned char *)a2 + 40)) {
      return v2 < v3;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3] | a1[4];
  if (!(v7 | *a1 | v6 | v5))
  {
    unint64_t v2 = 2;
    goto LABEL_11;
  }
  uint64_t v8 = v7 | v6 | v5;
  if (v4 == 1 && !v8)
  {
    unint64_t v2 = 3;
    if (!*((unsigned char *)a2 + 40)) {
      return v2 < v3;
    }
    goto LABEL_12;
  }
  if (v8) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = v4 == 2;
  }
  unint64_t v2 = 5;
  if (!v14) {
    unint64_t v2 = 6;
  }
  if (*((unsigned char *)a2 + 40))
  {
LABEL_12:
    if (v3 == 1)
    {
      unint64_t v3 = 4;
    }
    else
    {
      uint64_t v9 = *a2;
      uint64_t v10 = a2[3];
      uint64_t v11 = a2[4];
      uint64_t v12 = a2[2] | a2[1];
      if (v12 | *a2 | v10 | v11)
      {
        uint64_t v13 = v12 | v10 | v11;
        if (v9 != 1 || v13)
        {
          if (v13) {
            BOOL v15 = 0;
          }
          else {
            BOOL v15 = v9 == 2;
          }
          unint64_t v3 = 5;
          if (!v15) {
            unint64_t v3 = 6;
          }
        }
        else
        {
          unint64_t v3 = 3;
        }
      }
      else
      {
        unint64_t v3 = 2;
      }
    }
  }
  return v2 < v3;
}

BOOL sub_1001F7FE0(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *((unsigned __int8 *)a1 + 40);
  unint64_t v3 = *((unsigned __int8 *)a2 + 40);
  if (!*((unsigned char *)a2 + 40))
  {
LABEL_11:
    if (!*((unsigned char *)a1 + 40)) {
      return v3 >= v2;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    unint64_t v3 = 4;
    if (!*((unsigned char *)a1 + 40)) {
      return v3 >= v2;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3] | a2[4];
  if (!(v7 | *a2 | v6 | v5))
  {
    unint64_t v3 = 2;
    goto LABEL_11;
  }
  uint64_t v8 = v7 | v6 | v5;
  if (v4 == 1 && !v8)
  {
    unint64_t v3 = 3;
    if (!*((unsigned char *)a1 + 40)) {
      return v3 >= v2;
    }
    goto LABEL_12;
  }
  if (v8) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = v4 == 2;
  }
  unint64_t v3 = 5;
  if (!v14) {
    unint64_t v3 = 6;
  }
  if (*((unsigned char *)a1 + 40))
  {
LABEL_12:
    if (v2 == 1)
    {
      unint64_t v2 = 4;
    }
    else
    {
      uint64_t v9 = *a1;
      uint64_t v10 = a1[3];
      uint64_t v11 = a1[4];
      uint64_t v12 = a1[2] | a1[1];
      if (v12 | *a1 | v10 | v11)
      {
        uint64_t v13 = v12 | v10 | v11;
        if (v9 != 1 || v13)
        {
          if (v13) {
            BOOL v15 = 0;
          }
          else {
            BOOL v15 = v9 == 2;
          }
          unint64_t v2 = 5;
          if (!v15) {
            unint64_t v2 = 6;
          }
        }
        else
        {
          unint64_t v2 = 3;
        }
      }
      else
      {
        unint64_t v2 = 2;
      }
    }
  }
  return v3 >= v2;
}

BOOL sub_1001F80D0(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *((unsigned __int8 *)a1 + 40);
  unint64_t v3 = *((unsigned __int8 *)a2 + 40);
  if (!*((unsigned char *)a1 + 40))
  {
LABEL_11:
    if (!*((unsigned char *)a2 + 40)) {
      return v2 >= v3;
    }
    goto LABEL_12;
  }
  if (v2 == 1)
  {
    unint64_t v2 = 4;
    if (!*((unsigned char *)a2 + 40)) {
      return v2 >= v3;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3] | a1[4];
  if (!(v7 | *a1 | v6 | v5))
  {
    unint64_t v2 = 2;
    goto LABEL_11;
  }
  uint64_t v8 = v7 | v6 | v5;
  if (v4 == 1 && !v8)
  {
    unint64_t v2 = 3;
    if (!*((unsigned char *)a2 + 40)) {
      return v2 >= v3;
    }
    goto LABEL_12;
  }
  if (v8) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = v4 == 2;
  }
  unint64_t v2 = 5;
  if (!v14) {
    unint64_t v2 = 6;
  }
  if (*((unsigned char *)a2 + 40))
  {
LABEL_12:
    if (v3 == 1)
    {
      unint64_t v3 = 4;
    }
    else
    {
      uint64_t v9 = *a2;
      uint64_t v10 = a2[3];
      uint64_t v11 = a2[4];
      uint64_t v12 = a2[2] | a2[1];
      if (v12 | *a2 | v10 | v11)
      {
        uint64_t v13 = v12 | v10 | v11;
        if (v9 != 1 || v13)
        {
          if (v13) {
            BOOL v15 = 0;
          }
          else {
            BOOL v15 = v9 == 2;
          }
          unint64_t v3 = 5;
          if (!v15) {
            unint64_t v3 = 6;
          }
        }
        else
        {
          unint64_t v3 = 3;
        }
      }
      else
      {
        unint64_t v3 = 2;
      }
    }
  }
  return v2 >= v3;
}

BOOL sub_1001F81C0(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *((unsigned __int8 *)a1 + 40);
  unint64_t v3 = *((unsigned __int8 *)a2 + 40);
  if (!*((unsigned char *)a2 + 40))
  {
LABEL_11:
    if (!*((unsigned char *)a1 + 40)) {
      return v3 < v2;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    unint64_t v3 = 4;
    if (!*((unsigned char *)a1 + 40)) {
      return v3 < v2;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3] | a2[4];
  if (!(v7 | *a2 | v6 | v5))
  {
    unint64_t v3 = 2;
    goto LABEL_11;
  }
  uint64_t v8 = v7 | v6 | v5;
  if (v4 == 1 && !v8)
  {
    unint64_t v3 = 3;
    if (!*((unsigned char *)a1 + 40)) {
      return v3 < v2;
    }
    goto LABEL_12;
  }
  if (v8) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = v4 == 2;
  }
  unint64_t v3 = 5;
  if (!v14) {
    unint64_t v3 = 6;
  }
  if (*((unsigned char *)a1 + 40))
  {
LABEL_12:
    if (v2 == 1)
    {
      unint64_t v2 = 4;
    }
    else
    {
      uint64_t v9 = *a1;
      uint64_t v10 = a1[3];
      uint64_t v11 = a1[4];
      uint64_t v12 = a1[2] | a1[1];
      if (v12 | *a1 | v10 | v11)
      {
        uint64_t v13 = v12 | v10 | v11;
        if (v9 != 1 || v13)
        {
          if (v13) {
            BOOL v15 = 0;
          }
          else {
            BOOL v15 = v9 == 2;
          }
          unint64_t v2 = 5;
          if (!v15) {
            unint64_t v2 = 6;
          }
        }
        else
        {
          unint64_t v2 = 3;
        }
      }
      else
      {
        unint64_t v2 = 2;
      }
    }
  }
  return v3 < v2;
}

uint64_t sub_1001F82B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Podcasts24DownloadsAlertController____lazy_storage___debouncer;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Podcasts24DownloadsAlertController____lazy_storage___debouncer))
  {
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8Podcasts24DownloadsAlertController____lazy_storage___debouncer);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC8Podcasts24DownloadsAlertController_debounceInterval);
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for Debouncer();
    swift_allocObject();
    uint64_t v7 = sub_100307E10((uint64_t)v5, (uint64_t)sub_1001FC538, v8);
    swift_release();
    *(void *)(v1 + v6) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1001F841C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1001F8910();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001F8474(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(v2 + 56);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  sub_1001FC43C(a1, (_OWORD *)(v12 + 24));
  aBlock[4] = sub_1001FC52C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_1005593C0;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1001FC454((uint64_t)a1, (void (*)(void, void, void, void, void, void))sub_1001F9430);
  static DispatchQoS.unspecified.getter();
  id v17 = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_1001F8764(uint64_t a1, long long *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = (void *)(Strong + 64);
    swift_beginAccess();
    uint64_t v6 = *(void **)(v4 + 64);
    sub_1001FC454((uint64_t)a2, (void (*)(void, void, void, void, void, void))sub_1001F9430);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v4 + 64) = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v6 = sub_1002EF8B8(0, v6[2] + 1, 1, v6);
      *uint64_t v5 = v6;
    }
    unint64_t v9 = v6[2];
    unint64_t v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      uint64_t v6 = sub_1002EF8B8((void *)(v8 > 1), v9 + 1, 1, v6);
      *uint64_t v5 = v6;
    }
    _OWORD v6[2] = v9 + 1;
    sub_1001FC43C(a2, &v6[6 * v9 + 4]);
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    int v11 = *(unsigned __int8 *)(result + OBJC_IVAR____TtC8Podcasts24DownloadsAlertController_active);
    uint64_t result = swift_release();
    if (v11 == 1)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        sub_1001F82B0();
        swift_release();
        sub_1003074BC();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1001F8910()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + 56);
  aBlock[4] = sub_1001FBDDC;
  uint64_t v13 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_1005592D0;
  unint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v11[1] = _swiftEmptyArrayStorage;
  sub_10002FC48();
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

void sub_1001F8B84(uint64_t a1)
{
  sub_1001FBDE4(a1 + 16, (uint64_t)v9);
  if (v10)
  {
    uint64_t v2 = sub_100041A98(v9, v10);
    uint64_t v3 = *(void *)(*v2 + 24);
    uint64_t v4 = *(void *)(*v2 + 32);
    uint64_t v5 = *(void *)(*v2 + 40);
    uint64_t v6 = *(void *)(*v2 + 48);
    uint64_t v7 = *(void *)(*v2 + 56);
    char v8 = *(unsigned char *)(*v2 + 64);
    sub_1001FC3C0(v3, v4, v5, v6, v7, v8);
    sub_10004D2D8((uint64_t)v9);
  }
  else
  {
    sub_1001FBE4C((uint64_t)v9);
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    char v8 = -1;
  }
  v11[0] = v3;
  v11[1] = v4;
  void v11[2] = v5;
  v11[3] = v6;
  v11[4] = v7;
  char v12 = v8;
  swift_retain();
  sub_1001FC03C((uint64_t)v11, a1, a1);
  swift_release();
  sub_1001FC3AC(v3, v4, v5, v6, v7, v8);
}

void *sub_1001F8C88(void *a1)
{
  sub_100054B78(&qword_1005F8308);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D020;
  *(void *)(inited + 32) = 0;
  uint64_t v77 = inited + 32;
  *(void *)(inited + 4sub_1001DA808(0, 0) = 0;
  *(void *)(inited + 48) = &_swiftEmptySetSingleton;
  *(void *)(inited + 56) = 0;
  *(void *)(inited + 64) = 0;
  *(unsigned char *)(inited + 72) = 0;
  *(_OWORD *)(inited + 8sub_1001DA808(0, 0) = 0u;
  *(_OWORD *)(inited + 96) = 0u;
  *(void *)(inited + 112) = 0;
  *(unsigned char *)(inited + 12sub_1001DA808(0, 0) = 2;
  *(void *)(inited + 128) = 1;
  *(_OWORD *)(inited + 136) = 0u;
  *(_OWORD *)(inited + 152) = 0u;
  *(unsigned char *)(inited + 168) = 2;
  *(void *)(inited + 208) = 0;
  *(_OWORD *)(inited + 176) = 0u;
  *(_OWORD *)(inited + 192) = 0u;
  *(unsigned char *)(inited + 216) = 1;
  *(void *)(inited + 224) = 2;
  *(_OWORD *)(inited + 232) = 0u;
  *(_OWORD *)(inited + 248) = 0u;
  *(unsigned char *)(inited + 264) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  do
  {
    uint64_t v5 = v77 + 48 * v3;
    uint64_t v7 = *(void *)v5;
    uint64_t v6 = *(void *)(v5 + 8);
    uint64_t v8 = *(void *)(v5 + 16);
    uint64_t v9 = *(void *)(v5 + 24);
    uint64_t v10 = *(void *)(v5 + 32);
    int v11 = *(unsigned __int8 *)(v5 + 40);
    char v12 = a1;
    uint64_t v13 = a1[2];
    uint64_t v85 = *(unsigned __int8 *)(v5 + 40);
    uint64_t v79 = v3;
    uint64_t v80 = v10;
    uint64_t v83 = v6;
    uint64_t v84 = *(void *)v5;
    uint64_t v81 = v9;
    uint64_t v82 = v8;
    if (v13)
    {
      uint64_t v78 = v13;
      uint64_t v87 = *(unsigned __int8 *)(v5 + 40);
      BOOL v14 = v12;
      if (*(unsigned char *)(v5 + 40))
      {
        if (v11 == 1)
        {
          uint64_t v15 = 4;
        }
        else
        {
          uint64_t v17 = v8 | v6 | v9 | v10;
          if (v17) {
            BOOL v18 = 0;
          }
          else {
            BOOL v18 = v7 == 2;
          }
          uint64_t v19 = 5;
          if (!v18) {
            uint64_t v19 = 6;
          }
          BOOL v20 = v7 == 1 && v17 == 0;
          uint64_t v15 = 3;
          if (!v20) {
            uint64_t v15 = v19;
          }
          if (!(v8 | v6 | v7 | v9 | v10)) {
            uint64_t v15 = 2;
          }
        }
        uint64_t v87 = v15;
      }
      uint64_t v21 = v6;
      swift_bridgeObjectRetain_n();
      sub_1001F9430(v7, v21, v8, v9, v10, v11);
      uint64_t v22 = (char *)(v14 + 9);
      uint64_t v23 = v78;
      do
      {
        uint64_t v28 = *((void *)v22 - 5);
        uint64_t v27 = *((void *)v22 - 4);
        uint64_t v29 = *((void *)v22 - 3);
        uint64_t v30 = *((void *)v22 - 2);
        uint64_t v31 = *((void *)v22 - 1);
        int v32 = *v22;
        uint64_t v33 = *v22;
        if (*v22)
        {
          if (v32 == 1)
          {
            uint64_t v33 = 4;
          }
          else if (v29 | v27 | v28 | v30 | v31)
          {
            uint64_t v34 = v29 | v27 | v30 | v31;
            if (v28 != 1 || v34)
            {
              if (v34) {
                BOOL v35 = 0;
              }
              else {
                BOOL v35 = v28 == 2;
              }
              uint64_t v33 = 5;
              if (!v35) {
                uint64_t v33 = 6;
              }
            }
            else
            {
              uint64_t v33 = 3;
            }
          }
          else
          {
            uint64_t v33 = 2;
          }
        }
        if (v33 != v87)
        {
          sub_1001F9430(*((void *)v22 - 5), *((void *)v22 - 4), *((void *)v22 - 3), *((void *)v22 - 2), *((void *)v22 - 1), *v22);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1001BA734(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v25 = _swiftEmptyArrayStorage[2];
          unint64_t v24 = _swiftEmptyArrayStorage[3];
          if (v25 >= v24 >> 1) {
            sub_1001BA734(v24 > 1, v25 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v25 + 1;
          uint64_t v26 = &_swiftEmptyArrayStorage[6 * v25];
          v26[4] = v28;
          v26[5] = v27;
          v26[6] = v29;
          v26[7] = v30;
          v26[8] = v31;
          *((unsigned char *)v26 + 72) = v32;
        }
        v22 += 48;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      uint64_t v13 = v78;
    }
    else
    {
      uint64_t v16 = *(void *)(v5 + 8);
      swift_bridgeObjectRetain();
      sub_1001F9430(v7, v16, v8, v9, v10, v11);
    }
    sub_100054B78(&qword_1005FA9D0);
    uint64_t v36 = swift_initStackObject();
    *(_OWORD *)(v36 + 16) = xmmword_10046D010;
    if (!v13)
    {
      *(void *)(v36 + 64) = 0;
      *(_OWORD *)(v36 + 32) = 0u;
      *(_OWORD *)(v36 + 48) = 0u;
      *(unsigned char *)(v36 + 72) = -1;
      uint64_t v4 = _swiftEmptyArrayStorage;
      goto LABEL_3;
    }
    uint64_t v37 = v85;
    uint64_t v86 = v36;
    if (v85)
    {
      if (v85 == 1)
      {
        uint64_t v37 = 4;
      }
      else
      {
        uint64_t v38 = v82 | v83 | v81 | v80;
        if (v38) {
          BOOL v39 = 0;
        }
        else {
          BOOL v39 = v84 == 2;
        }
        uint64_t v40 = 5;
        if (!v39) {
          uint64_t v40 = 6;
        }
        BOOL v41 = v84 == 1 && v38 == 0;
        uint64_t v42 = 3;
        if (!v41) {
          uint64_t v42 = v40;
        }
        if (v82 | v83 | v84 | v81 | v80) {
          uint64_t v37 = v42;
        }
        else {
          uint64_t v37 = 2;
        }
      }
    }
    uint64_t v43 = swift_bridgeObjectRetain();
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = (char *)(v43 + 72);
    unsigned __int8 v50 = -1;
    do
    {
      uint64_t v51 = *((void *)v49 - 5);
      uint64_t v52 = *((void *)v49 - 4);
      uint64_t v53 = *((void *)v49 - 3);
      uint64_t v54 = *((void *)v49 - 2);
      uint64_t v55 = *((void *)v49 - 1);
      int v56 = *v49;
      uint64_t v57 = *v49;
      if (!*v49) {
        goto LABEL_74;
      }
      if (v56 == 1)
      {
        if (v37 != 4) {
          goto LABEL_63;
        }
        goto LABEL_75;
      }
      if (!(v53 | v52 | v51 | v54 | v55))
      {
        uint64_t v57 = 2;
LABEL_74:
        if (v37 != v57) {
          goto LABEL_63;
        }
LABEL_75:
        if (v50 == 255)
        {
          sub_1001F9430(*((void *)v49 - 5), *((void *)v49 - 4), *((void *)v49 - 3), *((void *)v49 - 2), *((void *)v49 - 1), *v49);
          uint64_t v44 = v51;
          uint64_t v45 = v52;
          uint64_t v46 = v53;
          uint64_t v47 = v54;
          uint64_t v48 = v55;
          unsigned __int8 v50 = v56;
        }
        else if (!v50)
        {
          if (*v49)
          {
            unsigned __int8 v50 = 0;
          }
          else
          {
            uint64_t v61 = v44;
            uint64_t v62 = v45;
            uint64_t v63 = v47;
            uint64_t v64 = v48;
            uint64_t v65 = v46;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_10004ACDC(v63);
            uint64_t v66 = swift_bridgeObjectRetain();
            uint64_t v67 = sub_1002C54B4(v66, v65);
            sub_1001FC3AC(v61, v62, v65, v63, v64, 0);
            uint64_t v48 = v64;
            uint64_t v47 = v63;
            uint64_t v45 = v62;
            uint64_t v44 = v61;
            unsigned __int8 v50 = 0;
            uint64_t v46 = v67;
          }
        }
        goto LABEL_63;
      }
      uint64_t v58 = v53 | v52 | v54 | v55;
      if (v51 == 1 && !v58)
      {
        if (v37 != 3) {
          goto LABEL_63;
        }
        goto LABEL_75;
      }
      if (v58) {
        BOOL v59 = 0;
      }
      else {
        BOOL v59 = v51 == 2;
      }
      uint64_t v60 = 5;
      if (!v59) {
        uint64_t v60 = 6;
      }
      if (v37 == v60) {
        goto LABEL_75;
      }
LABEL_63:
      v49 += 48;
      --v13;
    }
    while (v13);
    uint64_t v68 = v44;
    uint64_t v69 = v45;
    uint64_t v70 = v47;
    uint64_t v71 = v48;
    uint64_t v72 = v46;
    char v88 = v50;
    swift_bridgeObjectRelease();
    *(void *)(v86 + 32) = v68;
    *(void *)(v86 + 4sub_1001DA808(0, 0) = v69;
    *(void *)(v86 + 48) = v72;
    *(void *)(v86 + 56) = v70;
    *(void *)(v86 + 64) = v71;
    *(unsigned char *)(v86 + 72) = v88;
    if (v88 == -1)
    {
      uint64_t v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_1001F9430(v68, v69, v72, v70, v71, v88);
      uint64_t v4 = sub_1002EF8B8(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v74 = v4[2];
      unint64_t v73 = v4[3];
      if (v74 >= v73 >> 1) {
        uint64_t v4 = sub_1002EF8B8((void *)(v73 > 1), v74 + 1, 1, v4);
      }
      _OWORD v4[2] = v74 + 1;
      uint64_t v75 = &v4[6 * v74];
      v75[4] = v68;
      v75[5] = v69;
      v75[6] = v72;
      v75[7] = v70;
      v75[8] = v71;
      *((unsigned char *)v75 + 72) = v88;
    }
LABEL_3:
    swift_release();
    sub_1001B1A50((uint64_t)v4);
    uint64_t v3 = v79 + 1;
    swift_bridgeObjectRelease_n();
    sub_1001F94C8(v84, v83, v82, v81, v80, v85);
    a1 = _swiftEmptyArrayStorage;
  }
  while (v79 != 4);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001F9360()
{
  sub_1001FBE4C(v0 + 16);

  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts24DownloadsAlertController_debounceInterval;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1001F9428()
{
  return type metadata accessor for DownloadsAlertController();
}

void sub_1001F9430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 == 1)
  {
    swift_bridgeObjectRetain();
  }
  else if (!a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10004ACDC(a4);
  }
}

void destroy for PresentableError(uint64_t a1)
{
}

void sub_1001F94C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000536BC(a4);
  }
}

uint64_t initializeWithCopy for PresentableError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1001F9430(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 4sub_1001DA808(0, 0) = v8;
  return a1;
}

uint64_t assignWithCopy for PresentableError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1001F9430(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 4sub_1001DA808(0, 0) = v8;
  sub_1001F94C8(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 initializeWithTake for PresentableError(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PresentableError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 4sub_1001DA808(0, 0) = v4;
  sub_1001F94C8(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentableError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentableError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4sub_1001DA808(0, 0) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4sub_1001DA808(0, 0) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001F9768(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 1u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1001F9780(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 4sub_1001DA808(0, 0) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PresentableError()
{
  return &type metadata for PresentableError;
}

unint64_t sub_1001F97B8()
{
  unint64_t result = qword_1005FA9B0;
  if (!qword_1005FA9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FA9B0);
  }
  return result;
}

uint64_t sub_1001F980C()
{
  return sub_100044200(&qword_1005FA9B8, &qword_1005FA9C0);
}

Swift::Int sub_1001F9848(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10025D8FC(v2);
  }
  unsigned int v3 = *(uint64_t **)(v2 + 16);
  v5[0] = (uint64_t *)(v2 + 32);
  v5[1] = v3;
  Swift::Int result = sub_1001F98B4(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1001F98B4(uint64_t **a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = (Swift::Int)a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_266;
    }
    if ((unint64_t)v3 < 2) {
      return result;
    }
    uint64_t v140 = *v2;
    uint64_t v141 = -1;
    uint64_t v142 = 1;
    uint64_t v143 = *v2;
LABEL_193:
    uint64_t v144 = v141;
    uint64_t v145 = v143;
    while (1)
    {
      uint64_t v146 = v145 + 6;
      uint64_t v147 = v145[6];
      int v148 = *((unsigned __int8 *)v145 + 88);
      unint64_t v149 = *((unsigned __int8 *)v145 + 88);
      if (!*((unsigned char *)v145 + 88)) {
        goto LABEL_204;
      }
      if (v148 == 1)
      {
        unint64_t v149 = 4;
        Swift::Int result = *((unsigned __int8 *)v145 + 40);
        if (*((unsigned char *)v145 + 40)) {
          goto LABEL_205;
        }
        goto LABEL_226;
      }
      uint64_t v150 = v145[7];
      uint64_t v151 = v145[8];
      uint64_t v152 = v145[9] | v145[10];
      if (!(v152 | v147 | v151 | v150)) {
        break;
      }
      uint64_t v153 = v152 | v151 | v150;
      if (v147 != 1 || v153)
      {
        if (v153) {
          BOOL v159 = 0;
        }
        else {
          BOOL v159 = v147 == 2;
        }
        if (v159) {
          unint64_t v149 = 5;
        }
        else {
          unint64_t v149 = 6;
        }
        Swift::Int result = *((unsigned __int8 *)v145 + 40);
        if (!*((unsigned char *)v145 + 40)) {
          goto LABEL_226;
        }
LABEL_205:
        if (result == 1)
        {
          Swift::Int result = 4;
        }
        else
        {
          uint64_t v154 = *v145;
          uint64_t v155 = v145[3];
          uint64_t v156 = v145[4];
          uint64_t v157 = v145[2] | v145[1];
          if (v157 | *v145 | v155 | v156)
          {
            uint64_t v158 = v157 | v155 | v156;
            if (v154 != 1 || v158)
            {
              if (v158) {
                BOOL v160 = 0;
              }
              else {
                BOOL v160 = v154 == 2;
              }
              if (v160) {
                Swift::Int result = 5;
              }
              else {
                Swift::Int result = 6;
              }
            }
            else
            {
              Swift::Int result = 3;
            }
          }
          else
          {
            Swift::Int result = 2;
          }
        }
        goto LABEL_226;
      }
      unint64_t v149 = 3;
      Swift::Int result = *((unsigned __int8 *)v145 + 40);
      if (*((unsigned char *)v145 + 40)) {
        goto LABEL_205;
      }
LABEL_226:
      if (v149 >= result) {
        goto LABEL_192;
      }
      if (!v140) {
        goto LABEL_270;
      }
      long long v161 = *(_OWORD *)(v145 + 7);
      long long v162 = *(_OWORD *)(v145 + 9);
      long long v163 = *((_OWORD *)v145 + 1);
      *uint64_t v146 = *(_OWORD *)v145;
      *((_OWORD *)v145 + 4) = v163;
      long long v164 = *((_OWORD *)v145 + 2);
      uint64_t *v145 = v147;
      *(_OWORD *)(v145 + 1) = v161;
      *(_OWORD *)(v145 + 3) = v162;
      *((unsigned char *)v145 + 4sub_1001DA808(0, 0) = v148;
      v145 -= 6;
      v146[2] = v164;
      if (__CFADD__(v144++, 1))
      {
LABEL_192:
        ++v142;
        v143 += 6;
        --v141;
        if (v142 == v3) {
          return result;
        }
        goto LABEL_193;
      }
    }
    unint64_t v149 = 2;
LABEL_204:
    Swift::Int result = *((unsigned __int8 *)v145 + 40);
    if (*((unsigned char *)v145 + 40)) {
      goto LABEL_205;
    }
    goto LABEL_226;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_275;
  }
  Swift::Int v6 = result;
  uint64_t v180 = v1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v166 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_232;
    }
    uint64_t v175 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    uint64_t v175 = (void *)v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v174 = v2;
  char v11 = *v2;
  uint64_t v179 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v176 = v6;
  Swift::Int v177 = v3;
  while (2)
  {
    Swift::Int v13 = v10++;
    if (v10 < v3)
    {
      char v14 = &v11[6 * v10];
      unint64_t v15 = *((unsigned __int8 *)v14 + 40);
      if (*((unsigned char *)v14 + 40))
      {
        if (v15 == 1)
        {
          unint64_t v15 = 4;
        }
        else
        {
          uint64_t v17 = v14[3];
          uint64_t v16 = v14[4];
          uint64_t v18 = v14[2];
          uint64_t v19 = *v14;
          uint64_t v20 = v14[1];
          uint64_t v21 = v17 | v16;
          uint64_t v22 = v21 | v19 | v18 | v20;
          uint64_t v23 = v21 | v18 | v20;
          if (v23) {
            BOOL v24 = 0;
          }
          else {
            BOOL v24 = v19 == 2;
          }
          if (v24) {
            uint64_t v25 = 5;
          }
          else {
            uint64_t v25 = 6;
          }
          BOOL v26 = v19 == 1 && v23 == 0;
          unint64_t v15 = 3;
          if (!v26) {
            unint64_t v15 = v25;
          }
          if (!v22) {
            unint64_t v15 = 2;
          }
        }
      }
      uint64_t v27 = &v11[6 * v13];
      unint64_t v28 = *((unsigned __int8 *)v27 + 40);
      if (*((unsigned char *)v27 + 40))
      {
        if (v28 == 1)
        {
          unint64_t v28 = 4;
        }
        else
        {
          uint64_t v29 = *v27;
          uint64_t v30 = v27[1];
          uint64_t v32 = v27[2];
          uint64_t v31 = v27[3];
          uint64_t v33 = v27[4];
          uint64_t v34 = v32 | v30;
          uint64_t v35 = v34 | v29 | v31 | v33;
          uint64_t v36 = v34 | v31 | v33;
          if (v36) {
            BOOL v37 = 0;
          }
          else {
            BOOL v37 = v29 == 2;
          }
          if (v37) {
            uint64_t v38 = 5;
          }
          else {
            uint64_t v38 = 6;
          }
          BOOL v39 = v29 == 1 && v36 == 0;
          unint64_t v28 = 3;
          if (!v39) {
            unint64_t v28 = v38;
          }
          if (!v35) {
            unint64_t v28 = 2;
          }
        }
      }
      Swift::Int v10 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v40 = (uint64_t)&v11[6 * v13 + 9];
        while (1)
        {
          unint64_t v41 = *(unsigned __int8 *)(v40 + 64);
          if (!*(unsigned char *)(v40 + 64)) {
            goto LABEL_61;
          }
          if (v41 == 1)
          {
            unint64_t v41 = 4;
            unint64_t v42 = *(unsigned __int8 *)(v40 + 16);
            if (*(unsigned char *)(v40 + 16)) {
              goto LABEL_62;
            }
            goto LABEL_83;
          }
          uint64_t v43 = *(void *)(v40 + 24);
          uint64_t v44 = *(void *)(v40 + 32);
          uint64_t v45 = *(void *)(v40 + 40);
          uint64_t v46 = *(void *)(v40 + 48) | *(void *)(v40 + 56);
          if (!(v46 | v43 | v45 | v44)) {
            break;
          }
          uint64_t v47 = v46 | v45 | v44;
          if (v43 != 1 || v47)
          {
            if (v47) {
              BOOL v52 = 0;
            }
            else {
              BOOL v52 = v43 == 2;
            }
            if (v52) {
              unint64_t v41 = 5;
            }
            else {
              unint64_t v41 = 6;
            }
            unint64_t v42 = *(unsigned __int8 *)(v40 + 16);
            if (!*(unsigned char *)(v40 + 16)) {
              goto LABEL_83;
            }
LABEL_62:
            if (v42 == 1)
            {
              unint64_t v42 = 4;
            }
            else
            {
              uint64_t v48 = *(void *)(v40 - 24);
              uint64_t v49 = *(void *)(v40 + 8);
              uint64_t v50 = *(void *)(v40 - 8) | *(void *)(v40 - 16);
              if (v50 | v48 | *(void *)v40 | v49)
              {
                uint64_t v51 = v50 | *(void *)v40 | v49;
                if (v48 != 1 || v51)
                {
                  if (v51) {
                    BOOL v53 = 0;
                  }
                  else {
                    BOOL v53 = v48 == 2;
                  }
                  if (v53) {
                    unint64_t v42 = 5;
                  }
                  else {
                    unint64_t v42 = 6;
                  }
                }
                else
                {
                  unint64_t v42 = 3;
                }
              }
              else
              {
                unint64_t v42 = 2;
              }
            }
            goto LABEL_83;
          }
          unint64_t v41 = 3;
          unint64_t v42 = *(unsigned __int8 *)(v40 + 16);
          if (*(unsigned char *)(v40 + 16)) {
            goto LABEL_62;
          }
LABEL_83:
          if (v15 < v28 == v41 >= v42) {
            goto LABEL_86;
          }
          v40 += 48;
          if (v3 == ++v10)
          {
            Swift::Int v10 = v3;
            goto LABEL_86;
          }
        }
        unint64_t v41 = 2;
LABEL_61:
        unint64_t v42 = *(unsigned __int8 *)(v40 + 16);
        if (*(unsigned char *)(v40 + 16)) {
          goto LABEL_62;
        }
        goto LABEL_83;
      }
LABEL_86:
      if (v15 < v28)
      {
        if (v10 < v13) {
          goto LABEL_267;
        }
        if (v13 < v10)
        {
          uint64_t v54 = 6 * v10;
          uint64_t v55 = 6 * v13;
          Swift::Int v56 = v10;
          Swift::Int v57 = v13;
          do
          {
            if (v57 != --v56)
            {
              if (!v11) {
                goto LABEL_273;
              }
              uint64_t v58 = &v11[v55];
              uint64_t v59 = v11[v55 + 4];
              uint64_t v60 = &v11[v54];
              char v61 = v11[v55 + 5];
              long long v62 = *(_OWORD *)&v11[v55];
              long long v63 = *(_OWORD *)&v11[v55 + 2];
              long long v65 = *(_OWORD *)&v11[v54 - 4];
              long long v64 = *(_OWORD *)&v11[v54 - 2];
              *(_OWORD *)uint64_t v58 = *(_OWORD *)&v11[v54 - 6];
              *((_OWORD *)v58 + 1) = v65;
              *((_OWORD *)v58 + 2) = v64;
              *((_OWORD *)v60 - 3) = v62;
              *((_OWORD *)v60 - 2) = v63;
              *(v60 - 2) = v59;
              *((unsigned char *)v60 - 8) = v61;
            }
            ++v57;
            v54 -= 6;
            v55 += 6;
          }
          while (v57 < v56);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_102;
    }
    if (__OFSUB__(v10, v13)) {
      goto LABEL_265;
    }
    if (v10 - v13 >= v6)
    {
LABEL_102:
      uint64_t v67 = v179;
      if (v10 < v13) {
        goto LABEL_260;
      }
      goto LABEL_103;
    }
    Swift::Int v66 = v13 + v6;
    if (__OFADD__(v13, v6)) {
      goto LABEL_268;
    }
    if (v66 >= v3) {
      Swift::Int v66 = v3;
    }
    if (v66 < v13)
    {
LABEL_269:
      __break(1u);
LABEL_270:
      __break(1u);
LABEL_271:
      __break(1u);
LABEL_272:
      __break(1u);
LABEL_273:
      __break(1u);
LABEL_274:
      __break(1u);
LABEL_275:
      Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    if (v10 == v66) {
      goto LABEL_102;
    }
    uint64_t v117 = (uint64_t)&v11[6 * v10 - 6];
    uint64_t v67 = v179;
    while (2)
    {
      Swift::Int v118 = v13;
      uint64_t v119 = v117;
      do
      {
        uint64_t v120 = (_OWORD *)(v119 + 48);
        uint64_t v121 = *(void *)(v119 + 48);
        int v122 = *(unsigned __int8 *)(v119 + 88);
        unint64_t v123 = *(unsigned __int8 *)(v119 + 88);
        if (!*(unsigned char *)(v119 + 88)) {
          goto LABEL_162;
        }
        if (v122 == 1)
        {
          unint64_t v123 = 4;
          unint64_t v124 = *(unsigned __int8 *)(v119 + 40);
          if (!*(unsigned char *)(v119 + 40)) {
            goto LABEL_184;
          }
          goto LABEL_163;
        }
        uint64_t v126 = *(void *)(v119 + 56);
        uint64_t v125 = *(void *)(v119 + 64);
        uint64_t v127 = *(void *)(v119 + 72) | *(void *)(v119 + 80);
        if (!(v127 | v121 | v125 | v126))
        {
          unint64_t v123 = 2;
LABEL_162:
          unint64_t v124 = *(unsigned __int8 *)(v119 + 40);
          if (!*(unsigned char *)(v119 + 40)) {
            goto LABEL_184;
          }
LABEL_163:
          if (v124 == 1)
          {
            unint64_t v124 = 4;
          }
          else
          {
            uint64_t v129 = *(void *)v119;
            uint64_t v130 = *(void *)(v119 + 24);
            uint64_t v131 = *(void *)(v119 + 32);
            uint64_t v132 = *(void *)(v119 + 16) | *(void *)(v119 + 8);
            if (v132 | *(void *)v119 | v130 | v131)
            {
              uint64_t v133 = v132 | v130 | v131;
              if (v129 != 1 || v133)
              {
                if (v133) {
                  BOOL v135 = 0;
                }
                else {
                  BOOL v135 = v129 == 2;
                }
                if (v135) {
                  unint64_t v124 = 5;
                }
                else {
                  unint64_t v124 = 6;
                }
              }
              else
              {
                unint64_t v124 = 3;
              }
            }
            else
            {
              unint64_t v124 = 2;
            }
          }
          goto LABEL_184;
        }
        uint64_t v128 = v127 | v125 | v126;
        if (v121 == 1 && !v128)
        {
          unint64_t v123 = 3;
          unint64_t v124 = *(unsigned __int8 *)(v119 + 40);
          if (!*(unsigned char *)(v119 + 40)) {
            goto LABEL_184;
          }
          goto LABEL_163;
        }
        if (v128) {
          BOOL v134 = 0;
        }
        else {
          BOOL v134 = v121 == 2;
        }
        if (v134) {
          unint64_t v123 = 5;
        }
        else {
          unint64_t v123 = 6;
        }
        unint64_t v124 = *(unsigned __int8 *)(v119 + 40);
        if (*(unsigned char *)(v119 + 40)) {
          goto LABEL_163;
        }
LABEL_184:
        if (v123 >= v124) {
          break;
        }
        if (!v11) {
          goto LABEL_271;
        }
        long long v136 = *(_OWORD *)(v119 + 56);
        long long v137 = *(_OWORD *)(v119 + 72);
        long long v138 = *(_OWORD *)(v119 + 16);
        *uint64_t v120 = *(_OWORD *)v119;
        *(_OWORD *)(v119 + 64) = v138;
        long long v139 = *(_OWORD *)(v119 + 32);
        *(void *)uint64_t v119 = v121;
        *(_OWORD *)(v119 + 8) = v136;
        *(_OWORD *)(v119 + 24) = v137;
        *(unsigned char *)(v119 + 4sub_1001DA808(0, 0) = v122;
        v119 -= 48;
        ++v118;
        v120[2] = v139;
      }
      while (v10 != v118);
      ++v10;
      v117 += 48;
      if (v10 != v66) {
        continue;
      }
      break;
    }
    Swift::Int v10 = v66;
    if (v66 < v13) {
      goto LABEL_260;
    }
LABEL_103:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v67 = sub_10025C908(0, *((void *)v67 + 2) + 1, 1, v67);
    }
    unint64_t v69 = *((void *)v67 + 2);
    unint64_t v68 = *((void *)v67 + 3);
    unint64_t v12 = v69 + 1;
    if (v69 >= v68 >> 1) {
      uint64_t v67 = sub_10025C908((char *)(v68 > 1), v69 + 1, 1, v67);
    }
    *((void *)v67 + 2) = v12;
    uint64_t v70 = v67 + 32;
    uint64_t v71 = &v67[16 * v69 + 32];
    *(void *)uint64_t v71 = v13;
    *((void *)v71 + 1) = v10;
    uint64_t v179 = v67;
    if (v69)
    {
      while (2)
      {
        unint64_t v72 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v77 = &v70[16 * v12];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_249;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_250;
          }
          unint64_t v84 = v12 - 2;
          uint64_t v85 = &v70[16 * v12 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_252;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_255;
          }
          if (v89 >= v80)
          {
            long long v107 = &v70[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_259;
            }
            BOOL v100 = v75 < v110;
          }
          else
          {
LABEL_121:
            if (v76) {
              goto LABEL_251;
            }
            unint64_t v84 = v12 - 2;
            uint64_t v90 = &v70[16 * v12 - 32];
            uint64_t v92 = *(void *)v90;
            uint64_t v91 = *((void *)v90 + 1);
            BOOL v93 = __OFSUB__(v91, v92);
            uint64_t v94 = v91 - v92;
            char v95 = v93;
            if (v93) {
              goto LABEL_254;
            }
            uint64_t v96 = &v70[16 * v72];
            uint64_t v98 = *(void *)v96;
            uint64_t v97 = *((void *)v96 + 1);
            BOOL v83 = __OFSUB__(v97, v98);
            uint64_t v99 = v97 - v98;
            if (v83) {
              goto LABEL_257;
            }
            if (__OFADD__(v94, v99)) {
              goto LABEL_258;
            }
            if (v94 + v99 < v75) {
              goto LABEL_133;
            }
            BOOL v100 = v75 < v99;
          }
          if (v100) {
            unint64_t v72 = v84;
          }
        }
        else
        {
          if (v12 == 3)
          {
            uint64_t v74 = *((void *)v67 + 4);
            uint64_t v73 = *((void *)v67 + 5);
            BOOL v83 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            char v76 = v83;
            goto LABEL_121;
          }
          uint64_t v101 = *((void *)v67 + 4);
          uint64_t v102 = *((void *)v67 + 5);
          BOOL v83 = __OFSUB__(v102, v101);
          uint64_t v94 = v102 - v101;
          char v95 = v83;
LABEL_133:
          if (v95) {
            goto LABEL_253;
          }
          uint64_t v103 = &v70[16 * v72];
          uint64_t v105 = *(void *)v103;
          uint64_t v104 = *((void *)v103 + 1);
          BOOL v83 = __OFSUB__(v104, v105);
          uint64_t v106 = v104 - v105;
          if (v83) {
            goto LABEL_256;
          }
          if (v106 < v94) {
            goto LABEL_15;
          }
        }
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v12)
        {
          __break(1u);
LABEL_246:
          __break(1u);
LABEL_247:
          __break(1u);
LABEL_248:
          __break(1u);
LABEL_249:
          __break(1u);
LABEL_250:
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
LABEL_253:
          __break(1u);
LABEL_254:
          __break(1u);
LABEL_255:
          __break(1u);
LABEL_256:
          __break(1u);
LABEL_257:
          __break(1u);
LABEL_258:
          __break(1u);
LABEL_259:
          __break(1u);
LABEL_260:
          __break(1u);
LABEL_261:
          __break(1u);
LABEL_262:
          __break(1u);
LABEL_263:
          __break(1u);
LABEL_264:
          __break(1u);
LABEL_265:
          __break(1u);
LABEL_266:
          __break(1u);
LABEL_267:
          __break(1u);
LABEL_268:
          __break(1u);
          goto LABEL_269;
        }
        if (!v11) {
          goto LABEL_272;
        }
        uint64_t v112 = &v70[16 * v111];
        uint64_t v113 = *(void *)v112;
        unint64_t v114 = &v70[16 * v72];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1001FA368((unsigned __int8 *)&v11[6 * *(void *)v112], (unsigned __int8 *)&v11[6 * *(void *)v114], (unint64_t)&v11[6 * v115], __dst);
        if (v180) {
          goto LABEL_190;
        }
        if (v115 < v113) {
          goto LABEL_246;
        }
        if (v72 > *((void *)v179 + 2)) {
          goto LABEL_247;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v70[16 * v111 + 8] = v115;
        unint64_t v116 = *((void *)v179 + 2);
        if (v72 >= v116) {
          goto LABEL_248;
        }
        uint64_t v67 = v179;
        unint64_t v12 = v116 - 1;
        memmove(&v70[16 * v72], v114 + 16, 16 * (v116 - 1 - v72));
        *((void *)v179 + 2) = v116 - 1;
        if (v116 <= 2) {
          goto LABEL_15;
        }
        continue;
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v6 = v176;
    Swift::Int v3 = v177;
    if (v10 < v177) {
      continue;
    }
    break;
  }
  uint64_t v9 = v175;
  uint64_t v166 = v179;
  uint64_t v2 = v174;
LABEL_232:
  uint64_t v175 = v9;
  if (v12 >= 2)
  {
    unint64_t v167 = *v2;
    do
    {
      unint64_t v168 = v12 - 2;
      if (v12 < 2) {
        goto LABEL_261;
      }
      if (!v167) {
        goto LABEL_274;
      }
      unint64_t v169 = v166;
      uint64_t v170 = *(void *)&v166[16 * v168 + 32];
      uint64_t v171 = *(void *)&v166[16 * v12 + 24];
      sub_1001FA368((unsigned __int8 *)&v167[6 * v170], (unsigned __int8 *)&v167[6 * *(void *)&v166[16 * v12 + 16]], (unint64_t)&v167[6 * v171], __dst);
      if (v180) {
        break;
      }
      if (v171 < v170) {
        goto LABEL_262;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v169 = sub_10025CC4C((uint64_t)v169);
      }
      if (v168 >= *((void *)v169 + 2)) {
        goto LABEL_263;
      }
      Swift::Int v172 = &v169[16 * v168 + 32];
      *(void *)Swift::Int v172 = v170;
      *((void *)v172 + 1) = v171;
      unint64_t v173 = *((void *)v169 + 2);
      if (v12 > v173) {
        goto LABEL_264;
      }
      memmove(&v169[16 * v12 + 16], &v169[16 * v12 + 32], 16 * (v173 - v12));
      uint64_t v166 = v169;
      *((void *)v169 + 2) = v173 - 1;
      unint64_t v12 = v173 - 1;
    }
    while (v173 > 2);
  }
LABEL_190:
  swift_bridgeObjectRelease();
  v175[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001FA368(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  int v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v59 = __dst;
  uint64_t v60 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      uint64_t v34 = 48 * v11;
      if (__dst != a2 || &a2[v34] <= __dst) {
        memmove(__dst, a2, 48 * v11);
      }
      uint64_t v35 = &v4[v34];
      uint64_t v58 = &v4[v34];
      uint64_t v60 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        uint64_t v36 = (unsigned __int8 *)(a3 - 48);
        do
        {
          uint64_t v37 = *((void *)v35 - 6);
          unint64_t v38 = *(v35 - 8);
          if (*(v35 - 8))
          {
            if (v38 == 1)
            {
              unint64_t v38 = 4;
            }
            else
            {
              uint64_t v40 = *((void *)v35 - 5);
              uint64_t v39 = *((void *)v35 - 4);
              uint64_t v41 = *((void *)v35 - 3) | *((void *)v35 - 2);
              if (v41 | v37 | v39 | v40)
              {
                uint64_t v42 = v41 | v39 | v40;
                if (v37 != 1 || v42)
                {
                  if (v42) {
                    BOOL v43 = 0;
                  }
                  else {
                    BOOL v43 = v37 == 2;
                  }
                  if (v43) {
                    unint64_t v38 = 5;
                  }
                  else {
                    unint64_t v38 = 6;
                  }
                }
                else
                {
                  unint64_t v38 = 3;
                }
              }
              else
              {
                unint64_t v38 = 2;
              }
            }
          }
          uint64_t v44 = v6 - 48;
          uint64_t v45 = *((void *)v6 - 6);
          unint64_t v46 = *(v6 - 8);
          if (*(v6 - 8))
          {
            if (v46 == 1)
            {
              unint64_t v46 = 4;
            }
            else
            {
              uint64_t v47 = *((void *)v6 - 3);
              uint64_t v48 = *((void *)v6 - 2);
              uint64_t v49 = *((void *)v6 - 4) | *((void *)v6 - 5);
              if (v49 | v45 | v47 | v48)
              {
                uint64_t v50 = v49 | v47 | v48;
                if (v45 != 1 || v50)
                {
                  if (v50) {
                    BOOL v51 = 0;
                  }
                  else {
                    BOOL v51 = v45 == 2;
                  }
                  if (v51) {
                    unint64_t v46 = 5;
                  }
                  else {
                    unint64_t v46 = 6;
                  }
                }
                else
                {
                  unint64_t v46 = 3;
                }
              }
              else
              {
                unint64_t v46 = 2;
              }
            }
          }
          BOOL v52 = v36 + 48;
          if (v38 >= v46)
          {
            uint64_t v58 = v35 - 48;
            if (v52 < v35 || v36 >= v35 || v52 != v35)
            {
              long long v55 = *((_OWORD *)v35 - 3);
              long long v56 = *((_OWORD *)v35 - 1);
              *((_OWORD *)v36 + 1) = *((_OWORD *)v35 - 2);
              *((_OWORD *)v36 + 2) = v56;
              *(_OWORD *)uint64_t v36 = v55;
            }
            uint64_t v44 = v6;
            v35 -= 48;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            if (v52 != v6 || v36 >= v6)
            {
              long long v53 = *(_OWORD *)v44;
              long long v54 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v36 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v36 + 2) = v54;
              *(_OWORD *)uint64_t v36 = v53;
            }
            uint64_t v60 = v6 - 48;
            if (v44 <= v7) {
              break;
            }
          }
          v36 -= 48;
          Swift::Int v6 = v44;
        }
        while (v35 > v4);
      }
LABEL_101:
      sub_10025CB80((void **)&v60, (const void **)&v59, &v58);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    size_t v12 = 48 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12);
    }
    Swift::Int v13 = &v4[v12];
    uint64_t v58 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      while (1)
      {
        unint64_t v14 = v6[40];
        if (!v6[40]) {
          goto LABEL_18;
        }
        if (v14 == 1)
        {
          unint64_t v14 = 4;
          unint64_t v15 = v4[40];
          if (!v4[40]) {
            goto LABEL_36;
          }
          goto LABEL_19;
        }
        uint64_t v16 = *(void *)v6;
        uint64_t v17 = *((void *)v6 + 1);
        uint64_t v18 = *((void *)v6 + 2);
        uint64_t v19 = *((void *)v6 + 3) | *((void *)v6 + 4);
        if (!(v19 | *(void *)v6 | v18 | v17)) {
          break;
        }
        uint64_t v20 = v19 | v18 | v17;
        if (v16 != 1 || v20)
        {
          if (v20) {
            BOOL v26 = 0;
          }
          else {
            BOOL v26 = v16 == 2;
          }
          if (v26) {
            unint64_t v14 = 5;
          }
          else {
            unint64_t v14 = 6;
          }
          unint64_t v15 = v4[40];
          if (!v4[40])
          {
LABEL_36:
            if (v14 >= v15) {
              goto LABEL_48;
            }
            goto LABEL_37;
          }
        }
        else
        {
          unint64_t v14 = 3;
          unint64_t v15 = v4[40];
          if (!v4[40]) {
            goto LABEL_36;
          }
        }
LABEL_19:
        if (v15 == 1)
        {
          if (v14 >= 4) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v21 = *(void *)v4;
          uint64_t v22 = *((void *)v4 + 3);
          uint64_t v23 = *((void *)v4 + 4);
          uint64_t v24 = *((void *)v4 + 2) | *((void *)v4 + 1);
          if (v24 | *(void *)v4 | v22 | v23)
          {
            uint64_t v25 = v24 | v22 | v23;
            if (v21 != 1 || v25)
            {
              if (v25) {
                BOOL v30 = 0;
              }
              else {
                BOOL v30 = v21 == 2;
              }
              if (v30) {
                unint64_t v31 = 5;
              }
              else {
                unint64_t v31 = 6;
              }
              if (v14 >= v31)
              {
LABEL_48:
                if (v7 != v4)
                {
                  long long v32 = *(_OWORD *)v4;
                  long long v33 = *((_OWORD *)v4 + 2);
                  *((_OWORD *)v7 + 1) = *((_OWORD *)v4 + 1);
                  *((_OWORD *)v7 + 2) = v33;
                  *(_OWORD *)uint64_t v7 = v32;
                }
                v4 += 48;
                uint64_t v59 = v4;
                uint64_t v27 = v6;
                goto LABEL_51;
              }
            }
            else if (v14 >= 3)
            {
              goto LABEL_48;
            }
          }
          else if (v14 >= 2)
          {
            goto LABEL_48;
          }
        }
LABEL_37:
        uint64_t v27 = v6 + 48;
        if (v7 < v6 || v7 >= v27 || v7 != v6)
        {
          long long v28 = *(_OWORD *)v6;
          long long v29 = *((_OWORD *)v6 + 2);
          *((_OWORD *)v7 + 1) = *((_OWORD *)v6 + 1);
          *((_OWORD *)v7 + 2) = v29;
          *(_OWORD *)uint64_t v7 = v28;
        }
LABEL_51:
        v7 += 48;
        if (v4 < v13)
        {
          Swift::Int v6 = v27;
          if ((unint64_t)v27 < a3) {
            continue;
          }
        }
        uint64_t v60 = v7;
        goto LABEL_101;
      }
      unint64_t v14 = 2;
LABEL_18:
      unint64_t v15 = v4[40];
      if (!v4[40]) {
        goto LABEL_36;
      }
      goto LABEL_19;
    }
    goto LABEL_101;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001FA7D8(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1002EF250(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  unint64_t v14 = &v5[a1 + 4];
  sub_100054B78(&qword_1005F76C0);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = v5[2];
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_26;
  }
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v14 + 1);
    uint64_t v19 = &v5[a2 + 4];
    if (v14 + 1 != v19 || result >= (char *)&v19[v18]) {
      uint64_t result = (char *)memmove(result, v19, 8 * v18);
    }
    uint64_t v20 = v5[2];
    BOOL v17 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v17)
    {
      _OWORD v5[2] = v21;
LABEL_20:
      void *v14 = a3;
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001FA960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *int v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  unint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  _s14descr10054BDA9C7SectionCMa();
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        BOOL v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  void *v14 = v3;

  return specialized Array._endMutation()();
}

uint64_t sub_1001FAC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FAC60(a1, a2, a3, (unint64_t *)&qword_1005FD240);
}

uint64_t sub_1001FAC60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a4;
    uint64_t v9 = a3;
    uint64_t v6 = a2;
    uint64_t v8 = a1;
    if (!(*v5 >> 62))
    {
      if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 < v6) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v10 = v6 - v8;
  if (__OFSUB__(v6, v8))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v4 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25 + v4;
    if (!__OFADD__(v25, v4)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  long long v29 = v7;
  if (*v5 >> 62) {
    goto LABEL_32;
  }
  uint64_t v11 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v4;
  if (__OFADD__(v11, v4)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v13 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v13;
  uint64_t v28 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v13 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v5 = v13;
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v16 = (void *)(v15 + 32 + 8 * v8);
  sub_10004D29C(0, v29);
  swift_arrayDestroy();
  if (v4)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v26 - v6;
      if (!__OFSUB__(v26, v6))
      {
LABEL_17:
        if (v18 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v16 + 1);
        uint64_t v20 = (char *)(v15 + 32 + 8 * v6);
        if (v16 + 1 != (void *)v20 || v19 >= &v20[8 * v18]) {
          memmove(v19, v20, 8 * v18);
        }
        if (!(v13 >> 62))
        {
          uint64_t v21 = *(void *)(v15 + 16);
          uint64_t v22 = v21 + v4;
          if (!__OFADD__(v21, v4))
          {
LABEL_23:
            *(void *)(v15 + 16) = v22;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v22 = v27 + v4;
        if (!__OFADD__(v27, v4)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v18 = v17 - v6;
      if (!__OFSUB__(v17, v6)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v16 = v28;

  return specialized Array._endMutation()();
}

uint64_t sub_1001FAF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FAC60(a1, a2, a3, (unint64_t *)&unk_1006061A0);
}

void sub_1001FAF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v67 = a2;
  uint64_t v56 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  long long v55 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  long long v53 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  swift_retain();
  uint64_t v65 = v9;
  if (v9)
  {
    unint64_t v10 = 0;
    uint64_t v57 = a3 + 16;
    BOOL v52 = v76;
    BOOL v51 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v50 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v11 = a1 + 72;
    uint64_t v47 = v65 - 1;
    uint64_t v49 = _swiftEmptyArrayStorage;
    uint64_t v62 = a3;
    uint64_t v66 = a1;
    uint64_t v48 = a1 + 72;
    while (1)
    {
      uint64_t v12 = (unsigned __int8 *)(v11 + 48 * v10);
      while (1)
      {
        if (v10 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v73 = *((void *)v12 - 5);
        uint64_t v74 = *((void *)v12 - 4);
        uint64_t v70 = *((void *)v12 - 3);
        uint64_t v72 = *((void *)v12 - 2);
        uint64_t v71 = *((void *)v12 - 1);
        uint64_t v13 = *v12;
        int v14 = *v12;
        unint64_t v69 = v10 + 1;
        sub_1001FC3D4(v67, (uint64_t)v80);
        if (v84 == 255) {
          break;
        }
        uint64_t v68 = v80[1];
        uint64_t v15 = v81;
        uint64_t v16 = v82;
        uint64_t v17 = v83;
        if (v84)
        {
          if (v84 == 1)
          {
            uint64_t v18 = 4;
            if (!v14) {
              goto LABEL_37;
            }
          }
          else if (v81 | v68 | v80[0] | v82 | v83)
          {
            uint64_t v19 = v81 | v68 | v82 | v83;
            if (v80[0] != 1 || v19)
            {
              if (v19) {
                BOOL v20 = 0;
              }
              else {
                BOOL v20 = v80[0] == 2;
              }
              uint64_t v18 = 5;
              if (!v20) {
                uint64_t v18 = 6;
              }
              if (!v14) {
                goto LABEL_37;
              }
            }
            else
            {
              uint64_t v18 = 3;
              if (!v14) {
                goto LABEL_37;
              }
            }
          }
          else
          {
            uint64_t v18 = 2;
            if (!v14) {
              goto LABEL_37;
            }
          }
        }
        else
        {
          uint64_t v18 = 0;
          if (!v14) {
            goto LABEL_37;
          }
        }
        if (v14 == 1)
        {
          if (v18 != 4) {
            break;
          }
          goto LABEL_38;
        }
        if (!(v70 | v74 | v73 | v72 | v71))
        {
          uint64_t v13 = 2;
LABEL_37:
          if (v18 != v13) {
            break;
          }
          goto LABEL_38;
        }
        uint64_t v21 = v70 | v74 | v72 | v71;
        if (v73 != 1 || v21)
        {
          if (v21) {
            BOOL v38 = 0;
          }
          else {
            BOOL v38 = v73 == 2;
          }
          if (v38) {
            uint64_t v39 = 5;
          }
          else {
            uint64_t v39 = 6;
          }
          if (v18 != v39) {
            break;
          }
        }
        else if (v18 != 3)
        {
          break;
        }
LABEL_38:
        if (!v84)
        {
          uint64_t v63 = v80[0];
          uint64_t v22 = v67;
          sub_1001FC454(v67, (void (*)(void, void, void, void, void, void))sub_1001FC3C0);
          swift_retain();
          sub_1001FC454(v22, (void (*)(void, void, void, void, void, void))sub_1001FC3C0);
          uint64_t v23 = v70;
          sub_1001F9430(v73, v74, v70, v72, v71, v14);
          swift_bridgeObjectRelease();
          uint64_t v24 = v68;
          swift_bridgeObjectRelease();
          sub_1000536BC(v16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10004ACDC(v16);
          if (v14)
          {
            uint64_t v25 = v15;
          }
          else
          {
            uint64_t v26 = swift_bridgeObjectRetain();
            uint64_t v25 = sub_1002C54B4(v26, v15);
          }
          uint64_t v64 = v25;
          uint64_t v27 = v63;
          *(void *)&long long v85 = v63;
          *((void *)&v85 + 1) = v24;
          uint64_t v86 = v25;
          uint64_t v87 = v16;
          uint64_t v88 = v17;
          char v89 = 0;
          sub_1001FBDE4(v57, (uint64_t)&v77);
          if (v78)
          {
            sub_100041A98(&v77, v78);
            sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
            uint64_t v59 = static OS_dispatch_queue.main.getter();
            uint64_t v28 = swift_allocObject();
            swift_weakInit();
            uint64_t v29 = swift_allocObject();
            *(void *)(v29 + 16) = v28;
            sub_1001FC43C(&v85, (_OWORD *)(v29 + 24));
            v76[2] = sub_1001FC4D0;
            v76[3] = v29;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            v76[0] = sub_10003B424;
            v76[1] = &unk_100559348;
            uint64_t v58 = _Block_copy(aBlock);
            sub_1001F9430(v27, v24, v64, v16, v17, 0);
            swift_release();
            uint64_t v60 = v17;
            BOOL v30 = v53;
            static DispatchQoS.unspecified.getter();
            aBlock[0] = _swiftEmptyArrayStorage;
            sub_10002FC48();
            sub_100054B78((uint64_t *)&unk_1005FE4B0);
            sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
            uint64_t v61 = v16;
            unint64_t v31 = v55;
            uint64_t v32 = v56;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            long long v33 = v58;
            uint64_t v34 = (void *)v59;
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            uint64_t v23 = v70;
            _Block_release(v33);

            uint64_t v35 = v31;
            uint64_t v16 = v61;
            uint64_t v36 = v32;
            uint64_t v24 = v68;
            (*v51)(v35, v36);
            uint64_t v37 = v30;
            uint64_t v17 = v60;
            (*v50)(v37, v54);
            sub_10004D2D8((uint64_t)&v77);
          }
          else
          {
            sub_1001FBE4C((uint64_t)&v77);
          }
          sub_1001FC454(v67, (void (*)(void, void, void, void, void, void))sub_1001FC3AC);
          sub_1001F94C8(v27, v24, v64, v16, v17, 0);
          swift_release();
          sub_1001F94C8(v73, v74, v23, v72, v71, v14);
        }
        v12 += 48;
        unint64_t v10 = v69;
        a1 = v66;
        if (v65 == v69) {
          goto LABEL_59;
        }
      }
      sub_1001F9430(v73, v74, v70, v72, v71, v14);
      uint64_t v40 = v49;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v79 = v40;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1001BA734(0, v40[2] + 1, 1);
        uint64_t v40 = v79;
      }
      unint64_t v43 = v40[2];
      unint64_t v42 = v40[3];
      if (v43 >= v42 >> 1)
      {
        sub_1001BA734(v42 > 1, v43 + 1, 1);
        uint64_t v40 = v79;
      }
      void v40[2] = v43 + 1;
      uint64_t v49 = v40;
      uint64_t v44 = &v40[6 * v43];
      uint64_t v45 = v74;
      v44[4] = v73;
      v44[5] = v45;
      uint64_t v46 = v72;
      v44[6] = v70;
      v44[7] = v46;
      v44[8] = v71;
      *((unsigned char *)v44 + 72) = v14;
      BOOL v20 = v47 == v10;
      a1 = v66;
      uint64_t v11 = v48;
      unint64_t v10 = v69;
      if (v20) {
        goto LABEL_59;
      }
    }
  }
  uint64_t v49 = _swiftEmptyArrayStorage;
LABEL_59:
  swift_bridgeObjectRelease();
  sub_1001FC454(v67, (void (*)(void, void, void, void, void, void))sub_1001FC3AC);
  swift_release();
}

uint64_t sub_1001FB8E8(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1002EF5E8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_100054B78((uint64_t *)&unk_1005F7F40);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= (void *)&v16[40 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      _OWORD v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001FBA68(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  _s14descr10054BDA9C7SectionCMa();
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        BOOL v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

double sub_1001FBD48()
{
  sub_100054B78(&qword_1005F8308);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10046D020;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 4sub_1001DA808(0, 0) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 48) = &_swiftEmptySetSingleton;
  *(unsigned char *)(v0 + 72) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8sub_1001DA808(0, 0) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(void *)(v0 + 112) = 0;
  *(unsigned char *)(v0 + 12sub_1001DA808(0, 0) = 2;
  *(void *)(v0 + 128) = 1;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(unsigned char *)(v0 + 168) = 2;
  *(void *)(v0 + 208) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(unsigned char *)(v0 + 216) = 1;
  *(void *)(v0 + 224) = 2;
  *(_OWORD *)(v0 + 232) = 0u;
  *(_OWORD *)(v0 + 248) = 0u;
  *(unsigned char *)(v0 + 264) = 2;
  return result;
}

void sub_1001FBDDC()
{
  sub_1001F8B84(v0);
}

uint64_t sub_1001FBDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005FA9C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FBE4C(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_1005FA9C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001FBEAC(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1002EF8B8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_21;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_27;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[6 * a2 + 4];
    size_t v17 = 48 * v15;
    if (48 * a1 < 48 * a2 || &v4[6 * a1 + 4] >= (void *)&v16[v17] || a1 != a2) {
      uint64_t result = (uint64_t)memmove(&v4[6 * a1 + 4], v16, v17);
    }
    uint64_t v18 = v4[2];
    BOOL v14 = __OFADD__(v18, v8);
    uint64_t v19 = v18 - v7;
    if (!v14)
    {
      _OWORD v4[2] = v19;
LABEL_21:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001FC03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100054B78(&qword_1005FA9D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D010;
  uint64_t v7 = a2 + 64;
  swift_beginAccess();
  uint64_t v24 = a2;
  swift_retain();
  uint64_t v8 = (void *)swift_bridgeObjectRetain();
  int64_t v9 = sub_1001F8C88(v8);
  swift_bridgeObjectRelease();
  *(void *)&v31[0] = v9;
  swift_bridgeObjectRetain();
  sub_1001F9848((uint64_t *)v31);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)&v31[0];
  swift_retain();
  sub_1001FC454(a1, (void (*)(void, void, void, void, void, void))sub_1001FC3C0);
  sub_1001FAF7C(v10, a1, a3);
  uint64_t v12 = v11;
  swift_release();
  if (*(void *)(v12 + 16))
  {
    uint64_t v25 = a1;
    uint64_t v26 = v7;
    uint64_t v13 = *(void *)(v12 + 32);
    uint64_t v14 = *(void *)(v12 + 40);
    uint64_t v15 = *(void *)(v12 + 48);
    uint64_t v16 = *(void *)(v12 + 56);
    uint64_t v17 = *(void *)(v12 + 64);
    char v18 = *(unsigned char *)(v12 + 72);
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 4sub_1001DA808(0, 0) = v14;
    *(void *)(inited + 48) = v15;
    *(void *)(inited + 56) = v16;
    *(void *)(inited + 64) = v17;
    *(unsigned char *)(inited + 72) = v18;
    sub_1001F9430(v13, v14, v15, v16, v17, v18);
    swift_bridgeObjectRelease();
    sub_1001F9430(v13, v14, v15, v16, v17, v18);
    uint64_t v19 = sub_1002EF8B8(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v21 = v19[2];
    unint64_t v20 = v19[3];
    if (v21 >= v20 >> 1) {
      uint64_t v19 = sub_1002EF8B8((void *)(v20 > 1), v21 + 1, 1, v19);
    }
    v19[2] = v21 + 1;
    uint64_t v22 = &v19[6 * v21];
    v22[4] = v13;
    v22[5] = v14;
    void v22[6] = v15;
    v22[7] = v16;
    v22[8] = v17;
    *((unsigned char *)v22 + 72) = v18;
    swift_release();
    uint64_t v7 = v26;
    a1 = v25;
  }
  else
  {
    *(void *)(inited + 64) = 0;
    *(_OWORD *)(inited + 32) = 0u;
    *(_OWORD *)(inited + 48) = 0u;
    *(unsigned char *)(inited + 72) = -1;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v19 = _swiftEmptyArrayStorage;
  }
  *(void *)uint64_t v7 = v19;
  swift_bridgeObjectRelease();
  sub_1001FC3D4(a1, (uint64_t)v29);
  if (v30 != 255)
  {
    sub_1001FC43C(v29, v31);
    return swift_release();
  }
  if (!*(void *)(*(void *)v7 + 16)) {
    return swift_release();
  }
  swift_beginAccess();
  if (*(void *)(*(void *)v7 + 16))
  {
    sub_1001FC43C((long long *)(*(void *)v7 + 32), v31);
    sub_1001FC454((uint64_t)v31, (void (*)(void, void, void, void, void, void))sub_1001F9430);
    sub_1001FBEAC(0, 1);
    swift_endAccess();
    sub_1001FBDE4(v24 + 16, (uint64_t)v27);
    if (v28)
    {
      sub_100041A98(v27, v28);
      sub_10024F888(v31);
      sub_1001FC454((uint64_t)v31, (void (*)(void, void, void, void, void, void))sub_1001F94C8);
      sub_10004D2D8((uint64_t)v27);
    }
    else
    {
      sub_1001FC454((uint64_t)v31, (void (*)(void, void, void, void, void, void))sub_1001F94C8);
      sub_1001FBE4C((uint64_t)v27);
    }
    return swift_release();
  }
  __break(1u);
  swift_release_n();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1001FC3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != -1) {
    sub_1001F94C8(a1, a2, a3, a4, a5, a6);
  }
}

void sub_1001FC3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != -1) {
    sub_1001F9430(a1, a2, a3, a4, a5, a6);
  }
}

uint64_t sub_1001FC3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78(&qword_1005FA9D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1001FC43C(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1001FC454(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1001FC494()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1001FC4D0()
{
  sub_10024F54C(*(void *)(v0 + 16), (long long *)(v0 + 24));
}

uint64_t sub_1001FC4E0()
{
  swift_release();
  sub_1001F94C8(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return swift_deallocObject();
}

uint64_t sub_1001FC52C()
{
  return sub_1001F8764(*(void *)(v0 + 16), (long long *)(v0 + 24));
}

uint64_t sub_1001FC538()
{
  return sub_1001F841C();
}

uint64_t sub_1001FC554(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for PodcastContextActionConfiguration(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    *(void *)(v1 + 24) = *(void *)(result + qword_1005FADD0);
    swift_retain();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001FC5EC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for PodcastContextActionConfiguration(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    *(void *)(v1 + 16) = *(void *)(result + qword_1005FADD0);
    swift_retain();
    return swift_release();
  }
  return result;
}

void *sub_1001FC684(uint64_t a1)
{
  sub_100204074(a1);
  uint64_t v3 = *(void *)(v1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  if (*(unsigned char *)(v3 + 32)) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = sub_10020CCD0(&qword_1005FAAB0, v7, (void (*)(uint64_t))type metadata accessor for RemoveFromStationContextAction);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  *(void *)(v9 + 24) = a1;
  uint64_t v10 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  uint64_t v12 = &v11[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v12 = v1;
  *((void *)v12 + 1) = v8;
  uint64_t v13 = (uint64_t (**)())&v11[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *uint64_t v13 = sub_10020C2F8;
  v13[1] = (uint64_t (*)())v9;
  v17.receiver = v11;
  v17.super_class = v10;
  swift_retain_n();
  swift_retain();
  id v14 = [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10046D060;
  *(void *)(v15 + 32) = v14;
  uint64_t v16 = v15;
  specialized Array._endMutation()();
  return (void *)v16;
}

void *sub_1001FC7F8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for InteractionContext();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for PodcastContextActionConfiguration(0);
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    *(void *)(v2 + 24) = *(void *)(v12 + qword_1005FADD0);
    swift_retain();
    swift_release();
  }
  if (*v11)
  {
    swift_retain();
    dispatch thunk of ContextActionsConfiguration.context.getter();
    swift_release();
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    char v13 = InteractionContext.Page.isShowPage.getter();
    sub_1001B4BB0((uint64_t)v6);
    if (v13) {
      return _swiftEmptyArrayStorage;
    }
  }
  if (!*(void *)(v2 + 24)) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v14 = sub_10020CCD0(&qword_1005FAAE0, 255, (void (*)(uint64_t))type metadata accessor for GoToShowPodcastContextAction);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  *(void *)(v15 + 24) = a1;
  uint64_t v16 = (objc_class *)type metadata accessor for ContextActionActivity();
  objc_super v17 = (char *)objc_allocWithZone(v16);
  char v18 = &v17[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)char v18 = v2;
  *((void *)v18 + 1) = v14;
  uint64_t v19 = (uint64_t (**)())&v17[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *uint64_t v19 = sub_10020C394;
  v19[1] = (uint64_t (*)())v15;
  v24.receiver = v17;
  v24.super_class = v16;
  swift_retain_n();
  swift_retain();
  id v20 = [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10046D060;
  *(void *)(v21 + 32) = v20;
  uint64_t v23 = v21;
  specialized Array._endMutation()();
  return (void *)v23;
}

void *sub_1001FCADC(uint64_t a1)
{
  sub_1002042BC(a1);
  if ((sub_10026AAB8() & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_10020CCD0(&qword_1005FAAE8, 255, (void (*)(uint64_t))type metadata accessor for PlayTranscriptSelectionContextAction);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v7 = v1;
  *((void *)v7 + 1) = v3;
  uint64_t v8 = (uint64_t (**)())&v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *uint64_t v8 = sub_10020C494;
  v8[1] = (uint64_t (*)())v4;
  v13.receiver = v6;
  v13.super_class = v5;
  swift_retain_n();
  swift_retain();
  [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046D060;
  *(void *)(v10 + 32) = v9;
  uint64_t v12 = v10;
  specialized Array._endMutation()();
  return (void *)v12;
}

void *sub_1001FCC34(uint64_t a1)
{
  sub_1002043E4(a1);
  if ((sub_1002B1208() & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_10020CCD0(&qword_1005FAAF0, 255, (void (*)(uint64_t))type metadata accessor for RemoveFromUpNextEpisodeContextAction);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v7 = v1;
  *((void *)v7 + 1) = v3;
  uint64_t v8 = (uint64_t (**)())&v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *uint64_t v8 = sub_10020C530;
  v8[1] = (uint64_t (*)())v4;
  v13.receiver = v6;
  v13.super_class = v5;
  swift_retain_n();
  swift_retain();
  id v9 = [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046D060;
  *(void *)(v10 + 32) = v9;
  uint64_t v12 = v10;
  specialized Array._endMutation()();
  return (void *)v12;
}

void *sub_1001FCD8C(uint64_t a1)
{
  sub_100203E68(a1);
  if (!sub_1002C18B4()) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_10020CCD0(&qword_1005FAAF8, 255, (void (*)(uint64_t))type metadata accessor for GoToEpisodeContextAction);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v7 = v1;
  *((void *)v7 + 1) = v3;
  uint64_t v8 = (uint64_t (**)())&v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *uint64_t v8 = sub_10020C5DC;
  v8[1] = (uint64_t (*)())v4;
  v13.receiver = v6;
  v13.super_class = v5;
  swift_retain_n();
  swift_retain();
  [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046D060;
  *(void *)(v10 + 32) = v9;
  uint64_t v12 = v10;
  specialized Array._endMutation()();
  return (void *)v12;
}

void *sub_1001FCEE4(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  if (!*v3) {
    return _swiftEmptyArrayStorage;
  }
  type metadata accessor for CategoryContextActionConfiguration(0);
  if (!swift_dynamicCastClass()) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_10020CCD0(&qword_1005FAB00, 255, (void (*)(uint64_t))type metadata accessor for ManageFavoriteCategoriesContextAction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = a1;
  uint64_t v6 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v8 = v1;
  *((void *)v8 + 1) = v4;
  id v9 = (uint64_t (**)())&v7[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *id v9 = sub_10020C6D8;
  v9[1] = (uint64_t (*)())v5;
  v14.receiver = v7;
  v14.super_class = v6;
  swift_retain_n();
  swift_retain();
  id v10 = [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10046D060;
  *(void *)(v11 + 32) = v10;
  uint64_t v13 = v11;
  specialized Array._endMutation()();
  return (void *)v13;
}

uint64_t sub_1001FD08C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  swift_retain();
  swift_release();
  sub_1002EA2D4();
  uint64_t v3 = sub_10020CCD0(&qword_1005FAB08, 255, (void (*)(uint64_t))type metadata accessor for ReportConcernContextAction);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v7 = v1;
  *((void *)v7 + 1) = v3;
  uint64_t v8 = (uint64_t (**)())&v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *uint64_t v8 = sub_10020C784;
  v8[1] = (uint64_t (*)())v4;
  v13.receiver = v6;
  v13.super_class = v5;
  swift_retain_n();
  swift_retain();
  [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046D060;
  *(void *)(v10 + 32) = v9;
  uint64_t v12 = v10;
  specialized Array._endMutation()();
  return v12;
}

void *sub_1001FD1FC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  sub_1002FD854();
  if ((sub_1002FD9F0() & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_10020CCD0(&qword_1005FAB10, 255, (void (*)(uint64_t))type metadata accessor for FavoriteContextAction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = a1;
  uint64_t v6 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v8 = v1;
  *((void *)v8 + 1) = v4;
  id v9 = (uint64_t (**)())&v7[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *id v9 = sub_10020C81C;
  v9[1] = (uint64_t (*)())v5;
  v14.receiver = v7;
  v14.super_class = v6;
  swift_retain_n();
  swift_retain();
  id v10 = [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10046D060;
  *(void *)(v11 + 32) = v10;
  uint64_t v13 = v11;
  specialized Array._endMutation()();
  return (void *)v13;
}

void *sub_1001FD390(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  sub_100313334();
  if ((sub_100313474() & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_10020CCD0(&qword_1005FAB18, 255, (void (*)(uint64_t))type metadata accessor for SuggestLessContextAction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = a1;
  uint64_t v6 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v8 = v1;
  *((void *)v8 + 1) = v4;
  id v9 = (uint64_t (**)())&v7[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *id v9 = sub_10020C8D0;
  v9[1] = (uint64_t (*)())v5;
  v14.receiver = v7;
  v14.super_class = v6;
  swift_retain_n();
  swift_retain();
  id v10 = [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10046D060;
  *(void *)(v11 + 32) = v10;
  uint64_t v13 = v11;
  specialized Array._endMutation()();
  return (void *)v13;
}

void *sub_1001FD524(uint64_t a1)
{
  sub_100203F5C(a1);
  if ((sub_10032F414() & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_10020CCD0(&qword_1005FAB20, 255, (void (*)(uint64_t))type metadata accessor for ViewTranscriptContextAction);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v7 = v1;
  *((void *)v7 + 1) = v3;
  uint64_t v8 = (uint64_t (**)())&v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *uint64_t v8 = sub_10020C98C;
  v8[1] = (uint64_t (*)())v4;
  v13.receiver = v6;
  v13.super_class = v5;
  swift_retain_n();
  swift_retain();
  id v9 = [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046D060;
  *(void *)(v10 + 32) = v9;
  uint64_t v12 = v10;
  specialized Array._endMutation()();
  return (void *)v12;
}

void *sub_1001FD67C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  sub_100364948();
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID + 8) & 1) != 0
    || *(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestState) == 4)
  {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = InterestState.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == InterestState.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_11:
    uint64_t v11 = sub_10020CCD0(&qword_1005FAB28, 255, (void (*)(uint64_t))type metadata accessor for UndoSuggestLessContextAction);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v1;
    *(void *)(v12 + 24) = a1;
    objc_super v13 = (objc_class *)type metadata accessor for ContextActionActivity();
    objc_super v14 = (char *)objc_allocWithZone(v13);
    uint64_t v15 = &v14[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
    *(void *)uint64_t v15 = v1;
    *((void *)v15 + 1) = v11;
    uint64_t v16 = (uint64_t (**)())&v14[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
    *uint64_t v16 = sub_10020CA44;
    v16[1] = (uint64_t (*)())v12;
    v20.receiver = v14;
    v20.super_class = v13;
    swift_retain_n();
    swift_retain();
    [super init];
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10046D060;
    *(void *)(v18 + 32) = v17;
    uint64_t v19 = v18;
    specialized Array._endMutation()();
    return (void *)v19;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1001FD898(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  sub_1003AF6EC();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_adamID + 8)) {
    return _swiftEmptyArrayStorage;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_interestState) == 4) {
    return _swiftEmptyArrayStorage;
  }
  if (*v3)
  {
    type metadata accessor for PodcastContextActionConfiguration(0);
    if (swift_dynamicCastClass()) {
      return _swiftEmptyArrayStorage;
    }
  }
  uint64_t v4 = InterestState.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == InterestState.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_13:
    uint64_t v11 = sub_10020CCD0(&qword_1005FAB30, 255, (void (*)(uint64_t))type metadata accessor for UndoFavoriteContextAction);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v1;
    *(void *)(v12 + 24) = a1;
    objc_super v13 = (objc_class *)type metadata accessor for ContextActionActivity();
    objc_super v14 = (char *)objc_allocWithZone(v13);
    uint64_t v15 = &v14[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
    *(void *)uint64_t v15 = v1;
    *((void *)v15 + 1) = v11;
    uint64_t v16 = (uint64_t (**)())&v14[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
    *uint64_t v16 = sub_10020CAF8;
    v16[1] = (uint64_t (*)())v12;
    v20.receiver = v14;
    v20.super_class = v13;
    swift_retain_n();
    swift_retain();
    id v17 = [super init];
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10046D060;
    *(void *)(v18 + 32) = v17;
    uint64_t v19 = v18;
    specialized Array._endMutation()();
    return (void *)v19;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1001FDAD8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for PodcastContextActionConfiguration(0);
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    *(void *)(v1 + 16) = *(void *)(v3 + qword_1005FADD0);
    swift_retain();
    swift_release();
  }
  if ((sub_1003FF50C() & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_10020CCD0(&qword_1005FAB38, 255, (void (*)(uint64_t))type metadata accessor for SettingsPodcastContextAction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = a1;
  uint64_t v6 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v8 = v1;
  *((void *)v8 + 1) = v4;
  char v9 = (uint64_t (**)())&v7[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *char v9 = sub_10020CBC4;
  v9[1] = (uint64_t (*)())v5;
  v14.receiver = v7;
  v14.super_class = v6;
  swift_retain_n();
  swift_retain();
  id v10 = [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10046D060;
  *(void *)(v11 + 32) = v10;
  uint64_t v13 = v11;
  specialized Array._endMutation()();
  return (void *)v13;
}

void *sub_1001FDC94(uint64_t a1)
{
  sub_1002041C8(a1);
  if (!sub_10041CFD8()) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_10020CCD0(&qword_1005FAB40, 255, (void (*)(uint64_t))type metadata accessor for EpisodePresentPodcastContextAction);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = (objc_class *)type metadata accessor for ContextActionActivity();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_contextActionItem];
  *(void *)uint64_t v7 = v1;
  *((void *)v7 + 1) = v3;
  uint64_t v8 = (uint64_t (**)())&v6[OBJC_IVAR____TtC8Podcasts21ContextActionActivity_performHandler];
  *uint64_t v8 = sub_10020CD20;
  v8[1] = (uint64_t (*)())v4;
  v13.receiver = v6;
  v13.super_class = v5;
  swift_retain_n();
  swift_retain();
  [super init];
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10046D060;
  *(void *)(v10 + 32) = v9;
  uint64_t v12 = v10;
  specialized Array._endMutation()();
  return (void *)v12;
}

uint64_t sub_1001FDDEC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100204074(a1);
  uint64_t v8 = *(void *)(v1 + 16);
  if (!v8 || *(unsigned char *)(v8 + 32)) {
    return 0;
  }
  uint64_t result = swift_bridgeObjectRetain();
  if (result)
  {
    uint64_t v10 = *(void *)(result + 16);
    swift_bridgeObjectRelease();
    if (!v10) {
      return 0;
    }
    id v11 = [self mainBundle];
    v19._unint64_t object = (void *)0xE000000000000000;
    v12._unint64_t object = (void *)0x80000001004D6720;
    v12._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v13._uint64_t countAndFlagsBits = 0;
    v13._unint64_t object = (void *)0xE000000000000000;
    v19._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v19);

    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self _systemImageNamed:v14];

    if (v15)
    {
      id v16 = [v15 imageWithRenderingMode:2];
    }
    sub_10020C2A0();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContextActionType.removeFromStation(_:), v4);
    ContextActionType.actionIdentifier.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v2;
    *(void *)(v17 + 24) = a1;
    swift_retain();
    swift_retain();
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return result;
}

uint64_t sub_1001FE0A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for InteractionContext();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v14 = (void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for PodcastContextActionConfiguration(0);
  uint64_t v15 = swift_dynamicCastClass();
  if (v15)
  {
    *(void *)(v2 + 24) = *(void *)(v15 + qword_1005FADD0);
    swift_retain();
    swift_release();
  }
  if (*v14)
  {
    swift_retain();
    dispatch thunk of ContextActionsConfiguration.context.getter();
    swift_release();
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    char v16 = InteractionContext.Page.isShowPage.getter();
    sub_1001B4BB0((uint64_t)v9);
    if (v16) {
      return 0;
    }
  }
  if (!*(void *)(v2 + 24)) {
    return 0;
  }
  id v17 = [self mainBundle];
  v27._unint64_t object = (void *)0x80000001004D67C0;
  v18._uint64_t countAndFlagsBits = 0x6853206F74206F47;
  v18._unint64_t object = (void *)0xEA0000000000776FLL;
  v19._uint64_t countAndFlagsBits = 0;
  v19._unint64_t object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v27);

  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [self _systemImageNamed:v20];

  if (v21)
  {
    id v22 = [v21 imageWithRenderingMode:2];
  }
  sub_10020C2A0();
  uint64_t v24 = v26;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v6, enum case for ContextActionType.presentPodcast(_:), v4);
  ContextActionType.actionIdentifier.getter();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v2;
  *(void *)(v25 + 24) = a1;
  swift_retain();
  swift_retain();
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1001FE4CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002042BC(a1);
  char v8 = sub_10026AAB8();
  uint64_t result = 0;
  if (v8)
  {
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self _systemImageNamed:v10];

    if (v11)
    {
      id v12 = [v11 imageWithRenderingMode:2];
    }
    sub_10020C2A0();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContextActionType.playFromTranscript(_:), v4);
    ContextActionType.actionIdentifier.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v2;
    *(void *)(v13 + 24) = a1;
    swift_retain();
    swift_retain();
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return result;
}

uint64_t sub_1001FE6EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002043E4(a1);
  if ((sub_1002B1208() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v1 + 96))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v8 = [self _systemImageNamed:v7];

    if (v8)
    {
      id v9 = [v8 imageWithRenderingMode:2];
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts36RemoveFromUpNextEpisodeContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
  uint64_t v11 = type metadata accessor for ContextActionType();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
  }
  else
  {
    ContextActionType.actionIdentifier.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
  }
  sub_10020C2A0();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  *(void *)(v13 + 24) = a1;
  swift_retain();
  swift_retain();
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1001FE96C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100203E68(a1);
  if (!sub_1002C18B4()) {
    return 0;
  }
  if (*(void *)(v1 + 104))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v8 = [self _systemImageNamed:v7];

    if (v8)
    {
      id v9 = [v8 imageWithRenderingMode:2];
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts24GoToEpisodeContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
  uint64_t v11 = type metadata accessor for ContextActionType();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
  }
  else
  {
    ContextActionType.actionIdentifier.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
  }
  sub_10020C2A0();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  *(void *)(v13 + 24) = a1;
  swift_retain();
  swift_retain();
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1001FEBEC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = (void *)(v2 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration);
  swift_beginAccess();
  *NSString v7 = a1;
  swift_retain();
  swift_release();
  if (!*v7) {
    return 0;
  }
  type metadata accessor for CategoryContextActionConfiguration(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    id v9 = [self mainBundle];
    v19._unint64_t object = (void *)0x80000001004D6810;
    v10._unint64_t object = (void *)0x80000001004D67E0;
    v10._uint64_t countAndFlagsBits = 0xD000000000000029;
    v11._uint64_t countAndFlagsBits = 0;
    v11._unint64_t object = (void *)0xE000000000000000;
    v19._uint64_t countAndFlagsBits = 0x100000000000001DLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v19);

    if (*(void *)(v2 + 32))
    {
      swift_bridgeObjectRetain();
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v13 = [self _systemImageNamed:v12];

      if (v13)
      {
        id v14 = [v13 imageWithRenderingMode:2];
      }
    }
    sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
    uint64_t v15 = type metadata accessor for ContextActionType();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15) == 1)
    {
      sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
    }
    else
    {
      ContextActionType.actionIdentifier.getter();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
    }
    sub_10020C2A0();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v2;
    *(void *)(v17 + 24) = a1;
    swift_retain();
    swift_retain();
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return result;
}

uint64_t sub_1001FEF28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  swift_retain();
  swift_release();
  sub_1002EA2D4();
  id v7 = [self mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD000000000000025;
  v18._unint64_t object = (void *)0x80000001004D6850;
  v8._unint64_t object = (void *)0x80000001004D6830;
  v8._uint64_t countAndFlagsBits = 0xD000000000000010;
  v9._uint64_t countAndFlagsBits = 0;
  v9._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v18);

  if (*(void *)(v2 + 72))
  {
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v11 = [self _systemImageNamed:v10];

    if (v11)
    {
      id v12 = [v11 imageWithRenderingMode:2];
    }
  }
  sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
  uint64_t v13 = type metadata accessor for ContextActionType();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) == 1)
  {
    sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
  }
  else
  {
    ContextActionType.actionIdentifier.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
  }
  sub_10020C2A0();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  *(void *)(v15 + 24) = a1;
  swift_retain();
  swift_retain();
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1001FF238(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess();
  *id v7 = a1;
  swift_retain();
  swift_release();
  sub_1002FD854();
  char v8 = sub_1002FD9F0();
  uint64_t result = 0;
  if (v8)
  {
    id v10 = [self mainBundle];
    v20._unint64_t object = (void *)0xE800000000000000;
    v11._unint64_t object = (void *)0x80000001004D6890;
    v11._uint64_t countAndFlagsBits = 0xD000000000000015;
    v12._uint64_t countAndFlagsBits = 0;
    v12._unint64_t object = (void *)0xE000000000000000;
    v20._uint64_t countAndFlagsBits = 0x657469726F766146;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v20);

    if (*(void *)(v2 + 32))
    {
      swift_bridgeObjectRetain();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v14 = [self _systemImageNamed:v13];

      if (v14)
      {
        id v15 = [v14 imageWithRenderingMode:2];
      }
    }
    sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
    uint64_t v16 = type metadata accessor for ContextActionType();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
    {
      sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
    }
    else
    {
      ContextActionType.actionIdentifier.getter();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
    }
    sub_10020C2A0();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v2;
    *(void *)(v18 + 24) = a1;
    swift_retain();
    swift_retain();
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return result;
}

uint64_t sub_1001FF568(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess();
  *id v7 = a1;
  swift_retain();
  swift_release();
  sub_100313334();
  char v8 = sub_100313474();
  uint64_t result = 0;
  if (v8)
  {
    id v10 = [self mainBundle];
    v20._unint64_t object = (void *)0xEC0000007373654CLL;
    v11._unint64_t object = (void *)0x80000001004D68B0;
    v11._uint64_t countAndFlagsBits = 0xD000000000000019;
    v12._uint64_t countAndFlagsBits = 0;
    v12._unint64_t object = (void *)0xE000000000000000;
    v20._uint64_t countAndFlagsBits = 0x2074736567677553;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v20);

    if (*(void *)(v2 + 32))
    {
      swift_bridgeObjectRetain();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v14 = [self _systemImageNamed:v13];

      if (v14)
      {
        id v15 = [v14 imageWithRenderingMode:2];
      }
    }
    sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
    uint64_t v16 = type metadata accessor for ContextActionType();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
    {
      sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
    }
    else
    {
      ContextActionType.actionIdentifier.getter();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
    }
    sub_10020C2A0();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v2;
    *(void *)(v18 + 24) = a1;
    swift_retain();
    swift_retain();
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return result;
}

uint64_t sub_1001FF8A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100203F5C(a1);
  char v8 = sub_10032F414();
  uint64_t result = 0;
  if (v8)
  {
    swift_beginAccess();
    if (*(void *)(v1 + 24)
      && (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
    {
      id v10 = (objc_class *)[self mainBundle];
      unint64_t v21 = 0xAE00A680E2747865;
      unint64_t v11 = 0x80000001004D68D0;
      unint64_t v12 = 0xD000000000000014;
      v13.super.Class isa = v10;
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      uint64_t v16 = 0x54207463656C6553;
    }
    else
    {
      id v10 = (objc_class *)[self mainBundle];
      unint64_t v21 = 0xEF7470697263736ELL;
      unint64_t v12 = 0x4152545F57454956;
      unint64_t v11 = 0xEF5450495243534ELL;
      v13.super.Class isa = v10;
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      uint64_t v16 = 0x6172542077656956;
    }
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, v13, *(Swift::String *)&v14, *(Swift::String *)&v16);

    if (*(void *)(v1 + 24))
    {
      type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
      swift_dynamicCastClass();
    }
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = [self _systemImageNamed:v17];

    if (v18)
    {
      id v19 = [v18 imageWithRenderingMode:2];
    }
    sub_10020C2A0();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContextActionType.viewTranscript(_:), v4);
    ContextActionType.actionIdentifier.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v2;
    *(void *)(v20 + 24) = a1;
    swift_retain();
    swift_retain();
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return result;
}

uint64_t sub_1001FFC54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  swift_beginAccess();
  *id v7 = a1;
  swift_retain();
  swift_release();
  sub_100364948();
  uint64_t result = 0;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID + 8) & 1) == 0)
  {
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestState) == 4) {
      return 0;
    }
    uint64_t v9 = InterestState.rawValue.getter();
    uint64_t v11 = v10;
    if (v9 == InterestState.rawValue.getter() && v11 == v12)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    id v15 = [self mainBundle];
    v16._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v25._unint64_t object = (void *)0x80000001004D6930;
    v16._unint64_t object = (void *)0x80000001004D6910;
    v17._uint64_t countAndFlagsBits = 0;
    v17._unint64_t object = (void *)0xE000000000000000;
    v25._uint64_t countAndFlagsBits = 0xD000000000000011;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v25);

    if (*(void *)(v2 + 32))
    {
      swift_bridgeObjectRetain();
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v19 = [self _systemImageNamed:v18];

      if (v19)
      {
        id v20 = [v19 imageWithRenderingMode:2];
      }
    }
    sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
    uint64_t v21 = type metadata accessor for ContextActionType();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v6, 1, v21) == 1)
    {
      sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
    }
    else
    {
      ContextActionType.actionIdentifier.getter();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
    }
    sub_10020C2A0();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v2;
    *(void *)(v23 + 24) = a1;
    swift_retain();
    swift_retain();
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return result;
}

uint64_t sub_10020001C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration);
  swift_beginAccess();
  *id v7 = a1;
  swift_retain();
  swift_release();
  sub_1003AF6EC();
  uint64_t result = 0;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_adamID + 8) & 1) == 0)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_interestState) == 4) {
      return 0;
    }
    if (!*v7
      || (type metadata accessor for PodcastContextActionConfiguration(0),
          uint64_t v9 = swift_dynamicCastClass(),
          uint64_t result = 0,
          !v9))
    {
      uint64_t v10 = InterestState.rawValue.getter();
      uint64_t v12 = v11;
      if (v10 == InterestState.rawValue.getter() && v12 == v13)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      id v16 = [self mainBundle];
      v26._unint64_t object = (void *)0xED0000657469726FLL;
      v17._unint64_t object = (void *)0x80000001004D6950;
      v17._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v18._uint64_t countAndFlagsBits = 0;
      v18._unint64_t object = (void *)0xE000000000000000;
      v26._uint64_t countAndFlagsBits = 0x766146206F646E55;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v26);

      if (*(void *)(v2 + 32))
      {
        swift_bridgeObjectRetain();
        NSString v19 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v20 = [self _systemImageNamed:v19];

        if (v20)
        {
          id v21 = [v20 imageWithRenderingMode:2];
        }
      }
      sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
      uint64_t v22 = type metadata accessor for ContextActionType();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v6, 1, v22) == 1)
      {
        sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
      }
      else
      {
        ContextActionType.actionIdentifier.getter();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v22);
      }
      sub_10020C2A0();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v2;
      *(void *)(v24 + 24) = a1;
      swift_retain();
      swift_retain();
      return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    }
  }
  return result;
}

uint64_t sub_100200414(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for PodcastContextActionConfiguration(0);
  uint64_t v8 = swift_dynamicCastClass();
  if (v8)
  {
    *(void *)(v1 + 16) = *(void *)(v8 + qword_1005FADD0);
    swift_retain();
    swift_release();
  }
  if ((sub_1003FF50C() & 1) == 0) {
    return 0;
  }
  id v9 = [self mainBundle];
  v18._unint64_t object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0x73676E6974746553;
  v10._unint64_t object = (void *)0xE800000000000000;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v18);

  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [self _systemImageNamed:v12];

  if (v13)
  {
    id v14 = [v13 imageWithRenderingMode:2];
  }
  sub_10020C2A0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContextActionType.settings(_:), v4);
  ContextActionType.actionIdentifier.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v2;
  *(void *)(v16 + 24) = a1;
  swift_retain();
  swift_retain();
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1002006FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002041C8(a1);
  BOOL v8 = sub_10041CFD8();
  uint64_t result = 0;
  if (v8)
  {
    id v10 = [self mainBundle];
    v18._unint64_t object = (void *)0x80000001004D6970;
    v11._uint64_t countAndFlagsBits = 0x6853206F74206F47;
    v11._unint64_t object = (void *)0xEA0000000000776FLL;
    v12._uint64_t countAndFlagsBits = 0;
    v12._unint64_t object = (void *)0xE000000000000000;
    v18._uint64_t countAndFlagsBits = 0xD000000000000021;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v18);

    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [self _systemImageNamed:v13];

    if (v14)
    {
      id v15 = [v14 imageWithRenderingMode:2];
    }
    sub_10020C2A0();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContextActionType.episodeGoToShow(_:), v4);
    ContextActionType.actionIdentifier.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v2;
    *(void *)(v16 + 24) = a1;
    swift_retain();
    swift_retain();
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return result;
}

id sub_1002009A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100204074(a1);
  uint64_t v8 = *(void *)(v1 + 16);
  if (v8)
  {
    if (!*(unsigned char *)(v8 + 32))
    {
      uint64_t v11 = swift_bridgeObjectRetain();
      if (v11)
      {
        uint64_t v12 = *(void *)(v11 + 16);
        swift_bridgeObjectRelease();
        if (v12)
        {
          double v13 = sub_10020C158((uint64_t)&aBlock);
          id v14 = aBlock;
          v25[1] = v27;
          id v15 = v28;
          uint64_t v16 = v30;
          (*(void (**)(char *, void, uint64_t, double))(v5 + 104))(v7, enum case for ContextActionType.removeFromStation(_:), v4, v13);
          uint64_t v17 = sub_100268988() & 1;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          Swift::String v18 = (void *)swift_allocObject();
          _OWORD v18[2] = v2;
          void v18[3] = a1;
          v18[4] = v17;
          swift_retain();
          swift_retain();
          if (v16)
          {
            NSString v19 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v19 = 0;
          }
          unsigned __int8 v30 = sub_10020C250;
          unint64_t v31 = v18;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v27 = 1107296256;
          uint64_t v28 = sub_10026835C;
          uint64_t v29 = &unk_1005594B0;
          id v20 = _Block_copy(&aBlock);
          id v9 = [self contextualActionWithStyle:v17 title:v19 handler:v20];

          _Block_release(v20);
          swift_release();
          [v9 setBackgroundColor:v14];
          if (v15)
          {
            NSString v21 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v22 = [self systemImageNamed:v21];
          }
          else
          {
            NSString v23 = String._bridgeToObjectiveC()();
            NSString v21 = [self _systemImageNamed:v23];

            if (!v21)
            {
              id v24 = 0;
              goto LABEL_15;
            }
            id v22 = [v21 imageWithRenderingMode:2];
          }
          id v24 = v22;

LABEL_15:
          [v9 setImage:v24];

          return v9;
        }
      }
    }
  }
  return 0;
}

id sub_100200D04(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for InteractionContext();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for PodcastContextActionConfiguration(0);
  uint64_t v15 = swift_dynamicCastClass();
  if (v15)
  {
    *(void *)(v2 + 24) = *(void *)(v15 + qword_1005FADD0);
    swift_retain();
    swift_release();
  }
  if (*v14)
  {
    swift_retain();
    dispatch thunk of ContextActionsConfiguration.context.getter();
    swift_release();
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    char v16 = InteractionContext.Page.isShowPage.getter();
    sub_1001B4BB0((uint64_t)v9);
    if (v16) {
      return 0;
    }
  }
  if (!*(void *)(v2 + 24)) {
    return 0;
  }
  id v17 = [self mainBundle];
  v31._unint64_t object = (void *)0x80000001004D67C0;
  v18._uint64_t countAndFlagsBits = 0x6853206F74206F47;
  v18._unint64_t object = (void *)0xEA0000000000776FLL;
  v19._uint64_t countAndFlagsBits = 0;
  v19._unint64_t object = (void *)0xE000000000000000;
  v31._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v31);

  uint64_t v20 = v29;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v6, enum case for ContextActionType.presentPodcast(_:), v4);
  uint64_t v21 = sub_100268988() & 1;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  id v22 = (void *)swift_allocObject();
  void v22[2] = v2;
  void v22[3] = a1;
  v22[4] = v21;
  swift_retain();
  swift_retain();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10020C308;
  void aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10026835C;
  void aBlock[3] = &unk_100559578;
  id v24 = _Block_copy(aBlock);
  id v25 = [self contextualActionWithStyle:v21 title:v23 handler:v24];

  _Block_release(v24);
  swift_release();
  [v25 setBackgroundColor:0];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [self systemImageNamed:v26];

  [v25 setImage:v27];
  return v25;
}

id sub_1002011A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002042BC(a1);
  id v8 = 0;
  if (sub_100266458())
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContextActionType.playFromTranscript(_:), v4);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100268988() & 1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v2;
    void v10[3] = a1;
    v10[4] = v9;
    swift_retain();
    swift_retain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10020C3C8;
    void aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10026835C;
    void aBlock[3] = &unk_100559618;
    uint64_t v12 = _Block_copy(aBlock);
    id v8 = [self contextualActionWithStyle:v9 title:v11 handler:v12];

    _Block_release(v12);
    swift_release();
    [v8 setBackgroundColor:0];
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [self systemImageNamed:v13];

    [v8 setImage:v14];
  }
  return v8;
}

id sub_100201430(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002043E4(a1);
  if ((sub_1002B1208() & 1) == 0) {
    return 0;
  }
  id v7 = [self systemGrayColor];
  sub_100054BBC(v1 + OBJC_IVAR____TtC8Podcasts36RemoveFromUpNextEpisodeContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
  uint64_t v8 = type metadata accessor for ContextActionType();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = sub_100268988() & 1;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  NSString v13 = (void *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  void v13[4] = v11;
  swift_retain();
  swift_retain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10020C50C;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10026835C;
  void aBlock[3] = &unk_1005596B8;
  uint64_t v15 = _Block_copy(aBlock);
  id v12 = [self contextualActionWithStyle:v11 title:v14 handler:v15];

  _Block_release(v15);
  swift_release();
  [v12 setBackgroundColor:v7];
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [self systemImageNamed:v16];

  [v12 setImage:v17];
  return v12;
}

id sub_100201744(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100203E68(a1);
  if (!sub_1002C18B4()) {
    return 0;
  }
  uint64_t v7 = *(void *)(v1 + 104);
  sub_100054BBC(v1 + OBJC_IVAR____TtC8Podcasts24GoToEpisodeContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
  uint64_t v8 = type metadata accessor for ContextActionType();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = sub_100268988() & 1;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  NSString v13 = (void *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  void v13[4] = v11;
  swift_retain();
  swift_retain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10020C540;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10026835C;
  void aBlock[3] = &unk_100559758;
  uint64_t v15 = _Block_copy(aBlock);
  id v12 = [self contextualActionWithStyle:v11 title:v14 handler:v15];

  _Block_release(v15);
  swift_release();
  [v12 setBackgroundColor:0];
  if (v7)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v17 = [self systemImageNamed:v16];

    [v12 setImage:v17];
  }
  else
  {
    [v12 setImage:0];
  }
  return v12;
}

id sub_100201A4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)(v2 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration);
  swift_beginAccess();
  *uint64_t v7 = a1;
  swift_retain();
  swift_release();
  if (*v7)
  {
    type metadata accessor for CategoryContextActionConfiguration(0);
    if (swift_dynamicCastClass())
    {
      uint64_t v8 = *(void *)(v2 + 32);
      uint64_t v9 = self;
      swift_bridgeObjectRetain();
      id v10 = [v9 mainBundle];
      v27._unint64_t object = (void *)0x80000001004D6810;
      v11._unint64_t object = (void *)0x80000001004D67E0;
      v11._uint64_t countAndFlagsBits = 0xD000000000000029;
      v12._uint64_t countAndFlagsBits = 0;
      v12._unint64_t object = (void *)0xE000000000000000;
      v27._uint64_t countAndFlagsBits = 0x100000000000001DLL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v27);

      sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
      uint64_t v13 = type metadata accessor for ContextActionType();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) == 1)
      {
        sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
        uint64_t v15 = 0;
      }
      else
      {
        uint64_t v15 = sub_100268988() & 1;
        (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
      }
      id v17 = (void *)swift_allocObject();
      void v17[2] = v2;
      v17[3] = a1;
      v17[4] = v15;
      swift_retain();
      swift_retain();
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_10020C618;
      void aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_10026835C;
      void aBlock[3] = &unk_1005597F8;
      Swift::String v19 = _Block_copy(aBlock);
      id v16 = [self contextualActionWithStyle:v15 title:v18 handler:v19];

      _Block_release(v19);
      swift_release();
      [v16 setBackgroundColor:0];
      if (v8)
      {
        NSString v20 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v21 = [self systemImageNamed:v20];
      }
      else
      {
        id v22 = *(id *)(v2 + 32);
        if (!v22) {
          goto LABEL_10;
        }
        swift_bridgeObjectRetain();
        NSString v24 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v20 = [self _systemImageNamed:v24];

        if (!v20)
        {
          id v22 = 0;
          goto LABEL_10;
        }
        id v21 = [v20 imageWithRenderingMode:2];
      }
      id v22 = v21;

LABEL_10:
      [v16 setImage:v22];

      return v16;
    }
  }
  return 0;
}

id sub_100201E7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  swift_retain();
  swift_release();
  sub_1002EA2D4();
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v8 = self;
  swift_bridgeObjectRetain();
  id v9 = [v8 mainBundle];
  v24._uint64_t countAndFlagsBits = 0xD000000000000025;
  v24._unint64_t object = (void *)0x80000001004D6850;
  v10._unint64_t object = (void *)0x80000001004D6830;
  v10._uint64_t countAndFlagsBits = 0xD000000000000010;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v24);

  sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts26ReportConcernContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
  uint64_t v12 = type metadata accessor for ContextActionType();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12) == 1)
  {
    sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = sub_100268988() & 1;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
  }
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v2;
  v15[3] = a1;
  void v15[4] = v14;
  swift_retain();
  swift_retain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10020C74C;
  void aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10026835C;
  void aBlock[3] = &unk_100559898;
  id v17 = _Block_copy(aBlock);
  id v18 = [self contextualActionWithStyle:v14 title:v16 handler:v17];

  _Block_release(v17);
  swift_release();
  [v18 setBackgroundColor:0];
  if (v7)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v20 = [self systemImageNamed:v19];

    [v18 setImage:v20];
  }
  else
  {
    [v18 setImage:0];
  }
  return v18;
}

id sub_100202218(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess();
  *uint64_t v7 = a1;
  swift_retain();
  swift_release();
  sub_1002FD854();
  id v8 = 0;
  if (sub_1002FD9F0())
  {
    uint64_t v9 = *(void *)(v2 + 32);
    Swift::String v10 = self;
    swift_bridgeObjectRetain();
    id v11 = [v10 mainBundle];
    v27._unint64_t object = (void *)0xE800000000000000;
    v12._unint64_t object = (void *)0x80000001004D6890;
    v12._uint64_t countAndFlagsBits = 0xD000000000000015;
    v13._uint64_t countAndFlagsBits = 0;
    v13._unint64_t object = (void *)0xE000000000000000;
    v27._uint64_t countAndFlagsBits = 0x657469726F766146;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v27);

    sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
    uint64_t v14 = type metadata accessor for ContextActionType();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
    {
      sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = sub_100268988() & 1;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
    }
    id v17 = (void *)swift_allocObject();
    void v17[2] = v2;
    v17[3] = a1;
    v17[4] = v16;
    swift_retain();
    swift_retain();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10020C798;
    void aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10026835C;
    void aBlock[3] = &unk_100559A28;
    NSString v19 = _Block_copy(aBlock);
    id v8 = [self contextualActionWithStyle:v16 title:v18 handler:v19];

    _Block_release(v19);
    swift_release();
    [v8 setBackgroundColor:0];
    if (v9)
    {
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v21 = [self systemImageNamed:v20];
    }
    else
    {
      id v22 = *(id *)(v2 + 32);
      if (!v22) {
        goto LABEL_8;
      }
      swift_bridgeObjectRetain();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v20 = [self _systemImageNamed:v24];

      if (!v20)
      {
        id v22 = 0;
        goto LABEL_8;
      }
      id v21 = [v20 imageWithRenderingMode:2];
    }
    id v22 = v21;

LABEL_8:
    [v8 setImage:v22];
  }
  return v8;
}

id sub_100202634(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess();
  *uint64_t v7 = a1;
  swift_retain();
  swift_release();
  sub_100313334();
  id v8 = 0;
  if (sub_100313474())
  {
    uint64_t v9 = *(void *)(v2 + 32);
    Swift::String v10 = self;
    swift_bridgeObjectRetain();
    id v11 = [v10 mainBundle];
    v27._unint64_t object = (void *)0xEC0000007373654CLL;
    v12._unint64_t object = (void *)0x80000001004D68B0;
    v12._uint64_t countAndFlagsBits = 0xD000000000000019;
    v13._uint64_t countAndFlagsBits = 0;
    v13._unint64_t object = (void *)0xE000000000000000;
    v27._uint64_t countAndFlagsBits = 0x2074736567677553;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v27);

    sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
    uint64_t v14 = type metadata accessor for ContextActionType();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
    {
      sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = sub_100268988() & 1;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
    }
    id v17 = (void *)swift_allocObject();
    void v17[2] = v2;
    v17[3] = a1;
    v17[4] = v16;
    swift_retain();
    swift_retain();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10020C84C;
    void aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10026835C;
    void aBlock[3] = &unk_100559AC8;
    NSString v19 = _Block_copy(aBlock);
    id v8 = [self contextualActionWithStyle:v16 title:v18 handler:v19];

    _Block_release(v19);
    swift_release();
    [v8 setBackgroundColor:0];
    if (v9)
    {
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v21 = [self systemImageNamed:v20];
    }
    else
    {
      id v22 = *(id *)(v2 + 32);
      if (!v22) {
        goto LABEL_8;
      }
      swift_bridgeObjectRetain();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v20 = [self _systemImageNamed:v24];

      if (!v20)
      {
        id v22 = 0;
        goto LABEL_8;
      }
      id v21 = [v20 imageWithRenderingMode:2];
    }
    id v22 = v21;

LABEL_8:
    [v8 setImage:v22];
  }
  return v8;
}

id sub_100202A58(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100203F5C(a1);
  id v8 = 0;
  if (sub_10032F414())
  {
    swift_beginAccess();
    if (*(void *)(v2 + 24)
      && (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
    {
      id v9 = [self mainBundle];
      v23._unint64_t object = (void *)0xAE00A680E2747865;
      v10._unint64_t object = (void *)0x80000001004D68D0;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      v11._uint64_t countAndFlagsBits = 0;
      v11._unint64_t object = (void *)0xE000000000000000;
      v23._uint64_t countAndFlagsBits = 0x54207463656C6553;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v23);
    }
    else
    {
      id v9 = [self mainBundle];
      v24._unint64_t object = (void *)0xEF7470697263736ELL;
      v12._uint64_t countAndFlagsBits = 0x4152545F57454956;
      v12._unint64_t object = (void *)0xEF5450495243534ELL;
      v13._uint64_t countAndFlagsBits = 0;
      v13._unint64_t object = (void *)0xE000000000000000;
      v24._uint64_t countAndFlagsBits = 0x6172542077656956;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v9, v13, v24);
    }

    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContextActionType.viewTranscript(_:), v4);
    uint64_t v14 = sub_100268988() & 1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v15 = (void *)swift_allocObject();
    void v15[2] = v2;
    v15[3] = a1;
    void v15[4] = v14;
    swift_retain();
    swift_retain();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10020C900;
    void aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10026835C;
    void aBlock[3] = &unk_100559B68;
    id v17 = _Block_copy(aBlock);
    id v8 = [self contextualActionWithStyle:v14 title:v16 handler:v17];

    _Block_release(v17);
    swift_release();
    [v8 setBackgroundColor:0];
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v19 = [self systemImageNamed:v18];

    [v8 setImage:v19];
  }
  return v8;
}

id sub_100202E64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  swift_beginAccess();
  *uint64_t v7 = a1;
  swift_retain();
  swift_release();
  sub_100364948();
  id v8 = 0;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID + 8) & 1) == 0)
  {
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestState) == 4) {
      return 0;
    }
    uint64_t v9 = InterestState.rawValue.getter();
    uint64_t v11 = v10;
    if (v9 == InterestState.rawValue.getter() && v11 == v12)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v15 = *(void *)(v2 + 32);
    NSString v16 = self;
    swift_bridgeObjectRetain();
    id v17 = [v16 mainBundle];
    v18._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v33._unint64_t object = (void *)0x80000001004D6930;
    v18._unint64_t object = (void *)0x80000001004D6910;
    v19._uint64_t countAndFlagsBits = 0;
    v19._unint64_t object = (void *)0xE000000000000000;
    v33._uint64_t countAndFlagsBits = 0xD000000000000011;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v33);

    sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
    uint64_t v20 = type metadata accessor for ContextActionType();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) == 1)
    {
      sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v22 = sub_100268988() & 1;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v20);
    }
    Swift::String v23 = (void *)swift_allocObject();
    v23[2] = v2;
    void v23[3] = a1;
    v23[4] = v22;
    swift_retain();
    swift_retain();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10020C9C0;
    void aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10026835C;
    void aBlock[3] = &unk_100559C08;
    id v25 = _Block_copy(aBlock);
    id v8 = [self contextualActionWithStyle:v22 title:v24 handler:v25];

    _Block_release(v25);
    swift_release();
    [v8 setBackgroundColor:0];
    if (v15)
    {
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v27 = [self systemImageNamed:v26];
    }
    else
    {
      id v28 = *(id *)(v2 + 32);
      if (!v28) {
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v26 = [self _systemImageNamed:v30];

      if (!v26)
      {
        id v28 = 0;
        goto LABEL_17;
      }
      id v27 = [v26 imageWithRenderingMode:2];
    }
    id v28 = v27;

LABEL_17:
    [v8 setImage:v28];
  }
  return v8;
}

id sub_10020331C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100054B78(&qword_1005F9A58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration);
  swift_beginAccess();
  *uint64_t v7 = a1;
  swift_retain();
  swift_release();
  sub_1003AF6EC();
  id v8 = 0;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_adamID + 8) & 1) == 0)
  {
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_interestState) == 4) {
      return 0;
    }
    if (!*v7
      || (type metadata accessor for PodcastContextActionConfiguration(0), id v8 = 0, !swift_dynamicCastClass()))
    {
      uint64_t v9 = InterestState.rawValue.getter();
      uint64_t v11 = v10;
      if (v9 == InterestState.rawValue.getter() && v11 == v12)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v15 = *(void *)(v2 + 32);
      NSString v16 = self;
      swift_bridgeObjectRetain();
      id v17 = [v16 mainBundle];
      v33._unint64_t object = (void *)0xED0000657469726FLL;
      v18._unint64_t object = (void *)0x80000001004D6950;
      v18._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v19._uint64_t countAndFlagsBits = 0;
      v19._unint64_t object = (void *)0xE000000000000000;
      v33._uint64_t countAndFlagsBits = 0x766146206F646E55;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v33);

      sub_100054BBC(v2 + OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_contextActionType, (uint64_t)v6, &qword_1005F9A58);
      uint64_t v20 = type metadata accessor for ContextActionType();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) == 1)
      {
        sub_100054B1C((uint64_t)v6, &qword_1005F9A58);
        uint64_t v22 = 0;
      }
      else
      {
        uint64_t v22 = sub_100268988() & 1;
        (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v20);
      }
      Swift::String v23 = (void *)swift_allocObject();
      v23[2] = v2;
      void v23[3] = a1;
      v23[4] = v22;
      swift_retain();
      swift_retain();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_10020CA74;
      void aBlock[5] = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_10026835C;
      void aBlock[3] = &unk_100559CA8;
      id v25 = _Block_copy(aBlock);
      id v8 = [self contextualActionWithStyle:v22 title:v24 handler:v25];

      _Block_release(v25);
      swift_release();
      [v8 setBackgroundColor:0];
      if (v15)
      {
        NSString v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v27 = [self systemImageNamed:v26];
      }
      else
      {
        id v28 = *(id *)(v2 + 32);
        if (!v28) {
          goto LABEL_19;
        }
        swift_bridgeObjectRetain();
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v26 = [self _systemImageNamed:v30];

        if (!v26)
        {
          id v28 = 0;
          goto LABEL_19;
        }
        id v27 = [v26 imageWithRenderingMode:2];
      }
      id v28 = v27;

LABEL_19:
      [v8 setImage:v28];
    }
  }
  return v8;
}

id sub_100203800(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for PodcastContextActionConfiguration(0);
  uint64_t v8 = swift_dynamicCastClass();
  if (v8)
  {
    *(void *)(v1 + 16) = *(void *)(v8 + qword_1005FADD0);
    swift_retain();
    swift_release();
  }
  if ((sub_1003FF50C() & 1) == 0) {
    return 0;
  }
  id v9 = [self mainBundle];
  v22._unint64_t object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0x73676E6974746553;
  v10._unint64_t object = (void *)0xE800000000000000;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v22);

  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContextActionType.settings(_:), v4);
  uint64_t v12 = sub_100268988() & 1;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  Swift::String v13 = (void *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  void v13[4] = v12;
  swift_retain();
  swift_retain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10020CB28;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10026835C;
  void aBlock[3] = &unk_100559D48;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = [self contextualActionWithStyle:v12 title:v14 handler:v15];

  _Block_release(v15);
  swift_release();
  [v16 setBackgroundColor:0];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [self systemImageNamed:v17];

  [v16 setImage:v18];
  return v16;
}

id sub_100203B54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContextActionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002041C8(a1);
  id v8 = 0;
  if (sub_10041CFD8())
  {
    id v9 = [self mainBundle];
    v20._unint64_t object = (void *)0x80000001004D6970;
    v10._uint64_t countAndFlagsBits = 0x6853206F74206F47;
    v10._unint64_t object = (void *)0xEA0000000000776FLL;
    v11._uint64_t countAndFlagsBits = 0;
    v11._unint64_t object = (void *)0xE000000000000000;
    v20._uint64_t countAndFlagsBits = 0xD000000000000021;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v20);

    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContextActionType.episodeGoToShow(_:), v4);
    uint64_t v12 = sub_100268988() & 1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    Swift::String v13 = (void *)swift_allocObject();
    v13[2] = v2;
    v13[3] = a1;
    void v13[4] = v12;
    swift_retain();
    swift_retain();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10020CC00;
    void aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10026835C;
    void aBlock[3] = &unk_100559DE8;
    uint64_t v15 = _Block_copy(aBlock);
    id v8 = [self contextualActionWithStyle:v12 title:v14 handler:v15];

    _Block_release(v15);
    swift_release();
    [v8 setBackgroundColor:0];
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [self systemImageNamed:v16];

    [v8 setImage:v17];
  }
  return v8;
}

uint64_t sub_100203E68(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for NowPlayingContextActionConfiguration();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    *(void *)(v1 + 56) = sub_10020F810();
    swift_release();
  }
  else
  {
    type metadata accessor for EpisodeContextActionConfiguration(0);
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      uint64_t v4 = &qword_1005FAD08;
    }
    else
    {
      type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        return result;
      }
      uint64_t v4 = &qword_1005FAD60;
    }
    *(void *)(v1 + 56) = *(void *)(result + *v4);
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_100203F5C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for NowPlayingContextActionConfiguration();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    *(void *)(v1 + 16) = sub_10020F810();
    swift_release();
  }
  else
  {
    type metadata accessor for EpisodeContextActionConfiguration(0);
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = &qword_1005FAD08;
    }
    else
    {
      type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
      uint64_t v3 = swift_dynamicCastClass();
      if (!v3) {
        goto LABEL_9;
      }
      uint64_t v4 = &qword_1005FAD60;
    }
    *(void *)(v1 + 16) = *(void *)(v3 + *v4);
    swift_retain();
  }
  swift_release();
LABEL_9:
  uint64_t result = static Podcasts.areTranscriptsSupportedOnPlatform.getter();
  if (result)
  {
    uint64_t v6 = swift_retain();
    sub_10032F66C(v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_100204074(uint64_t a1)
{
  swift_beginAccess();
  v1[11] = a1;
  swift_retain();
  swift_release();
  type metadata accessor for NowPlayingContextActionConfiguration();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    v1[2] = sub_10020F810();
    swift_release();
LABEL_8:
    swift_release();
    goto LABEL_9;
  }
  type metadata accessor for EpisodeContextActionConfiguration(0);
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = &qword_1005FAD08;
LABEL_7:
    v1[2] = *(void *)(v3 + *v4);
    swift_retain();
    goto LABEL_8;
  }
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = &qword_1005FAD60;
    goto LABEL_7;
  }
LABEL_9:
  sub_100056D54((uint64_t)(v1 + 4), (uint64_t)&v6);
  type metadata accessor for EpisodeDeletionActionProvider();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v1[10] = EpisodeDeletionActionProvider.init(asPartOf:episodeDownloadStateController:libraryActionController:)();
  return swift_release();
}

uint64_t sub_1002041C8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for NowPlayingContextActionConfiguration();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    *(void *)(v1 + 16) = sub_10020F810();
    swift_release();
  }
  else
  {
    type metadata accessor for EpisodeContextActionConfiguration(0);
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      uint64_t v4 = &qword_1005FAD08;
    }
    else
    {
      type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        return result;
      }
      uint64_t v4 = &qword_1005FAD60;
    }
    *(void *)(v1 + 16) = *(void *)(result + *v4);
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_1002042BC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 4sub_1001DA808(0, 0) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for NowPlayingContextActionConfiguration();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    *(void *)(v1 + 16) = sub_10020F810();
    swift_release();
  }
  else
  {
    type metadata accessor for EpisodeContextActionConfiguration(0);
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      uint64_t v4 = &qword_1005FAD08;
    }
    else
    {
      type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        goto LABEL_9;
      }
      uint64_t v4 = &qword_1005FAD60;
    }
    *(void *)(v1 + 16) = *(void *)(result + *v4);
    swift_retain();
  }
  uint64_t result = swift_release();
LABEL_9:
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    swift_retain();
    if (sub_100401A34())
    {
      sub_100269F4C(v5);
      sub_10026A98C();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1002043E4(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for NowPlayingContextActionConfiguration();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    *(void *)(v1 + 24) = sub_10020F810();
    swift_release();
  }
  else
  {
    type metadata accessor for EpisodeContextActionConfiguration(0);
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      uint64_t v4 = &qword_1005FAD08;
    }
    else
    {
      type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        return result;
      }
      uint64_t v4 = &qword_1005FAD60;
    }
    *(void *)(v1 + 24) = *(void *)(result + *v4);
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_1002044D8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  swift_retain();
  swift_release();
  type metadata accessor for NowPlayingContextActionConfiguration();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    *(void *)(v1 + 16) = sub_10020F810();
    swift_release();
LABEL_8:
    swift_release();
    return sub_1003B15C0();
  }
  type metadata accessor for EpisodeContextActionConfiguration(0);
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = &qword_1005FAD08;
LABEL_7:
    *(void *)(v1 + 16) = *(void *)(v3 + *v4);
    swift_retain();
    goto LABEL_8;
  }
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = &qword_1005FAD60;
    goto LABEL_7;
  }
  return sub_1003B15C0();
}

uint64_t sub_1002045D4()
{
  sub_100056D54(v0 + 32, (uint64_t)v2);
  type metadata accessor for EpisodeDeletionActionProvider();
  swift_allocObject();
  swift_retain();
  swift_retain();
  *(void *)(v0 + 8sub_1001DA808(0, 0) = EpisodeDeletionActionProvider.init(asPartOf:episodeDownloadStateController:libraryActionController:)();
  return swift_release();
}

BOOL sub_100204664()
{
  uint64_t v1 = *(void *)(v0 + 16);
  BOOL result = 0;
  if (v1)
  {
    if (!*(unsigned char *)(v1 + 32))
    {
      uint64_t v3 = swift_bridgeObjectRetain();
      if (v3)
      {
        uint64_t v4 = *(void *)(v3 + 16);
        swift_bridgeObjectRelease();
        if (v4) {
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1002046B4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    BOOL v2 = *(unsigned char *)(v1 + 32) || *(void *)(v1 + 24) == 0;
    if (!v2 && *(void *)(v0 + 80))
    {
      sub_1001DCD9C(*(void *)(v1 + 16), *(void *)(v1 + 24), 0);
      swift_retain();
      dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodesFromStations(episodeUuids:stationUuids:)();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100204758()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 32);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoveFromStationContextAction()
{
  return self;
}

uint64_t sub_1002047DC()
{
  id v0 = [self mainBundle];
  v5._unint64_t object = (void *)0xE000000000000000;
  v1._unint64_t object = (void *)0x80000001004D6720;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._unint64_t object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10020487C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for MetricsLabel.removeFromStation(_:);
  uint64_t v3 = type metadata accessor for MetricsLabel();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1002048F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.removeFromStation(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

double sub_1002049D4@<D0>(uint64_t a1@<X8>)
{
  sub_10020C158((uint64_t)v5);
  uint64_t v2 = v6;
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_100204A18()
{
  return swift_retain();
}

uint64_t sub_100204A50(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_release();
}

uint64_t (*sub_100204A98())()
{
  return j__swift_endAccess;
}

uint64_t sub_100204AF8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10020CCD0(&qword_1005FAAA8, a2, (void (*)(uint64_t))type metadata accessor for RemoveFromStationContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100204B50(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10020CCD0(&qword_1005FAAB0, a2, (void (*)(uint64_t))type metadata accessor for RemoveFromStationContextAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100204BA8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100204E78(a2);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    BOOL v5 = *(unsigned char *)(v4 + 32) || *(void *)(v4 + 24) == 0;
    if (!v5 && *(void *)(a1 + 80))
    {
      sub_1001DCD9C(*(void *)(v4 + 16), *(void *)(v4 + 24), 0);
      swift_retain();
      dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodesFromStations(episodeUuids:stationUuids:)();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100204C58(void *a1, uint64_t a2)
{
  uint64_t result = sub_100206C1C(a2);
  uint64_t v4 = a1[3];
  if (v4 && !*(unsigned char *)(v4 + 32))
  {
    uint64_t v6 = *(void *)(v4 + 16);
    uint64_t v5 = *(void *)(v4 + 24);
    swift_retain();
    sub_1001DCD9C(v6, v5, 0);
    swift_bridgeObjectRelease();
    sub_100041A98(a1 + 4, a1[7]);
    dispatch thunk of LibraryActionControllerProtocol.removeFromUpNext(uuids:)();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100204D18(uint64_t a1)
{
  sub_10020AEA8();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1002E9E24();
  id v3 = [self sharedInstance];
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v4;
  void v5[3] = sub_1002875F8;
  v5[4] = 0;
  aBlock[4] = sub_10020CD98;
  void aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10026924C;
  void aBlock[3] = &unk_1005599D8;
  uint64_t v6 = _Block_copy(aBlock);
  swift_retain_n();
  swift_release();
  [v3 reportAConcernURLWithCompletion:v6];
  _Block_release(v6);

  return swift_release();
}

uint64_t sub_100204E78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v61 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v60 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for PresentationSource.Position();
  uint64_t v65 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v58 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v64 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OSLogger();
  uint64_t v69 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ContextMetricsActionContext();
  uint64_t v66 = *(void *)(v10 - 8);
  uint64_t v67 = v10;
  __chkstk_darwin(v10);
  uint64_t v62 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MetricsLabel();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v63 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  Swift::String v20 = (char *)&v50 - v19;
  uint64_t result = sub_100209C10();
  if (!v24) {
    return result;
  }
  uint64_t v54 = v22;
  uint64_t v55 = result;
  uint64_t v68 = v23;
  uint64_t v53 = v2;
  uint64_t v57 = a1;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t v25 = type metadata accessor for PresentationSource();
  uint64_t v26 = *(void *)(v25 - 8);
  id v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  uint64_t v70 = v25;
  uint64_t v56 = v27;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v27)(v20, 1);
  if (result == 1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v28 = PresentationSource.viewController.getter();
  if (!v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v70);
LABEL_14:
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.init(stringLiteral:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v9, v7);
  }
  uint64_t v29 = (void *)v28;
  BOOL v51 = *(void (**)(char *, uint64_t))(v26 + 8);
  v51(v20, v70);
  uint64_t v30 = UIResponder.nearestActionRunner.getter();
  uint64_t v52 = v31;

  if (!v30)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v69 = v30;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for MetricsLabel.removeFromStation(_:), v12);
  MetricsLabel.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  if (swift_dynamicCastClass()
    || (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
  {
    static MetricsTargetType.transcriptText.getter();
  }
  else
  {
    static MetricsTargetType.button.getter();
  }
  uint64_t v32 = v62;
  uint64_t v33 = swift_dynamicCastClass();
  uint64_t v34 = (unsigned int *)&enum case for ContextMetricsActionContext.contextual(_:);
  if (v33) {
    uint64_t v34 = (unsigned int *)&enum case for ContextMetricsActionContext.selectionMenu(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v32, *v34, v67);
  uint64_t v35 = type metadata accessor for ContextMetricsAction();
  swift_allocObject();
  uint64_t v68 = ContextMetricsAction.init(title:targetId:podcastStoreId:targetType:actionContext:)();
  type metadata accessor for ActionRunnerOptions();
  ContextActionsConfiguration.objectGraph.getter();
  BaseObjectGraph.__allocating_init(_:)();
  dispatch thunk of ContextActionsConfiguration.previewModel.getter();
  uint64_t v36 = v73;
  if (v73)
  {
    uint64_t v37 = sub_100041A98(v72, v73);
    *((void *)&v76 + 1) = v36;
    BOOL v38 = sub_10004A244((uint64_t *)&v75);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v38, v37, v36);
    sub_10004D2D8((uint64_t)v72);
  }
  else
  {
    sub_100054B1C((uint64_t)v72, (uint64_t *)&unk_100600590);
    long long v75 = 0u;
    long long v76 = 0u;
  }
  uint64_t v40 = (uint64_t)v64;
  uint64_t v39 = v65;
  uint64_t v41 = v63;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t result = v56(v41, 1, v70);
  if (result == 1) {
    goto LABEL_24;
  }
  PresentationSource.position.getter();
  uint64_t v42 = v59;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v59))
  {
    sub_100054B1C(v40, &qword_1005FAAB8);
    v51(v41, v70);
    unint64_t v43 = 0;
  }
  else
  {
    uint64_t v44 = v41;
    uint64_t v45 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v58, v40, v42);
    sub_100054B1C(v40, &qword_1005FAAB8);
    v51(v44, v70);
    unint64_t v43 = (void *)PresentationSource.Position.view.getter();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v42);
  }
  sub_100054BBC((uint64_t)&v75, (uint64_t)v71, &qword_1005F5D30);
  id v46 = v43;
  ActionOrigin.init(sender:view:)();
  ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v72, (uint64_t *)&unk_100600670);

  swift_release();
  sub_100054B1C((uint64_t)&v75, &qword_1005F5D30);
  swift_getObjectType();
  uint64_t v73 = v35;
  uint64_t v74 = sub_10020CCD0(&qword_1005FAAC0, 255, (void (*)(uint64_t))&type metadata accessor for ContextMetricsAction);
  v72[0] = v68;
  uint64_t v47 = v61;
  uint64_t v48 = v60;
  uint64_t v49 = v53;
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v60, enum case for ActionMetricsBehavior.fromAction(_:), v53);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  return sub_10004D2D8((uint64_t)v72);
}

uint64_t sub_100205888()
{
  uint64_t v0 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v62 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for PresentationSource.Position();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v4 - 8);
  uint64_t v59 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSLogger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ContextMetricsActionContext();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  __chkstk_darwin(v10);
  uint64_t v63 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v64 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v49 - v15;
  uint64_t result = sub_100209FC8();
  if (!v20) {
    return result;
  }
  uint64_t v53 = v18;
  uint64_t v54 = result;
  uint64_t v67 = v19;
  uint64_t v57 = v7;
  uint64_t v51 = v1;
  uint64_t v52 = v0;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t v21 = type metadata accessor for PresentationSource();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t result = v55(v16, 1, v21);
  if (result == 1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v23 = PresentationSource.viewController.getter();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v21);
LABEL_14:
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.init(stringLiteral:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v9, v6);
  }
  uint64_t v24 = (void *)v23;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v56 = v21;
  uint64_t v50 = v25;
  v25(v16, v21);
  uint64_t v26 = UIResponder.nearestActionRunner.getter();
  uint64_t v28 = v27;

  if (!v26)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v57 = v28;
  uint64_t v49 = v26;
  MetricsLabel.rawValue.getter();
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  if (swift_dynamicCastClass()
    || (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
  {
    static MetricsTargetType.transcriptText.getter();
  }
  else
  {
    static MetricsTargetType.button.getter();
  }
  uint64_t v29 = v63;
  uint64_t v30 = swift_dynamicCastClass();
  uint64_t v31 = (unsigned int *)&enum case for ContextMetricsActionContext.contextual(_:);
  if (v30) {
    uint64_t v31 = (unsigned int *)&enum case for ContextMetricsActionContext.selectionMenu(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v29, *v31, v66);
  uint64_t v32 = type metadata accessor for ContextMetricsAction();
  swift_allocObject();
  uint64_t v67 = ContextMetricsAction.init(title:targetId:podcastStoreId:targetType:actionContext:)();
  type metadata accessor for ActionRunnerOptions();
  ContextActionsConfiguration.objectGraph.getter();
  BaseObjectGraph.__allocating_init(_:)();
  dispatch thunk of ContextActionsConfiguration.previewModel.getter();
  uint64_t v33 = v70;
  if (v70)
  {
    uint64_t v34 = sub_100041A98(v69, v70);
    *((void *)&v73 + 1) = v33;
    uint64_t v35 = sub_10004A244((uint64_t *)&v72);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v35, v34, v33);
    sub_10004D2D8((uint64_t)v69);
  }
  else
  {
    sub_100054B1C((uint64_t)v69, (uint64_t *)&unk_100600590);
    long long v72 = 0u;
    long long v73 = 0u;
  }
  uint64_t v36 = v64;
  uint64_t v37 = v55;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t result = v37(v36, 1, v56);
  if (result == 1) {
    goto LABEL_24;
  }
  uint64_t v38 = (uint64_t)v59;
  PresentationSource.position.getter();
  uint64_t v39 = v60;
  uint64_t v40 = v61;
  int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v38, 1, v61);
  uint64_t v42 = v51;
  if (v41)
  {
    sub_100054B1C(v38, &qword_1005FAAB8);
    v50(v36, v56);
    unint64_t v43 = 0;
  }
  else
  {
    uint64_t v44 = v36;
    uint64_t v45 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v58, v38, v40);
    sub_100054B1C(v38, &qword_1005FAAB8);
    v50(v44, v56);
    unint64_t v43 = (void *)PresentationSource.Position.view.getter();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v40);
  }
  sub_100054BBC((uint64_t)&v72, (uint64_t)v68, &qword_1005F5D30);
  id v46 = v43;
  ActionOrigin.init(sender:view:)();
  ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v69, (uint64_t *)&unk_100600670);

  swift_release();
  sub_100054B1C((uint64_t)&v72, &qword_1005F5D30);
  swift_getObjectType();
  uint64_t v70 = v32;
  uint64_t v71 = sub_10020CCD0(&qword_1005FAAC0, 255, (void (*)(uint64_t))&type metadata accessor for ContextMetricsAction);
  v69[0] = v67;
  uint64_t v47 = v62;
  uint64_t v48 = v52;
  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v62, enum case for ActionMetricsBehavior.fromAction(_:), v52);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v48);
  return sub_10004D2D8((uint64_t)v69);
}

uint64_t sub_10020620C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v66 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v65 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for PresentationSource.Position();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v61 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v62 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ContextMetricsActionContext();
  uint64_t v69 = *(void *)(v7 - 8);
  uint64_t v70 = v7;
  __chkstk_darwin(v7);
  uint64_t v67 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MetricsLabel();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for OSLogger();
  uint64_t v72 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v68 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v53 - v19;
  uint64_t result = sub_10020A380();
  if (!v24) {
    return result;
  }
  uint64_t v57 = v22;
  uint64_t v58 = result;
  uint64_t v71 = v23;
  uint64_t v56 = v2;
  uint64_t v60 = a1;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t v25 = type metadata accessor for PresentationSource();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  uint64_t v73 = v25;
  uint64_t v59 = v27;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v27)(v20, 1);
  if (result == 1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v28 = PresentationSource.viewController.getter();
  if (!v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v73);
LABEL_14:
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.init(stringLiteral:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v15, v13);
  }
  uint64_t v29 = (void *)v28;
  uint64_t v54 = *(void (**)(char *, uint64_t))(v26 + 8);
  v54(v20, v73);
  uint64_t v30 = UIResponder.nearestActionRunner.getter();
  uint64_t v55 = v31;

  if (!v30)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v72 = v30;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for MetricsLabel.play(_:), v9);
  MetricsLabel.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  if (swift_dynamicCastClass()
    || (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
  {
    static MetricsTargetType.transcriptText.getter();
  }
  else
  {
    static MetricsTargetType.button.getter();
  }
  uint64_t v32 = v67;
  uint64_t v33 = swift_dynamicCastClass();
  uint64_t v34 = (unsigned int *)&enum case for ContextMetricsActionContext.contextual(_:);
  if (v33) {
    uint64_t v34 = (unsigned int *)&enum case for ContextMetricsActionContext.selectionMenu(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v32, *v34, v70);
  uint64_t v35 = type metadata accessor for ContextMetricsAction();
  swift_allocObject();
  uint64_t v36 = ContextMetricsAction.init(title:targetId:podcastStoreId:targetType:actionContext:)();
  type metadata accessor for ActionRunnerOptions();
  ContextActionsConfiguration.objectGraph.getter();
  BaseObjectGraph.__allocating_init(_:)();
  dispatch thunk of ContextActionsConfiguration.previewModel.getter();
  uint64_t v37 = v76;
  if (v76)
  {
    uint64_t v38 = sub_100041A98(v75, v76);
    *((void *)&v79 + 1) = v37;
    uint64_t v39 = sub_10004A244((uint64_t *)&v78);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v39, v38, v37);
    sub_10004D2D8((uint64_t)v75);
  }
  else
  {
    sub_100054B1C((uint64_t)v75, (uint64_t *)&unk_100600590);
    long long v78 = 0u;
    long long v79 = 0u;
  }
  uint64_t v40 = v68;
  int v41 = v59;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t result = v41(v40, 1, v73);
  if (result == 1) {
    goto LABEL_24;
  }
  uint64_t v42 = (uint64_t)v62;
  PresentationSource.position.getter();
  uint64_t v43 = v63;
  uint64_t v44 = v64;
  int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v42, 1, v64);
  uint64_t v46 = v66;
  if (v45)
  {
    sub_100054B1C(v42, &qword_1005FAAB8);
    v54(v40, v73);
    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v48 = v40;
    uint64_t v49 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v61, v42, v44);
    sub_100054B1C(v42, &qword_1005FAAB8);
    v54(v48, v73);
    uint64_t v47 = (void *)PresentationSource.Position.view.getter();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v49, v44);
  }
  sub_100054BBC((uint64_t)&v78, (uint64_t)v74, &qword_1005F5D30);
  id v50 = v47;
  ActionOrigin.init(sender:view:)();
  ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v75, (uint64_t *)&unk_100600670);

  swift_release();
  sub_100054B1C((uint64_t)&v78, &qword_1005F5D30);
  swift_getObjectType();
  uint64_t v76 = v35;
  uint64_t v77 = sub_10020CCD0(&qword_1005FAAC0, 255, (void (*)(uint64_t))&type metadata accessor for ContextMetricsAction);
  v75[0] = v36;
  uint64_t v51 = v65;
  uint64_t v52 = v56;
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v65, enum case for ActionMetricsBehavior.fromAction(_:), v56);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v52);
  return sub_10004D2D8((uint64_t)v75);
}

uint64_t sub_100206C1C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v71 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v70 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for PresentationSource.Position();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v66 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v6 - 8);
  uint64_t v67 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextMetricsActionContext();
  uint64_t v74 = *(void *)(v8 - 8);
  uint64_t v75 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MetricsLabel();
  uint64_t v73 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OSLogger();
  uint64_t v78 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v72 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v56 - v20;
  uint64_t v22 = v1;
  uint64_t result = sub_10020A738();
  if (!v24) {
    return result;
  }
  uint64_t v60 = v25;
  uint64_t v61 = result;
  uint64_t v76 = v26;
  uint64_t v77 = v24;
  uint64_t v63 = v10;
  uint64_t v59 = v3;
  uint64_t v64 = a1;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t v27 = type metadata accessor for PresentationSource();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  uint64_t result = v62(v21, 1, v27);
  if (result == 1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v29 = PresentationSource.viewController.getter();
  if (!v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v27);
LABEL_14:
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.init(stringLiteral:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v16, v14);
  }
  uint64_t v30 = (void *)v29;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v65 = v27;
  uint64_t v58 = v28 + 8;
  uint64_t v57 = v31;
  v31(v21, v27);
  uint64_t v32 = UIResponder.nearestActionRunner.getter();
  uint64_t v34 = v33;

  if (!v32)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v78 = v34;
  uint64_t v35 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v13, v22 + OBJC_IVAR____TtC8Podcasts36RemoveFromUpNextEpisodeContextAction_metricsLabel, v11);
  MetricsLabel.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  if (swift_dynamicCastClass()
    || (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
  {
    static MetricsTargetType.transcriptText.getter();
  }
  else
  {
    static MetricsTargetType.button.getter();
  }
  uint64_t v36 = swift_dynamicCastClass();
  uint64_t v37 = (unsigned int *)&enum case for ContextMetricsActionContext.contextual(_:);
  if (v36) {
    uint64_t v37 = (unsigned int *)&enum case for ContextMetricsActionContext.selectionMenu(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v63, *v37, v75);
  uint64_t v38 = type metadata accessor for ContextMetricsAction();
  swift_allocObject();
  uint64_t v39 = ContextMetricsAction.init(title:targetId:podcastStoreId:targetType:actionContext:)();
  type metadata accessor for ActionRunnerOptions();
  ContextActionsConfiguration.objectGraph.getter();
  BaseObjectGraph.__allocating_init(_:)();
  dispatch thunk of ContextActionsConfiguration.previewModel.getter();
  uint64_t v40 = v81;
  if (v81)
  {
    int v41 = sub_100041A98(v80, v81);
    *((void *)&v84 + 1) = v40;
    uint64_t v42 = sub_10004A244((uint64_t *)&v83);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v42, v41, v40);
    sub_10004D2D8((uint64_t)v80);
  }
  else
  {
    sub_100054B1C((uint64_t)v80, (uint64_t *)&unk_100600590);
    long long v83 = 0u;
    long long v84 = 0u;
  }
  uint64_t v43 = v72;
  uint64_t v44 = v62;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t result = v44(v43, 1, v65);
  if (result == 1) {
    goto LABEL_24;
  }
  uint64_t v45 = (uint64_t)v67;
  PresentationSource.position.getter();
  uint64_t v46 = v68;
  uint64_t v47 = v69;
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v45, 1, v69);
  uint64_t v49 = v59;
  if (v48)
  {
    sub_100054B1C(v45, &qword_1005FAAB8);
    v57(v43, v65);
    id v50 = 0;
  }
  else
  {
    uint64_t v51 = v43;
    uint64_t v52 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v66, v45, v47);
    sub_100054B1C(v45, &qword_1005FAAB8);
    v57(v51, v65);
    id v50 = (void *)PresentationSource.Position.view.getter();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v52, v47);
  }
  sub_100054BBC((uint64_t)&v83, (uint64_t)v79, &qword_1005F5D30);
  id v53 = v50;
  ActionOrigin.init(sender:view:)();
  ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v80, (uint64_t *)&unk_100600670);

  swift_release();
  sub_100054B1C((uint64_t)&v83, &qword_1005F5D30);
  swift_getObjectType();
  uint64_t v81 = v38;
  uint64_t v82 = sub_10020CCD0(&qword_1005FAAC0, 255, (void (*)(uint64_t))&type metadata accessor for ContextMetricsAction);
  v80[0] = v39;
  uint64_t v54 = v71;
  uint64_t v55 = v70;
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, enum case for ActionMetricsBehavior.fromAction(_:), v49);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v49);
  return sub_10004D2D8((uint64_t)v80);
}

uint64_t sub_100207664(uint64_t a1)
{
  uint64_t v68 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v66 = (char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for PresentationSource.Position();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v60 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v63 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ContextMetricsActionContext();
  uint64_t v69 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MetricsLabel();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OSLogger();
  uint64_t v70 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v62 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v54 - v20;
  uint64_t v72 = a1;
  uint64_t result = sub_10020B62C();
  if (!v25) {
    return result;
  }
  uint64_t v58 = v23;
  uint64_t v59 = result;
  uint64_t v71 = v24;
  swift_beginAccess();
  if (*(void *)(v1 + 24))
  {
    type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
    if (swift_dynamicCastClass())
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v57 = v7;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t v26 = type metadata accessor for PresentationSource();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v61 = v26;
  uint64_t v56 = v27 + 48;
  uint64_t v55 = v28;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, 1);
  if (result == 1)
  {
    __break(1u);
LABEL_27:
    __break(1u);
    return result;
  }
  uint64_t v29 = PresentationSource.viewController.getter();
  if (!v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v61);
LABEL_17:
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.init(stringLiteral:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v16, v14);
  }
  uint64_t v30 = (void *)v29;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v27 + 8);
  v54[1] = v27 + 8;
  v54[0] = v31;
  v31(v21, v61);
  uint64_t v32 = UIResponder.nearestActionRunner.getter();
  _OWORD v54[2] = v33;

  if (!v32)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v70 = v32;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for MetricsLabel.viewTranscript(_:), v10);
  MetricsLabel.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  if (swift_dynamicCastClass()
    || (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
  {
    static MetricsTargetType.transcriptText.getter();
  }
  else
  {
    static MetricsTargetType.button.getter();
  }
  uint64_t v34 = v57;
  uint64_t v35 = v69;
  uint64_t v36 = swift_dynamicCastClass();
  uint64_t v37 = (unsigned int *)&enum case for ContextMetricsActionContext.contextual(_:);
  if (v36) {
    uint64_t v37 = (unsigned int *)&enum case for ContextMetricsActionContext.selectionMenu(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v9, *v37, v34);
  uint64_t v38 = type metadata accessor for ContextMetricsAction();
  swift_allocObject();
  uint64_t v39 = ContextMetricsAction.init(title:targetId:podcastStoreId:targetType:actionContext:)();
  type metadata accessor for ActionRunnerOptions();
  ContextActionsConfiguration.objectGraph.getter();
  BaseObjectGraph.__allocating_init(_:)();
  dispatch thunk of ContextActionsConfiguration.previewModel.getter();
  uint64_t v40 = v75;
  if (v75)
  {
    int v41 = sub_100041A98(v74, v75);
    *((void *)&v78 + 1) = v40;
    uint64_t v42 = sub_10004A244((uint64_t *)&v77);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v42, v41, v40);
    sub_10004D2D8((uint64_t)v74);
  }
  else
  {
    sub_100054B1C((uint64_t)v74, (uint64_t *)&unk_100600590);
    long long v77 = 0u;
    long long v78 = 0u;
  }
  uint64_t v43 = v65;
  uint64_t v44 = v64;
  uint64_t v45 = (uint64_t)v63;
  uint64_t v46 = v62;
  uint64_t v47 = v55;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t result = v47(v46, 1, v61);
  if (result == 1) {
    goto LABEL_27;
  }
  PresentationSource.position.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v43))
  {
    sub_100054B1C(v45, &qword_1005FAAB8);
    ((void (*)(char *, uint64_t))v54[0])(v46, v61);
    int v48 = 0;
  }
  else
  {
    uint64_t v49 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v60, v45, v43);
    sub_100054B1C(v45, &qword_1005FAAB8);
    ((void (*)(char *, uint64_t))v54[0])(v46, v61);
    int v48 = (void *)PresentationSource.Position.view.getter();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v43);
  }
  sub_100054BBC((uint64_t)&v77, (uint64_t)v73, &qword_1005F5D30);
  id v50 = v48;
  ActionOrigin.init(sender:view:)();
  ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v74, (uint64_t *)&unk_100600670);

  swift_release();
  sub_100054B1C((uint64_t)&v77, &qword_1005F5D30);
  swift_getObjectType();
  uint64_t v75 = v38;
  uint64_t v76 = sub_10020CCD0(&qword_1005FAAC0, 255, (void (*)(uint64_t))&type metadata accessor for ContextMetricsAction);
  v74[0] = v39;
  uint64_t v51 = v67;
  uint64_t v52 = v66;
  uint64_t v53 = v68;
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, enum case for ActionMetricsBehavior.fromAction(_:), v68);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
  return sub_10004D2D8((uint64_t)v74);
}

uint64_t sub_1002080FC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v73 = a3;
  uint64_t v6 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v68 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v67 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for PresentationSource.Position();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v65 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v9 - 8);
  uint64_t v69 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContextMetricsActionContext();
  uint64_t v74 = *(void *)(v11 - 8);
  uint64_t v75 = v11;
  __chkstk_darwin(v11);
  uint64_t v76 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MetricsLabel();
  uint64_t v72 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OSLogger();
  uint64_t v79 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  long long v77 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v58 - v22;
  uint64_t v24 = v3;
  uint64_t result = sub_10020B260(a1, a2);
  if (!v28) {
    return result;
  }
  uint64_t v62 = v26;
  uint64_t v63 = result;
  uint64_t v78 = v27;
  uint64_t v61 = v6;
  uint64_t v66 = a1;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t v29 = type metadata accessor for PresentationSource();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  uint64_t v80 = v29;
  uint64_t v64 = v31;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v23, 1);
  if (result == 1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v32 = PresentationSource.viewController.getter();
  if (!v32)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v80);
LABEL_14:
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.init(stringLiteral:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v18, v16);
  }
  uint64_t v33 = (void *)v32;
  uint64_t v59 = *(void (**)(char *, uint64_t))(v30 + 8);
  v59(v23, v80);
  uint64_t v34 = UIResponder.nearestActionRunner.getter();
  uint64_t v60 = v35;

  if (!v34)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v36 = v24 + *v73;
  uint64_t v37 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v15, v36, v13);
  uint64_t v79 = MetricsLabel.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v13);
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  uint64_t v38 = swift_dynamicCastClass();
  uint64_t v58 = v34;
  if (v38
    || (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
  {
    static MetricsTargetType.transcriptText.getter();
  }
  else
  {
    static MetricsTargetType.button.getter();
  }
  uint64_t v39 = (uint64_t)v69;
  uint64_t v40 = swift_dynamicCastClass();
  int v41 = (unsigned int *)&enum case for ContextMetricsActionContext.contextual(_:);
  if (v40) {
    int v41 = (unsigned int *)&enum case for ContextMetricsActionContext.selectionMenu(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v76, *v41, v75);
  uint64_t v42 = type metadata accessor for ContextMetricsAction();
  swift_allocObject();
  uint64_t v43 = ContextMetricsAction.init(title:targetId:podcastStoreId:targetType:actionContext:)();
  type metadata accessor for ActionRunnerOptions();
  ContextActionsConfiguration.objectGraph.getter();
  BaseObjectGraph.__allocating_init(_:)();
  dispatch thunk of ContextActionsConfiguration.previewModel.getter();
  uint64_t v44 = v83;
  if (v83)
  {
    uint64_t v45 = sub_100041A98(v82, v83);
    *((void *)&v86 + 1) = v44;
    uint64_t v46 = sub_10004A244((uint64_t *)&v85);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v46, v45, v44);
    sub_10004D2D8((uint64_t)v82);
  }
  else
  {
    sub_100054B1C((uint64_t)v82, (uint64_t *)&unk_100600590);
    long long v85 = 0u;
    long long v86 = 0u;
  }
  uint64_t v47 = v71;
  uint64_t v48 = v70;
  uint64_t v49 = v77;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t result = v64(v49, 1, v80);
  if (result == 1) {
    goto LABEL_24;
  }
  PresentationSource.position.getter();
  int v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v39, 1, v47);
  uint64_t v51 = v68;
  if (v50)
  {
    sub_100054B1C(v39, &qword_1005FAAB8);
    v59(v49, v80);
    uint64_t v52 = 0;
  }
  else
  {
    uint64_t v53 = v49;
    uint64_t v54 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v65, v39, v47);
    sub_100054B1C(v39, &qword_1005FAAB8);
    v59(v53, v80);
    uint64_t v52 = (void *)PresentationSource.Position.view.getter();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v54, v47);
  }
  sub_100054BBC((uint64_t)&v85, (uint64_t)v81, &qword_1005F5D30);
  id v55 = v52;
  ActionOrigin.init(sender:view:)();
  ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v82, (uint64_t *)&unk_100600670);

  swift_release();
  sub_100054B1C((uint64_t)&v85, &qword_1005F5D30);
  swift_getObjectType();
  uint64_t v83 = v42;
  uint64_t v84 = sub_10020CCD0(&qword_1005FAAC0, 255, (void (*)(uint64_t))&type metadata accessor for ContextMetricsAction);
  v82[0] = v43;
  uint64_t v56 = v67;
  uint64_t v57 = v61;
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v67, enum case for ActionMetricsBehavior.fromAction(_:), v61);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v56, v57);
  return sub_10004D2D8((uint64_t)v82);
}

uint64_t sub_100208B40(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v64 = a3;
  uint64_t v5 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v62 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for PresentationSource.Position();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100054B78(&qword_1005FAAB8);
  __chkstk_darwin(v9 - 8);
  uint64_t v59 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContextMetricsActionContext();
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v66 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OSLogger();
  uint64_t v68 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v63 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v52 - v20;
  uint64_t result = a2(a1);
  if (!v25) {
    return result;
  }
  uint64_t v55 = v23;
  uint64_t v56 = result;
  uint64_t v67 = v24;
  uint64_t v53 = v6;
  uint64_t v54 = v5;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t v26 = type metadata accessor for PresentationSource();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v69 = v26;
  uint64_t v57 = v28;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, 1);
  if (result == 1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v29 = PresentationSource.viewController.getter();
  if (!v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v69);
LABEL_14:
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.init(stringLiteral:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v16, v14);
  }
  uint64_t v30 = (void *)v29;
  v52[0] = *(void *)(v27 + 8);
  ((void (*)(char *, uint64_t))v52[0])(v21, v69);
  uint64_t v31 = UIResponder.nearestActionRunner.getter();
  v52[1] = v32;

  if (!v31)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v68 = v31;
  MetricsLabel.rawValue.getter();
  type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  if (swift_dynamicCastClass()
    || (type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(), swift_dynamicCastClass()))
  {
    static MetricsTargetType.transcriptText.getter();
  }
  else
  {
    static MetricsTargetType.button.getter();
  }
  uint64_t v33 = swift_dynamicCastClass();
  uint64_t v34 = (unsigned int *)&enum case for ContextMetricsActionContext.contextual(_:);
  if (v33) {
    uint64_t v34 = (unsigned int *)&enum case for ContextMetricsActionContext.selectionMenu(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v13, *v34, v66);
  uint64_t v35 = type metadata accessor for ContextMetricsAction();
  swift_allocObject();
  uint64_t v67 = ContextMetricsAction.init(title:targetId:podcastStoreId:targetType:actionContext:)();
  type metadata accessor for ActionRunnerOptions();
  ContextActionsConfiguration.objectGraph.getter();
  BaseObjectGraph.__allocating_init(_:)();
  dispatch thunk of ContextActionsConfiguration.previewModel.getter();
  uint64_t v36 = v72;
  if (v72)
  {
    uint64_t v37 = sub_100041A98(v71, v72);
    *((void *)&v75 + 1) = v36;
    uint64_t v38 = sub_10004A244((uint64_t *)&v74);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v38, v37, v36);
    sub_10004D2D8((uint64_t)v71);
  }
  else
  {
    sub_100054B1C((uint64_t)v71, (uint64_t *)&unk_100600590);
    long long v74 = 0u;
    long long v75 = 0u;
  }
  uint64_t v39 = v63;
  uint64_t v40 = v57;
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t result = v40(v39, 1, v69);
  if (result == 1) {
    goto LABEL_24;
  }
  uint64_t v41 = (uint64_t)v59;
  PresentationSource.position.getter();
  uint64_t v42 = v60;
  uint64_t v43 = v61;
  int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v41, 1, v61);
  uint64_t v45 = v53;
  if (v44)
  {
    sub_100054B1C(v41, &qword_1005FAAB8);
    ((void (*)(char *, uint64_t))v52[0])(v39, v69);
    uint64_t v46 = 0;
  }
  else
  {
    uint64_t v47 = v39;
    uint64_t v48 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v58, v41, v43);
    sub_100054B1C(v41, &qword_1005FAAB8);
    ((void (*)(char *, uint64_t))v52[0])(v47, v69);
    uint64_t v46 = (void *)PresentationSource.Position.view.getter();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v48, v43);
  }
  sub_100054BBC((uint64_t)&v74, (uint64_t)v70, &qword_1005F5D30);
  id v49 = v46;
  ActionOrigin.init(sender:view:)();
  ActionRunnerOptions.withActionOrigin(_:)();
  sub_100054B1C((uint64_t)v71, (uint64_t *)&unk_100600670);

  swift_release();
  sub_100054B1C((uint64_t)&v74, &qword_1005F5D30);
  swift_getObjectType();
  uint64_t v72 = v35;
  uint64_t v73 = sub_10020CCD0(&qword_1005FAAC0, 255, (void (*)(uint64_t))&type metadata accessor for ContextMetricsAction);
  v71[0] = v67;
  int v50 = v62;
  uint64_t v51 = v54;
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v62, enum case for ActionMetricsBehavior.fromAction(_:), v54);
  swift_retain();
  ActionRunner.perform(_:withMetrics:asPartOf:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v50, v51);
  return sub_10004D2D8((uint64_t)v71);
}

uint64_t sub_10020949C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100204E78(a3);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    BOOL v6 = *(unsigned char *)(v5 + 32) || *(void *)(v5 + 24) == 0;
    if (!v6 && *(void *)(a2 + 80))
    {
      sub_1001DCD9C(*(void *)(v5 + 16), *(void *)(v5 + 24), 0);
      swift_retain();
      dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodesFromStations(episodeUuids:stationUuids:)();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10020954C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result = sub_100206C1C(a3);
  uint64_t v5 = a2[3];
  if (v5 && !*(unsigned char *)(v5 + 32))
  {
    uint64_t v7 = *(void *)(v5 + 16);
    uint64_t v6 = *(void *)(v5 + 24);
    swift_retain();
    sub_1001DCD9C(v7, v6, 0);
    swift_bridgeObjectRelease();
    sub_100041A98(a2 + 4, a2[7]);
    dispatch thunk of LibraryActionControllerProtocol.removeFromUpNext(uuids:)();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10020960C(uint64_t a1, uint64_t a2)
{
  sub_10020AEA8();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1002E9E24();
  id v4 = [self sharedInstance];
  swift_beginAccess();
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v5;
  v6[3] = sub_1002875F8;
  v6[4] = 0;
  aBlock[4] = sub_10020CD98;
  void aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10026924C;
  void aBlock[3] = &unk_100559960;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain_n();
  swift_release();
  [v4 reportAConcernURLWithCompletion:v7];
  _Block_release(v7);

  return swift_release();
}

uint64_t sub_10020976C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_100204E78(a6);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a7;
  void v10[3] = a3;
  v10[4] = a4;
  swift_retain();
  sub_100266624((uint64_t)sub_10020C294);

  return swift_release();
}

uint64_t sub_100209808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), void (*a9)(uint64_t))
{
  a8(a6);
  uint64_t v12 = swift_retain();
  a9(v12);
  sub_100267FA8(a7, a3, a4);

  return swift_release();
}

uint64_t sub_100209888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  sub_100206C1C(a6);
  uint64_t v11 = a5[3];
  if (v11 && !*(unsigned char *)(v11 + 32))
  {
    uint64_t v13 = *(void *)(v11 + 16);
    uint64_t v12 = *(void *)(v11 + 24);
    swift_retain();
    swift_retain();
    sub_1001DCD9C(v13, v12, 0);
    swift_bridgeObjectRelease();
    sub_100041A98(a5 + 4, a5[7]);
    dispatch thunk of LibraryActionControllerProtocol.removeFromUpNext(uuids:)();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  sub_100267FA8(a7, a3, a4);

  return swift_release();
}

uint64_t sub_100209974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void (*a10)(uint64_t))
{
  sub_1002080FC(a6, a8, a9);
  uint64_t v13 = swift_retain();
  a10(v13);
  sub_100267FA8(a7, a3, a4);

  return swift_release();
}

uint64_t sub_1002099F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10020AEA8();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_retain();
  sub_1002E9E24();
  id v12 = [self sharedInstance];
  swift_beginAccess();
  uint64_t v13 = *(void *)(a5 + 48);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = sub_1002875F8;
  v14[4] = 0;
  aBlock[4] = sub_10020C75C;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10026924C;
  void aBlock[3] = &unk_1005598E8;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain_n();
  swift_release();
  [v12 reportAConcernURLWithCompletion:v15];
  _Block_release(v15);

  swift_release();
  sub_100267FA8(a7, a3, a4);
  return swift_release();
}

uint64_t sub_100209B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, void (*a10)(uint64_t))
{
  sub_100208B40(a6, a8, a9);
  uint64_t v13 = swift_retain();
  a10(v13);
  sub_100267FA8(a7, a3, a4);

  return swift_release();
}

uint64_t sub_100209C10()
{
  uint64_t v1 = v0;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      uint64_t v10 = result;
      uint64_t ObjectType = swift_getObjectType();
      if (!(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10)) {
        goto LABEL_17;
      }
      sub_1004025F4();
      uint64_t v3 = v12;
      unint64_t v4 = v13;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_conformsToProtocol2();
      if (result)
      {
        uint64_t v14 = result;
        uint64_t v15 = swift_getObjectType();
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14))
        {
          uint64_t v5 = sub_1004025F4();
          unint64_t v6 = v16;
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v17 = swift_conformsToProtocol2();
        if (v17) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = 0;
        }
        if (!v17) {
          uint64_t v0 = 0;
        }
        if (v0)
        {
          uint64_t v19 = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18))
          {
            uint64_t v5 = sub_100241804();
            unint64_t v6 = v20;
            swift_release();
            swift_bridgeObjectRetain();
            uint64_t v3 = v5;
            unint64_t v4 = v6;
            goto LABEL_3;
          }
        }
        swift_beginAccess();
        if (*(void *)(v1 + 88)
          && (type metadata accessor for ContextActionsConfiguration(),
              swift_retain(),
              sub_100054B78(&qword_1005FAAD0),
              (swift_dynamicCast() & 1) != 0))
        {
          if (*((void *)&v27 + 1))
          {
            sub_100042FC4(&v26, (uint64_t)v29);
            uint64_t v21 = v30;
            uint64_t v22 = v31;
            sub_100041A98(v29, v30);
            if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22))
            {
              uint64_t v5 = sub_1004025F4();
              unint64_t v6 = v23;
              uint64_t v3 = v24;
              unint64_t v4 = v25;
              swift_release();
              sub_10004D2D8((uint64_t)v29);
              goto LABEL_3;
            }
            sub_10004D2D8((uint64_t)v29);
LABEL_32:
            uint64_t v5 = 0;
            uint64_t v3 = 0;
            unint64_t v6 = 0xE000000000000000;
            unint64_t v4 = 0xE000000000000000;
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v28 = 0;
          long long v26 = 0u;
          long long v27 = 0u;
        }
        sub_100054B1C((uint64_t)&v26, &qword_1005FAAC8);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v3 = *(void *)(v2 + qword_10061AA48);
  unint64_t v4 = *(void *)(v2 + qword_10061AA48 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_3:
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t v8 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_100209FC8()
{
  uint64_t v1 = v0;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    uint64_t v7 = swift_conformsToProtocol2();
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    if (!v7) {
      uint64_t v0 = 0;
    }
    if (v0)
    {
      uint64_t ObjectType = swift_getObjectType();
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8))
      {
        sub_1004025F4();
        uint64_t v3 = v10;
        unint64_t v4 = v11;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v12 = swift_conformsToProtocol2();
        if (v12) {
          uint64_t v13 = v12;
        }
        else {
          uint64_t v13 = 0;
        }
        if (v12) {
          uint64_t v14 = v1;
        }
        else {
          uint64_t v14 = 0;
        }
        if (v14)
        {
          uint64_t v15 = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v15, v13))
          {
            uint64_t v5 = sub_1004025F4();
            unint64_t v6 = v16;
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_31;
          }
        }
        swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_conformsToProtocol2();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v18 = result;
    uint64_t v19 = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18))
    {
      uint64_t v5 = sub_100241804();
      unint64_t v6 = v20;
      swift_release();
      swift_bridgeObjectRetain();
      uint64_t v3 = v5;
      unint64_t v4 = v6;
      goto LABEL_31;
    }
    swift_beginAccess();
    if (*(void *)(v1 + 16)
      && (type metadata accessor for ContextActionsConfiguration(),
          swift_retain(),
          sub_100054B78(&qword_1005FAAD0),
          (swift_dynamicCast() & 1) != 0))
    {
      if (*((void *)&v29 + 1))
      {
        sub_100042FC4(&v28, (uint64_t)v31);
        uint64_t v21 = v32;
        uint64_t v22 = v33;
        sub_100041A98(v31, v32);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22))
        {
          uint64_t v5 = sub_1004025F4();
          unint64_t v6 = v23;
          uint64_t v3 = v24;
          unint64_t v4 = v25;
          swift_release();
          sub_10004D2D8((uint64_t)v31);
          goto LABEL_31;
        }
        sub_10004D2D8((uint64_t)v31);
LABEL_30:
        uint64_t v5 = 0;
        uint64_t v3 = 0;
        unint64_t v6 = 0xE000000000000000;
        unint64_t v4 = 0xE000000000000000;
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v30 = 0;
      long long v28 = 0u;
      long long v29 = 0u;
    }
    sub_100054B1C((uint64_t)&v28, &qword_1005FAAC8);
    goto LABEL_30;
  }
  uint64_t v3 = *(void *)(v2 + qword_10061AA48);
  unint64_t v4 = *(void *)(v2 + qword_10061AA48 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_31:
  uint64_t v26 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v26 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v26)
  {
    uint64_t v27 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v27 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v27)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10020A380()
{
  uint64_t v1 = v0;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      uint64_t v10 = result;
      uint64_t ObjectType = swift_getObjectType();
      if (!(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10)) {
        goto LABEL_17;
      }
      sub_1004025F4();
      uint64_t v3 = v12;
      unint64_t v4 = v13;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_conformsToProtocol2();
      if (result)
      {
        uint64_t v14 = result;
        uint64_t v15 = swift_getObjectType();
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14))
        {
          uint64_t v5 = sub_1004025F4();
          unint64_t v6 = v16;
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v17 = swift_conformsToProtocol2();
        if (v17) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = 0;
        }
        if (!v17) {
          uint64_t v0 = 0;
        }
        if (v0)
        {
          uint64_t v19 = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18))
          {
            uint64_t v5 = sub_100241804();
            unint64_t v6 = v20;
            swift_release();
            swift_bridgeObjectRetain();
            uint64_t v3 = v5;
            unint64_t v4 = v6;
            goto LABEL_3;
          }
        }
        swift_beginAccess();
        if (*(void *)(v1 + 40)
          && (type metadata accessor for ContextActionsConfiguration(),
              swift_retain(),
              sub_100054B78(&qword_1005FAAD0),
              (swift_dynamicCast() & 1) != 0))
        {
          if (*((void *)&v27 + 1))
          {
            sub_100042FC4(&v26, (uint64_t)v29);
            uint64_t v21 = v30;
            uint64_t v22 = v31;
            sub_100041A98(v29, v30);
            if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22))
            {
              uint64_t v5 = sub_1004025F4();
              unint64_t v6 = v23;
              uint64_t v3 = v24;
              unint64_t v4 = v25;
              swift_release();
              sub_10004D2D8((uint64_t)v29);
              goto LABEL_3;
            }
            sub_10004D2D8((uint64_t)v29);
LABEL_32:
            uint64_t v5 = 0;
            uint64_t v3 = 0;
            unint64_t v6 = 0xE000000000000000;
            unint64_t v4 = 0xE000000000000000;
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v28 = 0;
          long long v26 = 0u;
          long long v27 = 0u;
        }
        sub_100054B1C((uint64_t)&v26, &qword_1005FAAC8);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v3 = *(void *)(v2 + qword_10061AA48);
  unint64_t v4 = *(void *)(v2 + qword_10061AA48 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_3:
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t v8 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10020A738()
{
  uint64_t v1 = v0;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      uint64_t v10 = result;
      uint64_t ObjectType = swift_getObjectType();
      if (!(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10)) {
        goto LABEL_17;
      }
      sub_1004025F4();
      uint64_t v3 = v12;
      unint64_t v4 = v13;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_conformsToProtocol2();
      if (result)
      {
        uint64_t v14 = result;
        uint64_t v15 = swift_getObjectType();
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14))
        {
          uint64_t v5 = sub_1004025F4();
          unint64_t v6 = v16;
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v17 = swift_conformsToProtocol2();
        if (v17) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = 0;
        }
        if (!v17) {
          uint64_t v0 = 0;
        }
        if (v0)
        {
          uint64_t v19 = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18))
          {
            uint64_t v5 = sub_100241804();
            unint64_t v6 = v20;
            swift_release();
            swift_bridgeObjectRetain();
            uint64_t v3 = v5;
            unint64_t v4 = v6;
            goto LABEL_3;
          }
        }
        swift_beginAccess();
        if (*(void *)(v1 + 16)
          && (type metadata accessor for ContextActionsConfiguration(),
              swift_retain(),
              sub_100054B78(&qword_1005FAAD0),
              (swift_dynamicCast() & 1) != 0))
        {
          if (*((void *)&v27 + 1))
          {
            sub_100042FC4(&v26, (uint64_t)v29);
            uint64_t v21 = v30;
            uint64_t v22 = v31;
            sub_100041A98(v29, v30);
            if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22))
            {
              uint64_t v5 = sub_1004025F4();
              unint64_t v6 = v23;
              uint64_t v3 = v24;
              unint64_t v4 = v25;
              swift_release();
              sub_10004D2D8((uint64_t)v29);
              goto LABEL_3;
            }
            sub_10004D2D8((uint64_t)v29);
LABEL_32:
            uint64_t v5 = 0;
            uint64_t v3 = 0;
            unint64_t v6 = 0xE000000000000000;
            unint64_t v4 = 0xE000000000000000;
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v28 = 0;
          long long v26 = 0u;
          long long v27 = 0u;
        }
        sub_100054B1C((uint64_t)&v26, &qword_1005FAAC8);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v3 = *(void *)(v2 + qword_10061AA48);
  unint64_t v4 = *(void *)(v2 + qword_10061AA48 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_3:
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t v8 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10020AAF0()
{
  uint64_t v1 = v0;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      uint64_t v10 = result;
      uint64_t ObjectType = swift_getObjectType();
      if (!(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10)) {
        goto LABEL_17;
      }
      sub_1004025F4();
      uint64_t v3 = v12;
      unint64_t v4 = v13;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_conformsToProtocol2();
      if (result)
      {
        uint64_t v14 = result;
        uint64_t v15 = swift_getObjectType();
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14))
        {
          uint64_t v5 = sub_1004025F4();
          unint64_t v6 = v16;
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v17 = swift_conformsToProtocol2();
        if (v17) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = 0;
        }
        if (!v17) {
          uint64_t v0 = 0;
        }
        if (v0)
        {
          uint64_t v19 = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18))
          {
            uint64_t v5 = sub_100241804();
            unint64_t v6 = v20;
            swift_release();
            swift_bridgeObjectRetain();
            uint64_t v3 = v5;
            unint64_t v4 = v6;
            goto LABEL_3;
          }
        }
        swift_beginAccess();
        if (*(void *)(v1 + 64)
          && (type metadata accessor for ContextActionsConfiguration(),
              swift_retain(),
              sub_100054B78(&qword_1005FAAD0),
              (swift_dynamicCast() & 1) != 0))
        {
          if (*((void *)&v27 + 1))
          {
            sub_100042FC4(&v26, (uint64_t)v29);
            uint64_t v21 = v30;
            uint64_t v22 = v31;
            sub_100041A98(v29, v30);
            if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22))
            {
              uint64_t v5 = sub_1004025F4();
              unint64_t v6 = v23;
              uint64_t v3 = v24;
              unint64_t v4 = v25;
              swift_release();
              sub_10004D2D8((uint64_t)v29);
              goto LABEL_3;
            }
            sub_10004D2D8((uint64_t)v29);
LABEL_32:
            uint64_t v5 = 0;
            uint64_t v3 = 0;
            unint64_t v6 = 0xE000000000000000;
            unint64_t v4 = 0xE000000000000000;
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v28 = 0;
          long long v26 = 0u;
          long long v27 = 0u;
        }
        sub_100054B1C((uint64_t)&v26, &qword_1005FAAC8);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v3 = *(void *)(v2 + qword_10061AA48);
  unint64_t v4 = *(void *)(v2 + qword_10061AA48 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_3:
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t v8 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10020AEA8()
{
  uint64_t v1 = v0;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + qword_10061AA48);
    unint64_t v4 = *(void *)(v2 + qword_10061AA48 + 8);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
    goto LABEL_37;
  }
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (!v7) {
    uint64_t v0 = 0;
  }
  if (v0)
  {
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8))
    {
      sub_1004025F4();
      uint64_t v3 = v10;
      unint64_t v4 = v11;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v12 = swift_conformsToProtocol2();
      if (v12) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      if (v12) {
        uint64_t v14 = v1;
      }
      else {
        uint64_t v14 = 0;
      }
      if (v14)
      {
        uint64_t v15 = swift_getObjectType();
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v15, v13))
        {
          uint64_t v5 = sub_1004025F4();
          unint64_t v6 = v16;
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v17 = swift_conformsToProtocol2();
  if (v17) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v17) {
    uint64_t v19 = v1;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v19)
  {
    uint64_t v20 = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v20, v18))
    {
      uint64_t v5 = sub_100241804();
      unint64_t v6 = v21;
      swift_release();
      swift_bridgeObjectRetain();
      uint64_t v3 = v5;
      unint64_t v4 = v6;
      goto LABEL_37;
    }
  }
  swift_beginAccess();
  if (!*(void *)(v1 + 48)
    || (type metadata accessor for ContextActionsConfiguration(),
        swift_retain(),
        sub_100054B78(&qword_1005FAAD0),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    goto LABEL_35;
  }
  if (!*((void *)&v31 + 1))
  {
LABEL_35:
    sub_100054B1C((uint64_t)&v30, &qword_1005FAAC8);
    goto LABEL_36;
  }
  sub_100042FC4(&v30, (uint64_t)v33);
  uint64_t v22 = v34;
  uint64_t v23 = v35;
  sub_100041A98(v33, v34);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23))
  {
    uint64_t v5 = sub_1004025F4();
    unint64_t v6 = v24;
    uint64_t v3 = v25;
    unint64_t v4 = v26;
    swift_release();
    sub_10004D2D8((uint64_t)v33);
    goto LABEL_37;
  }
  sub_10004D2D8((uint64_t)v33);
LABEL_36:
  uint64_t v5 = 0;
  uint64_t v3 = 0;
  unint64_t v6 = 0xE000000000000000;
  unint64_t v4 = 0xE000000000000000;
LABEL_37:
  uint64_t v27 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v27 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v27)
  {
    uint64_t v28 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v28 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v28)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10020B260(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v5 = swift_dynamicCastClass();
  if (v5)
  {
    uint64_t v6 = *(void *)(v5 + qword_10061AA48);
    unint64_t v7 = *(void *)(v5 + qword_10061AA48 + 8);
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
    goto LABEL_37;
  }
  uint64_t v10 = swift_conformsToProtocol2();
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  if (!v10) {
    uint64_t v2 = 0;
  }
  if (v2)
  {
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(ObjectType, v11))
    {
      sub_1004025F4();
      uint64_t v6 = v13;
      unint64_t v7 = v14;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v15 = swift_conformsToProtocol2();
      if (v15) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 0;
      }
      if (v15) {
        uint64_t v17 = v4;
      }
      else {
        uint64_t v17 = 0;
      }
      if (v17)
      {
        uint64_t v18 = swift_getObjectType();
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v18, v16))
        {
          uint64_t v8 = sub_1004025F4();
          unint64_t v9 = v19;
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = swift_conformsToProtocol2();
  if (v20) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  if (v20) {
    uint64_t v22 = v4;
  }
  else {
    uint64_t v22 = 0;
  }
  if (v22)
  {
    uint64_t v23 = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v23, v21))
    {
      uint64_t v8 = sub_100241804();
      unint64_t v9 = v24;
      swift_release();
      swift_bridgeObjectRetain();
      uint64_t v6 = v8;
      unint64_t v7 = v9;
      goto LABEL_37;
    }
  }
  uint64_t v25 = (void *)(v4 + *a2);
  swift_beginAccess();
  if (!*v25
    || (type metadata accessor for ContextActionsConfiguration(),
        swift_retain(),
        sub_100054B78(&qword_1005FAAD0),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    goto LABEL_35;
  }
  if (!*((void *)&v35 + 1))
  {
LABEL_35:
    sub_100054B1C((uint64_t)&v34, &qword_1005FAAC8);
    goto LABEL_36;
  }
  sub_100042FC4(&v34, (uint64_t)v37);
  uint64_t v26 = v38;
  uint64_t v27 = v39;
  sub_100041A98(v37, v38);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27))
  {
    uint64_t v8 = sub_1004025F4();
    unint64_t v9 = v28;
    uint64_t v6 = v29;
    unint64_t v7 = v30;
    swift_release();
    sub_10004D2D8((uint64_t)v37);
    goto LABEL_37;
  }
  sub_10004D2D8((uint64_t)v37);
LABEL_36:
  uint64_t v8 = 0;
  uint64_t v6 = 0;
  unint64_t v9 = 0xE000000000000000;
  unint64_t v7 = 0xE000000000000000;
LABEL_37:
  uint64_t v31 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v31 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31)
  {
    uint64_t v32 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v32 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (!v32)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v6;
}

uint64_t sub_10020B62C()
{
  uint64_t v1 = v0;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      uint64_t v10 = result;
      uint64_t ObjectType = swift_getObjectType();
      if (!(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10)) {
        goto LABEL_17;
      }
      sub_1004025F4();
      uint64_t v3 = v12;
      unint64_t v4 = v13;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_conformsToProtocol2();
      if (result)
      {
        uint64_t v14 = result;
        uint64_t v15 = swift_getObjectType();
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14))
        {
          uint64_t v5 = sub_1004025F4();
          unint64_t v6 = v16;
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v17 = swift_conformsToProtocol2();
        if (v17) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = 0;
        }
        if (!v17) {
          uint64_t v0 = 0;
        }
        if (v0)
        {
          uint64_t v19 = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18))
          {
            uint64_t v5 = sub_100241804();
            unint64_t v6 = v20;
            swift_release();
            swift_bridgeObjectRetain();
            uint64_t v3 = v5;
            unint64_t v4 = v6;
            goto LABEL_3;
          }
        }
        swift_beginAccess();
        if (*(void *)(v1 + 24)
          && (type metadata accessor for ContextActionsConfiguration(),
              swift_retain(),
              sub_100054B78(&qword_1005FAAD0),
              (swift_dynamicCast() & 1) != 0))
        {
          if (*((void *)&v27 + 1))
          {
            sub_100042FC4(&v26, (uint64_t)v29);
            uint64_t v21 = v30;
            uint64_t v22 = v31;
            sub_100041A98(v29, v30);
            if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22))
            {
              uint64_t v5 = sub_1004025F4();
              unint64_t v6 = v23;
              uint64_t v3 = v24;
              unint64_t v4 = v25;
              swift_release();
              sub_10004D2D8((uint64_t)v29);
              goto LABEL_3;
            }
            sub_10004D2D8((uint64_t)v29);
LABEL_32:
            uint64_t v5 = 0;
            uint64_t v3 = 0;
            unint64_t v6 = 0xE000000000000000;
            unint64_t v4 = 0xE000000000000000;
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v28 = 0;
          long long v26 = 0u;
          long long v27 = 0u;
        }
        sub_100054B1C((uint64_t)&v26, &qword_1005FAAC8);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v3 = *(void *)(v2 + qword_10061AA48);
  unint64_t v4 = *(void *)(v2 + qword_10061AA48 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_3:
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t v8 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10020B9E4()
{
  uint64_t v1 = v0;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    uint64_t v7 = swift_conformsToProtocol2();
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    if (!v7) {
      uint64_t v0 = 0;
    }
    if (v0)
    {
      uint64_t ObjectType = swift_getObjectType();
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8))
      {
        sub_1004025F4();
        uint64_t v3 = v10;
        unint64_t v4 = v11;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v12 = swift_conformsToProtocol2();
        if (v12) {
          uint64_t v13 = v12;
        }
        else {
          uint64_t v13 = 0;
        }
        if (v12) {
          uint64_t v14 = v1;
        }
        else {
          uint64_t v14 = 0;
        }
        if (v14)
        {
          uint64_t v15 = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v15, v13))
          {
            uint64_t v5 = sub_1004025F4();
            unint64_t v6 = v16;
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_31;
          }
        }
        swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_conformsToProtocol2();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v18 = result;
    uint64_t v19 = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18))
    {
      uint64_t v5 = sub_100241804();
      unint64_t v6 = v20;
      swift_release();
      swift_bridgeObjectRetain();
      uint64_t v3 = v5;
      unint64_t v4 = v6;
      goto LABEL_31;
    }
    swift_beginAccess();
    if (*(void *)(v1 + 24)
      && (type metadata accessor for ContextActionsConfiguration(),
          swift_retain(),
          sub_100054B78(&qword_1005FAAD0),
          (swift_dynamicCast() & 1) != 0))
    {
      if (*((void *)&v29 + 1))
      {
        sub_100042FC4(&v28, (uint64_t)v31);
        uint64_t v21 = v32;
        uint64_t v22 = v33;
        sub_100041A98(v31, v32);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22))
        {
          uint64_t v5 = sub_1004025F4();
          unint64_t v6 = v23;
          uint64_t v3 = v24;
          unint64_t v4 = v25;
          swift_release();
          sub_10004D2D8((uint64_t)v31);
          goto LABEL_31;
        }
        sub_10004D2D8((uint64_t)v31);
LABEL_30:
        uint64_t v5 = 0;
        uint64_t v3 = 0;
        unint64_t v6 = 0xE000000000000000;
        unint64_t v4 = 0xE000000000000000;
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v30 = 0;
      long long v28 = 0u;
      long long v29 = 0u;
    }
    sub_100054B1C((uint64_t)&v28, &qword_1005FAAC8);
    goto LABEL_30;
  }
  uint64_t v3 = *(void *)(v2 + qword_10061AA48);
  unint64_t v4 = *(void *)(v2 + qword_10061AA48 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_31:
  uint64_t v26 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v26 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v26)
  {
    uint64_t v27 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v27 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v27)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10020BD9C()
{
  uint64_t v1 = v0;
  type metadata accessor for ChannelContextActionConfiguration(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      uint64_t v8 = result;
      uint64_t ObjectType = swift_getObjectType();
      if (!(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8)) {
        goto LABEL_9;
      }
      sub_1004025F4();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_conformsToProtocol2();
      if (result)
      {
        uint64_t v10 = result;
        uint64_t v11 = swift_getObjectType();
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v11, v10))
        {
          uint64_t v5 = sub_1004025F4();
          unint64_t v6 = v12;
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
LABEL_17:
          swift_bridgeObjectRetain();
          uint64_t v3 = v5;
          unint64_t v4 = v6;
          goto LABEL_26;
        }
        swift_bridgeObjectRelease();
LABEL_9:
        uint64_t v13 = swift_conformsToProtocol2();
        if (v13) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = 0;
        }
        if (!v13) {
          uint64_t v0 = 0;
        }
        if (v0)
        {
          uint64_t v15 = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14))
          {
            uint64_t v5 = sub_100241804();
            unint64_t v6 = v16;
            swift_release();
            goto LABEL_17;
          }
        }
        swift_beginAccess();
        if (*(void *)(v1 + 24)
          && (type metadata accessor for ContextActionsConfiguration(),
              swift_retain(),
              sub_100054B78(&qword_1005FAAD0),
              (swift_dynamicCast() & 1) != 0))
        {
          if (*((void *)&v25 + 1))
          {
            sub_100042FC4(&v24, (uint64_t)v27);
            uint64_t v17 = v28;
            uint64_t v18 = v29;
            sub_100041A98(v27, v28);
            if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18))
            {
              uint64_t v5 = sub_1004025F4();
              unint64_t v6 = v19;
              uint64_t v3 = v20;
              unint64_t v4 = v21;
              swift_release();
              sub_10004D2D8((uint64_t)v27);
              goto LABEL_26;
            }
            sub_10004D2D8((uint64_t)v27);
LABEL_25:
            uint64_t v5 = 0;
            uint64_t v3 = 0;
            unint64_t v6 = 0xE000000000000000;
            unint64_t v4 = 0xE000000000000000;
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v26 = 0;
          long long v24 = 0u;
          long long v25 = 0u;
        }
        sub_100054B1C((uint64_t)&v24, &qword_1005FAAC8);
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v3 = *(void *)(v2 + qword_10061AA48);
  unint64_t v4 = *(void *)(v2 + qword_10061AA48 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_26:
  uint64_t v22 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v22 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v22)
  {
    uint64_t v23 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v23 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v23)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

double sub_10020C158@<D0>(uint64_t a1@<X8>)
{
  id v2 = [self systemGrayColor];
  uint64_t v3 = self;
  id v4 = v2;
  id v5 = [v3 mainBundle];
  v10._unint64_t object = (void *)0xE000000000000000;
  v6._unint64_t object = (void *)0x80000001004D6720;
  v6._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v7._uint64_t countAndFlagsBits = 0;
  v7._unint64_t object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  *(void *)a1 = v2;
  double result = 4.58826571e199;
  *(_OWORD *)(a1 + 8) = xmmword_10046F4B0;
  *(Swift::String *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_10020C248()
{
  return sub_100016C38();
}

uint64_t sub_10020C250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10020976C(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_10020C25C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10020C294()
{
  return sub_100267FA8(v0[2], v0[3], v0[4]);
}

unint64_t sub_10020C2A0()
{
  unint64_t result = qword_1005FAAD8;
  if (!qword_1005FAAD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005FAAD8);
  }
  return result;
}

uint64_t sub_10020C2E0()
{
  return sub_100016C38();
}

uint64_t sub_10020C2E8(uint64_t a1)
{
  return sub_10020949C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10020C2F0()
{
  return sub_100016C38();
}

uint64_t sub_10020C2F8()
{
  return sub_100204BA8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10020C300()
{
  return sub_100016C38();
}

uint64_t sub_10020C308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209808(a1, a2, a3, a4, v4[2], v4[3], v4[4], (void (*)(uint64_t))sub_100205888, (void (*)(uint64_t))sub_100220CF4);
}

uint64_t sub_10020C358()
{
  return sub_100016C38();
}

uint64_t sub_10020C360(uint64_t a1)
{
  return sub_10020C44C(a1, (uint64_t (*)(void))sub_100205888, (uint64_t (*)(uint64_t))sub_100220CF4);
}

uint64_t sub_10020C38C()
{
  return sub_100016C38();
}

uint64_t sub_10020C394()
{
  return sub_10020C4C0((uint64_t (*)(void))sub_100205888, (uint64_t (*)(uint64_t))sub_100220CF4);
}

uint64_t sub_10020C3C0()
{
  return sub_100016C38();
}

uint64_t sub_10020C3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209808(a1, a2, a3, a4, v4[2], v4[3], v4[4], (void (*)(uint64_t))sub_10020620C, (void (*)(uint64_t))sub_10026AC78);
}

uint64_t sub_10020C418()
{
  return sub_100016C38();
}

uint64_t sub_10020C420(uint64_t a1)
{
  return sub_10020C44C(a1, sub_10020620C, (uint64_t (*)(uint64_t))sub_10026AC78);
}

uint64_t sub_10020C44C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = a2(*(void *)(v3 + 24));
  return a3(v5);
}

uint64_t sub_10020C48C()
{
  return sub_100016C38();
}

uint64_t sub_10020C494()
{
  return sub_10020C4C0(sub_10020620C, (uint64_t (*)(uint64_t))sub_10026AC78);
}

uint64_t sub_10020C4C0(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = a1(*(void *)(v2 + 24));
  return a2(v4);
}

uint64_t sub_10020C504()
{
  return sub_100016C38();
}

uint64_t sub_10020C50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209888(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_10020C518()
{
  return sub_100016C38();
}

uint64_t sub_10020C520(uint64_t a1)
{
  return sub_10020954C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10020C528()
{
  return sub_100016C38();
}

uint64_t sub_10020C530()
{
  return sub_100204C58(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10020C538()
{
  return sub_100016C38();
}

uint64_t sub_10020C540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209B90(a1, a2, a3, a4, v4[2], v4[3], v4[4], (uint64_t (*)(uint64_t))sub_10020AAF0, (uint64_t)&OBJC_IVAR____TtC8Podcasts24GoToEpisodeContextAction_metricsLabel, (void (*)(uint64_t))sub_1002C1B68);
}

uint64_t sub_10020C598()
{
  return sub_100016C38();
}

uint64_t sub_10020C5A0(uint64_t a1)
{
  return sub_10020CC94(a1, (uint64_t (*)(uint64_t))sub_10020AAF0, (uint64_t)&OBJC_IVAR____TtC8Podcasts24GoToEpisodeContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1002C1B68);
}

uint64_t sub_10020C5D4()
{
  return sub_100016C38();
}

uint64_t sub_10020C5DC()
{
  return sub_10020CD54((uint64_t (*)(uint64_t))sub_10020AAF0, (uint64_t)&OBJC_IVAR____TtC8Podcasts24GoToEpisodeContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1002C1B68);
}

uint64_t sub_10020C610()
{
  return sub_100016C38();
}

uint64_t sub_10020C618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209974(a1, a2, a3, a4, v4[2], v4[3], v4[4], &OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration, &OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_metricsLabel, (void (*)(uint64_t))sub_1002DF458);
}

uint64_t sub_10020C664()
{
  return sub_100016C38();
}

uint64_t sub_10020C66C(uint64_t a1)
{
  return sub_10020C694(a1, &OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration, &OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1002DF458);
}

uint64_t sub_10020C694(uint64_t a1, void *a2, void *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = sub_1002080FC(*(void *)(v4 + 24), a2, a3);
  return a4(v6);
}

uint64_t sub_10020C6D0()
{
  return sub_100016C38();
}

uint64_t sub_10020C6D8()
{
  return sub_10020C700(&OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_configuration, &OBJC_IVAR____TtC8Podcasts37ManageFavoriteCategoriesContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1002DF458);
}

uint64_t sub_10020C700(void *a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = sub_1002080FC(*(void *)(v3 + 24), a1, a2);
  return a3(v5);
}

uint64_t sub_10020C744()
{
  return sub_100016C38();
}

uint64_t sub_10020C74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002099F4(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_10020C75C(uint64_t a1)
{
  return sub_1003053A0(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_10020C768()
{
  return sub_100016C38();
}

uint64_t sub_10020C770(uint64_t a1)
{
  return sub_10020960C(a1, *(void *)(v1 + 16));
}

uint64_t sub_10020C77C()
{
  return sub_100016C38();
}

uint64_t sub_10020C784()
{
  return sub_100204D18(*(void *)(v0 + 16));
}

uint64_t sub_10020C790()
{
  return sub_100016C38();
}

uint64_t sub_10020C798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209974(a1, a2, a3, a4, v4[2], v4[3], v4[4], &OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration, &OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_metricsLabel, (void (*)(uint64_t))sub_1002FDC80);
}

uint64_t sub_10020C7E4()
{
  return sub_100016C38();
}

uint64_t sub_10020C7EC(uint64_t a1)
{
  return sub_10020C694(a1, &OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration, &OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1002FDC80);
}

uint64_t sub_10020C814()
{
  return sub_100016C38();
}

uint64_t sub_10020C81C()
{
  return sub_10020C700(&OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration, &OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1002FDC80);
}

uint64_t sub_10020C844()
{
  return sub_100016C38();
}

uint64_t sub_10020C84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209974(a1, a2, a3, a4, v4[2], v4[3], v4[4], &OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration, &OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_metricsLabel, (void (*)(uint64_t))sub_1003136CC);
}

uint64_t sub_10020C898()
{
  return sub_100016C38();
}

uint64_t sub_10020C8A0(uint64_t a1)
{
  return sub_10020C694(a1, &OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration, &OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1003136CC);
}

uint64_t sub_10020C8C8()
{
  return sub_100016C38();
}

uint64_t sub_10020C8D0()
{
  return sub_10020C700(&OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration, &OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1003136CC);
}

uint64_t sub_10020C8F8()
{
  return sub_100016C38();
}

uint64_t sub_10020C900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209808(a1, a2, a3, a4, v4[2], v4[3], v4[4], (void (*)(uint64_t))sub_100207664, (void (*)(uint64_t))sub_1003304D0);
}

uint64_t sub_10020C950()
{
  return sub_100016C38();
}

uint64_t sub_10020C958(uint64_t a1)
{
  return sub_10020C44C(a1, sub_100207664, (uint64_t (*)(uint64_t))sub_1003304D0);
}

uint64_t sub_10020C984()
{
  return sub_100016C38();
}

uint64_t sub_10020C98C()
{
  return sub_10020C4C0(sub_100207664, (uint64_t (*)(uint64_t))sub_1003304D0);
}

uint64_t sub_10020C9B8()
{
  return sub_100016C38();
}

uint64_t sub_10020C9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209974(a1, a2, a3, a4, v4[2], v4[3], v4[4], &OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration, &OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_metricsLabel, (void (*)(uint64_t))sub_100364B3C);
}

uint64_t sub_10020CA0C()
{
  return sub_100016C38();
}

uint64_t sub_10020CA14(uint64_t a1)
{
  return sub_10020C694(a1, &OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration, &OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_100364B3C);
}

uint64_t sub_10020CA3C()
{
  return sub_100016C38();
}

uint64_t sub_10020CA44()
{
  return sub_10020C700(&OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration, &OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_100364B3C);
}

uint64_t sub_10020CA6C()
{
  return sub_100016C38();
}

uint64_t sub_10020CA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209974(a1, a2, a3, a4, v4[2], v4[3], v4[4], &OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration, &OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_metricsLabel, (void (*)(uint64_t))sub_1003AF92C);
}

uint64_t sub_10020CAC0()
{
  return sub_100016C38();
}

uint64_t sub_10020CAC8(uint64_t a1)
{
  return sub_10020C694(a1, &OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration, &OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1003AF92C);
}

uint64_t sub_10020CAF0()
{
  return sub_100016C38();
}

uint64_t sub_10020CAF8()
{
  return sub_10020C700(&OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_configuration, &OBJC_IVAR____TtC8Podcasts25UndoFavoriteContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1003AF92C);
}

uint64_t sub_10020CB20()
{
  return sub_100016C38();
}

uint64_t sub_10020CB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209B90(a1, a2, a3, a4, v4[2], v4[3], v4[4], (uint64_t (*)(uint64_t))sub_10020B9E4, (uint64_t)&OBJC_IVAR____TtC8Podcasts28SettingsPodcastContextAction_metricsLabel, (void (*)(uint64_t))sub_1003FFB38);
}

uint64_t sub_10020CB80()
{
  return sub_100016C38();
}

uint64_t sub_10020CB88(uint64_t a1)
{
  return sub_10020CC94(a1, (uint64_t (*)(uint64_t))sub_10020B9E4, (uint64_t)&OBJC_IVAR____TtC8Podcasts28SettingsPodcastContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1003FFB38);
}

uint64_t sub_10020CBBC()
{
  return sub_100016C38();
}

uint64_t sub_10020CBC4()
{
  return sub_10020CD54((uint64_t (*)(uint64_t))sub_10020B9E4, (uint64_t)&OBJC_IVAR____TtC8Podcasts28SettingsPodcastContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_1003FFB38);
}

uint64_t sub_10020CBF8()
{
  return sub_100016C38();
}

uint64_t sub_10020CC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100209B90(a1, a2, a3, a4, v4[2], v4[3], v4[4], (uint64_t (*)(uint64_t))sub_10020BD9C, (uint64_t)&OBJC_IVAR____TtC8Podcasts34EpisodePresentPodcastContextAction_metricsLabel, (void (*)(uint64_t))sub_10041C21C);
}

uint64_t sub_10020CC58()
{
  return sub_100016C38();
}

uint64_t sub_10020CC60(uint64_t a1)
{
  return sub_10020CC94(a1, (uint64_t (*)(uint64_t))sub_10020BD9C, (uint64_t)&OBJC_IVAR____TtC8Podcasts34EpisodePresentPodcastContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_10041C21C);
}

uint64_t sub_10020CC94(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = sub_100208B40(*(void *)(v4 + 24), a2, a3);
  return a4(v6);
}

uint64_t sub_10020CCD0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10020CD18()
{
  return sub_100016C38();
}

uint64_t sub_10020CD20()
{
  return sub_10020CD54((uint64_t (*)(uint64_t))sub_10020BD9C, (uint64_t)&OBJC_IVAR____TtC8Podcasts34EpisodePresentPodcastContextAction_metricsLabel, (uint64_t (*)(uint64_t))sub_10041C21C);
}

uint64_t sub_10020CD54(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = sub_100208B40(*(void *)(v3 + 24), a1, a2);
  return a3(v5);
}

char *sub_10020CE0C(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[1];
    *((void *)a1 + 1) = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    Swift::String v8 = &a1[v7];
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = type metadata accessor for ReevaluateAutoDownloadsIntent();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    unint64_t v12 = v4;
    uint64_t v13 = v6;
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_10020CEF8(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ReevaluateAutoDownloadsIntent();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10020CF78(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for ReevaluateAutoDownloadsIntent();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  id v11 = v4;
  id v12 = v5;
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_10020D010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for ReevaluateAutoDownloadsIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *sub_10020D0B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ReevaluateAutoDownloadsIntent();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_10020D130(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ReevaluateAutoDownloadsIntent();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_10020D1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020D1E0);
}

uint64_t sub_10020D1E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ReevaluateAutoDownloadsIntent();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10020D290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020D2A4);
}

void *sub_10020D2A4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ReevaluateAutoDownloadsIntent();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10020D34C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = (char *)a3 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for ReevaluateAutoDownloadsIntent();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  type metadata accessor for DebouncedAutoDownloadProcessor();
  BaseObjectGraph.inject<A>(_:)();
  *a3 = v9;
  type metadata accessor for DebouncedAssetRemovalProcessor();
  BaseObjectGraph.inject<A>(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  a3[1] = v9;
  return result;
}

uint64_t sub_10020D458()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10020D478, 0, 0);
}

uint64_t sub_10020D478()
{
  sub_100008C78();
  dispatch thunk of DebouncedEpisodeAndShowProcessor.requestEvaluation()();
  swift_release();
  sub_100006BA0();
  dispatch thunk of DebouncedEpisodeAndShowProcessor.requestEvaluation()();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_10020D508()
{
  uint64_t v1 = type metadata accessor for EpisodeOffer();
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = v0;
  uint64_t v5 = *(void *)(v0 + 16);
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v7 = *(void *)(v5 + 16);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v8 = *(unsigned __int8 *)(v5 + 32);
  unint64_t v99 = v7;
  switch(v8)
  {
    case 1:
      uint64_t v18 = *(void *)(v7 + 16);
      if (!v18) {
        return _swiftEmptyArrayStorage;
      }
      uint64_t v97 = *(void *)(v100 + 24);
      uint64_t v19 = v2;
      unint64_t v20 = v7 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      uint64_t v94 = v6;
      sub_1001DCD9C(v7, v6, 1u);
      unint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
      v19 += 16;
      uint64_t v95 = *(void *)(v19 + 56);
      uint64_t v96 = v21;
      uint64_t v98 = v19;
      uint64_t v22 = (void (**)(char *, uint64_t))(v19 - 8);
      swift_bridgeObjectRetain();
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v100 = v1;
      do
      {
        v96(v4, v20, v1);
        EpisodeOffer.contentId.getter();
        EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
        ModernEpisodeDownloadStateMachine.currentState.getter();
        swift_release();
        CurrentValueSubject.value.getter();
        swift_release();
        uint64_t v24 = v101;
        uint64_t v23 = v102;
        char v25 = v103;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_1002EF490(0, v11[2] + 1, 1, v11);
        }
        unint64_t v27 = v11[2];
        unint64_t v26 = v11[3];
        if (v27 >= v26 >> 1) {
          uint64_t v11 = sub_1002EF490((void *)(v26 > 1), v27 + 1, 1, v11);
        }
        void v11[2] = v27 + 1;
        uint64_t v28 = &v11[3 * v27];
        void v28[4] = v24;
        v28[5] = v23;
        *((unsigned char *)v28 + 48) = v25;
        uint64_t v1 = v100;
        (*v22)(v4, v100);
        v20 += v95;
        --v18;
      }
      while (v18);
      uint64_t v64 = v99;
      uint64_t v65 = v94;
      sub_1001DCDF8(v99, v94, 1u);
      uint64_t v66 = v64;
      uint64_t v67 = v65;
      unsigned __int8 v68 = 1;
      goto LABEL_85;
    case 2:
      if (v7 >> 62)
      {
        sub_1001DCD9C(v7, v6, 2u);
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        if (v29) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v29 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_1001DCD9C(v7, v6, 2u);
        swift_bridgeObjectRetain();
        if (v29)
        {
LABEL_21:
          uint64_t v94 = v6;
          if (v29 >= 1)
          {
            uint64_t v30 = 0;
            unint64_t v31 = v7 & 0xC000000000000001;
            uint64_t v11 = _swiftEmptyArrayStorage;
            while (1)
            {
              if (v31) {
                id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v33 = *(id *)(v7 + 8 * v30 + 32);
              }
              long long v34 = v33;
              id v35 = [v33 episodeUuid:v94];
              if (v35)
              {
                uint64_t v36 = v35;
                static String._unconditionallyBridgeFromObjectiveC(_:)();

                EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
                swift_bridgeObjectRelease();
              }
              else
              {
                if (!objc_msgSend(self, "isNotEmpty:", objc_msgSend(v34, "episodeStoreId")))
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v11 = sub_1002EF490(0, v11[2] + 1, 1, v11);
                  }
                  unint64_t v43 = v11[2];
                  unint64_t v42 = v11[3];
                  if (v43 >= v42 >> 1) {
                    uint64_t v11 = sub_1002EF490((void *)(v42 > 1), v43 + 1, 1, v11);
                  }
                  void v11[2] = v43 + 1;
                  int v44 = &v11[3 * v43];
                  v44[4] = 0;
                  v44[5] = 0;
                  *((unsigned char *)v44 + 48) = 2;
                  goto LABEL_24;
                }
                [v34 episodeStoreId];
                AdamID.init(rawValue:)();
                EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
              }
              ModernEpisodeDownloadStateMachine.currentState.getter();
              swift_release();
              CurrentValueSubject.value.getter();
              swift_release();
              uint64_t v37 = v101;
              uint64_t v38 = v102;
              char v39 = v103;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v11 = sub_1002EF490(0, v11[2] + 1, 1, v11);
              }
              unint64_t v41 = v11[2];
              unint64_t v40 = v11[3];
              if (v41 >= v40 >> 1) {
                uint64_t v11 = sub_1002EF490((void *)(v40 > 1), v41 + 1, 1, v11);
              }
              void v11[2] = v41 + 1;
              uint64_t v32 = &v11[3 * v41];
              v32[4] = v37;
              v32[5] = v38;
              *((unsigned char *)v32 + 48) = v39;
              unint64_t v7 = v99;
LABEL_24:
              ++v30;

              if (v29 == v30)
              {
                uint64_t v69 = v94;
                sub_1001DCDF8(v7, v94, 2u);
                uint64_t v66 = v7;
                uint64_t v67 = v69;
                unsigned __int8 v68 = 2;
                goto LABEL_85;
              }
            }
          }
          __break(1u);
LABEL_94:
          __break(1u);
          JUMPOUT(0x10020DFECLL);
        }
      }
      sub_1001DCDF8(v7, v6, 2u);
      uint64_t v90 = v7;
      uint64_t v91 = v6;
      unsigned __int8 v92 = 2;
      goto LABEL_90;
    case 3:
      if (v7 >> 62)
      {
        sub_1001DCD9C(v7, v6, 3u);
        swift_bridgeObjectRetain();
        uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
        if (v45) {
          goto LABEL_43;
        }
        goto LABEL_89;
      }
      uint64_t v45 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1001DCD9C(v7, v6, 3u);
      swift_bridgeObjectRetain();
      if (!v45)
      {
LABEL_89:
        sub_1001DCDF8(v7, v6, 3u);
        uint64_t v90 = v7;
        uint64_t v91 = v6;
        unsigned __int8 v92 = 3;
LABEL_90:
        sub_1001DCDF8(v90, v91, v92);
        return _swiftEmptyArrayStorage;
      }
LABEL_43:
      if (v45 < 1) {
        goto LABEL_94;
      }
      uint64_t v94 = v6;
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v46 = 0;
        uint64_t v11 = _swiftEmptyArrayStorage;
        while (1)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v48 = MPCPlayerResponseItem.podcastEpisode.getter();
          if (v48 && (id v49 = (void *)v48, MPModelObject.uuid.getter(), v51 = v50, v49, v51))
          {
            EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v58 = MPCPlayerResponseItem.podcastEpisode.getter();
            if (!v58
              || (uint64_t v59 = (void *)v58, MPModelObject.adamID.getter(), v61 = v60, v59, (v61 & 1) != 0)
              || (AdamID.isEmpty.getter() & 1) != 0)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v11 = sub_1002EF490(0, v11[2] + 1, 1, v11);
              }
              unint64_t v63 = v11[2];
              unint64_t v62 = v11[3];
              if (v63 >= v62 >> 1) {
                uint64_t v11 = sub_1002EF490((void *)(v62 > 1), v63 + 1, 1, v11);
              }
              void v11[2] = v63 + 1;
              uint64_t v47 = &v11[3 * v63];
              v47[4] = 0;
              v47[5] = 0;
              *((unsigned char *)v47 + 48) = 2;
              goto LABEL_47;
            }
            EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
          }
          ModernEpisodeDownloadStateMachine.currentState.getter();
          swift_release();
          CurrentValueSubject.value.getter();
          swift_release();
          uint64_t v52 = v101;
          uint64_t v53 = v102;
          char v54 = v103;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v11 = sub_1002EF490(0, v11[2] + 1, 1, v11);
          }
          unint64_t v56 = v11[2];
          unint64_t v55 = v11[3];
          if (v56 >= v55 >> 1) {
            uint64_t v11 = sub_1002EF490((void *)(v55 > 1), v56 + 1, 1, v11);
          }
          void v11[2] = v56 + 1;
          uint64_t v57 = &v11[3 * v56];
          v57[4] = v52;
          void v57[5] = v53;
          *((unsigned char *)v57 + 48) = v54;
LABEL_47:
          ++v46;
          swift_unknownObjectRelease();
          if (v45 == v46) {
            goto LABEL_84;
          }
        }
      }
      uint64_t v70 = (id *)(v7 + 32);
      uint64_t v11 = _swiftEmptyArrayStorage;
      do
      {
        id v72 = *v70;
        uint64_t v73 = MPCPlayerResponseItem.podcastEpisode.getter();
        if (v73)
        {
          long long v74 = (void *)v73;
          MPModelObject.uuid.getter();
          uint64_t v76 = v75;

          if (v76)
          {
            EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
            swift_bridgeObjectRelease();
LABEL_71:
            ModernEpisodeDownloadStateMachine.currentState.getter();
            swift_release();
            CurrentValueSubject.value.getter();
            swift_release();
            uint64_t v77 = v101;
            uint64_t v78 = v102;
            char v79 = v103;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v11 = sub_1002EF490(0, v11[2] + 1, 1, v11);
            }
            unint64_t v81 = v11[2];
            unint64_t v80 = v11[3];
            if (v81 >= v80 >> 1) {
              uint64_t v11 = sub_1002EF490((void *)(v80 > 1), v81 + 1, 1, v11);
            }
            void v11[2] = v81 + 1;
            uint64_t v82 = &v11[3 * v81];
            v82[4] = v77;
            v82[5] = v78;
            *((unsigned char *)v82 + 48) = v79;
            goto LABEL_67;
          }
        }
        uint64_t v83 = MPCPlayerResponseItem.podcastEpisode.getter();
        if (v83)
        {
          uint64_t v84 = (void *)v83;
          MPModelObject.adamID.getter();
          char v86 = v85;

          if ((v86 & 1) == 0 && (AdamID.isEmpty.getter() & 1) == 0)
          {
            EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
            goto LABEL_71;
          }
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_1002EF490(0, v11[2] + 1, 1, v11);
        }
        unint64_t v88 = v11[2];
        unint64_t v87 = v11[3];
        if (v88 >= v87 >> 1) {
          uint64_t v11 = sub_1002EF490((void *)(v87 > 1), v88 + 1, 1, v11);
        }
        void v11[2] = v88 + 1;
        uint64_t v71 = &v11[3 * v88];
        v71[4] = 0;
        v71[5] = 0;
        *((unsigned char *)v71 + 48) = 2;
LABEL_67:

        ++v70;
        --v45;
      }
      while (v45);
LABEL_84:
      uint64_t v89 = v94;
      sub_1001DCDF8(v7, v94, 3u);
      uint64_t v66 = v7;
      uint64_t v67 = v89;
      unsigned __int8 v68 = 3;
LABEL_85:
      sub_1001DCDF8(v66, v67, v68);
      return v11;
    default:
      uint64_t v9 = *(void *)(v7 + 16);
      if (!v9) {
        return _swiftEmptyArrayStorage;
      }
      uint64_t v94 = v6;
      sub_1001DCD9C(v7, v6, 0);
      swift_bridgeObjectRetain();
      unint64_t v10 = v7 + 40;
      uint64_t v11 = _swiftEmptyArrayStorage;
      do
      {
        swift_bridgeObjectRetain();
        EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)();
        swift_bridgeObjectRelease();
        ModernEpisodeDownloadStateMachine.currentState.getter();
        swift_release();
        CurrentValueSubject.value.getter();
        swift_release();
        uint64_t v12 = v101;
        uint64_t v13 = v102;
        char v14 = v103;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_1002EF490(0, v11[2] + 1, 1, v11);
        }
        unint64_t v16 = v11[2];
        unint64_t v15 = v11[3];
        if (v16 >= v15 >> 1) {
          uint64_t v11 = sub_1002EF490((void *)(v15 > 1), v16 + 1, 1, v11);
        }
        v10 += 16;
        void v11[2] = v16 + 1;
        uint64_t v17 = &v11[3 * v16];
        v17[4] = v12;
        v17[5] = v13;
        *((unsigned char *)v17 + 48) = v14;
        --v9;
      }
      while (v9);
      sub_1001DCDF8(v99, v94, 0);
      swift_bridgeObjectRelease();
      return v11;
  }
}

uint64_t sub_10020DFFC()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EpisodeOfferStateCenter()
{
  return self;
}

uint64_t sub_10020E060()
{
  uint64_t v29 = *v0;
  uint64_t v1 = type metadata accessor for OSLogger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ActionMetricsBehavior();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
  uint64_t v11 = type metadata accessor for PresentationSource();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = PresentationSource.viewController.getter();
    if (v14)
    {
      unint64_t v15 = (void *)v14;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      id v16 = v15;
      uint64_t v17 = UIResponder.nearestActionRunner.getter();
      uint64_t v19 = v18;

      if (v17)
      {
        dispatch thunk of ContextActionsConfiguration.previewModel.getter();
        if (*((void *)&v32 + 1))
        {
          v27[1] = v19;
          sub_100042FC4(&v31, (uint64_t)v33);
          uint64_t v20 = v34;
          uint64_t v21 = v35;
          uint64_t v22 = sub_100041A98(v33, v34);
          uint64_t v23 = sub_100210B24((uint64_t)v22, v29, v20, v21);
          sub_10004D2D8((uint64_t)v33);
          if (v23)
          {
            type metadata accessor for ActionRunnerOptions();
            ContextActionsConfiguration.objectGraph.getter();
            BaseObjectGraph.__allocating_init(_:)();
            long long v31 = 0u;
            long long v32 = 0u;
            id v24 = [v16 view];
            sub_100054BBC((uint64_t)&v31, (uint64_t)v30, &qword_1005F5D30);
            id v25 = v24;
            ActionOrigin.init(sender:view:)();
            ActionRunnerOptions.withActionOrigin(_:)();
            sub_100054B1C((uint64_t)v33, (uint64_t *)&unk_100600670);
            swift_release();

            sub_100054B1C((uint64_t)&v31, &qword_1005F5D30);
            swift_getObjectType();
            uint64_t v34 = type metadata accessor for Action();
            unint64_t v35 = sub_1001D61A8();
            v33[0] = v23;
            uint64_t v26 = v28;
            (*(void (**)(char *, void, uint64_t))(v28 + 104))(v7, enum case for ActionMetricsBehavior.fromAction(_:), v5);
            swift_retain();
            ActionRunner.perform(_:withMetrics:asPartOf:)();

            swift_release();
            swift_unknownObjectRelease();
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
            return sub_10004D2D8((uint64_t)v33);
          }
        }
        else
        {
          sub_100054B1C((uint64_t)&v31, (uint64_t *)&unk_100600590);
        }

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    }
    static OSLogger.actions.getter();
    sub_100054B78((uint64_t *)&unk_100603DC0);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10046D010;
    LogMessage.init(stringLiteral:)();
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_10020E59C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of ContextActionsConfiguration.previewModel.getter();
  if (v19)
  {
    sub_100042FC4(&v18, (uint64_t)v20);
    uint64_t v5 = v21;
    uint64_t v6 = v22;
    unint64_t v7 = sub_100041A98(v20, v21);
    uint64_t v8 = sub_100210B24((uint64_t)v7, v1, v5, v6);
    sub_10004D2D8((uint64_t)v20);
    if (v8)
    {
      type metadata accessor for FlowAction();
      if (swift_dynamicCastClass())
      {
        dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
        uint64_t v9 = type metadata accessor for PresentationSource();
        uint64_t v10 = *(void *)(v9 - 8);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9);
        if (result == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v12 = PresentationSource.viewController.getter();
        uint64_t v13 = (void (**)(char *, uint64_t))(v10 + 8);
        if (v12)
        {
          uint64_t v14 = (void *)v12;
          (*v13)(v4, v9);
          id v15 = [v14 traitCollection];
          id v16 = [v15 horizontalSizeClass];

          swift_release();
          if (v16 == (id)1) {
            return 1;
          }
        }
        else
        {
          swift_release();
          (*v13)(v4, v9);
        }
      }
      else
      {
        swift_release();
      }
    }
  }
  else
  {
    sub_100054B1C((uint64_t)&v18, (uint64_t *)&unk_100600590);
  }
  type metadata accessor for ContextActionsConfiguration();
  uint64_t v17 = (uint64_t (*)(void))method lookup function for ContextActionsConfiguration();
  return v17();
}

uint64_t sub_10020E7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for InteractionContext();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = sub_100054B78((uint64_t *)&unk_100605DC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_allocObject();
  sub_100054BBC(a2, (uint64_t)v13, (uint64_t *)&unk_100605DC0);
  sub_100054BBC(a3, (uint64_t)v17, (uint64_t *)&unk_100600590);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
  uint64_t v14 = ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a4, v7);
  sub_100054B1C(a3, (uint64_t *)&unk_100600590);
  sub_100054B1C(a2, (uint64_t *)&unk_100605DC0);
  return v14;
}

uint64_t sub_10020E9C8()
{
  ContextActionsConfiguration.deinit();

  return swift_deallocClassInstance();
}

void sub_10020E9F8()
{
}

uint64_t sub_10020EA14()
{
  return swift_release();
}

uint64_t sub_10020EA24()
{
  return sub_10020EB70();
}

void sub_10020EA30()
{
}

uint64_t sub_10020EA4C()
{
  swift_release();

  uint64_t v1 = v0 + qword_1005FAD78;

  return sub_10004D2D8(v1);
}

uint64_t sub_10020EA9C()
{
  uint64_t v0 = ContextActionsConfiguration.deinit();
  swift_release();

  sub_10004D2D8(v0 + qword_1005FAD78);

  return swift_deallocClassInstance();
}

uint64_t sub_10020EB0C()
{
  return swift_retain();
}

uint64_t sub_10020EB20()
{
  return *(void *)(*v0 + qword_1005FAD70);
}

void sub_10020EB38()
{
}

uint64_t sub_10020EB54()
{
  return swift_release();
}

uint64_t sub_10020EB64()
{
  return sub_10020EB70();
}

uint64_t sub_10020EB70()
{
  ContextActionsConfiguration.deinit();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10020EBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v31 = a4;
  uint64_t v36 = a3;
  uint64_t v37 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = type metadata accessor for InteractionContext();
  uint64_t v30 = *(void *)(v34 - 8);
  uint64_t v10 = v30;
  uint64_t v11 = __chkstk_darwin(v34);
  unint64_t v35 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  long long v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v30 - v19;
  sub_10021165C(a3, v5 + qword_10061AA30);
  uint64_t v21 = type metadata accessor for PresentationSource();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v32 = v21;
  v23(v20, a2, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  sub_100054BBC(a4, (uint64_t)v39, (uint64_t *)&unk_100600590);
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v25 = v34;
  v24(v14, (uint64_t)a5, v34);
  sub_100054BBC((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_100605DC0);
  sub_100054BBC((uint64_t)v39, (uint64_t)v38, (uint64_t *)&unk_100600590);
  uint64_t v26 = v25;
  v24(v35, (uint64_t)v14, v25);
  uint64_t v27 = ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v30 + 8);
  v28(v14, v26);
  sub_100054B1C((uint64_t)v39, (uint64_t *)&unk_100600590);
  sub_100054B1C((uint64_t)v20, (uint64_t *)&unk_100605DC0);
  v28(a5, v26);
  sub_100054B1C(v31, (uint64_t *)&unk_100600590);
  sub_1002116C0(v36);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v33, v32);
  return v27;
}

void sub_10020EEF0()
{
}

uint64_t sub_10020EF0C()
{
  return sub_1002116C0(v0 + qword_10061AA30);
}

uint64_t sub_10020EF1C()
{
  uint64_t v0 = ContextActionsConfiguration.deinit();
  sub_1002116C0(v0 + qword_10061AA30);

  return swift_deallocClassInstance();
}

uint64_t sub_10020EF90()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10020EFD8()
{
  uint64_t v0 = ContextActionsConfiguration.deinit();
  sub_100054B1C(v0 + qword_10061AA78, (uint64_t *)&unk_100600600);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_10020F07C()
{
}

void sub_10020F098()
{
}

void sub_10020F0B4()
{
}

uint64_t sub_10020F0E0()
{
  ContextActionsConfiguration.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_10020F110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F88A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100056D54(a1, (uint64_t)&v39);
  sub_100054B78(&qword_1005F8418);
  sub_100054B78(&qword_1005FAF78);
  if (swift_dynamicCast())
  {
    sub_100041A98(&v41, *((uint64_t *)&v42 + 1));
    dispatch thunk of ClickableModel.clickAction.getter();
    sub_10004D2D8((uint64_t)&v41);
  }
  else
  {
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    sub_100054B1C((uint64_t)&v41, &qword_100600620);
    memset(v44, 0, sizeof(v44));
    uint64_t v45 = 0;
  }
  sub_100054BBC((uint64_t)v44, (uint64_t)&v41, (uint64_t *)&unk_1005F89E0);
  uint64_t v14 = *((void *)&v42 + 1);
  if (*((void *)&v42 + 1))
  {
    uint64_t v15 = sub_100041A98(&v41, *((uint64_t *)&v42 + 1));
    *((void *)&v38 + 1) = v14;
    uint64_t v16 = sub_10004A244((uint64_t *)&v37);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v16, v15, v14);
    sub_10004D2D8((uint64_t)&v41);
  }
  else
  {
    sub_100054B1C((uint64_t)&v41, (uint64_t *)&unk_1005F89E0);
    long long v37 = 0u;
    long long v38 = 0u;
  }
  sub_100056D54(a1, (uint64_t)&v41);
  if (*((void *)&v38 + 1))
  {
    sub_10004D384(&v37, &v39);
  }
  else
  {
    uint64_t v17 = *((void *)&v42 + 1);
    long long v18 = sub_100041A98(&v41, *((uint64_t *)&v42 + 1));
    uint64_t v40 = v17;
    uint64_t v19 = sub_10004A244((uint64_t *)&v39);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v19, v18, v17);
    sub_100054B1C((uint64_t)&v37, &qword_1005F5D30);
  }
  sub_10004D2D8((uint64_t)&v41);
  sub_100054B78(&qword_1005FAF80);
  type metadata accessor for FlowAction();
  if (!swift_dynamicCast()) {
    goto LABEL_25;
  }
  dispatch thunk of FlowAction.destination.getter();
  uint64_t v20 = type metadata accessor for FlowDestination();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) != 1)
  {
    FlowDestination.pageDestinationURL.getter();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
      goto LABEL_14;
    }
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v24 = URL.scheme.getter();
    if (v25)
    {
      uint64_t v26 = v24;
      uint64_t v27 = v25;
      if (v24 == 1886680168 && v25 == 0xE400000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || v26 == 0x7370747468 && v27 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v28 = sub_100054B78((uint64_t *)&unk_100600600);
        uint64_t v29 = (uint64_t *)(a2 + *(int *)(v28 + 48));
        (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a2, v13, v10);
        swift_retain();
        uint64_t v30 = Action.title.getter();
        uint64_t v32 = v31;
        swift_release_n();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        sub_100054B1C((uint64_t)v44, (uint64_t *)&unk_1005F89E0);
        *uint64_t v29 = v30;
        v29[1] = v32;
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a2, 0, 1, v28);
      }
      char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_22;
      }
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_25:
    uint64_t v22 = (uint64_t *)&unk_1005F89E0;
    uint64_t v23 = v44;
    goto LABEL_26;
  }
  sub_100054B1C((uint64_t)v6, (uint64_t *)&unk_1005F88A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_14:
  swift_release();
  sub_100054B1C((uint64_t)v44, (uint64_t *)&unk_1005F89E0);
  uint64_t v22 = (uint64_t *)&unk_1005F7750;
  uint64_t v23 = v9;
LABEL_26:
  sub_100054B1C((uint64_t)v23, v22);
  uint64_t v35 = sub_100054B78((uint64_t *)&unk_100600600);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a2, 1, 1, v35);
}

uint64_t sub_10020F768()
{
  return sub_100054B1C(v0 + qword_10061AA78, (uint64_t *)&unk_100600600);
}

uint64_t sub_10020F794()
{
  uint64_t v0 = ContextActionsConfiguration.deinit();
  sub_100054B1C(v0 + qword_10061AA78, (uint64_t *)&unk_100600600);

  return swift_deallocClassInstance();
}

uint64_t sub_10020F810()
{
  uint64_t v0 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v30 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v30 - v8;
  sub_1001C6F20();
  dispatch thunk of NowPlayingContextActionConfiguration.modelObject.getter();
  id v10 = (id)IMPlayerItem.init(modelObject:includeArtworkCatalog:)();
  type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
  uint64_t v11 = swift_dynamicCastClass();
  if ((uint64_t)[v10 podcastStoreId] < 1 || (uint64_t)objc_msgSend(v10, "episodeStoreId") < 1)
  {
    uint64_t v19 = (void *)dispatch thunk of NowPlayingContextActionConfiguration.modelObject.getter();
    uint64_t v20 = MPModelObject.uuid.getter();
    uint64_t v22 = v21;

    if (!v22)
    {

      return 0;
    }
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_10046D010;
    *(void *)(v23 + 32) = v20;
    *(void *)(v23 + 4sub_1001DA808(0, 0) = v22;
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for PreviewingPresentationHint.inferTab(_:), v0);
    type metadata accessor for EpisodeContextActionData();
    uint64_t v15 = swift_allocObject();
    uint64_t v24 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
    *(void *)(v15 + v24) = [self sharedInstance];
    *(void *)(v15 + 16) = v23;
    *(void *)(v15 + 24) = 0;
    *(unsigned char *)(v15 + 32) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v15 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v4, v0);
    *(unsigned char *)(v15 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
    sub_10040315C();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    goto LABEL_13;
  }
  if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0
    || (uint64_t v12 = dispatch thunk of NowPlayingContextActionConfiguration.playerResponseItem.getter()) == 0)
  {
    sub_100054B78((uint64_t *)&unk_1005FA7F0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10046D060;
    *(void *)(v25 + 32) = v10;
    uint64_t v31 = v25;
    specialized Array._endMutation()();
    uint64_t v26 = v31;
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v7, enum case for PreviewingPresentationHint.inferTab(_:), v0);
    type metadata accessor for EpisodeContextActionData();
    uint64_t v15 = swift_allocObject();
    uint64_t v27 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
    uint64_t v28 = self;
    id v10 = v10;
    *(void *)(v15 + v27) = [v28 sharedInstance];
    *(void *)(v15 + 16) = v26;
    *(void *)(v15 + 24) = 0;
    *(unsigned char *)(v15 + 32) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v15 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v7, v0);
    *(unsigned char *)(v15 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
    if (!v11) {
      sub_10040315C();
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
LABEL_13:

    return v15;
  }
  uint64_t v13 = (void *)v12;
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10046D060;
  *(void *)(v14 + 32) = v13;
  uint64_t v31 = v14;
  specialized Array._endMutation()();
  uint64_t v30 = v31;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v9, enum case for PreviewingPresentationHint.inferTab(_:), v0);
  type metadata accessor for EpisodeContextActionData();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
  uint64_t v17 = self;
  id v18 = v13;
  *(void *)(v15 + v16) = [v17 sharedInstance];
  *(void *)(v15 + 16) = v30;
  *(void *)(v15 + 24) = 0;
  *(unsigned char *)(v15 + 32) = 3;
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v15 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v9, v0);
  *(unsigned char *)(v15 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
  if (!v11) {
    sub_10040315C();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);

  return v15;
}

uint64_t sub_10020FD0C()
{
  return sub_10020F810();
}

uint64_t type metadata accessor for MarmosetContextActionsConfiguration(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1005FACB8);
}

uint64_t sub_10020FD50()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10020FD90()
{
  return type metadata accessor for MarmosetContextActionsConfiguration(0);
}

uint64_t type metadata accessor for EpisodeContextActionConfiguration(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1005FAD10);
}

uint64_t sub_10020FDB8()
{
  return sub_100210024();
}

uint64_t sub_10020FDD0()
{
  return type metadata accessor for EpisodeContextActionConfiguration(0);
}

uint64_t type metadata accessor for TranscriptSelectionContextActionConfiguration(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1005FAD80);
}

uint64_t sub_10020FDF8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10020FE68()
{
  return type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
}

uint64_t type metadata accessor for PodcastContextActionConfiguration(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1005FADD8);
}

uint64_t sub_10020FE90()
{
  return sub_100210024();
}

uint64_t sub_10020FEA8()
{
  return type metadata accessor for PodcastContextActionConfiguration(0);
}

uint64_t type metadata accessor for StationShowContextActionConfiguration(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1005FAE28);
}

uint64_t sub_10020FED0()
{
  uint64_t result = type metadata accessor for StationShowContextActionData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10020FF68()
{
  return type metadata accessor for StationShowContextActionConfiguration(0);
}

uint64_t type metadata accessor for ChannelContextActionConfiguration(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1005FAE78);
}

uint64_t sub_10020FF90()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10020FFE4()
{
  return type metadata accessor for ChannelContextActionConfiguration(0);
}

uint64_t type metadata accessor for CategoryContextActionConfiguration(uint64_t a1)
{
  return sub_10004F778(a1, (uint64_t *)&unk_1005FAEF8);
}

uint64_t sub_10021000C()
{
  return sub_100210024();
}

uint64_t sub_100210024()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100210068()
{
  return type metadata accessor for CategoryContextActionConfiguration(0);
}

uint64_t type metadata accessor for OtherContextActionConfiguration(uint64_t a1)
{
  return sub_10004F778(a1, qword_1005FAF48);
}

uint64_t sub_100210090()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v3 = &v2;
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100210148()
{
  return type metadata accessor for OtherContextActionConfiguration(0);
}

void *sub_100210150(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StationShowContextActionData();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = __chkstk_darwin(v5);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v23 - v16;
  __chkstk_darwin(v15);
  id v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v18((char *)&v23 - v19, v2, a1);
  type metadata accessor for ChannelContextActionConfiguration(0);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)AdamID.init(_:)();
    swift_release();
  }
  else
  {
    v18(v17, v2, a1);
    type metadata accessor for CategoryContextActionConfiguration(0);
    if (swift_dynamicCast())
    {
      uint64_t v20 = *(void **)(v24 + qword_1005FAEF0);
      swift_release();
    }
    else
    {
      v18(v14, v2, a1);
      type metadata accessor for PodcastContextActionConfiguration(0);
      if (!swift_dynamicCast())
      {
        v18(v11, v2, a1);
        type metadata accessor for StationShowContextActionConfiguration(0);
        if (swift_dynamicCast())
        {
          sub_10021165C(v24 + qword_10061AA30, (uint64_t)v7);
          uint64_t v20 = (void *)sub_10021F088();
          sub_1002116C0((uint64_t)v7);
          if (!v20)
          {
            swift_release();
            return v20;
          }
          id v21 = [v20 podcast];

          if (v21)
          {
            uint64_t v20 = (void *)MTPodcast.adamId.getter();

            swift_release();
            return v20;
          }
          swift_release();
        }
        return 0;
      }
      swift_retain();
      sub_100241804();
      swift_release();
      uint64_t v20 = (void *)AdamID.init(_:)();
      swift_release();
    }
  }
  return v20;
}

uint64_t sub_1002104DC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  char v61 = a4;
  uint64_t v62 = a2;
  uint64_t v59 = a3;
  uint64_t v60 = a1;
  uint64_t v10 = *a5;
  uint64_t v11 = type metadata accessor for InteractionContext();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v56 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v57 = (char *)&v51 - v15;
  uint64_t v16 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v54 = (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v55 = (uint64_t)&v51 - v19;
  uint64_t v20 = sub_100054B78(&qword_1005FAF70);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100054B78((uint64_t *)&unk_100600600);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v53 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v58 = (uint64_t)&v51 - v27;
  v65[3] = a6;
  v65[4] = a7;
  uint64_t v28 = sub_10004A244(v65);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v28, v59, a6);
  swift_retain();
  if (sub_100210B24((uint64_t)v28, v10, a6, a7))
  {
    uint64_t v52 = v12;
    uint64_t v59 = v11;
    swift_release();
    sub_10020F110((uint64_t)v65, (uint64_t)v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
    {
      uint64_t v32 = *(int *)(v23 + 48);
      uint64_t v33 = v58;
      char v34 = (void *)(v58 + v32);
      uint64_t v35 = &v22[v32];
      uint64_t v36 = type metadata accessor for URL();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v51 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
      v51(v33, v22, v36);
      uint64_t v39 = *(void *)v35;
      uint64_t v38 = *((void *)v35 + 1);
      *char v34 = v39;
      v34[1] = v38;
      uint64_t v40 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v53, v33, v36);
      long long v41 = (char *)a5 + qword_10061AA78;
      v51((uint64_t)a5 + qword_10061AA78, v40, v36);
      long long v42 = &v41[*(int *)(v23 + 48)];
      *(void *)long long v42 = v39;
      *((void *)v42 + 1) = v38;
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v43 = v55;
      sub_100054BBC(v62, v55, (uint64_t *)&unk_100605DC0);
      sub_100056D54((uint64_t)v65, (uint64_t)v64);
      uint64_t v44 = v52;
      uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
      uint64_t v46 = v57;
      uint64_t v47 = v61;
      uint64_t v48 = v59;
      v45(v57, (uint64_t)v61, v59);
      sub_100054BBC(v43, v54, (uint64_t *)&unk_100605DC0);
      sub_100054BBC((uint64_t)v64, (uint64_t)v63, (uint64_t *)&unk_100600590);
      v45(v56, (uint64_t)v46, v48);
      uint64_t v31 = ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)();
      id v49 = *(void (**)(char *, uint64_t))(v44 + 8);
      v49(v46, v48);
      sub_100054B1C((uint64_t)v64, (uint64_t *)&unk_100600590);
      sub_100054B1C(v43, (uint64_t *)&unk_100605DC0);
      v49(v47, v48);
      sub_10004D2D8((uint64_t)v65);
      sub_100054B1C(v62, (uint64_t *)&unk_100605DC0);
      sub_100054B1C(v58, (uint64_t *)&unk_100600600);
      return v31;
    }
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v61, v59);
    sub_10004D2D8((uint64_t)v65);
    sub_100054B1C(v62, (uint64_t *)&unk_100605DC0);
    uint64_t v29 = &qword_1005FAF70;
    uint64_t v30 = (uint64_t)v22;
  }
  else
  {
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v61, v11);
    sub_10004D2D8((uint64_t)v65);
    uint64_t v29 = (uint64_t *)&unk_100605DC0;
    uint64_t v30 = v62;
  }
  sub_100054B1C(v30, v29);
  type metadata accessor for OtherContextActionConfiguration(0);
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_100210B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[3] = a3;
  void v15[4] = a4;
  uint64_t v6 = sub_10004A244(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v6, a1, a3);
  sub_100056D54((uint64_t)v15, (uint64_t)v13);
  sub_100054B78(&qword_1005F8418);
  type metadata accessor for FlowAction();
  if (!swift_dynamicCast())
  {
    sub_100056D54((uint64_t)v15, (uint64_t)v12);
    sub_100054B78(&qword_1005FAF88);
    if (swift_dynamicCast())
    {
      sub_100042FC4(&v9, (uint64_t)v13);
      sub_100041A98(v13, v14);
      uint64_t v7 = dispatch thunk of CustomPreviewActionModel.previewAction.getter();
      sub_10004D2D8((uint64_t)v13);
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = 0;
      long long v9 = 0u;
      long long v10 = 0u;
      sub_100054B1C((uint64_t)&v9, (uint64_t *)&unk_100600610);
    }
    sub_100056D54((uint64_t)v15, (uint64_t)v12);
    sub_100054B78(&qword_1005FAF78);
    if (swift_dynamicCast())
    {
      sub_100042FC4(&v9, (uint64_t)v13);
      sub_100041A98(v13, v14);
      dispatch thunk of ClickableModel.clickAction.getter();
      if (v12[3])
      {
        sub_100054B78(&qword_1005F82A0);
        type metadata accessor for Action();
        if (swift_dynamicCast())
        {
          uint64_t v7 = v9;
          sub_10004D2D8((uint64_t)v13);
          goto LABEL_15;
        }
      }
      else
      {
        sub_100054B1C((uint64_t)v12, (uint64_t *)&unk_1005F89E0);
      }
      sub_10004D2D8((uint64_t)v13);
    }
    else
    {
      uint64_t v11 = 0;
      long long v9 = 0u;
      long long v10 = 0u;
      sub_100054B1C((uint64_t)&v9, &qword_100600620);
    }
    uint64_t v7 = 0;
    goto LABEL_15;
  }
  uint64_t v7 = v12[0];
LABEL_15:
  sub_10004D2D8((uint64_t)v15);
  return v7;
}

uint64_t sub_100210D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v32 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = a1;
  uint64_t v31 = a3;
  uint64_t v33 = a2;
  uint64_t v9 = type metadata accessor for InteractionContext();
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v10 = v29;
  uint64_t v30 = v9;
  uint64_t v11 = __chkstk_darwin(v9);
  char v34 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v29 - v19;
  *(void *)(v5 + qword_1005FAD08) = a3;
  uint64_t v21 = type metadata accessor for PresentationSource();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a2, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  sub_100054BBC(a4, (uint64_t)v38, (uint64_t *)&unk_100600590);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v24 = v35;
  uint64_t v25 = v30;
  v23(v14, (uint64_t)v35, v30);
  sub_100054BBC((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_100605DC0);
  sub_100054BBC((uint64_t)v38, (uint64_t)v37, (uint64_t *)&unk_100600590);
  v23(v34, (uint64_t)v14, v25);
  swift_retain();
  uint64_t v26 = ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v29 + 8);
  v27(v14, v25);
  sub_100054B1C((uint64_t)v38, (uint64_t *)&unk_100600590);
  sub_100054B1C((uint64_t)v20, (uint64_t *)&unk_100605DC0);
  v27(v24, v25);
  sub_100054B1C(v32, (uint64_t *)&unk_100600590);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v33, v21);
  return v26;
}

uint64_t sub_100211074(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, char *a6, double a7)
{
  uint64_t v43 = a6;
  uint64_t v40 = a5;
  id v35 = a4;
  v34[1] = a3;
  uint64_t v38 = a2;
  uint64_t v42 = a1;
  uint64_t v39 = type metadata accessor for InteractionContext();
  v34[0] = *(void *)(v39 - 8);
  uint64_t v13 = v34[0];
  uint64_t v14 = __chkstk_darwin(v39);
  long long v41 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v36 = (char *)v34 - v16;
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v34 - v21;
  *(void *)(v7 + qword_1005FAD6sub_1001DA808(0, 0) = a3;
  *(void *)(v7 + qword_1005FAD68) = a4;
  *(double *)(v7 + qword_1005FAD7sub_1001DA808(0, 0) = a7;
  sub_100056D54(a5, v7 + qword_1005FAD78);
  uint64_t v23 = type metadata accessor for PresentationSource();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v37 = v23;
  v25(v22, a2, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v23);
  uint64_t v46 = 0;
  memset(v45, 0, sizeof(v45));
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v27 = v36;
  uint64_t v28 = v39;
  v26(v36, (uint64_t)v43, v39);
  sub_100054BBC((uint64_t)v22, (uint64_t)v20, (uint64_t *)&unk_100605DC0);
  sub_100054BBC((uint64_t)v45, (uint64_t)v44, (uint64_t *)&unk_100600590);
  uint64_t v29 = v28;
  v26(v41, (uint64_t)v27, v28);
  swift_retain();
  id v30 = v35;
  uint64_t v31 = ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v34[0] + 8);
  v32(v27, v29);
  sub_100054B1C((uint64_t)v45, (uint64_t *)&unk_100600590);
  sub_100054B1C((uint64_t)v22, (uint64_t *)&unk_100605DC0);
  v32(v43, v29);
  sub_10004D2D8(v40);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v38, v37);
  return v31;
}

uint64_t sub_1002113D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v6 = v5;
  uint64_t v29 = a4;
  id v30 = a5;
  uint64_t v31 = a2;
  uint64_t v28 = a3;
  uint64_t v32 = a1;
  uint64_t v10 = type metadata accessor for InteractionContext();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v17 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v28 - v21;
  *(void *)(v6 + qword_1005FADDsub_1001DA808(0, 0) = a3;
  sub_100054BBC(a2, (uint64_t)&v28 - v21, (uint64_t *)&unk_100605DC0);
  sub_100054BBC(a4, (uint64_t)v34, (uint64_t *)&unk_100600590);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v24 = v30;
  v23(v16, (uint64_t)v30, v10);
  sub_100054BBC((uint64_t)v22, (uint64_t)v20, (uint64_t *)&unk_100605DC0);
  sub_100054BBC((uint64_t)v34, (uint64_t)v33, (uint64_t *)&unk_100600590);
  v23(v14, (uint64_t)v16, v10);
  swift_retain();
  uint64_t v25 = ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v26(v16, v10);
  sub_100054B1C((uint64_t)v34, (uint64_t *)&unk_100600590);
  sub_100054B1C((uint64_t)v22, (uint64_t *)&unk_100605DC0);
  v26(v24, v10);
  sub_100054B1C(v29, (uint64_t *)&unk_100600590);
  sub_100054B1C(v31, (uint64_t *)&unk_100605DC0);
  return v25;
}

uint64_t sub_10021165C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StationShowContextActionData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002116C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StationShowContextActionData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002117F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_10046D010;
    *(void *)(v8 + 32) = a1;
    *(void *)(v8 + 4sub_1001DA808(0, 0) = a2;
    objc_allocWithZone((Class)type metadata accessor for NetworkMediaManifest());
    uint64_t v9 = 0;
    uint64_t v10 = (void *)v8;
    uint64_t v11 = 0;
  }
  else
  {
    objc_allocWithZone((Class)type metadata accessor for NetworkMediaManifest());
    uint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v9 = a1;
    uint64_t v11 = a1;
  }
  uint64_t v12 = sub_100211C80(v9, 0, (uint64_t)v10, v11, 0, a3, a4);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v12;
}

uint64_t sub_100211C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v53 = a6;
  uint64_t v54 = a7;
  uint64_t v50 = a5;
  uint64_t v51 = a2;
  uint64_t v46 = a4;
  uint64_t v52 = a3;
  uint64_t v45 = a1;
  uint64_t v49 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v9 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v12);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v13 - 8);
  *(void *)&v7[OBJC_IVAR___MTNetworkMediaManifest_forwardItemCount] = 1;
  *(void *)&v7[OBJC_IVAR___MTNetworkMediaManifest_episodeFetchLimit] = 5;
  uint64_t v48 = OBJC_IVAR___MTNetworkMediaManifest_manifestWorkQueue;
  uint64_t v47 = sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  uint64_t v14 = v7;
  static DispatchQoS.unspecified.getter();
  uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100055BB0((unint64_t *)&qword_1005F5BE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100054B78((uint64_t *)&unk_1005F7A60);
  sub_100044200((unint64_t *)&qword_1005F5BF0, (uint64_t *)&unk_1005F7A60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v49);
  uint64_t v15 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v16 = v50;
  *(void *)&v8[v48] = v15;
  uint64_t v17 = OBJC_IVAR___MTNetworkMediaManifest_mediaRequestController;
  *(void *)&v14[v17] = [objc_allocWithZone((Class)type metadata accessor for MediaRequestController()) init];
  uint64_t v18 = OBJC_IVAR___MTNetworkMediaManifest_initialIds;
  *(void *)&v14[OBJC_IVAR___MTNetworkMediaManifest_initialIds] = 0;
  v14[OBJC_IVAR___MTNetworkMediaManifest_hasOnlyPaidEpisodesWithoutSubscription] = 0;
  v14[OBJC_IVAR___MTNetworkMediaManifest_refreshInProgress] = 0;
  *(void *)&v14[OBJC_IVAR___MTNetworkMediaManifest_inProgressRefreshHandlers] = _swiftEmptyArrayStorage;
  if (v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10046D010;
    *(void *)(v19 + 32) = v46;
    *(void *)(v19 + 4sub_1001DA808(0, 0) = v16;
    *(void *)&v14[v18] = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = &v14[OBJC_IVAR___MTNetworkMediaManifest_contentType];
    uint64_t v21 = enum case for MediaRequest.ContentType.podcastStation(_:);
    uint64_t v22 = type metadata accessor for MediaRequest.ContentType();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v20, v21, v22);
    uint64_t v23 = v53;
    goto LABEL_9;
  }
  uint64_t v24 = v45;
  uint64_t v25 = v52;
  uint64_t v23 = v53;
  if (v52)
  {
    swift_bridgeObjectRelease();
    *(void *)&v14[v18] = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = &v14[OBJC_IVAR___MTNetworkMediaManifest_contentType];
    uint64_t v27 = (unsigned int *)&enum case for MediaRequest.ContentType.podcastEpisode(_:);
  }
  else
  {
    if (!v51)
    {
      uint64_t v26 = &v14[OBJC_IVAR___MTNetworkMediaManifest_contentType];
      uint64_t v30 = enum case for MediaRequest.ContentType.podcast(_:);
      goto LABEL_8;
    }
    uint64_t v28 = v51;
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_10046D010;
    *(void *)(v29 + 32) = v24;
    *(void *)(v29 + 4sub_1001DA808(0, 0) = v28;
    *(void *)&v14[v18] = v29;
    swift_bridgeObjectRelease();
    uint64_t v26 = &v14[OBJC_IVAR___MTNetworkMediaManifest_contentType];
    uint64_t v27 = (unsigned int *)&enum case for MediaRequest.ContentType.podcast(_:);
  }
  uint64_t v30 = *v27;
LABEL_8:
  uint64_t v31 = type metadata accessor for MediaRequest.ContentType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v26, v30, v31);
LABEL_9:

  uint64_t v32 = (objc_class *)type metadata accessor for NetworkMediaManifest();
  v65.receiver = v14;
  v65.super_class = v32;
  id v33 = [super init];
  sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
  char v34 = (char *)v33;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v34 setItems:isa];

  if (v54)
  {
    uint64_t aBlock = (void **)v23;
    uint64_t v60 = v54;
    uint64_t v57 = 10;
    unint64_t v58 = 0xE100000000000000;
    uint64_t v55 = 28252;
    unint64_t v56 = 0xE200000000000000;
    sub_1001AA530();
    uint64_t v23 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = 0;
  }
  uint64_t v38 = *(NSObject **)&v34[OBJC_IVAR___MTNetworkMediaManifest_manifestWorkQueue];
  uint64_t v39 = (void *)swift_allocObject();
  void v39[2] = v34;
  void v39[3] = v23;
  v39[4] = v37;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_100219274;
  *(void *)(v40 + 24) = v39;
  unint64_t v63 = sub_10004A010;
  uint64_t v64 = v40;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v60 = 1107296256;
  char v61 = sub_100018818;
  uint64_t v62 = &unk_100559EF0;
  long long v41 = _Block_copy(&aBlock);
  uint64_t v42 = v34;
  swift_retain();
  swift_release();
  dispatch_sync(v38, v41);

  _Block_release(v41);
  LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v38 & 1) == 0) {
    return (uint64_t)v42;
  }
  __break(1u);
  return result;
}

void sub_100212350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v4 = type metadata accessor for MediaRequest.ContentType();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v44 = (char *)&v42 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v48 = (char *)&v42 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v42 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v51 = a1;
  uint64_t v17 = a1 + OBJC_IVAR___MTNetworkMediaManifest_contentType;
  swift_beginAccess();
  uint64_t v18 = (void (*)(char *, uint64_t, uint64_t))v5[2];
  uint64_t v47 = v17;
  v18(v16, v17, v4);
  uint64_t v45 = (void (*)(char *, void, uint64_t))v5[13];
  uint64_t v46 = v5 + 13;
  v45(v14, enum case for MediaRequest.ContentType.podcastStation(_:), v4);
  sub_100055BB0(&qword_1005FB008, (void (*)(uint64_t))&type metadata accessor for MediaRequest.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v52 == v54 && v53 == v55) {
    char v19 = 1;
  }
  else {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v5;
  uint64_t v20 = (void (*)(char *, uint64_t))v5[1];
  v20(v14, v4);
  v20(v16, v4);
  if (v19)
  {
    sub_1002157D0(v49, v50);
    return;
  }
  uint64_t v21 = v47;
  v18(v48, v47, v4);
  uint64_t v22 = v44;
  uint64_t v23 = v45;
  v45(v44, enum case for MediaRequest.ContentType.podcastEpisode(_:), v4);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v52 == v54 && v53 == v55)
  {
    swift_bridgeObjectRelease_n();
    v20(v22, v4);
    v20(v48, v4);
  }
  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20(v22, v4);
    v20(v48, v4);
    if ((v24 & 1) == 0)
    {
      sub_1002161D0(v49, v50);
      return;
    }
  }
  uint64_t v25 = v51;
  unint64_t v26 = (unint64_t)sub_100215C2C(v49, v50);
  unint64_t v27 = v26;
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v40) {
      goto LABEL_27;
    }
  }
  else if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    return;
  }
  if ((v27 & 0xC000000000000001) != 0)
  {
    id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v32 = v43;
      if (!v41) {
        goto LABEL_27;
      }
      goto LABEL_20;
    }
    id v28 = *(id *)(v27 + 32);
  }
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)dispatch thunk of ServerPodcastEpisode.relationships.getter();

  if (!v30) {
    return;
  }
  uint64_t v31 = (void *)PodcastEpisodeRelationships.podcast.getter();

  if (!v31) {
    return;
  }
  unint64_t v27 = PodcastRelationshipContainer.data.getter();

  if (v27 >> 62) {
    goto LABEL_30;
  }
  uint64_t v32 = v43;
  if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_27;
  }
LABEL_20:
  if ((v27 & 0xC000000000000001) != 0)
  {
    id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_23;
  }
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v33 = *(id *)(v27 + 32);
LABEL_23:
    char v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v35 = ServerPodcastBase.id.getter();
    uint64_t v37 = v36;

    uint64_t v38 = v42;
    v23(v42, enum case for MediaRequest.ContentType.podcast(_:), v4);
    swift_beginAccess();
    ((void (*)(uint64_t, char *, uint64_t))v32[5])(v21, v38, v4);
    swift_endAccess();
    sub_100054B78((uint64_t *)&unk_1005F83F0);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_10046D010;
    *(void *)(v39 + 32) = v35;
    *(void *)(v39 + 4sub_1001DA808(0, 0) = v37;
    *(void *)(v25 + OBJC_IVAR___MTNetworkMediaManifest_initialIds) = v39;
    goto LABEL_27;
  }
  __break(1u);
  __break(1u);
}

id sub_1002129E8(uint64_t (*a1)(id), uint64_t a2)
{
  id result = [v2 items];
  if (result)
  {
    uint64_t v6 = result;
    sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id result = (id)swift_bridgeObjectRelease();
    if (v8)
    {
      if (a1) {
        return (id)a1(result);
      }
    }
    else
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      uint64_t v9 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = a1;
      *(void *)(v10 + 24) = a2;
      sub_10004ACDC((uint64_t)a1);
      sub_1002198E4((uint64_t)sub_1001DCF04, v10);
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100212C48(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, char a8, uint64_t (*a9)(void, void), uint64_t a10)
{
  uint64_t v254 = a6;
  uint64_t v269 = a5;
  uint64_t v272 = a4;
  v252 = a3;
  uint64_t v263 = a10;
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v13 - 8);
  uint64_t v248 = (char *)v214 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100054B78((uint64_t *)&unk_1006073E0);
  __chkstk_darwin(v15 - 8);
  uint64_t v247 = (char *)v214 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100054B78(&qword_1005FB050);
  __chkstk_darwin(v17 - 8);
  uint64_t v246 = (char *)v214 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100054B78((uint64_t *)&unk_1006073F0);
  __chkstk_darwin(v19 - 8);
  uint64_t v259 = (char *)v214 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100054B78((uint64_t *)&unk_100607400);
  __chkstk_darwin(v21 - 8);
  long long v258 = (char *)v214 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = type metadata accessor for MediaRequest.Params();
  uint64_t v249 = *(void *)(v250 - 8);
  __chkstk_darwin(v250);
  uint64_t v261 = (char *)v214 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v262 = type metadata accessor for MediaRequest.IncludeExtendTypes();
  uint64_t v266 = *(void *)(v262 - 8);
  uint64_t v24 = __chkstk_darwin(v262);
  uint64_t v242 = (char *)v214 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v244 = (char *)v214 - v26;
  uint64_t v274 = type metadata accessor for MediaRequest.RequestType();
  uint64_t v260 = *(void *)(v274 - 8);
  uint64_t v27 = __chkstk_darwin(v274);
  v265 = (char *)v214 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  v245 = (char *)v214 - v30;
  __chkstk_darwin(v29);
  uint64_t v273 = (char *)v214 - v31;
  uint64_t v32 = sub_100054B78(&qword_1005FB058);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v257 = (uint64_t)v214 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v268 = (uint64_t)v214 - v35;
  uint64_t v36 = type metadata accessor for MediaRequest.ContentType();
  uint64_t v276 = *(void *)(v36 - 8);
  uint64_t v37 = __chkstk_darwin(v36);
  __chkstk_darwin(v37);
  uint64_t v39 = __chkstk_darwin((char *)v214 - v38);
  uint64_t v41 = (char *)v214 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v256 = (char *)v214 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v255 = (char *)v214 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v48 = (char *)v214 - v47;
  uint64_t v49 = __chkstk_darwin(v46);
  uint64_t v51 = (char *)v214 - v50;
  id result = (id)__chkstk_darwin(v49);
  uint64_t v57 = (char *)v214 - v56;
  if (!v53 || *(void *)(a2 + 16) > v53)
  {
    uint64_t v271 = a2;
    if (a7 >> 62)
    {
      unint64_t v233 = v53;
      uint64_t v241 = v54;
      id v230 = result;
      uint64_t v231 = v55;
      swift_bridgeObjectRetain();
      uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      id result = v230;
      uint64_t v55 = v231;
      uint64_t v54 = v241;
      uint64_t v53 = v233;
    }
    else
    {
      uint64_t v58 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    BOOL v59 = v58 < v269;
    uint64_t v60 = v271;
    if (v59)
    {
      id v230 = result;
      uint64_t v231 = v55;
      uint64_t v241 = v54;
      unint64_t v233 = v53;
      uint64_t v229 = a9;
      uint64_t v240 = swift_allocObject();
      *(void *)(v240 + 16) = a7;
      uint64_t v239 = swift_allocObject();
      *(unsigned char *)(v239 + 16) = a8 & 1;
      uint64_t v61 = swift_allocObject();
      uint64_t v238 = v61;
      *(void *)(v61 + 16) = _swiftEmptyArrayStorage;
      uint64_t v62 = (char **)(v61 + 16);
      unint64_t v63 = *(void *)(v60 + 16);
      if (!v63)
      {
        swift_bridgeObjectRetain();
        goto LABEL_32;
      }
      (*(void (**)(char *, void, uint64_t))(v276 + 104))(v57, enum case for MediaRequest.ContentType.podcastEpisode(_:), v36);
      sub_100055BB0(&qword_1005FB008, (void (*)(uint64_t))&type metadata accessor for MediaRequest.ContentType);
      swift_bridgeObjectRetain();
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v64 = v280;
      int64_t v65 = v278;
      if (v279 == v277 && v280 == v278)
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v276 + 8))(v57, v36);
        goto LABEL_15;
      }
      uint64_t v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v276 + 8))(v57, v36);
      if (v66)
      {
LABEL_15:
        if (__OFADD__(v233, v254))
        {
          __break(1u);
        }
        else
        {
          if ((uint64_t)v63 >= (uint64_t)(v233 + v254)) {
            int64_t v65 = v233 + v254;
          }
          else {
            int64_t v65 = v63;
          }
          unint64_t v67 = v65 - v233;
          if (v65 >= (uint64_t)v233)
          {
            if ((v233 & 0x8000000000000000) == 0)
            {
              type metadata accessor for __ContiguousArrayStorageBase();
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain_n();
              unsigned __int8 v68 = (void *)swift_dynamicCastClass();
              if (!v68)
              {
                swift_bridgeObjectRelease();
                unsigned __int8 v68 = _swiftEmptyArrayStorage;
              }
              uint64_t v69 = v68[2];
              swift_release();
              if (v69 == v67)
              {
                uint64_t v70 = (void *)swift_dynamicCastClass();
                if (!v70)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v70 = _swiftEmptyArrayStorage;
                }
                goto LABEL_26;
              }
LABEL_94:
              unint64_t v212 = (2 * v65) | 1;
              uint64_t v213 = v271;
              swift_bridgeObjectRelease();
              uint64_t v70 = sub_10025C0DC(v213, v213 + 32, v233, v212);
LABEL_26:
              swift_bridgeObjectRelease();
              sub_1001B0FD0((uint64_t)v70);
              goto LABEL_32;
            }
LABEL_93:
            __break(1u);
            goto LABEL_94;
          }
        }
        __break(1u);
        goto LABEL_93;
      }
      if (v63 <= v233)
      {
        __break(1u);
      }
      else
      {
        unint64_t v71 = v271 + 16 * v233;
        uint64_t v66 = *(void *)(v71 + 32);
        uint64_t v64 = *(void *)(v71 + 40);
        uint64_t v57 = *v62;
        swift_bridgeObjectRetain();
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_29:
          unint64_t v73 = *((void *)v57 + 2);
          unint64_t v72 = *((void *)v57 + 3);
          if (v73 >= v72 >> 1)
          {
            uint64_t v57 = sub_10004CEAC((char *)(v72 > 1), v73 + 1, 1, v57);
            void *v62 = v57;
          }
          *((void *)v57 + 2) = v73 + 1;
          long long v74 = &v57[16 * v73];
          *((void *)v74 + 4) = v66;
          *((void *)v74 + 5) = v64;
LABEL_32:
          id result = (id)_MTLogCategoryPlayback();
          if (!result)
          {
            __break(1u);
            return result;
          }
          uint64_t v75 = result;
          static os_log_type_t.default.getter();
          sub_100054B78(&qword_1005F7720);
          uint64_t v76 = swift_allocObject();
          long long v267 = xmmword_10046D010;
          *(_OWORD *)(v76 + 16) = xmmword_10046D010;
          uint64_t v77 = *v62;
          *(void *)(v76 + 56) = sub_100054B78((uint64_t *)&unk_100603260);
          *(void *)(v76 + 64) = sub_100044200((unint64_t *)&qword_1005FB060, (uint64_t *)&unk_100603260);
          *(void *)(v76 + 32) = v77;
          swift_bridgeObjectRetain();
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          sub_10004D29C(0, (unint64_t *)&unk_1005FE480);
          id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
          id v78 = [ObjCClassFromMetadata sharedInstance];
          id v234 = [v78 activeDsid];

          char v79 = *(void (**)(char *))(v276 + 104);
          unsigned int v235 = enum case for MediaRequest.ContentType.podcastEpisode(_:);
          uint64_t v270 = v276 + 104;
          Swift::String v275 = v79;
          v79(v51);
          uint64_t v80 = sub_100055BB0(&qword_1005FB008, (void (*)(uint64_t))&type metadata accessor for MediaRequest.ContentType);
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          unint64_t v227 = (unint64_t)v41;
          if (v279 == v277 && v280 == v278) {
            char v81 = 1;
          }
          else {
            char v81 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v82 = *(void (**)(char *, uint64_t))(v276 + 8);
          uint64_t v264 = v276 + 8;
          v82(v51, v36);
          if ((v81 & 1) != 0 || !v234)
          {
            uint64_t v87 = type metadata accessor for MediaRequest.ViewType();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v268, 1, 1, v87);
          }
          else
          {
            uint64_t v83 = enum case for MediaRequest.ViewType.nextEpisodes(_:);
            uint64_t v84 = type metadata accessor for MediaRequest.ViewType();
            uint64_t v85 = *(void *)(v84 - 8);
            uint64_t v86 = v268;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 104))(v268, v83, v84);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v86, 0, 1, v84);
          }
          unint64_t v88 = (void *)v260;
          unsigned int v253 = enum case for MediaRequest.ContentType.podcast(_:);
          v275(v48);
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          if (v279 == v277 && v280 == v278)
          {
            swift_bridgeObjectRelease_n();
            v82(v48, v36);
          }
          else
          {
            char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v82(v48, v36);
            LODWORD(v232) = 0;
            if ((v89 & 1) == 0)
            {
LABEL_46:
              ((void (*)(char *, void, uint64_t))v275)(v255, v235, v36);
              dispatch thunk of RawRepresentable.rawValue.getter();
              dispatch thunk of RawRepresentable.rawValue.getter();
              uint64_t v237 = v80;
              uint64_t v243 = v82;
              if (v279 == v277 && v280 == v278)
              {
                swift_bridgeObjectRelease_n();
                v82(v255, v36);
                uint64_t v90 = v253;
              }
              else
              {
                int v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v82(v255, v36);
                uint64_t v90 = v253;
                if (((v91 | v232) & 1) == 0)
                {
                  unsigned __int8 v92 = (unsigned int *)&enum case for MediaRequest.RequestType.library(_:);
                  goto LABEL_52;
                }
              }
              unsigned __int8 v92 = (unsigned int *)&enum case for MediaRequest.RequestType.catalog(_:);
LABEL_52:
              BOOL v93 = (void (*)(char *, void, uint64_t))v88[13];
              v93(v273, *v92, v274);
              uint64_t v94 = v275;
              ((void (*)(char *, uint64_t, uint64_t))v275)(v256, v90, v36);
              dispatch thunk of RawRepresentable.rawValue.getter();
              dispatch thunk of RawRepresentable.rawValue.getter();
              if (v279 == v277 && v280 == v278) {
                char v95 = 1;
              }
              else {
                char v95 = _stringCompareWithSmolCheck(_:_:expecting:)();
              }
              uint64_t v96 = v245;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v243(v256, v36);
              uint64_t v97 = (void (*)(char *, char *, uint64_t))v88[2];
              uint64_t v98 = v274;
              v245 = (char *)(v88 + 2);
              id v226 = v97;
              v97(v96, v273, v274);
              if (v95)
              {
                unint64_t v99 = v265;
                v93(v265, enum case for MediaRequest.RequestType.library(_:), v98);
                char v100 = static MediaRequest.RequestType.== infix(_:_:)();
                uint64_t v101 = (void (*)(char *, uint64_t))v88[1];
                v101(v99, v98);
                v101(v96, v98);
                if (v100)
                {
                  int v225 = 0;
                  uint64_t v224 = v254;
LABEL_61:
                  unint64_t v102 = v227;
                  ((void (*)(unint64_t, void, uint64_t))v94)(v227, v253, v36);
                  dispatch thunk of RawRepresentable.rawValue.getter();
                  dispatch thunk of RawRepresentable.rawValue.getter();
                  uint64_t v236 = v36;
                  if (v279 == v277 && v280 == v278)
                  {
                    swift_bridgeObjectRelease_n();
                    v243((char *)v102, v36);
                    uint64_t v103 = v36;
                  }
                  else
                  {
                    char v104 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v243((char *)v102, v36);
                    uint64_t v103 = v36;
                    if ((v104 & 1) == 0)
                    {
                      uint64_t v136 = sub_100054B78(&qword_1005FB068);
                      uint64_t v137 = v266;
                      unint64_t v227 = *(void *)(v266 + 72);
                      uint64_t v138 = *(unsigned __int8 *)(v266 + 80);
                      uint64_t v139 = (v138 + 32) & ~v138;
                      uint64_t v140 = v136;
                      uint64_t v221 = v139 + v227;
                      uint64_t v141 = v138 | 7;
                      uint64_t v142 = swift_allocObject();
                      uint64_t v256 = (char *)v142;
                      *(_OWORD *)(v142 + 16) = v267;
                      uint64_t v143 = v139;
                      uint64_t v144 = *(void (**)(unint64_t, void, uint64_t))(v137 + 104);
                      uint64_t v255 = (char *)(v137 + 104);
                      v232 = v144;
                      v144(v142 + v139, enum case for MediaRequest.IncludeExtendTypes.playbackPosition(_:), v262);
                      uint64_t v220 = sub_100054B78(&qword_1005FB070);
                      uint64_t v145 = (int *)(sub_100054B78(&qword_1005F64D8) - 8);
                      uint64_t v146 = *(void *)v145;
                      uint64_t v222 = *(void *)(*(void *)v145 + 72);
                      uint64_t v147 = *(unsigned __int8 *)(v146 + 80);
                      uint64_t v216 = 2 * v222;
                      uint64_t v148 = (v147 + 32) & ~v147;
                      uint64_t v218 = v148;
                      uint64_t v219 = v147 | 7;
                      uint64_t v149 = swift_allocObject();
                      *(void *)&long long v217 = v149;
                      *(_OWORD *)(v149 + 16) = xmmword_10046D050;
                      uint64_t v150 = v149 + v148;
                      uint64_t v215 = v145[14];
                      uint64_t v151 = v103;
                      uint64_t v152 = (void (*)(void))v275;
                      ((void (*)(uint64_t, void, uint64_t))v275)(v149 + v148, enum case for MediaRequest.ContentType.podcastChannel(_:), v151);
                      v214[1] = v140;
                      uint64_t v223 = v141;
                      uint64_t v153 = swift_allocObject();
                      *(_OWORD *)(v153 + 16) = v267;
                      uint64_t v154 = v143;
                      uint64_t v155 = v153 + v143;
                      uint64_t v129 = v262;
                      v232(v155, enum case for MediaRequest.IncludeExtendTypes.isSubscribed(_:), v262);
                      *(void *)(v150 + v215) = v153;
                      v214[0] = v150 + v222;
                      uint64_t v215 = v145[14];
                      v152();
                      unint64_t v156 = v227;
                      uint64_t v157 = swift_allocObject();
                      *(_OWORD *)(v157 + 16) = xmmword_10046D030;
                      uint64_t v158 = v154;
                      uint64_t v159 = v157 + v154;
                      BOOL v160 = v232;
                      v232(v159, enum case for MediaRequest.IncludeExtendTypes.feedUrl(_:), v129);
                      v160(v159 + v156, enum case for MediaRequest.IncludeExtendTypes.editorialArtwork(_:), v129);
                      *(void *)(v214[0] + v215) = v157;
                      uint64_t v161 = v150 + v216;
                      unint64_t v227 = v145[14];
                      uint64_t v162 = v236;
                      long long v163 = v275;
                      ((void (*)(uint64_t, void, uint64_t))v275)(v161, v235, v236);
                      uint64_t v164 = swift_allocObject();
                      *(_OWORD *)(v164 + 16) = v267;
                      v160(v164 + v158, enum case for MediaRequest.IncludeExtendTypes.firstAvailableDates(_:), v129);
                      *(void *)(v161 + v227) = v164;
                      unint64_t v227 = sub_10016ED6C(v217);
                      uint64_t v165 = v218;
                      uint64_t v166 = swift_allocObject();
                      *(_OWORD *)(v166 + 16) = v267;
                      uint64_t v167 = v166 + v165;
                      uint64_t v168 = v145[14];
                      ((void (*)(uint64_t, void, uint64_t))v163)(v167, v253, v162);
                      uint64_t v169 = swift_allocObject();
                      *(_OWORD *)(v169 + 16) = v267;
                      v160(v169 + v158, enum case for MediaRequest.IncludeExtendTypes.channel(_:), v129);
                      *(void *)(v167 + v168) = v169;
                      uint64_t v126 = v256;
                      uint64_t v255 = (char *)sub_10016ED6C(v166);
                      uint64_t v128 = v162;
                      goto LABEL_69;
                    }
                  }
                  uint64_t v105 = sub_100054B78(&qword_1005FB070);
                  uint64_t v106 = sub_100054B78(&qword_1005F64D8);
                  uint64_t v256 = (char *)v106;
                  uint64_t v107 = *(void *)(v106 - 8);
                  uint64_t v255 = *(char **)(v107 + 72);
                  uint64_t v108 = *(unsigned __int8 *)(v107 + 80);
                  uint64_t v109 = (v108 + 32) & ~v108;
                  uint64_t v220 = v105;
                  uint64_t v218 = v108 | 7;
                  uint64_t v110 = swift_allocObject();
                  long long v217 = xmmword_10046D030;
                  unint64_t v227 = v110;
                  *(_OWORD *)(v110 + 16) = xmmword_10046D030;
                  uint64_t v219 = v109;
                  uint64_t v111 = v110 + v109;
                  uint64_t v223 = *(int *)(v106 + 48);
                  ((void (*)(uint64_t, void, uint64_t))v275)(v110 + v109, enum case for MediaRequest.ContentType.podcastChannel(_:), v103);
                  uint64_t v112 = sub_100054B78(&qword_1005FB068);
                  uint64_t v113 = v266;
                  uint64_t v114 = *(unsigned __int8 *)(v266 + 80);
                  uint64_t v115 = (v114 + 32) & ~v114;
                  uint64_t v216 = *(void *)(v266 + 72);
                  uint64_t v116 = v115 + v216;
                  uint64_t v117 = v114 | 7;
                  uint64_t v118 = swift_allocObject();
                  *(_OWORD *)(v118 + 16) = v267;
                  uint64_t v119 = *(void (**)(char *, void, uint64_t))(v113 + 104);
                  uint64_t v120 = v262;
                  v119((char *)(v118 + v115), enum case for MediaRequest.IncludeExtendTypes.isSubscribed(_:), v262);
                  *(void *)(v111 + v223) = v118;
                  uint64_t v121 = &v255[v111];
                  uint64_t v223 = *((int *)v256 + 12);
                  uint64_t v122 = v103;
                  unint64_t v123 = v119;
                  ((void (*)(char *, void, uint64_t))v275)(&v255[v111], v253, v122);
                  uint64_t v222 = v112;
                  uint64_t v215 = v116;
                  uint64_t v221 = v117;
                  uint64_t v124 = swift_allocObject();
                  *(_OWORD *)(v124 + 16) = v267;
                  v119((char *)(v124 + v115), enum case for MediaRequest.IncludeExtendTypes.editorialArtwork(_:), v120);
                  *(void *)&v121[v223] = v124;
                  unint64_t v227 = sub_10016ED6C(v227);
                  if (v232)
                  {
                    uint64_t v125 = v216;
                    uint64_t v126 = (void *)swift_allocObject();
                    *((_OWORD *)v126 + 1) = v217;
                    uint64_t v127 = v262;
                    v123((char *)v126 + v115, enum case for MediaRequest.IncludeExtendTypes.playbackPosition(_:), v262);
                    v123((char *)v126 + v115 + v125, enum case for MediaRequest.IncludeExtendTypes.channel(_:), v127);
                    uint64_t v255 = (char *)sub_10016ED6C((uint64_t)_swiftEmptyArrayStorage);
                    uint64_t v128 = v236;
                    uint64_t v129 = v127;
                  }
                  else
                  {
                    uint64_t v130 = v219;
                    uint64_t v131 = swift_allocObject();
                    *(_OWORD *)(v131 + 16) = v267;
                    uint64_t v132 = v131 + v130;
                    uint64_t v133 = *((int *)v256 + 12);
                    uint64_t v128 = v236;
                    ((void (*)(uint64_t, void, uint64_t))v275)(v131 + v130, v253, v236);
                    uint64_t v134 = swift_allocObject();
                    *(_OWORD *)(v134 + 16) = v267;
                    uint64_t v135 = v262;
                    v123((char *)(v134 + v115), enum case for MediaRequest.IncludeExtendTypes.channel(_:), v262);
                    *(void *)(v132 + v133) = v134;
                    uint64_t v255 = (char *)sub_10016ED6C(v131);
                    uint64_t v126 = _swiftEmptyArrayStorage;
                    uint64_t v129 = v135;
                  }
LABEL_69:
                  uint64_t v170 = v274;
                  if (v234)
                  {
                    uint64_t v171 = v272;
                  }
                  else
                  {
                    (*(void (**)(char *, void, uint64_t))(v266 + 104))(v244, enum case for MediaRequest.IncludeExtendTypes.episodes(_:), v129);
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    uint64_t v171 = v272;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                      uint64_t v126 = (void *)sub_1002EF9DC(0, v126[2] + 1, 1, (unint64_t)v126);
                    }
                    unint64_t v174 = v126[2];
                    unint64_t v173 = v126[3];
                    if (v174 >= v173 >> 1) {
                      uint64_t v126 = (void *)sub_1002EF9DC(v173 > 1, v174 + 1, 1, (unint64_t)v126);
                    }
                    v126[2] = v174 + 1;
                    (*(void (**)(unint64_t, char *, uint64_t))(v266 + 32))((unint64_t)v126+ ((*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80))+ *(void *)(v266 + 72) * v174, v244, v129);
                  }
                  unint64_t v175 = (unint64_t)v126;
                  if (static Podcasts.areTranscriptsSupportedOnPlatform.getter())
                  {
                    ((void (*)(id, void, uint64_t))v275)(v230, v235, v128);
                    dispatch thunk of RawRepresentable.rawValue.getter();
                    dispatch thunk of RawRepresentable.rawValue.getter();
                    if (v279 == v277 && v280 == v278)
                    {
                      swift_bridgeObjectRelease_n();
                      v243((char *)v230, v128);
LABEL_81:
                      unint64_t v178 = v242;
                      (*(void (**)(char *, void, uint64_t))(v266 + 104))(v242, enum case for MediaRequest.IncludeExtendTypes.transcripts(_:), v129);
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        unint64_t v175 = sub_1002EF9DC(0, *(void *)(v175 + 16) + 1, 1, v175);
                      }
                      unint64_t v180 = *(void *)(v175 + 16);
                      unint64_t v179 = *(void *)(v175 + 24);
                      if (v180 >= v179 >> 1) {
                        unint64_t v175 = sub_1002EF9DC(v179 > 1, v180 + 1, 1, v175);
                      }
                      uint64_t v256 = (char *)v175;
                      *(void *)(v175 + 16) = v180 + 1;
                      (*(void (**)(unint64_t, char *, uint64_t))(v266 + 32))(v175+ ((*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80))+ *(void *)(v266 + 72) * v180, v178, v129);
                      goto LABEL_88;
                    }
                    char v176 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    Swift::Int v177 = (void (*)(uint64_t, uint64_t))v243;
                    v243((char *)v230, v128);
                    if (v176) {
                      goto LABEL_81;
                    }
                    uint64_t v181 = v241;
                    ((void (*)(uint64_t, void, uint64_t))v275)(v241, v235, v128);
                    sub_100054B78(&qword_1005FB068);
                    uint64_t v182 = v266;
                    unint64_t v183 = (*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80);
                    uint64_t v184 = swift_allocObject();
                    *(_OWORD *)(v184 + 16) = v267;
                    (*(void (**)(unint64_t, void, uint64_t))(v182 + 104))(v184 + v183, enum case for MediaRequest.IncludeExtendTypes.transcripts(_:), v129);
                    Swift::Int v185 = v255;
                    char v186 = swift_isUniquelyReferenced_nonNull_native();
                    char v279 = v185;
                    sub_10027F2BC(v184, v181, v186);
                    uint64_t v255 = v279;
                    swift_bridgeObjectRelease();
                    v177(v181, v128);
                  }
                  uint64_t v256 = (char *)v175;
LABEL_88:
                  v226(v265, v273, v170);
                  uint64_t v187 = v276;
                  int v188 = *(void (**)(char *))(v276 + 16);
                  uint64_t v270 = v276 + 16;
                  Swift::String v275 = v188;
                  unint64_t v189 = v258;
                  ((void (*)(char *, uint64_t, uint64_t))v188)(v258, v171, v128);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(v189, 0, 1, v128);
                  sub_100054BBC(v268, v257, &qword_1005FB058);
                  uint64_t v190 = type metadata accessor for MediaRequest.Relationship();
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v259, 1, 1, v190);
                  sub_100054B78(&qword_1005FB078);
                  uint64_t v191 = type metadata accessor for MediaRequest.WithTypes();
                  uint64_t v192 = *(void *)(v191 - 8);
                  unint64_t v193 = (*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80);
                  uint64_t v194 = swift_allocObject();
                  *(_OWORD *)(v194 + 16) = v267;
                  (*(void (**)(unint64_t, void, uint64_t))(v192 + 104))(v194 + v193, enum case for MediaRequest.WithTypes.newsPodcasts(_:), v191);
                  uint64_t v195 = type metadata accessor for MediaRequest.URLFragment();
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v195 - 8) + 56))(v246, 1, 1, v195);
                  uint64_t v196 = type metadata accessor for MediaRequest.PageName();
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 56))(v247, 1, 1, v196);
                  uint64_t v197 = type metadata accessor for URL();
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v197 - 8) + 56))(v248, 1, 1, v197);
                  swift_bridgeObjectRetain();
                  *(void *)&long long v267 = sub_1003B5508((uint64_t)_swiftEmptyArrayStorage);
                  sub_1003B5508((uint64_t)_swiftEmptyArrayStorage);
                  sub_1003B5544((uint64_t)_swiftEmptyArrayStorage);
                  sub_1003B5738((uint64_t)_swiftEmptyArrayStorage);
                  sub_1003B5974((uint64_t)_swiftEmptyArrayStorage);
                  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)();
                  id v198 = [ObjCClassFromMetadata sharedInstance];
                  *(void *)&long long v267 = [v198 activeAccount];

                  ((void (*)(uint64_t, uint64_t, uint64_t))v275)(v241, v272, v128);
                  uint64_t v199 = v276;
                  unint64_t v200 = (*(unsigned __int8 *)(v276 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v276 + 80);
                  unint64_t v201 = (v231 + v200 + 7) & 0xFFFFFFFFFFFFFFF8;
                  v202 = (char *)swift_allocObject();
                  uint64_t v203 = (uint64_t)v229;
                  uint64_t v204 = v263;
                  *((void *)v202 + 2) = v229;
                  *((void *)v202 + 3) = v204;
                  uint64_t v205 = v251;
                  *((void *)v202 + 4) = v239;
                  *((void *)v202 + 5) = v205;
                  uint64_t v206 = v233;
                  *((void *)v202 + 6) = v240;
                  *((void *)v202 + 7) = v206;
                  uint64_t v207 = v271;
                  *((void *)v202 + 8) = v238;
                  *((void *)v202 + 9) = v207;
                  uint64_t v208 = v252;
                  *((void *)v202 + 1sub_1001DA808(0, 0) = v252;
                  (*(void (**)(char *, uint64_t, uint64_t))(v199 + 32))(&v202[v200], v241, v236);
                  *(void *)&v202[v201] = v269;
                  *(void *)&v202[(v201 + 15) & 0xFFFFFFFFFFFFFFF8] = v254;
                  swift_bridgeObjectRetain();
                  sub_10004ACDC(v203);
                  swift_retain();
                  swift_retain();
                  swift_retain();
                  id v209 = v208;
                  uint64_t v210 = v261;
                  unint64_t v211 = (void *)v267;
                  dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:account:callback:)();

                  swift_release();
                  (*(void (**)(char *, uint64_t))(v249 + 8))(v210, v250);
                  (*(void (**)(char *, uint64_t))(v260 + 8))(v273, v274);
                  sub_100054B1C(v268, &qword_1005FB058);
                  swift_release();
                  swift_release();
                  return (id)swift_release();
                }
              }
              else
              {
                ((void (*)(char *, uint64_t))v88[1])(v96, v98);
              }
              uint64_t v224 = 0;
              int v225 = 1;
              goto LABEL_61;
            }
          }
          LODWORD(v232) = *((void *)*v62 + 2) != 0;
          goto LABEL_46;
        }
      }
      uint64_t v57 = sub_10004CEAC(0, *((void *)v57 + 2) + 1, 1, v57);
      void *v62 = v57;
      goto LABEL_29;
    }
  }
  if (a9) {
    return (id)a9(a7, a8 & 1);
  }
  return result;
}

void sub_100215184(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
    v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  else
  {
    v3.super.Class isa = 0;
  }
  Class isa = v3.super.isa;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_100215278()
{
  uint64_t v1 = type metadata accessor for MediaRequest.ContentType();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v7 = (char *)v13 - v6;
  uint64_t v8 = v0 + OBJC_IVAR___MTNetworkMediaManifest_contentType;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v7, v8, v1);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for MediaRequest.ContentType.podcastEpisode(_:), v1);
  sub_100055BB0(&qword_1005FB008, (void (*)(uint64_t))&type metadata accessor for MediaRequest.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v13[3] == v13[1] && v13[4] == v13[2])
  {
    swift_bridgeObjectRelease_n();
    uint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
    v9(v5, v1);
    v9(v7, v1);
    return swift_bridgeObjectRetain();
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  if (v10) {
    return swift_bridgeObjectRetain();
  }
  return 0;
}

uint64_t sub_100215550()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MediaRequest.ContentType();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = v0 + OBJC_IVAR___MTNetworkMediaManifest_contentType;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v9, v2);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for MediaRequest.ContentType.podcast(_:), v2);
  sub_100055BB0(&qword_1005FB008, (void (*)(uint64_t))&type metadata accessor for MediaRequest.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v16[3] == v16[1] && v16[4] == v16[2])
  {
    swift_bridgeObjectRelease_n();
    char v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v6, v2);
    v10(v8, v2);
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
    v12(v6, v2);
    v12(v8, v2);
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR___MTNetworkMediaManifest_initialIds);
  if (!v13 || !*(void *)(v13 + 16)) {
    return 0;
  }
  uint64_t v14 = *(void *)(v13 + 32);
  swift_bridgeObjectRetain();
  return v14;
}

id sub_1002157D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for String.Encoding();
  uint64_t v6 = *(void *)(v5 - 8);
  id result = (id)__chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    static String.Encoding.utf8.getter();
    uint64_t v10 = String.data(using:allowLossyConversion:)();
    unint64_t v12 = v11;
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (v12 >> 60 != 15)
    {
      uint64_t v13 = self;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      v28[0] = 0;
      id v15 = [v13 JSONObjectWithData:isa options:0 error:v28];

      if (!v15)
      {
        id v25 = v28[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        return (id)sub_10021A3FC(v10, v12);
      }
      id v16 = v28[0];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100054B78(&qword_1005FB030);
      if ((swift_dynamicCast() & 1) == 0) {
        return (id)sub_10021A3FC(v10, v12);
      }
      type metadata accessor for MediaRequestResponseParser();
      type metadata accessor for ServerPodcastStation();
      sub_100055BB0(&qword_1005FB048, (void (*)(uint64_t))&type metadata accessor for ServerPodcastStation);
      unint64_t v17 = static MediaRequestResponseParser.parseContainerResponse<A>(containerType:_:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      if (!v17) {
        return (id)sub_10021A3FC(v10, v12);
      }
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v26) {
          goto LABEL_8;
        }
      }
      else if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:
        if ((v17 & 0xC000000000000001) != 0)
        {
          id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            __break(1u);
          }
          id v18 = *(id *)(v17 + 32);
        }
        uint64_t v19 = v18;
        swift_bridgeObjectRelease();
        id v20 = v19;
        sub_1002192F8(v20);

        sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
        Class v21 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v3 setItems:v21];

        id result = (id)_MTLogCategoryPlayback();
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v22 = result;
        static os_log_type_t.default.getter();
        sub_100054B78(&qword_1005F7720);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_10046D010;
        uint64_t v24 = sub_100218BFC();
        *(void *)(v23 + 56) = sub_100054B78(&qword_1005F7308);
        *(void *)(v23 + 64) = sub_100044200(&qword_1005FB018, &qword_1005F7308);
        *(void *)(v23 + 32) = v24;
        os_log(_:dso:log:type:_:)();
      }
      swift_bridgeObjectRelease();
      return (id)sub_10021A3FC(v10, v12);
    }
  }
  return result;
}

void *sub_100215C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for String.Encoding();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return _swiftEmptyArrayStorage;
  }
  static String.Encoding.utf8.getter();
  uint64_t v9 = String.data(using:allowLossyConversion:)();
  unint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11 >> 60 == 15) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v12 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v34[0] = 0;
  id v14 = [v12 JSONObjectWithData:isa options:0 error:v34];

  if (!v14)
  {
    id v28 = v34[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_10021A3FC(v9, v11);
    return v28;
  }
  id v15 = v34[0];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100054B78(&qword_1005FB030);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    sub_10021A3FC(v9, v11);
    return _swiftEmptyArrayStorage;
  }
  type metadata accessor for MediaRequestResponseParser();
  unint64_t v16 = static MediaRequestResponseParser.parsePodcastEpisodeResponse(_:)();
  swift_bridgeObjectRelease();
  if (!(v16 >> 62))
  {
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v29) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v16 & 0xC000000000000001) != 0)
  {
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v17 = *(id *)(v16 + 32);
  }
  id v18 = v17;
  swift_bridgeObjectRelease();
  id v19 = [objc_allocWithZone((Class)MTPlayerItem) initWithPodcastEpisode:v18 podcast:0];
  if (!v19)
  {

    goto LABEL_17;
  }
  id v20 = v19;
  uint64_t v33 = sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t v21 = swift_allocObject();
  long long v32 = xmmword_10046D060;
  *(_OWORD *)(v21 + 16) = xmmword_10046D060;
  *(void *)(v21 + 32) = v20;
  v34[0] = (id)v21;
  specialized Array._endMutation()();
  sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
  id v31 = v20;
  Class v22 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setItems:v22];

  id result = (id)_MTLogCategoryPlayback();
  if (result)
  {
    uint64_t v24 = result;
    static os_log_type_t.default.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10046D010;
    uint64_t v26 = sub_100218BFC();
    *(void *)(v25 + 56) = sub_100054B78(&qword_1005F7308);
    *(void *)(v25 + 64) = sub_100044200(&qword_1005FB018, &qword_1005F7308);
    *(void *)(v25 + 32) = v26;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = v32;
    *(void *)(v27 + 32) = v18;
    v34[0] = (id)v27;
    specialized Array._endMutation()();
    id v28 = v34[0];

    sub_10021A3FC(v9, v11);
    return v28;
  }
  __break(1u);
  return result;
}

id sub_1002161D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for PriceType();
  uint64_t v77 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v78 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100054B78(&qword_1005FB020);
  __chkstk_darwin(v80);
  uint64_t v82 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100054B78(&qword_1005FB028);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v79 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v61 - v12;
  __chkstk_darwin(v11);
  uint64_t v81 = (uint64_t)&v61 - v14;
  uint64_t v15 = type metadata accessor for String.Encoding();
  uint64_t v16 = *(void *)(v15 - 8);
  id result = (id)__chkstk_darwin(v15);
  id v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    static String.Encoding.utf8.getter();
    uint64_t v20 = String.data(using:allowLossyConversion:)();
    unint64_t v22 = v21;
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    if (v22 >> 60 != 15)
    {
      uint64_t v23 = self;
      unint64_t v24 = v22;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      v84[0] = 0;
      id v26 = [v23 JSONObjectWithData:isa options:0 error:v84];

      if (!v26)
      {
        id v44 = v84[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        return (id)sub_10021A3FC(v20, v24);
      }
      id v27 = v84[0];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100054B78(&qword_1005FB030);
      if ((swift_dynamicCast() & 1) == 0
        || (unint64_t v28 = v83,
            type metadata accessor for MediaRequestResponseParser(),
            type metadata accessor for ServerPodcast(),
            sub_100055BB0(&qword_1005FB038, (void (*)(uint64_t))&type metadata accessor for ServerPodcast),
            unint64_t v29 = static MediaRequestResponseParser.parseContainerResponse<A>(containerType:_:)(),
            swift_bridgeObjectRelease(),
            swift_errorRelease(),
            !v29))
      {
        uint64_t v43 = v20;
        return (id)sub_10021A3FC(v43, v24);
      }
      uint64_t v76 = v20;
      id v30 = (id)(v29 & 0xFFFFFFFFFFFFFF8);
      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v56)
        {
LABEL_8:
          if ((v29 & 0xC000000000000001) != 0)
          {
            id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_47;
            }
            id v31 = *(id *)(v29 + 32);
          }
          long long v32 = v31;
          swift_bridgeObjectRelease();
          id v33 = v32;
          sub_1002192F8(v33);

          sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
          unint64_t v28 = (unint64_t)Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v3 setItems:v28];

          id v30 = v33;
          uint64_t v34 = ServerPodcastBase.relationships.getter();

          if (!v34) {
            goto LABEL_55;
          }
          uint64_t v35 = PodcastRelationships.channel.getter();
          swift_release();
          if (!v35) {
            goto LABEL_55;
          }
          unint64_t v29 = PodcastChannelRelationshipContainer.data.getter();
          swift_release();
          if (!(v29 >> 62))
          {
            if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_15;
            }
LABEL_48:
            swift_bridgeObjectRelease();
LABEL_55:
            id result = (id)_MTLogCategoryPlayback();
            if (!result)
            {
              __break(1u);
              return result;
            }
            uint64_t v58 = result;
            static os_log_type_t.default.getter();
            sub_100054B78(&qword_1005F7720);
            uint64_t v59 = swift_allocObject();
            *(_OWORD *)(v59 + 16) = xmmword_10046D010;
            uint64_t v60 = sub_100218BFC();
            *(void *)(v59 + 56) = sub_100054B78(&qword_1005F7308);
            *(void *)(v59 + 64) = sub_100044200(&qword_1005FB018, &qword_1005F7308);
            *(void *)(v59 + 32) = v60;
            os_log(_:dso:log:type:_:)();

            goto LABEL_57;
          }
LABEL_47:
          swift_bridgeObjectRetain();
          uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v57)
          {
LABEL_15:
            id v74 = v30;
            if ((v29 & 0xC000000000000001) != 0) {
              goto LABEL_50;
            }
            if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_52;
            }
            for (id i = *(id *)(v29 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
            {
              uint64_t v37 = i;
              swift_bridgeObjectRelease();
              ServerChannel.attributes.getter();

              char v38 = ChannelAttributes.isSubscribed.getter();
              swift_release();
              id v30 = v74;
              if (v38 == 2) {
                break;
              }
              if (v38) {
                break;
              }
              id v39 = v74;
              uint64_t v40 = ServerPodcastBase.attributes.getter();

              if (!v40) {
                break;
              }
              unint64_t v28 = PodcastAttributes.offers.getter();
              swift_release();
              if (!v28) {
                break;
              }
              if (v28 >> 62)
              {
LABEL_52:
                swift_bridgeObjectRetain();
                uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
                if (!v41)
                {
LABEL_53:
                  char v55 = 1;
LABEL_54:
                  swift_bridgeObjectRelease_n();
                  *((unsigned char *)v3 + OBJC_IVAR___MTNetworkMediaManifest_hasOnlyPaidEpisodesWithoutSubscription) = v55;
                  goto LABEL_55;
                }
              }
              else
              {
                uint64_t v41 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
                if (!v41) {
                  goto LABEL_53;
                }
              }
              unint64_t v72 = v28 & 0xC000000000000001;
              unint64_t v73 = v28;
              uint64_t v70 = (void (**)(char *, void, uint64_t, uint64_t))(v77 + 56);
              unint64_t v71 = (void (**)(char *, void, uint64_t))(v77 + 104);
              unsigned int v69 = enum case for PriceType.psub(_:);
              uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v77 + 32);
              unint64_t v63 = (void (**)(uint64_t, uint64_t))(v77 + 8);
              uint64_t v42 = 4;
              uint64_t v66 = v3;
              uint64_t v65 = v41;
              unsigned __int8 v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
              uint64_t v67 = v5;
              while (1)
              {
                uint64_t v45 = v72 ? specialized _ArrayBuffer._getElementSlowPath(_:)() : swift_retain();
                uint64_t v75 = v42 - 3;
                if (__OFADD__(v42 - 4, 1)) {
                  break;
                }
                uint64_t v46 = v81;
                uint64_t v77 = v45;
                dispatch thunk of PodcastShowOffer.typeResolved.getter();
                (*v71)(v13, v69, v5);
                (*v70)(v13, 0, 1, v5);
                uint64_t v47 = v82;
                uint64_t v48 = v82 + *(int *)(v80 + 48);
                sub_100054BBC(v46, v82, &qword_1005FB028);
                sub_100054BBC((uint64_t)v13, v48, &qword_1005FB028);
                uint64_t v49 = *v68;
                if ((*v68)(v47, 1, v5) == 1)
                {
                  if (v49(v48, 1, v5) != 1) {
                    goto LABEL_40;
                  }
                  sub_100054B1C(v82, &qword_1005FB028);
                  sub_100054B1C((uint64_t)v13, &qword_1005FB028);
                  sub_100054B1C(v81, &qword_1005FB028);
                  swift_release();
                }
                else
                {
                  uint64_t v50 = v79;
                  sub_100054BBC(v47, v79, &qword_1005FB028);
                  if (v49(v48, 1, v5) == 1)
                  {
                    (*v63)(v50, v5);
LABEL_40:
                    sub_100054B1C(v82, &qword_1005FB020);
                    sub_100054B1C((uint64_t)v13, &qword_1005FB028);
                    sub_100054B1C(v81, &qword_1005FB028);
                    swift_release();
LABEL_41:
                    char v55 = 0;
                    uint64_t v3 = v66;
LABEL_42:
                    id v30 = v74;
                    goto LABEL_54;
                  }
                  uint64_t v51 = v78;
                  (*v62)(v78, v48, v5);
                  sub_100055BB0(&qword_1005FB040, (void (*)(uint64_t))&type metadata accessor for PriceType);
                  int v64 = dispatch thunk of static Equatable.== infix(_:_:)();
                  uint64_t v52 = *v63;
                  uint64_t v53 = v51;
                  uint64_t v54 = v82;
                  (*v63)((uint64_t)v53, v5);
                  v52(v50, v5);
                  sub_100054B1C(v54, &qword_1005FB028);
                  sub_100054B1C((uint64_t)v13, &qword_1005FB028);
                  sub_100054B1C(v81, &qword_1005FB028);
                  swift_release();
                  if ((v64 & 1) == 0) {
                    goto LABEL_41;
                  }
                }
                ++v42;
                uint64_t v3 = v66;
                if (v75 == v65)
                {
                  char v55 = 1;
                  goto LABEL_42;
                }
              }
              __break(1u);
LABEL_50:
              ;
            }
            goto LABEL_55;
          }
          goto LABEL_48;
        }
      }
      else if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_8;
      }
LABEL_57:
      swift_bridgeObjectRelease();
      uint64_t v43 = v76;
      return (id)sub_10021A3FC(v43, v24);
    }
  }
  return result;
}

uint64_t sub_100216CA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  id v10 = a1;
  a5(v7, v9);

  swift_bridgeObjectRelease();
  return 1;
}

void sub_100216E50(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (unsigned char *)Strong;
    uint64_t v9 = Strong + OBJC_IVAR___MTNetworkMediaManifest_inProgressRefreshHandlers;
    swift_beginAccess();
    uint64_t v10 = *(void *)v9;
    uint64_t v11 = *(void *)(*(void *)v9 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = v10 + 40;
      do
      {
        uint64_t v13 = *(void (**)(uint64_t))(v12 - 8);
        if (v13)
        {
          uint64_t v14 = swift_retain();
          v13(v14);
          sub_1000536BC((uint64_t)v13);
        }
        v12 += 16;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
    }
    *(void *)uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v15 = swift_bridgeObjectRelease();
    v8[OBJC_IVAR___MTNetworkMediaManifest_refreshInProgress] = 0;
    if (a1) {
      sub_100217D14(a1);
    }
    v8[OBJC_IVAR___MTNetworkMediaManifest_hasOnlyPaidEpisodesWithoutSubscription] = a2 & 1;
    if (a4) {
      a4(v15);
    }
  }
}

id sub_100216FA8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t (*a6)(void, void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v93 = a7;
  uint64_t v94 = a6;
  uint64_t v91 = a9;
  unint64_t v20 = type metadata accessor for PriceType();
  uint64_t v90 = *(char ***)(v20 - 8);
  __chkstk_darwin(v20);
  unint64_t v22 = (int *)((char *)v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = (int *)sub_100054B78(&qword_1005FB020);
  __chkstk_darwin(v23);
  uint64_t v89 = (uint64_t)v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100054B78(&qword_1005FB028);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v28 = (uint64_t)v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26);
  unint64_t v31 = (unint64_t)v86 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (uint64_t)v86 - v32;
  unsigned __int8 v92 = (unsigned char *)(a8 + 16);
  uint64_t v34 = (char **)(a10 + 16);
  if (!a5)
  {
    if (!a1) {
      goto LABEL_91;
    }
    goto LABEL_9;
  }
  if (!a1) {
    goto LABEL_5;
  }
  if (a1 >> 62) {
    goto LABEL_51;
  }
  a8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (a8 <= 0)
  {
LABEL_5:
    id result = (id)_MTLogCategoryPlayback();
    if (result)
    {
      uint64_t v36 = result;
      static os_log_type_t.error.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_10046D010;
      uint64_t v38 = _convertErrorToNSError(_:)();
      *(void *)(v37 + 56) = sub_10004D29C(0, &qword_1005F6BF0);
      *(void *)(v37 + 64) = sub_100219290();
      *(void *)(v37 + 32) = v38;
      os_log(_:dso:log:type:_:)();

      id result = (id)swift_bridgeObjectRelease();
      if (v94) {
        return (id)v94(0, 0);
      }
      return result;
    }
    goto LABEL_103;
  }
LABEL_9:
  id v39 = sub_1003E4820(a1);
  if (!v39)
  {
LABEL_15:
    uint64_t v45 = (uint64_t)sub_1003E4A70(a1);
    if (!v45) {
      goto LABEL_91;
    }
    unint64_t v31 = v45;
    unint64_t v95 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v45 >> 62)
    {
      if (v45 >= 0) {
        a5 = v45 & 0xFFFFFFFFFFFFFF8;
      }
      else {
        a5 = v45;
      }
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      if (v28) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v28)
      {
LABEL_18:
        uint64_t v90 = v34;
        if (v28 < 1)
        {
          __break(1u);
          goto LABEL_64;
        }
        uint64_t v33 = 0;
        unint64_t v20 = v31 & 0xC000000000000001;
        uint64_t v46 = &OBJC_IVAR___MZUPPMetrics__bagLookupEndTime;
        uint64_t v34 = &selRef_moreButtonTapCancelled_;
        while (1)
        {
          if (v20) {
            id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v47 = *(id *)(v31 + 8 * v33 + 32);
          }
          a1 = (unint64_t)v47;
          uint64_t v48 = dispatch thunk of ServerPodcastEpisode.relationships.getter();
          if (v48)
          {
            uint64_t v49 = (void *)v48;
            uint64_t v23 = (int *)PodcastEpisodeRelationships.podcast.getter();

            if (v23)
            {
              unint64_t v22 = v46;
              a5 = PodcastRelationshipContainer.data.getter();

              if (a5 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (!v50) {
                  goto LABEL_34;
                }
LABEL_29:
                if ((a5 & 0xC000000000000001) != 0)
                {
                  uint64_t v23 = (int *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  goto LABEL_35;
                }
                if (!*(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
LABEL_51:
                  swift_bridgeObjectRetain();
                  a8 = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                  if (a8 <= 0) {
                    goto LABEL_5;
                  }
                  goto LABEL_9;
                }
                uint64_t v46 = v22;
                uint64_t v23 = (int *)*(id *)(a5 + 32);
              }
              else
              {
                if (*(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_29;
                }
LABEL_34:
                uint64_t v23 = 0;
LABEL_35:
                uint64_t v46 = v22;
              }
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            uint64_t v23 = 0;
          }
          id v51 = [objc_allocWithZone((Class)(v46 + 632)) initWithPodcastEpisode:a1 podcast:v23];

          if (v51)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          if (v28 == ++v33)
          {
            swift_bridgeObjectRelease();
            unint64_t v52 = v95;
            uint64_t v34 = v90;
            goto LABEL_58;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v52 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_58:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v55 = swift_bridgeObjectRetain();
    sub_1001B1E4C(v55);
    swift_endAccess();
    id result = (id)_MTLogCategoryPlayback();
    if (result)
    {
      uint64_t v56 = result;
      static os_log_type_t.default.getter();
      sub_100054B78(&qword_1005F7720);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_10046D010;
      if (v52 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v58 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(void *)(v57 + 56) = &type metadata for Int;
      *(void *)(v57 + 64) = &protocol witness table for Int;
      *(void *)(v57 + 32) = v58;
      os_log(_:dso:log:type:_:)();
      goto LABEL_90;
    }
    goto LABEL_104;
  }
  a5 = (unint64_t)v39;
  if (!v39[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v40 = (void *)v39[4];
  uint64_t v41 = v39[5];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for ServerPodcast();
  uint64_t v42 = swift_dynamicCastClass();
  if (!v42) {
    goto LABEL_86;
  }
  uint64_t v88 = v42;
  uint64_t v43 = v92;
  swift_beginAccess();
  if ((*v43 & 1) == 0)
  {
    uint64_t v87 = v40;
    swift_unknownObjectRetain();
    uint64_t v53 = ServerPodcastBase.attributes.getter();
    v86[1] = v41;
    if (!v53) {
      goto LABEL_66;
    }
    a5 = PodcastAttributes.offers.getter();
    swift_release();
    if (!a5) {
      goto LABEL_66;
    }
    a8 = a5 & 0xFFFFFFFFFFFFFF8;
    if (!(a5 >> 62))
    {
      uint64_t v40 = *(void **)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v40)
      {
LABEL_46:
        if ((a5 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)(a8 + 16))
          {
            __break(1u);
            goto LABEL_99;
          }
          swift_retain();
        }
        uint64_t v54 = v90;
        swift_bridgeObjectRelease();
        dispatch thunk of PodcastShowOffer.typeResolved.getter();
        swift_release();
LABEL_67:
        ((void (*)(unint64_t, void, unint64_t))v54[13])(v31, enum case for PriceType.psub(_:), v20);
        ((void (*)(unint64_t, void, uint64_t, unint64_t))v54[7])(v31, 0, 1, v20);
        uint64_t v59 = v23[12];
        uint64_t v60 = v89;
        uint64_t v61 = v89 + v59;
        sub_100054BBC(v33, v89, &qword_1005FB028);
        sub_100054BBC(v31, v61, &qword_1005FB028);
        uint64_t v62 = v54[6];
        if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v62)(v60, 1, v20) == 1)
        {
          sub_100054B1C(v31, &qword_1005FB028);
          sub_100054B1C(v33, &qword_1005FB028);
          int v63 = ((uint64_t (*)(uint64_t, uint64_t, unint64_t))v62)(v61, 1, v20);
          uint64_t v40 = v87;
          if (v63 == 1)
          {
            sub_100054B1C(v60, &qword_1005FB028);
LABEL_74:
            uint64_t v67 = ServerPodcastBase.relationships.getter();
            BOOL v44 = v67;
            if (!v67)
            {
              swift_unknownObjectRelease();
              goto LABEL_85;
            }
            uint64_t v68 = PodcastRelationships.channel.getter();
            swift_release();
            if (v68)
            {
              unint64_t v31 = PodcastChannelRelationshipContainer.data.getter();
              id result = (id)swift_release();
              if (!(v31 >> 62))
              {
                if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_78;
                }
                goto LABEL_100;
              }
LABEL_99:
              swift_bridgeObjectRetain();
              uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
              id result = (id)swift_bridgeObjectRelease();
              if (v85)
              {
LABEL_78:
                if ((v31 & 0xC000000000000001) != 0)
                {
                  id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  {
                    __break(1u);
LABEL_103:
                    __break(1u);
LABEL_104:
                    __break(1u);
                    goto LABEL_105;
                  }
                  id v69 = *(id *)(v31 + 32);
                }
                uint64_t v70 = v69;
                swift_bridgeObjectRelease();
                ServerChannel.attributes.getter();

                char v71 = ChannelAttributes.isSubscribed.getter();
                swift_release();
                swift_unknownObjectRelease();
                if (v71 != 2)
                {
                  BOOL v44 = (v71 & 1) == 0;
                  goto LABEL_85;
                }
LABEL_84:
                BOOL v44 = 0;
                goto LABEL_85;
              }
LABEL_100:
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_84;
            }
LABEL_83:
            swift_unknownObjectRelease();
            goto LABEL_84;
          }
        }
        else
        {
          sub_100054BBC(v60, v28, &qword_1005FB028);
          if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v62)(v61, 1, v20) != 1)
          {
            int v64 = v90;
            ((void (*)(int *, uint64_t, unint64_t))v90[4])(v22, v61, v20);
            sub_100055BB0(&qword_1005FB040, (void (*)(uint64_t))&type metadata accessor for PriceType);
            char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v66 = v64[1];
            ((void (*)(int *, unint64_t))v66)(v22, v20);
            sub_100054B1C(v31, &qword_1005FB028);
            sub_100054B1C(v33, &qword_1005FB028);
            ((void (*)(uint64_t, unint64_t))v66)(v28, v20);
            sub_100054B1C(v60, &qword_1005FB028);
            uint64_t v40 = v87;
            if ((v65 & 1) == 0) {
              goto LABEL_83;
            }
            goto LABEL_74;
          }
          sub_100054B1C(v31, &qword_1005FB028);
          sub_100054B1C(v33, &qword_1005FB028);
          ((void (*)(uint64_t, unint64_t))v90[1])(v28, v20);
          uint64_t v40 = v87;
        }
        sub_100054B1C(v60, &qword_1005FB020);
        goto LABEL_83;
      }
      goto LABEL_65;
    }
LABEL_64:
    swift_bridgeObjectRetain();
    uint64_t v40 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v40) {
      goto LABEL_46;
    }
LABEL_65:
    swift_bridgeObjectRelease();
LABEL_66:
    uint64_t v54 = v90;
    ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v90[7])(v33, 1, 1, v20);
    goto LABEL_67;
  }
  BOOL v44 = 1;
LABEL_85:
  unint64_t v72 = v92;
  swift_beginAccess();
  *unint64_t v72 = v44;
LABEL_86:
  swift_getObjectType();
  unint64_t v73 = (unint64_t)sub_100219520();
  swift_beginAccess();
  unint64_t v74 = swift_bridgeObjectRetain();
  sub_1001B1E4C(v74);
  swift_endAccess();
  id result = (id)_MTLogCategoryPlayback();
  if (!result)
  {
LABEL_105:
    __break(1u);
    return result;
  }
  uint64_t v56 = result;
  static os_log_type_t.default.getter();
  sub_100054B78(&qword_1005F7720);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_10046D030;
  id v76 = [v40 id];
  uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v79 = v78;

  *(void *)(v75 + 56) = &type metadata for String;
  *(void *)(v75 + 64) = sub_10004DA4C();
  *(void *)(v75 + 32) = v77;
  *(void *)(v75 + 4sub_1001DA808(0, 0) = v79;
  if (v73 >> 62) {
    goto LABEL_96;
  }
  uint64_t v80 = *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    *(void *)(v75 + 96) = &type metadata for Int;
    *(void *)(v75 + 104) = &protocol witness table for Int;
    *(void *)(v75 + 72) = v80;
    os_log(_:dso:log:type:_:)();
    swift_unknownObjectRelease();
LABEL_90:

    swift_bridgeObjectRelease();
LABEL_91:
    uint64_t v75 = a11;
    swift_beginAccess();
    uint64_t v81 = *(void *)(*(void *)(a12 + 16) + 16);
    uint64_t v56 = (void *)(a11 + v81);
    if (!__OFADD__(a11, v81)) {
      break;
    }
    __break(1u);
LABEL_96:
    swift_bridgeObjectRetain();
    uint64_t v80 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v82 = *v34;
  unint64_t v83 = v92;
  swift_beginAccess();
  uint64_t v84 = *v83;
  swift_bridgeObjectRetain();
  sub_100212C48(v56, a13, a14, a15, a16, a17, v82, v84, v94, v93);
  return (id)swift_bridgeObjectRelease();
}

void sub_100217D14(uint64_t a1)
{
  int64_t v2 = v1;
  id v4 = (id)_MTLogCategoryPlayback();
  if (!v4)
  {
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
LABEL_182:
    __break(1u);
LABEL_183:
    __break(1u);
LABEL_184:
    __break(1u);
LABEL_185:
    __break(1u);
LABEL_186:
    __break(1u);
    return;
  }
  uint64_t v5 = v4;
  static os_log_type_t.default.getter();
  uint64_t v6 = (char **)sub_100054B78(&qword_1005F7720);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10046D010;
  uint64_t v8 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62) {
    goto LABEL_136;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (2)
  {
    *(void *)(v7 + 56) = &type metadata for Int;
    *(void *)(v7 + 64) = &protocol witness table for Int;
    *(void *)(v7 + 32) = v9;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    if (!v9) {
      return;
    }
    int64_t v105 = v9;
    uint64_t v10 = (uint64_t)&selRef_indexPathForFirstRow;
    id v11 = [(id)v2 items];
    if (!v11) {
      goto LABEL_176;
    }
    uint64_t v12 = v11;
    uint64_t v5 = (void *)sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((unint64_t)v13 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v14)
    {
      uint64_t v104 = v8;
      uint64_t v15 = &selRef_block;
      id v16 = [(id)v2 currentIndex];
      id v17 = [(id)v2 items];
      if (!v17) {
        goto LABEL_177;
      }
      uint64_t v18 = v17;
      unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v20 >= 1 && (unint64_t)v16 < v20)
      {
        id v21 = (id)_MTLogCategoryPlayback();
        if (!v21) {
          goto LABEL_178;
        }
        uint64_t v13 = (uint64_t)v21;
        static os_log_type_t.default.getter();
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_10046D010;
        id v22 = [(id)v2 items];
        if (!v22) {
          goto LABEL_179;
        }
        uint64_t v23 = v22;
        unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (!(v24 >> 62))
        {
          uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_18;
        }
        goto LABEL_143;
      }
      goto LABEL_70;
    }
    uint64_t v41 = *(void *)(v2 + OBJC_IVAR___MTNetworkMediaManifest_forwardItemCount);
    BOOL v28 = __OFADD__(v41, 1);
    int64_t v42 = v41 + 1;
    if (v28)
    {
      while (1)
      {
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
LABEL_18:
        swift_bridgeObjectRelease();
        uint64_t v15 = &selRef_block;
        unint64_t v26 = (unint64_t)[(id)v2 currentIndex];
        if ((v26 & 0x8000000000000000) != 0) {
          break;
        }
        uint64_t v27 = v25 - v26;
        if (__OFSUB__(v25, v26)) {
          goto LABEL_145;
        }
        BOOL v28 = __OFSUB__(v27, 1);
        uint64_t v29 = v27 - 1;
        if (v28) {
          goto LABEL_146;
        }
        *(void *)(v8 + 56) = &type metadata for Int;
        *(void *)(v8 + 64) = &protocol witness table for Int;
        *(void *)(v8 + 32) = v29;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        unint64_t v30 = (unint64_t)[(id)v2 currentIndex];
        if ((v30 & 0x8000000000000000) != 0) {
          goto LABEL_147;
        }
        unint64_t v31 = v30;
        id v32 = [(id)v2 *(SEL *)(v10 + 3680)];
        if (!v32) {
          goto LABEL_180;
        }
        uint64_t v33 = v32;
        unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v8 = v31 + 1;
        if (!__OFADD__(v31, 1))
        {
          if (v34 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v100 < 0) {
              goto LABEL_186;
            }
            swift_bridgeObjectRetain();
            uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v101 < v8)
            {
LABEL_156:
              __break(1u);
              goto LABEL_157;
            }
          }
          else if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) < v8)
          {
            goto LABEL_156;
          }
          if (v8 < 0) {
            goto LABEL_158;
          }
          uint64_t v35 = v6;
          if ((v34 & 0xC000000000000001) != 0)
          {
            Swift::Int v36 = 0;
            do
            {
              Swift::Int v37 = v36 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v36);
              Swift::Int v36 = v37;
            }
            while (v8 != v37);
          }
          if (v34 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v39 = _CocoaArrayWrapper.subscript.getter();
            uint64_t v102 = v51;
            uint64_t v38 = v52;
            unint64_t v40 = v53;
            swift_bridgeObjectRelease_n();
          }
          else
          {
            uint64_t v38 = 0;
            uint64_t v39 = v34 & 0xFFFFFFFFFFFFFF8;
            uint64_t v102 = (v34 & 0xFFFFFFFFFFFFFF8) + 32;
            unint64_t v40 = (2 * v8) | 1;
          }
          uint64_t v6 = v35;
          uint64_t v10 = 0x1005DA000;
          if ((v40 & 1) == 0)
          {
LABEL_62:
            sub_10025C250(v39, v102, v38, v40);
LABEL_69:
            swift_unknownObjectRelease();
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_release();
            [(id)v2 setItems:isa];

            uint64_t v15 = &selRef_block;
LABEL_70:
            uint64_t v103 = v6;
            id v57 = [v2 currentIndex:v102];
            uint64_t v58 = NSNotFound.getter();
            uint64_t v6 = &selRef_dismissActionSheetsAndPopovers;
            if ((v58 & 0x8000000000000000) == 0 && v57 == (id)v58)
            {
              id v59 = [(id)v2 *(SEL *)(v10 + 3680)];
              uint64_t v8 = v104;
              if (!v59) {
                goto LABEL_181;
              }
              uint64_t v60 = v59;
              uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if (!((unint64_t)v13 >> 62))
              {
                unint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (v14) {
                  goto LABEL_75;
                }
                goto LABEL_149;
              }
              goto LABEL_148;
            }
            unint64_t v66 = (unint64_t)[(id)v2 currentIndex];
            if ((v66 & 0x8000000000000000) == 0)
            {
              unint64_t v67 = v66;
              id v68 = [(id)v2 *(SEL *)(v10 + 3680)];
              if (!v68) {
                goto LABEL_182;
              }
              uint64_t v8 = (uint64_t)v68;
              uint64_t v69 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if ((v69 & 0xC000000000000001) != 0) {
                goto LABEL_153;
              }
              if (v67 < *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v70 = *(id *)(v69 + 8 * v67 + 32);
                goto LABEL_88;
              }
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
              goto LABEL_164;
            }
            __break(1u);
            goto LABEL_152;
          }
          type metadata accessor for __ContiguousArrayStorageBase();
          swift_unknownObjectRetain_n();
          uint64_t v54 = (void *)swift_dynamicCastClass();
          if (!v54)
          {
            swift_unknownObjectRelease();
            uint64_t v54 = _swiftEmptyArrayStorage;
          }
          uint64_t v55 = v54[2];
          swift_release();
          if (__OFSUB__(v40 >> 1, v38))
          {
            __break(1u);
          }
          else if (v55 == (v40 >> 1) - v38)
          {
            uint64_t v10 = (uint64_t)&selRef_indexPathForFirstRow;
            if (!swift_dynamicCastClass()) {
              swift_unknownObjectRelease();
            }
            goto LABEL_69;
          }
          swift_unknownObjectRelease();
          uint64_t v10 = 0x1005DA000;
          goto LABEL_62;
        }
LABEL_152:
        __break(1u);
LABEL_153:
        id v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_88:
        char v71 = v70;
        swift_bridgeObjectRelease();
        id v64 = [v71 v6[160]];

        uint64_t v10 = 1;
        uint64_t v65 = a1 & 0xFFFFFFFFFFFFFF8;
        if (!v104) {
          goto LABEL_89;
        }
        while (1)
        {
LABEL_81:
          swift_bridgeObjectRetain();
          uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v7) {
            goto LABEL_90;
          }
LABEL_82:
          uint64_t v8 = 0;
LABEL_102:
          uint64_t v13 = v8 + 1;
          uint64_t v6 = v103;
          if (__OFADD__(v8, 1)) {
            break;
          }
          if (v13 >= v105) {
            return;
          }
          uint64_t v77 = *(void *)(v2 + OBJC_IVAR___MTNetworkMediaManifest_forwardItemCount);
          BOOL v28 = __OFADD__(v13, v77);
          int64_t v78 = v13 + v77;
          if (v28) {
            goto LABEL_159;
          }
          uint64_t v79 = (void *)v2;
          if (v105 >= v78) {
            int64_t v2 = v78;
          }
          else {
            int64_t v2 = v105;
          }
          uint64_t v8 = v104;
          if (v2 < v13) {
            goto LABEL_160;
          }
          if (v104)
          {
            swift_bridgeObjectRetain();
            uint64_t v80 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v80 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v80 < v13) {
            goto LABEL_161;
          }
          if (v13 < 0) {
            goto LABEL_162;
          }
          if (v104)
          {
            swift_bridgeObjectRetain();
            uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v81 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v81 < v2) {
            goto LABEL_163;
          }
          if ((a1 & 0xC000000000000001) != 0 && v13 != v2)
          {
            if (v13 >= (unint64_t)v2)
            {
              __break(1u);
              goto LABEL_175;
            }
            Swift::Int v82 = v13;
            do
            {
              Swift::Int v83 = v82 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v82);
              Swift::Int v82 = v83;
            }
            while (v2 != v83);
          }
          if (v104)
          {
            swift_bridgeObjectRetain();
            uint64_t v84 = _CocoaArrayWrapper.subscript.getter();
            uint64_t v85 = v87;
            uint64_t v13 = v88;
            unint64_t v86 = v89;
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v84 = a1 & 0xFFFFFFFFFFFFFF8;
            uint64_t v85 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
            unint64_t v86 = (2 * v2) | 1;
            swift_bridgeObjectRetain();
          }
          swift_unknownObjectRetain();
          id v90 = [v79 items];
          if (!v90) {
            goto LABEL_183;
          }
          uint64_t v91 = v90;
          uint64_t v92 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_1001B1BAC(v84, v85, v13, v86);
          uint64_t v8 = v92;
          if (v92)
          {
            v93.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
          }
          else
          {
            v93.super.Class isa = 0;
          }
          [v79 setItems:v93.super.isa];

          [v79 postLoadedAdditionalItemsNotification];
          [v79 postManifestDidChangeNotification];
          id v94 = (id)_MTLogCategoryPlayback();
          if (!v94) {
            goto LABEL_184;
          }
          a1 = (uint64_t)v94;
          uint64_t v5 = (void *)static os_log_type_t.default.getter();
          uint64_t v95 = swift_allocObject();
          *(_OWORD *)(v95 + 16) = xmmword_10046D010;
          BOOL v28 = __OFSUB__(v86 >> 1, v13);
          int64_t v2 = (v86 >> 1) - v13;
          if (!v28)
          {
            *(void *)(v95 + 56) = &type metadata for Int;
            *(void *)(v95 + 64) = &protocol witness table for Int;
            *(void *)(v95 + 32) = v2;
            os_log(_:dso:log:type:_:)();

            swift_bridgeObjectRelease();
            id v96 = (id)_MTLogCategoryPlayback();
            if (!v96) {
              goto LABEL_185;
            }
            uint64_t v97 = v96;
            static os_log_type_t.default.getter();
            uint64_t v98 = swift_allocObject();
            *(_OWORD *)(v98 + 16) = xmmword_10046D010;
            unint64_t v99 = sub_100218BFC();
            *(void *)(v98 + 56) = sub_100054B78(&qword_1005F7308);
            *(void *)(v98 + 64) = sub_100044200(&qword_1005FB018, &qword_1005F7308);
            *(void *)(v98 + 32) = v99;
            os_log(_:dso:log:type:_:)();
            swift_unknownObjectRelease();

            swift_bridgeObjectRelease();
            return;
          }
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_80:
          int v63 = v62;
          swift_bridgeObjectRelease();
          id v64 = [v63 v6[160]];

          uint64_t v10 = 1;
          uint64_t v65 = a1 & 0xFFFFFFFFFFFFFF8;
          if (!v8) {
            goto LABEL_89;
          }
        }
        __break(1u);
      }
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      swift_bridgeObjectRetain();
      unint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_75:
        unint64_t v61 = v14 - 1;
        if (__OFSUB__(v14, 1)) {
          goto LABEL_165;
        }
        if ((v13 & 0xC000000000000001) != 0) {
          goto LABEL_166;
        }
        if ((v61 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v61 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v62 = *(id *)(v13 + 8 * v61 + 32);
          goto LABEL_80;
        }
        __break(1u);
LABEL_169:
        __break(1u);
        goto LABEL_170;
      }
LABEL_149:
      swift_bridgeObjectRelease();
      id v64 = 0;
      uint64_t v10 = 0;
      uint64_t v65 = a1 & 0xFFFFFFFFFFFFFF8;
      if (v8) {
        goto LABEL_81;
      }
LABEL_89:
      uint64_t v7 = *(void *)(v65 + 16);
      if (v7)
      {
LABEL_90:
        uint64_t v102 = v2;
        uint64_t v8 = 0;
        int64_t v2 = a1 & 0xC000000000000001;
        while (1)
        {
          if (v2) {
            id v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v72 = *(id *)(a1 + 8 * v8 + 32);
          }
          unint64_t v73 = v72;
          id v74 = [v72 v6[160] v102];

          if (v74 == v64) {
            char v75 = v10;
          }
          else {
            char v75 = 0;
          }
          if (v75) {
            goto LABEL_101;
          }
          uint64_t v76 = v8 + 1;
          if (__OFADD__(v8, 1)) {
            break;
          }
          ++v8;
          if (v76 == v7)
          {
            uint64_t v8 = 0;
LABEL_101:
            int64_t v2 = v102;
            goto LABEL_102;
          }
        }
        __break(1u);
LABEL_136:
        swift_bridgeObjectRetain();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        continue;
      }
      goto LABEL_82;
    }
    break;
  }
  uint64_t v15 = (char **)v2;
  if (v42 >= v105) {
    int64_t v2 = v105;
  }
  else {
    int64_t v2 = v42;
  }
  if (v2 < 0) {
    goto LABEL_141;
  }
  if (v8)
  {
    if (a1 < 0) {
      uint64_t v6 = (char **)a1;
    }
    else {
      uint64_t v6 = (char **)(a1 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13 < 0) {
      goto LABEL_169;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = (char **)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(char ***)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((uint64_t)v6 < v2) {
    goto LABEL_142;
  }
  if ((a1 & 0xC000000000000001) != 0 && v2)
  {
    Swift::Int v43 = 0;
    do
    {
      Swift::Int v44 = v43 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v43);
      Swift::Int v43 = v44;
    }
    while (v2 != v44);
  }
  if (!v8)
  {
    uint64_t v6 = (char **)(a1 & 0xFFFFFFFFFFFFFF8);
    uint64_t v13 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v14 = (2 * v2) | 1;
    swift_bridgeObjectRetain();
    goto LABEL_53;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = (char **)_CocoaArrayWrapper.subscript.getter();
  uint64_t v13 = v45;
  uint64_t v8 = v46;
  unint64_t v14 = v47;
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
LABEL_52:
    sub_10025C250((uint64_t)v6, v13, v8, v14);
    goto LABEL_59;
  }
LABEL_53:
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v48 = (void *)swift_dynamicCastClass();
  if (!v48)
  {
    swift_unknownObjectRelease();
    uint64_t v48 = _swiftEmptyArrayStorage;
  }
  uint64_t v49 = v48[2];
  swift_release();
  if (__OFSUB__(v14 >> 1, v8))
  {
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  if (v49 != (v14 >> 1) - v8)
  {
LABEL_171:
    swift_unknownObjectRelease();
    goto LABEL_52;
  }
  if (!swift_dynamicCastClass()) {
    swift_unknownObjectRelease();
  }
LABEL_59:
  swift_unknownObjectRelease();
  Class v50 = Array._bridgeToObjectiveC()().super.isa;
  swift_release();
  [v15 setItems:v50];
}

unint64_t sub_100218AFC()
{
  id v1 = [v0 currentIndex];
  uint64_t v2 = (uint64_t)[v0 count];
  uint64_t v3 = [v0 count];
  if (v2 < 1 || (unint64_t)v1 >= v2) {
    return (unint64_t)v3;
  }
  unint64_t result = (unint64_t)[v0 currentIndex];
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  int64_t v6 = (int64_t)&v3[-result];
  if (__OFSUB__(v3, result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = (unsigned char *)(v6 - 1);
  if (!__OFSUB__(v6, 1)) {
    return (unint64_t)v3;
  }
LABEL_11:
  __break(1u);
  return result;
}

void *sub_100218BFC()
{
  unint64_t result = [v0 items];
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v2 = result;
  sub_10004D29C(0, (unint64_t *)&qword_1005FD2C0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_14;
  }
LABEL_4:
  unint64_t result = (void *)sub_1001BA4A8(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v3 + 8 * i + 32);
      }
      uint64_t v7 = v6;
      id v8 = [v6 episodeStoreId];

      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1001BA4A8(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

id sub_100218E0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NetworkMediaManifest();
  return [super dealloc];
}

uint64_t sub_100218EF4()
{
  return type metadata accessor for NetworkMediaManifest();
}

void sub_100218EFC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a1)
  {
    id v21 = a1;
    id v5 = [v21 uuid];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;

      sub_100054B78(&qword_1005F7720);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_10046D010;
      *(void *)(v10 + 56) = &type metadata for String;
      *(void *)(v10 + 64) = sub_10004DA4C();
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 4sub_1001DA808(0, 0) = v9;
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      swift_bridgeObjectRetain();
      id v11 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();

      id v12 = objc_allocWithZone((Class)MTEpisodeManifest);
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v20 = [v12 initWithEpisodeUuid:v13];

      a4(v20);
      unint64_t v14 = v20;
    }
    else
    {
      sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
      unint64_t v19 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      a4(0);
      unint64_t v14 = v21;
    }
  }
  else
  {
    sub_100054B78(&qword_1005F7720);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10046D010;
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_10004DA4C();
    *(void *)(v17 + 32) = a2;
    *(void *)(v17 + 4sub_1001DA808(0, 0) = a3;
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    a4(0);
  }
}

uint64_t sub_100219234()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100219274()
{
  sub_100212350(v0[2], v0[3], v0[4]);
}

uint64_t sub_100219280()
{
  return swift_deallocObject();
}

unint64_t sub_100219290()
{
  unint64_t result = qword_1005FB010;
  if (!qword_1005FB010)
  {
    sub_10004D29C(255, &qword_1005F6BF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FB010);
  }
  return result;
}

void *sub_1002192F8(void *a1)
{
  type metadata accessor for ServerPodcast();
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = v2;
    swift_unknownObjectRetain();
    uint64_t v4 = dispatch thunk of ServerPodcast.episodes.getter();
    if (v4)
    {
      unint64_t v5 = v4;
      id v6 = a1;
      uint64_t v7 = sub_100219758(v5, v3);
      swift_bridgeObjectRelease();
    }
    else
    {

      return _swiftEmptyArrayStorage;
    }
    return v7;
  }
  type metadata accessor for ServerPodcastStation();
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!swift_dynamicCastClass()) {
    return v7;
  }
  swift_unknownObjectRetain();
  unint64_t v8 = dispatch thunk of ServerPodcastStation.episodes.getter();
  if (!v8)
  {

    return v7;
  }
  unint64_t v9 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_8;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v7 = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease();
    return v7;
  }
  swift_bridgeObjectRetain();
  unint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = (uint64_t)result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_8:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(v9 + 8 * i + 32);
      }
      unint64_t v14 = v13;
      id v15 = [objc_allocWithZone((Class)MTPlayerItem) initWithPodcastEpisode:v13 podcast:0];

      if (v15)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

void *sub_100219520()
{
  type metadata accessor for ServerPodcast();
  uint64_t v0 = swift_dynamicCastClass();
  if (v0)
  {
    uint64_t v1 = v0;
    swift_unknownObjectRetain();
    uint64_t v2 = dispatch thunk of ServerPodcast.episodes.getter();
    if (v2)
    {
      unint64_t v3 = v2;
      swift_unknownObjectRetain();
      uint64_t v4 = sub_100219758(v3, v1);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
    }
    else
    {
      swift_unknownObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v4;
  }
  type metadata accessor for ServerPodcastStation();
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (!swift_dynamicCastClass()) {
    return v4;
  }
  swift_unknownObjectRetain();
  unint64_t v5 = dispatch thunk of ServerPodcastStation.episodes.getter();
  if (!v5)
  {
    swift_unknownObjectRelease();
    return v4;
  }
  unint64_t v6 = v5;
  if (!(v5 >> 62))
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_8;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v4 = _swiftEmptyArrayStorage;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return v4;
  }
  swift_bridgeObjectRetain();
  unint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v7 = (uint64_t)result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_8:
  if (v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v6 + 8 * i + 32);
      }
      id v11 = v10;
      id v12 = [objc_allocWithZone((Class)MTPlayerItem) initWithPodcastEpisode:v10 podcast:0];

      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

void *sub_100219758(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [objc_allocWithZone((Class)MTPlayerItem) initWithPodcastEpisode:v6 podcast:a2];

      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v5;
      if (v8 == v4) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1002198E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)&v2[OBJC_IVAR___MTNetworkMediaManifest_manifestWorkQueue];
  id v13 = (void *)swift_allocObject();
  v13[2] = v2;
  void v13[3] = a1;
  void v13[4] = a2;
  aBlock[4] = sub_10021A46C;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10003B424;
  void aBlock[3] = &unk_100559F90;
  unint64_t v14 = _Block_copy(aBlock);
  id v15 = v2;
  sub_10004ACDC(a1);
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  sub_100055BB0((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100054B78((uint64_t *)&unk_1005FE4B0);
  sub_100044200((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_100219BBC(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MediaRequest.ContentType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + OBJC_IVAR___MTNetworkMediaManifest_refreshInProgress))
  {
    if (a1)
    {
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = a1;
      *(void *)(v9 + 24) = a2;
      uint64_t v10 = sub_10004A010;
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v9 = 0;
    }
    id v22 = (void **)(v2 + OBJC_IVAR___MTNetworkMediaManifest_inProgressRefreshHandlers);
    swift_beginAccess();
    uint64_t v23 = *v22;
    sub_10004ACDC((uint64_t)a1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *id v22 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v23 = sub_1002EFA10(0, v23[2] + 1, 1, v23);
      *id v22 = v23;
    }
    unint64_t v26 = v23[2];
    unint64_t v25 = v23[3];
    if (v26 >= v25 >> 1)
    {
      uint64_t v23 = sub_1002EFA10((void *)(v25 > 1), v26 + 1, 1, v23);
      *id v22 = v23;
    }
    v23[2] = v26 + 1;
    uint64_t v27 = &v23[2 * v26];
    v27[4] = v10;
    void v27[5] = v9;
    return swift_endAccess();
  }
  else
  {
    *(unsigned char *)(v2 + OBJC_IVAR___MTNetworkMediaManifest_refreshInProgress) = 1;
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v12 = (void *)swift_allocObject();
    void v12[2] = v11;
    _OWORD v12[3] = a1;
    v12[4] = a2;
    swift_retain();
    sub_10004ACDC((uint64_t)a1);
    int64_t v13 = sub_100218AFC();
    uint64_t v14 = OBJC_IVAR___MTNetworkMediaManifest_forwardItemCount;
    if (v13 >= *(void *)(v2 + OBJC_IVAR___MTNetworkMediaManifest_forwardItemCount))
    {
      sub_100216E50(0, 0, v11, a1);
      swift_release();
      return swift_release();
    }
    else
    {
      swift_release();
      uint64_t v15 = *(void *)(v2 + OBJC_IVAR___MTNetworkMediaManifest_initialIds);
      swift_getObjectType();
      if (v15)
      {
        id v16 = *(void **)(v2 + OBJC_IVAR___MTNetworkMediaManifest_mediaRequestController);
        uint64_t v17 = v2 + OBJC_IVAR___MTNetworkMediaManifest_contentType;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17, v5);
        uint64_t v18 = *(void *)(v2 + v14);
        uint64_t v19 = *(void *)(v2 + OBJC_IVAR___MTNetworkMediaManifest_episodeFetchLimit);
        swift_bridgeObjectRetain();
        id v20 = v16;
        swift_retain();
        sub_100212C48(0, v15, v20, (uint64_t)v8, v18, v19, (unint64_t)_swiftEmptyArrayStorage, 0, (uint64_t (*)(void, void))sub_10021A518, (uint64_t)v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        BOOL v28 = *(void **)(v2 + OBJC_IVAR___MTNetworkMediaManifest_mediaRequestController);
        uint64_t v29 = v2 + OBJC_IVAR___MTNetworkMediaManifest_contentType;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v29, v5);
        uint64_t v30 = *(void *)(v2 + v14);
        uint64_t v31 = *(void *)(v2 + OBJC_IVAR___MTNetworkMediaManifest_episodeFetchLimit);
        swift_retain();
        id v32 = v28;
        sub_100212C48(0, (uint64_t)_swiftEmptyArrayStorage, v32, (uint64_t)v8, v30, v31, (unint64_t)_swiftEmptyArrayStorage, 0, (uint64_t (*)(void, void))sub_10021A518, (uint64_t)v12);
      }
      swift_release_n();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

uint64_t sub_10021A01C(void *a1, void (**a2)(void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
  id v5 = a1;
  _Block_copy(a2);
  uint64_t v6 = static OS_os_log.default.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    id v9 = [v5 itemIdentifier];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v12;
    }
    else
    {
      unint64_t v13 = 0xE500000000000000;
      uint64_t v11 = 0x3E4C494E3CLL;
    }
    sub_10004B974(v11, v13, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "NetworkMediaManifest: Attempting to restore activity with identifier: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v14 = [v5 itemIdentifier];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    id v19 = [v5 containerIdentifier];
    if (v19)
    {
      id v20 = v19;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    type metadata accessor for CoreDataFetcher();
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v16;
    void v23[3] = v18;
    v23[4] = sub_10021A39C;
    void v23[5] = v4;
    swift_bridgeObjectRetain();
    swift_retain();
    static CoreDataFetcher.fetchEpisode(for:on:completion:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    id v21 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    a2[2](a2, 0);
    return swift_release();
  }
}

uint64_t sub_10021A364()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_10021A39C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_10021A3B0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_10021A3F0(void *a1)
{
  sub_100218EFC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(id))(v1 + 32));
}

uint64_t sub_10021A3FC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10021A410(a1, a2);
  }
  return a1;
}

uint64_t sub_10021A410(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10021A46C()
{
  return sub_100219BBC(*(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10021A498()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10021A4D0()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_10021A518(uint64_t a1, char a2)
{
  sub_100216E50(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24));
}

uint64_t sub_10021A524()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10021A55C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10021A594()
{
  return swift_deallocObject();
}

uint64_t sub_10021A5A4()
{
  uint64_t v1 = type metadata accessor for MediaRequest.ContentType();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 88) & ~v3), v1);

  return swift_deallocObject();
}

id sub_10021A6B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for MediaRequest.ContentType() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100216FA8(a1, a2, a3, a4, a5, *(uint64_t (**)(void, void))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), v5 + v12, *(void *)(v5 + v13), *(void *)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10021A7AC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10021A7F0()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10021A838()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  if (v1) {
    return v1();
  }
  return result;
}

void sub_10021A868(uint64_t a1)
{
  sub_100215184(a1, *(void *)(v1 + 16));
}

uint64_t CategoryIngester.__deallocating_deinit()
{
  sub_10004D2D8(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_10021A8B4(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  return sub_10021B734(a1, a2, a3, a4, a5);
}

uint64_t sub_10021A8D8(uint64_t a1, char a2, __int16 a3, uint64_t a4)
{
  switch(a2)
  {
    case 0:
      if ((a3 & 0x100) != 0)
      {
        if (a4)
        {
          sub_100054B78(&qword_1005FB138);
          uint64_t v8 = swift_allocObject();
          uint64_t v6 = 0;
          *(_OWORD *)(v8 + 16) = xmmword_10046D010;
          *(void *)(v8 + 32) = a1;
          *(unsigned char *)(v8 + 4sub_1001DA808(0, 0) = 0;
        }
        else
        {
          uint64_t v6 = 0;
        }
      }
      else if (a4)
      {
        sub_100054B78(&qword_1005FB138);
        uint64_t v5 = swift_allocObject();
        uint64_t v6 = 0;
        *(_OWORD *)(v5 + 16) = xmmword_10046D030;
        *(void *)(v5 + 32) = a1;
        *(unsigned char *)(v5 + 4sub_1001DA808(0, 0) = 0;
        *(void *)(v5 + 48) = 0;
        *(unsigned char *)(v5 + 56) = 2;
      }
      else
      {
        uint64_t v6 = 0;
      }
      break;
    case 2:
      goto LABEL_6;
    case 3:
      if (a3)
      {
        if ((a3 & 0x100) != 0)
        {
          if (a4 != 1)
          {
            sub_100054B78(&qword_1005FB138);
            uint64_t v11 = swift_allocObject();
            *(_OWORD *)(v11 + 16) = xmmword_10046D010;
            *(void *)(v11 + 32) = a1;
            *(unsigned char *)(v11 + 4sub_1001DA808(0, 0) = 1;
          }
LABEL_28:
          uint64_t v6 = 3;
        }
        else
        {
          uint64_t v6 = 2;
          if (a4 != 1)
          {
            sub_100054B78(&qword_1005FB138);
            uint64_t v10 = swift_allocObject();
            *(_OWORD *)(v10 + 16) = xmmword_10046D030;
            *(void *)(v10 + 32) = 1;
            *(unsigned char *)(v10 + 4sub_1001DA808(0, 0) = 2;
            *(void *)(v10 + 48) = a1;
            *(unsigned char *)(v10 + 56) = 1;
          }
        }
      }
      else
      {
LABEL_6:
        uint64_t v6 = 1;
        if (a4 != 1)
        {
          sub_100054B78(&qword_1005FB138);
          uint64_t v7 = swift_allocObject();
          *(_OWORD *)(v7 + 16) = xmmword_10046D010;
          *(void *)(v7 + 32) = a1;
          *(unsigned char *)(v7 + 4sub_1001DA808(0, 0) = 1;
        }
      }
      break;
    case 4:
      switch(a1)
      {
        case 1:
        case 2:
          if ((a3 & 1) == 0) {
            goto LABEL_19;
          }
          if ((a3 & 0x100) != 0) {
            goto LABEL_28;
          }
          uint64_t v6 = 2;
          break;
        case 5:
        case 6:
          if ((a3 & 0x100) == 0) {
            goto LABEL_19;
          }
          return 1;
        default:
          goto LABEL_19;
      }
      break;
    default:
LABEL_19:
      uint64_t v6 = 1;
      break;
  }
  return v6;
}

uint64_t sub_10021AB78(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v39 - v17;
  __chkstk_darwin(v16);
  id v20 = (char *)&v39 - v19;
  if (!a2)
  {
    if (!a4) {
      return 0;
    }
    sub_100054B78(&qword_1005FB138);
    uint64_t v22 = swift_allocObject();
    uint64_t v21 = 0;
    *(_OWORD *)(v22 + 16) = xmmword_10046D050;
    *(void *)(v22 + 32) = 0;
    *(unsigned char *)(v22 + 4sub_1001DA808(0, 0) = 2;
    *(void *)(v22 + 48) = a1;
    *(unsigned char *)(v22 + 56) = 0;
    goto LABEL_21;
  }
  if (a2 != 2)
  {
    if (a2 != 4) {
      return 2;
    }
    uint64_t v21 = 2;
    switch(a1)
    {
      case 0:
        if (a3) {
          goto LABEL_13;
        }
        return 1;
      case 4:
        return 3;
      case 6:
        return v21;
      case 7:
        if ((a3 & 1) == 0) {
          return 2;
        }
        return 3;
      case 8:
        if (a4 == 2) {
          return v21;
        }
        static Logger.podcastsStatesCoordination.getter();
        unint64_t v34 = Logger.logObject.getter();
        os_log_type_t v35 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v34, v35))
        {
          Swift::Int v36 = (uint8_t *)swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          *(_DWORD *)Swift::Int v36 = 136315138;
          uint64_t v37 = PodcastsStateChangeOrigin.description.getter();
          uint64_t v39 = sub_10004B974(v37, v38, &v40);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
          return 2;
        }

        (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
        break;
      case 9:
        static Logger.podcastsStatesCoordination.getter();
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v33 = 0;
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        return v21;
      default:
        return 2;
    }
    return v21;
  }
  if (a3)
  {
    if (a4 == 1)
    {
LABEL_13:
      static Logger.podcastsStatesCoordination.getter();
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Somehow we end up with an Implicit Follow that does NOT have any play state, that doesn't make sense.", v25, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
      return 1;
    }
    static Logger.podcastsStatesCoordination.getter();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Somehow we end up with an Implicit Follow that does NOT have any play state, that doesn't make sense.", v29, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v20, v8);
    sub_100054B78(&qword_1005FB138);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10046D050;
    *(void *)(v22 + 32) = 0;
    *(unsigned char *)(v22 + 4sub_1001DA808(0, 0) = 2;
    *(void *)(v22 + 48) = a1;
    uint64_t v21 = 1;
    *(unsigned char *)(v22 + 56) = 1;
LABEL_21:
    *(void *)(v22 + 64) = 4;
    *(unsigned char *)(v22 + 72) = 2;
    return v21;
  }
  uint64_t v21 = 1;
  if (a4 != 1)
  {
    sub_100054B78(&qword_1005FB138);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_10046D030;
    *(void *)(v26 + 32) = a1;
    *(unsigned char *)(v26 + 4sub_1001DA808(0, 0) = 1;
    *(void *)(v26 + 48) = 4;
    *(unsigned char *)(v26 + 56) = 2;
  }
  return v21;
}

uint64_t sub_10021B1BC(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  if (a2)
  {
    if (a2 == 2)
    {
      uint64_t v15 = 1;
      if (a4 != 1)
      {
        sub_100054B78(&qword_1005FB138);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_10046D010;
        *(void *)(v17 + 32) = a1;
        *(unsigned char *)(v17 + 4sub_1001DA808(0, 0) = 1;
      }
    }
    else if (a2 == 4)
    {
      uint64_t v15 = 1;
      switch(a1)
      {
        case 0:
          return v15;
        case 3:
          uint64_t v15 = 2;
          break;
        case 5:
          static Logger.podcastsStatesCoordination.getter();
          uint64_t v19 = Logger.logObject.getter();
          os_log_type_t v20 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v19, v20))
          {
            uint64_t v21 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v21 = 0;
            _os_log_impl((void *)&_mh_execute_header, v19, v20, "Somehow we end up with an Implicit Follow that does NOT have any play state, that doesn't make sense.", v21, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
          uint64_t v15 = 2;
          break;
        case 6:
          if (a3)
          {
            uint64_t v15 = 2;
          }
          else
          {
            static Logger.podcastsStatesCoordination.getter();
            uint64_t v22 = Logger.logObject.getter();
            os_log_type_t v23 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v22, v23))
            {
              os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)os_log_type_t v24 = 0;
              _os_log_impl((void *)&_mh_execute_header, v22, v23, "The show has play state but for some reason it's in Store state. This doesn't make any sense, with playState a show should be at least Implicitly Followed. Figure out what's going on.", v24, 2u);
              swift_slowDealloc();
            }

            (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
            uint64_t v15 = 2;
          }
          break;
        default:
          return 3;
      }
    }
    else
    {
      return 3;
    }
  }
  else if (a4)
  {
    sub_100054B78(&qword_1005FB138);
    uint64_t v16 = swift_allocObject();
    uint64_t v15 = 0;
    *(_OWORD *)(v16 + 16) = xmmword_10046D010;
    *(void *)(v16 + 32) = a1;
    *(unsigned char *)(v16 + 4sub_1001DA808(0, 0) = 0;
  }
  else
  {
    return 0;
  }
  return v15;
}

uint64_t sub_10021B530(uint64_t a1, char a2, __int16 a3, uint64_t a4)
{
  if (a2 == 3 || a2 == 2)
  {
    if (a4 != 1)
    {
      sub_100054B78(&qword_1005FB138);
      uint64_t v7 = swift_allocObject();
      uint64_t v6 = 0;
      *(_OWORD *)(v7 + 16) = xmmword_10046D010;
      *(void *)(v7 + 32) = a1;
      *(unsigned char *)(v7 + 4sub_1001DA808(0, 0) = 1;
      return v6;
    }
    return 0;
  }
  if (a2 != 1) {
    return 0;
  }
  if (a3)
  {
    if ((a3 & 0x100) != 0)
    {
      if (a4)
      {
        sub_100054B78(&qword_1005FB138);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_10046D010;
        *(void *)(v11 + 32) = a1;
        *(unsigned char *)(v11 + 4sub_1001DA808(0, 0) = 0;
      }
      return 3;
    }
    else
    {
      uint64_t v6 = 2;
      if (a4)
      {
        sub_100054B78(&qword_1005FB138);
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_10046D050;
        *(void *)(v9 + 32) = a1;
        *(unsigned char *)(v9 + 4sub_1001DA808(0, 0) = 0;
        *(void *)(v9 + 48) = 1;
        *(unsigned char *)(v9 + 56) = 2;
        *(void *)(v9 + 64) = 0;
        *(unsigned char *)(v9 + 72) = 2;
      }
    }
  }
  else if ((a3 & 0x100) != 0)
  {
    if (a4)
    {
      sub_100054B78(&qword_1005FB138);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_10046D010;
      *(void *)(v10 + 32) = a1;
      *(unsigned char *)(v10 + 4sub_1001DA808(0, 0) = 0;
    }
    return 1;
  }
  else
  {
    if (a4)
    {
      sub_100054B78(&qword_1005FB138);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_10046D030;
      *(void *)(v5 + 32) = a1;
      *(unsigned char *)(v5 + 4sub_1001DA808(0, 0) = 0;
      *(void *)(v5 + 48) = 0;
      *(unsigned char *)(v5 + 56) = 2;
    }
    return 1;
  }
  return v6;
}

uint64_t sub_10021B734(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  id v87 = a2;
  uint64_t v84 = a5;
  uint64_t v85 = a3;
  int v86 = a4;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v81 = *(void *)(v7 - 8);
  uint64_t v82 = v7;
  __chkstk_darwin(v7);
  Swift::Int v83 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PodcastStateModel();
  uint64_t v89 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v80 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v71 - v12;
  PodcastStateModel.uuid.getter();
  uint64_t v14 = self;
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 predicateForLibraryEpisodesOnPodcastUuid:v15];

  uint64_t v17 = kMTEpisodeEntityName;
  LODWORD(v79) = [a2 hasAnyObjectsInEntity:kMTEpisodeEntityName satisfyingPredicate:v16];
  swift_bridgeObjectRelease();

  PodcastStateModel.uuid.getter();
  id v18 = [v14 predicateForHasAnyVisualPlayState];
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v14 predicateForAllEpisodesOnPodcastUuid:v19];

  id v21 = [v18 AND:v20];
  uint64_t v22 = v89;
  unsigned int v23 = [v87 hasAnyObjectsInEntity:v17 satisfyingPredicate:v21];
  swift_bridgeObjectRelease();

  os_log_type_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v24(v13, a1, v9);
  uint64_t v25 = v88;
  uint64_t v26 = PodcastStateModel.sanitizedState()();
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v9);
  }
  else
  {
    uint64_t v77 = a1;
    uint64_t v78 = v26;
    uint64_t v27 = v80;
    uint64_t v28 = v84;
    unsigned int v75 = v79 ^ 1;
    int v76 = v23 ^ 1;
    uint64_t v79 = *(void (**)(char *, uint64_t))(v22 + 8);
    v79(v13, v9);
    uint64_t v89 = v22 + 8;
    switch((char)v78)
    {
      case 1:
        if (v23) {
          __int16 v33 = 0;
        }
        else {
          __int16 v33 = 256;
        }
        int v30 = sub_10021A8D8(v85, v86, v33 | (unsigned __int16)v75, v28);
        break;
      case 2:
        int v30 = sub_10021AB78(v85, v86, v76, v28);
        break;
      case 3:
        int v30 = sub_10021B1BC(v85, v86, v76, v28);
        break;
      default:
        if (v23) {
          __int16 v29 = 0;
        }
        else {
          __int16 v29 = 256;
        }
        int v30 = sub_10021B530(v85, v86, v29 | (unsigned __int16)v75, v28);
        break;
    }
    LODWORD(v87) = v30;
    uint64_t v88 = v31;
    int v34 = v32;
    os_log_type_t v35 = v83;
    static Logger.podcastsStatesCoordination.getter();
    int v36 = static os_log_type_t.default.getter();
    v24(v27, v77, v9);
    swift_bridgeObjectRetain_n();
    uint64_t v37 = Logger.logObject.getter();
    int v74 = v36;
    if (os_log_type_enabled(v37, (os_log_type_t)v36))
    {
      os_log_t v72 = v37;
      uint64_t v73 = 0;
      uint64_t v38 = swift_slowAlloc();
      LODWORD(v77) = v34;
      uint64_t v39 = v38;
      uint64_t v71 = swift_slowAlloc();
      uint64_t v94 = v71;
      *(_DWORD *)uint64_t v39 = 136382211;
      uint64_t v40 = PodcastStateModel.id.getter();
      uint64_t v42 = v41;
      unsigned __int8 v44 = v43;
      uint64_t v45 = PodcastIdentifier.description.getter();
      unint64_t v47 = v46;
      sub_10021C03C(v40, v42, v44);
      uint64_t v92 = sub_10004B974(v45, v47, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v48 = v88;
      swift_bridgeObjectRelease();
      v79(v27, v9);
      *(_WORD *)(v39 + 12) = 2080;
      LOBYTE(v92) = v78;
      sub_10021C058();
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v92 = sub_10004B974(v49, v50, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2080;
      unint64_t v51 = sub_1003017F0(v85, v86);
      uint64_t v92 = sub_10004B974(v51, v52, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 32) = 2080;
      LOBYTE(v92) = v75;
      sub_10021C0AC();
      uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v92 = sub_10004B974(v53, v54, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 42) = 2080;
      LOBYTE(v92) = v76;
      sub_10021C100();
      uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v92 = sub_10004B974(v55, v56, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 52) = 2080;
      uint64_t v57 = PodcastsStateChangeOrigin.description.getter();
      uint64_t v92 = sub_10004B974(v57, v58, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 62) = 2080;
      uint64_t v59 = 0x697469736E617254;
      if (v77) {
        uint64_t v59 = 0x3A6E6F28706F6F6CLL;
      }
      unint64_t v60 = 0xEF203A6F74286E6FLL;
      if (v77) {
        unint64_t v60 = 0xE900000000000020;
      }
      uint64_t v92 = v59;
      unint64_t v93 = v60;
      unint64_t object = (void *)0xE100000000000000;
      v91._uint64_t countAndFlagsBits = 46;
      v91._unint64_t object = (void *)0xE100000000000000;
      char v90 = (char)v87;
      swift_bridgeObjectRetain();
      v62._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v62);
      swift_bridgeObjectRelease();
      String.append(_:)(v91);
      swift_bridgeObjectRelease();
      if (v48)
      {
        v91._uint64_t countAndFlagsBits = 0x746365666665202CLL;
        v91._unint64_t object = (void *)0xEB00000000203A73;
        swift_bridgeObjectRetain();
        v63._uint64_t countAndFlagsBits = Array.description.getter();
        String.append(_:)(v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v64._uint64_t countAndFlagsBits = 41;
        v64._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v64);
        uint64_t countAndFlagsBits = v91._countAndFlagsBits;
        unint64_t object = v91._object;
      }
      else
      {
        uint64_t countAndFlagsBits = 41;
      }
      uint64_t v67 = v81;
      uint64_t v66 = v82;
      id v68 = object;
      String.append(_:)(*(Swift::String *)&countAndFlagsBits);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v92 = sub_10004B974(v92, v93, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v69 = v72;
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v74, "Show with %{private}s; State: .%s; Event: (.%s, .%s, .%s, from: .%s) ==> %s",
        (uint8_t *)v39,
        0x48u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v67 + 8))(v83, v66);
    }
    else
    {
      v79(v27, v9);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v35, v82);
    }
  }
  return v87;
}

uint64_t sub_10021C03C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10021C058()
{
  unint64_t result = qword_1005FB120;
  if (!qword_1005FB120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FB120);
  }
  return result;
}

unint64_t sub_10021C0AC()
{
  unint64_t result = qword_1005FB128;
  if (!qword_1005FB128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FB128);
  }
  return result;
}

unint64_t sub_10021C100()
{
  unint64_t result = qword_1005FB130;
  if (!qword_1005FB130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FB130);
  }
  return result;
}

uint64_t Migration.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts9Migration_date;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t Migration.uuids.getter()
{
  return swift_bridgeObjectRetain();
}

void Migration.init()()
{
}

uint64_t sub_10021C2D0()
{
  if (*v0) {
    return 0x7364697575;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_10021C300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10021D448(a1, a2);
  *a3 = result;
  return result;
}

void sub_10021C328(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10021C334(uint64_t a1)
{
  unint64_t v2 = sub_10021C698();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10021C370(uint64_t a1)
{
  unint64_t v2 = sub_10021C698();

  return CodingKey.debugDescription.getter(a1, v2);
}

id Migration.__deallocating_deinit()
{
  return sub_10021D40C(0, type metadata accessor for Migration);
}

uint64_t type metadata accessor for Migration()
{
  uint64_t result = qword_1005FB1A8;
  if (!qword_1005FB1A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Migration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100054B78(&qword_1005FB148);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100041A98(a1, a1[3]);
  sub_10021C698();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v12 = 0;
  type metadata accessor for Date();
  sub_10021CAD4(&qword_1005FB158, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC8Podcasts9Migration_uuids);
    v10[15] = 1;
    sub_100054B78((uint64_t *)&unk_100603260);
    sub_10021CB1C(&qword_1005FB160);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10021C698()
{
  unint64_t result = qword_1005FB150;
  if (!qword_1005FB150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FB150);
  }
  return result;
}

void *Migration.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Migration.init(from:)(a1);
}

void *Migration.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v18 = sub_100054B78(&qword_1005FB168);
  uint64_t v16 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100041A98(a1, a1[3]);
  sub_10021C698();
  uint64_t v8 = v3;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    sub_10004D2D8((uint64_t)a1);

    type metadata accessor for Migration();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    LOBYTE(v22) = 0;
    sub_10021CAD4(&qword_1005FB170, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v11 = v18;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v13 = *(void (**)(void))(v10 + 32);
    NSString v15 = &v8[OBJC_IVAR____TtC8Podcasts9Migration_date];
    v13();
    sub_100054B78((uint64_t *)&unk_100603260);
    char v21 = 1;
    sub_10021CB1C(&qword_1005FB178);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)&v8[OBJC_IVAR____TtC8Podcasts9Migration_uuids] = v22;

    uint64_t v14 = (objc_class *)type metadata accessor for Migration();
    v20.receiver = v8;
    v20.super_class = v14;
    uint64_t v7 = [super init];
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v11);
    sub_10004D2D8((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_10021CAD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10021CB1C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100044244((uint64_t *)&unk_100603260);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10021CB80@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for Migration());
  uint64_t result = Migration.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10021CBD8(void *a1)
{
  return Migration.encode(to:)(a1);
}

uint64_t sub_10021CBFC()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10004D29C(0, (unint64_t *)&qword_1005F8B70);
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_10021CAD4((unint64_t *)&qword_1005F5BE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100054B78((uint64_t *)&unk_1005F7A60);
  sub_10005666C((unint64_t *)&qword_1005F5BF0, (uint64_t *)&unk_1005F7A60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_1005FB140 = result;
  return result;
}

uint64_t sub_10021CE50(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v29 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  id v17 = [self sharedDocumentsDirectory];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v35 = 118;
  unint64_t v36 = 0xE100000000000000;
  uint64_t v34 = a1;
  v18._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._uint64_t countAndFlagsBits = 0x6974617267696D2DLL;
  v19._unint64_t object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v19);
  uint64_t v31 = v16;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  URL.appendingPathExtension(_:)();
  objc_super v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v32 = v7;
  v20(v11, v7);
  Date.init()();
  char v21 = (objc_class *)type metadata accessor for Migration();
  uint64_t v22 = (char *)objc_allocWithZone(v21);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v22[OBJC_IVAR____TtC8Podcasts9Migration_date], v6, v3);
  *(void *)&v22[OBJC_IVAR____TtC8Podcasts9Migration_uuids] = v30;
  v33.receiver = v22;
  v33.super_class = v21;
  swift_bridgeObjectRetain();
  id v23 = [super init];
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter();
  uint64_t v35 = (uint64_t)v23;
  sub_10021CAD4((unint64_t *)&unk_1005FB200, (void (*)(uint64_t))type metadata accessor for Migration);
  uint64_t v24 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v26 = v25;
  Data.write(to:options:)();
  sub_10021A410(v24, v26);

  swift_release();
  uint64_t v27 = v32;
  v20(v14, v32);
  return ((uint64_t (*)(char *, uint64_t))v20)(v31, v27);
}

id BookmarksMigrationRegistry.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookmarksMigrationRegistry();
  return [super init];
}

id BookmarksMigrationRegistry.__deallocating_deinit(uint64_t a1)
{
  return sub_10021D40C(a1, type metadata accessor for BookmarksMigrationRegistry);
}

id sub_10021D40C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_10021D448(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7364697575 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void _s8Podcasts26BookmarksMigrationRegistryC08registerC02of2atySaySSG_SitFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    if (qword_1005F5A38 != -1) {
      swift_once();
    }
    v15[0] = qword_1005FB140;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a2;
    *(void *)(v12 + 24) = a1;
    aBlock[4] = sub_10021E218;
    void aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10003B424;
    void aBlock[3] = &unk_10055A238;
    uint64_t v13 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter();
    v15[1] = _swiftEmptyArrayStorage;
    sub_10021CAD4((unint64_t *)&qword_1005FA630, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100054B78((uint64_t *)&unk_1005FE4B0);
    sub_10005666C((unint64_t *)&qword_1005FA640, (uint64_t *)&unk_1005FE4B0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    v15[0] = static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
    uint64_t v14 = (void *)v15[0];
  }
}

uint64_t _s8Podcasts26BookmarksMigrationRegistryC19migrationRegistered2atAA0C0CSgSi_tFZ_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v20 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v20 - v10;
  id v12 = [self sharedDocumentsDirectory];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v21 = 118;
  unint64_t v22 = 0xE100000000000000;
  v20[1] = a1;
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 0x6974617267696D2DLL;
  v14._unint64_t object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v14);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  URL.appendingPathExtension(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  uint64_t v16 = Data.init(contentsOf:options:)();
  unint64_t v18 = v17;
  type metadata accessor for Migration();
  sub_10021CAD4(&qword_1005FB1F8, (void (*)(uint64_t))type metadata accessor for Migration);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  sub_10021A410(v16, v18);
  swift_release();
  v15(v9, v2);
  v15(v11, v2);
  return v21;
}

uint64_t _s8Podcasts26BookmarksMigrationRegistryC06deletecD02atySi_tFZ_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v26 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v26 - v10;
  id v12 = [self sharedDocumentsDirectory];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v27[0] = (id)118;
  v27[1] = (id)0xE100000000000000;
  _OWORD v26[2] = a1;
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 0x6974617267696D2DLL;
  v14._unint64_t object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v14);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  URL.appendingPathExtension(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  id v16 = [self defaultManager];
  URL._bridgeToObjectiveC()(v17);
  Swift::String v19 = v18;
  v27[0] = 0;
  LODWORD(v12) = [v16 removeItemAtURL:v18 error:v27];

  if (v12)
  {
    id v20 = v27[0];
  }
  else
  {
    id v21 = v27[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static os_log_type_t.error.getter();
    sub_100054B78(&qword_1005F7720);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10046D010;
    uint64_t v23 = _convertErrorToNSError(_:)();
    *(void *)(v22 + 56) = sub_10004D29C(0, &qword_1005F6BF0);
    *(void *)(v22 + 64) = sub_100219290();
    *(void *)(v22 + 32) = v23;
    sub_10004D29C(0, (unint64_t *)&qword_1005F89D0);
    uint64_t v24 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
  v15(v9, v2);
  return ((uint64_t (*)(char *, uint64_t))v15)(v11, v2);
}

uint64_t type metadata accessor for BookmarksMigrationRegistry()
{
  return self;
}

uint64_t sub_10021DF30()
{
  return type metadata accessor for Migration();
}

uint64_t sub_10021DF38()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Migration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10021E0A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Migration.CodingKeys()
{
  return &type metadata for Migration.CodingKeys;
}

unint64_t sub_10021E0DC()
{
  unint64_t result = qword_1005FB1E0;
  if (!qword_1005FB1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FB1E0);
  }
  return result;
}

unint64_t sub_10021E134()
{
  unint64_t result = qword_1005FB1E8;
  if (!qword_1005FB1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FB1E8);
  }
  return result;
}

unint64_t sub_10021E18C()
{
  unint64_t result = qword_1005FB1F0;
  if (!qword_1005FB1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005FB1F0);
  }
  return result;
}

uint64_t sub_10021E1E0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10021E218()
{
  return sub_10021CE50(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10021E224(unint64_t a1, void *a2, int a3)
{
  int v41 = a3;
  uint64_t v40 = a2;
  uint64_t v48 = swift_isaMask & *v3;
  uint64_t v42 = v3;
  uint64_t v5 = *(void *)(v48 + 80);
  uint64_t v6 = type metadata accessor for Optional();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v34 - v7;
  if (a1 >> 62) {
    goto LABEL_43;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v10 = 0;
    unint64_t v39 = a1 & 0xC000000000000001;
    uint64_t v36 = a1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v37 = a1;
    unint64_t v35 = a1 + 32;
    a1 = v5 - 8;
    uint64_t v38 = v9;
    while (1)
    {
      if (v39)
      {
        id v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v13 = __OFADD__(v10, 1);
        unint64_t v14 = v10 + 1;
        if (v13) {
          break;
        }
        goto LABEL_11;
      }
      if (v10 >= *(void *)(v36 + 16)) {
        goto LABEL_42;
      }
      id v12 = *(void **)(v35 + 8 * v10);
      swift_unknownObjectRetain();
      BOOL v13 = __OFADD__(v10, 1);
      unint64_t v14 = v10 + 1;
      if (v13) {
        break;
      }
LABEL_11:
      unint64_t v43 = v14;
      id v15 = v40;
      if (v41) {
        id v15 = [v12 phase];
      }
      id v16 = (void *)((char *)v42 + qword_1005FB210);
      swift_beginAccess();
      uint64_t v17 = *v16;
      if ((*v16 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        __CocoaSet.makeIterator()();
        Set.Iterator.init(_cocoa:)();
        uint64_t v17 = v49;
        uint64_t v46 = v50;
        uint64_t v18 = v51;
        uint64_t v19 = v52;
        unint64_t v20 = v53;
      }
      else
      {
        uint64_t v21 = -1 << *(unsigned char *)(v17 + 32);
        uint64_t v22 = *(void *)(v17 + 56);
        uint64_t v46 = v17 + 56;
        uint64_t v23 = ~v21;
        uint64_t v24 = -v21;
        if (v24 < 64) {
          uint64_t v25 = ~(-1 << v24);
        }
        else {
          uint64_t v25 = -1;
        }
        unint64_t v20 = v25 & v22;
        swift_bridgeObjectRetain();
        uint64_t v18 = v23;
        uint64_t v19 = 0;
      }
      uint64_t v47 = v17 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v44 = v18;
      int64_t v45 = (unint64_t)(v18 + 64) >> 6;
      while (v17 < 0)
      {
        if (!__CocoaSet.Iterator.next()()) {
          goto LABEL_4;
        }
        _forceBridgeFromObjectiveC<A>(_:_:)();
        swift_unknownObjectRelease();
        uint64_t v28 = *(void *)(v5 - 8);
LABEL_22:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v8, 0, 1, v5);
        (*(void (**)(id, void *, uint64_t))(*(void *)(v48 + 88) + 16))(v15, v12, v5);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
      }
      if (v20)
      {
        unint64_t v26 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        unint64_t v27 = v26 | (v19 << 6);
LABEL_21:
        uint64_t v28 = *(void *)(v5 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v8, *(void *)(v17 + 48) + *(void *)(v28 + 72) * v27, v5);
        goto LABEL_22;
      }
      int64_t v29 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        break;
      }
      if (v29 >= v45) {
        goto LABEL_4;
      }
      unint64_t v30 = *(void *)(v46 + 8 * v29);
      uint64_t v31 = v19 + 1;
      if (v30) {
        goto LABEL_36;
      }
      uint64_t v31 = v19 + 2;
      if (v19 + 2 >= v45) {
        goto LABEL_4;
      }
      unint64_t v30 = *(void *)(v46 + 8 * v31);
      if (v30) {
        goto LABEL_36;
      }
      uint64_t v31 = v19 + 3;
      if (v19 + 3 >= v45) {
        goto LABEL_4;
      }
      unint64_t v30 = *(void *)(v46 + 8 * v31);
      if (v30)
      {
LABEL_36:
        unint64_t v20 = (v30 - 1) & v30;
        unint64_t v27 = __clz(__rbit64(v30)) + (v31 << 6);
        uint64_t v19 = v31;
        goto LABEL_21;
      }
      uint64_t v32 = v19 + 4;
      while (v45 != v32)
      {
        unint64_t v30 = *(void *)(v46 + 8 * v32++);
        if (v30)
        {
          uint64_t v31 = v32 - 1;
          goto LABEL_36;
        }
      }
LABEL_4:
      uint64_t v11 = v38;
      unint64_t v10 = v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v8, 1, 1, v5);
      sub_10004E644();
      swift_unknownObjectRelease();
      if (v10 == v11) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10021E740(uint64_t a1)
{
  return sub_10021E800(a1, (void *)2, 0);
}

void sub_10021E74C(void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10021E764(uint64_t a1)
{
  return sub_10021E800(a1, 0, 1);
}

void sub_10021E770(void *a1, uint64_t a2, uint64_t a3)
{
}

void sub_10021E788(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

uint64_t sub_10021E800(uint64_t a1, void *a2, int a3)
{
  sub_100054B78((uint64_t *)&unk_1005FA7F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10046D060;
  *(void *)(inited + 32) = a1;
  unint64_t v8 = inited;
  specialized Array._endMutation()();
  swift_unknownObjectRetain();
  sub_10021E224(v8, a2, a3);
  return swift_bridgeObjectRelease();
}

void sub_10021E89C(void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10021E8B4(unint64_t a1)
{
  return sub_10021E224(a1, (void *)2, 0);
}

uint64_t sub_10021E8C0(void *a1)
{
  sub_100054B78((uint64_t *)&unk_1005FB320);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v3 = a1;
  sub_10021E8B4(v2);

  return swift_bridgeObjectRelease();
}

id sub_10021E928()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadManagerObserver();
  return [super dealloc];
}

uint64_t sub_10021E99C()
{
  return swift_bridgeObjectRelease();
}

void *sub_10021E9AC(void *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for PreviewingPresentationHint();
    BOOL v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *((unsigned char *)v4 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_10021EAC0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10021EB40(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  unint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_10021EC04(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PreviewingPresentationHint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_10021ECD4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for PreviewingPresentationHint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_10021ED6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for PreviewingPresentationHint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10021EE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10021EE30);
}

uint64_t sub_10021EE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PreviewingPresentationHint();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10021EEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021EEF4);
}

uint64_t sub_10021EEF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PreviewingPresentationHint();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StationShowContextActionData()
{
  uint64_t result = qword_1005FB388;
  if (!qword_1005FB388) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10021EFE8()
{
  uint64_t result = type metadata accessor for PreviewingPresentationHint();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10021F088()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StationShowContextActionData();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  id v5 = [self sharedInstance];
  id v6 = [v5 mainOrPrivateContext];

  uint64_t v16 = 0;
  sub_10021165C(v1, (uint64_t)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v16;
  *(void *)(v8 + 24) = v6;
  sub_10021F440((uint64_t)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10021F4A4;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_10004A010;
  void aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100018818;
  void aBlock[3] = &unk_10055A368;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v6;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v10];

  _Block_release(v10);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = v16;
    swift_release();
    return v13;
  }
  return result;
}

void sub_10021F2C8(void **a1, void *a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a2 podcastPlaylistSettingsForUuid:v4];

  id v6 = *a1;
  *a1 = v5;
}

uint64_t sub_10021F33C()
{
  uint64_t v1 = (int *)(type metadata accessor for StationShowContextActionData() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[8];
  uint64_t v4 = type metadata accessor for PreviewingPresentationHint();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_10021F440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StationShowContextActionData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10021F4A4()
{
  type metadata accessor for StationShowContextActionData();
  uint64_t v1 = *(void ***)(v0 + 16);
  unint64_t v2 = *(void **)(v0 + 24);

  sub_10021F2C8(v1, v2);
}

uint64_t sub_10021F508()
{
  return swift_deallocObject();
}

void __swiftcall MTPlaylist.unsafePredicateForStationEpisodesFromPodcast(podcastUuid:)(NSPredicate *__return_ptr retstr, Swift::String podcastUuid)
{
  unint64_t object = podcastUuid._object;
  uint64_t countAndFlagsBits = podcastUuid._countAndFlagsBits;
  uint64_t v5 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [v2 settings];
  if (v9)
  {
    uint64_t v20 = v6;
    uint64_t v21 = countAndFlagsBits;
    uint64_t v22 = (uint64_t)object;
    unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
    id v10 = v9;
    NSOrderedSet.makeIterator()();

    sub_10004D51C();
    dispatch thunk of IteratorProtocol.next()();
    while (v27)
    {
      sub_10004D384(&v26, v25);
      sub_10004D328((uint64_t)v25, (uint64_t)v23);
      sub_10004D29C(0, &qword_1005F7738);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v24 = 0;
      }
      sub_10004D2D8((uint64_t)v25);
      if (v24)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      dispatch thunk of IteratorProtocol.next()();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v5);
    unint64_t v11 = v28;

    uint64_t v12 = v22;
    swift_bridgeObjectRetain();
    uint64_t v13 = v21;
    uint64_t v14 = sub_10022099C(v11, v21, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14)
    {
      id v15 = [v14 podcast];
      if (v15)
      {
        uint64_t v16 = v15;
        sub_10022024C(v13, v12, (char)[v15 isExplicit], (uint64_t)[v14 integerForEpisodesToShow]);

        return;
      }
    }
  }
  id v17 = [self falsePredicate];

  id v18 = v17;
}

void sub_10021F83C()
{
  uint64_t v1 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [v0 settings];
  if (v5)
  {
    uint64_t v88 = v2;
    id v89 = v0;
    unint64_t v95 = (unint64_t)_swiftEmptyArrayStorage;
    id v6 = v5;
    NSOrderedSet.makeIterator()();

    sub_10004D51C();
    dispatch thunk of IteratorProtocol.next()();
    while (v94)
    {
      sub_10004D384(&v93, v92);
      sub_10004D328((uint64_t)v92, (uint64_t)v90);
      sub_10004D29C(0, &qword_1005F7738);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v91 = 0;
      }
      sub_10004D2D8((uint64_t)v92);
      if (v91)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      dispatch thunk of IteratorProtocol.next()();
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v4, v1);
    unint64_t v83 = v95;

    id v7 = v89;
    id v85 = v7;
    unint64_t v8 = swift_bridgeObjectRetain();
    unint64_t v9 = (unint64_t)sub_1002207F4(v8, v7);
    swift_bridgeObjectRelease();

    uint64_t v86 = type metadata accessor for RestrictionsController();
    if (static RestrictionsController.isExplicitContentAllowed.getter()) {
      goto LABEL_28;
    }
    *(void *)&long long v93 = _swiftEmptyArrayStorage;
    if (v9 >> 62) {
      goto LABEL_45;
    }
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10) {
      goto LABEL_46;
    }
LABEL_14:
    if (v10 < 1)
    {
LABEL_76:
      __break(1u);
      return;
    }
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v9 + 8 * i + 32);
      }
      uint64_t v13 = v12;
      id v14 = [v12 podcast];
      if (!v14
        || (id v15 = v14, v16 = [v14 isExplicit], v15, (v16 & 1) != 0))
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v9 = v93;
LABEL_28:
    if (v9 >> 62)
    {
      while (1)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
        if (!v19) {
          break;
        }
LABEL_30:
        if (v19 >= 1)
        {
          uint64_t v20 = 0;
          uint64_t v21 = (char *)_swiftEmptyArrayStorage;
          do
          {
            if ((v9 & 0xC000000000000001) != 0) {
              id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v22 = *(id *)(v9 + 8 * v20 + 32);
            }
            uint64_t v23 = v22;
            id v24 = [v22 podcast];
            if (v24
              && (uint64_t v25 = v24, v26 = [v24 uuid], v25, v26))
            {
              uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v29 = v28;

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v21 = sub_10004CEAC(0, *((void *)v21 + 2) + 1, 1, v21);
              }
              unint64_t v31 = *((void *)v21 + 2);
              unint64_t v30 = *((void *)v21 + 3);
              if (v31 >= v30 >> 1) {
                uint64_t v21 = sub_10004CEAC((char *)(v30 > 1), v31 + 1, 1, v21);
              }
              *((void *)v21 + 2) = v31 + 1;
              uint64_t v32 = &v21[16 * v31];
              *((void *)v32 + 4) = v27;
              *((void *)v32 + 5) = v29;
            }
            else
            {
            }
            ++v20;
          }
          while (v19 != v20);
          goto LABEL_49;
        }
        __break(1u);
LABEL_45:
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v10) {
          goto LABEL_14;
        }
LABEL_46:
        swift_bridgeObjectRelease();
        unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
        if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
          goto LABEL_29;
        }
      }
    }
    else
    {
LABEL_29:
      uint64_t v19 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19) {
        goto LABEL_30;
      }
    }
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
LABEL_49:
    swift_bridgeObjectRelease_n();
    objc_super v33 = self;
    sub_1001B79E8((uint64_t)v21);
    swift_bridgeObjectRelease();
    id v34 = objc_allocWithZone((Class)NSOrderedSet);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v36 = [v34 initWithArray:isa];

    id v84 = v33;
    id v37 = [v33 predicateForAllEpisodesOnPodcastUuids:v36];

    id v38 = v37;
    id v39 = [v85 defaultSettings];
    uint64_t v40 = &selRef_indexPathForFirstRow;
    id v41 = v38;
    if (v39)
    {
      uint64_t v42 = v39;
      id v43 = [v39 integerForEpisodesToShow];

      id v41 = v38;
      if ((uint64_t)v43 > 0)
      {
        sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
        sub_100054B78(&qword_1005F7720);
        uint64_t v44 = swift_allocObject();
        *(_OWORD *)(v44 + 16) = xmmword_10046D030;
        uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v47 = v46;
        *(void *)(v44 + 56) = &type metadata for String;
        unint64_t v48 = sub_10004DA4C();
        *(void *)(v44 + 32) = v45;
        *(void *)(v44 + 4sub_1001DA808(0, 0) = v47;
        *(void *)(v44 + 96) = &type metadata for Int;
        *(void *)(v44 + 104) = &protocol witness table for Int;
        *(void *)(v44 + 64) = v48;
        *(void *)(v44 + 72) = v43;
        uint64_t v49 = NSPredicate.init(format:_:)();
        id v41 = [v38 AND:v49];
      }
    }

    unint64_t v50 = v83;
    if (v83 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v51) {
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v51 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v51)
      {
LABEL_54:
        uint64_t v88 = v51;
        if (v51 >= 1)
        {
          id v87 = v41;
          uint64_t v52 = 0;
          id v89 = (id)(v50 & 0xC000000000000001);
          uint64_t v82 = kEpisodeLevel;
          long long v81 = xmmword_10046D030;
          id v53 = v85;
          unint64_t v54 = &selRef_block;
          uint64_t v55 = v88;
          do
          {
            if (v89) {
              id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v62 = *(id *)(v50 + 8 * v52 + 32);
            }
            unint64_t v61 = v62;
            id v63 = [v62 v40[229] v81, v82];
            id v64 = [v53 v54[369]];
            if (!v64 || (uint64_t v65 = v64, v66 = [v64 v40[229]], v65, v63 != v66))
            {
              id v67 = [v61 podcast];
              if (v67)
              {
                unint64_t v60 = v67;
                id v68 = v40;
                id v69 = [v67 uuid];
                if (v69)
                {
                  uint64_t v59 = v69;
                  if ((static RestrictionsController.isExplicitContentAllowed.getter() & 1) != 0
                    || ([v60 isExplicit] & 1) == 0)
                  {
                    id v70 = [v84 predicateForAllEpisodesOnPodcastUuid:v59];

                    id v71 = v70;
                    uint64_t v72 = (uint64_t)[v61 v68[229]];
                    id v73 = v71;
                    if (v72 >= 1)
                    {
                      uint64_t v74 = v72;
                      sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
                      sub_100054B78(&qword_1005F7720);
                      uint64_t v75 = swift_allocObject();
                      *(_OWORD *)(v75 + 16) = v81;
                      uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v78 = v77;
                      *(void *)(v75 + 56) = &type metadata for String;
                      unint64_t v79 = sub_10004DA4C();
                      *(void *)(v75 + 32) = v76;
                      *(void *)(v75 + 4sub_1001DA808(0, 0) = v78;
                      unint64_t v50 = v83;
                      *(void *)(v75 + 96) = &type metadata for Int;
                      *(void *)(v75 + 104) = &protocol witness table for Int;
                      *(void *)(v75 + 64) = v79;
                      *(void *)(v75 + 72) = v74;
                      id v53 = v85;
                      uint64_t v80 = NSPredicate.init(format:_:)();
                      id v73 = [v71 AND:v80];
                    }
                    id v56 = v87;
                    id v57 = [v87 OR:v73];

                    unint64_t v58 = v60;
                    uint64_t v59 = v56;
                    id v87 = v57;
                    unint64_t v60 = v61;
                    unint64_t v54 = &selRef_block;
                  }
                  else
                  {
                    unint64_t v58 = v61;
                  }

                  unint64_t v61 = v59;
                }

                uint64_t v40 = v68;
                uint64_t v55 = v88;
              }
            }
            ++v52;
          }
          while (v55 != v52);
          goto LABEL_74;
        }
        __break(1u);
        goto LABEL_76;
      }
    }
LABEL_74:
    swift_bridgeObjectRelease();
    return;
  }
  id v17 = [self falsePredicate];

  id v18 = v17;
}

id sub_10022024C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  type metadata accessor for RestrictionsController();
  if ((static RestrictionsController.isExplicitContentAllowed.getter() & 1) != 0 || (a3 & 1) == 0)
  {
    unint64_t v8 = self;
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v8 predicateForAllEpisodesOnPodcastUuid:v9];

    if (a4 >= 1)
    {
      sub_10004D29C(0, (unint64_t *)&unk_1005F8100);
      sub_100054B78(&qword_1005F7720);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_10046D030;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;
      *(void *)(v11 + 56) = &type metadata for String;
      unint64_t v15 = sub_10004DA4C();
      *(void *)(v11 + 32) = v12;
      *(void *)(v11 + 4sub_1001DA808(0, 0) = v14;
      *(void *)(v11 + 96) = &type metadata for Int;
      *(void *)(v11 + 104) = &protocol witness table for Int;
      *(void *)(v11 + 64) = v15;
      *(void *)(v11 + 72) = a4;
      id v16 = v10;
      id v17 = NSPredicate.init(format:_:)();
      id v10 = [v16 AND:v17];
    }
    id v18 = sub_10004DAA0();
    id v19 = [v10 AND:v18];

    id v20 = v19;
    id v21 = sub_10004DD70();
    id v22 = [v20 AND:v21];

    return v22;
  }
  else
  {
    id v6 = [self falsePredicate];
    return v6;
  }
}

uint64_t sub_100220488(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    NSString v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100220558(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  id v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      id v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        id v18 = (char *)(a3 - 16);
        id v19 = v6;
        while (1)
        {
          id v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)id v18 = *((_OWORD *)v17 - 1);
            }
            id v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)id v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          id v26 = v4;
          id v16 = v6;
        }
        else
        {
          id v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_10025CA04((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1002207F4(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      id v5 = &selRef_indexPathForFirstRow;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v7 = v6;
        unint64_t v8 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_18;
        }
        id v9 = [v6 v5[229]];
        id v10 = [a2 defaultSettings];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = v3;
          uint64_t v13 = v5;
          id v14 = [v10 v5[229]];

          if (v9 == v14)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
          id v5 = v13;
          uint64_t v3 = v12;
        }
        else
        {
        }
        ++v4;
        if (v8 == v3) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v6 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10022099C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v6 = v4 & 0xC000000000000001;
    uint64_t v7 = 4;
    unint64_t v8 = &selRef_pendingTransactions;
    while (1)
    {
      id v9 = v6 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v4 + 8 * v7);
      id v10 = v9;
      uint64_t v11 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v12 = [v9 v8[149]];
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = [v12 uuid];

        if (v14)
        {
          id v26 = v10;
          unint64_t v15 = v4;
          unint64_t v16 = v6;
          uint64_t v17 = v5;
          id v18 = v8;
          uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v21 = v20;

          if (v19 == a2 && v21 == a3)
          {
            swift_bridgeObjectRelease();
            id v10 = v26;
LABEL_19:
            swift_bridgeObjectRelease();
            return v10;
          }
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          unint64_t v8 = v18;
          uint64_t v5 = v17;
          unint64_t v6 = v16;
          unint64_t v4 = v15;
          id v10 = v26;
          if (v23) {
            goto LABEL_19;
          }
        }
      }

      ++v7;
      if (v11 == v5) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_100220B7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext.Page();
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for InteractionContext();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(void *)(v0 + 16)
    && (swift_retain(),
        dispatch thunk of ContextActionsConfiguration.context.getter(),
        swift_release(),
        InteractionContext.page.getter(),
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5),
        char v9 = InteractionContext.Page.isShowPage.getter(),
        sub_1001B4BB0((uint64_t)v4),
        (v9 & 1) != 0))
  {
    return 0;
  }
  else
  {
    return *(void *)(v1 + 24) != 0;
  }
}

uint64_t sub_100220CF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for URL();
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  id v41 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ShowOffer();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for PreviewingPresentationHint();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  char v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v10);
  id v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100054B78((uint64_t *)&unk_100605DC0);
  uint64_t result = __chkstk_darwin(v13 - 8);
  unint64_t v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v0[3];
  if (v17)
  {
    uint64_t result = swift_beginAccess();
    if (v0[2])
    {
      unint64_t v35 = v9;
      swift_retain();
      swift_retain();
      ContextActionsConfiguration.objectGraph.getter();
      swift_release();
      if (!v0[2]) {
        goto LABEL_7;
      }
      swift_retain();
      dispatch thunk of ContextActionsConfiguration.presentationSource.getter();
      swift_release();
      uint64_t v18 = type metadata accessor for PresentationSource();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v16, 1, v18))
      {
        swift_release();
        swift_release();
        uint64_t v19 = (uint64_t *)&unk_100605DC0;
        uint64_t v20 = (uint64_t)v16;
        return sub_100054B1C(v20, v19);
      }
      uint64_t v21 = (void *)PresentationSource.viewController.getter();
      sub_100054B1C((uint64_t)v16, (uint64_t *)&unk_100605DC0);
      if (v21)
      {
        uint64_t v22 = v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
        swift_beginAccess();
        sub_1001AC690(v22, (uint64_t)v12);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v23 = v36;
          uint64_t v24 = v38;
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v7, v12, v38);
          ShowOffer.storeUrl.getter();
          uint64_t v25 = v37;
          uint64_t v26 = v39;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v4, 1, v39) == 1)
          {
            (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
            swift_release();

            swift_release();
            uint64_t v19 = (uint64_t *)&unk_1005F7750;
            uint64_t v20 = (uint64_t)v4;
            return sub_100054B1C(v20, v19);
          }
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v41, v4, v26);
          uint64_t v31 = v1[7];
          v34[1] = v1[8];
          sub_100041A98(v1 + 4, v31);
          uint64_t v32 = v40;
          objc_super v33 = v35;
          (*(void (**)(char *, void, uint64_t))(v40 + 104))(v35, enum case for PreviewingPresentationHint.push(_:), v42);
          dispatch thunk of EpisodeControllerProtocol.presentStorePage(asPartOf:for:from:presentationHint:suppressMetrics:)();

          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v42);
          (*(void (**)(char *, uint64_t))(v25 + 8))(v41, v39);
          return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v38);
        }
        else
        {
          uint64_t v27 = v1[7];
          id v41 = (char *)v1[8];
          sub_100041A98(v1 + 4, v27);
          uint64_t v28 = v40;
          uint64_t v29 = v35;
          uint64_t v30 = v42;
          (*(void (**)(char *, void, uint64_t))(v40 + 104))(v35, enum case for PreviewingPresentationHint.push(_:), v42);
          dispatch thunk of EpisodeControllerProtocol.presentShowPage(asPartOf:for:from:presentationHint:suppressMetrics:)();
          swift_bridgeObjectRelease();

          swift_release();
          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v29, v30);
        }
      }
      else
      {
LABEL_7:
        swift_release();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_100221310()
{
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 32);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28GoToShowPodcastContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1002213C8()
{
  return type metadata accessor for GoToShowPodcastContextAction();
}

uint64_t type metadata accessor for GoToShowPodcastContextAction()
{
  uint64_t result = qword_1005FB3F0;
  if (!qword_1005FB3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10022141C()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002214C4()
{
  id v0 = [self mainBundle];
  v5._unint64_t object = (void *)0x80000001004D67C0;
  v1._uint64_t countAndFlagsBits = 0x6853206F74206F47;
  v1._unint64_t object = (void *)0xEA0000000000776FLL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._unint64_t object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100221574()
{
  return 0x7374736163646F70;
}

uint64_t sub_100221598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28GoToShowPodcastContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_10022160C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.presentPodcast(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_1002216F0()
{
  return swift_retain();
}

uint64_t sub_100221728(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_100221770())()
{
  return j__swift_endAccess;
}

uint64_t sub_1002217D0(uint64_t a1)
{
  uint64_t result = sub_100221858(&qword_1005FB490);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100221814(uint64_t a1)
{
  uint64_t result = sub_100221858(&qword_1005FAAE0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100221858(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for GoToShowPodcastContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10022189C()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_1005F7750);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v29 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v29 - v14;
  sub_1003B05C4();
  uint64_t v16 = swift_retain();
  id v17 = sub_100221C30(v16);
  swift_release();
  if (!v17)
  {
    uint64_t v21 = type metadata accessor for URL();
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
    v22(v13, 1, 1, v21);
    v22(v15, 1, 1, v21);
LABEL_12:
    sub_100222D54((uint64_t)v13);
    goto LABEL_13;
  }
  id v18 = [v17 shortURL];
  if (v18)
  {
    uint64_t v19 = v18;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v20 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 0, 1, v20);
  }
  else
  {
    uint64_t v20 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
  }
  sub_100222DB4((uint64_t)v10, (uint64_t)v13);
  type metadata accessor for URL();
  uint64_t v23 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v20) == 1)
  {
    id v24 = [v17 shareURL];
    if (v24)
    {
      id v25 = v24;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v26 = 0;
      id v17 = v25;
    }
    else
    {
      uint64_t v26 = 1;
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v7, v26, 1, v20);
    sub_100222DB4((uint64_t)v7, (uint64_t)v15);
    goto LABEL_12;
  }

  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v15, v13, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v15, 0, 1, v20);
LABEL_13:
  sub_100222DB4((uint64_t)v15, (uint64_t)v4);
  uint64_t v27 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkEpisodeContextAction_shareLink;
  swift_beginAccess();
  sub_100222E1C((uint64_t)v4, v27);
  return swift_endAccess();
}

id sub_100221C30(uint64_t a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = type metadata accessor for EpisodeOffer();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  unint64_t v11 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  switch(*(unsigned char *)(a1 + 32))
  {
    case 1:
      if (!*(void *)(v11 + 16)) {
        return 0;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
      swift_bridgeObjectRetain();
      id v22 = sub_1002C5634();
      if (!v22)
      {
        sub_1001DCDF8(v11, v10, 1u);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        return 0;
      }
      uint64_t v23 = v22;
      if (*(unsigned char *)(v4 + 40)) {
        double v24 = 0.0;
      }
      else {
        double v24 = *(double *)(v4 + 32);
      }
      if (*(unsigned char *)(v4 + 56)) {
        double v25 = 0.0;
      }
      else {
        double v25 = *(double *)(v4 + 48);
      }
      [v22 playhead];
      id v18 = [objc_allocWithZone((Class)MTShareUtilDataSource) initWithPlayerItem:v23 selectedReferenceTime:v24 selectedPlayerTime:v25 currentPlayerTime:v26];
      sub_1001DCDF8(v11, v10, 1u);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v18;
    case 2:
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v27 = (void *)_CocoaArrayWrapper.endIndex.getter();
        if (v27)
        {
LABEL_23:
          if ((v11 & 0xC000000000000001) != 0)
          {
            id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_65;
            }
            id v28 = *(id *)(v11 + 32);
          }
          uint64_t v27 = v28;
          double v3 = 0.0;
          if (*(unsigned char *)(v4 + 40)) {
            double v2 = 0.0;
          }
          else {
            double v2 = *(double *)(v4 + 32);
          }
          if ((*(unsigned char *)(v4 + 56) & 1) == 0) {
            double v3 = *(double *)(v4 + 48);
          }
          if ((v11 & 0xC000000000000001) == 0)
          {
            if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v29 = *(id *)(v11 + 32);
LABEL_34:
              uint64_t v30 = v29;
              [v29 playhead];
              double v32 = v31;

LABEL_56:
              id v18 = [objc_allocWithZone((Class)MTShareUtilDataSource) initWithPlayerItem:v27 selectedReferenceTime:v2 selectedPlayerTime:v3 currentPlayerTime:v32];

              uint64_t v19 = v11;
              uint64_t v20 = v10;
              unsigned __int8 v21 = 2;
              goto LABEL_57;
            }
            __break(1u);
LABEL_67:
            id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_40;
          }
LABEL_65:
          id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v27 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v27) {
          goto LABEL_23;
        }
      }
      double v32 = 0.0;
      if (*(unsigned char *)(v4 + 40)) {
        double v2 = 0.0;
      }
      else {
        double v2 = *(double *)(v4 + 32);
      }
      uint64_t v27 = 0;
      if (*(unsigned char *)(v4 + 56)) {
        double v3 = 0.0;
      }
      else {
        double v3 = *(double *)(v4 + 48);
      }
      goto LABEL_56;
    case 3:
      unint64_t v33 = swift_bridgeObjectRetain();
      unint64_t v34 = (unint64_t)sub_100401778(v33);
      unint64_t v35 = v34;
      if (v34 >> 62)
      {
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_37;
        }
LABEL_59:
        swift_bridgeObjectRelease();
        uint64_t v41 = v11;
        uint64_t v42 = v10;
        unsigned __int8 v43 = 3;
        goto LABEL_60;
      }
      if (!*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_59;
      }
LABEL_37:
      if ((v35 & 0xC000000000000001) != 0) {
        goto LABEL_67;
      }
      if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        JUMPOUT(0x100222174);
      }
      id v36 = *(id *)(v35 + 32);
LABEL_40:
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v4 + 40)) {
        double v38 = 0.0;
      }
      else {
        double v38 = *(double *)(v4 + 32);
      }
      if (*(unsigned char *)(v4 + 56)) {
        double v39 = 0.0;
      }
      else {
        double v39 = *(double *)(v4 + 48);
      }
      [v37 playhead];
      id v18 = [objc_allocWithZone((Class)MTShareUtilDataSource) initWithPlayerItem:v37 selectedReferenceTime:v38 selectedPlayerTime:v39 currentPlayerTime:v40];

      uint64_t v19 = v11;
      uint64_t v20 = v10;
      unsigned __int8 v21 = 3;
LABEL_57:
      sub_1001DCDF8(v19, v20, v21);
      return v18;
    default:
      if (!*(void *)(v11 + 16)) {
        return 0;
      }
      uint64_t v12 = self;
      swift_bridgeObjectRetain();
      sub_1001DCD9C(v11, v10, 0);
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v14 = [v12 mediaItemForEpisodeWithUUID:v13];

      if (v14)
      {
        if (*(unsigned char *)(v4 + 40)) {
          double v15 = 0.0;
        }
        else {
          double v15 = *(double *)(v4 + 32);
        }
        if (*(unsigned char *)(v4 + 56)) {
          double v16 = 0.0;
        }
        else {
          double v16 = *(double *)(v4 + 48);
        }
        [v14 playhead];
        id v18 = [objc_allocWithZone((Class)MTShareUtilDataSource) initWithPlayerItem:v14 selectedReferenceTime:v15 selectedPlayerTime:v16 currentPlayerTime:v17];

        uint64_t v19 = v11;
        uint64_t v20 = v10;
        unsigned __int8 v21 = 0;
        goto LABEL_57;
      }
      uint64_t v41 = v11;
      uint64_t v42 = v10;
      unsigned __int8 v43 = 0;
LABEL_60:
      sub_1001DCDF8(v41, v42, v43);
      return 0;
  }
}

BOOL sub_100222184()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v1 - 8);
  double v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkEpisodeContextAction_shareLink;
  swift_beginAccess();
  sub_10003B19C(v4, (uint64_t)v3);
  uint64_t v5 = type metadata accessor for URL();
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  sub_100222D54((uint64_t)v3);
  if (v4 == 1) {
    return 0;
  }
  uint64_t v6 = *(void *)(v0 + 16);
  if (!v6) {
    return 0;
  }
  swift_retain();
  sub_1004025F4();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v21 = v8;
  uint64_t v22 = v10;
  sub_1001AB688();
  if ((Collection.isNotEmpty.getter() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v21 = static AdamID.empty.getter();
  sub_1001A5874();
  if (v8 == BinaryInteger.description.getter() && v10 == v11)
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_release();
    return 0;
  }
  else
  {
    unint64_t v14 = *(void *)(v6 + 16);
    uint64_t v15 = *(void *)(v6 + 24);
    switch(*(unsigned char *)(v6 + 32))
    {
      case 1:
        sub_1001DCD9C(*(void *)(v6 + 16), *(void *)(v6 + 24), 1u);
        swift_release();
        uint64_t v18 = *(void *)(v14 + 16);
        sub_1001DCDF8(v14, v15, 1u);
        BOOL v17 = v18 == 1;
        break;
      case 2:
        if (!(v14 >> 62)) {
          goto LABEL_18;
        }
        swift_bridgeObjectRetain();
        uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
        sub_1001DCDF8(v14, v15, 2u);
        goto LABEL_19;
      case 3:
        if (v14 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          sub_1001DCDF8(v14, v15, 3u);
        }
        else
        {
LABEL_18:
          uint64_t v19 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
LABEL_19:
        swift_release();
        BOOL v17 = v19 == 1;
        break;
      default:
        sub_1001DCD9C(*(void *)(v6 + 16), *(void *)(v6 + 24), 0);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v16 = *(void *)(v14 + 16);
        swift_bridgeObjectRelease();
        BOOL v17 = v16 == 1;
        break;
    }
    return v17;
  }
}

uint64_t sub_100222490()
{
  uint64_t v1 = sub_100054B78((uint64_t *)&unk_1005F7750);
  __chkstk_darwin(v1 - 8);
  double v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkEpisodeContextAction_shareLink;
  swift_beginAccess();
  sub_10003B19C(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_100222D54((uint64_t)v3);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  id v10 = [self generalPasteboard];
  URL.absoluteString.getter();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setString:v11];

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100222678()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkEpisodeContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100222D54(v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkEpisodeContextAction_shareLink);

  return swift_deallocClassInstance();
}

uint64_t sub_100222740()
{
  return type metadata accessor for CopyLinkEpisodeContextAction();
}

uint64_t type metadata accessor for CopyLinkEpisodeContextAction()
{
  uint64_t result = qword_1005FB4C0;
  if (!qword_1005FB4C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100222794()
{
  type metadata accessor for MetricsLabel();
  if (v0 <= 0x3F)
  {
    sub_10000927C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_10022288C()
{
  id v0 = [self mainBundle];
  v5._unint64_t object = (void *)0x80000001004D7740;
  v1._uint64_t countAndFlagsBits = 0x6E694C2079706F43;
  v1._unint64_t object = (void *)0xE90000000000006BLL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._unint64_t object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0xD000000000000012;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10022293C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10022296C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28CopyLinkEpisodeContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1002229E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.copyEpisodeLink(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_100222AC4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

void *sub_100222B24(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_100222B84(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_100222BE4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_100222C44(uint64_t a1)
{
  uint64_t result = sub_100222D10((unint64_t *)&unk_100608BB0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100222C88(uint64_t a1)
{
  uint64_t result = sub_100222D10(&qword_1005FB628);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100222CCC(uint64_t a1)
{
  uint64_t result = sub_100222D10(&qword_1005FB630);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100222D10(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CopyLinkEpisodeContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100222D54(uint64_t a1)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005F7750);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100222DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F7750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100222E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005F7750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100222E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v62 = a1;
  uint64_t v57 = type metadata accessor for FlowPresentationHints();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  unint64_t v54 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for FlowDestination();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v52 = (uint64_t *)((char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = self;
  id v7 = [v6 mainBundle];
  v73._unint64_t object = (void *)0xE000000000000000;
  v8._unint64_t object = (void *)0x80000001004D7790;
  v8._uint64_t countAndFlagsBits = 0xD000000000000025;
  v9._uint64_t countAndFlagsBits = 0;
  v9._unint64_t object = (void *)0xE000000000000000;
  v73._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v73)._countAndFlagsBits;

  id v10 = [v6 mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v74._unint64_t object = (void *)0xE000000000000000;
  v11._unint64_t object = (void *)0x80000001004D77C0;
  v12._uint64_t countAndFlagsBits = 0;
  v12._unint64_t object = (void *)0xE000000000000000;
  v74._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v74);

  uint64_t v64 = sub_100054B78(&qword_1005F7720);
  uint64_t v13 = swift_allocObject();
  long long v63 = xmmword_10046D010;
  *(_OWORD *)(v13 + 16) = xmmword_10046D010;
  *(void *)(v13 + 56) = &type metadata for Int;
  *(void *)(v13 + 64) = &protocol witness table for Int;
  *(void *)(v13 + 32) = a1;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v14 = [v6 mainBundle];
  v15._uint64_t countAndFlagsBits = 0xD000000000000033;
  v75._unint64_t object = (void *)0xE000000000000000;
  v15._unint64_t object = (void *)0x80000001004D77F0;
  v16._uint64_t countAndFlagsBits = 0;
  v16._unint64_t object = (void *)0xE000000000000000;
  v75._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v75);

  id v17 = [v6 mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD000000000000036;
  v76._unint64_t object = (void *)0xE000000000000000;
  v18._unint64_t object = (void *)0x80000001004D7830;
  v19._uint64_t countAndFlagsBits = 0;
  v19._unint64_t object = (void *)0xE000000000000000;
  v76._uint64_t countAndFlagsBits = 0;
  uint64_t v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v76)._countAndFlagsBits;

  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [self alertControllerWithTitle:v20 message:v21 preferredStyle:1];

  uint64_t v23 = swift_allocObject();
  uint64_t v25 = v60;
  uint64_t v24 = v61;
  *(void *)(v23 + 16) = v60;
  *(void *)(v23 + 24) = v24;
  swift_retain();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v71 = sub_100223784;
  uint64_t v72 = v23;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v68 = 1107296256;
  id v69 = sub_1001F2B1C;
  id v70 = &unk_10055A548;
  uint64_t v27 = _Block_copy(&aBlock);
  swift_release();
  id v28 = self;
  id v29 = [v28 actionWithTitle:v26 style:0 handler:v27];
  _Block_release(v27);

  [v22 addAction:v29];
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v25;
  *(void *)(v30 + 24) = v24;
  double v31 = v22;
  swift_retain();
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v71 = sub_1002237B0;
  uint64_t v72 = v30;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v68 = 1107296256;
  id v69 = sub_1001F2B1C;
  id v70 = &unk_10055A598;
  unint64_t v33 = _Block_copy(&aBlock);
  swift_release();
  id v34 = [v28 actionWithTitle:v32 style:0 handler:v33];
  _Block_release(v33);

  [v31 addAction:v34];
  static os_log_type_t.default.getter();
  sub_1001C0DD4();
  unint64_t v35 = (void *)static OS_os_log.restore.getter();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v63;
  *(void *)(v36 + 56) = &type metadata for Int;
  *(void *)(v36 + 64) = &protocol witness table for Int;
  *(void *)(v36 + 32) = v62;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  if (UIApp)
  {
    id v37 = UIApp;
    UIResponder.nearestFlowController.getter();

    if (v66)
    {
      sub_100042FC4(&v65, (uint64_t)&aBlock);
      double v38 = v52;
      *uint64_t v52 = v31;
      uint64_t v39 = v53;
      uint64_t v40 = v55;
      (*(void (**)(void *, void, uint64_t))(v53 + 104))(v38, enum case for FlowDestination.viewController(_:), v55);
      sub_100041A98(&aBlock, (uint64_t)v70);
      id v41 = v31;
      uint64_t v42 = v54;
      static FlowPresentationHints.default.getter();
      dispatch thunk of FlowController.show(destination:hints:referrer:)();

      (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v57);
      (*(void (**)(void *, uint64_t))(v39 + 8))(v38, v40);
      sub_10004D2D8((uint64_t)&aBlock);
    }
    else
    {
      sub_1002237DC((uint64_t)&v65);
      id v43 = [self sharedApplication];
      id v44 = [v43 delegate];

      if (v44)
      {
        if ([v44 respondsToSelector:"window"])
        {
          id v45 = [v44 window];
          swift_unknownObjectRelease();
          id v44 = [v45 rootViewController];
        }
        else
        {
          swift_unknownObjectRelease();
          id v44 = 0;
        }
      }
      id v46 = [v44 presentedViewController];
      if (v46)
      {
        uint64_t v47 = v46;
      }
      else
      {
        id v48 = v44;
        uint64_t v47 = v44;
      }
      static os_log_type_t.error.getter();
      uint64_t v49 = (void *)static OS_os_log.restore.getter();
      os_log(_:dso:log:_:_:)();

      if (v47)
      {
        id v50 = v47;
        [v50 presentViewController:v31 animated:1 completion:0];
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10022374C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100223784()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1002237B0()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1002237DC(uint64_t a1)
{
  uint64_t v2 = sub_100054B78(&qword_100604710);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100223848()
{
  uint64_t v1 = v0[2];
  if (v1)
  {
    uint64_t v2 = v0[10];
    type metadata accessor for EpisodeOfferStateCenter();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    v0[3] = v3;
    swift_retain();
    swift_retain();
    swift_release();
  }
}

BOOL sub_1002238CC()
{
  if (*(void *)(v0 + 24) && *(void *)(v0 + 16))
  {
    swift_retain();
    swift_retain();
    if ((sub_100400E80() & 1) == 0)
    {
      uint64_t v1 = sub_10020D508();
      uint64_t v2 = v1[2];
      if (v2)
      {
        uint64_t v3 = (char *)(v1 + 6);
        do
        {
          uint64_t v4 = *((void *)v3 - 2);
          uint64_t v5 = *((void *)v3 - 1);
          char v6 = *v3;
          sub_100224E9C(v4, v5, *v3);
          if (static ModernEpisodeDownloadState.== infix(_:_:)())
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1001BA648(0, _swiftEmptyArrayStorage[2] + 1, 1);
            }
            unint64_t v8 = _swiftEmptyArrayStorage[2];
            unint64_t v7 = _swiftEmptyArrayStorage[3];
            if (v8 >= v7 >> 1) {
              sub_1001BA648(v7 > 1, v8 + 1, 1);
            }
            _swiftEmptyArrayStorage[2] = v8 + 1;
            Swift::String v9 = &_swiftEmptyArrayStorage[3 * v8];
            id v9[4] = v4;
            v9[5] = v5;
            *((unsigned char *)v9 + 48) = v6;
          }
          else
          {
            sub_100224EB4(v4, v5, v6);
          }
          v3 += 24;
          --v2;
        }
        while (v2);
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = _swiftEmptyArrayStorage[2];
      swift_release();
      if (v10)
      {
        BOOL v11 = sub_100401A34();
        swift_release();
        swift_release();
        return v11;
      }
    }
    swift_release();
    swift_release();
  }
  else
  {
    *(unsigned char *)(v0 + 128) = 0;
  }
  return 0;
}

void sub_100223A88()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1) {
    return;
  }
  unint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      sub_100041A98((void *)(v36 + 40), *(void *)(v36 + 64));
      swift_retain();
      sub_100401E68(0);
      dispatch thunk of LibraryActionControllerProtocol.download(episodeOffers:)();
      goto LABEL_5;
    case 2:
      v40[0] = _swiftEmptyArrayStorage;
      if (v3 >> 62)
      {
        swift_retain();
        sub_1001DCD9C(v3, v2, 2u);
        uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
        if (v4) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        sub_1001DCD9C(v3, v2, 2u);
        if (v4)
        {
LABEL_8:
          if (v4 >= 1)
          {
            for (uint64_t i = 0; i != v4; ++i)
            {
              if ((v3 & 0xC000000000000001) != 0) {
                id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v6 = *(id *)(v3 + 8 * i + 32);
              }
              unint64_t v7 = v6;
              if (![v6 isExplicit]
                || (type metadata accessor for RestrictionsController(),
                    (static RestrictionsController.isExplicitContentAllowed.getter() & 1) != 0))
              {
                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized ContiguousArray._endMutation()();
              }
              else
              {
              }
            }
            sub_1001DCDF8(v3, v2, 2u);
            unint64_t v15 = v40[0];
            if ((v40[0] & 0x8000000000000000) != 0)
            {
LABEL_68:
              swift_bridgeObjectRetain();
              uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
              swift_release();
              if (!v17) {
                goto LABEL_71;
              }
LABEL_41:
              if (v17 >= 1)
              {
                for (uint64_t j = 0; j != v17; ++j)
                {
                  if ((v15 & 0xC000000000000001) != 0) {
                    id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    id v22 = *(id *)(v15 + 8 * j + 32);
                  }
                  uint64_t v23 = v22;
                  sub_100224D80(v36 + 88, (uint64_t)v40);
                  if (v41)
                  {
                    sub_100041A98(v40, v41);
                    sub_100054B78((uint64_t *)&unk_1005F8260);
                    uint64_t v19 = swift_allocObject();
                    *(_OWORD *)(v19 + 16) = xmmword_10046D010;
                    [v23 episodeStoreId];
                    *(void *)(v19 + 32) = AdamID.init(rawValue:)();
                    dispatch thunk of StoreDataProvider.fetchEpisodeOffers(with:)();
                    swift_bridgeObjectRelease();
                    swift_allocObject();
                    swift_weakInit();
                    unint64_t v20 = sub_1000566BC();
                    uint64_t v21 = static OS_dispatch_queue.main.getter();
                    unint64_t v38 = v20;
                    uint64_t v39 = &protocol witness table for OS_dispatch_queue;
                    v37[0] = v21;
                    Promise.then(perform:orCatchError:on:)();

                    swift_release();
                    swift_release();
                    sub_10004D2D8((uint64_t)v37);
                    sub_10004D2D8((uint64_t)v40);
                  }
                  else
                  {

                    sub_100224DE8((uint64_t)v40);
                  }
                }
                goto LABEL_66;
              }
              goto LABEL_77;
            }
            goto LABEL_39;
          }
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
      }
      sub_1001DCDF8(v3, v2, 2u);
      unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_68;
      }
LABEL_39:
      if ((v15 & 0x4000000000000000) != 0) {
        goto LABEL_68;
      }
      uint64_t v17 = *(void *)(v15 + 16);
      if (v17) {
        goto LABEL_41;
      }
LABEL_71:
      swift_release();
LABEL_72:
      swift_release();
      return;
    case 3:
      v40[0] = _swiftEmptyArrayStorage;
      if (v3 >> 62)
      {
        swift_retain();
        sub_1001DCD9C(v3, v2, 3u);
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        if (v8) {
          goto LABEL_20;
        }
LABEL_51:
        sub_1001DCDF8(v3, v2, 3u);
        unint64_t v16 = (unint64_t)_swiftEmptyArrayStorage;
        if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
          goto LABEL_70;
        }
LABEL_52:
        if ((v16 & 0x4000000000000000) != 0) {
          goto LABEL_70;
        }
        uint64_t v24 = *(void *)(v16 + 16);
        if (v24) {
          goto LABEL_54;
        }
        goto LABEL_71;
      }
      uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      sub_1001DCD9C(v3, v2, 3u);
      if (!v8) {
        goto LABEL_51;
      }
LABEL_20:
      if (v8 < 1) {
        goto LABEL_76;
      }
      for (uint64_t k = 0; k != v8; ++k)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v10 = *(id *)(v3 + 8 * k + 32);
        }
        BOOL v11 = v10;
        Swift::String v12 = (void *)MPCPlayerResponseItem.podcastEpisode.getter();
        if (!v12)
        {
LABEL_22:

          continue;
        }
        uint64_t v13 = v12;
        if ([v12 isExplicitEpisode])
        {
          type metadata accessor for RestrictionsController();
          char v14 = static RestrictionsController.isExplicitContentAllowed.getter();

          if ((v14 & 1) == 0) {
            goto LABEL_22;
          }
        }
        else
        {
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      sub_1001DCDF8(v3, v2, 3u);
      unint64_t v16 = v40[0];
      if ((v40[0] & 0x8000000000000000) == 0) {
        goto LABEL_52;
      }
LABEL_70:
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      if (!v24) {
        goto LABEL_71;
      }
LABEL_54:
      if (v24 < 1)
      {
LABEL_78:
        __break(1u);
        JUMPOUT(0x100224268);
      }
      for (uint64_t m = 0; m != v24; ++m)
      {
        if ((v16 & 0xC000000000000001) != 0) {
          id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v26 = *(id *)(v16 + 8 * m + 32);
        }
        uint64_t v27 = v26;
        uint64_t v28 = MPCPlayerResponseItem.podcastEpisode.getter();
        if (!v28
          || (id v29 = (void *)v28, v30 = MPModelObject.adamID.getter(), v32 = v31, v29, (v32 & 1) != 0))
        {
        }
        else
        {
          sub_100224D80(v36 + 88, (uint64_t)v40);
          if (v41)
          {
            sub_100041A98(v40, v41);
            sub_100054B78((uint64_t *)&unk_1005F8260);
            uint64_t v33 = swift_allocObject();
            *(_OWORD *)(v33 + 16) = xmmword_10046D010;
            *(void *)(v33 + 32) = v30;
            dispatch thunk of StoreDataProvider.fetchEpisodeOffers(with:)();
            swift_bridgeObjectRelease();
            swift_allocObject();
            swift_weakInit();
            unint64_t v34 = sub_1000566BC();
            uint64_t v35 = static OS_dispatch_queue.main.getter();
            unint64_t v38 = v34;
            uint64_t v39 = &protocol witness table for OS_dispatch_queue;
            v37[0] = v35;
            Promise.then(perform:orCatchError:on:)();
            swift_release();
            swift_release();

            sub_10004D2D8((uint64_t)v37);
            sub_10004D2D8((uint64_t)v40);
          }
          else
          {

            sub_100224DE8((uint64_t)v40);
          }
        }
      }
LABEL_66:
      swift_release();
      swift_release();
      return;
    default:
      swift_retain();
      sub_1001DCD9C(v3, v2, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100041A98((void *)(v36 + 40), *(void *)(v36 + 64));
      sub_100401D38();
      dispatch thunk of LibraryActionControllerProtocol.download(episodes:)();
LABEL_5:
      swift_bridgeObjectRelease();
      goto LABEL_72;
  }
}

uint64_t sub_100224278(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for EpisodeOffer();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = (void *)result;
    if (*(void *)(v6 + 16))
    {
      unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      id v10 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      v10(v5, v6 + v9, v2);
      uint64_t v11 = v8[8];
      uint64_t v13 = v8[9];
      sub_100041A98(v8 + 5, v11);
      sub_100054B78((uint64_t *)&unk_1006005A0);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10046D010;
      v10((char *)(v12 + v9), (unint64_t)v5, v2);
      dispatch thunk of LibraryActionControllerProtocol.download(episodeOffers:)();
      swift_release();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10022443C()
{
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v20._unint64_t object = (void *)0xE000000000000000;
  v3._unint64_t object = (void *)0x80000001004D7990;
  v3._uint64_t countAndFlagsBits = 0xD000000000000010;
  v4._uint64_t countAndFlagsBits = 0;
  v4._unint64_t object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v20)._countAndFlagsBits;

  id v6 = [v1 mainBundle];
  v7._uint64_t countAndFlagsBits = 0xD000000000000011;
  v21._unint64_t object = (void *)0xE000000000000000;
  v7._unint64_t object = (void *)0x80000001004D79B0;
  v8._uint64_t countAndFlagsBits = 0;
  v8._unint64_t object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0;
  uint64_t v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v21)._countAndFlagsBits;

  uint64_t v10 = *(void *)(v0 + 16);
  if (v10)
  {
    unint64_t v12 = *(void *)(v10 + 16);
    uint64_t v11 = *(void *)(v10 + 24);
    switch(*(unsigned char *)(v10 + 32))
    {
      case 1:
        swift_retain();
        uint64_t v13 = sub_100403DA0();
        goto LABEL_6;
      case 2:
        uint64_t v15 = v12 & 0xFFFFFFFFFFFFFF8;
        if (!(v12 >> 62)) {
          goto LABEL_10;
        }
        swift_retain();
        sub_1001DCD9C(v12, v11, 2u);
        uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v16 = v12;
        uint64_t v17 = v11;
        unsigned __int8 v18 = 2;
        goto LABEL_15;
      case 3:
        uint64_t v15 = v12 & 0xFFFFFFFFFFFFFF8;
        if (v12 >> 62)
        {
          swift_retain();
          sub_1001DCD9C(v12, v11, 3u);
          uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v16 = v12;
          uint64_t v17 = v11;
          unsigned __int8 v18 = 3;
LABEL_15:
          sub_1001DCDF8(v16, v17, v18);
          swift_release();
        }
        else
        {
LABEL_10:
          uint64_t v14 = *(void *)(v15 + 16);
        }
LABEL_11:
        if (v14 != 1) {
          uint64_t countAndFlagsBits = v9;
        }
        break;
      default:
        swift_retain();
        sub_1001DCD9C(v12, v11, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = (uint64_t)sub_100403B78();
LABEL_6:
        uint64_t v14 = *(void *)(v13 + 16);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t sub_1002246A4()
{
  swift_release();
  swift_release();
  swift_release();
  sub_10004D2D8(v0 + 40);
  swift_release();
  sub_100224DE8(v0 + 88);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Podcasts28DownloadEpisodeContextAction_metricsLabel;
  uint64_t v2 = type metadata accessor for MetricsLabel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100224774()
{
  return type metadata accessor for DownloadEpisodeContextAction();
}

uint64_t type metadata accessor for DownloadEpisodeContextAction()
{
  uint64_t result = qword_1005FB710;
  if (!qword_1005FB710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002247C8()
{
  uint64_t result = type metadata accessor for MetricsLabel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_100224898()
{
  return 0xD000000000000011;
}

uint64_t sub_1002248B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Podcasts28DownloadEpisodeContextAction_metricsLabel;
  uint64_t v4 = type metadata accessor for MetricsLabel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100224928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ContextActionType.downloadEpisode(_:);
  uint64_t v3 = type metadata accessor for ContextActionType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

double sub_100224A0C@<D0>(uint64_t a1@<X8>)
{
  sub_100224C98((uint64_t)v5);
  uint64_t v2 = v6;
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_100224A4C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100267180(a1, a2, WitnessTable);
}

void *sub_100224AAC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266A1C(a1, a2, WitnessTable);
}

uint64_t sub_100224B0C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266B78(a1, a2, WitnessTable);
}

id sub_100224B6C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_100266E10(a1, a2, WitnessTable);
}

uint64_t sub_100224BCC(uint64_t a1)
{
  uint64_t result = sub_100224C54((unint64_t *)&unk_100608B40);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100224C10(uint64_t a1)
{
  uint64_t result = sub_100224C54(&qword_1005FB888);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100224C54(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DownloadEpisodeContextAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_100224C98@<D0>(uint64_t a1@<X8>)
{
  id v2 = [self systemBlueColor];
  id v3 = [self mainBundle];
  v8._unint64_t object = (void *)0xE800000000000000;
  v4._unint64_t object = (void *)0x80000001004D7950;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v5._uint64_t countAndFlagsBits = 0;
  v5._unint64_t object = (void *)0xE000000000000000;
  v8._uint64_t countAndFlagsBits = 0x64616F6C6E776F44;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v8);

  *(void *)a1 = v2;
  double result = 3.82472648e228;
  *(_OWORD *)(a1 + 8) = xmmword_10046FFD0;
  *(Swift::String *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_100224D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100054B78((uint64_t *)&unk_1005FB890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100224DE8(uint64_t a1)
{
  uint64_t v2 = sub_100054B78((uint64_t *)&unk_1005FB890);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100224E48()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100224E80(uint64_t *a1)
{
  return sub_100224278(a1);
}

uint64_t sub_100224E9C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100224EB4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t KeyProcessorPair.key.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTKeyProcessorPair_key);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t KeyProcessorPair.processor.getter()
{
  return swift_unknownObjectRetain();
}

id KeyProcessorPair.__allocating_init(key:processor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v7 = (char *)objc_allocWithZone(v3);
  Swift::String v8 = &v7[OBJC_IVAR___MTKeyProcessorPair_key];
  *(void *)Swift::String v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR___MTKeyProcessorPair_processor] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return [super init];
}

id KeyProcessorPair.init(key:processor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  Swift::String v8 = &v3[OBJC_IVAR___MTKeyProcessorPair_key];
  *(void *)Swift::String v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v3[OBJC_IVAR___MTKeyProcessorPair_processor] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return [super init];
}

void KeyProcessorPair.init()()
{
}

id MultiKeySyncProcessor.__allocating_init(keysAndProcessors:)(unint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return MultiKeySyncProcessor.init(keysAndProcessors:)(a1);
}

id MultiKeySyncProcessor.init(keysAndProcessors:)(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    Swift::String v6 = v1;
    if (v5) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v24 = _swiftEmptyArrayStorage;
    *(void *)&v1[OBJC_IVAR___MTMultiKeySyncProcessor_orderedKeys] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
LABEL_27:
    id v45 = v24;
    sub_100054B78(&qword_1005FB8B8);
    sub_100054B78(&qword_1005FB8C0);
    sub_100226BFC();
    *(void *)&v2[OBJC_IVAR___MTMultiKeySyncProcessor_processorsByKey] = Dictionary.init<A>(probablyUniqueKeysWithValues:)();

    v44.receiver = v2;
    v44.super_class = ObjectType;
    return [super init];
  }
  uint64_t v41 = v1;
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5) {
    goto LABEL_26;
  }
LABEL_3:
  id v45 = _swiftEmptyArrayStorage;
  id result = (id)sub_10005986C(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v42 = ObjectType;
    id v43 = v1;
    Swift::String v8 = v45;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v11 = *(void *)(v10 + OBJC_IVAR___MTKeyProcessorPair_key);
        uint64_t v12 = *(void *)(v10 + OBJC_IVAR___MTKeyProcessorPair_key + 8);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        id v45 = v8;
        unint64_t v14 = v8[2];
        unint64_t v13 = v8[3];
        if (v14 >= v13 >> 1)
        {
          sub_10005986C(v13 > 1, v14 + 1, 1);
          Swift::String v8 = v45;
        }
        ++v9;
        void v8[2] = v14 + 1;
        uint64_t v15 = &v8[2 * v14];
        void v15[4] = v11;
        uint64_t v15[5] = v12;
      }
      while (v5 != v9);
    }
    else
    {
      uint64_t v16 = (void *)(a1 + 32);
      uint64_t v17 = v5;
      do
      {
        unsigned __int8 v18 = (uint64_t *)(*v16 + OBJC_IVAR___MTKeyProcessorPair_key);
        uint64_t v20 = *v18;
        uint64_t v19 = v18[1];
        id v45 = v8;
        unint64_t v22 = v8[2];
        unint64_t v21 = v8[3];
        swift_bridgeObjectRetain();
        if (v22 >= v21 >> 1)
        {
          sub_10005986C(v21 > 1, v22 + 1, 1);
          Swift::String v8 = v45;
        }
        void v8[2] = v22 + 1;
        uint64_t v23 = &v8[2 * v22];
        v23[4] = v20;
        void v23[5] = v19;
        ++v16;
        --v17;
      }
      while (v17);
    }
    *(void *)&v43[OBJC_IVAR___MTMultiKeySyncProcessor_orderedKeys] = v8;
    id v45 = _swiftEmptyArrayStorage;
    sub_1001BA774(0, v5 & ~(v5 >> 63), 0);
    uint64_t v24 = _swiftEmptyArrayStorage;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v25 = 0;
      do
      {
        uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v27 = *(void *)(v26 + OBJC_IVAR___MTKeyProcessorPair_key);
        uint64_t v28 = *(void *)(v26 + OBJC_IVAR___MTKeyProcessorPair_key + 8);
        uint64_t v29 = *(void *)(v26 + OBJC_IVAR___MTKeyProcessorPair_processor);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        id v45 = v24;
        unint64_t v31 = v24[2];
        unint64_t v30 = v24[3];
        if (v31 >= v30 >> 1)
        {
          sub_1001BA774(v30 > 1, v31 + 1, 1);
          uint64_t v24 = v45;
        }
        ++v25;
        void v24[2] = v31 + 1;
        char v32 = &v24[3 * v31];
        v32[4] = v27;
        v32[5] = v28;
        v32[6] = v29;
      }
      while (v5 != v25);
    }
    else
    {
      uint64_t v33 = 0;
      do
      {
        uint64_t v34 = *(void *)(a1 + 8 * v33 + 32);
        uint64_t v36 = *(void *)(v34 + OBJC_IVAR___MTKeyProcessorPair_key);
        uint64_t v35 = *(void *)(v34 + OBJC_IVAR___MTKeyProcessorPair_key + 8);
        uint64_t v37 = *(void *)(v34 + OBJC_IVAR___MTKeyProcessorPair_processor);
        id v45 = v24;
        unint64_t v39 = v24[2];
        unint64_t v38 = v24[3];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        if (v39 >= v38 >> 1)
        {
          sub_1001BA774(v38 > 1, v39 + 1, 1);
          uint64_t v24 = v45;
        }
        ++v33;
        void v24[2] = v39 + 1;
        uint64_t v40 = &v24[3 * v39];
        unsigned char v40[4] = v36;
        v40[5] = v35;
        v40[6] = v37;
      }
      while (v5 != v33);
    }
    swift_bridgeObjectRelease();
    uint64_t ObjectType = v42;
    uint64_t v2 = v43;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

void MultiKeySyncProcessor.dirtyKeys.getter()
{
  id v1 = v0;
  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t)sub_100227C84(v2, (uint64_t)v1);
  swift_bridgeObjectRelease();

  unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_27;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_15;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      Swift::String v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      Swift::String v6 = (char *)*(id *)(v3 + 8 * i + 32);
    }
    Swift::String v7 = v6;
    if (objc_msgSend(*(id *)&v6[OBJC_IVAR___MTKeyProcessorPair_processor], "hasLocalChanges", v18))
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = v18;
  if ((v18 & 0x8000000000000000) != 0) {
    goto LABEL_27;
  }
LABEL_16:
  if ((v8 & 0x4000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(v8 + 16);
    if (!v9)
    {
LABEL_26:
      swift_release();
      return;
    }
    goto LABEL_18;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v9) {
    goto LABEL_26;
  }
LABEL_18:
  sub_10005986C(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0) {
        uint64_t v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v11 = (char *)*(id *)(v8 + 8 * v10 + 32);
      }
      uint64_t v12 = v11;
      uint64_t v14 = *(void *)&v11[OBJC_IVAR___MTKeyProcessorPair_key];
      uint64_t v13 = *(void *)&v11[OBJC_IVAR___MTKeyProcessorPair_key + 8];
      swift_bridgeObjectRetain();

      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_10005986C(v15 > 1, v16 + 1, 1);
      }
      ++v10;
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
      v17[4] = v14;
      v17[5] = v13;
    }
    while (v9 != v10);
    goto LABEL_26;
  }
LABEL_30:
  __break(1u);
}