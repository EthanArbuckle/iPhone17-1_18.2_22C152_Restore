NSString *__cdecl sub_1000068E4(id a1, NSSortDescriptor *a2)
{
  return [(NSSortDescriptor *)a2 key];
}

void sub_10000704C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100007064(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) uuid];
  v3 = +[MTRecencyUtil upNextForPodcastUuid:v2 excludeExplicit:0 ctx:*(void *)(a1 + 40)];

  v4 = [v3 episodeUuid];
  v5 = [*(id *)(a1 + 32) nextEpisodeUuid];
  v6 = _MTLogCategoryDefault();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = [*(id *)(a1 + 32) uuid];
    v8 = [v3 episodeUuid];
    [v3 modifiedDate];
    int v14 = 138543874;
    v15 = v7;
    __int16 v16 = 2114;
    v17 = v8;
    __int16 v18 = 2050;
    uint64_t v19 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "UpNext result from update cursor position for podcast %{public}@: episodeUuid: %{public}@ at %{public}f", (uint8_t *)&v14, 0x20u);
  }
  v10 = _MTLogCategoryDefault();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = [v3 episodeUuid];
    int v14 = 138543618;
    v15 = v5;
    __int16 v16 = 2114;
    v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "UpNext result updating podcast nextEpisodeUuid from %{public}@ to %{public}@", (uint8_t *)&v14, 0x16u);
  }
  if (v5 != v4 && ([v5 isEqualToString:v4] & 1) == 0)
  {
    v12 = [*(id *)(a1 + 40) episodeForUuid:v4];
    v13 = [*(id *)(a1 + 40) episodeForUuid:v5];
    if ([v13 listenNowEpisode])
    {
      [v13 setListenNowEpisode:0];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    }
    if (v12 && ([v12 listenNowEpisode] & 1) == 0)
    {
      [v12 setListenNowEpisode:1];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
      [v3 modifiedDate];
      [*(id *)(a1 + 32) setModifiedDate:];
    }
  }
  if (*(unsigned char *)(a1 + 56) && *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 40) saveInCurrentBlock];
  }
}

void sub_100007454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000746C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000747C(uint64_t a1)
{
}

void sub_100007484(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) podcastForFeedUrl:*(void *)(a1 + 40)];
  uint64_t v2 = [v5 uuid];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000078B8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1000078D0(uint64_t a1)
{
  uint64_t v2 = +[NSFetchRequest fetchRequestWithEntityName:kMTEpisodeEntityName];
  uint64_t v3 = [*(id *)(a1 + 32) uuid];
  v4 = +[MTEpisode predicateForEpisodesWithSeasonNumbersOnPodcastUuid:v3];
  [v2 setPredicate:v4];

  [v2 setFetchLimit:1];
  id v5 = *(void **)(a1 + 40);
  id v8 = 0;
  v6 = [v5 executeFetchRequest:v2 error:&v8];
  id v7 = v8;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v6 count] != 0;

  [v7 logAndThrow:0];
}

void sub_100007B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100007B40(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _fetchRequestForDistinctSeasons];
  uint64_t v3 = *(void **)(a1 + 40);
  id v9 = 0;
  v4 = [v3 executeFetchRequest:v2 error:&v9];
  id v5 = v9;
  [v5 logAndThrow:0];
  uint64_t v6 = [v4 valueForKey:kEpisodeSeasonNumber];
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_100007D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100007D60(uint64_t a1)
{
  id v10 = [*(id *)(a1 + 32) predicateForPodcast:*(void *)(a1 + 40)];
  uint64_t v2 = +[MTEpisode predicateForEpisodeType:1];
  uint64_t v3 = +[MTEpisode predicateForSeasonNumberWithNoEpisodeNumber:*(void *)(a1 + 64)];
  v4 = [v10 AND:v2];
  id v5 = [v4 AND:v3];

  uint64_t v6 = +[MTEpisode sortDescriptorsForPubDateAscending:0];
  uint64_t v7 = [*(id *)(a1 + 48) objectsInEntity:kMTEpisodeEntityName predicate:v5 sortDescriptors:v6 returnsObjectsAsFaults:0 limit:1];
  uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void type metadata accessor for MTEpisodePlayState(uint64_t a1)
{
}

__n128 initializeBufferWithCopyOfBuffer for TwoViewPercentageLayout(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10000825C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10000827C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_1000082B8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void *sub_100008300(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    a1[10] = a2[10];
    v168 = (int *)type metadata accessor for UpNextEntry.Episode(0);
    uint64_t v11 = v168[10];
    __dst = (char *)a1 + v11;
    v163 = a1;
    v164 = a2;
    v12 = (char *)a2 + v11;
    uint64_t v13 = sub_10008A170();
    uint64_t v14 = *(void *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v167 = v15;
    uint64_t v165 = v16;
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000903C(&qword_1000A1038);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v16);
    }
    v20 = v168;
    uint64_t v21 = v168[11];
    uint64_t v19 = v163;
    v22 = (void *)((char *)v163 + v21);
    v23 = (void *)((char *)v164 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v168[12];
    v26 = (void *)((char *)v163 + v25);
    v27 = (void *)((char *)v164 + v25);
    v28 = (int *)sub_10008A340();
    __dsta = (void *)*((void *)v28 - 1);
    v29 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
    swift_bridgeObjectRetain();
    if (v29(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1040);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v27[1];
      void *v26 = *v27;
      v26[1] = v31;
      int v32 = *((unsigned __int8 *)v27 + 32);
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
        *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
      }
      else
      {
        uint64_t v33 = v27[2];
        uint64_t v34 = v27[3];
        sub_100009080(v33, v34, v32);
        v26[2] = v33;
        v26[3] = v34;
        *((unsigned char *)v26 + 32) = v32;
      }
      *(_OWORD *)(v26 + 5) = *(_OWORD *)(v27 + 5);
      v35 = (id *)(v27 + 7);
      int v36 = *((unsigned __int8 *)v27 + 64);
      if (v36 == 255)
      {
        v26[7] = *v35;
        *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
      }
      else
      {
        id v37 = *v35;
        sub_100009098(*v35, *((unsigned char *)v27 + 64));
        v26[7] = v37;
        *((unsigned char *)v26 + 64) = v36;
      }
      v38 = (id *)(v27 + 9);
      int v39 = *((unsigned __int8 *)v27 + 80);
      if (v39 == 255)
      {
        v26[9] = *v38;
        *((unsigned char *)v26 + 80) = *((unsigned char *)v27 + 80);
      }
      else
      {
        id v40 = *v38;
        sub_100009098(*v38, *((unsigned char *)v27 + 80));
        v26[9] = v40;
        *((unsigned char *)v26 + 80) = v39;
      }
      v41 = (id *)(v27 + 11);
      int v42 = *((unsigned __int8 *)v27 + 96);
      if (v42 == 255)
      {
        v26[11] = *v41;
        *((unsigned char *)v26 + 96) = *((unsigned char *)v27 + 96);
      }
      else
      {
        id v43 = *v41;
        sub_100009098(*v41, *((unsigned char *)v27 + 96));
        v26[11] = v43;
        *((unsigned char *)v26 + 96) = v42;
      }
      v44 = (id *)(v27 + 13);
      int v45 = *((unsigned __int8 *)v27 + 112);
      if (v45 == 255)
      {
        v26[13] = *v44;
        *((unsigned char *)v26 + 112) = *((unsigned char *)v27 + 112);
      }
      else
      {
        id v46 = *v44;
        sub_100009098(*v44, *((unsigned char *)v27 + 112));
        v26[13] = v46;
        *((unsigned char *)v26 + 112) = v45;
      }
      v47 = (id *)(v27 + 15);
      int v48 = *((unsigned __int8 *)v27 + 128);
      if (v48 == 255)
      {
        v26[15] = *v47;
        *((unsigned char *)v26 + 128) = *((unsigned char *)v27 + 128);
      }
      else
      {
        id v49 = *v47;
        sub_100009098(*v47, *((unsigned char *)v27 + 128));
        v26[15] = v49;
        *((unsigned char *)v26 + 128) = v48;
      }
      v20 = v168;
      *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
      uint64_t v50 = v28[11];
      v51 = (char *)v26 + v50;
      v52 = (char *)v27 + v50;
      uint64_t v53 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v28[12];
      v55 = (void *)((char *)v26 + v54);
      v56 = (void *)((char *)v27 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      *((unsigned char *)v26 + v28[13]) = *((unsigned char *)v27 + v28[13]);
      *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
      *((unsigned char *)v26 + v28[15]) = *((unsigned char *)v27 + v28[15]);
      uint64_t v58 = v28[16];
      v59 = (void *)((char *)v26 + v58);
      v60 = (void *)((char *)v27 + v58);
      uint64_t v61 = v60[1];
      void *v59 = *v60;
      v59[1] = v61;
      v62 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(v26, 0, 1, v28);
    }
    uint64_t v63 = v20[13];
    v64 = (void *)((char *)v163 + v63);
    v65 = (void *)((char *)v164 + v63);
    if (v29((void *)((char *)v164 + v63), 1, v28))
    {
      uint64_t v66 = sub_10000903C(&qword_1000A1040);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v14;
    }
    else
    {
      uint64_t v68 = v65[1];
      void *v64 = *v65;
      v64[1] = v68;
      int v69 = *((unsigned __int8 *)v65 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = v14;
      if (v69 == 255)
      {
        *((_OWORD *)v64 + 1) = *((_OWORD *)v65 + 1);
        *((unsigned char *)v64 + 32) = *((unsigned char *)v65 + 32);
      }
      else
      {
        uint64_t v70 = v65[2];
        uint64_t v71 = v65[3];
        sub_100009080(v70, v71, v69);
        v64[2] = v70;
        v64[3] = v71;
        *((unsigned char *)v64 + 32) = v69;
      }
      *(_OWORD *)(v64 + 5) = *(_OWORD *)(v65 + 5);
      v72 = (id *)(v65 + 7);
      int v73 = *((unsigned __int8 *)v65 + 64);
      if (v73 == 255)
      {
        v64[7] = *v72;
        *((unsigned char *)v64 + 64) = *((unsigned char *)v65 + 64);
      }
      else
      {
        id v74 = *v72;
        sub_100009098(*v72, *((unsigned char *)v65 + 64));
        v64[7] = v74;
        *((unsigned char *)v64 + 64) = v73;
      }
      v75 = (id *)(v65 + 9);
      int v76 = *((unsigned __int8 *)v65 + 80);
      if (v76 == 255)
      {
        v64[9] = *v75;
        *((unsigned char *)v64 + 80) = *((unsigned char *)v65 + 80);
      }
      else
      {
        id v77 = *v75;
        sub_100009098(*v75, *((unsigned char *)v65 + 80));
        v64[9] = v77;
        *((unsigned char *)v64 + 80) = v76;
      }
      v78 = (id *)(v65 + 11);
      int v79 = *((unsigned __int8 *)v65 + 96);
      if (v79 == 255)
      {
        v64[11] = *v78;
        *((unsigned char *)v64 + 96) = *((unsigned char *)v65 + 96);
      }
      else
      {
        id v80 = *v78;
        sub_100009098(*v78, *((unsigned char *)v65 + 96));
        v64[11] = v80;
        *((unsigned char *)v64 + 96) = v79;
      }
      v81 = (id *)(v65 + 13);
      int v82 = *((unsigned __int8 *)v65 + 112);
      if (v82 == 255)
      {
        v64[13] = *v81;
        *((unsigned char *)v64 + 112) = *((unsigned char *)v65 + 112);
      }
      else
      {
        id v83 = *v81;
        sub_100009098(*v81, *((unsigned char *)v65 + 112));
        v64[13] = v83;
        *((unsigned char *)v64 + 112) = v82;
      }
      v84 = (id *)(v65 + 15);
      int v85 = *((unsigned __int8 *)v65 + 128);
      if (v85 == 255)
      {
        v64[15] = *v84;
        *((unsigned char *)v64 + 128) = *((unsigned char *)v65 + 128);
      }
      else
      {
        id v86 = *v84;
        sub_100009098(*v84, *((unsigned char *)v65 + 128));
        v64[15] = v86;
        *((unsigned char *)v64 + 128) = v85;
      }
      v20 = v168;
      *((unsigned char *)v64 + 129) = *((unsigned char *)v65 + 129);
      uint64_t v87 = v28[11];
      v88 = (char *)v64 + v87;
      v89 = (char *)v65 + v87;
      uint64_t v90 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      uint64_t v91 = v28[12];
      v92 = (void *)((char *)v64 + v91);
      v93 = (void *)((char *)v65 + v91);
      uint64_t v94 = v93[1];
      void *v92 = *v93;
      v92[1] = v94;
      *((unsigned char *)v64 + v28[13]) = *((unsigned char *)v65 + v28[13]);
      *((unsigned char *)v64 + v28[14]) = *((unsigned char *)v65 + v28[14]);
      *((unsigned char *)v64 + v28[15]) = *((unsigned char *)v65 + v28[15]);
      uint64_t v95 = v28[16];
      v96 = (void *)((char *)v64 + v95);
      v97 = (void *)((char *)v65 + v95);
      uint64_t v98 = v97[1];
      void *v96 = *v97;
      v96[1] = v98;
      v99 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99(v64, 0, 1, v28);
    }
    uint64_t v100 = v20[14];
    v101 = *(void **)((char *)v164 + v100);
    *(void *)((char *)v163 + v100) = v101;
    uint64_t v102 = v20[15];
    v103 = (char *)v163 + v102;
    v104 = (char *)v164 + v102;
    uint64_t v105 = sub_10008A050();
    uint64_t v106 = *(void *)(v105 - 8);
    v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
    id v108 = v101;
    if (v107(v104, 1, v105))
    {
      uint64_t v109 = sub_10000903C(&qword_1000A1048);
      memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
    }
    *((unsigned char *)v163 + v168[16]) = *((unsigned char *)v164 + v168[16]);
    uint64_t v110 = v168[17];
    v111 = (char *)v163 + v110;
    v112 = (char *)v164 + v110;
    *(void *)v111 = *(void *)v112;
    v111[8] = v112[8];
    uint64_t v113 = v168[18];
    v114 = (char *)v163 + v113;
    v115 = (char *)v164 + v113;
    *(void *)v114 = *(void *)v115;
    v114[8] = v115[8];
    uint64_t v116 = v168[19];
    v117 = (char *)v163 + v116;
    v118 = (char *)v164 + v116;
    if (v167((char *)v164 + v116, 1, v165))
    {
      uint64_t v119 = sub_10000903C(&qword_1000A1038);
      memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v117, v118, v165);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v117, 0, 1, v165);
    }
    uint64_t v120 = v168[20];
    v121 = (char *)v163 + v120;
    v122 = (char *)v164 + v120;
    if (v167((char *)v164 + v120, 1, v165))
    {
      uint64_t v123 = sub_10000903C(&qword_1000A1038);
      memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v121, v122, v165);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v121, 0, 1, v165);
    }
    uint64_t v124 = v168[21];
    v125 = (void *)((char *)v163 + v124);
    v126 = (void *)((char *)v164 + v124);
    if (*v126)
    {
      uint64_t v127 = v126[1];
      uint64_t v128 = v126[2];
      void *v125 = *v126;
      v125[1] = v127;
      v125[2] = v128;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)v125 = *(_OWORD *)v126;
      v125[2] = v126[2];
    }
    uint64_t v129 = v168[22];
    v130 = (char *)v163 + v129;
    v131 = (char *)v164 + v129;
    uint64_t v132 = sub_10000903C(&qword_1000A1050);
    uint64_t v133 = *(void *)(v132 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
    {
      uint64_t v134 = sub_10000903C(&qword_1000A1058);
      memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      v135 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v135(v130, v131, v165);
      v135(&v130[*(int *)(v132 + 36)], &v131[*(int *)(v132 + 36)], v165);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
    }
    v136 = (int *)type metadata accessor for WidgetPredictedPlayState();
    uint64_t v137 = v136[5];
    v138 = &v130[v137];
    v139 = &v131[v137];
    uint64_t v140 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
    uint64_t v141 = v136[6];
    v142 = &v130[v141];
    v143 = &v131[v141];
    uint64_t v144 = sub_10008A4B0();
    uint64_t v145 = *(void *)(v144 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
    {
      uint64_t v146 = sub_10000903C(&qword_1000A1060);
      memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v142, v143, v144);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
    }
    uint64_t v147 = v136[7];
    v148 = &v130[v147];
    v149 = &v131[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *(void *)v148 = *(void *)v149;
    *((void *)v148 + 1) = v150;
    uint64_t v151 = v136[8];
    v152 = &v130[v151];
    v153 = &v131[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    uint64_t v155 = *(int *)(a3 + 20);
    v156 = (char *)v163 + v155;
    v157 = (char *)v164 + v155;
    uint64_t v158 = *(void *)v157;
    char v159 = v157[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000090AC(v158, v159);
    *(void *)v156 = v158;
    v156[8] = v159;
  }
  return v19;
}

uint64_t sub_10000903C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100009080(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_100009098(id result, char a2)
{
  if (a2 == 1) {
    return result;
  }
  return result;
}

uint64_t sub_1000090AC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000090B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v5 = a1 + v4[10];
  uint64_t v6 = sub_10008A170();
  uint64_t v7 = *(void *)(v6 - 8);
  id v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v49(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + v4[12];
  uint64_t v9 = sub_10008A340();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v11 = *(unsigned __int8 *)(v8 + 32);
    if (v11 != 255) {
      sub_1000096D4(*(void *)(v8 + 16), *(void *)(v8 + 24), v11);
    }
    int v12 = *(unsigned __int8 *)(v8 + 64);
    if (v12 != 255) {
      sub_1000096EC(*(id *)(v8 + 56), v12);
    }
    int v13 = *(unsigned __int8 *)(v8 + 80);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v8 + 72), v13);
    }
    int v14 = *(unsigned __int8 *)(v8 + 96);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v8 + 88), v14);
    }
    uint64_t v48 = v7;
    int v15 = *(unsigned __int8 *)(v8 + 112);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v8 + 104), v15);
    }
    uint64_t v16 = a2;
    int v17 = *(unsigned __int8 *)(v8 + 128);
    if (v17 != 255) {
      sub_1000096EC(*(id *)(v8 + 120), v17);
    }
    uint64_t v18 = v8 + *(int *)(v9 + 44);
    uint64_t v19 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v16;
    uint64_t v7 = v48;
  }
  uint64_t v20 = a1 + v4[13];
  if (!v10(v20, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v21 = *(unsigned __int8 *)(v20 + 32);
    if (v21 != 255) {
      sub_1000096D4(*(void *)(v20 + 16), *(void *)(v20 + 24), v21);
    }
    int v22 = *(unsigned __int8 *)(v20 + 64);
    if (v22 != 255) {
      sub_1000096EC(*(id *)(v20 + 56), v22);
    }
    int v23 = *(unsigned __int8 *)(v20 + 80);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v20 + 72), v23);
    }
    int v24 = *(unsigned __int8 *)(v20 + 96);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v20 + 88), v24);
    }
    int v25 = *(unsigned __int8 *)(v20 + 112);
    if (v25 != 255) {
      sub_1000096EC(*(id *)(v20 + 104), v25);
    }
    uint64_t v26 = a2;
    int v27 = *(unsigned __int8 *)(v20 + 128);
    if (v27 != 255) {
      sub_1000096EC(*(id *)(v20 + 120), v27);
    }
    uint64_t v28 = v20 + *(int *)(v9 + 44);
    uint64_t v29 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v26;
  }

  uint64_t v30 = a1 + v4[15];
  uint64_t v31 = sub_10008A050();
  uint64_t v32 = *(void *)(v31 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v33 = a1 + v4[19];
  if (!v49(v33, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v33, v6);
  }
  uint64_t v34 = a1 + v4[20];
  if (!v49(v34, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v34, v6);
  }
  if (*(void *)(a1 + v4[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v35 = a1 + v4[22];
  uint64_t v36 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36))
  {
    id v37 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v37(v35, v6);
    v37(v35 + *(int *)(v36 + 36), v6);
  }
  uint64_t v38 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v39 = v35 + *(int *)(v38 + 20);
  uint64_t v40 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  uint64_t v41 = v35 + *(int *)(v38 + 24);
  uint64_t v42 = sub_10008A4B0();
  uint64_t v43 = *(void *)(v42 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = a1 + *(int *)(a2 + 20);
  uint64_t v45 = *(void *)v44;
  char v46 = *(unsigned char *)(v44 + 8);

  return sub_100009700(v45, v46);
}

uint64_t sub_1000096D4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1000096EC(id a1, char a2)
{
  if (a2 == 1) {
}
  }

uint64_t sub_100009700(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void *sub_10000970C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  v164 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v10 = v164[10];
  __dst = (char *)a1 + v10;
  v160 = a1;
  v161 = a2;
  int v11 = (char *)a2 + v10;
  uint64_t v12 = sub_10008A170();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v162 = v15;
  if (v14(v11, 1, v15))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v15);
  }
  int v17 = v164;
  uint64_t v18 = v164[11];
  uint64_t v19 = (void *)((char *)v160 + v18);
  uint64_t v20 = (void *)((char *)v161 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v164[12];
  int v23 = (void *)((char *)v160 + v22);
  int v24 = (void *)((char *)v161 + v22);
  int v25 = (int *)sub_10008A340();
  __dsta = (void *)*((void *)v25 - 1);
  uint64_t v26 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    uint64_t v27 = sub_10000903C(&qword_1000A1040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v24[1];
    void *v23 = *v24;
    v23[1] = v28;
    int v29 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
    }
    else
    {
      uint64_t v30 = v24[2];
      uint64_t v31 = v24[3];
      sub_100009080(v30, v31, v29);
      v23[2] = v30;
      v23[3] = v31;
      *((unsigned char *)v23 + 32) = v29;
    }
    *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
    uint64_t v32 = (id *)(v24 + 7);
    int v33 = *((unsigned __int8 *)v24 + 64);
    if (v33 == 255)
    {
      v23[7] = *v32;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
    }
    else
    {
      id v34 = *v32;
      sub_100009098(*v32, *((unsigned char *)v24 + 64));
      v23[7] = v34;
      *((unsigned char *)v23 + 64) = v33;
    }
    uint64_t v35 = (id *)(v24 + 9);
    int v36 = *((unsigned __int8 *)v24 + 80);
    if (v36 == 255)
    {
      v23[9] = *v35;
      *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
    }
    else
    {
      id v37 = *v35;
      sub_100009098(*v35, *((unsigned char *)v24 + 80));
      v23[9] = v37;
      *((unsigned char *)v23 + 80) = v36;
    }
    uint64_t v38 = (id *)(v24 + 11);
    int v39 = *((unsigned __int8 *)v24 + 96);
    if (v39 == 255)
    {
      v23[11] = *v38;
      *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
    }
    else
    {
      id v40 = *v38;
      sub_100009098(*v38, *((unsigned char *)v24 + 96));
      v23[11] = v40;
      *((unsigned char *)v23 + 96) = v39;
    }
    uint64_t v41 = (id *)(v24 + 13);
    int v42 = *((unsigned __int8 *)v24 + 112);
    if (v42 == 255)
    {
      v23[13] = *v41;
      *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_100009098(*v41, *((unsigned char *)v24 + 112));
      v23[13] = v43;
      *((unsigned char *)v23 + 112) = v42;
    }
    uint64_t v44 = (id *)(v24 + 15);
    int v45 = *((unsigned __int8 *)v24 + 128);
    if (v45 == 255)
    {
      v23[15] = *v44;
      *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_100009098(*v44, *((unsigned char *)v24 + 128));
      v23[15] = v46;
      *((unsigned char *)v23 + 128) = v45;
    }
    int v17 = v164;
    *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
    uint64_t v47 = v25[11];
    uint64_t v48 = (char *)v23 + v47;
    id v49 = (char *)v24 + v47;
    uint64_t v50 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v25[12];
    v52 = (void *)((char *)v23 + v51);
    uint64_t v53 = (void *)((char *)v24 + v51);
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
    *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
    *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
    uint64_t v55 = v25[16];
    v56 = (void *)((char *)v23 + v55);
    uint64_t v57 = (void *)((char *)v24 + v55);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    v59 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v23, 0, 1, v25);
  }
  uint64_t v60 = v17[13];
  uint64_t v61 = (void *)((char *)v160 + v60);
  v62 = (void *)((char *)v161 + v60);
  if (v26((void *)((char *)v161 + v60), 1, v25))
  {
    uint64_t v63 = sub_10000903C(&qword_1000A1040);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    uint64_t v64 = v13;
  }
  else
  {
    uint64_t v65 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v65;
    int v66 = *((unsigned __int8 *)v62 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = v13;
    if (v66 == 255)
    {
      *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
      *((unsigned char *)v61 + 32) = *((unsigned char *)v62 + 32);
    }
    else
    {
      uint64_t v67 = v62[2];
      uint64_t v68 = v62[3];
      sub_100009080(v67, v68, v66);
      v61[2] = v67;
      v61[3] = v68;
      *((unsigned char *)v61 + 32) = v66;
    }
    *(_OWORD *)(v61 + 5) = *(_OWORD *)(v62 + 5);
    int v69 = (id *)(v62 + 7);
    int v70 = *((unsigned __int8 *)v62 + 64);
    if (v70 == 255)
    {
      v61[7] = *v69;
      *((unsigned char *)v61 + 64) = *((unsigned char *)v62 + 64);
    }
    else
    {
      id v71 = *v69;
      sub_100009098(*v69, *((unsigned char *)v62 + 64));
      v61[7] = v71;
      *((unsigned char *)v61 + 64) = v70;
    }
    v72 = (id *)(v62 + 9);
    int v73 = *((unsigned __int8 *)v62 + 80);
    if (v73 == 255)
    {
      v61[9] = *v72;
      *((unsigned char *)v61 + 80) = *((unsigned char *)v62 + 80);
    }
    else
    {
      id v74 = *v72;
      sub_100009098(*v72, *((unsigned char *)v62 + 80));
      v61[9] = v74;
      *((unsigned char *)v61 + 80) = v73;
    }
    v75 = (id *)(v62 + 11);
    int v76 = *((unsigned __int8 *)v62 + 96);
    if (v76 == 255)
    {
      v61[11] = *v75;
      *((unsigned char *)v61 + 96) = *((unsigned char *)v62 + 96);
    }
    else
    {
      id v77 = *v75;
      sub_100009098(*v75, *((unsigned char *)v62 + 96));
      v61[11] = v77;
      *((unsigned char *)v61 + 96) = v76;
    }
    v78 = (id *)(v62 + 13);
    int v79 = *((unsigned __int8 *)v62 + 112);
    if (v79 == 255)
    {
      v61[13] = *v78;
      *((unsigned char *)v61 + 112) = *((unsigned char *)v62 + 112);
    }
    else
    {
      id v80 = *v78;
      sub_100009098(*v78, *((unsigned char *)v62 + 112));
      v61[13] = v80;
      *((unsigned char *)v61 + 112) = v79;
    }
    v81 = (id *)(v62 + 15);
    int v82 = *((unsigned __int8 *)v62 + 128);
    if (v82 == 255)
    {
      v61[15] = *v81;
      *((unsigned char *)v61 + 128) = *((unsigned char *)v62 + 128);
    }
    else
    {
      id v83 = *v81;
      sub_100009098(*v81, *((unsigned char *)v62 + 128));
      v61[15] = v83;
      *((unsigned char *)v61 + 128) = v82;
    }
    int v17 = v164;
    *((unsigned char *)v61 + 129) = *((unsigned char *)v62 + 129);
    uint64_t v84 = v25[11];
    int v85 = (char *)v61 + v84;
    id v86 = (char *)v62 + v84;
    uint64_t v87 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    uint64_t v88 = v25[12];
    v89 = (void *)((char *)v61 + v88);
    uint64_t v90 = (void *)((char *)v62 + v88);
    uint64_t v91 = v90[1];
    void *v89 = *v90;
    v89[1] = v91;
    *((unsigned char *)v61 + v25[13]) = *((unsigned char *)v62 + v25[13]);
    *((unsigned char *)v61 + v25[14]) = *((unsigned char *)v62 + v25[14]);
    *((unsigned char *)v61 + v25[15]) = *((unsigned char *)v62 + v25[15]);
    uint64_t v92 = v25[16];
    v93 = (void *)((char *)v61 + v92);
    uint64_t v94 = (void *)((char *)v62 + v92);
    uint64_t v95 = v94[1];
    void *v93 = *v94;
    v93[1] = v95;
    v96 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96(v61, 0, 1, v25);
  }
  uint64_t v97 = v17[14];
  uint64_t v98 = *(void **)((char *)v161 + v97);
  *(void *)((char *)v160 + v97) = v98;
  uint64_t v99 = v17[15];
  uint64_t v100 = (char *)v160 + v99;
  v101 = (char *)v161 + v99;
  uint64_t v102 = sub_10008A050();
  uint64_t v103 = *(void *)(v102 - 8);
  v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
  id v105 = v98;
  if (v104(v101, 1, v102))
  {
    uint64_t v106 = sub_10000903C(&qword_1000A1048);
    memcpy(v100, v101, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  *((unsigned char *)v160 + v164[16]) = *((unsigned char *)v161 + v164[16]);
  uint64_t v107 = v164[17];
  id v108 = (char *)v160 + v107;
  uint64_t v109 = (char *)v161 + v107;
  *(void *)id v108 = *(void *)v109;
  v108[8] = v109[8];
  uint64_t v110 = v164[18];
  v111 = (char *)v160 + v110;
  v112 = (char *)v161 + v110;
  *(void *)v111 = *(void *)v112;
  v111[8] = v112[8];
  uint64_t v113 = v164[19];
  v114 = (char *)v160 + v113;
  v115 = (char *)v161 + v113;
  if (v14((char *)v161 + v113, 1, v162))
  {
    uint64_t v116 = sub_10000903C(&qword_1000A1038);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v114, v115, v162);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v114, 0, 1, v162);
  }
  uint64_t v117 = v164[20];
  v118 = (char *)v160 + v117;
  uint64_t v119 = (char *)v161 + v117;
  if (v14((char *)v161 + v117, 1, v162))
  {
    uint64_t v120 = sub_10000903C(&qword_1000A1038);
    memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v118, v119, v162);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v162);
  }
  uint64_t v121 = v164[21];
  v122 = (void *)((char *)v160 + v121);
  uint64_t v123 = (void *)((char *)v161 + v121);
  if (*v123)
  {
    uint64_t v124 = v123[1];
    uint64_t v125 = v123[2];
    void *v122 = *v123;
    v122[1] = v124;
    v122[2] = v125;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)v122 = *(_OWORD *)v123;
    v122[2] = v123[2];
  }
  uint64_t v126 = v164[22];
  uint64_t v127 = (char *)v160 + v126;
  uint64_t v128 = (char *)v161 + v126;
  uint64_t v129 = sub_10000903C(&qword_1000A1050);
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = sub_10000903C(&qword_1000A1058);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v132(v127, v128, v162);
    v132(&v127[*(int *)(v129 + 36)], &v128[*(int *)(v129 + 36)], v162);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  uint64_t v133 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v134 = v133[5];
  v135 = &v127[v134];
  v136 = &v128[v134];
  uint64_t v137 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
  uint64_t v138 = v133[6];
  v139 = &v127[v138];
  uint64_t v140 = &v128[v138];
  uint64_t v141 = sub_10008A4B0();
  uint64_t v142 = *(void *)(v141 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
  {
    uint64_t v143 = sub_10000903C(&qword_1000A1060);
    memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  }
  uint64_t v144 = v133[7];
  uint64_t v145 = &v127[v144];
  uint64_t v146 = &v128[v144];
  uint64_t v147 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v147;
  uint64_t v148 = v133[8];
  v149 = &v127[v148];
  uint64_t v150 = &v128[v148];
  uint64_t v151 = *((void *)v150 + 1);
  *(void *)v149 = *(void *)v150;
  *((void *)v149 + 1) = v151;
  uint64_t v152 = *(int *)(a3 + 20);
  v153 = (char *)v160 + v152;
  uint64_t v154 = (char *)v161 + v152;
  uint64_t v155 = *(void *)v154;
  char v156 = v154[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000090AC(v155, v156);
  *(void *)v153 = v155;
  v153[8] = v156;
  return v160;
}

void *sub_10000A3F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008A170();
  uint64_t v321 = *(void *)(v10 - 8);
  int v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v321 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  uint64_t v318 = a3;
  v316 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v321 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v321 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v321 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v321 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = v6[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  int v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[12];
  uint64_t v19 = (uint64_t)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_10008A340();
  uint64_t v315 = *((void *)v21 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v315 + 48);
  int v23 = v22(v19, 1, v21);
  int v24 = v22((uint64_t)v20, 1, v21);
  uint64_t v317 = v10;
  if (!v23)
  {
    if (!v24)
    {
      v314 = v22;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = (long long *)(v19 + 16);
      uint64_t v30 = (long long *)(v20 + 16);
      int v31 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v31 == 255)
        {
          long long v72 = *v30;
          *(unsigned char *)(v19 + 32) = v20[32];
          *int v29 = v72;
        }
        else
        {
          uint64_t v69 = *((void *)v20 + 2);
          uint64_t v70 = *((void *)v20 + 3);
          sub_100009080(v69, v70, v20[32]);
          *(void *)(v19 + 16) = v69;
          *(void *)(v19 + 24) = v70;
          *(unsigned char *)(v19 + 32) = v31;
        }
      }
      else if (v31 == 255)
      {
        sub_10000BE14(v19 + 16);
        char v71 = v20[32];
        *int v29 = *v30;
        *(unsigned char *)(v19 + 32) = v71;
      }
      else
      {
        uint64_t v33 = *((void *)v20 + 2);
        uint64_t v32 = *((void *)v20 + 3);
        sub_100009080(v33, v32, v20[32]);
        uint64_t v34 = *(void *)(v19 + 16);
        uint64_t v35 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v33;
        *(void *)(v19 + 24) = v32;
        unsigned __int8 v36 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v31;
        sub_1000096D4(v34, v35, v36);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v73 = (void **)(v19 + 56);
      id v74 = (void **)(v20 + 56);
      int v75 = v20[64];
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v75 == 255)
        {
          v81 = *v74;
          *(unsigned char *)(v19 + 64) = v20[64];
          *int v73 = v81;
        }
        else
        {
          int v79 = *v74;
          sub_100009098(v79, v20[64]);
          *(void *)(v19 + 56) = v79;
          *(unsigned char *)(v19 + 64) = v75;
        }
      }
      else if (v75 == 255)
      {
        sub_10000BE68(v19 + 56);
        char v80 = v20[64];
        *int v73 = *v74;
        *(unsigned char *)(v19 + 64) = v80;
      }
      else
      {
        int v76 = *v74;
        sub_100009098(v76, v20[64]);
        id v77 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v76;
        char v78 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v75;
        sub_1000096EC(v77, v78);
      }
      int v82 = (void **)(v19 + 72);
      id v83 = (void **)(v20 + 72);
      int v84 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v84 == 255)
        {
          uint64_t v90 = *v83;
          *(unsigned char *)(v19 + 80) = v20[80];
          *int v82 = v90;
        }
        else
        {
          uint64_t v88 = *v83;
          sub_100009098(v88, v20[80]);
          *(void *)(v19 + 72) = v88;
          *(unsigned char *)(v19 + 80) = v84;
        }
      }
      else if (v84 == 255)
      {
        sub_10000BE68(v19 + 72);
        char v89 = v20[80];
        *int v82 = *v83;
        *(unsigned char *)(v19 + 80) = v89;
      }
      else
      {
        int v85 = *v83;
        sub_100009098(v85, v20[80]);
        id v86 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v85;
        char v87 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v84;
        sub_1000096EC(v86, v87);
      }
      uint64_t v91 = (void **)(v19 + 88);
      uint64_t v92 = (void **)(v20 + 88);
      int v93 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v93 == 255)
        {
          uint64_t v99 = *v92;
          *(unsigned char *)(v19 + 96) = v20[96];
          *uint64_t v91 = v99;
        }
        else
        {
          uint64_t v97 = *v92;
          sub_100009098(v97, v20[96]);
          *(void *)(v19 + 88) = v97;
          *(unsigned char *)(v19 + 96) = v93;
        }
      }
      else if (v93 == 255)
      {
        sub_10000BE68(v19 + 88);
        char v98 = v20[96];
        *uint64_t v91 = *v92;
        *(unsigned char *)(v19 + 96) = v98;
      }
      else
      {
        uint64_t v94 = *v92;
        sub_100009098(v94, v20[96]);
        uint64_t v95 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v94;
        char v96 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v93;
        sub_1000096EC(v95, v96);
      }
      uint64_t v100 = (void **)(v19 + 104);
      v101 = (void **)(v20 + 104);
      int v102 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v102 == 255)
        {
          id v108 = *v101;
          *(unsigned char *)(v19 + 112) = v20[112];
          *uint64_t v100 = v108;
        }
        else
        {
          uint64_t v106 = *v101;
          sub_100009098(v106, v20[112]);
          *(void *)(v19 + 104) = v106;
          *(unsigned char *)(v19 + 112) = v102;
        }
      }
      else if (v102 == 255)
      {
        sub_10000BE68(v19 + 104);
        char v107 = v20[112];
        *uint64_t v100 = *v101;
        *(unsigned char *)(v19 + 112) = v107;
      }
      else
      {
        uint64_t v103 = *v101;
        sub_100009098(v103, v20[112]);
        v104 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v103;
        char v105 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v102;
        sub_1000096EC(v104, v105);
      }
      uint64_t v109 = (void **)(v19 + 120);
      uint64_t v110 = (void **)(v20 + 120);
      int v111 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v111 == 255)
        {
          uint64_t v117 = *v110;
          *(unsigned char *)(v19 + 128) = v20[128];
          *uint64_t v109 = v117;
        }
        else
        {
          v115 = *v110;
          sub_100009098(v115, v20[128]);
          *(void *)(v19 + 120) = v115;
          *(unsigned char *)(v19 + 128) = v111;
        }
      }
      else if (v111 == 255)
      {
        sub_10000BE68(v19 + 120);
        char v116 = v20[128];
        *uint64_t v109 = *v110;
        *(unsigned char *)(v19 + 128) = v116;
      }
      else
      {
        v112 = *v110;
        sub_100009098(v112, v20[128]);
        uint64_t v113 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v112;
        char v114 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v111;
        sub_1000096EC(v113, v114);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v118 = v21[11];
      uint64_t v119 = v19 + v118;
      uint64_t v120 = &v20[v118];
      uint64_t v121 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
      uint64_t v122 = v21[12];
      uint64_t v123 = (void *)(v19 + v122);
      uint64_t v124 = &v20[v122];
      *uint64_t v123 = *(void *)v124;
      v123[1] = *((void *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v125 = v21[16];
      uint64_t v126 = (void *)(v19 + v125);
      uint64_t v127 = &v20[v125];
      void *v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_10000BEBC(v19);
LABEL_13:
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_76;
  }
  if (v24) {
    goto LABEL_13;
  }
  v314 = v22;
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v25 = v20[32];
  swift_bridgeObjectRetain();
  if (v25 == 255)
  {
    long long v37 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v37;
  }
  else
  {
    uint64_t v26 = *((void *)v20 + 2);
    uint64_t v27 = *((void *)v20 + 3);
    sub_100009080(v26, v27, v25);
    *(void *)(v19 + 16) = v26;
    *(void *)(v19 + 24) = v27;
    *(unsigned char *)(v19 + 32) = v25;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v38 = (id *)(v20 + 56);
  int v39 = v20[64];
  if (v39 == 255)
  {
    id v41 = *v38;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v41;
  }
  else
  {
    id v40 = *v38;
    sub_100009098(*v38, v20[64]);
    *(void *)(v19 + 56) = v40;
    *(unsigned char *)(v19 + 64) = v39;
  }
  int v42 = (id *)(v20 + 72);
  int v43 = v20[80];
  if (v43 == 255)
  {
    id v45 = *v42;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v45;
  }
  else
  {
    id v44 = *v42;
    sub_100009098(*v42, v20[80]);
    *(void *)(v19 + 72) = v44;
    *(unsigned char *)(v19 + 80) = v43;
  }
  id v46 = (id *)(v20 + 88);
  int v47 = v20[96];
  if (v47 == 255)
  {
    id v49 = *v46;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v49;
  }
  else
  {
    id v48 = *v46;
    sub_100009098(*v46, v20[96]);
    *(void *)(v19 + 88) = v48;
    *(unsigned char *)(v19 + 96) = v47;
  }
  uint64_t v50 = (id *)(v20 + 104);
  int v51 = v20[112];
  if (v51 == 255)
  {
    id v53 = *v50;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v53;
  }
  else
  {
    id v52 = *v50;
    sub_100009098(*v50, v20[112]);
    *(void *)(v19 + 104) = v52;
    *(unsigned char *)(v19 + 112) = v51;
  }
  uint64_t v54 = (id *)(v20 + 120);
  int v55 = v20[128];
  if (v55 == 255)
  {
    id v57 = *v54;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v57;
  }
  else
  {
    id v56 = *v54;
    sub_100009098(*v54, v20[128]);
    *(void *)(v19 + 120) = v56;
    *(unsigned char *)(v19 + 128) = v55;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v58 = v21[11];
  uint64_t v59 = v19 + v58;
  uint64_t v60 = &v20[v58];
  uint64_t v61 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  uint64_t v62 = v21[12];
  uint64_t v63 = (void *)(v19 + v62);
  uint64_t v64 = &v20[v62];
  *uint64_t v63 = *(void *)v64;
  v63[1] = *((void *)v64 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v65 = v21[16];
  int v66 = (void *)(v19 + v65);
  uint64_t v67 = &v20[v65];
  *int v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  uint64_t v68 = *(void (**)(uint64_t, void, uint64_t, int *))(v315 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v19, 0, 1, v21);
LABEL_75:
  uint64_t v22 = v314;
LABEL_76:
  uint64_t v128 = v6[13];
  uint64_t v129 = (uint64_t)a1 + v128;
  uint64_t v130 = (char *)a2 + v128;
  int v131 = v22((uint64_t)a1 + v128, 1, v21);
  uint64_t v132 = (uint64_t (*)(char *, uint64_t, int *))v22;
  int v133 = v131;
  int v134 = v132(v130, 1, v21);
  if (v133)
  {
    if (!v134)
    {
      *(void *)uint64_t v129 = *(void *)v130;
      *(void *)(v129 + 8) = *((void *)v130 + 1);
      int v135 = v130[32];
      swift_bridgeObjectRetain();
      if (v135 == 255)
      {
        long long v147 = *((_OWORD *)v130 + 1);
        *(unsigned char *)(v129 + 32) = v130[32];
        *(_OWORD *)(v129 + 16) = v147;
      }
      else
      {
        uint64_t v136 = *((void *)v130 + 2);
        uint64_t v137 = *((void *)v130 + 3);
        sub_100009080(v136, v137, v135);
        *(void *)(v129 + 16) = v136;
        *(void *)(v129 + 24) = v137;
        *(unsigned char *)(v129 + 32) = v135;
      }
      *(void *)(v129 + 40) = *((void *)v130 + 5);
      *(void *)(v129 + 48) = *((void *)v130 + 6);
      uint64_t v148 = (id *)(v130 + 56);
      int v149 = v130[64];
      if (v149 == 255)
      {
        id v151 = *v148;
        *(unsigned char *)(v129 + 64) = v130[64];
        *(void *)(v129 + 56) = v151;
      }
      else
      {
        id v150 = *v148;
        sub_100009098(*v148, v130[64]);
        *(void *)(v129 + 56) = v150;
        *(unsigned char *)(v129 + 64) = v149;
      }
      uint64_t v152 = (id *)(v130 + 72);
      int v153 = v130[80];
      if (v153 == 255)
      {
        id v155 = *v152;
        *(unsigned char *)(v129 + 80) = v130[80];
        *(void *)(v129 + 72) = v155;
      }
      else
      {
        id v154 = *v152;
        sub_100009098(*v152, v130[80]);
        *(void *)(v129 + 72) = v154;
        *(unsigned char *)(v129 + 80) = v153;
      }
      char v156 = (id *)(v130 + 88);
      int v157 = v130[96];
      if (v157 == 255)
      {
        id v159 = *v156;
        *(unsigned char *)(v129 + 96) = v130[96];
        *(void *)(v129 + 88) = v159;
      }
      else
      {
        id v158 = *v156;
        sub_100009098(*v156, v130[96]);
        *(void *)(v129 + 88) = v158;
        *(unsigned char *)(v129 + 96) = v157;
      }
      v160 = (id *)(v130 + 104);
      int v161 = v130[112];
      if (v161 == 255)
      {
        id v163 = *v160;
        *(unsigned char *)(v129 + 112) = v130[112];
        *(void *)(v129 + 104) = v163;
      }
      else
      {
        id v162 = *v160;
        sub_100009098(*v160, v130[112]);
        *(void *)(v129 + 104) = v162;
        *(unsigned char *)(v129 + 112) = v161;
      }
      v164 = (id *)(v130 + 120);
      int v165 = v130[128];
      if (v165 == 255)
      {
        id v167 = *v164;
        *(unsigned char *)(v129 + 128) = v130[128];
        *(void *)(v129 + 120) = v167;
      }
      else
      {
        id v166 = *v164;
        sub_100009098(*v164, v130[128]);
        *(void *)(v129 + 120) = v166;
        *(unsigned char *)(v129 + 128) = v165;
      }
      *(unsigned char *)(v129 + 129) = v130[129];
      uint64_t v168 = v21[11];
      uint64_t v169 = v129 + v168;
      v170 = &v130[v168];
      uint64_t v171 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      uint64_t v172 = v21[12];
      v173 = (void *)(v129 + v172);
      v174 = &v130[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
      *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
      *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
      uint64_t v175 = v21[16];
      v176 = (void *)(v129 + v175);
      v177 = &v130[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      v178 = *(void (**)(uint64_t, void, uint64_t, int *))(v315 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178(v129, 0, 1, v21);
      goto LABEL_143;
    }
LABEL_82:
    uint64_t v138 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v129, v130, *(void *)(*(void *)(v138 - 8) + 64));
    goto LABEL_143;
  }
  if (v134)
  {
    sub_10000BEBC(v129);
    goto LABEL_82;
  }
  *(void *)uint64_t v129 = *(void *)v130;
  *(void *)(v129 + 8) = *((void *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v139 = (long long *)(v129 + 16);
  uint64_t v140 = (long long *)(v130 + 16);
  int v141 = v130[32];
  if (*(unsigned __int8 *)(v129 + 32) == 255)
  {
    if (v141 == 255)
    {
      long long v182 = *v140;
      *(unsigned char *)(v129 + 32) = v130[32];
      long long *v139 = v182;
    }
    else
    {
      uint64_t v179 = *((void *)v130 + 2);
      uint64_t v180 = *((void *)v130 + 3);
      sub_100009080(v179, v180, v130[32]);
      *(void *)(v129 + 16) = v179;
      *(void *)(v129 + 24) = v180;
      *(unsigned char *)(v129 + 32) = v141;
    }
  }
  else if (v141 == 255)
  {
    sub_10000BE14(v129 + 16);
    char v181 = v130[32];
    long long *v139 = *v140;
    *(unsigned char *)(v129 + 32) = v181;
  }
  else
  {
    uint64_t v142 = *((void *)v130 + 2);
    uint64_t v143 = *((void *)v130 + 3);
    sub_100009080(v142, v143, v130[32]);
    uint64_t v144 = *(void *)(v129 + 16);
    uint64_t v145 = *(void *)(v129 + 24);
    *(void *)(v129 + 16) = v142;
    *(void *)(v129 + 24) = v143;
    unsigned __int8 v146 = *(unsigned char *)(v129 + 32);
    *(unsigned char *)(v129 + 32) = v141;
    sub_1000096D4(v144, v145, v146);
  }
  *(void *)(v129 + 40) = *((void *)v130 + 5);
  *(void *)(v129 + 48) = *((void *)v130 + 6);
  v183 = (void **)(v129 + 56);
  v184 = (void **)(v130 + 56);
  int v185 = v130[64];
  if (*(unsigned __int8 *)(v129 + 64) == 255)
  {
    if (v185 == 255)
    {
      v191 = *v184;
      *(unsigned char *)(v129 + 64) = v130[64];
      *v183 = v191;
    }
    else
    {
      v189 = *v184;
      sub_100009098(v189, v130[64]);
      *(void *)(v129 + 56) = v189;
      *(unsigned char *)(v129 + 64) = v185;
    }
  }
  else if (v185 == 255)
  {
    sub_10000BE68(v129 + 56);
    char v190 = v130[64];
    *v183 = *v184;
    *(unsigned char *)(v129 + 64) = v190;
  }
  else
  {
    v186 = *v184;
    sub_100009098(v186, v130[64]);
    v187 = *(void **)(v129 + 56);
    *(void *)(v129 + 56) = v186;
    char v188 = *(unsigned char *)(v129 + 64);
    *(unsigned char *)(v129 + 64) = v185;
    sub_1000096EC(v187, v188);
  }
  v192 = (void **)(v129 + 72);
  v193 = (void **)(v130 + 72);
  int v194 = v130[80];
  if (*(unsigned __int8 *)(v129 + 80) == 255)
  {
    if (v194 == 255)
    {
      v200 = *v193;
      *(unsigned char *)(v129 + 80) = v130[80];
      *v192 = v200;
    }
    else
    {
      v198 = *v193;
      sub_100009098(v198, v130[80]);
      *(void *)(v129 + 72) = v198;
      *(unsigned char *)(v129 + 80) = v194;
    }
  }
  else if (v194 == 255)
  {
    sub_10000BE68(v129 + 72);
    char v199 = v130[80];
    *v192 = *v193;
    *(unsigned char *)(v129 + 80) = v199;
  }
  else
  {
    v195 = *v193;
    sub_100009098(v195, v130[80]);
    v196 = *(void **)(v129 + 72);
    *(void *)(v129 + 72) = v195;
    char v197 = *(unsigned char *)(v129 + 80);
    *(unsigned char *)(v129 + 80) = v194;
    sub_1000096EC(v196, v197);
  }
  v201 = (void **)(v129 + 88);
  v202 = (void **)(v130 + 88);
  int v203 = v130[96];
  if (*(unsigned __int8 *)(v129 + 96) == 255)
  {
    if (v203 == 255)
    {
      v209 = *v202;
      *(unsigned char *)(v129 + 96) = v130[96];
      *v201 = v209;
    }
    else
    {
      v207 = *v202;
      sub_100009098(v207, v130[96]);
      *(void *)(v129 + 88) = v207;
      *(unsigned char *)(v129 + 96) = v203;
    }
  }
  else if (v203 == 255)
  {
    sub_10000BE68(v129 + 88);
    char v208 = v130[96];
    *v201 = *v202;
    *(unsigned char *)(v129 + 96) = v208;
  }
  else
  {
    v204 = *v202;
    sub_100009098(v204, v130[96]);
    v205 = *(void **)(v129 + 88);
    *(void *)(v129 + 88) = v204;
    char v206 = *(unsigned char *)(v129 + 96);
    *(unsigned char *)(v129 + 96) = v203;
    sub_1000096EC(v205, v206);
  }
  v210 = (void **)(v129 + 104);
  v211 = (void **)(v130 + 104);
  int v212 = v130[112];
  if (*(unsigned __int8 *)(v129 + 112) == 255)
  {
    if (v212 == 255)
    {
      v218 = *v211;
      *(unsigned char *)(v129 + 112) = v130[112];
      *v210 = v218;
    }
    else
    {
      v216 = *v211;
      sub_100009098(v216, v130[112]);
      *(void *)(v129 + 104) = v216;
      *(unsigned char *)(v129 + 112) = v212;
    }
  }
  else if (v212 == 255)
  {
    sub_10000BE68(v129 + 104);
    char v217 = v130[112];
    *v210 = *v211;
    *(unsigned char *)(v129 + 112) = v217;
  }
  else
  {
    v213 = *v211;
    sub_100009098(v213, v130[112]);
    v214 = *(void **)(v129 + 104);
    *(void *)(v129 + 104) = v213;
    char v215 = *(unsigned char *)(v129 + 112);
    *(unsigned char *)(v129 + 112) = v212;
    sub_1000096EC(v214, v215);
  }
  v219 = (void **)(v129 + 120);
  v220 = (void **)(v130 + 120);
  int v221 = v130[128];
  if (*(unsigned __int8 *)(v129 + 128) == 255)
  {
    if (v221 == 255)
    {
      v227 = *v220;
      *(unsigned char *)(v129 + 128) = v130[128];
      *v219 = v227;
    }
    else
    {
      v225 = *v220;
      sub_100009098(v225, v130[128]);
      *(void *)(v129 + 120) = v225;
      *(unsigned char *)(v129 + 128) = v221;
    }
  }
  else if (v221 == 255)
  {
    sub_10000BE68(v129 + 120);
    char v226 = v130[128];
    *v219 = *v220;
    *(unsigned char *)(v129 + 128) = v226;
  }
  else
  {
    v222 = *v220;
    sub_100009098(v222, v130[128]);
    v223 = *(void **)(v129 + 120);
    *(void *)(v129 + 120) = v222;
    char v224 = *(unsigned char *)(v129 + 128);
    *(unsigned char *)(v129 + 128) = v221;
    sub_1000096EC(v223, v224);
  }
  *(unsigned char *)(v129 + 129) = v130[129];
  uint64_t v228 = v21[11];
  uint64_t v229 = v129 + v228;
  v230 = &v130[v228];
  uint64_t v231 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v229, v230, v231);
  uint64_t v232 = v21[12];
  v233 = (void *)(v129 + v232);
  v234 = &v130[v232];
  void *v233 = *(void *)v234;
  v233[1] = *((void *)v234 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
  *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
  *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
  uint64_t v235 = v21[16];
  v236 = (void *)(v129 + v235);
  v237 = &v130[v235];
  void *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v238 = v6[14];
  v239 = *(void **)((char *)a1 + v238);
  v240 = *(void **)((char *)a2 + v238);
  *(void *)((char *)a1 + v238) = v240;
  id v241 = v240;

  uint64_t v242 = v6[15];
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  uint64_t v245 = sub_10008A050();
  uint64_t v246 = *(void *)(v245 - 8);
  v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  LODWORD(v239) = v247(v243, 1, v245);
  int v248 = v247(v244, 1, v245);
  if (v239)
  {
    if (!v248)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v248)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_148:
    uint64_t v249 = sub_10000903C(&qword_1000A1048);
    memcpy(v243, v244, *(void *)(*(void *)(v249 - 8) + 64));
    goto LABEL_149;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
LABEL_149:
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  uint64_t v250 = v6[17];
  v251 = (char *)a1 + v250;
  v252 = (char *)a2 + v250;
  uint64_t v253 = *(void *)v252;
  v251[8] = v252[8];
  *(void *)v251 = v253;
  uint64_t v254 = v6[18];
  v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  uint64_t v257 = *(void *)v256;
  v255[8] = v256[8];
  *(void *)v255 = v257;
  uint64_t v258 = v6[19];
  v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  int v261 = v316((char *)a1 + v258, 1, v317);
  int v262 = v316(v260, 1, v317);
  if (v261)
  {
    if (!v262)
    {
      (*(void (**)(char *, char *, uint64_t))(v321 + 16))(v259, v260, v317);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v321 + 56))(v259, 0, 1, v317);
      goto LABEL_155;
    }
    goto LABEL_154;
  }
  if (v262)
  {
    (*(void (**)(char *, uint64_t))(v321 + 8))(v259, v317);
LABEL_154:
    uint64_t v263 = sub_10000903C(&qword_1000A1038);
    memcpy(v259, v260, *(void *)(*(void *)(v263 - 8) + 64));
    goto LABEL_155;
  }
  (*(void (**)(char *, char *, uint64_t))(v321 + 24))(v259, v260, v317);
LABEL_155:
  uint64_t v264 = v6[20];
  v265 = (char *)a1 + v264;
  v266 = (char *)a2 + v264;
  int v267 = v316((char *)a1 + v264, 1, v317);
  int v268 = v316(v266, 1, v317);
  if (v267)
  {
    if (!v268)
    {
      (*(void (**)(char *, char *, uint64_t))(v321 + 16))(v265, v266, v317);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v321 + 56))(v265, 0, 1, v317);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v268)
  {
    (*(void (**)(char *, uint64_t))(v321 + 8))(v265, v317);
LABEL_160:
    uint64_t v269 = sub_10000903C(&qword_1000A1038);
    memcpy(v265, v266, *(void *)(*(void *)(v269 - 8) + 64));
    goto LABEL_161;
  }
  (*(void (**)(char *, char *, uint64_t))(v321 + 24))(v265, v266, v317);
LABEL_161:
  uint64_t v270 = v6[21];
  v271 = (void *)((char *)a1 + v270);
  v272 = (char *)a2 + v270;
  uint64_t v273 = *(void *)((char *)a2 + v270);
  if (*(void *)((char *)a1 + v270))
  {
    if (v273)
    {
      void *v271 = v273;
      swift_retain();
      swift_release();
      v271[1] = *((void *)v272 + 1);
      swift_retain();
      swift_release();
      v271[2] = *((void *)v272 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10000BF18((uint64_t)a1 + v270);
      uint64_t v274 = *((void *)v272 + 2);
      *(_OWORD *)v271 = *(_OWORD *)v272;
      v271[2] = v274;
    }
  }
  else if (v273)
  {
    void *v271 = v273;
    v271[1] = *((void *)v272 + 1);
    v271[2] = *((void *)v272 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v275 = *(_OWORD *)v272;
    v271[2] = *((void *)v272 + 2);
    *(_OWORD *)v271 = v275;
  }
  uint64_t v276 = v6[22];
  v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  uint64_t v279 = sub_10000903C(&qword_1000A1050);
  uint64_t v280 = *(void *)(v279 - 8);
  v281 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v280 + 48);
  int v282 = v281(v277, 1, v279);
  int v283 = v281(v278, 1, v279);
  v319 = a2;
  v320 = a1;
  if (v282)
  {
    if (!v283)
    {
      v284 = *(void (**)(char *, char *, uint64_t))(v321 + 16);
      v284(v277, v278, v317);
      v284(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v317);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  if (v283)
  {
    sub_10000BF6C((uint64_t)v277);
LABEL_176:
    uint64_t v285 = sub_10000903C(&qword_1000A1058);
    memcpy(v277, v278, *(void *)(*(void *)(v285 - 8) + 64));
    goto LABEL_177;
  }
  v313 = *(void (**)(char *, char *, uint64_t))(v321 + 24);
  v313(v277, v278, v317);
  v313(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v317);
LABEL_177:
  v286 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v287 = v286[5];
  v288 = &v277[v287];
  v289 = &v278[v287];
  uint64_t v290 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 24))(v288, v289, v290);
  uint64_t v291 = v286[6];
  v292 = &v277[v291];
  v293 = &v278[v291];
  uint64_t v294 = sub_10008A4B0();
  uint64_t v295 = *(void *)(v294 - 8);
  v296 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v295 + 48);
  LODWORD(v288) = v296(v292, 1, v294);
  int v297 = v296(v293, 1, v294);
  if (!v288)
  {
    if (!v297)
    {
      (*(void (**)(char *, char *, uint64_t))(v295 + 24))(v292, v293, v294);
      goto LABEL_183;
    }
    (*(void (**)(char *, uint64_t))(v295 + 8))(v292, v294);
    goto LABEL_182;
  }
  if (v297)
  {
LABEL_182:
    uint64_t v298 = sub_10000903C(&qword_1000A1060);
    memcpy(v292, v293, *(void *)(*(void *)(v298 - 8) + 64));
    goto LABEL_183;
  }
  (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v293, v294);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
LABEL_183:
  uint64_t v299 = v286[7];
  v300 = &v277[v299];
  v301 = &v278[v299];
  *(void *)v300 = *(void *)v301;
  *((void *)v300 + 1) = *((void *)v301 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v302 = v286[8];
  v303 = &v277[v302];
  v304 = &v278[v302];
  *(void *)v303 = *(void *)v304;
  *((void *)v303 + 1) = *((void *)v304 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v305 = *(int *)(v318 + 20);
  v306 = (char *)v320 + v305;
  v307 = (char *)v319 + v305;
  uint64_t v308 = *(void *)v307;
  char v309 = v307[8];
  sub_1000090AC(*(void *)v307, v309);
  uint64_t v310 = *(void *)v306;
  char v311 = v306[8];
  *(void *)v306 = v308;
  v306[8] = v309;
  sub_100009700(v310, v311);
  return v320;
}

uint64_t sub_10000BE14(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000BE68(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000BEBC(uint64_t a1)
{
  uint64_t v2 = sub_10008A340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000BF18(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000BF6C(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A1050);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000BFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v8 = v7[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v87 = v11;
  uint64_t v86 = v12;
  int v85 = *(unsigned int (**)(const void *, uint64_t))(v12 + 48);
  if (v85(v10, 1))
  {
    uint64_t v13 = sub_10000903C(&qword_1000A1038);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v87);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v87);
  }
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  uint64_t v14 = v7[12];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  int v17 = (int *)sub_10008A340();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48);
  uint64_t v84 = v18;
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1040);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v21;
    *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((unsigned char *)v15 + 64) = *((unsigned char *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((unsigned char *)v15 + 129) = *((unsigned char *)v16 + 129);
    uint64_t v22 = v17[11];
    int v82 = (char *)v15 + v22;
    uint64_t v83 = a3;
    int v23 = (char *)v16 + v22;
    uint64_t v24 = sub_10008A300();
    int v25 = v23;
    a3 = v83;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v82, v25, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((unsigned char *)v15 + v17[13]) = *((unsigned char *)v16 + v17[13]);
    *((unsigned char *)v15 + v17[14]) = *((unsigned char *)v16 + v17[14]);
    *((unsigned char *)v15 + v17[15]) = *((unsigned char *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = v7[13];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  if (v19((_OWORD *)(a2 + v26), 1, v17))
  {
    uint64_t v29 = sub_10000903C(&qword_1000A1040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v28[1];
    _OWORD *v27 = *v28;
    v27[1] = v30;
    *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
    *(_OWORD *)((char *)v27 + 40) = *(_OWORD *)((char *)v28 + 40);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
    *(_OWORD *)((char *)v27 + 113) = *(_OWORD *)((char *)v28 + 113);
    *(_OWORD *)((char *)v27 + 104) = *(_OWORD *)((char *)v28 + 104);
    *(_OWORD *)((char *)v27 + 88) = *(_OWORD *)((char *)v28 + 88);
    *(_OWORD *)((char *)v27 + 72) = *(_OWORD *)((char *)v28 + 72);
    *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
    uint64_t v31 = v17[11];
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = a3;
    uint64_t v34 = (char *)v28 + v31;
    uint64_t v35 = sub_10008A300();
    unsigned __int8 v36 = v34;
    a3 = v33;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v36, v35);
    *(_OWORD *)((char *)v27 + v17[12]) = *(_OWORD *)((char *)v28 + v17[12]);
    *((unsigned char *)v27 + v17[13]) = *((unsigned char *)v28 + v17[13]);
    *((unsigned char *)v27 + v17[14]) = *((unsigned char *)v28 + v17[14]);
    *((unsigned char *)v27 + v17[15]) = *((unsigned char *)v28 + v17[15]);
    *(_OWORD *)((char *)v27 + v17[16]) = *(_OWORD *)((char *)v28 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v84 + 56))(v27, 0, 1, v17);
  }
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  uint64_t v37 = v7[15];
  uint64_t v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_10008A050();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10000903C(&qword_1000A1048);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v43 = v7[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = v7[18];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = v7[19];
  uint64_t v50 = (void *)(a1 + v49);
  int v51 = (const void *)(a2 + v49);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v85)(a2 + v49, 1, v87))
  {
    uint64_t v52 = sub_10000903C(&qword_1000A1038);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v86 + 32))(v50, v51, v87);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v50, 0, 1, v87);
  }
  uint64_t v53 = v7[20];
  uint64_t v54 = (void *)(a1 + v53);
  int v55 = (const void *)(a2 + v53);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v85)(a2 + v53, 1, v87))
  {
    uint64_t v56 = sub_10000903C(&qword_1000A1038);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v86 + 32))(v54, v55, v87);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v54, 0, 1, v87);
  }
  uint64_t v57 = v7[21];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  uint64_t v60 = v7[22];
  uint64_t v61 = (char *)(a1 + v60);
  uint64_t v62 = (char *)(a2 + v60);
  uint64_t v63 = sub_10000903C(&qword_1000A1050);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_10000903C(&qword_1000A1058);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    int v66 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
    v66(v61, v62, v87);
    v66(&v61[*(int *)(v63 + 36)], &v62[*(int *)(v63 + 36)], v87);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v67 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v68 = v67[5];
  uint64_t v69 = &v61[v68];
  uint64_t v70 = &v62[v68];
  uint64_t v71 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = v67[6];
  int v73 = &v61[v72];
  id v74 = &v62[v72];
  uint64_t v75 = sub_10008A4B0();
  uint64_t v76 = *(void *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    uint64_t v77 = sub_10000903C(&qword_1000A1060);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  *(_OWORD *)&v61[v67[7]] = *(_OWORD *)&v62[v67[7]];
  *(_OWORD *)&v61[v67[8]] = *(_OWORD *)&v62[v67[8]];
  uint64_t v78 = *(int *)(a3 + 20);
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  *(void *)uint64_t v79 = *(void *)v80;
  *(unsigned char *)(v79 + 8) = *(unsigned char *)(v80 + 8);
  return a1;
}

void *sub_10000C920(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v12 = v11[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10008A170();
  uint64_t v210 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v210 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  uint64_t v206 = a3;
  v205 = v16;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v210 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v210 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10000903C(&qword_1000A1038);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v210 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[11];
  long long v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *long long v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v11[12];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)sub_10008A340();
  uint64_t v204 = *((void *)v28 - 1);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v204 + 48);
  int v30 = v29(v26, 1, v28);
  int v31 = v29((uint64_t)v27, 1, v28);
  uint64_t v209 = v15;
  if (v30)
  {
    if (!v31)
    {
      long long v32 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v32;
      *(unsigned char *)(v26 + 32) = v27[32];
      *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
      *(void *)(v26 + 56) = *((void *)v27 + 7);
      *(unsigned char *)(v26 + 64) = v27[64];
      *(_OWORD *)(v26 + 113) = *(_OWORD *)(v27 + 113);
      *(_OWORD *)(v26 + 104) = *(_OWORD *)(v27 + 104);
      *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(unsigned char *)(v26 + 129) = v27[129];
      uint64_t v33 = v28[11];
      uint64_t v34 = v26 + v33;
      uint64_t v35 = &v27[v33];
      uint64_t v36 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)&v27[v28[12]];
      *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
      *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
      *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
      *(_OWORD *)(v26 + v28[16]) = *(_OWORD *)&v27[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v204 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    sub_10000BEBC(v26);
LABEL_12:
    uint64_t v37 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v123 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v123;
  swift_bridgeObjectRelease();
  uint64_t v124 = v27 + 16;
  int v125 = *(unsigned __int8 *)(v26 + 32);
  if (v125 != 255)
  {
    int v126 = v27[32];
    if (v126 != 255)
    {
      uint64_t v127 = *(void *)(v26 + 16);
      uint64_t v128 = *(void *)(v26 + 24);
      *(_OWORD *)(v26 + 16) = *v124;
      *(unsigned char *)(v26 + 32) = v126;
      sub_1000096D4(v127, v128, v125);
      goto LABEL_69;
    }
    sub_10000BE14(v26 + 16);
  }
  *(_OWORD *)(v26 + 16) = *v124;
  *(unsigned char *)(v26 + 32) = v27[32];
LABEL_69:
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  uint64_t v136 = v27 + 56;
  int v137 = *(unsigned __int8 *)(v26 + 64);
  if (v137 != 255)
  {
    int v138 = v27[64];
    if (v138 != 255)
    {
      v139 = *(void **)(v26 + 56);
      *(void *)(v26 + 56) = *v136;
      *(unsigned char *)(v26 + 64) = v138;
      sub_1000096EC(v139, v137);
      goto LABEL_79;
    }
    sub_10000BE68(v26 + 56);
  }
  *(void *)(v26 + 56) = *v136;
  *(unsigned char *)(v26 + 64) = v27[64];
LABEL_79:
  uint64_t v144 = v27 + 72;
  int v145 = *(unsigned __int8 *)(v26 + 80);
  if (v145 != 255)
  {
    int v146 = v27[80];
    if (v146 != 255)
    {
      long long v147 = *(void **)(v26 + 72);
      *(void *)(v26 + 72) = *v144;
      *(unsigned char *)(v26 + 80) = v146;
      sub_1000096EC(v147, v145);
      goto LABEL_89;
    }
    sub_10000BE68(v26 + 72);
  }
  *(void *)(v26 + 72) = *v144;
  *(unsigned char *)(v26 + 80) = v27[80];
LABEL_89:
  uint64_t v152 = v27 + 88;
  int v153 = *(unsigned __int8 *)(v26 + 96);
  if (v153 != 255)
  {
    int v154 = v27[96];
    if (v154 != 255)
    {
      id v155 = *(void **)(v26 + 88);
      *(void *)(v26 + 88) = *v152;
      *(unsigned char *)(v26 + 96) = v154;
      sub_1000096EC(v155, v153);
      goto LABEL_99;
    }
    sub_10000BE68(v26 + 88);
  }
  *(void *)(v26 + 88) = *v152;
  *(unsigned char *)(v26 + 96) = v27[96];
LABEL_99:
  v160 = v27 + 104;
  int v161 = *(unsigned __int8 *)(v26 + 112);
  if (v161 != 255)
  {
    int v162 = v27[112];
    if (v162 != 255)
    {
      id v163 = *(void **)(v26 + 104);
      *(void *)(v26 + 104) = *v160;
      *(unsigned char *)(v26 + 112) = v162;
      sub_1000096EC(v163, v161);
      goto LABEL_109;
    }
    sub_10000BE68(v26 + 104);
  }
  *(void *)(v26 + 104) = *v160;
  *(unsigned char *)(v26 + 112) = v27[112];
LABEL_109:
  uint64_t v168 = v27 + 120;
  int v169 = *(unsigned __int8 *)(v26 + 128);
  if (v169 == 255)
  {
LABEL_118:
    *(void *)(v26 + 120) = *v168;
    *(unsigned char *)(v26 + 128) = v27[128];
    goto LABEL_119;
  }
  int v170 = v27[128];
  if (v170 == 255)
  {
    sub_10000BE68(v26 + 120);
    goto LABEL_118;
  }
  uint64_t v171 = *(void **)(v26 + 120);
  *(void *)(v26 + 120) = *v168;
  *(unsigned char *)(v26 + 128) = v170;
  sub_1000096EC(v171, v169);
LABEL_119:
  *(unsigned char *)(v26 + 129) = v27[129];
  uint64_t v176 = v28[11];
  uint64_t v177 = v26 + v176;
  v178 = &v27[v176];
  uint64_t v179 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v179 - 8) + 40))(v177, v178, v179);
  uint64_t v180 = v28[12];
  char v181 = (void *)(v26 + v180);
  long long v182 = &v27[v180];
  uint64_t v184 = *(void *)v182;
  uint64_t v183 = *((void *)v182 + 1);
  *char v181 = v184;
  v181[1] = v183;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
  *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
  *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
  uint64_t v185 = v28[16];
  v186 = (void *)(v26 + v185);
  v187 = &v27[v185];
  uint64_t v189 = *(void *)v187;
  uint64_t v188 = *((void *)v187 + 1);
  void *v186 = v189;
  v186[1] = v188;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v38 = v11[13];
  uint64_t v39 = (uint64_t)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v29((uint64_t)a1 + v38, 1, v28);
  int v42 = v29((uint64_t)v40, 1, v28);
  if (v41)
  {
    if (!v42)
    {
      long long v43 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v43;
      *(unsigned char *)(v39 + 32) = v40[32];
      *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
      *(void *)(v39 + 56) = *((void *)v40 + 7);
      *(unsigned char *)(v39 + 64) = v40[64];
      *(_OWORD *)(v39 + 113) = *(_OWORD *)(v40 + 113);
      *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
      *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      *(unsigned char *)(v39 + 129) = v40[129];
      uint64_t v44 = v28[11];
      uint64_t v45 = v39 + v44;
      uint64_t v46 = &v40[v44];
      uint64_t v47 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      *(_OWORD *)(v39 + v28[12]) = *(_OWORD *)&v40[v28[12]];
      *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
      *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
      *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
      *(_OWORD *)(v39 + v28[16]) = *(_OWORD *)&v40[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v204 + 56))(v39, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    sub_10000BEBC(v39);
LABEL_18:
    uint64_t v48 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v129 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v129;
  swift_bridgeObjectRelease();
  uint64_t v130 = v40 + 16;
  int v131 = *(unsigned __int8 *)(v39 + 32);
  if (v131 != 255)
  {
    int v132 = v40[32];
    if (v132 != 255)
    {
      uint64_t v133 = *(void *)(v39 + 16);
      uint64_t v134 = *(void *)(v39 + 24);
      *(_OWORD *)(v39 + 16) = *v130;
      *(unsigned char *)(v39 + 32) = v132;
      sub_1000096D4(v133, v134, v131);
      goto LABEL_74;
    }
    sub_10000BE14(v39 + 16);
  }
  *(_OWORD *)(v39 + 16) = *v130;
  *(unsigned char *)(v39 + 32) = v40[32];
LABEL_74:
  *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
  uint64_t v140 = v40 + 56;
  int v141 = *(unsigned __int8 *)(v39 + 64);
  if (v141 != 255)
  {
    int v142 = v40[64];
    if (v142 != 255)
    {
      uint64_t v143 = *(void **)(v39 + 56);
      *(void *)(v39 + 56) = *v140;
      *(unsigned char *)(v39 + 64) = v142;
      sub_1000096EC(v143, v141);
      goto LABEL_84;
    }
    sub_10000BE68(v39 + 56);
  }
  *(void *)(v39 + 56) = *v140;
  *(unsigned char *)(v39 + 64) = v40[64];
LABEL_84:
  uint64_t v148 = v40 + 72;
  int v149 = *(unsigned __int8 *)(v39 + 80);
  if (v149 != 255)
  {
    int v150 = v40[80];
    if (v150 != 255)
    {
      id v151 = *(void **)(v39 + 72);
      *(void *)(v39 + 72) = *v148;
      *(unsigned char *)(v39 + 80) = v150;
      sub_1000096EC(v151, v149);
      goto LABEL_94;
    }
    sub_10000BE68(v39 + 72);
  }
  *(void *)(v39 + 72) = *v148;
  *(unsigned char *)(v39 + 80) = v40[80];
LABEL_94:
  char v156 = v40 + 88;
  int v157 = *(unsigned __int8 *)(v39 + 96);
  if (v157 != 255)
  {
    int v158 = v40[96];
    if (v158 != 255)
    {
      id v159 = *(void **)(v39 + 88);
      *(void *)(v39 + 88) = *v156;
      *(unsigned char *)(v39 + 96) = v158;
      sub_1000096EC(v159, v157);
      goto LABEL_104;
    }
    sub_10000BE68(v39 + 88);
  }
  *(void *)(v39 + 88) = *v156;
  *(unsigned char *)(v39 + 96) = v40[96];
LABEL_104:
  v164 = v40 + 104;
  int v165 = *(unsigned __int8 *)(v39 + 112);
  if (v165 != 255)
  {
    int v166 = v40[112];
    if (v166 != 255)
    {
      id v167 = *(void **)(v39 + 104);
      *(void *)(v39 + 104) = *v164;
      *(unsigned char *)(v39 + 112) = v166;
      sub_1000096EC(v167, v165);
      goto LABEL_114;
    }
    sub_10000BE68(v39 + 104);
  }
  *(void *)(v39 + 104) = *v164;
  *(unsigned char *)(v39 + 112) = v40[112];
LABEL_114:
  uint64_t v172 = v40 + 120;
  int v173 = *(unsigned __int8 *)(v39 + 128);
  if (v173 == 255)
  {
LABEL_121:
    *(void *)(v39 + 120) = *v172;
    *(unsigned char *)(v39 + 128) = v40[128];
    goto LABEL_122;
  }
  int v174 = v40[128];
  if (v174 == 255)
  {
    sub_10000BE68(v39 + 120);
    goto LABEL_121;
  }
  uint64_t v175 = *(void **)(v39 + 120);
  *(void *)(v39 + 120) = *v172;
  *(unsigned char *)(v39 + 128) = v174;
  sub_1000096EC(v175, v173);
LABEL_122:
  *(unsigned char *)(v39 + 129) = v40[129];
  uint64_t v190 = v28[11];
  uint64_t v191 = v39 + v190;
  v192 = &v40[v190];
  uint64_t v193 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v193 - 8) + 40))(v191, v192, v193);
  uint64_t v194 = v28[12];
  v195 = (void *)(v39 + v194);
  v196 = &v40[v194];
  uint64_t v198 = *(void *)v196;
  uint64_t v197 = *((void *)v196 + 1);
  void *v195 = v198;
  v195[1] = v197;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
  *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
  *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
  uint64_t v199 = v28[16];
  v200 = (void *)(v39 + v199);
  v201 = &v40[v199];
  uint64_t v203 = *(void *)v201;
  uint64_t v202 = *((void *)v201 + 1);
  void *v200 = v203;
  v200[1] = v202;
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v49 = v11[14];
  uint64_t v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

  uint64_t v51 = v11[15];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_10008A050();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    uint64_t v59 = v209;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v59 = v209;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_24:
    uint64_t v60 = sub_10000903C(&qword_1000A1048);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_25:
  *((unsigned char *)a1 + v11[16]) = *((unsigned char *)a2 + v11[16]);
  uint64_t v61 = v11[17];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = v11[18];
  uint64_t v65 = (char *)a1 + v64;
  int v66 = (char *)a2 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = v11[19];
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  int v70 = v205((char *)a1 + v67, 1, v59);
  int v71 = v205(v69, 1, v59);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v68, v69, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v210 + 56))(v68, 0, 1, v59);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v210 + 8))(v68, v59);
LABEL_30:
    uint64_t v72 = sub_10000903C(&qword_1000A1038);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v210 + 40))(v68, v69, v59);
LABEL_31:
  uint64_t v73 = v11[20];
  id v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  int v76 = v205((char *)a1 + v73, 1, v59);
  int v77 = v205(v75, 1, v59);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v74, v75, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v210 + 56))(v74, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v210 + 8))(v74, v59);
LABEL_36:
    uint64_t v78 = sub_10000903C(&qword_1000A1038);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v210 + 40))(v74, v75, v59);
LABEL_37:
  uint64_t v79 = v11[21];
  uint64_t v80 = (void *)((char *)a1 + v79);
  v81 = (void *)((char *)a2 + v79);
  if (*(void *)((char *)a1 + v79))
  {
    if (*v81)
    {
      *uint64_t v80 = *v81;
      swift_release();
      v80[1] = v81[1];
      swift_release();
      v80[2] = v81[2];
      swift_release();
      goto LABEL_42;
    }
    sub_10000BF18((uint64_t)v80);
  }
  *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
  v80[2] = v81[2];
LABEL_42:
  uint64_t v82 = v11[22];
  uint64_t v83 = (char *)a1 + v82;
  uint64_t v84 = (char *)a2 + v82;
  uint64_t v85 = sub_10000903C(&qword_1000A1050);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  v207 = a2;
  char v208 = a1;
  if (v88)
  {
    if (!v89)
    {
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v210 + 32);
      v90(v83, v84, v59);
      v90(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v89)
  {
    sub_10000BF6C((uint64_t)v83);
LABEL_47:
    uint64_t v91 = sub_10000903C(&qword_1000A1058);
    memcpy(v83, v84, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_48;
  }
  int v135 = *(void (**)(char *, char *, uint64_t))(v210 + 40);
  v135(v83, v84, v59);
  v135(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
LABEL_48:
  uint64_t v92 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v93 = v92[5];
  uint64_t v94 = &v83[v93];
  uint64_t v95 = &v84[v93];
  uint64_t v96 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  uint64_t v97 = v92[6];
  char v98 = &v83[v97];
  uint64_t v99 = &v84[v97];
  uint64_t v100 = sub_10008A4B0();
  uint64_t v101 = *(void *)(v100 - 8);
  int v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  int v103 = v102(v98, 1, v100);
  int v104 = v102(v99, 1, v100);
  if (!v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 40))(v98, v99, v100);
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v100);
    goto LABEL_53;
  }
  if (v104)
  {
LABEL_53:
    uint64_t v105 = sub_10000903C(&qword_1000A1060);
    memcpy(v98, v99, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v98, v99, v100);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
LABEL_54:
  uint64_t v106 = v92[7];
  char v107 = &v83[v106];
  id v108 = &v84[v106];
  uint64_t v110 = *(void *)v108;
  uint64_t v109 = *((void *)v108 + 1);
  *(void *)char v107 = v110;
  *((void *)v107 + 1) = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v92[8];
  v112 = &v83[v111];
  uint64_t v113 = &v84[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  uint64_t v116 = *(int *)(v206 + 20);
  uint64_t v117 = (char *)v208 + v116;
  uint64_t v118 = (char *)v207 + v116;
  uint64_t v119 = *(void *)v118;
  LOBYTE(v118) = v118[8];
  uint64_t v120 = *(void *)v117;
  char v121 = v117[8];
  *(void *)uint64_t v117 = v119;
  v117[8] = (char)v118;
  sub_100009700(v120, v121);
  return v208;
}

uint64_t sub_10000DB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000DB54);
}

uint64_t sub_10000DB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10000DC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000DC28);
}

uint64_t sub_10000DC28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for PlayButtonSmall()
{
  uint64_t result = qword_1000A10C0;
  if (!qword_1000A10C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000DD34()
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000DDC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000DDE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v2 = sub_10008A740();
  uint64_t v3 = *(void *)(v2 - 8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000903C(&qword_1000A1058);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008A750();
  uint64_t v9 = *(void *)(v8 - 8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A10F8);
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v13 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v53 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v54 = (uint64_t)v49 - v15;
  uint64_t v16 = type metadata accessor for UpNextEntry.Episode(0);
  int v17 = (uint64_t *)(v1 + *(int *)(v16 + 84));
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v51 = v8;
    uint64_t v52 = v12;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = *(int *)(v16 + 88);
    uint64_t v50 = v1;
    uint64_t v22 = v1 + v21;
    sub_10000E2B4(v22, (uint64_t)v7);
    uint64_t v23 = type metadata accessor for WidgetPredictedPlayState();
    uint64_t v24 = v2;
    uint64_t v25 = v11;
    uint64_t v26 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v22 + *(int *)(v23 + 20), v24);
    uint64_t v57 = v18;
    uint64_t v58 = v19;
    uint64_t v59 = v20;
    v49[1] = *(void *)(v22 + *(int *)(v26 + 28));
    sub_10000E31C(v18);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10008B130();
    sub_10000E368();
    sub_10008A720();
    char v27 = sub_10008AC10();
    uint64_t v28 = v50 + *(int *)(type metadata accessor for PlayButtonSmall() + 20);
    uint64_t v29 = *(void *)v28;
    char v30 = *(unsigned char *)(v28 + 8);
    sub_1000090AC(*(void *)v28, v30);
    sub_10006A9AC(v29, v30);
    sub_100009700(v29, v30);
    sub_10008A630();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v39 = (uint64_t)v53;
    uint64_t v40 = v51;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v53, v25, v51);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v41 = v52;
    uint64_t v42 = v39 + *(int *)(v52 + 36);
    *(unsigned char *)uint64_t v42 = v27;
    *(void *)(v42 + 8) = v32;
    *(void *)(v42 + 16) = v34;
    *(void *)(v42 + 24) = v36;
    *(void *)(v42 + 32) = v38;
    *(unsigned char *)(v42 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v25, v40);
    uint64_t v43 = v54;
    sub_10000E3BC(v39, v54);
    uint64_t v44 = v43;
    uint64_t v45 = v55;
    sub_10000E3BC(v44, v55);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v45, 0, 1, v41);
  }
  else
  {
    uint64_t v47 = v55;
    uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
    return v48(v47, 1, 1, v12);
  }
}

uint64_t sub_10000E294()
{
  return sub_10008AE90();
}

uint64_t sub_10000E2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000E31C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_10000E368()
{
  unint64_t result = qword_1000A1100;
  if (!qword_1000A1100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1100);
  }
  return result;
}

uint64_t sub_10000E3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A10F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10000E428()
{
  unint64_t result = qword_1000A1108;
  if (!qword_1000A1108)
  {
    sub_10000E49C(&qword_1000A1110);
    sub_10000E4E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1108);
  }
  return result;
}

uint64_t sub_10000E49C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10000E4E4()
{
  unint64_t result = qword_1000A1118;
  if (!qword_1000A1118)
  {
    sub_10000E49C(&qword_1000A10F8);
    sub_10000E560();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1118);
  }
  return result;
}

unint64_t sub_10000E560()
{
  unint64_t result = qword_1000A1120;
  if (!qword_1000A1120)
  {
    sub_10008A750();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1120);
  }
  return result;
}

void *sub_10000E5B8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    a1[10] = a2[10];
    id v163 = (int *)type metadata accessor for UpNextEntry.Episode(0);
    uint64_t v11 = v163[10];
    __dst = (char *)a1 + v11;
    int v158 = a1;
    id v159 = a2;
    uint64_t v12 = (char *)a2 + v11;
    uint64_t v13 = sub_10008A170();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v162 = v15;
    uint64_t v160 = v16;
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000903C(&qword_1000A1038);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v20 = v163;
    uint64_t v21 = v163[11];
    uint64_t v19 = v158;
    uint64_t v22 = (void *)((char *)v158 + v21);
    uint64_t v23 = (void *)((char *)v159 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v163[12];
    uint64_t v26 = (void *)((char *)v158 + v25);
    char v27 = (void *)((char *)v159 + v25);
    uint64_t v28 = (int *)sub_10008A340();
    __dsta = (void *)*((void *)v28 - 1);
    uint64_t v29 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
    swift_bridgeObjectRetain();
    if (v29(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1040);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v27[1];
      void *v26 = *v27;
      v26[1] = v31;
      int v32 = *((unsigned __int8 *)v27 + 32);
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
        *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
      }
      else
      {
        uint64_t v33 = v27[2];
        uint64_t v34 = v27[3];
        sub_100009080(v33, v34, v32);
        v26[2] = v33;
        v26[3] = v34;
        *((unsigned char *)v26 + 32) = v32;
      }
      *(_OWORD *)(v26 + 5) = *(_OWORD *)(v27 + 5);
      uint64_t v35 = (id *)(v27 + 7);
      int v36 = *((unsigned __int8 *)v27 + 64);
      if (v36 == 255)
      {
        v26[7] = *v35;
        *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
      }
      else
      {
        id v37 = *v35;
        sub_100009098(*v35, *((unsigned char *)v27 + 64));
        v26[7] = v37;
        *((unsigned char *)v26 + 64) = v36;
      }
      uint64_t v38 = (id *)(v27 + 9);
      int v39 = *((unsigned __int8 *)v27 + 80);
      if (v39 == 255)
      {
        v26[9] = *v38;
        *((unsigned char *)v26 + 80) = *((unsigned char *)v27 + 80);
      }
      else
      {
        id v40 = *v38;
        sub_100009098(*v38, *((unsigned char *)v27 + 80));
        v26[9] = v40;
        *((unsigned char *)v26 + 80) = v39;
      }
      uint64_t v41 = (id *)(v27 + 11);
      int v42 = *((unsigned __int8 *)v27 + 96);
      if (v42 == 255)
      {
        v26[11] = *v41;
        *((unsigned char *)v26 + 96) = *((unsigned char *)v27 + 96);
      }
      else
      {
        id v43 = *v41;
        sub_100009098(*v41, *((unsigned char *)v27 + 96));
        v26[11] = v43;
        *((unsigned char *)v26 + 96) = v42;
      }
      uint64_t v44 = (id *)(v27 + 13);
      int v45 = *((unsigned __int8 *)v27 + 112);
      if (v45 == 255)
      {
        v26[13] = *v44;
        *((unsigned char *)v26 + 112) = *((unsigned char *)v27 + 112);
      }
      else
      {
        id v46 = *v44;
        sub_100009098(*v44, *((unsigned char *)v27 + 112));
        v26[13] = v46;
        *((unsigned char *)v26 + 112) = v45;
      }
      uint64_t v47 = (id *)(v27 + 15);
      int v48 = *((unsigned __int8 *)v27 + 128);
      if (v48 == 255)
      {
        v26[15] = *v47;
        *((unsigned char *)v26 + 128) = *((unsigned char *)v27 + 128);
      }
      else
      {
        id v49 = *v47;
        sub_100009098(*v47, *((unsigned char *)v27 + 128));
        v26[15] = v49;
        *((unsigned char *)v26 + 128) = v48;
      }
      uint64_t v20 = v163;
      *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
      uint64_t v50 = v28[11];
      uint64_t v51 = (char *)v26 + v50;
      uint64_t v52 = (char *)v27 + v50;
      uint64_t v53 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v28[12];
      uint64_t v55 = (void *)((char *)v26 + v54);
      uint64_t v56 = (void *)((char *)v27 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      *((unsigned char *)v26 + v28[13]) = *((unsigned char *)v27 + v28[13]);
      *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
      *((unsigned char *)v26 + v28[15]) = *((unsigned char *)v27 + v28[15]);
      uint64_t v58 = v28[16];
      uint64_t v59 = (void *)((char *)v26 + v58);
      uint64_t v60 = (void *)((char *)v27 + v58);
      uint64_t v61 = v60[1];
      void *v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(v26, 0, 1, v28);
    }
    uint64_t v63 = v20[13];
    uint64_t v64 = (void *)((char *)v158 + v63);
    uint64_t v65 = (void *)((char *)v159 + v63);
    if (v29((void *)((char *)v159 + v63), 1, v28))
    {
      uint64_t v66 = sub_10000903C(&qword_1000A1040);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v14;
    }
    else
    {
      uint64_t v68 = v65[1];
      void *v64 = *v65;
      v64[1] = v68;
      int v69 = *((unsigned __int8 *)v65 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = v14;
      if (v69 == 255)
      {
        *((_OWORD *)v64 + 1) = *((_OWORD *)v65 + 1);
        *((unsigned char *)v64 + 32) = *((unsigned char *)v65 + 32);
      }
      else
      {
        uint64_t v70 = v65[2];
        uint64_t v71 = v65[3];
        sub_100009080(v70, v71, v69);
        v64[2] = v70;
        v64[3] = v71;
        *((unsigned char *)v64 + 32) = v69;
      }
      *(_OWORD *)(v64 + 5) = *(_OWORD *)(v65 + 5);
      uint64_t v72 = (id *)(v65 + 7);
      int v73 = *((unsigned __int8 *)v65 + 64);
      if (v73 == 255)
      {
        v64[7] = *v72;
        *((unsigned char *)v64 + 64) = *((unsigned char *)v65 + 64);
      }
      else
      {
        id v74 = *v72;
        sub_100009098(*v72, *((unsigned char *)v65 + 64));
        v64[7] = v74;
        *((unsigned char *)v64 + 64) = v73;
      }
      uint64_t v75 = (id *)(v65 + 9);
      int v76 = *((unsigned __int8 *)v65 + 80);
      if (v76 == 255)
      {
        v64[9] = *v75;
        *((unsigned char *)v64 + 80) = *((unsigned char *)v65 + 80);
      }
      else
      {
        id v77 = *v75;
        sub_100009098(*v75, *((unsigned char *)v65 + 80));
        v64[9] = v77;
        *((unsigned char *)v64 + 80) = v76;
      }
      uint64_t v78 = (id *)(v65 + 11);
      int v79 = *((unsigned __int8 *)v65 + 96);
      if (v79 == 255)
      {
        v64[11] = *v78;
        *((unsigned char *)v64 + 96) = *((unsigned char *)v65 + 96);
      }
      else
      {
        id v80 = *v78;
        sub_100009098(*v78, *((unsigned char *)v65 + 96));
        v64[11] = v80;
        *((unsigned char *)v64 + 96) = v79;
      }
      v81 = (id *)(v65 + 13);
      int v82 = *((unsigned __int8 *)v65 + 112);
      if (v82 == 255)
      {
        v64[13] = *v81;
        *((unsigned char *)v64 + 112) = *((unsigned char *)v65 + 112);
      }
      else
      {
        id v83 = *v81;
        sub_100009098(*v81, *((unsigned char *)v65 + 112));
        v64[13] = v83;
        *((unsigned char *)v64 + 112) = v82;
      }
      uint64_t v84 = (id *)(v65 + 15);
      int v85 = *((unsigned __int8 *)v65 + 128);
      if (v85 == 255)
      {
        v64[15] = *v84;
        *((unsigned char *)v64 + 128) = *((unsigned char *)v65 + 128);
      }
      else
      {
        id v86 = *v84;
        sub_100009098(*v84, *((unsigned char *)v65 + 128));
        v64[15] = v86;
        *((unsigned char *)v64 + 128) = v85;
      }
      uint64_t v20 = v163;
      *((unsigned char *)v64 + 129) = *((unsigned char *)v65 + 129);
      uint64_t v87 = v28[11];
      int v88 = (char *)v64 + v87;
      int v89 = (char *)v65 + v87;
      uint64_t v90 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      uint64_t v91 = v28[12];
      uint64_t v92 = (void *)((char *)v64 + v91);
      uint64_t v93 = (void *)((char *)v65 + v91);
      uint64_t v94 = v93[1];
      void *v92 = *v93;
      v92[1] = v94;
      *((unsigned char *)v64 + v28[13]) = *((unsigned char *)v65 + v28[13]);
      *((unsigned char *)v64 + v28[14]) = *((unsigned char *)v65 + v28[14]);
      *((unsigned char *)v64 + v28[15]) = *((unsigned char *)v65 + v28[15]);
      uint64_t v95 = v28[16];
      uint64_t v96 = (void *)((char *)v64 + v95);
      uint64_t v97 = (void *)((char *)v65 + v95);
      uint64_t v98 = v97[1];
      void *v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99(v64, 0, 1, v28);
    }
    uint64_t v100 = v20[14];
    uint64_t v101 = *(void **)((char *)v159 + v100);
    *(void *)((char *)v158 + v100) = v101;
    uint64_t v102 = v20[15];
    int v103 = (char *)v158 + v102;
    int v104 = (char *)v159 + v102;
    uint64_t v105 = sub_10008A050();
    uint64_t v106 = *(void *)(v105 - 8);
    char v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
    id v108 = v101;
    if (v107(v104, 1, v105))
    {
      uint64_t v109 = sub_10000903C(&qword_1000A1048);
      memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
    }
    *((unsigned char *)v158 + v163[16]) = *((unsigned char *)v159 + v163[16]);
    uint64_t v110 = v163[17];
    uint64_t v111 = (char *)v158 + v110;
    v112 = (char *)v159 + v110;
    *(void *)uint64_t v111 = *(void *)v112;
    v111[8] = v112[8];
    uint64_t v113 = v163[18];
    uint64_t v114 = (char *)v158 + v113;
    uint64_t v115 = (char *)v159 + v113;
    *(void *)uint64_t v114 = *(void *)v115;
    v114[8] = v115[8];
    uint64_t v116 = v163[19];
    uint64_t v117 = (char *)v158 + v116;
    uint64_t v118 = (char *)v159 + v116;
    if (v162((char *)v159 + v116, 1, v160))
    {
      uint64_t v119 = sub_10000903C(&qword_1000A1038);
      memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v117, v118, v160);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v117, 0, 1, v160);
    }
    uint64_t v120 = v163[20];
    char v121 = (char *)v158 + v120;
    uint64_t v122 = (char *)v159 + v120;
    if (v162((char *)v159 + v120, 1, v160))
    {
      uint64_t v123 = sub_10000903C(&qword_1000A1038);
      memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v121, v122, v160);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v121, 0, 1, v160);
    }
    uint64_t v124 = v163[21];
    int v125 = (void *)((char *)v158 + v124);
    int v126 = (void *)((char *)v159 + v124);
    if (*v126)
    {
      uint64_t v127 = v126[1];
      uint64_t v128 = v126[2];
      void *v125 = *v126;
      v125[1] = v127;
      v125[2] = v128;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)int v125 = *(_OWORD *)v126;
      v125[2] = v126[2];
    }
    uint64_t v129 = v163[22];
    uint64_t v130 = (char *)v158 + v129;
    int v131 = (char *)v159 + v129;
    uint64_t v132 = sub_10000903C(&qword_1000A1050);
    uint64_t v133 = *(void *)(v132 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
    {
      uint64_t v134 = sub_10000903C(&qword_1000A1058);
      memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      int v135 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v135(v130, v131, v160);
      v135(&v130[*(int *)(v132 + 36)], &v131[*(int *)(v132 + 36)], v160);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
    }
    uint64_t v136 = (int *)type metadata accessor for WidgetPredictedPlayState();
    uint64_t v137 = v136[5];
    int v138 = &v130[v137];
    v139 = &v131[v137];
    uint64_t v140 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
    uint64_t v141 = v136[6];
    int v142 = &v130[v141];
    uint64_t v143 = &v131[v141];
    uint64_t v144 = sub_10008A4B0();
    uint64_t v145 = *(void *)(v144 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
    {
      uint64_t v146 = sub_10000903C(&qword_1000A1060);
      memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v142, v143, v144);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
    }
    uint64_t v147 = v136[7];
    uint64_t v148 = &v130[v147];
    int v149 = &v131[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *(void *)uint64_t v148 = *(void *)v149;
    *((void *)v148 + 1) = v150;
    uint64_t v151 = v136[8];
    uint64_t v152 = &v130[v151];
    int v153 = &v131[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)uint64_t v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    *(void *)((char *)v158 + *(int *)(a3 + 20)) = *(void *)((char *)v159 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v19;
}

uint64_t sub_10000F2D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v3 = a1 + v2[10];
  uint64_t v4 = sub_10008A170();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v42 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + v2[12];
  uint64_t v8 = sub_10008A340();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    int v10 = *(unsigned __int8 *)(v7 + 32);
    if (v10 != 255) {
      sub_1000096D4(*(void *)(v7 + 16), *(void *)(v7 + 24), v10);
    }
    int v11 = *(unsigned __int8 *)(v7 + 64);
    if (v11 != 255) {
      sub_1000096EC(*(id *)(v7 + 56), v11);
    }
    int v12 = *(unsigned __int8 *)(v7 + 80);
    if (v12 != 255) {
      sub_1000096EC(*(id *)(v7 + 72), v12);
    }
    int v13 = *(unsigned __int8 *)(v7 + 96);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v7 + 88), v13);
    }
    int v14 = *(unsigned __int8 *)(v7 + 112);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v7 + 104), v14);
    }
    int v15 = *(unsigned __int8 *)(v7 + 128);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v7 + 120), v15);
    }
    uint64_t v16 = v7 + *(int *)(v8 + 44);
    uint64_t v17 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = a1 + v2[13];
  if (!v9(v18, 1, v8))
  {
    swift_bridgeObjectRelease();
    int v19 = *(unsigned __int8 *)(v18 + 32);
    if (v19 != 255) {
      sub_1000096D4(*(void *)(v18 + 16), *(void *)(v18 + 24), v19);
    }
    int v20 = *(unsigned __int8 *)(v18 + 64);
    if (v20 != 255) {
      sub_1000096EC(*(id *)(v18 + 56), v20);
    }
    int v21 = *(unsigned __int8 *)(v18 + 80);
    if (v21 != 255) {
      sub_1000096EC(*(id *)(v18 + 72), v21);
    }
    int v22 = *(unsigned __int8 *)(v18 + 96);
    if (v22 != 255) {
      sub_1000096EC(*(id *)(v18 + 88), v22);
    }
    int v23 = *(unsigned __int8 *)(v18 + 112);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v18 + 104), v23);
    }
    int v24 = *(unsigned __int8 *)(v18 + 128);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v18 + 120), v24);
    }
    uint64_t v25 = v18 + *(int *)(v8 + 44);
    uint64_t v26 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v27 = a1 + v2[15];
  uint64_t v28 = sub_10008A050();
  uint64_t v29 = *(void *)(v28 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  uint64_t v30 = a1 + v2[19];
  if (!v6(v30, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v30, v4);
  }
  uint64_t v31 = a1 + v2[20];
  if (!v6(v31, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v31, v4);
  }
  if (*(void *)(a1 + v2[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v32 = a1 + v2[22];
  uint64_t v33 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33))
  {
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    v34(v32, v4);
    v34(v32 + *(int *)(v33 + 36), v4);
  }
  uint64_t v35 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v36 = v32 + *(int *)(v35 + 20);
  uint64_t v37 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
  uint64_t v38 = v32 + *(int *)(v35 + 24);
  uint64_t v39 = sub_10008A4B0();
  uint64_t v40 = *(void *)(v39 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39)) {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_10000F8C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  id v159 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v10 = v159[10];
  __dst = (char *)a1 + v10;
  id v155 = a1;
  char v156 = a2;
  int v11 = (char *)a2 + v10;
  uint64_t v12 = sub_10008A170();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v157 = v15;
  if (v14(v11, 1, v15))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v17 = v159;
  uint64_t v18 = v159[11];
  int v19 = (void *)((char *)v155 + v18);
  int v20 = (void *)((char *)v156 + v18);
  uint64_t v21 = v20[1];
  *int v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v159[12];
  int v23 = (void *)((char *)v155 + v22);
  int v24 = (void *)((char *)v156 + v22);
  uint64_t v25 = (int *)sub_10008A340();
  __dsta = (void *)*((void *)v25 - 1);
  uint64_t v26 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    uint64_t v27 = sub_10000903C(&qword_1000A1040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v24[1];
    void *v23 = *v24;
    v23[1] = v28;
    int v29 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
    }
    else
    {
      uint64_t v30 = v24[2];
      uint64_t v31 = v24[3];
      sub_100009080(v30, v31, v29);
      v23[2] = v30;
      v23[3] = v31;
      *((unsigned char *)v23 + 32) = v29;
    }
    *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
    uint64_t v32 = (id *)(v24 + 7);
    int v33 = *((unsigned __int8 *)v24 + 64);
    if (v33 == 255)
    {
      v23[7] = *v32;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
    }
    else
    {
      id v34 = *v32;
      sub_100009098(*v32, *((unsigned char *)v24 + 64));
      v23[7] = v34;
      *((unsigned char *)v23 + 64) = v33;
    }
    uint64_t v35 = (id *)(v24 + 9);
    int v36 = *((unsigned __int8 *)v24 + 80);
    if (v36 == 255)
    {
      v23[9] = *v35;
      *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
    }
    else
    {
      id v37 = *v35;
      sub_100009098(*v35, *((unsigned char *)v24 + 80));
      v23[9] = v37;
      *((unsigned char *)v23 + 80) = v36;
    }
    uint64_t v38 = (id *)(v24 + 11);
    int v39 = *((unsigned __int8 *)v24 + 96);
    if (v39 == 255)
    {
      v23[11] = *v38;
      *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
    }
    else
    {
      id v40 = *v38;
      sub_100009098(*v38, *((unsigned char *)v24 + 96));
      v23[11] = v40;
      *((unsigned char *)v23 + 96) = v39;
    }
    uint64_t v41 = (id *)(v24 + 13);
    int v42 = *((unsigned __int8 *)v24 + 112);
    if (v42 == 255)
    {
      v23[13] = *v41;
      *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_100009098(*v41, *((unsigned char *)v24 + 112));
      v23[13] = v43;
      *((unsigned char *)v23 + 112) = v42;
    }
    uint64_t v44 = (id *)(v24 + 15);
    int v45 = *((unsigned __int8 *)v24 + 128);
    if (v45 == 255)
    {
      v23[15] = *v44;
      *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_100009098(*v44, *((unsigned char *)v24 + 128));
      v23[15] = v46;
      *((unsigned char *)v23 + 128) = v45;
    }
    uint64_t v17 = v159;
    *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
    uint64_t v47 = v25[11];
    int v48 = (char *)v23 + v47;
    id v49 = (char *)v24 + v47;
    uint64_t v50 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v25[12];
    uint64_t v52 = (void *)((char *)v23 + v51);
    uint64_t v53 = (void *)((char *)v24 + v51);
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
    *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
    *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
    uint64_t v55 = v25[16];
    uint64_t v56 = (void *)((char *)v23 + v55);
    uint64_t v57 = (void *)((char *)v24 + v55);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v23, 0, 1, v25);
  }
  uint64_t v60 = v17[13];
  uint64_t v61 = (void *)((char *)v155 + v60);
  uint64_t v62 = (void *)((char *)v156 + v60);
  if (v26((void *)((char *)v156 + v60), 1, v25))
  {
    uint64_t v63 = sub_10000903C(&qword_1000A1040);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    uint64_t v64 = v13;
  }
  else
  {
    uint64_t v65 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v65;
    int v66 = *((unsigned __int8 *)v62 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = v13;
    if (v66 == 255)
    {
      *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
      *((unsigned char *)v61 + 32) = *((unsigned char *)v62 + 32);
    }
    else
    {
      uint64_t v67 = v62[2];
      uint64_t v68 = v62[3];
      sub_100009080(v67, v68, v66);
      v61[2] = v67;
      v61[3] = v68;
      *((unsigned char *)v61 + 32) = v66;
    }
    *(_OWORD *)(v61 + 5) = *(_OWORD *)(v62 + 5);
    int v69 = (id *)(v62 + 7);
    int v70 = *((unsigned __int8 *)v62 + 64);
    if (v70 == 255)
    {
      v61[7] = *v69;
      *((unsigned char *)v61 + 64) = *((unsigned char *)v62 + 64);
    }
    else
    {
      id v71 = *v69;
      sub_100009098(*v69, *((unsigned char *)v62 + 64));
      v61[7] = v71;
      *((unsigned char *)v61 + 64) = v70;
    }
    uint64_t v72 = (id *)(v62 + 9);
    int v73 = *((unsigned __int8 *)v62 + 80);
    if (v73 == 255)
    {
      v61[9] = *v72;
      *((unsigned char *)v61 + 80) = *((unsigned char *)v62 + 80);
    }
    else
    {
      id v74 = *v72;
      sub_100009098(*v72, *((unsigned char *)v62 + 80));
      v61[9] = v74;
      *((unsigned char *)v61 + 80) = v73;
    }
    uint64_t v75 = (id *)(v62 + 11);
    int v76 = *((unsigned __int8 *)v62 + 96);
    if (v76 == 255)
    {
      v61[11] = *v75;
      *((unsigned char *)v61 + 96) = *((unsigned char *)v62 + 96);
    }
    else
    {
      id v77 = *v75;
      sub_100009098(*v75, *((unsigned char *)v62 + 96));
      v61[11] = v77;
      *((unsigned char *)v61 + 96) = v76;
    }
    uint64_t v78 = (id *)(v62 + 13);
    int v79 = *((unsigned __int8 *)v62 + 112);
    if (v79 == 255)
    {
      v61[13] = *v78;
      *((unsigned char *)v61 + 112) = *((unsigned char *)v62 + 112);
    }
    else
    {
      id v80 = *v78;
      sub_100009098(*v78, *((unsigned char *)v62 + 112));
      v61[13] = v80;
      *((unsigned char *)v61 + 112) = v79;
    }
    v81 = (id *)(v62 + 15);
    int v82 = *((unsigned __int8 *)v62 + 128);
    if (v82 == 255)
    {
      v61[15] = *v81;
      *((unsigned char *)v61 + 128) = *((unsigned char *)v62 + 128);
    }
    else
    {
      id v83 = *v81;
      sub_100009098(*v81, *((unsigned char *)v62 + 128));
      v61[15] = v83;
      *((unsigned char *)v61 + 128) = v82;
    }
    uint64_t v17 = v159;
    *((unsigned char *)v61 + 129) = *((unsigned char *)v62 + 129);
    uint64_t v84 = v25[11];
    int v85 = (char *)v61 + v84;
    id v86 = (char *)v62 + v84;
    uint64_t v87 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    uint64_t v88 = v25[12];
    int v89 = (void *)((char *)v61 + v88);
    uint64_t v90 = (void *)((char *)v62 + v88);
    uint64_t v91 = v90[1];
    void *v89 = *v90;
    v89[1] = v91;
    *((unsigned char *)v61 + v25[13]) = *((unsigned char *)v62 + v25[13]);
    *((unsigned char *)v61 + v25[14]) = *((unsigned char *)v62 + v25[14]);
    *((unsigned char *)v61 + v25[15]) = *((unsigned char *)v62 + v25[15]);
    uint64_t v92 = v25[16];
    uint64_t v93 = (void *)((char *)v61 + v92);
    uint64_t v94 = (void *)((char *)v62 + v92);
    uint64_t v95 = v94[1];
    void *v93 = *v94;
    v93[1] = v95;
    uint64_t v96 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96(v61, 0, 1, v25);
  }
  uint64_t v97 = v17[14];
  uint64_t v98 = *(void **)((char *)v156 + v97);
  *(void *)((char *)v155 + v97) = v98;
  uint64_t v99 = v17[15];
  uint64_t v100 = (char *)v155 + v99;
  uint64_t v101 = (char *)v156 + v99;
  uint64_t v102 = sub_10008A050();
  uint64_t v103 = *(void *)(v102 - 8);
  int v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
  id v105 = v98;
  if (v104(v101, 1, v102))
  {
    uint64_t v106 = sub_10000903C(&qword_1000A1048);
    memcpy(v100, v101, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  *((unsigned char *)v155 + v159[16]) = *((unsigned char *)v156 + v159[16]);
  uint64_t v107 = v159[17];
  id v108 = (char *)v155 + v107;
  uint64_t v109 = (char *)v156 + v107;
  *(void *)id v108 = *(void *)v109;
  v108[8] = v109[8];
  uint64_t v110 = v159[18];
  uint64_t v111 = (char *)v155 + v110;
  v112 = (char *)v156 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  v111[8] = v112[8];
  uint64_t v113 = v159[19];
  uint64_t v114 = (char *)v155 + v113;
  uint64_t v115 = (char *)v156 + v113;
  if (v14((char *)v156 + v113, 1, v157))
  {
    uint64_t v116 = sub_10000903C(&qword_1000A1038);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v114, v115, v157);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v114, 0, 1, v157);
  }
  uint64_t v117 = v159[20];
  uint64_t v118 = (char *)v155 + v117;
  uint64_t v119 = (char *)v156 + v117;
  if (v14((char *)v156 + v117, 1, v157))
  {
    uint64_t v120 = sub_10000903C(&qword_1000A1038);
    memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v118, v119, v157);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v157);
  }
  uint64_t v121 = v159[21];
  uint64_t v122 = (void *)((char *)v155 + v121);
  uint64_t v123 = (void *)((char *)v156 + v121);
  if (*v123)
  {
    uint64_t v124 = v123[1];
    uint64_t v125 = v123[2];
    void *v122 = *v123;
    v122[1] = v124;
    v122[2] = v125;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    v122[2] = v123[2];
  }
  uint64_t v126 = v159[22];
  uint64_t v127 = (char *)v155 + v126;
  uint64_t v128 = (char *)v156 + v126;
  uint64_t v129 = sub_10000903C(&qword_1000A1050);
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = sub_10000903C(&qword_1000A1058);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v132(v127, v128, v157);
    v132(&v127[*(int *)(v129 + 36)], &v128[*(int *)(v129 + 36)], v157);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  uint64_t v133 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v134 = v133[5];
  int v135 = &v127[v134];
  uint64_t v136 = &v128[v134];
  uint64_t v137 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
  uint64_t v138 = v133[6];
  v139 = &v127[v138];
  uint64_t v140 = &v128[v138];
  uint64_t v141 = sub_10008A4B0();
  uint64_t v142 = *(void *)(v141 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
  {
    uint64_t v143 = sub_10000903C(&qword_1000A1060);
    memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  }
  uint64_t v144 = v133[7];
  uint64_t v145 = &v127[v144];
  uint64_t v146 = &v128[v144];
  uint64_t v147 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v147;
  uint64_t v148 = v133[8];
  int v149 = &v127[v148];
  uint64_t v150 = &v128[v148];
  uint64_t v151 = *((void *)v150 + 1);
  *(void *)int v149 = *(void *)v150;
  *((void *)v149 + 1) = v151;
  *(void *)((char *)v155 + *(int *)(a3 + 20)) = *(void *)((char *)v156 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v155;
}

void *sub_100010594(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008A170();
  uint64_t v314 = *(void *)(v10 - 8);
  int v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v314 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  uint64_t v311 = a3;
  char v309 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v314 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v314 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = v6[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[12];
  uint64_t v19 = (uint64_t)a1 + v18;
  int v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_10008A340();
  uint64_t v308 = *((void *)v21 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v308 + 48);
  int v23 = v22(v19, 1, v21);
  int v24 = v22((uint64_t)v20, 1, v21);
  uint64_t v310 = v10;
  if (!v23)
  {
    if (!v24)
    {
      v307 = v22;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = (long long *)(v19 + 16);
      uint64_t v30 = (long long *)(v20 + 16);
      int v31 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v31 == 255)
        {
          long long v72 = *v30;
          *(unsigned char *)(v19 + 32) = v20[32];
          *int v29 = v72;
        }
        else
        {
          uint64_t v69 = *((void *)v20 + 2);
          uint64_t v70 = *((void *)v20 + 3);
          sub_100009080(v69, v70, v20[32]);
          *(void *)(v19 + 16) = v69;
          *(void *)(v19 + 24) = v70;
          *(unsigned char *)(v19 + 32) = v31;
        }
      }
      else if (v31 == 255)
      {
        sub_10000BE14(v19 + 16);
        char v71 = v20[32];
        *int v29 = *v30;
        *(unsigned char *)(v19 + 32) = v71;
      }
      else
      {
        uint64_t v33 = *((void *)v20 + 2);
        uint64_t v32 = *((void *)v20 + 3);
        sub_100009080(v33, v32, v20[32]);
        uint64_t v34 = *(void *)(v19 + 16);
        uint64_t v35 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v33;
        *(void *)(v19 + 24) = v32;
        unsigned __int8 v36 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v31;
        sub_1000096D4(v34, v35, v36);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v73 = (void **)(v19 + 56);
      id v74 = (void **)(v20 + 56);
      int v75 = v20[64];
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v75 == 255)
        {
          v81 = *v74;
          *(unsigned char *)(v19 + 64) = v20[64];
          *int v73 = v81;
        }
        else
        {
          int v79 = *v74;
          sub_100009098(v79, v20[64]);
          *(void *)(v19 + 56) = v79;
          *(unsigned char *)(v19 + 64) = v75;
        }
      }
      else if (v75 == 255)
      {
        sub_10000BE68(v19 + 56);
        char v80 = v20[64];
        *int v73 = *v74;
        *(unsigned char *)(v19 + 64) = v80;
      }
      else
      {
        int v76 = *v74;
        sub_100009098(v76, v20[64]);
        id v77 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v76;
        char v78 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v75;
        sub_1000096EC(v77, v78);
      }
      int v82 = (void **)(v19 + 72);
      id v83 = (void **)(v20 + 72);
      int v84 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v84 == 255)
        {
          uint64_t v90 = *v83;
          *(unsigned char *)(v19 + 80) = v20[80];
          *int v82 = v90;
        }
        else
        {
          uint64_t v88 = *v83;
          sub_100009098(v88, v20[80]);
          *(void *)(v19 + 72) = v88;
          *(unsigned char *)(v19 + 80) = v84;
        }
      }
      else if (v84 == 255)
      {
        sub_10000BE68(v19 + 72);
        char v89 = v20[80];
        *int v82 = *v83;
        *(unsigned char *)(v19 + 80) = v89;
      }
      else
      {
        int v85 = *v83;
        sub_100009098(v85, v20[80]);
        id v86 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v85;
        char v87 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v84;
        sub_1000096EC(v86, v87);
      }
      uint64_t v91 = (void **)(v19 + 88);
      uint64_t v92 = (void **)(v20 + 88);
      int v93 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v93 == 255)
        {
          uint64_t v99 = *v92;
          *(unsigned char *)(v19 + 96) = v20[96];
          *uint64_t v91 = v99;
        }
        else
        {
          uint64_t v97 = *v92;
          sub_100009098(v97, v20[96]);
          *(void *)(v19 + 88) = v97;
          *(unsigned char *)(v19 + 96) = v93;
        }
      }
      else if (v93 == 255)
      {
        sub_10000BE68(v19 + 88);
        char v98 = v20[96];
        *uint64_t v91 = *v92;
        *(unsigned char *)(v19 + 96) = v98;
      }
      else
      {
        uint64_t v94 = *v92;
        sub_100009098(v94, v20[96]);
        uint64_t v95 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v94;
        char v96 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v93;
        sub_1000096EC(v95, v96);
      }
      uint64_t v100 = (void **)(v19 + 104);
      uint64_t v101 = (void **)(v20 + 104);
      int v102 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v102 == 255)
        {
          id v108 = *v101;
          *(unsigned char *)(v19 + 112) = v20[112];
          *uint64_t v100 = v108;
        }
        else
        {
          uint64_t v106 = *v101;
          sub_100009098(v106, v20[112]);
          *(void *)(v19 + 104) = v106;
          *(unsigned char *)(v19 + 112) = v102;
        }
      }
      else if (v102 == 255)
      {
        sub_10000BE68(v19 + 104);
        char v107 = v20[112];
        *uint64_t v100 = *v101;
        *(unsigned char *)(v19 + 112) = v107;
      }
      else
      {
        uint64_t v103 = *v101;
        sub_100009098(v103, v20[112]);
        int v104 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v103;
        char v105 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v102;
        sub_1000096EC(v104, v105);
      }
      uint64_t v109 = (void **)(v19 + 120);
      uint64_t v110 = (void **)(v20 + 120);
      int v111 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v111 == 255)
        {
          uint64_t v117 = *v110;
          *(unsigned char *)(v19 + 128) = v20[128];
          *uint64_t v109 = v117;
        }
        else
        {
          uint64_t v115 = *v110;
          sub_100009098(v115, v20[128]);
          *(void *)(v19 + 120) = v115;
          *(unsigned char *)(v19 + 128) = v111;
        }
      }
      else if (v111 == 255)
      {
        sub_10000BE68(v19 + 120);
        char v116 = v20[128];
        *uint64_t v109 = *v110;
        *(unsigned char *)(v19 + 128) = v116;
      }
      else
      {
        v112 = *v110;
        sub_100009098(v112, v20[128]);
        uint64_t v113 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v112;
        char v114 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v111;
        sub_1000096EC(v113, v114);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v118 = v21[11];
      uint64_t v119 = v19 + v118;
      uint64_t v120 = &v20[v118];
      uint64_t v121 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
      uint64_t v122 = v21[12];
      uint64_t v123 = (void *)(v19 + v122);
      uint64_t v124 = &v20[v122];
      *uint64_t v123 = *(void *)v124;
      v123[1] = *((void *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v125 = v21[16];
      uint64_t v126 = (void *)(v19 + v125);
      uint64_t v127 = &v20[v125];
      void *v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_100015548(v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_13:
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_76;
  }
  if (v24) {
    goto LABEL_13;
  }
  v307 = v22;
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v25 = v20[32];
  swift_bridgeObjectRetain();
  if (v25 == 255)
  {
    long long v37 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v37;
  }
  else
  {
    uint64_t v26 = *((void *)v20 + 2);
    uint64_t v27 = *((void *)v20 + 3);
    sub_100009080(v26, v27, v25);
    *(void *)(v19 + 16) = v26;
    *(void *)(v19 + 24) = v27;
    *(unsigned char *)(v19 + 32) = v25;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v38 = (id *)(v20 + 56);
  int v39 = v20[64];
  if (v39 == 255)
  {
    id v41 = *v38;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v41;
  }
  else
  {
    id v40 = *v38;
    sub_100009098(*v38, v20[64]);
    *(void *)(v19 + 56) = v40;
    *(unsigned char *)(v19 + 64) = v39;
  }
  int v42 = (id *)(v20 + 72);
  int v43 = v20[80];
  if (v43 == 255)
  {
    id v45 = *v42;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v45;
  }
  else
  {
    id v44 = *v42;
    sub_100009098(*v42, v20[80]);
    *(void *)(v19 + 72) = v44;
    *(unsigned char *)(v19 + 80) = v43;
  }
  id v46 = (id *)(v20 + 88);
  int v47 = v20[96];
  if (v47 == 255)
  {
    id v49 = *v46;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v49;
  }
  else
  {
    id v48 = *v46;
    sub_100009098(*v46, v20[96]);
    *(void *)(v19 + 88) = v48;
    *(unsigned char *)(v19 + 96) = v47;
  }
  uint64_t v50 = (id *)(v20 + 104);
  int v51 = v20[112];
  if (v51 == 255)
  {
    id v53 = *v50;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v53;
  }
  else
  {
    id v52 = *v50;
    sub_100009098(*v50, v20[112]);
    *(void *)(v19 + 104) = v52;
    *(unsigned char *)(v19 + 112) = v51;
  }
  uint64_t v54 = (id *)(v20 + 120);
  int v55 = v20[128];
  if (v55 == 255)
  {
    id v57 = *v54;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v57;
  }
  else
  {
    id v56 = *v54;
    sub_100009098(*v54, v20[128]);
    *(void *)(v19 + 120) = v56;
    *(unsigned char *)(v19 + 128) = v55;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v58 = v21[11];
  uint64_t v59 = v19 + v58;
  uint64_t v60 = &v20[v58];
  uint64_t v61 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  uint64_t v62 = v21[12];
  uint64_t v63 = (void *)(v19 + v62);
  uint64_t v64 = &v20[v62];
  *uint64_t v63 = *(void *)v64;
  v63[1] = *((void *)v64 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v65 = v21[16];
  int v66 = (void *)(v19 + v65);
  uint64_t v67 = &v20[v65];
  *int v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  uint64_t v68 = *(void (**)(uint64_t, void, uint64_t, int *))(v308 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v19, 0, 1, v21);
LABEL_75:
  uint64_t v22 = v307;
LABEL_76:
  uint64_t v128 = v6[13];
  uint64_t v129 = (uint64_t)a1 + v128;
  uint64_t v130 = (char *)a2 + v128;
  int v131 = v22((uint64_t)a1 + v128, 1, v21);
  uint64_t v132 = (uint64_t (*)(char *, uint64_t, int *))v22;
  int v133 = v131;
  int v134 = v132(v130, 1, v21);
  if (v133)
  {
    if (!v134)
    {
      *(void *)uint64_t v129 = *(void *)v130;
      *(void *)(v129 + 8) = *((void *)v130 + 1);
      int v135 = v130[32];
      swift_bridgeObjectRetain();
      if (v135 == 255)
      {
        long long v147 = *((_OWORD *)v130 + 1);
        *(unsigned char *)(v129 + 32) = v130[32];
        *(_OWORD *)(v129 + 16) = v147;
      }
      else
      {
        uint64_t v136 = *((void *)v130 + 2);
        uint64_t v137 = *((void *)v130 + 3);
        sub_100009080(v136, v137, v135);
        *(void *)(v129 + 16) = v136;
        *(void *)(v129 + 24) = v137;
        *(unsigned char *)(v129 + 32) = v135;
      }
      *(void *)(v129 + 40) = *((void *)v130 + 5);
      *(void *)(v129 + 48) = *((void *)v130 + 6);
      uint64_t v148 = (id *)(v130 + 56);
      int v149 = v130[64];
      if (v149 == 255)
      {
        id v151 = *v148;
        *(unsigned char *)(v129 + 64) = v130[64];
        *(void *)(v129 + 56) = v151;
      }
      else
      {
        id v150 = *v148;
        sub_100009098(*v148, v130[64]);
        *(void *)(v129 + 56) = v150;
        *(unsigned char *)(v129 + 64) = v149;
      }
      uint64_t v152 = (id *)(v130 + 72);
      int v153 = v130[80];
      if (v153 == 255)
      {
        id v155 = *v152;
        *(unsigned char *)(v129 + 80) = v130[80];
        *(void *)(v129 + 72) = v155;
      }
      else
      {
        id v154 = *v152;
        sub_100009098(*v152, v130[80]);
        *(void *)(v129 + 72) = v154;
        *(unsigned char *)(v129 + 80) = v153;
      }
      char v156 = (id *)(v130 + 88);
      int v157 = v130[96];
      if (v157 == 255)
      {
        id v159 = *v156;
        *(unsigned char *)(v129 + 96) = v130[96];
        *(void *)(v129 + 88) = v159;
      }
      else
      {
        id v158 = *v156;
        sub_100009098(*v156, v130[96]);
        *(void *)(v129 + 88) = v158;
        *(unsigned char *)(v129 + 96) = v157;
      }
      uint64_t v160 = (id *)(v130 + 104);
      int v161 = v130[112];
      if (v161 == 255)
      {
        id v163 = *v160;
        *(unsigned char *)(v129 + 112) = v130[112];
        *(void *)(v129 + 104) = v163;
      }
      else
      {
        id v162 = *v160;
        sub_100009098(*v160, v130[112]);
        *(void *)(v129 + 104) = v162;
        *(unsigned char *)(v129 + 112) = v161;
      }
      v164 = (id *)(v130 + 120);
      int v165 = v130[128];
      if (v165 == 255)
      {
        id v167 = *v164;
        *(unsigned char *)(v129 + 128) = v130[128];
        *(void *)(v129 + 120) = v167;
      }
      else
      {
        id v166 = *v164;
        sub_100009098(*v164, v130[128]);
        *(void *)(v129 + 120) = v166;
        *(unsigned char *)(v129 + 128) = v165;
      }
      *(unsigned char *)(v129 + 129) = v130[129];
      uint64_t v168 = v21[11];
      uint64_t v169 = v129 + v168;
      int v170 = &v130[v168];
      uint64_t v171 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      uint64_t v172 = v21[12];
      int v173 = (void *)(v129 + v172);
      int v174 = &v130[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
      *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
      *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
      uint64_t v175 = v21[16];
      uint64_t v176 = (void *)(v129 + v175);
      uint64_t v177 = &v130[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      v178 = *(void (**)(uint64_t, void, uint64_t, int *))(v308 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178(v129, 0, 1, v21);
      goto LABEL_143;
    }
LABEL_82:
    uint64_t v138 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v129, v130, *(void *)(*(void *)(v138 - 8) + 64));
    goto LABEL_143;
  }
  if (v134)
  {
    sub_100015548(v129, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_82;
  }
  *(void *)uint64_t v129 = *(void *)v130;
  *(void *)(v129 + 8) = *((void *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v139 = (long long *)(v129 + 16);
  uint64_t v140 = (long long *)(v130 + 16);
  int v141 = v130[32];
  if (*(unsigned __int8 *)(v129 + 32) == 255)
  {
    if (v141 == 255)
    {
      long long v182 = *v140;
      *(unsigned char *)(v129 + 32) = v130[32];
      long long *v139 = v182;
    }
    else
    {
      uint64_t v179 = *((void *)v130 + 2);
      uint64_t v180 = *((void *)v130 + 3);
      sub_100009080(v179, v180, v130[32]);
      *(void *)(v129 + 16) = v179;
      *(void *)(v129 + 24) = v180;
      *(unsigned char *)(v129 + 32) = v141;
    }
  }
  else if (v141 == 255)
  {
    sub_10000BE14(v129 + 16);
    char v181 = v130[32];
    long long *v139 = *v140;
    *(unsigned char *)(v129 + 32) = v181;
  }
  else
  {
    uint64_t v142 = *((void *)v130 + 2);
    uint64_t v143 = *((void *)v130 + 3);
    sub_100009080(v142, v143, v130[32]);
    uint64_t v144 = *(void *)(v129 + 16);
    uint64_t v145 = *(void *)(v129 + 24);
    *(void *)(v129 + 16) = v142;
    *(void *)(v129 + 24) = v143;
    unsigned __int8 v146 = *(unsigned char *)(v129 + 32);
    *(unsigned char *)(v129 + 32) = v141;
    sub_1000096D4(v144, v145, v146);
  }
  *(void *)(v129 + 40) = *((void *)v130 + 5);
  *(void *)(v129 + 48) = *((void *)v130 + 6);
  uint64_t v183 = (void **)(v129 + 56);
  uint64_t v184 = (void **)(v130 + 56);
  int v185 = v130[64];
  if (*(unsigned __int8 *)(v129 + 64) == 255)
  {
    if (v185 == 255)
    {
      uint64_t v191 = *v184;
      *(unsigned char *)(v129 + 64) = v130[64];
      *uint64_t v183 = v191;
    }
    else
    {
      uint64_t v189 = *v184;
      sub_100009098(v189, v130[64]);
      *(void *)(v129 + 56) = v189;
      *(unsigned char *)(v129 + 64) = v185;
    }
  }
  else if (v185 == 255)
  {
    sub_10000BE68(v129 + 56);
    char v190 = v130[64];
    *uint64_t v183 = *v184;
    *(unsigned char *)(v129 + 64) = v190;
  }
  else
  {
    v186 = *v184;
    sub_100009098(v186, v130[64]);
    v187 = *(void **)(v129 + 56);
    *(void *)(v129 + 56) = v186;
    char v188 = *(unsigned char *)(v129 + 64);
    *(unsigned char *)(v129 + 64) = v185;
    sub_1000096EC(v187, v188);
  }
  v192 = (void **)(v129 + 72);
  uint64_t v193 = (void **)(v130 + 72);
  int v194 = v130[80];
  if (*(unsigned __int8 *)(v129 + 80) == 255)
  {
    if (v194 == 255)
    {
      v200 = *v193;
      *(unsigned char *)(v129 + 80) = v130[80];
      char *v192 = v200;
    }
    else
    {
      uint64_t v198 = *v193;
      sub_100009098(v198, v130[80]);
      *(void *)(v129 + 72) = v198;
      *(unsigned char *)(v129 + 80) = v194;
    }
  }
  else if (v194 == 255)
  {
    sub_10000BE68(v129 + 72);
    char v199 = v130[80];
    char *v192 = *v193;
    *(unsigned char *)(v129 + 80) = v199;
  }
  else
  {
    v195 = *v193;
    sub_100009098(v195, v130[80]);
    v196 = *(void **)(v129 + 72);
    *(void *)(v129 + 72) = v195;
    char v197 = *(unsigned char *)(v129 + 80);
    *(unsigned char *)(v129 + 80) = v194;
    sub_1000096EC(v196, v197);
  }
  v201 = (void **)(v129 + 88);
  uint64_t v202 = (void **)(v130 + 88);
  int v203 = v130[96];
  if (*(unsigned __int8 *)(v129 + 96) == 255)
  {
    if (v203 == 255)
    {
      uint64_t v209 = *v202;
      *(unsigned char *)(v129 + 96) = v130[96];
      char *v201 = v209;
    }
    else
    {
      v207 = *v202;
      sub_100009098(v207, v130[96]);
      *(void *)(v129 + 88) = v207;
      *(unsigned char *)(v129 + 96) = v203;
    }
  }
  else if (v203 == 255)
  {
    sub_10000BE68(v129 + 88);
    char v208 = v130[96];
    char *v201 = *v202;
    *(unsigned char *)(v129 + 96) = v208;
  }
  else
  {
    uint64_t v204 = *v202;
    sub_100009098(v204, v130[96]);
    v205 = *(void **)(v129 + 88);
    *(void *)(v129 + 88) = v204;
    char v206 = *(unsigned char *)(v129 + 96);
    *(unsigned char *)(v129 + 96) = v203;
    sub_1000096EC(v205, v206);
  }
  uint64_t v210 = (void **)(v129 + 104);
  v211 = (void **)(v130 + 104);
  int v212 = v130[112];
  if (*(unsigned __int8 *)(v129 + 112) == 255)
  {
    if (v212 == 255)
    {
      v218 = *v211;
      *(unsigned char *)(v129 + 112) = v130[112];
      *uint64_t v210 = v218;
    }
    else
    {
      v216 = *v211;
      sub_100009098(v216, v130[112]);
      *(void *)(v129 + 104) = v216;
      *(unsigned char *)(v129 + 112) = v212;
    }
  }
  else if (v212 == 255)
  {
    sub_10000BE68(v129 + 104);
    char v217 = v130[112];
    *uint64_t v210 = *v211;
    *(unsigned char *)(v129 + 112) = v217;
  }
  else
  {
    v213 = *v211;
    sub_100009098(v213, v130[112]);
    v214 = *(void **)(v129 + 104);
    *(void *)(v129 + 104) = v213;
    char v215 = *(unsigned char *)(v129 + 112);
    *(unsigned char *)(v129 + 112) = v212;
    sub_1000096EC(v214, v215);
  }
  v219 = (void **)(v129 + 120);
  v220 = (void **)(v130 + 120);
  int v221 = v130[128];
  if (*(unsigned __int8 *)(v129 + 128) == 255)
  {
    if (v221 == 255)
    {
      v227 = *v220;
      *(unsigned char *)(v129 + 128) = v130[128];
      *v219 = v227;
    }
    else
    {
      v225 = *v220;
      sub_100009098(v225, v130[128]);
      *(void *)(v129 + 120) = v225;
      *(unsigned char *)(v129 + 128) = v221;
    }
  }
  else if (v221 == 255)
  {
    sub_10000BE68(v129 + 120);
    char v226 = v130[128];
    *v219 = *v220;
    *(unsigned char *)(v129 + 128) = v226;
  }
  else
  {
    v222 = *v220;
    sub_100009098(v222, v130[128]);
    v223 = *(void **)(v129 + 120);
    *(void *)(v129 + 120) = v222;
    char v224 = *(unsigned char *)(v129 + 128);
    *(unsigned char *)(v129 + 128) = v221;
    sub_1000096EC(v223, v224);
  }
  *(unsigned char *)(v129 + 129) = v130[129];
  uint64_t v228 = v21[11];
  uint64_t v229 = v129 + v228;
  v230 = &v130[v228];
  uint64_t v231 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v229, v230, v231);
  uint64_t v232 = v21[12];
  v233 = (void *)(v129 + v232);
  v234 = &v130[v232];
  void *v233 = *(void *)v234;
  v233[1] = *((void *)v234 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
  *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
  *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
  uint64_t v235 = v21[16];
  v236 = (void *)(v129 + v235);
  v237 = &v130[v235];
  void *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v238 = v6[14];
  v239 = *(void **)((char *)a1 + v238);
  v240 = *(void **)((char *)a2 + v238);
  *(void *)((char *)a1 + v238) = v240;
  id v241 = v240;

  uint64_t v242 = v6[15];
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  uint64_t v245 = sub_10008A050();
  uint64_t v246 = *(void *)(v245 - 8);
  v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  LODWORD(v239) = v247(v243, 1, v245);
  int v248 = v247(v244, 1, v245);
  if (v239)
  {
    if (!v248)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v248)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_148:
    uint64_t v249 = sub_10000903C(&qword_1000A1048);
    memcpy(v243, v244, *(void *)(*(void *)(v249 - 8) + 64));
    goto LABEL_149;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
LABEL_149:
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  uint64_t v250 = v6[17];
  v251 = (char *)a1 + v250;
  v252 = (char *)a2 + v250;
  uint64_t v253 = *(void *)v252;
  v251[8] = v252[8];
  *(void *)v251 = v253;
  uint64_t v254 = v6[18];
  v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  uint64_t v257 = *(void *)v256;
  v255[8] = v256[8];
  *(void *)v255 = v257;
  uint64_t v258 = v6[19];
  v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  int v261 = v309((char *)a1 + v258, 1, v310);
  int v262 = v309(v260, 1, v310);
  if (v261)
  {
    if (!v262)
    {
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v259, v260, v310);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v259, 0, 1, v310);
      goto LABEL_155;
    }
    goto LABEL_154;
  }
  if (v262)
  {
    (*(void (**)(char *, uint64_t))(v314 + 8))(v259, v310);
LABEL_154:
    uint64_t v263 = sub_10000903C(&qword_1000A1038);
    memcpy(v259, v260, *(void *)(*(void *)(v263 - 8) + 64));
    goto LABEL_155;
  }
  (*(void (**)(char *, char *, uint64_t))(v314 + 24))(v259, v260, v310);
LABEL_155:
  uint64_t v264 = v6[20];
  v265 = (char *)a1 + v264;
  v266 = (char *)a2 + v264;
  int v267 = v309((char *)a1 + v264, 1, v310);
  int v268 = v309(v266, 1, v310);
  if (v267)
  {
    if (!v268)
    {
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v265, v266, v310);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v265, 0, 1, v310);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v268)
  {
    (*(void (**)(char *, uint64_t))(v314 + 8))(v265, v310);
LABEL_160:
    uint64_t v269 = sub_10000903C(&qword_1000A1038);
    memcpy(v265, v266, *(void *)(*(void *)(v269 - 8) + 64));
    goto LABEL_161;
  }
  (*(void (**)(char *, char *, uint64_t))(v314 + 24))(v265, v266, v310);
LABEL_161:
  uint64_t v270 = v6[21];
  v271 = (void *)((char *)a1 + v270);
  v272 = (char *)a2 + v270;
  uint64_t v273 = *(void *)((char *)a2 + v270);
  if (*(void *)((char *)a1 + v270))
  {
    if (v273)
    {
      void *v271 = v273;
      swift_retain();
      swift_release();
      v271[1] = *((void *)v272 + 1);
      swift_retain();
      swift_release();
      v271[2] = *((void *)v272 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10000BF18((uint64_t)a1 + v270);
      uint64_t v274 = *((void *)v272 + 2);
      *(_OWORD *)v271 = *(_OWORD *)v272;
      v271[2] = v274;
    }
  }
  else if (v273)
  {
    void *v271 = v273;
    v271[1] = *((void *)v272 + 1);
    v271[2] = *((void *)v272 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v275 = *(_OWORD *)v272;
    v271[2] = *((void *)v272 + 2);
    *(_OWORD *)v271 = v275;
  }
  uint64_t v276 = v6[22];
  v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  uint64_t v279 = sub_10000903C(&qword_1000A1050);
  uint64_t v280 = *(void *)(v279 - 8);
  v281 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v280 + 48);
  int v282 = v281(v277, 1, v279);
  int v283 = v281(v278, 1, v279);
  v312 = a2;
  v313 = a1;
  if (v282)
  {
    if (!v283)
    {
      v284 = *(void (**)(char *, char *, uint64_t))(v314 + 16);
      v284(v277, v278, v310);
      v284(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v310);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  if (v283)
  {
    sub_100015614((uint64_t)v277, &qword_1000A1050);
LABEL_176:
    uint64_t v285 = sub_10000903C(&qword_1000A1058);
    memcpy(v277, v278, *(void *)(*(void *)(v285 - 8) + 64));
    goto LABEL_177;
  }
  v306 = *(void (**)(char *, char *, uint64_t))(v314 + 24);
  v306(v277, v278, v310);
  v306(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v310);
LABEL_177:
  v286 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v287 = v286[5];
  v288 = &v277[v287];
  v289 = &v278[v287];
  uint64_t v290 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 24))(v288, v289, v290);
  uint64_t v291 = v286[6];
  v292 = &v277[v291];
  v293 = &v278[v291];
  uint64_t v294 = sub_10008A4B0();
  uint64_t v295 = *(void *)(v294 - 8);
  v296 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v295 + 48);
  LODWORD(v288) = v296(v292, 1, v294);
  int v297 = v296(v293, 1, v294);
  if (!v288)
  {
    if (!v297)
    {
      (*(void (**)(char *, char *, uint64_t))(v295 + 24))(v292, v293, v294);
      goto LABEL_183;
    }
    (*(void (**)(char *, uint64_t))(v295 + 8))(v292, v294);
    goto LABEL_182;
  }
  if (v297)
  {
LABEL_182:
    uint64_t v298 = sub_10000903C(&qword_1000A1060);
    memcpy(v292, v293, *(void *)(*(void *)(v298 - 8) + 64));
    goto LABEL_183;
  }
  (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v293, v294);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
LABEL_183:
  uint64_t v299 = v286[7];
  v300 = &v277[v299];
  v301 = &v278[v299];
  *(void *)v300 = *(void *)v301;
  *((void *)v300 + 1) = *((void *)v301 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v302 = v286[8];
  v303 = &v277[v302];
  v304 = &v278[v302];
  *(void *)v303 = *(void *)v304;
  *((void *)v303 + 1) = *((void *)v304 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v313 + *(int *)(v311 + 20)) = *(void *)((char *)v312 + *(int *)(v311 + 20));
  return v313;
}

uint64_t sub_100011FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v8 = v7[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v84 = v11;
  uint64_t v83 = v12;
  int v82 = *(unsigned int (**)(const void *, uint64_t))(v12 + 48);
  if (v82(v10, 1))
  {
    uint64_t v13 = sub_10000903C(&qword_1000A1038);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v84);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v84);
  }
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  uint64_t v14 = v7[12];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  uint64_t v17 = (int *)sub_10008A340();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48);
  uint64_t v81 = v18;
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1040);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v21;
    *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((unsigned char *)v15 + 64) = *((unsigned char *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((unsigned char *)v15 + 129) = *((unsigned char *)v16 + 129);
    uint64_t v22 = v17[11];
    int v79 = (char *)v15 + v22;
    uint64_t v80 = a3;
    int v23 = (char *)v16 + v22;
    uint64_t v24 = sub_10008A300();
    int v25 = v23;
    a3 = v80;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v79, v25, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((unsigned char *)v15 + v17[13]) = *((unsigned char *)v16 + v17[13]);
    *((unsigned char *)v15 + v17[14]) = *((unsigned char *)v16 + v17[14]);
    *((unsigned char *)v15 + v17[15]) = *((unsigned char *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = v7[13];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  if (v19((_OWORD *)(a2 + v26), 1, v17))
  {
    uint64_t v29 = sub_10000903C(&qword_1000A1040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v28[1];
    _OWORD *v27 = *v28;
    v27[1] = v30;
    *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
    *(_OWORD *)((char *)v27 + 40) = *(_OWORD *)((char *)v28 + 40);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
    *(_OWORD *)((char *)v27 + 113) = *(_OWORD *)((char *)v28 + 113);
    *(_OWORD *)((char *)v27 + 104) = *(_OWORD *)((char *)v28 + 104);
    *(_OWORD *)((char *)v27 + 88) = *(_OWORD *)((char *)v28 + 88);
    *(_OWORD *)((char *)v27 + 72) = *(_OWORD *)((char *)v28 + 72);
    *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
    uint64_t v31 = v17[11];
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = a3;
    uint64_t v34 = (char *)v28 + v31;
    uint64_t v35 = sub_10008A300();
    unsigned __int8 v36 = v34;
    a3 = v33;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v36, v35);
    *(_OWORD *)((char *)v27 + v17[12]) = *(_OWORD *)((char *)v28 + v17[12]);
    *((unsigned char *)v27 + v17[13]) = *((unsigned char *)v28 + v17[13]);
    *((unsigned char *)v27 + v17[14]) = *((unsigned char *)v28 + v17[14]);
    *((unsigned char *)v27 + v17[15]) = *((unsigned char *)v28 + v17[15]);
    *(_OWORD *)((char *)v27 + v17[16]) = *(_OWORD *)((char *)v28 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v81 + 56))(v27, 0, 1, v17);
  }
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  uint64_t v37 = v7[15];
  uint64_t v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_10008A050();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10000903C(&qword_1000A1048);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v43 = v7[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = v7[18];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = v7[19];
  uint64_t v50 = (void *)(a1 + v49);
  int v51 = (const void *)(a2 + v49);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v82)(a2 + v49, 1, v84))
  {
    uint64_t v52 = sub_10000903C(&qword_1000A1038);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v83 + 32))(v50, v51, v84);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v50, 0, 1, v84);
  }
  uint64_t v53 = v7[20];
  uint64_t v54 = (void *)(a1 + v53);
  int v55 = (const void *)(a2 + v53);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v82)(a2 + v53, 1, v84))
  {
    uint64_t v56 = sub_10000903C(&qword_1000A1038);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v83 + 32))(v54, v55, v84);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v54, 0, 1, v84);
  }
  uint64_t v57 = v7[21];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  uint64_t v60 = v7[22];
  uint64_t v61 = (char *)(a1 + v60);
  uint64_t v62 = (char *)(a2 + v60);
  uint64_t v63 = sub_10000903C(&qword_1000A1050);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_10000903C(&qword_1000A1058);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    int v66 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
    v66(v61, v62, v84);
    v66(&v61[*(int *)(v63 + 36)], &v62[*(int *)(v63 + 36)], v84);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v67 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v68 = v67[5];
  uint64_t v69 = &v61[v68];
  uint64_t v70 = &v62[v68];
  uint64_t v71 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = v67[6];
  int v73 = &v61[v72];
  id v74 = &v62[v72];
  uint64_t v75 = sub_10008A4B0();
  uint64_t v76 = *(void *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    uint64_t v77 = sub_10000903C(&qword_1000A1060);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  *(_OWORD *)&v61[v67[7]] = *(_OWORD *)&v62[v67[7]];
  *(_OWORD *)&v61[v67[8]] = *(_OWORD *)&v62[v67[8]];
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1000128F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v12 = v11[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10008A170();
  uint64_t v204 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v204 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  uint64_t v200 = a3;
  char v199 = v16;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v204 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v204 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10000903C(&qword_1000A1038);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v204 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[11];
  long long v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *long long v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v11[12];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)sub_10008A340();
  uint64_t v198 = *((void *)v28 - 1);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v198 + 48);
  int v30 = v29(v26, 1, v28);
  int v31 = v29((uint64_t)v27, 1, v28);
  uint64_t v203 = v15;
  if (v30)
  {
    if (!v31)
    {
      long long v32 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v32;
      *(unsigned char *)(v26 + 32) = v27[32];
      *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
      *(void *)(v26 + 56) = *((void *)v27 + 7);
      *(unsigned char *)(v26 + 64) = v27[64];
      *(_OWORD *)(v26 + 113) = *(_OWORD *)(v27 + 113);
      *(_OWORD *)(v26 + 104) = *(_OWORD *)(v27 + 104);
      *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(unsigned char *)(v26 + 129) = v27[129];
      uint64_t v33 = v28[11];
      uint64_t v34 = v26 + v33;
      uint64_t v35 = &v27[v33];
      uint64_t v36 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)&v27[v28[12]];
      *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
      *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
      *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
      *(_OWORD *)(v26 + v28[16]) = *(_OWORD *)&v27[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v198 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    sub_100015548(v26, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_12:
    uint64_t v37 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v117 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v117;
  swift_bridgeObjectRelease();
  uint64_t v118 = v27 + 16;
  int v119 = *(unsigned __int8 *)(v26 + 32);
  if (v119 != 255)
  {
    int v120 = v27[32];
    if (v120 != 255)
    {
      uint64_t v121 = *(void *)(v26 + 16);
      uint64_t v122 = *(void *)(v26 + 24);
      *(_OWORD *)(v26 + 16) = *v118;
      *(unsigned char *)(v26 + 32) = v120;
      sub_1000096D4(v121, v122, v119);
      goto LABEL_69;
    }
    sub_10000BE14(v26 + 16);
  }
  *(_OWORD *)(v26 + 16) = *v118;
  *(unsigned char *)(v26 + 32) = v27[32];
LABEL_69:
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  uint64_t v130 = v27 + 56;
  int v131 = *(unsigned __int8 *)(v26 + 64);
  if (v131 != 255)
  {
    int v132 = v27[64];
    if (v132 != 255)
    {
      int v133 = *(void **)(v26 + 56);
      *(void *)(v26 + 56) = *v130;
      *(unsigned char *)(v26 + 64) = v132;
      sub_1000096EC(v133, v131);
      goto LABEL_79;
    }
    sub_10000BE68(v26 + 56);
  }
  *(void *)(v26 + 56) = *v130;
  *(unsigned char *)(v26 + 64) = v27[64];
LABEL_79:
  uint64_t v138 = v27 + 72;
  int v139 = *(unsigned __int8 *)(v26 + 80);
  if (v139 != 255)
  {
    int v140 = v27[80];
    if (v140 != 255)
    {
      int v141 = *(void **)(v26 + 72);
      *(void *)(v26 + 72) = *v138;
      *(unsigned char *)(v26 + 80) = v140;
      sub_1000096EC(v141, v139);
      goto LABEL_89;
    }
    sub_10000BE68(v26 + 72);
  }
  *(void *)(v26 + 72) = *v138;
  *(unsigned char *)(v26 + 80) = v27[80];
LABEL_89:
  unsigned __int8 v146 = v27 + 88;
  int v147 = *(unsigned __int8 *)(v26 + 96);
  if (v147 != 255)
  {
    int v148 = v27[96];
    if (v148 != 255)
    {
      int v149 = *(void **)(v26 + 88);
      *(void *)(v26 + 88) = *v146;
      *(unsigned char *)(v26 + 96) = v148;
      sub_1000096EC(v149, v147);
      goto LABEL_99;
    }
    sub_10000BE68(v26 + 88);
  }
  *(void *)(v26 + 88) = *v146;
  *(unsigned char *)(v26 + 96) = v27[96];
LABEL_99:
  id v154 = v27 + 104;
  int v155 = *(unsigned __int8 *)(v26 + 112);
  if (v155 != 255)
  {
    int v156 = v27[112];
    if (v156 != 255)
    {
      int v157 = *(void **)(v26 + 104);
      *(void *)(v26 + 104) = *v154;
      *(unsigned char *)(v26 + 112) = v156;
      sub_1000096EC(v157, v155);
      goto LABEL_109;
    }
    sub_10000BE68(v26 + 104);
  }
  *(void *)(v26 + 104) = *v154;
  *(unsigned char *)(v26 + 112) = v27[112];
LABEL_109:
  id v162 = v27 + 120;
  int v163 = *(unsigned __int8 *)(v26 + 128);
  if (v163 == 255)
  {
LABEL_118:
    *(void *)(v26 + 120) = *v162;
    *(unsigned char *)(v26 + 128) = v27[128];
    goto LABEL_119;
  }
  int v164 = v27[128];
  if (v164 == 255)
  {
    sub_10000BE68(v26 + 120);
    goto LABEL_118;
  }
  int v165 = *(void **)(v26 + 120);
  *(void *)(v26 + 120) = *v162;
  *(unsigned char *)(v26 + 128) = v164;
  sub_1000096EC(v165, v163);
LABEL_119:
  *(unsigned char *)(v26 + 129) = v27[129];
  uint64_t v170 = v28[11];
  uint64_t v171 = v26 + v170;
  uint64_t v172 = &v27[v170];
  uint64_t v173 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v173 - 8) + 40))(v171, v172, v173);
  uint64_t v174 = v28[12];
  uint64_t v175 = (void *)(v26 + v174);
  uint64_t v176 = &v27[v174];
  uint64_t v178 = *(void *)v176;
  uint64_t v177 = *((void *)v176 + 1);
  *uint64_t v175 = v178;
  v175[1] = v177;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
  *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
  *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
  uint64_t v179 = v28[16];
  uint64_t v180 = (void *)(v26 + v179);
  char v181 = &v27[v179];
  uint64_t v183 = *(void *)v181;
  uint64_t v182 = *((void *)v181 + 1);
  *uint64_t v180 = v183;
  v180[1] = v182;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v38 = v11[13];
  uint64_t v39 = (uint64_t)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v29((uint64_t)a1 + v38, 1, v28);
  int v42 = v29((uint64_t)v40, 1, v28);
  if (v41)
  {
    if (!v42)
    {
      long long v43 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v43;
      *(unsigned char *)(v39 + 32) = v40[32];
      *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
      *(void *)(v39 + 56) = *((void *)v40 + 7);
      *(unsigned char *)(v39 + 64) = v40[64];
      *(_OWORD *)(v39 + 113) = *(_OWORD *)(v40 + 113);
      *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
      *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      *(unsigned char *)(v39 + 129) = v40[129];
      uint64_t v44 = v28[11];
      uint64_t v45 = v39 + v44;
      uint64_t v46 = &v40[v44];
      uint64_t v47 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      *(_OWORD *)(v39 + v28[12]) = *(_OWORD *)&v40[v28[12]];
      *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
      *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
      *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
      *(_OWORD *)(v39 + v28[16]) = *(_OWORD *)&v40[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v198 + 56))(v39, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    sub_100015548(v39, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_18:
    uint64_t v48 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v123 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v123;
  swift_bridgeObjectRelease();
  uint64_t v124 = v40 + 16;
  int v125 = *(unsigned __int8 *)(v39 + 32);
  if (v125 != 255)
  {
    int v126 = v40[32];
    if (v126 != 255)
    {
      uint64_t v127 = *(void *)(v39 + 16);
      uint64_t v128 = *(void *)(v39 + 24);
      *(_OWORD *)(v39 + 16) = *v124;
      *(unsigned char *)(v39 + 32) = v126;
      sub_1000096D4(v127, v128, v125);
      goto LABEL_74;
    }
    sub_10000BE14(v39 + 16);
  }
  *(_OWORD *)(v39 + 16) = *v124;
  *(unsigned char *)(v39 + 32) = v40[32];
LABEL_74:
  *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
  int v134 = v40 + 56;
  int v135 = *(unsigned __int8 *)(v39 + 64);
  if (v135 != 255)
  {
    int v136 = v40[64];
    if (v136 != 255)
    {
      uint64_t v137 = *(void **)(v39 + 56);
      *(void *)(v39 + 56) = *v134;
      *(unsigned char *)(v39 + 64) = v136;
      sub_1000096EC(v137, v135);
      goto LABEL_84;
    }
    sub_10000BE68(v39 + 56);
  }
  *(void *)(v39 + 56) = *v134;
  *(unsigned char *)(v39 + 64) = v40[64];
LABEL_84:
  uint64_t v142 = v40 + 72;
  int v143 = *(unsigned __int8 *)(v39 + 80);
  if (v143 != 255)
  {
    int v144 = v40[80];
    if (v144 != 255)
    {
      uint64_t v145 = *(void **)(v39 + 72);
      *(void *)(v39 + 72) = *v142;
      *(unsigned char *)(v39 + 80) = v144;
      sub_1000096EC(v145, v143);
      goto LABEL_94;
    }
    sub_10000BE68(v39 + 72);
  }
  *(void *)(v39 + 72) = *v142;
  *(unsigned char *)(v39 + 80) = v40[80];
LABEL_94:
  id v150 = v40 + 88;
  int v151 = *(unsigned __int8 *)(v39 + 96);
  if (v151 != 255)
  {
    int v152 = v40[96];
    if (v152 != 255)
    {
      int v153 = *(void **)(v39 + 88);
      *(void *)(v39 + 88) = *v150;
      *(unsigned char *)(v39 + 96) = v152;
      sub_1000096EC(v153, v151);
      goto LABEL_104;
    }
    sub_10000BE68(v39 + 88);
  }
  *(void *)(v39 + 88) = *v150;
  *(unsigned char *)(v39 + 96) = v40[96];
LABEL_104:
  id v158 = v40 + 104;
  int v159 = *(unsigned __int8 *)(v39 + 112);
  if (v159 != 255)
  {
    int v160 = v40[112];
    if (v160 != 255)
    {
      int v161 = *(void **)(v39 + 104);
      *(void *)(v39 + 104) = *v158;
      *(unsigned char *)(v39 + 112) = v160;
      sub_1000096EC(v161, v159);
      goto LABEL_114;
    }
    sub_10000BE68(v39 + 104);
  }
  *(void *)(v39 + 104) = *v158;
  *(unsigned char *)(v39 + 112) = v40[112];
LABEL_114:
  id v166 = v40 + 120;
  int v167 = *(unsigned __int8 *)(v39 + 128);
  if (v167 == 255)
  {
LABEL_121:
    *(void *)(v39 + 120) = *v166;
    *(unsigned char *)(v39 + 128) = v40[128];
    goto LABEL_122;
  }
  int v168 = v40[128];
  if (v168 == 255)
  {
    sub_10000BE68(v39 + 120);
    goto LABEL_121;
  }
  uint64_t v169 = *(void **)(v39 + 120);
  *(void *)(v39 + 120) = *v166;
  *(unsigned char *)(v39 + 128) = v168;
  sub_1000096EC(v169, v167);
LABEL_122:
  *(unsigned char *)(v39 + 129) = v40[129];
  uint64_t v184 = v28[11];
  uint64_t v185 = v39 + v184;
  v186 = &v40[v184];
  uint64_t v187 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v187 - 8) + 40))(v185, v186, v187);
  uint64_t v188 = v28[12];
  uint64_t v189 = (void *)(v39 + v188);
  char v190 = &v40[v188];
  uint64_t v192 = *(void *)v190;
  uint64_t v191 = *((void *)v190 + 1);
  void *v189 = v192;
  v189[1] = v191;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
  *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
  *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
  uint64_t v193 = v28[16];
  int v194 = (void *)(v39 + v193);
  v195 = &v40[v193];
  uint64_t v197 = *(void *)v195;
  uint64_t v196 = *((void *)v195 + 1);
  *int v194 = v197;
  v194[1] = v196;
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v49 = v11[14];
  uint64_t v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

  uint64_t v51 = v11[15];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_10008A050();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    uint64_t v59 = v203;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v59 = v203;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_24:
    uint64_t v60 = sub_10000903C(&qword_1000A1048);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_25:
  *((unsigned char *)a1 + v11[16]) = *((unsigned char *)a2 + v11[16]);
  uint64_t v61 = v11[17];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = v11[18];
  uint64_t v65 = (char *)a1 + v64;
  int v66 = (char *)a2 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = v11[19];
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  int v70 = v199((char *)a1 + v67, 1, v59);
  int v71 = v199(v69, 1, v59);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v68, v69, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v204 + 56))(v68, 0, 1, v59);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v204 + 8))(v68, v59);
LABEL_30:
    uint64_t v72 = sub_10000903C(&qword_1000A1038);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v204 + 40))(v68, v69, v59);
LABEL_31:
  uint64_t v73 = v11[20];
  id v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  int v76 = v199((char *)a1 + v73, 1, v59);
  int v77 = v199(v75, 1, v59);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v74, v75, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v204 + 56))(v74, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v204 + 8))(v74, v59);
LABEL_36:
    uint64_t v78 = sub_10000903C(&qword_1000A1038);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v204 + 40))(v74, v75, v59);
LABEL_37:
  uint64_t v79 = v11[21];
  uint64_t v80 = (void *)((char *)a1 + v79);
  uint64_t v81 = (void *)((char *)a2 + v79);
  if (*(void *)((char *)a1 + v79))
  {
    if (*v81)
    {
      *uint64_t v80 = *v81;
      swift_release();
      v80[1] = v81[1];
      swift_release();
      v80[2] = v81[2];
      swift_release();
      goto LABEL_42;
    }
    sub_10000BF18((uint64_t)v80);
  }
  *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
  v80[2] = v81[2];
LABEL_42:
  uint64_t v82 = v11[22];
  uint64_t v83 = (char *)a1 + v82;
  uint64_t v84 = (char *)a2 + v82;
  uint64_t v85 = sub_10000903C(&qword_1000A1050);
  uint64_t v86 = *(void *)(v85 - 8);
  char v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  v201 = a2;
  uint64_t v202 = a1;
  if (v88)
  {
    if (!v89)
    {
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v204 + 32);
      v90(v83, v84, v59);
      v90(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v89)
  {
    sub_100015614((uint64_t)v83, &qword_1000A1050);
LABEL_47:
    uint64_t v91 = sub_10000903C(&qword_1000A1058);
    memcpy(v83, v84, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v129 = *(void (**)(char *, char *, uint64_t))(v204 + 40);
  v129(v83, v84, v59);
  v129(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
LABEL_48:
  uint64_t v92 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v93 = v92[5];
  uint64_t v94 = &v83[v93];
  uint64_t v95 = &v84[v93];
  uint64_t v96 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  uint64_t v97 = v92[6];
  char v98 = &v83[v97];
  uint64_t v99 = &v84[v97];
  uint64_t v100 = sub_10008A4B0();
  uint64_t v101 = *(void *)(v100 - 8);
  int v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  int v103 = v102(v98, 1, v100);
  int v104 = v102(v99, 1, v100);
  if (!v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 40))(v98, v99, v100);
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v100);
    goto LABEL_53;
  }
  if (v104)
  {
LABEL_53:
    uint64_t v105 = sub_10000903C(&qword_1000A1060);
    memcpy(v98, v99, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v98, v99, v100);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
LABEL_54:
  uint64_t v106 = v92[7];
  char v107 = &v83[v106];
  id v108 = &v84[v106];
  uint64_t v110 = *(void *)v108;
  uint64_t v109 = *((void *)v108 + 1);
  *(void *)char v107 = v110;
  *((void *)v107 + 1) = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v92[8];
  v112 = &v83[v111];
  uint64_t v113 = &v84[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  *(void *)((char *)v202 + *(int *)(v200 + 20)) = *(void *)((char *)v201 + *(int *)(v200 + 20));
  return v202;
}

uint64_t sub_100013B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100013B40);
}

uint64_t sub_100013B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100013BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100013BC0);
}

uint64_t sub_100013BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WidgetArtworkView()
{
  uint64_t result = qword_1000A1180;
  if (!qword_1000A1180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100013C7C()
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100013D14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100013D30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v30 = sub_10008A650();
  uint64_t v1 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v29 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10008A7F0();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10008B160();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A1268);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000903C(&qword_1000A1258);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  int v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = [self systemGray4Color];
  uint64_t v19 = sub_10008AF90();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for BlendMode.plusLighter(_:), v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v9, v6);
  sub_1000154E0((uint64_t)v5, (uint64_t)&v13[*(int *)(v11 + 44)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v13 = v19;
  *((_WORD *)v13 + 4) = 256;
  swift_retain();
  sub_100015548((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  sub_1000155B0((uint64_t)v13, (uint64_t)v17, &qword_1000A1268);
  *(void *)&v17[*(int *)(v15 + 44)] = 0x3FB47AE147AE147BLL;
  sub_100015614((uint64_t)v13, &qword_1000A1268);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = v29;
  uint64_t v21 = v30;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v29, enum case for ColorScheme.light(_:), v30);
  uint64_t v23 = sub_10000903C(&qword_1000A1248);
  uint64_t v24 = v31;
  uint64_t v25 = (uint64_t *)(v31 + *(int *)(v23 + 36));
  uint64_t v26 = sub_10000903C(&qword_1000A1288);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))((char *)v25 + *(int *)(v26 + 28), v22, v21);
  *uint64_t v25 = KeyPath;
  sub_1000155B0((uint64_t)v17, v24, &qword_1000A1258);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v22, v21);
  return sub_100015614((uint64_t)v17, &qword_1000A1258);
}

uint64_t sub_10001412C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_10008AA60();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  uint64_t v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10008AA10();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10000903C(&qword_1000A12A8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10008B030();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000903C(&qword_1000A12B0);
  uint64_t v43 = *(void *)(v13 - 8);
  uint64_t v44 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10000903C(&qword_1000A1230);
  uint64_t v16 = __chkstk_darwin(v53);
  id v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  int v42 = (char *)&v41 - v20;
  __chkstk_darwin(v19);
  uint64_t v46 = (uint64_t)&v41 - v21;
  uint64_t v50 = sub_10000903C(&qword_1000A12B8);
  __chkstk_darwin(v50);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10000903C(&qword_1000A1248);
  __chkstk_darwin(v52);
  uint64_t v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 56);
  uint64_t v45 = a1;
  uint64_t v27 = *(void **)(a1 + v26);
  if (v27)
  {
    id v41 = v27;
    sub_10008B010();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for Image.ResizingMode.stretch(_:), v9);
    sub_10008B060();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_10008B200();
    uint64_t v28 = sub_10008B210();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v8, 0, 1, v28);
    sub_10008B050();
    swift_release();
    sub_100015614((uint64_t)v8, &qword_1000A12A8);
    sub_10008AA00();
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    sub_10008A9F0(v54);
    sub_10008A9E0(*(Swift::String *)(v45 + 56));
    v55._countAndFlagsBits = 0;
    v55._object = (void *)0xE000000000000000;
    sub_10008A9F0(v55);
    sub_10008AA30();
    uint64_t v29 = sub_10008ADD0();
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    swift_getOpaqueTypeConformance2();
    uint64_t v34 = v44;
    sub_10008AE80();
    sub_10001546C(v29, v31, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v34);
    uint64_t v35 = v47;
    sub_10008AA50();
    uint64_t v36 = (uint64_t)v42;
    sub_10008A780();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
    sub_100015614((uint64_t)v18, &qword_1000A1230);
    uint64_t v37 = v46;
    sub_10001547C(v36, v46, &qword_1000A1230);
    sub_1000155B0(v37, (uint64_t)v23, &qword_1000A1230);
    swift_storeEnumTagMultiPayload();
    sub_1000151D0();
    sub_1000152BC();
    sub_10008AAE0();

    uint64_t v38 = v37;
    uint64_t v39 = &qword_1000A1230;
  }
  else
  {
    sub_100013D30((uint64_t)v25);
    sub_1000155B0((uint64_t)v25, (uint64_t)v23, &qword_1000A1248);
    swift_storeEnumTagMultiPayload();
    sub_1000151D0();
    sub_1000152BC();
    sub_10008AAE0();
    uint64_t v38 = (uint64_t)v25;
    uint64_t v39 = &qword_1000A1248;
  }
  return sub_100015614(v38, v39);
}

uint64_t sub_1000147B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v52 = sub_10000903C(&qword_1000A12A0);
  __chkstk_darwin(v52);
  uint64_t v53 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10008AFA0();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  __chkstk_darwin(v4);
  uint64_t v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10008A7E0();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char **)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10000903C(&qword_1000A1210);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000903C(&qword_1000A1200);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000903C(&qword_1000A11F0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v45 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v50 = (uint64_t)&v45 - v20;
  uint64_t v51 = sub_10000903C(&qword_1000A11E0);
  uint64_t v21 = __chkstk_darwin(v51);
  uint64_t v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v46 = (uint64_t)&v45 - v24;
  uint64_t v25 = *(void *)(a1 + *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 56));
  sub_10001412C(a1, (uint64_t)v12);
  sub_1000155B0((uint64_t)v12, (uint64_t)v16, &qword_1000A1210);
  uint64_t v26 = *(int *)(v14 + 44);
  uint64_t v27 = v17;
  uint64_t v28 = &v16[v26];
  *(void *)uint64_t v28 = 0;
  *((_WORD *)v28 + 4) = 1;
  sub_100015614((uint64_t)v12, &qword_1000A1210);
  uint64_t v29 = *(void *)(a1 + *(int *)(type metadata accessor for WidgetArtworkView() + 20));
  uint64_t v30 = (char *)v9 + *(int *)(v7 + 28);
  uint64_t v31 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v32 = sub_10008AA40();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
  *uint64_t v9 = v29;
  v9[1] = v29;
  uint64_t v33 = *(int *)(v27 + 36);
  if (v25)
  {
    uint64_t v34 = v50;
    uint64_t v35 = v50 + v33;
    sub_1000154E0((uint64_t)v9, v50 + v33, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)(v35 + *(int *)(sub_10000903C(&qword_1000A1298) + 36)) = 256;
    sub_1000155B0((uint64_t)v16, v34, &qword_1000A1200);
    sub_100015548((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    sub_100015614((uint64_t)v16, &qword_1000A1200);
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, enum case for Color.RGBColorSpace.sRGB(_:), v49);
    uint64_t v36 = sub_10008AFF0();
    sub_1000155B0(v34, (uint64_t)v23, &qword_1000A11F0);
    uint64_t v37 = (uint64_t *)&v23[*(int *)(v51 + 36)];
    *uint64_t v37 = v36;
    v37[1] = 0x4024000000000000;
    v37[2] = 0;
    v37[3] = 0;
    sub_100015614(v34, &qword_1000A11F0);
    uint64_t v38 = &qword_1000A11E0;
    uint64_t v39 = v46;
    sub_10001547C((uint64_t)v23, v46, &qword_1000A11E0);
    sub_1000155B0(v39, v53, &qword_1000A11E0);
    swift_storeEnumTagMultiPayload();
    sub_100014F24();
    sub_100014F54();
    sub_10008AAE0();
    uint64_t v40 = v39;
  }
  else
  {
    uint64_t v41 = (uint64_t)v45;
    int v42 = &v45[v33];
    sub_1000154E0((uint64_t)v9, (uint64_t)&v45[v33], (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v42[*(int *)(sub_10000903C(&qword_1000A1298) + 36)] = 256;
    sub_1000155B0((uint64_t)v16, v41, &qword_1000A1200);
    sub_100015548((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    sub_100015614((uint64_t)v16, &qword_1000A1200);
    uint64_t v38 = &qword_1000A11F0;
    uint64_t v43 = v50;
    sub_10001547C(v41, v50, &qword_1000A11F0);
    sub_1000155B0(v43, v53, &qword_1000A11F0);
    swift_storeEnumTagMultiPayload();
    sub_100014F24();
    sub_100014F54();
    sub_10008AAE0();
    uint64_t v40 = v43;
  }
  return sub_100015614(v40, v38);
}

uint64_t sub_100014DC0()
{
  uint64_t v1 = sub_10000903C(&qword_1000A11B8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000147B8(v0, (uint64_t)v3);
  sub_100014E78();
  sub_10008AE50();
  return sub_100015614((uint64_t)v3, &qword_1000A11B8);
}

unint64_t sub_100014E78()
{
  unint64_t result = qword_1000A11C0;
  if (!qword_1000A11C0)
  {
    sub_10000E49C(&qword_1000A11B8);
    sub_100015148(&qword_1000A11C8, &qword_1000A11D0, (void (*)(void))sub_100014F24, (void (*)(void))sub_100014F54);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A11C0);
  }
  return result;
}

uint64_t sub_100014F24()
{
  return sub_100015020(&qword_1000A11D8, &qword_1000A11E0, (void (*)(void))sub_100014F54);
}

unint64_t sub_100014F54()
{
  unint64_t result = qword_1000A11E8;
  if (!qword_1000A11E8)
  {
    sub_10000E49C(&qword_1000A11F0);
    sub_100015020(&qword_1000A11F8, &qword_1000A1200, (void (*)(void))sub_10001509C);
    sub_100015428(&qword_1000A1290, &qword_1000A1298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A11E8);
  }
  return result;
}

uint64_t sub_100015020(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000E49C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001509C()
{
  unint64_t result = qword_1000A1208;
  if (!qword_1000A1208)
  {
    sub_10000E49C(&qword_1000A1210);
    sub_100015148(&qword_1000A1218, &qword_1000A1220, (void (*)(void))sub_1000151D0, (void (*)(void))sub_1000152BC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1208);
  }
  return result;
}

uint64_t sub_100015148(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000E49C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000151D0()
{
  unint64_t result = qword_1000A1228;
  if (!qword_1000A1228)
  {
    sub_10000E49C(&qword_1000A1230);
    swift_getOpaqueTypeConformance2();
    sub_100015264();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1228);
  }
  return result;
}

unint64_t sub_100015264()
{
  unint64_t result = qword_1000A1238;
  if (!qword_1000A1238)
  {
    sub_10008AB80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1238);
  }
  return result;
}

unint64_t sub_1000152BC()
{
  unint64_t result = qword_1000A1240;
  if (!qword_1000A1240)
  {
    sub_10000E49C(&qword_1000A1248);
    sub_100015020(&qword_1000A1250, &qword_1000A1258, (void (*)(void))sub_100015388);
    sub_100015428(&qword_1000A1280, &qword_1000A1288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1240);
  }
  return result;
}

unint64_t sub_100015388()
{
  unint64_t result = qword_1000A1260;
  if (!qword_1000A1260)
  {
    sub_10000E49C(&qword_1000A1268);
    sub_100015428(&qword_1000A1270, &qword_1000A1278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1260);
  }
  return result;
}

uint64_t sub_100015428(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000E49C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001546C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10001547C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000903C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000154E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100015548(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000155B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000903C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100015614(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000903C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100015670()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for EpisodeListView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for EpisodeListView()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EpisodeListView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EpisodeListView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for EpisodeListView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for EpisodeListView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeListView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListView()
{
  return &type metadata for EpisodeListView;
}

uint64_t sub_1000158B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000158D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = sub_1000159D0(v3, *v1);
  unint64_t v8 = (v7 >> 1) - v6;
  if (__OFSUB__(v7 >> 1, v6))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = v5;
  int64_t v10 = v3 - v8;
  if (__OFSUB__(v3, v8))
  {
LABEL_10:
    __break(1u);
    return _swift_unknownObjectRelease(v4);
  }
  uint64_t v11 = v4;
  uint64_t v12 = v6;
  uint64_t v13 = v7;
  if (v10 < 1) {
    uint64_t v14 = (int64_t *)&_swiftEmptyArrayStorage;
  }
  else {
    uint64_t v14 = sub_10003138C(0, v10);
  }
  uint64_t v15 = v1[3];
  swift_bridgeObjectRetain();
  *(void *)a1 = sub_10008AA70();
  *(void *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v16 = sub_10000903C(&qword_1000A12C0);
  sub_100015A64(v11, v9, v12, v13, (uint64_t)v1, (uint64_t)v14, (char *)(a1 + *(int *)(v16 + 44)));
  swift_bridgeObjectRelease();
  uint64_t v4 = v11;

  return _swift_unknownObjectRelease(v4);
}

uint64_t sub_1000159D0(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      type metadata accessor for UpNextEntry.Episode(0);
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100015A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v48 = a7;
  uint64_t v47 = sub_10000903C(&qword_1000A12C8);
  uint64_t v45 = *(void *)(v47 - 8);
  uint64_t v13 = __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = sub_10000903C(&qword_1000A12D0);
  uint64_t v43 = *(void *)(v17 - 8);
  uint64_t v18 = v43;
  uint64_t v44 = v17;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v24 + 32) = v25;
  *(void *)(v24 + 48) = *(void *)(a5 + 32);
  swift_unknownObjectRetain();
  sub_100016434(a5);
  sub_10000903C(&qword_1000A12D8);
  type metadata accessor for EpisodeRowView();
  sub_100015428(&qword_1000A12E0, &qword_1000A12D8);
  sub_100016460(&qword_1000A12E8, (void (*)(uint64_t))type metadata accessor for EpisodeRowView);
  sub_100016460(&qword_1000A12F0, (void (*)(uint64_t))type metadata accessor for UpNextEntry.Episode);
  int v42 = v23;
  sub_10008B100();
  uint64_t v49 = a6;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_10000903C(&qword_1000A12F8);
  sub_100015428(&qword_1000A1300, &qword_1000A12F8);
  uint64_t v40 = v16;
  sub_10008B0F0();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v41 = v21;
  uint64_t v27 = v23;
  uint64_t v28 = v44;
  v26(v21, v27, v44);
  uint64_t v29 = v45;
  uint64_t v30 = v46;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v32 = v16;
  uint64_t v33 = v47;
  v31(v46, v32, v47);
  uint64_t v34 = v48;
  v26(v48, v21, v28);
  uint64_t v35 = sub_10000903C(&qword_1000A1308);
  v31(&v34[*(int *)(v35 + 48)], v30, v33);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v29 + 8);
  v36(v40, v33);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v43 + 8);
  v37(v42, v28);
  v36(v30, v33);
  return ((uint64_t (*)(char *, uint64_t))v37)(v41, v28);
}

uint64_t sub_100015ED4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v37 = sub_10000903C(&qword_1000A1310);
  __chkstk_darwin(v37);
  unint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000903C(&qword_1000A1318);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v36 = (void **)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v35 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v35 = (void **)((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = (int *)type metadata accessor for EpisodeRowView();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v19;
  sub_1000164A8(a1, (uint64_t)v19);
  sub_1000164A8(a1, (uint64_t)v13);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v24 = 1;
  v23(v13, 0, 1, v14);
  if (*(void *)(*(void *)v40 + 16))
  {
    sub_1000164A8(*(void *)v40 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), (uint64_t)v11);
    uint64_t v24 = 0;
  }
  v23(v11, v24, 1, v14);
  uint64_t v25 = (uint64_t)&v5[*(int *)(v37 + 48)];
  sub_10001650C((uint64_t)v13, (uint64_t)v5);
  sub_10001650C((uint64_t)v11, v25);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v26((uint64_t)v5, 1, v14) != 1)
  {
    uint64_t v27 = v36;
    sub_10001650C((uint64_t)v5, (uint64_t)v36);
    if (v26(v25, 1, v14) != 1)
    {
      uint64_t v28 = v35;
      sub_100016574(v25, (uint64_t)v35, type metadata accessor for UpNextEntry.Episode);
      char v29 = sub_10002D4F8(v27, v28);
      sub_1000165DC((uint64_t)v28);
      sub_100015614((uint64_t)v11, &qword_1000A1318);
      sub_100015614((uint64_t)v13, &qword_1000A1318);
      sub_1000165DC((uint64_t)v27);
      sub_100015614((uint64_t)v5, &qword_1000A1318);
      if (v29) {
        goto LABEL_10;
      }
LABEL_11:
      char v31 = 2;
      uint64_t v30 = v40;
      goto LABEL_12;
    }
    sub_100015614((uint64_t)v11, &qword_1000A1318);
    sub_100015614((uint64_t)v13, &qword_1000A1318);
    sub_1000165DC((uint64_t)v27);
LABEL_8:
    sub_100015614((uint64_t)v5, &qword_1000A1310);
    goto LABEL_11;
  }
  sub_100015614((uint64_t)v11, &qword_1000A1318);
  sub_100015614((uint64_t)v13, &qword_1000A1318);
  if (v26(v25, 1, v14) != 1) {
    goto LABEL_8;
  }
  sub_100015614((uint64_t)v5, &qword_1000A1318);
LABEL_10:
  uint64_t v30 = v40;
  char v31 = v40[16];
LABEL_12:
  uint64_t v32 = *((void *)v30 + 4);
  double v33 = *((double *)v30 + 3) * 0.5;
  sub_100016574((uint64_t)v38, (uint64_t)v22, type metadata accessor for UpNextEntry.Episode);
  *(void *)&v22[v20[5]] = v32;
  v22[v20[6]] = v31;
  type metadata accessor for EpisodeViewStyle();
  swift_storeEnumTagMultiPayload();
  *(double *)&v22[v20[8]] = v33;
  return sub_100016574((uint64_t)v22, v39, (uint64_t (*)(void))type metadata accessor for EpisodeRowView);
}

uint64_t sub_100016390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008AFB0();
  *a1 = result;
  return result;
}

uint64_t sub_1000163B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000158D0(a1);
}

uint64_t sub_1000163F4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10001642C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100015ED4(a1, (unsigned char *)(v2 + 16), a2);
}

uint64_t sub_100016434(uint64_t a1)
{
  return a1;
}

uint64_t sub_100016460(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000164A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UpNextEntry.Episode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001650C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016574(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000165DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UpNextEntry.Episode(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100016638()
{
  return sub_100015428(&qword_1000A1320, &qword_1000A1328);
}

unint64_t sub_100016678()
{
  unint64_t result = qword_1000A1330;
  if (!qword_1000A1330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1330);
  }
  return result;
}

unint64_t sub_1000166D4()
{
  unint64_t result = qword_1000A1338;
  if (!qword_1000A1338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1338);
  }
  return result;
}

unint64_t sub_10001672C()
{
  unint64_t result = qword_1000A1340;
  if (!qword_1000A1340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1340);
  }
  return result;
}

uint64_t sub_100016780()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001679C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000167EC()
{
  uint64_t v0 = sub_10008A040();
  sub_10001754C(v0, qword_1000A5730);
  sub_100017514(v0, (uint64_t)qword_1000A5730);
  return sub_10008A030();
}

uint64_t sub_100016850(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_10008A540();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_100016910, 0, 0);
}

uint64_t sub_100016910()
{
  sub_10008A510();
  uint64_t v1 = sub_10008A530();
  os_log_type_t v2 = sub_10008B4C0();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "This should never be called, this should run in app", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[3];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_100089ED0();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100016A24@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000A0F70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10008A040();
  uint64_t v3 = sub_100017514(v2, (uint64_t)qword_1000A5730);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100016AD4()
{
  return 0;
}

uint64_t sub_100016AE4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100016B7C;
  return sub_100016850(a1);
}

uint64_t sub_100016B7C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100016C70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100016FE4();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_100016C9C(uint64_t a1)
{
  unint64_t v2 = sub_10000E368();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100016CD8()
{
  return sub_100016F50();
}

uint64_t destroy for PlayPauseWidgetIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s14PodcastsWidget21PlayPauseWidgetIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PlayPauseWidgetIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for PlayPauseWidgetIntent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PlayPauseWidgetIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayPauseWidgetIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayPauseWidgetIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayPauseWidgetIntent()
{
  return &type metadata for PlayPauseWidgetIntent;
}

unint64_t sub_100016EF4()
{
  unint64_t result = qword_1000A1350;
  if (!qword_1000A1350)
  {
    sub_10000E49C(&qword_1000A1358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1350);
  }
  return result;
}

uint64_t sub_100016F50()
{
  return 1;
}

uint64_t sub_100016FE4()
{
  uint64_t v38 = sub_100089F10();
  uint64_t v0 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000903C(&qword_1000A1360);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A1368);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000903C(&qword_1000A1370);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10008A040();
  uint64_t v29 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_10000903C(&qword_1000A1378);
  sub_10008A030();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v26 = v12 + 56;
  uint64_t v36 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v24 = sub_10008B320();
  uint64_t v39 = 0;
  unint64_t v40 = 0;
  uint64_t v14 = *(void *)(v24 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v28 = v14 + 56;
  v25(v7, 1, 1, v24);
  uint64_t v34 = sub_100089EC0();
  uint64_t v15 = *(void *)(v34 - 8);
  double v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v35 = v15 + 56;
  v33(v4, 1, 1, v34);
  unsigned int v32 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v16 = *(void (**)(void))(v0 + 104);
  uint64_t v30 = v0 + 104;
  char v31 = (void (*)(char *, void, uint64_t))v16;
  uint64_t v17 = v38;
  v16(v37);
  uint64_t v27 = sub_100089F00();
  sub_10000903C(&qword_1000A1380);
  swift_retain();
  sub_10008A030();
  v36(v10, 1, 1, v29);
  uint64_t v39 = 0;
  unint64_t v40 = 0;
  uint64_t v19 = v24;
  uint64_t v18 = v25;
  v25(v7, 1, 1, v24);
  v33(v4, 1, 1, v34);
  uint64_t v20 = v37;
  v31(v37, v32, v17);
  sub_100089F00();
  swift_retain();
  sub_10008A030();
  v36(v10, 1, 1, v29);
  uint64_t v39 = 0;
  unint64_t v40 = 0;
  v18(v7, 1, 1, v19);
  v33(v4, 1, 1, v34);
  v31(v20, v32, v38);
  sub_100089F00();
  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  uint64_t v21 = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100089EF0();
  swift_release();
  swift_release_n();
  swift_release_n();
  return v21;
}

uint64_t sub_100017514(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_10001754C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1000175B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v47 = sub_100089F10();
  uint64_t v6 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A1360);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A1368);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000903C(&qword_1000A1370);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10008A040();
  uint64_t v38 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_10000903C(&qword_1000A1378);
  sub_10008A030();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v37(v17, 1, 1, v18);
  uint64_t v30 = sub_10008B320();
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t v20 = *(void *)(v30 - 8);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v39 = v20 + 56;
  v46(v14, 1, 1, v30);
  uint64_t v44 = sub_100089EC0();
  uint64_t v21 = *(void *)(v44 - 8);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v45 = v21 + 56;
  v43(v11, 1, 1, v44);
  unsigned int v42 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v22 = *(void (**)(void))(v6 + 104);
  uint64_t v40 = v6 + 104;
  uint64_t v41 = (void (*)(char *, void, uint64_t))v22;
  uint64_t v29 = v8;
  uint64_t v23 = v47;
  v22(v8);
  uint64_t v24 = v11;
  uint64_t v25 = sub_100089F00();
  sub_10000903C(&qword_1000A1380);
  swift_retain();
  sub_10008A030();
  v37(v17, 1, 1, v38);
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t v26 = v30;
  v46(v14, 1, 1, v30);
  v43(v24, 1, 1, v44);
  uint64_t v27 = v29;
  v41(v29, v42, v23);
  sub_100089F00();
  swift_retain();
  sub_10008A030();
  v37(v17, 1, 1, v38);
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  v46(v14, 1, 1, v26);
  v43(v24, 1, 1, v44);
  v41(v27, v42, v47);
  sub_100089F00();
  uint64_t v48 = v31;
  uint64_t v49 = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100089EF0();
  swift_release();
  swift_release();
  uint64_t v48 = v33;
  uint64_t v49 = v34;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100089EF0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v48 = v35;
  uint64_t v49 = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100089EF0();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  return v25;
}

uint64_t sub_100017B88(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v25 = sub_10008AD60();
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10008AD80();
  uint64_t v3 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10008A840();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10008ADB0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10008A170();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008A470();
  char v14 = sub_10008A460();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v26, v10);
  if (v14)
  {
    sub_10008AD90();
  }
  else
  {
    sub_10008A470();
    sub_10008A450();
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v2, enum case for Text.DateStyle.UnitsConfiguration.Style.short(_:), v25);
    sub_10008AD70();
    sub_10008ADA0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  }
  uint64_t v15 = sub_10008ADC0();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_10008A830();
  uint64_t v20 = sub_10008AD20();
  sub_10001546C(v15, v17, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
  return v20;
}

uint64_t sub_100017F20()
{
  uint64_t v0 = sub_10008B770();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  uint64_t v34 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10008B680();
  uint64_t v25 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10008B790();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10008B7B0();
  uint64_t v26 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008B7C0();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10008B740();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10008B750();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  char v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008A470();
  if (sub_10008A460())
  {
    sub_10008A4A0();
    sub_10008B7E0();
    sub_10008B730();
    sub_100089F20();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_10001879C(&qword_1000A1398, (void (*)(uint64_t))&type metadata accessor for Duration.TimeFormatStyle);
    sub_10008B7D0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    sub_10008A4A0();
    sub_10008B7E0();
    sub_10008A470();
    sub_10008A440();
    sub_10008B7A0();
    uint64_t v19 = v25;
    uint64_t v20 = v28;
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v3, enum case for FloatingPointRoundingRule.down(_:), v28);
    uint64_t v21 = v27;
    sub_10008B780();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v20);
    uint64_t v22 = v34;
    sub_10008B760();
    sub_100089F30();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v36);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v33);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v29);
    sub_10001879C(&qword_1000A1390, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
    uint64_t v23 = v31;
    sub_10008B7D0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v23);
  }
  return v37;
}

uint64_t sub_1000184D8()
{
  uint64_t v0 = sub_10008A1C0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10008B340();
  __chkstk_darwin(v1 - 8);
  sub_10008B330();
  sub_10008A1B0();
  return sub_10008B370();
}

uint64_t sub_10001879C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000187E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v120 = a3;
  uint64_t v121 = a1;
  uint64_t v4 = sub_10008A1F0();
  uint64_t v118 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v117 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10008A200();
  uint64_t v119 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v116 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008A1D0();
  v112 = *(void (**)(char *, uint64_t))(v8 - 8);
  uint64_t v113 = v8;
  __chkstk_darwin(v8);
  uint64_t v111 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10008A250();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v114 = v10;
  uint64_t v115 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000903C(&qword_1000A1038);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v109 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v85 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v85 - v20;
  uint64_t v22 = sub_10008A170();
  __chkstk_darwin(v22);
  uint64_t v24 = __chkstk_darwin((char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v85 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v85 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v37 = (char *)&v85 - v36;
  if (*(void *)(a2 + 16))
  {
    uint64_t v103 = v32;
    uint64_t v104 = v35;
    uint64_t v106 = v34;
    uint64_t v107 = v4;
    uint64_t v110 = v13;
    uint64_t v38 = v33;
    sub_10002013C(a2, (uint64_t)v21);
    uint64_t v39 = v38 + 48;
    id v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    if (v108(v21, 1, v22) == 1)
    {
      uint64_t v100 = v38;
      sub_1000192BC((uint64_t)v21);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v21, v22);
      sub_10008A110();
      if (sub_10008A120())
      {
        sub_10008A0A0();
        sub_10008B280();
        uint64_t v40 = *(void (**)(char *, uint64_t))(v38 + 8);
        v40(v31, v22);
        return ((uint64_t (*)(char *, uint64_t))v40)(v37, v22);
      }
      uint64_t v100 = v38;
      unsigned int v42 = *(void (**)(char *, uint64_t))(v38 + 8);
      v42(v31, v22);
      v42(v37, v22);
    }
    uint64_t v43 = v118;
    uint64_t v44 = v119;
    if (sub_10001931C(v121, a2))
    {
      uint64_t v99 = v28;
      sub_10008A230();
      uint64_t v46 = v111;
      uint64_t v45 = v112;
      uint64_t v47 = (void (*)(void))*((void *)v112 + 13);
      unsigned int v96 = enum case for Calendar.MatchingPolicy.nextTime(_:);
      uint64_t v105 = v19;
      uint64_t v48 = v113;
      uint64_t v97 = (char *)v112 + 104;
      uint64_t v95 = (void (*)(char *, void, uint64_t))v47;
      v47(v111);
      uint64_t v49 = *(void (**)(void))(v44 + 104);
      uint64_t v102 = v22;
      uint64_t v50 = v116;
      unsigned int v93 = enum case for Calendar.RepeatedTimePolicy.first(_:);
      uint64_t v94 = v44 + 104;
      uint64_t v92 = (void (*)(char *, void, uint64_t))v49;
      v49(v116);
      uint64_t v51 = v43 + 104;
      uint64_t v52 = *(void (**)(void))(v43 + 104);
      uint64_t v53 = v43;
      uint64_t v54 = v117;
      unsigned int v90 = enum case for Calendar.SearchDirection.forward(_:);
      uint64_t v101 = v39;
      uint64_t v55 = v107;
      uint64_t v91 = v51;
      int v89 = (void (*)(char *, void, uint64_t))v52;
      v52(v117);
      sub_10008A210();
      uint64_t v56 = v54;
      uint64_t v57 = v53 + 8;
      int v88 = *(void (**)(char *, uint64_t))(v53 + 8);
      v88(v56, v55);
      int v58 = *(void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v59 = v50;
      uint64_t v60 = v102;
      uint64_t v98 = v6;
      uint64_t v119 = v44 + 8;
      char v87 = v58;
      v58(v59, v6);
      uint64_t v61 = (void (*)(char *, uint64_t))*((void *)v45 + 1);
      uint64_t v62 = v48;
      uint64_t v63 = v48;
      uint64_t v64 = (uint64_t)v105;
      v61(v46, v63);
      if (v108((char *)v64, 1, v60) == 1)
      {
        (*(void (**)(char *, uint64_t))(v115 + 8))(v110, v114);
        sub_1000192BC(v64);
      }
      else
      {
        uint64_t v118 = v57;
        uint64_t v65 = v100;
        int v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 32);
        uint64_t v105 = (char *)(v100 + 32);
        uint64_t v86 = v66;
        v66((uint64_t)v99, v64, v60);
        uint64_t v67 = v62;
        v95(v46, v96, v62);
        uint64_t v68 = v116;
        v112 = v61;
        uint64_t v69 = v98;
        v92(v116, v93, v98);
        int v70 = v117;
        v89(v117, v90, v55);
        uint64_t v71 = (uint64_t)v109;
        sub_10008A210();
        v88(v70, v55);
        uint64_t v72 = v68;
        uint64_t v73 = v102;
        v87(v72, v69);
        v112(v46, v67);
        if (v108((char *)v71, 1, v73) == 1)
        {
          (*(void (**)(char *, uint64_t))(v65 + 8))(v99, v73);
          (*(void (**)(char *, uint64_t))(v115 + 8))(v110, v114);
          sub_1000192BC(v71);
        }
        else
        {
          uint64_t v74 = v106;
          v86(v106, v71, v73);
          sub_1000199F8();
          uint64_t v75 = v121;
          int v76 = v99;
          char v77 = sub_10008B2F0();
          uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16);
          uint64_t v79 = v104;
          v78(v104, v75, v73);
          uint64_t v80 = v103;
          v78(v103, v74, v73);
          if (v77)
          {
            uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
            v81(v80, v73);
            v81(v79, v73);
            uint64_t v82 = v110;
          }
          else
          {
            char v83 = sub_10008A130();
            uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
            v81(v80, v73);
            v81(v79, v73);
            uint64_t v82 = v110;
            if (v83)
            {
              uint64_t v84 = v106;
              sub_10008A0A0();
              sub_10008B280();
              v81(v84, v73);
              v81((uint64_t)v76, v73);
              return (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v82, v114);
            }
          }
          v81(v106, v73);
          v81((uint64_t)v76, v73);
          (*(void (**)(char *, uint64_t))(v115 + 8))(v82, v114);
        }
      }
    }
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return sub_10008B280();
}

uint64_t sub_1000192BC(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A1038);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001931C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008A240();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v62 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10008A250();
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v60 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A1038);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v59 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v54 - v16;
  __chkstk_darwin(v15);
  uint64_t v64 = (char *)&v54 - v18;
  uint64_t v19 = sub_10008A170();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v55 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v71 = (char *)&v54 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v67 = (char *)&v54 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v65 = (char *)&v54 - v28;
  uint64_t v29 = *(void *)(a2 + 16);
  uint64_t v68 = v26;
  uint64_t v69 = v27;
  if (v29)
  {
    uint64_t v56 = v5;
    uint64_t v57 = a1;
    uint64_t v58 = v4;
    uint64_t v30 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v70 = *(void *)(v9 + 72);
    uint64_t v31 = (unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v27 + 32);
    uint64_t v54 = a2;
    swift_bridgeObjectRetain();
    uint64_t v33 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v66 = v8;
    do
    {
      sub_1000164A8(v30, (uint64_t)v11);
      sub_100019A50((uint64_t)&v11[*(int *)(v8 + 40)], (uint64_t)v17);
      sub_1000165DC((uint64_t)v11);
      if ((*v31)(v17, 1, v19) == 1)
      {
        sub_1000192BC((uint64_t)v17);
      }
      else
      {
        uint64_t v34 = *v32;
        uint64_t v35 = v67;
        (*v32)(v67, v17, v19);
        v34(v71, v35, v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v33 = (char *)sub_10007F66C(0, *((void *)v33 + 2) + 1, 1, (unint64_t)v33);
        }
        unint64_t v37 = *((void *)v33 + 2);
        unint64_t v36 = *((void *)v33 + 3);
        if (v37 >= v36 >> 1) {
          uint64_t v33 = (char *)sub_10007F66C(v36 > 1, v37 + 1, 1, (unint64_t)v33);
        }
        *((void *)v33 + 2) = v37 + 1;
        uint64_t v19 = v68;
        v34(&v33[((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v37], v71, v68);
        uint64_t v8 = v66;
      }
      v30 += v70;
      --v29;
    }
    while (v29);
    uint64_t v26 = swift_bridgeObjectRelease();
    a1 = v57;
    uint64_t v38 = v58;
    uint64_t v39 = v56;
  }
  else
  {
    uint64_t v39 = v5;
    uint64_t v38 = v4;
    uint64_t v33 = (char *)&_swiftEmptyArrayStorage;
  }
  __chkstk_darwin(v26);
  *(&v54 - 2) = a1;
  uint64_t v40 = sub_100019AE8((uint64_t (*)(char *))sub_100019AB8, (uint64_t)(&v54 - 4), (uint64_t)v33);
  uint64_t v41 = v64;
  sub_100019EA0(v40, v64);
  swift_bridgeObjectRelease();
  uint64_t v42 = v69;
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  uint64_t v44 = v68;
  if (v43(v41, 1, v68) == 1)
  {
    uint64_t v45 = (uint64_t)v41;
  }
  else
  {
    uint64_t v71 = *(char **)(v42 + 32);
    ((void (*)(char *, char *, uint64_t))v71)(v65, v41, v44);
    uint64_t v46 = v60;
    sub_10008A230();
    uint64_t v47 = v62;
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v62, enum case for Calendar.Component.day(_:), v38);
    uint64_t v48 = v59;
    sub_10008A220();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v47, v38);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v63);
    if (v43(v48, 1, v44) != 1)
    {
      uint64_t v50 = v55;
      ((void (*)(char *, char *, uint64_t))v71)(v55, v48, v44);
      uint64_t v51 = v65;
      char v49 = sub_10008A120();
      uint64_t v52 = *(void (**)(char *, uint64_t))(v69 + 8);
      v52(v50, v44);
      v52(v51, v44);
      return v49 & 1;
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v44);
    uint64_t v45 = (uint64_t)v48;
  }
  sub_1000192BC(v45);
  char v49 = 0;
  return v49 & 1;
}

unint64_t sub_1000199F8()
{
  unint64_t result = qword_1000A13A0;
  if (!qword_1000A13A0)
  {
    sub_10008A170();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A13A0);
  }
  return result;
}

uint64_t sub_100019A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100019AB8()
{
  return sub_10008A130() & 1;
}

uint64_t sub_100019AE8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v6 = sub_10000903C(&qword_1000A1038);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10008A170();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v45 = (char *)&v30 - v14;
  uint64_t v46 = &_swiftEmptyArrayStorage;
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unint64_t v15 = 0;
    uint64_t v39 = v10 + 48;
    uint64_t v44 = (void (**)(char *))(v10 + 32);
    uint64_t v40 = v10 + 56;
    uint64_t v41 = v10 + 16;
    unint64_t v32 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v33 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v36 = v10;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9);
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v18(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_17;
      }
      uint64_t v35 = v18;
      uint64_t v19 = a3;
      uint64_t v20 = v8;
      uint64_t v21 = v45;
      uint64_t v22 = *v44;
      uint64_t v23 = v20;
      (*v44)(v45);
      char v24 = v42(v21);
      if (v4)
      {
        (*v33)(v45, v9);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if (v24)
      {
        ((void (*)(char *, char *, uint64_t))v22)(v37, v45, v9);
        uint64_t v25 = v46;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100040CE8(0, v25[2] + 1, 1);
          uint64_t v25 = v46;
        }
        unint64_t v28 = v25[2];
        unint64_t v27 = v25[3];
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          unint64_t v31 = v28 + 1;
          sub_100040CE8(v27 > 1, v28 + 1, 1);
          unint64_t v29 = v31;
          uint64_t v25 = v46;
        }
        v25[2] = v29;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v22)((char *)v25 + v16 + v28 * v17, v37, v9);
        uint64_t v46 = v25;
        uint64_t v4 = v34;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v33)(v45, v9);
      }
      a3 = v19;
      ++v15;
      uint64_t v8 = v23;
      uint64_t v10 = v36;
      if (v38 == v15)
      {
        v35(v23, 1, 1, v9);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1000192BC((uint64_t)v8);
    return (uint64_t)v46;
  }
  return result;
}

uint64_t sub_100019EA0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1038);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_10008A170();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    uint64_t v19 = v38;
LABEL_5:
    sub_1000192BC((uint64_t)v9);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  uint64_t v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    char v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_1000199F8();
      char v27 = sub_10008B2F0();
      unint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1000192BC((uint64_t)v7);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

ValueMetadata *type metadata accessor for PodcastsWidgetInfo()
{
  return &type metadata for PodcastsWidgetInfo;
}

void sub_10001A294()
{
  qword_1000A5748 = 0x7478654E7055;
  unk_1000A5750 = 0xE600000000000000;
}

void sub_10001A2B4()
{
  qword_1000A5758 = 0x7478654E207055;
  unk_1000A5760 = 0xE700000000000000;
}

ValueMetadata *type metadata accessor for HSpacer()
{
  return &type metadata for HSpacer;
}

uint64_t sub_10001A2E8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10001A304@<D0>(uint64_t a1@<X8>)
{
  sub_10008B130();
  sub_10008A6A0();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a1 + 48) = v7;
  return result;
}

unint64_t sub_10001A394()
{
  unint64_t result = qword_1000A13A8;
  if (!qword_1000A13A8)
  {
    sub_10000E49C(&qword_1000A13B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A13A8);
  }
  return result;
}

uint64_t sub_10001A408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10008A540();
  __chkstk_darwin(v2);
  id v3 = [self _applePodcastsFoundationSharedUserDefaults];
  NSString v4 = sub_10008B350();
  id v5 = [v3 dataForKey:v4];

  if (v5)
  {
    uint64_t v6 = sub_10008A060();
    unint64_t v8 = v7;

    sub_100089F60();
    swift_allocObject();
    sub_10001F210(v6, v8);
    sub_100089F50();
    type metadata accessor for WidgetNowPlayingInfo();
    sub_10001F268(&qword_1000A14D8, (void (*)(uint64_t))type metadata accessor for WidgetNowPlayingInfo);
    sub_100089F40();
    swift_release();
    sub_10001F2B0(v6, v8);
    return sub_10001F2B0(v6, v8);
  }
  else
  {
    uint64_t v10 = (int *)type metadata accessor for WidgetNowPlayingInfo();
    uint64_t v11 = a1 + v10[6];
    uint64_t v12 = sub_10008A170();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    v13(v11, 1, 1, v12);
    v13(a1 + v10[7], 1, 1, v12);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(a1 + v10[10], 1, 1, v12);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 0;
    uint64_t v14 = a1 + v10[8];
    *(void *)uint64_t v14 = 0;
    *(unsigned char *)(v14 + 8) = 1;
    uint64_t v15 = a1 + v10[9];
    *(void *)uint64_t v15 = 0;
    *(unsigned char *)(v15 + 8) = 1;
  }
  return result;
}

void WidgetNowPlayingInfo.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10008A170();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v35 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A1038);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v34 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - v11;
  if (*(void *)(v0 + 8))
  {
    sub_10008B6E0(1u);
    swift_bridgeObjectRetain();
    sub_10008B3A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10008B6E0(0);
  }
  sub_10008B6E0(*(unsigned char *)(v0 + 16));
  uint64_t v13 = (int *)type metadata accessor for WidgetNowPlayingInfo();
  sub_100019A50(v0 + v13[6], (uint64_t)v12);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v15 = v14(v12, 1, v2);
  uint64_t v33 = v3;
  if (v15 == 1)
  {
    sub_10008B6E0(0);
  }
  else
  {
    unint64_t v16 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v32 = v14;
    uint64_t v17 = v35;
    v16(v35, v12, v2);
    sub_10008B6E0(1u);
    sub_10001F268(&qword_1000A13B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10008B2D0();
    unint64_t v18 = v17;
    uint64_t v14 = v32;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v2);
  }
  sub_100019A50(v0 + v13[7], (uint64_t)v10);
  if (v14(v10, 1, v2) == 1)
  {
    sub_10008B6E0(0);
  }
  else
  {
    uint64_t v19 = v33;
    uint64_t v20 = v14;
    uint64_t v21 = v35;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v35, v10, v2);
    sub_10008B6E0(1u);
    sub_10001F268(&qword_1000A13B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10008B2D0();
    uint64_t v22 = v21;
    uint64_t v14 = v20;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v2);
  }
  uint64_t v23 = v0 + v13[8];
  if (*(unsigned char *)(v23 + 8) == 1)
  {
    sub_10008B6E0(0);
  }
  else
  {
    Swift::UInt64 v24 = *(void *)v23;
    sub_10008B6E0(1u);
    if ((v24 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v25 = v24;
    }
    else {
      Swift::UInt64 v25 = 0;
    }
    sub_10008B6F0(v25);
  }
  uint64_t v26 = v0 + v13[9];
  if (*(unsigned char *)(v26 + 8) == 1)
  {
    sub_10008B6E0(0);
  }
  else
  {
    Swift::UInt64 v27 = *(void *)v26;
    sub_10008B6E0(1u);
    if ((v27 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v28 = v27;
    }
    else {
      Swift::UInt64 v28 = 0;
    }
    sub_10008B6F0(v28);
  }
  uint64_t v29 = v34;
  sub_100019A50(v1 + v13[10], v34);
  if (v14((char *)v29, 1, v2) == 1)
  {
    sub_10008B6E0(0);
  }
  else
  {
    uint64_t v30 = v33;
    uint64_t v31 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v35, v29, v2);
    sub_10008B6E0(1u);
    sub_10001F268(&qword_1000A13B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10008B2D0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v2);
  }
}

uint64_t type metadata accessor for WidgetNowPlayingInfo()
{
  uint64_t result = qword_1000A1448;
  if (!qword_1000A1448) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10001ADB4(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6979616C507369;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x616D6552656D6974;
      break;
    case 5:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_10001AE9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10001AEB0()
{
  Swift::UInt v1 = *v0;
  sub_10008B6C0();
  sub_10008B6D0(v1);
  return sub_10008B700();
}

void sub_10001AEF8()
{
  sub_10008B6D0(*v0);
}

Swift::Int sub_10001AF24()
{
  Swift::UInt v1 = *v0;
  sub_10008B6C0();
  sub_10008B6D0(v1);
  return sub_10008B700();
}

unint64_t sub_10001AF68()
{
  return sub_10001ADB4(*v0);
}

uint64_t sub_10001AF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10001EE94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10001AF98()
{
  return 0;
}

void sub_10001AFA4(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_10001AFB0(uint64_t a1)
{
  unint64_t v2 = sub_10001D634();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001AFEC(uint64_t a1)
{
  unint64_t v2 = sub_10001D634();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WidgetNowPlayingInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10000903C(&qword_1000A13C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001D5F0(a1, a1[3]);
  sub_10001D634();
  sub_10008B720();
  char v15 = 0;
  sub_10008B620();
  if (!v1)
  {
    char v14 = 1;
    sub_10008B650();
    type metadata accessor for WidgetNowPlayingInfo();
    char v13 = 2;
    sub_10008A170();
    sub_10001F268(&qword_1000A13D0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10008B640();
    char v12 = 3;
    sub_10008B640();
    char v11 = 4;
    sub_10008B630();
    char v10 = 5;
    sub_10008B630();
    char v9 = 6;
    sub_10008B640();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int WidgetNowPlayingInfo.hashValue.getter()
{
  return sub_10008B700();
}

uint64_t WidgetNowPlayingInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_10000903C(&qword_1000A1038);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - v7;
  __chkstk_darwin(v6);
  char v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_10000903C(&qword_1000A13D8);
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  __chkstk_darwin(v11);
  char v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = (int *)type metadata accessor for WidgetNowPlayingInfo();
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v35 = a1;
  sub_10001D5F0(a1, v17);
  sub_10001D634();
  uint64_t v18 = v36;
  sub_10008B710();
  if (v18) {
    return sub_10001F160((uint64_t)v35);
  }
  uint64_t v19 = (uint64_t)v8;
  uint64_t v20 = v33;
  char v43 = 0;
  *(void *)unint64_t v16 = sub_10008B5E0();
  *((void *)v16 + 1) = v21;
  char v42 = 1;
  v16[16] = sub_10008B610() & 1;
  sub_10008A170();
  char v41 = 2;
  uint64_t v22 = sub_10001F268(&qword_1000A13E0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10008B600();
  sub_10001D688((uint64_t)v10, (uint64_t)&v16[v14[6]]);
  char v40 = 3;
  sub_10008B600();
  uint64_t v36 = v22;
  sub_10001D688(v19, (uint64_t)&v16[v14[7]]);
  char v39 = 4;
  uint64_t v23 = sub_10008B5F0();
  Swift::UInt64 v24 = &v16[v14[8]];
  *(void *)Swift::UInt64 v24 = v23;
  v24[8] = v25 & 1;
  char v38 = 5;
  uint64_t v26 = sub_10008B5F0();
  Swift::UInt64 v27 = &v16[v14[9]];
  *(void *)Swift::UInt64 v27 = v26;
  v27[8] = v28 & 1;
  char v37 = 6;
  uint64_t v29 = (uint64_t)v32;
  sub_10008B600();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v34);
  sub_10001D688(v29, (uint64_t)&v16[v14[10]]);
  sub_10001D6F0((uint64_t)v16, v31);
  sub_10001F160((uint64_t)v35);
  return sub_10001D754((uint64_t)v16);
}

uint64_t sub_10001B7D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetNowPlayingInfo.init(from:)(a1, a2);
}

uint64_t sub_10001B7F0(void *a1)
{
  return WidgetNowPlayingInfo.encode(to:)(a1);
}

Swift::Int sub_10001B80C()
{
  return sub_10008B700();
}

Swift::Void __swiftcall WidgetNowPlayingInfo.logInfo()()
{
  uint64_t v1 = sub_10008A100();
  uint64_t v60 = *(void *)(v1 - 8);
  uint64_t v61 = v1;
  __chkstk_darwin(v1);
  uint64_t v59 = (uint64_t)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000903C(&qword_1000A1038);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v66 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v64 = (uint64_t)&v53 - v6;
  uint64_t v7 = type metadata accessor for WidgetNowPlayingInfo();
  uint64_t v8 = __chkstk_darwin(v7);
  char v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v68 = (uint64_t)&v53 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v53 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (uint64_t *)((char *)&v53 - v16);
  uint64_t v18 = sub_10008A540();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + *(int *)(v7 + 36) + 8))
  {
    unint64_t v22 = 0xE300000000000000;
    uint64_t v63 = 7104878;
  }
  else
  {
    uint64_t v63 = sub_10008B460();
    unint64_t v22 = v23;
  }
  char v24 = *(unsigned char *)(v0 + *(int *)(v7 + 32) + 8);
  uint64_t v65 = v7;
  if (v24)
  {
    unint64_t v25 = 0xE300000000000000;
    uint64_t v62 = 7104878;
  }
  else
  {
    uint64_t v62 = sub_10008B460();
    unint64_t v25 = v26;
  }
  sub_10008A510();
  sub_10001D6F0(v0, (uint64_t)v17);
  sub_10001D6F0(v0, (uint64_t)v15);
  uint64_t v27 = v68;
  sub_10001D6F0(v0, v68);
  sub_10001D6F0(v0, (uint64_t)v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v28 = sub_10008A530();
  int v58 = sub_10008B4E0();
  if (os_log_type_enabled(v28, (os_log_type_t)v58))
  {
    os_log_t v57 = v28;
    uint64_t v67 = v10;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v70 = v53;
    *(_DWORD *)uint64_t v29 = 136447490;
    unint64_t v30 = v17[1];
    uint64_t v31 = v65;
    uint64_t v55 = v19;
    uint64_t v56 = v18;
    uint64_t v54 = v21;
    if (v30)
    {
      uint64_t v32 = *v17;
      unint64_t v33 = v30;
    }
    else
    {
      unint64_t v33 = 0xE300000000000000;
      uint64_t v32 = 7104878;
    }
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_10001C4D0(v32, v33, &v70);
    sub_10008B540();
    swift_bridgeObjectRelease();
    sub_10001D754((uint64_t)v17);
    *(_WORD *)(v29 + 12) = 1024;
    int v34 = v15[16];
    sub_10001D754((uint64_t)v15);
    LODWORD(v69) = v34;
    sub_10008B540();
    *(_WORD *)(v29 + 18) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_10001C4D0(v63, v22, &v70);
    sub_10008B540();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 28) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_10001C4D0(v62, v25, &v70);
    sub_10008B540();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 38) = 2082;
    uint64_t v35 = v64;
    sub_100019A50(v68 + *(int *)(v31 + 24), v64);
    uint64_t v36 = sub_10008A170();
    uint64_t v37 = *(void *)(v36 - 8);
    char v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
    if (v38(v35, 1, v36) == 1)
    {
      sub_100015614(v35, &qword_1000A1038);
      unint64_t v39 = 0xE300000000000000;
      uint64_t v40 = 7104878;
    }
    else
    {
      uint64_t v41 = v59;
      sub_10001BFE4(v59);
      uint64_t v40 = sub_10008A090();
      unint64_t v39 = v42;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v41, v61);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
    }
    uint64_t v43 = v56;
    uint64_t v69 = sub_10001C4D0(v40, v39, &v70);
    sub_10008B540();
    swift_bridgeObjectRelease();
    sub_10001D754(v68);
    *(_WORD *)(v29 + 48) = 2082;
    uint64_t v44 = v66;
    sub_100019A50((uint64_t)&v67[*(int *)(v31 + 28)], v66);
    if (v38(v44, 1, v36) == 1)
    {
      sub_100015614(v44, &qword_1000A1038);
      unint64_t v45 = 0xE300000000000000;
      uint64_t v47 = v54;
      uint64_t v46 = v55;
      uint64_t v48 = 7104878;
    }
    else
    {
      uint64_t v49 = v59;
      sub_10001BFE4(v59);
      uint64_t v48 = sub_10008A090();
      unint64_t v45 = v50;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v49, v61);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v44, v36);
      uint64_t v47 = v54;
      uint64_t v46 = v55;
    }
    os_log_type_t v51 = v58;
    uint64_t v69 = sub_10001C4D0(v48, v45, &v70);
    sub_10008B540();
    swift_bridgeObjectRelease();
    sub_10001D754((uint64_t)v67);
    os_log_t v52 = v57;
    _os_log_impl((void *)&_mh_execute_header, v57, v51, "WidgetNowPlayingInfo: %{public}s, isPlaying: %{BOOL}d, duration %{public}s, timeRemaining %{public}s, start %{public}s, end %{public}s", (uint8_t *)v29, 0x3Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v43);
  }
  else
  {
    sub_10001D754((uint64_t)v15);
    sub_10001D754((uint64_t)v17);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_10001D754(v27);
    sub_10001D754((uint64_t)v10);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
}

uint64_t sub_10001BFE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_10000903C(&qword_1000A14B8);
  __chkstk_darwin(v1 - 8);
  uint64_t v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10008A270();
  uint64_t v3 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  unint64_t v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10008A0F0();
  uint64_t v5 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008A0D0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10008A0B0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10008A0C0();
  __chkstk_darwin(v16);
  (*(void (**)(char *, void))(v18 + 104))((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Date.ISO8601FormatStyle.DateSeparator.dash(_:));
  uint64_t v19 = v12;
  uint64_t v20 = v28;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Date.ISO8601FormatStyle.DateTimeSeparator.standard(_:), v19);
  uint64_t v21 = v7;
  unint64_t v22 = v29;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Date.ISO8601FormatStyle.TimeSeparator.colon(_:), v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v21, enum case for Date.ISO8601FormatStyle.TimeZoneSeparator.omitted(_:), v27);
  sub_10008A260();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v22, 1, v20);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v25, v22, v20);
    return sub_10008A0E0();
  }
  return result;
}

uint64_t sub_10001C3E4(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_10001C3F4(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_10001C430(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10001C458(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_10001C4D0(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_10008B540();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_10001C4D0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10001C5A4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10001F1B0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10001F1B0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10001F160((uint64_t)v12);
  return v7;
}

uint64_t sub_10001C5A4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_10008B550();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10001C760(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_10008B5A0();
  if (!v8)
  {
    sub_10008B5B0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_10008B5D0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10001C760(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10001C7F8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10001C9D8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10001C9D8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10001C7F8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10001C970(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_10008B580();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_10008B5B0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_10008B3C0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_10008B5D0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_10008B5B0();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10001C970(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000903C(&qword_1000A14C0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10001C9D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000903C(&qword_1000A14C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

unsigned char **sub_10001CB28(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  unsigned char *v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

BOOL _s14PodcastsWidget0B14NowPlayingInfoV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008A170();
  uint64_t v109 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v106 = &v93[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v108 = sub_10000903C(&qword_1000A14C8);
  uint64_t v6 = __chkstk_darwin(v108);
  uint64_t v104 = &v93[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v107 = &v93[-v9];
  __chkstk_darwin(v8);
  size_t v11 = &v93[-v10];
  uint64_t v12 = sub_10000903C(&qword_1000A1038);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v105 = &v93[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = &v93[-v18];
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v21 = __chkstk_darwin(v20);
  unint64_t v23 = &v93[-v22];
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = &v93[-v26];
  __chkstk_darwin(v25);
  unint64_t v33 = &v93[-v32];
  uint64_t v34 = *(void *)(a1 + 8);
  uint64_t v110 = a2;
  uint64_t v35 = *(void *)(a2 + 8);
  if (!v34)
  {
    if (v35) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v35) {
    return 0;
  }
  if (*(void *)a1 == *(void *)v110 && v34 == v35) {
    goto LABEL_8;
  }
  uint64_t v36 = v28;
  uint64_t v102 = v23;
  uint64_t v37 = a1;
  char v38 = v11;
  uint64_t v39 = v31;
  uint64_t v40 = v29;
  uint64_t v41 = v30;
  char v42 = sub_10008B690();
  uint64_t v28 = v36;
  uint64_t v30 = v41;
  uint64_t v29 = v40;
  uint64_t v31 = v39;
  size_t v11 = v38;
  a1 = v37;
  unint64_t v23 = v102;
  char v43 = v42;
  BOOL result = 0;
  if (v43)
  {
LABEL_8:
    if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(v110 + 16)) {
      return 0;
    }
    uint64_t v102 = (unsigned char *)v28;
    unsigned int v96 = v19;
    uint64_t v97 = v31;
    uint64_t v99 = v30;
    uint64_t v95 = v29;
    uint64_t v45 = type metadata accessor for WidgetNowPlayingInfo();
    sub_100019A50(a1 + *(int *)(v45 + 24), (uint64_t)v33);
    uint64_t v100 = (int *)v45;
    sub_100019A50(v110 + *(int *)(v45 + 24), (uint64_t)v27);
    uint64_t v46 = (uint64_t)&v11[*(int *)(v108 + 48)];
    sub_100019A50((uint64_t)v33, (uint64_t)v11);
    sub_100019A50((uint64_t)v27, v46);
    uint64_t v48 = v109 + 48;
    uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
    uint64_t v101 = v4;
    uint64_t v103 = v47;
    if (v47((uint64_t)v11, 1, v4) == 1)
    {
      uint64_t v98 = v11;
      uint64_t v102 = v23;
      sub_100015614((uint64_t)v27, &qword_1000A1038);
      uint64_t v49 = v103;
      sub_100015614((uint64_t)v33, &qword_1000A1038);
      uint64_t v50 = v46;
      uint64_t v51 = v101;
      if (v49(v50, 1, v101) == 1)
      {
        sub_100015614((uint64_t)v98, &qword_1000A1038);
        uint64_t v52 = v51;
        unint64_t v23 = v102;
LABEL_16:
        uint64_t v60 = v100;
        sub_100019A50(a1 + v100[7], (uint64_t)v23);
        uint64_t v61 = v99;
        sub_100019A50(v110 + v60[7], v99);
        uint64_t v62 = v107;
        uint64_t v63 = (uint64_t)&v107[*(int *)(v108 + 48)];
        sub_100019A50((uint64_t)v23, (uint64_t)v107);
        sub_100019A50(v61, v63);
        if (v103((uint64_t)v62, 1, v52) == 1)
        {
          uint64_t v102 = (unsigned char *)a1;
          uint64_t v64 = v97;
          sub_100015614(v61, &qword_1000A1038);
          sub_100015614((uint64_t)v23, &qword_1000A1038);
          if (v103(v63, 1, v52) == 1)
          {
            uint64_t v98 = (unsigned char *)v48;
            sub_100015614((uint64_t)v107, &qword_1000A1038);
            uint64_t v65 = v64;
LABEL_25:
            uint64_t v72 = v100[8];
            uint64_t v73 = (double *)&v102[v72];
            char v74 = v102[v72 + 8];
            uint64_t v75 = (double *)(v110 + v72);
            int v76 = *(unsigned __int8 *)(v110 + v72 + 8);
            if (v74)
            {
              if (!v76) {
                return 0;
              }
            }
            else
            {
              if (*v73 != *v75) {
                LOBYTE(v76) = 1;
              }
              if (v76) {
                return 0;
              }
            }
            uint64_t v77 = v100[9];
            uint64_t v78 = (double *)&v102[v77];
            char v79 = v102[v77 + 8];
            uint64_t v80 = (double *)(v110 + v77);
            int v81 = *(unsigned __int8 *)(v110 + v77 + 8);
            if (v79)
            {
              if (!v81) {
                return 0;
              }
            }
            else
            {
              if (*v78 != *v80) {
                LOBYTE(v81) = 1;
              }
              if (v81) {
                return 0;
              }
            }
            uint64_t v82 = v100;
            sub_100019A50((uint64_t)&v102[v100[10]], v65);
            uint64_t v83 = v110 + v82[10];
            uint64_t v84 = v105;
            sub_100019A50(v83, (uint64_t)v105);
            uint64_t v85 = v104;
            uint64_t v86 = (uint64_t)&v104[*(int *)(v108 + 48)];
            sub_100019A50(v65, (uint64_t)v104);
            sub_100019A50((uint64_t)v84, v86);
            uint64_t v87 = v101;
            if (v103((uint64_t)v85, 1, v101) == 1)
            {
              sub_100015614((uint64_t)v105, &qword_1000A1038);
              sub_100015614(v65, &qword_1000A1038);
              if (v103(v86, 1, v87) == 1)
              {
                sub_100015614((uint64_t)v85, &qword_1000A1038);
                return 1;
              }
              goto LABEL_42;
            }
            uint64_t v88 = v95;
            sub_100019A50((uint64_t)v85, v95);
            if (v103(v86, 1, v87) == 1)
            {
              sub_100015614((uint64_t)v105, &qword_1000A1038);
              sub_100015614(v65, &qword_1000A1038);
              (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v88, v87);
LABEL_42:
              uint64_t v54 = v85;
              goto LABEL_22;
            }
            uint64_t v89 = v109;
            unsigned int v90 = v106;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v109 + 32))(v106, v86, v87);
            sub_10001F268(&qword_1000A14D0, (void (*)(uint64_t))&type metadata accessor for Date);
            char v91 = sub_10008B310();
            uint64_t v92 = *(void (**)(unsigned char *, uint64_t))(v89 + 8);
            v92(v90, v87);
            sub_100015614((uint64_t)v105, &qword_1000A1038);
            sub_100015614(v65, &qword_1000A1038);
            v92((unsigned char *)v88, v87);
            sub_100015614((uint64_t)v85, &qword_1000A1038);
            return (v91 & 1) != 0;
          }
        }
        else
        {
          uint64_t v66 = (uint64_t)v23;
          uint64_t v67 = (uint64_t)v96;
          sub_100019A50((uint64_t)v107, (uint64_t)v96);
          if (v103(v63, 1, v52) != 1)
          {
            uint64_t v98 = (unsigned char *)v48;
            uint64_t v102 = (unsigned char *)a1;
            uint64_t v68 = v109;
            uint64_t v69 = v106;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v109 + 32))(v106, v63, v52);
            sub_10001F268(&qword_1000A14D0, (void (*)(uint64_t))&type metadata accessor for Date);
            char v70 = sub_10008B310();
            uint64_t v71 = *(void (**)(unsigned char *, uint64_t))(v68 + 8);
            v71(v69, v52);
            sub_100015614(v99, &qword_1000A1038);
            sub_100015614(v66, &qword_1000A1038);
            v71((unsigned char *)v67, v52);
            sub_100015614((uint64_t)v107, &qword_1000A1038);
            uint64_t v65 = v97;
            if ((v70 & 1) == 0) {
              return 0;
            }
            goto LABEL_25;
          }
          sub_100015614(v99, &qword_1000A1038);
          sub_100015614(v66, &qword_1000A1038);
          (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v67, v52);
        }
        uint64_t v54 = v107;
LABEL_22:
        sub_100015614((uint64_t)v54, &qword_1000A14C8);
        return 0;
      }
    }
    else
    {
      uint64_t v53 = (uint64_t)v102;
      sub_100019A50((uint64_t)v11, (uint64_t)v102);
      uint64_t v98 = (unsigned char *)v48;
      if (v103(v46, 1, v101) != 1)
      {
        uint64_t v55 = v109;
        uint64_t v56 = v106;
        uint64_t v57 = v101;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v109 + 32))(v106, v46, v101);
        sub_10001F268(&qword_1000A14D0, (void (*)(uint64_t))&type metadata accessor for Date);
        int v94 = sub_10008B310();
        int v58 = *(void (**)(unsigned char *, uint64_t))(v55 + 8);
        v58(v56, v57);
        sub_100015614((uint64_t)v27, &qword_1000A1038);
        sub_100015614((uint64_t)v33, &qword_1000A1038);
        v58((unsigned char *)v53, v57);
        uint64_t v59 = (uint64_t)v11;
        uint64_t v52 = v57;
        sub_100015614(v59, &qword_1000A1038);
        uint64_t v48 = (uint64_t)v98;
        if ((v94 & 1) == 0) {
          return 0;
        }
        goto LABEL_16;
      }
      uint64_t v98 = v11;
      sub_100015614((uint64_t)v27, &qword_1000A1038);
      sub_100015614((uint64_t)v33, &qword_1000A1038);
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v53, v101);
    }
    uint64_t v54 = v98;
    goto LABEL_22;
  }
  return result;
}

void *sub_10001D5F0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10001D634()
{
  unint64_t result = qword_1000A13C8;
  if (!qword_1000A13C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A13C8);
  }
  return result;
}

uint64_t sub_10001D688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001D6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetNowPlayingInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001D754(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetNowPlayingInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001D7B0()
{
  return sub_10001F268(&qword_1000A13E8, (void (*)(uint64_t))type metadata accessor for WidgetNowPlayingInfo);
}

void *initializeBufferWithCopyOfBuffer for WidgetNowPlayingInfo(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10008A170();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_10000903C(&qword_1000A1038);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_10000903C(&qword_1000A1038);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = *(unsigned char *)(v23 + 8);
    uint64_t v24 = (char *)v4 + v21;
    uint64_t v25 = (uint64_t)a2 + v21;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = a3[10];
    uint64_t v27 = (char *)v4 + v26;
    uint64_t v28 = (char *)a2 + v26;
    if (v13(v28, 1, v11))
    {
      uint64_t v29 = sub_10000903C(&qword_1000A1038);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v27, v28, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t destroy for WidgetNowPlayingInfo(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_10008A170();
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[7];
  if (!v6(v7, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v5);
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v8, 1, v5);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v8, v5);
  }
  return result;
}

uint64_t initializeWithCopy for WidgetNowPlayingInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10008A170();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_10000903C(&qword_1000A1038);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  if (v12(v26, 1, v10))
  {
    uint64_t v27 = sub_10000903C(&qword_1000A1038);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v25, v26, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for WidgetNowPlayingInfo(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_10008A170();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_10000903C(&qword_1000A1038);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  *(unsigned char *)(v22 + 8) = *((unsigned char *)v23 + 8);
  *(void *)uint64_t v22 = v24;
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  *(unsigned char *)(v26 + 8) = *((unsigned char *)v27 + 8);
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[10];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  int v32 = v11((void *)(a1 + v29), 1, v9);
  int v33 = v11(v31, 1, v9);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v30, v31, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v30, v9);
    goto LABEL_18;
  }
  if (v33)
  {
LABEL_18:
    uint64_t v34 = sub_10000903C(&qword_1000A1038);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v30, v31, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v30, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for WidgetNowPlayingInfo(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10008A170();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000903C(&qword_1000A1038);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  if (v11(v25, 1, v9))
  {
    uint64_t v26 = sub_10000903C(&qword_1000A1038);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v24, v25, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for WidgetNowPlayingInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_10008A170();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_10000903C(&qword_1000A1038);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  int v31 = v12((void *)(a1 + v28), 1, v10);
  int v32 = v12(v30, 1, v10);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v29, v30, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v29, v10);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    uint64_t v33 = sub_10000903C(&qword_1000A1038);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v29, v30, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetNowPlayingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001E950);
}

uint64_t sub_10001E950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10000903C(&qword_1000A1038);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetNowPlayingInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001EA24);
}

uint64_t sub_10001EA24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_10000903C(&qword_1000A1038);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10001EAD0()
{
  sub_10001EB80();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10001EB80()
{
  if (!qword_1000A1458)
  {
    sub_10008A170();
    unint64_t v0 = sub_10008B530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A1458);
    }
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for WidgetEmptyMessage(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetNowPlayingInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetNowPlayingInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001ED40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_10001ED68(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10001ED74(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetNowPlayingInfo.CodingKeys()
{
  return &type metadata for WidgetNowPlayingInfo.CodingKeys;
}

unint64_t sub_10001ED90()
{
  unint64_t result = qword_1000A14A0;
  if (!qword_1000A14A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A14A0);
  }
  return result;
}

unint64_t sub_10001EDE8()
{
  unint64_t result = qword_1000A14A8;
  if (!qword_1000A14A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A14A8);
  }
  return result;
}

unint64_t sub_10001EE40()
{
  unint64_t result = qword_1000A14B0;
  if (!qword_1000A14B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A14B0);
  }
  return result;
}

uint64_t sub_10001EE94(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000010008FDD0 || (sub_10008B690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6979616C507369 && a2 == 0xE900000000000067 || (sub_10008B690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010008FDF0 || (sub_10008B690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000010008FE10 || (sub_10008B690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x616D6552656D6974 && a2 == 0xED0000676E696E69 || (sub_10008B690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_10008B690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000010008FE30)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_10008B690();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_10001F160(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10001F1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10001F210(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_10001F268(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001F2B0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t *sub_10001F308(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10000903C(&qword_1000A14E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10008A650();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_1000090AC(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
  }
  return a1;
}

uint64_t sub_10001F440(uint64_t a1, uint64_t a2)
{
  sub_10000903C(&qword_1000A14E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10008A650();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);

  return sub_100009700(v6, v7);
}

void *sub_10001F4E8(void *a1, void *a2, uint64_t a3)
{
  sub_10000903C(&qword_1000A14E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10008A650();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_1000090AC(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  return a1;
}

void *sub_10001F5D0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100015614((uint64_t)a1, &qword_1000A14E8);
    sub_10000903C(&qword_1000A14E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10008A650();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_1000090AC(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_100009700(v12, v13);
  return a1;
}

char *sub_10001F6DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000903C(&qword_1000A14E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10008A650();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  return a1;
}

char *sub_10001F7C0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100015614((uint64_t)a1, &qword_1000A14E8);
    uint64_t v6 = sub_10000903C(&qword_1000A14E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10008A650();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_100009700(v12, v13);
  return a1;
}

uint64_t sub_10001F8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001F8DC);
}

uint64_t sub_10001F8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000903C(&qword_1000A14F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10001F9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001F9B4);
}

uint64_t sub_10001F9B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000903C(&qword_1000A14F0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for PlayButtonStyling()
{
  uint64_t result = qword_1000A1550;
  if (!qword_1000A1550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10001FAC4()
{
  sub_10001FB58();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10001FB58()
{
  if (!qword_1000A1560)
  {
    sub_10008A650();
    unint64_t v0 = sub_10008A660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A1560);
    }
  }
}

uint64_t sub_10001FBB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001FBCC()
{
  uint64_t v1 = sub_10008B160();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A15A8);
  __chkstk_darwin(v5);
  uint64_t v7 = (void *)((char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = v0 + *(int *)(type metadata accessor for PlayButtonStyling() + 20);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  sub_1000090AC(*(void *)v8, v10);
  char v11 = sub_10006A9AC(v9, v10);
  sub_100009700(v9, v10);
  if (v11)
  {
    sub_10008AFC0();
    uint64_t v12 = sub_10008AFD0();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for BlendMode.plusLighter(_:), v1);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v7 + *(int *)(v5 + 36), v4, v1);
    uint64_t *v7 = v12;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_100015428(&qword_1000A15B0, &qword_1000A15A8);
  }
  else
  {
    id v13 = [self systemGray6Color];
    v15[1] = sub_10008B000();
  }
  return sub_10008A6B0();
}

uint64_t sub_10001FE1C()
{
  return sub_10008A690();
}

uint64_t sub_10001FE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1590);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12[3] = sub_10008AB10();
  uint64_t v8 = sub_10008A6B0();
  uint64_t v9 = sub_10000903C(&qword_1000A1598);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, a1, v9);
  *(void *)&v7[*(int *)(v5 + 44)] = v8;
  uint64_t v10 = sub_10001FBCC();
  sub_10001FF6C((uint64_t)v7, a2);
  *(void *)(a2 + *(int *)(sub_10000903C(&qword_1000A15A0) + 36)) = v10;
  return sub_100015614((uint64_t)v7, &qword_1000A1590);
}

uint64_t sub_10001FF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10001FFD8()
{
  unint64_t result = qword_1000A15B8;
  if (!qword_1000A15B8)
  {
    sub_10000E49C(&qword_1000A15A0);
    sub_100020078();
    sub_100015428(&qword_1000A15E0, &qword_1000A15E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A15B8);
  }
  return result;
}

unint64_t sub_100020078()
{
  unint64_t result = qword_1000A15C0;
  if (!qword_1000A15C0)
  {
    sub_10000E49C(&qword_1000A1590);
    sub_100015428(&qword_1000A15C8, &qword_1000A1598);
    sub_100015428(&qword_1000A15D0, &qword_1000A15D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A15C0);
  }
  return result;
}

uint64_t sub_10002013C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v10 = sub_1000202C0(a1);
  swift_bridgeObjectRetain();
  sub_10002B7D0((void **)&v10);
  swift_bridgeObjectRelease();
  uint64_t v3 = v10;
  uint64_t v4 = *((void *)v10 + 2);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = sub_10008A170();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a2, &v3[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v5], v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  else
  {
    uint64_t v8 = sub_10008A170();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }

  return swift_release();
}

char *sub_1000202C0(uint64_t a1)
{
  uint64_t v3 = sub_10000903C(&qword_1000A1038);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10008A170();
  uint64_t v6 = *(void *)(v27 - 8);
  uint64_t v7 = __chkstk_darwin(v27);
  uint64_t v29 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v26 = (char *)v23 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return (char *)&_swiftEmptyArrayStorage;
  }
  v23[2] = v1;
  uint64_t v11 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  int v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v25 = v6;
  uint64_t v15 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v28 = *(void *)(v12 + 72);
  v23[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v17 = v27;
  uint64_t v24 = v11;
  do
  {
    sub_1000155B0(v13 + *(int *)(v11 + 80), (uint64_t)v5, &qword_1000A1038);
    if ((*v14)(v5, 1, v17) == 1)
    {
      sub_100015614((uint64_t)v5, &qword_1000A1038);
    }
    else
    {
      uint64_t v18 = *v15;
      int v19 = v26;
      (*v15)(v26, v5, v17);
      v18(v29, v19, v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = (char *)sub_10007F66C(0, *((void *)v16 + 2) + 1, 1, (unint64_t)v16);
      }
      unint64_t v21 = *((void *)v16 + 2);
      unint64_t v20 = *((void *)v16 + 3);
      if (v21 >= v20 >> 1) {
        uint64_t v16 = (char *)sub_10007F66C(v20 > 1, v21 + 1, 1, (unint64_t)v16);
      }
      *((void *)v16 + 2) = v21 + 1;
      uint64_t v17 = v27;
      v18(&v16[((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v21], v29, v27);
      uint64_t v11 = v24;
    }
    v13 += v28;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1000205E4(void (*a1)(unint64_t *), uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v8 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v19 = *(void *)(v8 - 8);
  uint64_t result = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = a4 - a3;
  if (a4 >= a3)
  {
    if ((uint64_t)(a4 - a3) < 0) {
      goto LABEL_27;
    }
LABEL_5:
    uint64_t v13 = v12 + 1;
    if (!__OFADD__(v12, 1))
    {
      int v14 = (unint64_t *)&_swiftEmptyArrayStorage;
      if (v12 == -1) {
        return (uint64_t)v14;
      }
      uint64_t v23 = (unint64_t *)&_swiftEmptyArrayStorage;
      uint64_t result = sub_100040D24(0, v13 & ~(v13 >> 63), 0);
      if (v13 < 0) {
        goto LABEL_25;
      }
      BOOL v15 = 0;
      int v14 = v23;
      while (v13)
      {
        if (v15) {
          goto LABEL_28;
        }
        unint64_t v22 = a3;
        v20(&v22);
        if (v5)
        {
          swift_release();
          return (uint64_t)v14;
        }
        uint64_t v5 = 0;
        uint64_t v23 = v14;
        unint64_t v17 = v14[2];
        unint64_t v16 = v14[3];
        if (v17 >= v16 >> 1)
        {
          sub_100040D24(v16 > 1, v17 + 1, 1);
          int v14 = v23;
        }
        v14[2] = v17 + 1;
        uint64_t result = sub_10002EF68((uint64_t)v11, (uint64_t)v14+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v17, type metadata accessor for UpNextEntry.Episode);
        BOOL v15 = a3 == a4;
        if (a3 == a4)
        {
          a3 = 0;
        }
        else if (__CFADD__(a3++, 1))
        {
          goto LABEL_23;
        }
        if (!--v13) {
          return (uint64_t)v14;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((uint64_t)(a3 - a4) >= 0)
  {
    unint64_t v12 = a4 - a3;
    goto LABEL_5;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000207F0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v7 = *(void *)(Entry - 8);
  __chkstk_darwin(Entry - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_100040D80(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = *(void *)(sub_10008A170() - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = v11[2];
      unint64_t v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_100040D80(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      v11[2] = v15 + 1;
      sub_10002EF68((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, type metadata accessor for UpNextEntry);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

void *sub_1000209EC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_100040D24(0, v10, 0);
    uint64_t v11 = v21;
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = a3 + v18;
    uint64_t v13 = *(void *)(v7 + 72);
    while (1)
    {
      v19(v12);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = v11[2];
      unint64_t v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_100040D24(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      v11[2] = v15 + 1;
      sub_10002EF68((uint64_t)v9, (uint64_t)v11 + v18 + v15 * v13, type metadata accessor for UpNextEntry.Episode);
      v12 += v13;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_100020B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_10008A170();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000903C(&qword_1000A1038);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A1850);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10008B220();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(v12, 0, 1, v13);
  uint64_t v21 = v12;
  uint64_t v16 = sub_1000205E4((void (*)(unint64_t *))sub_10002F1EC, (uint64_t)v20, 1uLL, 6uLL);
  sub_100015614((uint64_t)v12, &qword_1000A1850);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
  v15(v12, 1, 1, v13);
  sub_10008A160();
  return sub_10002A7A4(2u, v16, 0, (uint64_t)v9, (uint64_t)v6, (uint64_t)v12, v19);
}

uint64_t sub_100020E08(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v104 = a3;
  uint64_t v105 = a2;
  uint64_t v4 = sub_10008B270();
  __chkstk_darwin(v4 - 8);
  uint64_t v119 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_10000903C((uint64_t *)&qword_1000A1870);
  uint64_t v6 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v8 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v9 = *(void *)(Entry - 8);
  __chkstk_darwin(Entry);
  uint64_t v99 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v121 = v11;
  uint64_t v122 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v100 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v115 = (char *)&v96 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v96 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v114 = (char *)&v96 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v123 = (char *)&v96 - v23;
  __chkstk_darwin(v22);
  uint64_t v120 = (char *)&v96 - v24;
  uint64_t v25 = sub_10000903C(&qword_1000A1038);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25 - 8);
  uint64_t v98 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v118 = (char *)&v96 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v96 - v32;
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v96 - v34;
  uint64_t v124 = *(char **)(a1 + 24);
  sub_10000903C(&qword_1000A1878);
  sub_10002EFD0();
  if (sub_10008B480())
  {
    uint64_t v97 = v9;
    uint64_t v113 = v19;
    uint64_t v117 = v8;
    unint64_t v101 = a1;
    uint64_t v36 = sub_100021AF0(a1);
    uint64_t v37 = v36[2];
    uint64_t v112 = v6;
    if (v37)
    {
      uint64_t v38 = *(unsigned __int8 *)(v26 + 80);
      uint64_t v111 = v36;
      uint64_t v39 = (uint64_t)v36 + ((v38 + 32) & ~v38);
      uint64_t v40 = *(void (**)(void, void, void, void))(v26 + 72);
      uint64_t v41 = v121;
      char v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48);
      char v43 = (void (**)(char *, char *, uint64_t))(v122 + 32);
      uint64_t v44 = _swiftEmptyArrayStorage;
      char v116 = v40;
      do
      {
        sub_1000155B0(v39, (uint64_t)v35, &qword_1000A1038);
        sub_10001547C((uint64_t)v35, (uint64_t)v33, &qword_1000A1038);
        if ((*v42)(v33, 1, v41) == 1)
        {
          sub_100015614((uint64_t)v33, &qword_1000A1038);
        }
        else
        {
          uint64_t v45 = *v43;
          uint64_t v46 = v120;
          (*v43)(v120, v33, v41);
          v45(v123, v46, v41);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v44 = (void *)sub_10007F66C(0, v44[2] + 1, 1, (unint64_t)v44);
          }
          unint64_t v48 = v44[2];
          unint64_t v47 = v44[3];
          if (v48 >= v47 >> 1) {
            uint64_t v44 = (void *)sub_10007F66C(v47 > 1, v48 + 1, 1, (unint64_t)v44);
          }
          v44[2] = v48 + 1;
          unint64_t v49 = (unint64_t)v44
              + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80))
              + *(void *)(v122 + 72) * v48;
          uint64_t v41 = v121;
          v45((char *)v49, v123, v121);
          uint64_t v40 = v116;
        }
        v39 += (uint64_t)v40;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
      uint64_t v6 = v112;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v44 = _swiftEmptyArrayStorage;
      uint64_t v41 = v121;
    }
    uint64_t v124 = (char *)_swiftEmptyArrayStorage;
    uint64_t v54 = v117;
    uint64_t v53 = (uint64_t)v118;
    uint64_t v55 = v122;
    uint64_t v111 = (void *)v44[2];
    if (v111)
    {
      unint64_t v56 = 0;
      uint64_t v108 = v122 + 48;
      uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v122 + 32);
      int v58 = (void (**)(char *, uint64_t))(v122 + 8);
      uint64_t v109 = v122 + 56;
      uint64_t v110 = v122 + 16;
      unint64_t v96 = (v122 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v106 = (void (**)(char *, uint64_t))(v122 + 8);
      uint64_t v107 = v44;
      while (v56 < v44[2])
      {
        unint64_t v59 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        uint64_t v60 = *(char **)(v55 + 72);
        (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v53, (char *)v44 + v59 + (void)v60 * v56, v41);
        char v116 = *(void (**)(void, void, void, void))(v55 + 56);
        v116(v53, 0, 1, v41);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v41) == 1)
        {
          uint64_t v6 = v112;
          uint64_t v54 = v117;
          goto LABEL_31;
        }
        uint64_t v120 = v60;
        uint64_t v123 = (char *)v59;
        uint64_t v61 = *v57;
        uint64_t v62 = v114;
        (*v57)(v114, v53, v41);
        uint64_t v63 = v57;
        uint64_t v64 = v113;
        sub_10008A160();
        uint64_t v65 = v41;
        char v66 = sub_10008A120();
        uint64_t v67 = *v58;
        (*v58)(v64, v65);
        if (v66)
        {
          v61(v115, (uint64_t)v62, v65);
          uint64_t v68 = v124;
          uint64_t v57 = v63;
          uint64_t v69 = v61;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100040CE8(0, *((void *)v68 + 2) + 1, 1);
            uint64_t v68 = v124;
          }
          uint64_t v44 = v107;
          uint64_t v70 = (uint64_t)v123;
          uint64_t v71 = v120;
          unint64_t v73 = *((void *)v68 + 2);
          unint64_t v72 = *((void *)v68 + 3);
          if (v73 >= v72 >> 1)
          {
            sub_100040CE8(v72 > 1, v73 + 1, 1);
            uint64_t v68 = v124;
          }
          *((void *)v68 + 2) = v73 + 1;
          uint64_t v74 = v121;
          v69(&v68[v70 + v73 * (void)v71], (uint64_t)v115, v121);
          uint64_t v124 = v68;
          uint64_t v41 = v74;
          uint64_t v55 = v122;
          int v58 = v106;
        }
        else
        {
          v67(v62, v65);
          uint64_t v41 = v65;
          uint64_t v44 = v107;
          uint64_t v57 = v63;
        }
        ++v56;
        uint64_t v6 = v112;
        uint64_t v54 = v117;
        uint64_t v53 = (uint64_t)v118;
        if (v111 == (void *)v56)
        {
          uint64_t v75 = v116;
          goto LABEL_30;
        }
      }
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
    }
    else
    {
      uint64_t v75 = *(void (**)(void, void, void, void))(v122 + 56);
LABEL_30:
      char v116 = v75;
      v75(v53, 1, 1, v41);
LABEL_31:
      uint64_t v76 = v97;
      uint64_t v77 = v98;
      swift_bridgeObjectRelease();
      sub_100015614(v53, &qword_1000A1038);
      swift_retain();
      sub_10002B7D0((void **)&v124);
      uint64_t v78 = swift_release();
      char v79 = v124;
      __chkstk_darwin(v78);
      *(&v96 - 2) = v101;
      uint64_t v80 = (char *)sub_1000207F0((void (*)(uint64_t))sub_10002F02C, (uint64_t)(&v96 - 4), (uint64_t)v79);
      swift_release();
      uint64_t v81 = *((void *)v80 + 2);
      uint64_t v123 = v80;
      if (v81)
      {
        uint64_t v82 = Entry;
        unint64_t v83 = (unint64_t)&v80[((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))
                                   + *(void *)(v76 + 72) * (v81 - 1)
                                   + *(int *)(Entry + 40)];
        uint64_t v84 = v122;
        uint64_t v85 = v77;
        uint64_t v86 = (uint64_t)v77;
        uint64_t v87 = v121;
        (*(void (**)(char *, unint64_t, uint64_t))(v122 + 16))(v85, v83, v121);
        uint64_t v88 = 0;
      }
      else
      {
        uint64_t v88 = 1;
        uint64_t v86 = (uint64_t)v77;
        uint64_t v87 = v121;
        uint64_t v84 = v122;
        uint64_t v82 = Entry;
      }
      uint64_t v89 = v113;
      unsigned int v90 = v100;
      uint64_t v91 = (uint64_t)v99;
      v116(v86, v88, 1, v87);
      sub_10002F0D8(v101, v91, type metadata accessor for UpNextEntry);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v86, 1, v87) == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v90, v91 + *(int *)(v82 + 40), v87);
        sub_10002F058(v91, type metadata accessor for UpNextEntry);
        sub_100015614(v86, &qword_1000A1038);
      }
      else
      {
        sub_10002F058(v91, type metadata accessor for UpNextEntry);
        (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v90, v86, v87);
      }
      sub_10008A110();
      sub_10000903C(&qword_1000A1888);
      unint64_t v92 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
      unsigned int v93 = v89;
      uint64_t v94 = swift_allocObject();
      *(_OWORD *)(v94 + 16) = xmmword_10008D8C0;
      sub_10002F0D8(v101, v94 + v92, type metadata accessor for UpNextEntry);
      uint64_t v124 = (char *)v94;
      sub_10002D334((uint64_t)v123);
      sub_10008B260();
      sub_10002B49C((unint64_t *)&qword_1000A1838, (void (*)(uint64_t))type metadata accessor for UpNextEntry);
      sub_10008B2C0();
      v105(v54);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v54, v103);
      uint64_t v95 = *(void (**)(void, void))(v84 + 8);
      v95(v93, v87);
      return ((uint64_t (*)(char *, uint64_t))v95)(v90, v87);
    }
  }
  else
  {
    sub_10008A140();
    sub_10000903C(&qword_1000A1888);
    unint64_t v50 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_10008D8C0;
    sub_10002F0D8(a1, v51 + v50, type metadata accessor for UpNextEntry);
    sub_10008B260();
    sub_10002B49C((unint64_t *)&qword_1000A1838, (void (*)(uint64_t))type metadata accessor for UpNextEntry);
    sub_10008B2C0();
    v105(v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v103);
    return (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v19, v121);
  }
  return result;
}

void *sub_100021AF0(uint64_t a1)
{
  uint64_t v2 = sub_10008A250();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000903C(&qword_1000A1038);
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10008A170();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v31 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - v17;
  sub_10002013C(*(void *)(a1 + 24), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t v31 = v2;
    sub_100015614((uint64_t)v8, &qword_1000A1038);
LABEL_6:
    uint64_t Entry = type metadata accessor for UpNextEntry(0);
    sub_10008A110();
    sub_10008A230();
    sub_10008A160();
    uint64_t v25 = sub_100021F98((uint64_t)v13, (uint64_t)v16);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v13, v9);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v31);
    uint64_t v27 = sub_100022520((uint64_t)v25);
    swift_bridgeObjectRelease();
    sub_10000903C(&qword_1000A1890);
    unint64_t v28 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_10008D8C0;
    sub_1000155B0(a1 + *(int *)(Entry + 36), v29 + v28, &qword_1000A1038);
    uint64_t v33 = v27;
    sub_10002CFDC(v29);
    uint64_t v23 = v33;
    v26(v16, v9);
    return v23;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
  uint64_t v19 = a1 + *(int *)(type metadata accessor for UpNextEntry(0) + 40);
  if ((sub_10008A120() & 1) == 0)
  {
    uint64_t v31 = v2;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    goto LABEL_6;
  }
  sub_10008A230();
  uint64_t v20 = sub_100021F98(v19, (uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10000903C(&qword_1000A1898);
  unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10008D8C0;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 16))(v22 + v21, v18, v9);
  uint64_t v33 = v20;
  sub_10002D190(v22);
  uint64_t v23 = sub_100022520((uint64_t)v33);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
  return v23;
}

void *sub_100021F98(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v45 = a1;
  uint64_t v2 = sub_10008A1F0();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  char v42 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10008A200();
  uint64_t v36 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10008A1D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A14B8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A18A0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10008A000();
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10008A250();
  uint64_t v35 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v48 = _swiftEmptyArrayStorage;
  sub_10008A230();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v14, 1, 1, v18);
  uint64_t v22 = sub_10008A270();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
  sub_100089FF0();
  uint64_t v23 = *(void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v24 = v8;
  v23(v8, enum case for Calendar.MatchingPolicy.nextTime(_:), v5);
  uint64_t v25 = v40;
  uint64_t v46 = v41;
  unint64_t v47 = &v48;
  uint64_t v26 = v36;
  uint64_t v27 = v39;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v39, enum case for Calendar.RepeatedTimePolicy.first(_:), v40);
  unint64_t v28 = v42;
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, enum case for Calendar.SearchDirection.forward(_:), v44);
  sub_10008A1E0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v33);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v38);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v35);
  return v48;
}

void *sub_100022520(uint64_t a1)
{
  uint64_t v2 = sub_10008A170();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000903C(&qword_1000A1038);
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    sub_100040D60(0, v9, 0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v17 = *(void *)(v11 + 56);
    uint64_t v18 = v12;
    do
    {
      v18(v5, v13, v2);
      swift_dynamicCast();
      uint64_t v10 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100040D60(0, v10[2] + 1, 1);
        uint64_t v10 = v20;
      }
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_100040D60(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v20;
      }
      v10[2] = v15 + 1;
      sub_10001547C((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, &qword_1000A1038);
      v13 += v17;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_10002277C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_10000903C(&qword_1000A1850);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000903C(&qword_1000A1038);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = sub_10008A170();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v28 - v18;
  uint64_t v20 = *(void *)(v2 + 24);
  uint64_t v31 = a1;
  uint64_t v33 = a1;
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_1000209EC((void (*)(uint64_t))sub_10002F0B8, (uint64_t)v32, v20);
  swift_bridgeObjectRelease();
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v23 = *(void **)(v2 + *(int *)(Entry + 32));
  if (v23)
  {
    sub_1000155B0(v2 + *(int *)(Entry + 36), (uint64_t)v12, &qword_1000A1038);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_100015614((uint64_t)v12, &qword_1000A1038);
LABEL_6:
      uint64_t v23 = 0;
      goto LABEL_7;
    }
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    id v29 = v23;
    char v24 = sub_10008A120();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    if ((v24 & 1) == 0)
    {

      goto LABEL_6;
    }
  }
LABEL_7:
  unsigned __int8 v25 = *(unsigned char *)(v2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v31, v13);
  uint64_t v26 = sub_10008B220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 1, 1, v26);
  return sub_10002A7A4(v25, (uint64_t)v21, v23, (uint64_t)v10, (uint64_t)v17, (uint64_t)v6, v30);
}

uint64_t sub_100022AC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10008B220();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008B2A0();
  sub_100020B94((uint64_t)v5, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100022BA8(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  swift_retain();
  sub_100041E30(a1, a2, a3);

  return swift_release();
}

uint64_t sub_100022C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100016B7C;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_100022CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10002F208;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_100022D6C()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for UpNextEntry.Episode.CaptionGenerator()
{
  return self;
}

BOOL sub_100022DC8(void *a1, void *a2)
{
  return *a1 == *a2;
}

ValueMetadata *type metadata accessor for UpNextEntryProvider()
{
  return &type metadata for UpNextEntryProvider;
}

char *sub_100022DEC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v8 = a3[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_10008A1A0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    uint64_t v14 = a3[9];
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(void *)&v4[v13] = v15;
    uint64_t v16 = &v4[v14];
    uint64_t v17 = (char *)a2 + v14;
    uint64_t v18 = sub_10008A170();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    id v21 = v15;
    if (v20(v17, 1, v18))
    {
      uint64_t v22 = sub_10000903C(&qword_1000A1038);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(&v4[a3[10]], (uint64_t)a2 + a3[10], v18);
    }
    else
    {
      char v24 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v24(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      v24(&v4[a3[10]], (char *)a2 + a3[10], v18);
    }
    uint64_t v25 = a3[11];
    uint64_t v26 = &v4[v25];
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_10008B290();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1690);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return v4;
}

uint64_t sub_1000230E0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = sub_10008A170();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  if (!v9) {
    v10(v6, v7);
  }
  v10(a1 + a2[10], v7);
  uint64_t v11 = a1 + a2[11];
  uint64_t v12 = sub_10008B290();
  uint64_t v15 = *(void *)(v12 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v11, 1, v12);
  if (!result)
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    return v14(v11, v12);
  }
  return result;
}

uint64_t sub_1000232B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10008A1A0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = a3[9];
  uint64_t v14 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (const void *)(a2 + v13);
  uint64_t v17 = sub_10008A170();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  id v20 = v14;
  if (v19(v16, 1, v17))
  {
    uint64_t v21 = sub_10000903C(&qword_1000A1038);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a1 + a3[10], a2 + a3[10], v17);
  }
  else
  {
    uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v18 + 16);
    v22(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    v22((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), v17);
  }
  uint64_t v23 = a3[11];
  char v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_10008B290();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_10000903C(&qword_1000A1690);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_100023554(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = *(void **)(a1 + v10);
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v10) = v12;
  id v13 = v12;

  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = sub_10008A170();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    uint64_t v22 = sub_10000903C(&qword_1000A1038);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24))(a1 + a3[10], a2 + a3[10], v17);
  uint64_t v23 = a3[11];
  char v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = sub_10008B290();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_10000903C(&qword_1000A1690);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1000238D0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_10008A170();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000903C(&qword_1000A1038);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(a1 + a3[10], a2 + a3[10], v13);
  }
  else
  {
    uint64_t v16 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
    v16(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    v16((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), v13);
  }
  uint64_t v17 = a3[11];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_10008B290();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_10000903C(&qword_1000A1690);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_100023B5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_10008A170();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = sub_10000903C(&qword_1000A1038);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40))(a1 + a3[10], a2 + a3[10], v16);
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  char v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_10008B290();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_10000903C(&qword_1000A1690);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_100023EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100023ED0);
}

uint64_t sub_100023ED0(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_10008A1A0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[7];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_10000903C(&qword_1000A1038);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_11;
  }
  uint64_t v13 = sub_10008A170();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_11;
  }
  uint64_t v15 = sub_10000903C(&qword_1000A1690);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[11];

  return v16(v18, a2, v17);
}

uint64_t sub_10002409C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000240B0);
}

uint64_t sub_1000240B0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_10008A1A0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[7];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_10000903C(&qword_1000A1038);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  uint64_t v13 = sub_10008A170();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_9;
  }
  uint64_t v15 = sub_10000903C(&qword_1000A1690);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[11];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for UpNextEntry(uint64_t a1)
{
  return sub_100029CA4(a1, (uint64_t *)&unk_1000A16F0);
}

void sub_10002429C()
{
  sub_10008A1A0();
  if (v0 <= 0x3F)
  {
    sub_100029EC8(319, (unint64_t *)&qword_1000A1458, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F)
    {
      sub_10008A170();
      if (v2 <= 0x3F)
      {
        sub_100029EC8(319, (unint64_t *)&unk_1000A1700, (void (*)(uint64_t))&type metadata accessor for TimelineEntryRelevance);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *sub_100024440(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v18 = (void *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = a3[10];
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[10] = a2[10];
    uint64_t v12 = sub_10008A170();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v15 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v158 = v13;
    uint64_t v159 = v15;
    if (v14(v11, 1, v15))
    {
      uint64_t v16 = sub_10000903C(&qword_1000A1038);
      memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v15);
    }
    int v19 = a3;
    uint64_t v20 = a3[11];
    uint64_t v21 = a3[12];
    uint64_t v18 = a1;
    uint64_t v22 = (void *)((char *)a1 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (void *)((char *)a1 + v21);
    uint64_t v26 = (void *)((char *)a2 + v21);
    uint64_t v27 = (int *)sub_10008A340();
    __dsta = (void *)*((void *)v27 - 1);
    int v28 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
    swift_bridgeObjectRetain();
    if (v28(v26, 1, v27))
    {
      uint64_t v29 = sub_10000903C(&qword_1000A1040);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v30 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v30;
      int v31 = *((unsigned __int8 *)v26 + 32);
      swift_bridgeObjectRetain();
      if (v31 == 255)
      {
        *((_OWORD *)v25 + 1) = *((_OWORD *)v26 + 1);
        *((unsigned char *)v25 + 32) = *((unsigned char *)v26 + 32);
      }
      else
      {
        uint64_t v32 = v26[2];
        uint64_t v33 = v26[3];
        sub_100009080(v32, v33, v31);
        v25[2] = v32;
        v25[3] = v33;
        *((unsigned char *)v25 + 32) = v31;
      }
      *(_OWORD *)(v25 + 5) = *(_OWORD *)(v26 + 5);
      uint64_t v34 = (id *)(v26 + 7);
      int v35 = *((unsigned __int8 *)v26 + 64);
      if (v35 == 255)
      {
        v25[7] = *v34;
        *((unsigned char *)v25 + 64) = *((unsigned char *)v26 + 64);
      }
      else
      {
        id v36 = *v34;
        sub_100009098(*v34, *((unsigned char *)v26 + 64));
        v25[7] = v36;
        *((unsigned char *)v25 + 64) = v35;
      }
      uint64_t v37 = (id *)(v26 + 9);
      int v38 = *((unsigned __int8 *)v26 + 80);
      if (v38 == 255)
      {
        v25[9] = *v37;
        *((unsigned char *)v25 + 80) = *((unsigned char *)v26 + 80);
      }
      else
      {
        id v39 = *v37;
        sub_100009098(*v37, *((unsigned char *)v26 + 80));
        v25[9] = v39;
        *((unsigned char *)v25 + 80) = v38;
      }
      uint64_t v40 = (id *)(v26 + 11);
      int v41 = *((unsigned __int8 *)v26 + 96);
      if (v41 == 255)
      {
        v25[11] = *v40;
        *((unsigned char *)v25 + 96) = *((unsigned char *)v26 + 96);
      }
      else
      {
        id v42 = *v40;
        sub_100009098(*v40, *((unsigned char *)v26 + 96));
        v25[11] = v42;
        *((unsigned char *)v25 + 96) = v41;
      }
      uint64_t v43 = (id *)(v26 + 13);
      int v44 = *((unsigned __int8 *)v26 + 112);
      if (v44 == 255)
      {
        v25[13] = *v43;
        *((unsigned char *)v25 + 112) = *((unsigned char *)v26 + 112);
      }
      else
      {
        id v45 = *v43;
        sub_100009098(*v43, *((unsigned char *)v26 + 112));
        v25[13] = v45;
        *((unsigned char *)v25 + 112) = v44;
      }
      uint64_t v46 = (id *)(v26 + 15);
      int v47 = *((unsigned __int8 *)v26 + 128);
      if (v47 == 255)
      {
        v25[15] = *v46;
        *((unsigned char *)v25 + 128) = *((unsigned char *)v26 + 128);
      }
      else
      {
        id v48 = *v46;
        sub_100009098(*v46, *((unsigned char *)v26 + 128));
        v25[15] = v48;
        *((unsigned char *)v25 + 128) = v47;
      }
      int v19 = a3;
      *((unsigned char *)v25 + 129) = *((unsigned char *)v26 + 129);
      uint64_t v49 = v27[11];
      unint64_t v50 = (char *)v25 + v49;
      uint64_t v51 = (char *)v26 + v49;
      uint64_t v52 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      uint64_t v53 = v27[12];
      uint64_t v54 = (void *)((char *)v25 + v53);
      uint64_t v55 = (void *)((char *)v26 + v53);
      uint64_t v56 = v55[1];
      *uint64_t v54 = *v55;
      v54[1] = v56;
      *((unsigned char *)v25 + v27[13]) = *((unsigned char *)v26 + v27[13]);
      *((unsigned char *)v25 + v27[14]) = *((unsigned char *)v26 + v27[14]);
      *((unsigned char *)v25 + v27[15]) = *((unsigned char *)v26 + v27[15]);
      uint64_t v57 = v27[16];
      int v58 = (void *)((char *)v25 + v57);
      unint64_t v59 = (void *)((char *)v26 + v57);
      uint64_t v60 = v59[1];
      *int v58 = *v59;
      v58[1] = v60;
      uint64_t v61 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61(v25, 0, 1, v27);
    }
    uint64_t v62 = v19[13];
    uint64_t v63 = (void *)((char *)a1 + v62);
    uint64_t v64 = (void *)((char *)a2 + v62);
    if (v28((void *)((char *)a2 + v62), 1, v27))
    {
      uint64_t v65 = sub_10000903C(&qword_1000A1040);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      uint64_t v66 = v64[1];
      *uint64_t v63 = *v64;
      v63[1] = v66;
      int v67 = *((unsigned __int8 *)v64 + 32);
      swift_bridgeObjectRetain();
      if (v67 == 255)
      {
        *((_OWORD *)v63 + 1) = *((_OWORD *)v64 + 1);
        *((unsigned char *)v63 + 32) = *((unsigned char *)v64 + 32);
      }
      else
      {
        uint64_t v68 = v64[2];
        uint64_t v69 = v64[3];
        sub_100009080(v68, v69, v67);
        v63[2] = v68;
        v63[3] = v69;
        *((unsigned char *)v63 + 32) = v67;
      }
      *(_OWORD *)(v63 + 5) = *(_OWORD *)(v64 + 5);
      uint64_t v70 = (id *)(v64 + 7);
      int v71 = *((unsigned __int8 *)v64 + 64);
      if (v71 == 255)
      {
        v63[7] = *v70;
        *((unsigned char *)v63 + 64) = *((unsigned char *)v64 + 64);
      }
      else
      {
        id v72 = *v70;
        sub_100009098(*v70, *((unsigned char *)v64 + 64));
        v63[7] = v72;
        *((unsigned char *)v63 + 64) = v71;
      }
      unint64_t v73 = (id *)(v64 + 9);
      int v74 = *((unsigned __int8 *)v64 + 80);
      if (v74 == 255)
      {
        v63[9] = *v73;
        *((unsigned char *)v63 + 80) = *((unsigned char *)v64 + 80);
      }
      else
      {
        id v75 = *v73;
        sub_100009098(*v73, *((unsigned char *)v64 + 80));
        v63[9] = v75;
        *((unsigned char *)v63 + 80) = v74;
      }
      uint64_t v76 = (id *)(v64 + 11);
      int v77 = *((unsigned __int8 *)v64 + 96);
      if (v77 == 255)
      {
        v63[11] = *v76;
        *((unsigned char *)v63 + 96) = *((unsigned char *)v64 + 96);
      }
      else
      {
        id v78 = *v76;
        sub_100009098(*v76, *((unsigned char *)v64 + 96));
        v63[11] = v78;
        *((unsigned char *)v63 + 96) = v77;
      }
      char v79 = (id *)(v64 + 13);
      int v80 = *((unsigned __int8 *)v64 + 112);
      if (v80 == 255)
      {
        v63[13] = *v79;
        *((unsigned char *)v63 + 112) = *((unsigned char *)v64 + 112);
      }
      else
      {
        id v81 = *v79;
        sub_100009098(*v79, *((unsigned char *)v64 + 112));
        v63[13] = v81;
        *((unsigned char *)v63 + 112) = v80;
      }
      uint64_t v82 = (id *)(v64 + 15);
      int v83 = *((unsigned __int8 *)v64 + 128);
      if (v83 == 255)
      {
        v63[15] = *v82;
        *((unsigned char *)v63 + 128) = *((unsigned char *)v64 + 128);
      }
      else
      {
        id v84 = *v82;
        sub_100009098(*v82, *((unsigned char *)v64 + 128));
        v63[15] = v84;
        *((unsigned char *)v63 + 128) = v83;
      }
      int v19 = a3;
      *((unsigned char *)v63 + 129) = *((unsigned char *)v64 + 129);
      uint64_t v85 = v27[11];
      uint64_t v86 = (char *)v63 + v85;
      uint64_t v87 = (char *)v64 + v85;
      uint64_t v88 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
      uint64_t v89 = v27[12];
      unsigned int v90 = (void *)((char *)v63 + v89);
      uint64_t v91 = (void *)((char *)v64 + v89);
      uint64_t v92 = v91[1];
      *unsigned int v90 = *v91;
      v90[1] = v92;
      *((unsigned char *)v63 + v27[13]) = *((unsigned char *)v64 + v27[13]);
      *((unsigned char *)v63 + v27[14]) = *((unsigned char *)v64 + v27[14]);
      *((unsigned char *)v63 + v27[15]) = *((unsigned char *)v64 + v27[15]);
      uint64_t v93 = v27[16];
      uint64_t v94 = (void *)((char *)v63 + v93);
      uint64_t v95 = (void *)((char *)v64 + v93);
      uint64_t v96 = v95[1];
      *uint64_t v94 = *v95;
      v94[1] = v96;
      uint64_t v97 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v97(v63, 0, 1, v27);
    }
    uint64_t v98 = v19[14];
    uint64_t v99 = v19[15];
    uint64_t v100 = *(void **)((char *)a2 + v98);
    *(void *)((char *)a1 + v98) = v100;
    unint64_t v101 = (char *)a1 + v99;
    uint64_t v102 = (char *)a2 + v99;
    uint64_t v103 = sub_10008A050();
    uint64_t v104 = *(void *)(v103 - 8);
    uint64_t v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48);
    id v106 = v100;
    if (v105(v102, 1, v103))
    {
      uint64_t v107 = sub_10000903C(&qword_1000A1048);
      memcpy(v101, v102, *(void *)(*(void *)(v107 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v101, v102, v103);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
    }
    uint64_t v108 = a3[17];
    *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    uint64_t v109 = (char *)a1 + v108;
    uint64_t v110 = (char *)a2 + v108;
    *(void *)uint64_t v109 = *(void *)v110;
    v109[8] = v110[8];
    uint64_t v111 = a3[18];
    uint64_t v112 = a3[19];
    uint64_t v113 = (char *)a1 + v111;
    uint64_t v114 = (char *)a2 + v111;
    *(void *)uint64_t v113 = *(void *)v114;
    v113[8] = v114[8];
    uint64_t v115 = (char *)a1 + v112;
    char v116 = (char *)a2 + v112;
    if (v14((char *)a2 + v112, 1, v159))
    {
      uint64_t v117 = sub_10000903C(&qword_1000A1038);
      memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v115, v116, v159);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v115, 0, 1, v159);
    }
    uint64_t v118 = a3[20];
    uint64_t v119 = (char *)a1 + v118;
    uint64_t v120 = (char *)a2 + v118;
    if (v14((char *)a2 + v118, 1, v159))
    {
      uint64_t v121 = sub_10000903C(&qword_1000A1038);
      memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v119, v120, v159);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v119, 0, 1, v159);
    }
    uint64_t v122 = a3[21];
    uint64_t v123 = (void *)((char *)a1 + v122);
    uint64_t v124 = (void *)((char *)a2 + v122);
    if (*v124)
    {
      uint64_t v125 = v124[1];
      uint64_t v126 = v124[2];
      *uint64_t v123 = *v124;
      v123[1] = v125;
      v123[2] = v126;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
      v123[2] = v124[2];
    }
    uint64_t v127 = a3[22];
    uint64_t v128 = (char *)a1 + v127;
    uint64_t v129 = (char *)a2 + v127;
    uint64_t v130 = sub_10000903C(&qword_1000A1050);
    uint64_t v131 = *(void *)(v130 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v129, 1, v130))
    {
      uint64_t v132 = sub_10000903C(&qword_1000A1058);
      memcpy(v128, v129, *(void *)(*(void *)(v132 - 8) + 64));
    }
    else
    {
      int v133 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
      v133(v128, v129, v159);
      v133(&v128[*(int *)(v130 + 36)], &v129[*(int *)(v130 + 36)], v159);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
    }
    int v134 = (int *)type metadata accessor for WidgetPredictedPlayState();
    uint64_t v135 = v134[5];
    int v136 = &v128[v135];
    uint64_t v137 = &v129[v135];
    uint64_t v138 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
    uint64_t v139 = v134[6];
    int v140 = &v128[v139];
    int v141 = &v129[v139];
    uint64_t v142 = sub_10008A4B0();
    uint64_t v143 = *(void *)(v142 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v141, 1, v142))
    {
      uint64_t v144 = sub_10000903C(&qword_1000A1060);
      memcpy(v140, v141, *(void *)(*(void *)(v144 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v140, v141, v142);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
    }
    uint64_t v145 = v134[7];
    unsigned __int8 v146 = &v128[v145];
    int v147 = &v129[v145];
    uint64_t v148 = *((void *)v147 + 1);
    *(void *)unsigned __int8 v146 = *(void *)v147;
    *((void *)v146 + 1) = v148;
    uint64_t v149 = v134[8];
    id v150 = &v128[v149];
    int v151 = &v129[v149];
    uint64_t v152 = *((void *)v151 + 1);
    *(void *)id v150 = *(void *)v151;
    *((void *)v150 + 1) = v152;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v18;
}

uint64_t sub_10002512C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_10008A170();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v43 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[12];
  uint64_t v9 = sub_10008A340();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v11 = *(unsigned __int8 *)(v8 + 32);
    if (v11 != 255) {
      sub_1000096D4(*(void *)(v8 + 16), *(void *)(v8 + 24), v11);
    }
    int v12 = *(unsigned __int8 *)(v8 + 64);
    if (v12 != 255) {
      sub_1000096EC(*(id *)(v8 + 56), v12);
    }
    int v13 = *(unsigned __int8 *)(v8 + 80);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v8 + 72), v13);
    }
    int v14 = *(unsigned __int8 *)(v8 + 96);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v8 + 88), v14);
    }
    int v15 = *(unsigned __int8 *)(v8 + 112);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v8 + 104), v15);
    }
    int v16 = *(unsigned __int8 *)(v8 + 128);
    if (v16 != 255) {
      sub_1000096EC(*(id *)(v8 + 120), v16);
    }
    uint64_t v17 = v8 + *(int *)(v9 + 44);
    uint64_t v18 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = a1 + a2[13];
  if (!v10(v19, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v20 = *(unsigned __int8 *)(v19 + 32);
    if (v20 != 255) {
      sub_1000096D4(*(void *)(v19 + 16), *(void *)(v19 + 24), v20);
    }
    int v21 = *(unsigned __int8 *)(v19 + 64);
    if (v21 != 255) {
      sub_1000096EC(*(id *)(v19 + 56), v21);
    }
    int v22 = *(unsigned __int8 *)(v19 + 80);
    if (v22 != 255) {
      sub_1000096EC(*(id *)(v19 + 72), v22);
    }
    int v23 = *(unsigned __int8 *)(v19 + 96);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v19 + 88), v23);
    }
    int v24 = *(unsigned __int8 *)(v19 + 112);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v19 + 104), v24);
    }
    int v25 = *(unsigned __int8 *)(v19 + 128);
    if (v25 != 255) {
      sub_1000096EC(*(id *)(v19 + 120), v25);
    }
    uint64_t v26 = v19 + *(int *)(v9 + 44);
    uint64_t v27 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v28 = a1 + a2[15];
  uint64_t v29 = sub_10008A050();
  uint64_t v30 = *(void *)(v29 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  }
  uint64_t v31 = a1 + a2[19];
  if (!v7(v31, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v31, v5);
  }
  uint64_t v32 = a1 + a2[20];
  if (!v7(v32, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v32, v5);
  }
  if (*(void *)(a1 + a2[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v33 = a1 + a2[22];
  uint64_t v34 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34))
  {
    int v35 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v35(v33, v5);
    v35(v33 + *(int *)(v34 + 36), v5);
  }
  uint64_t v36 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v37 = v33 + *(int *)(v36 + 20);
  uint64_t v38 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  uint64_t v39 = v33 + *(int *)(v36 + 24);
  uint64_t v40 = sub_10008A4B0();
  uint64_t v41 = *(void *)(v40 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40)) {
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100025710(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a3[10];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[10] = a2[10];
  uint64_t v10 = sub_10008A170();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v13 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v156 = v13;
  if (v12(v9, 1, v13))
  {
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (void *)((char *)a2 + v15);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  int v20 = (void *)((char *)a1 + v16);
  int v21 = (void *)((char *)a2 + v16);
  int v22 = (int *)sub_10008A340();
  int v23 = (void *)*((void *)v22 - 1);
  int v24 = (unsigned int (*)(void *, uint64_t, int *))v23[6];
  swift_bridgeObjectRetain();
  if (v24(v21, 1, v22))
  {
    uint64_t v25 = sub_10000903C(&qword_1000A1040);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    __dsta = v23;
    uint64_t v26 = v21[1];
    void *v20 = *v21;
    v20[1] = v26;
    int v27 = *((unsigned __int8 *)v21 + 32);
    swift_bridgeObjectRetain();
    if (v27 == 255)
    {
      *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
      *((unsigned char *)v20 + 32) = *((unsigned char *)v21 + 32);
    }
    else
    {
      uint64_t v28 = v21[2];
      uint64_t v29 = v21[3];
      sub_100009080(v28, v29, v27);
      v20[2] = v28;
      v20[3] = v29;
      *((unsigned char *)v20 + 32) = v27;
    }
    *(_OWORD *)(v20 + 5) = *(_OWORD *)(v21 + 5);
    uint64_t v30 = (id *)(v21 + 7);
    int v31 = *((unsigned __int8 *)v21 + 64);
    if (v31 == 255)
    {
      v20[7] = *v30;
      *((unsigned char *)v20 + 64) = *((unsigned char *)v21 + 64);
    }
    else
    {
      id v32 = *v30;
      sub_100009098(*v30, *((unsigned char *)v21 + 64));
      v20[7] = v32;
      *((unsigned char *)v20 + 64) = v31;
    }
    uint64_t v33 = (id *)(v21 + 9);
    int v34 = *((unsigned __int8 *)v21 + 80);
    if (v34 == 255)
    {
      v20[9] = *v33;
      *((unsigned char *)v20 + 80) = *((unsigned char *)v21 + 80);
    }
    else
    {
      id v35 = *v33;
      sub_100009098(*v33, *((unsigned char *)v21 + 80));
      v20[9] = v35;
      *((unsigned char *)v20 + 80) = v34;
    }
    uint64_t v36 = (id *)(v21 + 11);
    int v37 = *((unsigned __int8 *)v21 + 96);
    if (v37 == 255)
    {
      v20[11] = *v36;
      *((unsigned char *)v20 + 96) = *((unsigned char *)v21 + 96);
    }
    else
    {
      id v38 = *v36;
      sub_100009098(*v36, *((unsigned char *)v21 + 96));
      v20[11] = v38;
      *((unsigned char *)v20 + 96) = v37;
    }
    uint64_t v39 = (id *)(v21 + 13);
    int v40 = *((unsigned __int8 *)v21 + 112);
    if (v40 == 255)
    {
      v20[13] = *v39;
      *((unsigned char *)v20 + 112) = *((unsigned char *)v21 + 112);
    }
    else
    {
      id v41 = *v39;
      sub_100009098(*v39, *((unsigned char *)v21 + 112));
      v20[13] = v41;
      *((unsigned char *)v20 + 112) = v40;
    }
    id v42 = (id *)(v21 + 15);
    int v43 = *((unsigned __int8 *)v21 + 128);
    if (v43 == 255)
    {
      v20[15] = *v42;
      *((unsigned char *)v20 + 128) = *((unsigned char *)v21 + 128);
    }
    else
    {
      id v44 = *v42;
      sub_100009098(*v42, *((unsigned char *)v21 + 128));
      v20[15] = v44;
      *((unsigned char *)v20 + 128) = v43;
    }
    *((unsigned char *)v20 + 129) = *((unsigned char *)v21 + 129);
    uint64_t v45 = v22[11];
    uint64_t v46 = (char *)v20 + v45;
    int v47 = (char *)v21 + v45;
    uint64_t v48 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
    uint64_t v49 = v22[12];
    unint64_t v50 = (void *)((char *)v20 + v49);
    uint64_t v51 = (void *)((char *)v21 + v49);
    uint64_t v52 = v51[1];
    *unint64_t v50 = *v51;
    v50[1] = v52;
    *((unsigned char *)v20 + v22[13]) = *((unsigned char *)v21 + v22[13]);
    *((unsigned char *)v20 + v22[14]) = *((unsigned char *)v21 + v22[14]);
    *((unsigned char *)v20 + v22[15]) = *((unsigned char *)v21 + v22[15]);
    uint64_t v53 = v22[16];
    uint64_t v54 = (void *)((char *)v20 + v53);
    uint64_t v55 = (void *)((char *)v21 + v53);
    uint64_t v56 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v56;
    int v23 = __dsta;
    uint64_t v57 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57(v20, 0, 1, v22);
  }
  uint64_t v58 = a3[13];
  unint64_t v59 = (void *)((char *)a1 + v58);
  uint64_t v60 = (void *)((char *)a2 + v58);
  if (v24((void *)((char *)a2 + v58), 1, v22))
  {
    uint64_t v61 = sub_10000903C(&qword_1000A1040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    uint64_t v62 = a3;
  }
  else
  {
    uint64_t v63 = v23;
    uint64_t v64 = v60[1];
    void *v59 = *v60;
    v59[1] = v64;
    int v65 = *((unsigned __int8 *)v60 + 32);
    swift_bridgeObjectRetain();
    if (v65 == 255)
    {
      *((_OWORD *)v59 + 1) = *((_OWORD *)v60 + 1);
      *((unsigned char *)v59 + 32) = *((unsigned char *)v60 + 32);
    }
    else
    {
      uint64_t v66 = v60[2];
      uint64_t v67 = v60[3];
      sub_100009080(v66, v67, v65);
      v59[2] = v66;
      v59[3] = v67;
      *((unsigned char *)v59 + 32) = v65;
    }
    uint64_t v62 = a3;
    *(_OWORD *)(v59 + 5) = *(_OWORD *)(v60 + 5);
    uint64_t v68 = (id *)(v60 + 7);
    int v69 = *((unsigned __int8 *)v60 + 64);
    if (v69 == 255)
    {
      v59[7] = *v68;
      *((unsigned char *)v59 + 64) = *((unsigned char *)v60 + 64);
    }
    else
    {
      id v70 = *v68;
      sub_100009098(*v68, *((unsigned char *)v60 + 64));
      v59[7] = v70;
      *((unsigned char *)v59 + 64) = v69;
    }
    int v71 = (id *)(v60 + 9);
    int v72 = *((unsigned __int8 *)v60 + 80);
    if (v72 == 255)
    {
      v59[9] = *v71;
      *((unsigned char *)v59 + 80) = *((unsigned char *)v60 + 80);
    }
    else
    {
      id v73 = *v71;
      sub_100009098(*v71, *((unsigned char *)v60 + 80));
      v59[9] = v73;
      *((unsigned char *)v59 + 80) = v72;
    }
    int v74 = (id *)(v60 + 11);
    int v75 = *((unsigned __int8 *)v60 + 96);
    if (v75 == 255)
    {
      v59[11] = *v74;
      *((unsigned char *)v59 + 96) = *((unsigned char *)v60 + 96);
    }
    else
    {
      id v76 = *v74;
      sub_100009098(*v74, *((unsigned char *)v60 + 96));
      v59[11] = v76;
      *((unsigned char *)v59 + 96) = v75;
    }
    int v77 = (id *)(v60 + 13);
    int v78 = *((unsigned __int8 *)v60 + 112);
    if (v78 == 255)
    {
      v59[13] = *v77;
      *((unsigned char *)v59 + 112) = *((unsigned char *)v60 + 112);
    }
    else
    {
      id v79 = *v77;
      sub_100009098(*v77, *((unsigned char *)v60 + 112));
      v59[13] = v79;
      *((unsigned char *)v59 + 112) = v78;
    }
    int v80 = (id *)(v60 + 15);
    int v81 = *((unsigned __int8 *)v60 + 128);
    if (v81 == 255)
    {
      v59[15] = *v80;
      *((unsigned char *)v59 + 128) = *((unsigned char *)v60 + 128);
    }
    else
    {
      id v82 = *v80;
      sub_100009098(*v80, *((unsigned char *)v60 + 128));
      v59[15] = v82;
      *((unsigned char *)v59 + 128) = v81;
    }
    *((unsigned char *)v59 + 129) = *((unsigned char *)v60 + 129);
    uint64_t v83 = v22[11];
    id v84 = (char *)v59 + v83;
    uint64_t v85 = (char *)v60 + v83;
    uint64_t v86 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
    uint64_t v87 = v22[12];
    uint64_t v88 = (void *)((char *)v59 + v87);
    uint64_t v89 = (void *)((char *)v60 + v87);
    uint64_t v90 = v89[1];
    void *v88 = *v89;
    v88[1] = v90;
    *((unsigned char *)v59 + v22[13]) = *((unsigned char *)v60 + v22[13]);
    *((unsigned char *)v59 + v22[14]) = *((unsigned char *)v60 + v22[14]);
    *((unsigned char *)v59 + v22[15]) = *((unsigned char *)v60 + v22[15]);
    uint64_t v91 = v22[16];
    uint64_t v92 = (void *)((char *)v59 + v91);
    uint64_t v93 = (void *)((char *)v60 + v91);
    uint64_t v94 = v93[1];
    void *v92 = *v93;
    v92[1] = v94;
    uint64_t v95 = (void (*)(void *, void, uint64_t, int *))v63[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v95(v59, 0, 1, v22);
  }
  uint64_t v96 = v62[14];
  uint64_t v97 = v62[15];
  uint64_t v98 = *(void **)((char *)a2 + v96);
  *(void *)((char *)a1 + v96) = v98;
  uint64_t v99 = (char *)a1 + v97;
  uint64_t v100 = (char *)a2 + v97;
  uint64_t v101 = sub_10008A050();
  uint64_t v102 = *(void *)(v101 - 8);
  uint64_t v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
  id v104 = v98;
  if (v103(v100, 1, v101))
  {
    uint64_t v105 = sub_10000903C(&qword_1000A1048);
    memcpy(v99, v100, *(void *)(*(void *)(v105 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, v100, v101);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
  }
  uint64_t v106 = v62[17];
  *((unsigned char *)a1 + v62[16]) = *((unsigned char *)a2 + v62[16]);
  uint64_t v107 = (char *)a1 + v106;
  uint64_t v108 = (char *)a2 + v106;
  *(void *)uint64_t v107 = *(void *)v108;
  v107[8] = v108[8];
  uint64_t v109 = v62[18];
  uint64_t v110 = v62[19];
  uint64_t v111 = (char *)a1 + v109;
  uint64_t v112 = (char *)a2 + v109;
  *(void *)uint64_t v111 = *(void *)v112;
  v111[8] = v112[8];
  uint64_t v113 = (char *)a1 + v110;
  uint64_t v114 = (char *)a2 + v110;
  if (v12((char *)a2 + v110, 1, v156))
  {
    uint64_t v115 = sub_10000903C(&qword_1000A1038);
    memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v113, v114, v156);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v113, 0, 1, v156);
  }
  uint64_t v116 = v62[20];
  uint64_t v117 = (char *)a1 + v116;
  uint64_t v118 = (char *)a2 + v116;
  if (v12((char *)a2 + v116, 1, v156))
  {
    uint64_t v119 = sub_10000903C(&qword_1000A1038);
    memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v117, v118, v156);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v117, 0, 1, v156);
  }
  uint64_t v120 = v62[21];
  uint64_t v121 = (void *)((char *)a1 + v120);
  uint64_t v122 = (void *)((char *)a2 + v120);
  if (*v122)
  {
    uint64_t v123 = v122[1];
    uint64_t v124 = v122[2];
    void *v121 = *v122;
    v121[1] = v123;
    v121[2] = v124;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
    v121[2] = v122[2];
  }
  uint64_t v125 = v62[22];
  uint64_t v126 = (char *)a1 + v125;
  uint64_t v127 = (char *)a2 + v125;
  uint64_t v128 = sub_10000903C(&qword_1000A1050);
  uint64_t v129 = *(void *)(v128 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
  {
    uint64_t v130 = sub_10000903C(&qword_1000A1058);
    memcpy(v126, v127, *(void *)(*(void *)(v130 - 8) + 64));
  }
  else
  {
    uint64_t v131 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v131(v126, v127, v156);
    v131(&v126[*(int *)(v128 + 36)], &v127[*(int *)(v128 + 36)], v156);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
  }
  uint64_t v132 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v133 = v132[5];
  int v134 = &v126[v133];
  uint64_t v135 = &v127[v133];
  uint64_t v136 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
  uint64_t v137 = v132[6];
  uint64_t v138 = &v126[v137];
  uint64_t v139 = &v127[v137];
  uint64_t v140 = sub_10008A4B0();
  uint64_t v141 = *(void *)(v140 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48))(v139, 1, v140))
  {
    uint64_t v142 = sub_10000903C(&qword_1000A1060);
    memcpy(v138, v139, *(void *)(*(void *)(v142 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v138, v139, v140);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
  }
  uint64_t v143 = v132[7];
  uint64_t v144 = &v126[v143];
  uint64_t v145 = &v127[v143];
  uint64_t v146 = *((void *)v145 + 1);
  *(void *)uint64_t v144 = *(void *)v145;
  *((void *)v144 + 1) = v146;
  uint64_t v147 = v132[8];
  uint64_t v148 = &v126[v147];
  uint64_t v149 = &v127[v147];
  uint64_t v150 = *((void *)v149 + 1);
  *(void *)uint64_t v148 = *(void *)v149;
  *((void *)v148 + 1) = v150;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1000263B0(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  swift_retain();
  swift_release();
  *((void *)a1 + 7) = a2[7];
  *((void *)a1 + 8) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 9) = a2[9];
  *((void *)a1 + 10) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10008A170();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  uint64_t v311 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (void *)((char *)a2 + v15);
  *(void *)uint64_t v16 = *v17;
  *((void *)v16 + 1) = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v315 = a3;
  uint64_t v18 = a3[12];
  uint64_t v19 = (uint64_t)&a1[v18];
  int v20 = (char *)a2 + v18;
  int v21 = (int *)sub_10008A340();
  uint64_t v309 = *((void *)v21 - 1);
  int v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v309 + 48);
  int v23 = v22(v19, 1, v21);
  uint64_t v310 = v22;
  int v24 = v22((uint64_t)v20, 1, v21);
  uint64_t v312 = v10;
  uint64_t v313 = v9;
  if (!v23)
  {
    if (!v24)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v31 = (long long *)(v19 + 16);
      id v32 = (long long *)(v20 + 16);
      int v33 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v33 == 255)
        {
          long long v74 = *v32;
          *(unsigned char *)(v19 + 32) = v20[32];
          *int v31 = v74;
        }
        else
        {
          uint64_t v71 = *((void *)v20 + 2);
          uint64_t v72 = *((void *)v20 + 3);
          sub_100009080(v71, v72, v20[32]);
          *(void *)(v19 + 16) = v71;
          *(void *)(v19 + 24) = v72;
          *(unsigned char *)(v19 + 32) = v33;
        }
      }
      else if (v33 == 255)
      {
        sub_10000BE14(v19 + 16);
        char v73 = v20[32];
        *int v31 = *v32;
        *(unsigned char *)(v19 + 32) = v73;
      }
      else
      {
        uint64_t v34 = *((void *)v20 + 2);
        uint64_t v35 = *((void *)v20 + 3);
        sub_100009080(v34, v35, v20[32]);
        uint64_t v36 = *(void *)(v19 + 16);
        uint64_t v37 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v34;
        *(void *)(v19 + 24) = v35;
        unsigned __int8 v38 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v33;
        sub_1000096D4(v36, v37, v38);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v75 = (id *)(v19 + 56);
      id v76 = (id *)(v20 + 56);
      int v77 = v20[64];
      uint64_t v29 = v21;
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v77 == 255)
        {
          id v83 = *v76;
          *(unsigned char *)(v19 + 64) = v20[64];
          id *v75 = v83;
        }
        else
        {
          id v81 = *v76;
          sub_100009098(*v76, v20[64]);
          *(void *)(v19 + 56) = v81;
          *(unsigned char *)(v19 + 64) = v77;
        }
      }
      else if (v77 == 255)
      {
        sub_10000BE68(v19 + 56);
        char v82 = v20[64];
        id *v75 = *v76;
        *(unsigned char *)(v19 + 64) = v82;
      }
      else
      {
        id v78 = *v76;
        sub_100009098(*v76, v20[64]);
        id v79 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v78;
        char v80 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v77;
        sub_1000096EC(v79, v80);
      }
      id v84 = (id *)(v19 + 72);
      uint64_t v85 = (id *)(v20 + 72);
      int v86 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v86 == 255)
        {
          id v92 = *v85;
          *(unsigned char *)(v19 + 80) = v20[80];
          id *v84 = v92;
        }
        else
        {
          id v90 = *v85;
          sub_100009098(*v85, v20[80]);
          *(void *)(v19 + 72) = v90;
          *(unsigned char *)(v19 + 80) = v86;
        }
      }
      else if (v86 == 255)
      {
        sub_10000BE68(v19 + 72);
        char v91 = v20[80];
        id *v84 = *v85;
        *(unsigned char *)(v19 + 80) = v91;
      }
      else
      {
        id v87 = *v85;
        sub_100009098(*v85, v20[80]);
        uint64_t v88 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v87;
        char v89 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v86;
        sub_1000096EC(v88, v89);
      }
      uint64_t v93 = (id *)(v19 + 88);
      uint64_t v94 = (id *)(v20 + 88);
      int v95 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v95 == 255)
        {
          id v101 = *v94;
          *(unsigned char *)(v19 + 96) = v20[96];
          id *v93 = v101;
        }
        else
        {
          id v99 = *v94;
          sub_100009098(*v94, v20[96]);
          *(void *)(v19 + 88) = v99;
          *(unsigned char *)(v19 + 96) = v95;
        }
      }
      else if (v95 == 255)
      {
        sub_10000BE68(v19 + 88);
        char v100 = v20[96];
        id *v93 = *v94;
        *(unsigned char *)(v19 + 96) = v100;
      }
      else
      {
        id v96 = *v94;
        sub_100009098(*v94, v20[96]);
        uint64_t v97 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v96;
        char v98 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v95;
        sub_1000096EC(v97, v98);
      }
      uint64_t v102 = (id *)(v19 + 104);
      uint64_t v103 = (id *)(v20 + 104);
      int v104 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v104 == 255)
        {
          id v110 = *v103;
          *(unsigned char *)(v19 + 112) = v20[112];
          *uint64_t v102 = v110;
        }
        else
        {
          id v108 = *v103;
          sub_100009098(*v103, v20[112]);
          *(void *)(v19 + 104) = v108;
          *(unsigned char *)(v19 + 112) = v104;
        }
      }
      else if (v104 == 255)
      {
        sub_10000BE68(v19 + 104);
        char v109 = v20[112];
        *uint64_t v102 = *v103;
        *(unsigned char *)(v19 + 112) = v109;
      }
      else
      {
        id v105 = *v103;
        sub_100009098(*v103, v20[112]);
        uint64_t v106 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v105;
        char v107 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v104;
        sub_1000096EC(v106, v107);
      }
      uint64_t v111 = (id *)(v19 + 120);
      uint64_t v112 = (id *)(v20 + 120);
      int v113 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v113 == 255)
        {
          id v119 = *v112;
          *(unsigned char *)(v19 + 128) = v20[128];
          id *v111 = v119;
        }
        else
        {
          id v117 = *v112;
          sub_100009098(*v112, v20[128]);
          *(void *)(v19 + 120) = v117;
          *(unsigned char *)(v19 + 128) = v113;
        }
      }
      else if (v113 == 255)
      {
        sub_10000BE68(v19 + 120);
        char v118 = v20[128];
        id *v111 = *v112;
        *(unsigned char *)(v19 + 128) = v118;
      }
      else
      {
        id v114 = *v112;
        sub_100009098(*v112, v20[128]);
        uint64_t v115 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v114;
        char v116 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v113;
        sub_1000096EC(v115, v116);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v120 = v21[11];
      uint64_t v121 = v19 + v120;
      uint64_t v122 = &v20[v120];
      uint64_t v123 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v123 - 8) + 24))(v121, v122, v123);
      uint64_t v124 = v21[12];
      uint64_t v125 = (void *)(v19 + v124);
      uint64_t v126 = &v20[v124];
      void *v125 = *(void *)v126;
      v125[1] = *((void *)v126 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v127 = v21[16];
      uint64_t v128 = (void *)(v19 + v127);
      uint64_t v129 = &v20[v127];
      *uint64_t v128 = *(void *)v129;
      v128[1] = *((void *)v129 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_10002F058(v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_13:
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    uint64_t v29 = v21;
    uint64_t v30 = (uint64_t (*)(char *, uint64_t, int *))v310;
    goto LABEL_76;
  }
  if (v24) {
    goto LABEL_13;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v25 = v20[32];
  swift_bridgeObjectRetain();
  if (v25 == 255)
  {
    long long v39 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v39;
  }
  else
  {
    uint64_t v26 = *((void *)v20 + 2);
    uint64_t v27 = *((void *)v20 + 3);
    sub_100009080(v26, v27, v25);
    *(void *)(v19 + 16) = v26;
    *(void *)(v19 + 24) = v27;
    *(unsigned char *)(v19 + 32) = v25;
  }
  uint64_t v29 = v21;
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  int v40 = (id *)(v20 + 56);
  int v41 = v20[64];
  if (v41 == 255)
  {
    id v43 = *v40;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v43;
  }
  else
  {
    id v42 = *v40;
    sub_100009098(*v40, v20[64]);
    *(void *)(v19 + 56) = v42;
    *(unsigned char *)(v19 + 64) = v41;
  }
  id v44 = (id *)(v20 + 72);
  int v45 = v20[80];
  if (v45 == 255)
  {
    id v47 = *v44;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v47;
  }
  else
  {
    id v46 = *v44;
    sub_100009098(*v44, v20[80]);
    *(void *)(v19 + 72) = v46;
    *(unsigned char *)(v19 + 80) = v45;
  }
  uint64_t v48 = (id *)(v20 + 88);
  int v49 = v20[96];
  if (v49 == 255)
  {
    id v51 = *v48;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v51;
  }
  else
  {
    id v50 = *v48;
    sub_100009098(*v48, v20[96]);
    *(void *)(v19 + 88) = v50;
    *(unsigned char *)(v19 + 96) = v49;
  }
  uint64_t v52 = (id *)(v20 + 104);
  int v53 = v20[112];
  if (v53 == 255)
  {
    id v55 = *v52;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v55;
  }
  else
  {
    id v54 = *v52;
    sub_100009098(*v52, v20[112]);
    *(void *)(v19 + 104) = v54;
    *(unsigned char *)(v19 + 112) = v53;
  }
  uint64_t v56 = (id *)(v20 + 120);
  int v57 = v20[128];
  if (v57 == 255)
  {
    id v59 = *v56;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v59;
  }
  else
  {
    id v58 = *v56;
    sub_100009098(*v56, v20[128]);
    *(void *)(v19 + 120) = v58;
    *(unsigned char *)(v19 + 128) = v57;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v60 = v21[11];
  uint64_t v61 = v19 + v60;
  uint64_t v62 = &v20[v60];
  uint64_t v63 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
  uint64_t v64 = v21[12];
  int v65 = (void *)(v19 + v64);
  uint64_t v66 = &v20[v64];
  void *v65 = *(void *)v66;
  v65[1] = *((void *)v66 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v67 = v21[16];
  uint64_t v68 = (void *)(v19 + v67);
  int v69 = &v20[v67];
  *uint64_t v68 = *(void *)v69;
  v68[1] = *((void *)v69 + 1);
  id v70 = *(void (**)(uint64_t, void, uint64_t, int *))(v309 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v70(v19, 0, 1, v21);
LABEL_75:
  uint64_t v30 = (uint64_t (*)(char *, uint64_t, int *))v310;
LABEL_76:
  uint64_t v130 = v315[13];
  uint64_t v131 = (uint64_t)&a1[v130];
  uint64_t v132 = (char *)a2 + v130;
  int v133 = v30(&a1[v130], 1, v29);
  int v134 = v30(v132, 1, v29);
  if (v133)
  {
    if (!v134)
    {
      *(void *)uint64_t v131 = *(void *)v132;
      *(void *)(v131 + 8) = *((void *)v132 + 1);
      int v135 = v132[32];
      swift_bridgeObjectRetain();
      if (v135 == 255)
      {
        long long v147 = *((_OWORD *)v132 + 1);
        *(unsigned char *)(v131 + 32) = v132[32];
        *(_OWORD *)(v131 + 16) = v147;
      }
      else
      {
        uint64_t v136 = *((void *)v132 + 2);
        uint64_t v137 = *((void *)v132 + 3);
        sub_100009080(v136, v137, v135);
        *(void *)(v131 + 16) = v136;
        *(void *)(v131 + 24) = v137;
        *(unsigned char *)(v131 + 32) = v135;
      }
      *(void *)(v131 + 40) = *((void *)v132 + 5);
      *(void *)(v131 + 48) = *((void *)v132 + 6);
      uint64_t v148 = (id *)(v132 + 56);
      int v149 = v132[64];
      if (v149 == 255)
      {
        id v151 = *v148;
        *(unsigned char *)(v131 + 64) = v132[64];
        *(void *)(v131 + 56) = v151;
      }
      else
      {
        id v150 = *v148;
        sub_100009098(*v148, v132[64]);
        *(void *)(v131 + 56) = v150;
        *(unsigned char *)(v131 + 64) = v149;
      }
      uint64_t v152 = (id *)(v132 + 72);
      int v153 = v132[80];
      if (v153 == 255)
      {
        id v155 = *v152;
        *(unsigned char *)(v131 + 80) = v132[80];
        *(void *)(v131 + 72) = v155;
      }
      else
      {
        id v154 = *v152;
        sub_100009098(*v152, v132[80]);
        *(void *)(v131 + 72) = v154;
        *(unsigned char *)(v131 + 80) = v153;
      }
      uint64_t v156 = (id *)(v132 + 88);
      int v157 = v132[96];
      if (v157 == 255)
      {
        id v159 = *v156;
        *(unsigned char *)(v131 + 96) = v132[96];
        *(void *)(v131 + 88) = v159;
      }
      else
      {
        id v158 = *v156;
        sub_100009098(*v156, v132[96]);
        *(void *)(v131 + 88) = v158;
        *(unsigned char *)(v131 + 96) = v157;
      }
      int v160 = (id *)(v132 + 104);
      int v161 = v132[112];
      if (v161 == 255)
      {
        id v163 = *v160;
        *(unsigned char *)(v131 + 112) = v132[112];
        *(void *)(v131 + 104) = v163;
      }
      else
      {
        id v162 = *v160;
        sub_100009098(*v160, v132[112]);
        *(void *)(v131 + 104) = v162;
        *(unsigned char *)(v131 + 112) = v161;
      }
      int v164 = (id *)(v132 + 120);
      int v165 = v132[128];
      if (v165 == 255)
      {
        id v167 = *v164;
        *(unsigned char *)(v131 + 128) = v132[128];
        *(void *)(v131 + 120) = v167;
      }
      else
      {
        id v166 = *v164;
        sub_100009098(*v164, v132[128]);
        *(void *)(v131 + 120) = v166;
        *(unsigned char *)(v131 + 128) = v165;
      }
      *(unsigned char *)(v131 + 129) = v132[129];
      uint64_t v168 = v29[11];
      uint64_t v169 = v131 + v168;
      uint64_t v170 = &v132[v168];
      uint64_t v171 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      uint64_t v172 = v29[12];
      uint64_t v173 = (void *)(v131 + v172);
      uint64_t v174 = &v132[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      *(unsigned char *)(v131 + v29[13]) = v132[v29[13]];
      *(unsigned char *)(v131 + v29[14]) = v132[v29[14]];
      *(unsigned char *)(v131 + v29[15]) = v132[v29[15]];
      uint64_t v175 = v29[16];
      uint64_t v176 = (void *)(v131 + v175);
      uint64_t v177 = &v132[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      uint64_t v178 = *(void (**)(uint64_t, void, uint64_t, int *))(v309 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178(v131, 0, 1, v29);
      goto LABEL_143;
    }
LABEL_82:
    uint64_t v138 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v131, v132, *(void *)(*(void *)(v138 - 8) + 64));
    goto LABEL_143;
  }
  if (v134)
  {
    sub_10002F058(v131, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_82;
  }
  *(void *)uint64_t v131 = *(void *)v132;
  *(void *)(v131 + 8) = *((void *)v132 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v139 = (long long *)(v131 + 16);
  uint64_t v140 = (long long *)(v132 + 16);
  int v141 = v132[32];
  if (*(unsigned __int8 *)(v131 + 32) == 255)
  {
    if (v141 == 255)
    {
      long long v182 = *v140;
      *(unsigned char *)(v131 + 32) = v132[32];
      long long *v139 = v182;
    }
    else
    {
      uint64_t v179 = *((void *)v132 + 2);
      uint64_t v180 = *((void *)v132 + 3);
      sub_100009080(v179, v180, v132[32]);
      *(void *)(v131 + 16) = v179;
      *(void *)(v131 + 24) = v180;
      *(unsigned char *)(v131 + 32) = v141;
    }
  }
  else if (v141 == 255)
  {
    sub_10000BE14(v131 + 16);
    char v181 = v132[32];
    long long *v139 = *v140;
    *(unsigned char *)(v131 + 32) = v181;
  }
  else
  {
    uint64_t v142 = *((void *)v132 + 2);
    uint64_t v143 = *((void *)v132 + 3);
    sub_100009080(v142, v143, v132[32]);
    uint64_t v144 = *(void *)(v131 + 16);
    uint64_t v145 = *(void *)(v131 + 24);
    *(void *)(v131 + 16) = v142;
    *(void *)(v131 + 24) = v143;
    unsigned __int8 v146 = *(unsigned char *)(v131 + 32);
    *(unsigned char *)(v131 + 32) = v141;
    sub_1000096D4(v144, v145, v146);
  }
  *(void *)(v131 + 40) = *((void *)v132 + 5);
  *(void *)(v131 + 48) = *((void *)v132 + 6);
  uint64_t v183 = (id *)(v131 + 56);
  uint64_t v184 = (id *)(v132 + 56);
  int v185 = v132[64];
  if (*(unsigned __int8 *)(v131 + 64) == 255)
  {
    if (v185 == 255)
    {
      id v191 = *v184;
      *(unsigned char *)(v131 + 64) = v132[64];
      *uint64_t v183 = v191;
    }
    else
    {
      id v189 = *v184;
      sub_100009098(*v184, v132[64]);
      *(void *)(v131 + 56) = v189;
      *(unsigned char *)(v131 + 64) = v185;
    }
  }
  else if (v185 == 255)
  {
    sub_10000BE68(v131 + 56);
    char v190 = v132[64];
    *uint64_t v183 = *v184;
    *(unsigned char *)(v131 + 64) = v190;
  }
  else
  {
    id v186 = *v184;
    sub_100009098(*v184, v132[64]);
    uint64_t v187 = *(void **)(v131 + 56);
    *(void *)(v131 + 56) = v186;
    char v188 = *(unsigned char *)(v131 + 64);
    *(unsigned char *)(v131 + 64) = v185;
    sub_1000096EC(v187, v188);
  }
  uint64_t v192 = (id *)(v131 + 72);
  uint64_t v193 = (id *)(v132 + 72);
  int v194 = v132[80];
  if (*(unsigned __int8 *)(v131 + 80) == 255)
  {
    if (v194 == 255)
    {
      id v200 = *v193;
      *(unsigned char *)(v131 + 80) = v132[80];
      id *v192 = v200;
    }
    else
    {
      id v198 = *v193;
      sub_100009098(*v193, v132[80]);
      *(void *)(v131 + 72) = v198;
      *(unsigned char *)(v131 + 80) = v194;
    }
  }
  else if (v194 == 255)
  {
    sub_10000BE68(v131 + 72);
    char v199 = v132[80];
    id *v192 = *v193;
    *(unsigned char *)(v131 + 80) = v199;
  }
  else
  {
    id v195 = *v193;
    sub_100009098(*v193, v132[80]);
    uint64_t v196 = *(void **)(v131 + 72);
    *(void *)(v131 + 72) = v195;
    char v197 = *(unsigned char *)(v131 + 80);
    *(unsigned char *)(v131 + 80) = v194;
    sub_1000096EC(v196, v197);
  }
  v201 = (id *)(v131 + 88);
  uint64_t v202 = (id *)(v132 + 88);
  int v203 = v132[96];
  if (*(unsigned __int8 *)(v131 + 96) == 255)
  {
    if (v203 == 255)
    {
      id v209 = *v202;
      *(unsigned char *)(v131 + 96) = v132[96];
      id *v201 = v209;
    }
    else
    {
      id v207 = *v202;
      sub_100009098(*v202, v132[96]);
      *(void *)(v131 + 88) = v207;
      *(unsigned char *)(v131 + 96) = v203;
    }
  }
  else if (v203 == 255)
  {
    sub_10000BE68(v131 + 88);
    char v208 = v132[96];
    id *v201 = *v202;
    *(unsigned char *)(v131 + 96) = v208;
  }
  else
  {
    id v204 = *v202;
    sub_100009098(*v202, v132[96]);
    v205 = *(void **)(v131 + 88);
    *(void *)(v131 + 88) = v204;
    char v206 = *(unsigned char *)(v131 + 96);
    *(unsigned char *)(v131 + 96) = v203;
    sub_1000096EC(v205, v206);
  }
  uint64_t v210 = (id *)(v131 + 104);
  v211 = (id *)(v132 + 104);
  int v212 = v132[112];
  if (*(unsigned __int8 *)(v131 + 112) == 255)
  {
    if (v212 == 255)
    {
      id v218 = *v211;
      *(unsigned char *)(v131 + 112) = v132[112];
      *uint64_t v210 = v218;
    }
    else
    {
      id v216 = *v211;
      sub_100009098(*v211, v132[112]);
      *(void *)(v131 + 104) = v216;
      *(unsigned char *)(v131 + 112) = v212;
    }
  }
  else if (v212 == 255)
  {
    sub_10000BE68(v131 + 104);
    char v217 = v132[112];
    *uint64_t v210 = *v211;
    *(unsigned char *)(v131 + 112) = v217;
  }
  else
  {
    id v213 = *v211;
    sub_100009098(*v211, v132[112]);
    v214 = *(void **)(v131 + 104);
    *(void *)(v131 + 104) = v213;
    char v215 = *(unsigned char *)(v131 + 112);
    *(unsigned char *)(v131 + 112) = v212;
    sub_1000096EC(v214, v215);
  }
  v219 = (id *)(v131 + 120);
  v220 = (id *)(v132 + 120);
  int v221 = v132[128];
  if (*(unsigned __int8 *)(v131 + 128) == 255)
  {
    if (v221 == 255)
    {
      id v227 = *v220;
      *(unsigned char *)(v131 + 128) = v132[128];
      id *v219 = v227;
    }
    else
    {
      id v225 = *v220;
      sub_100009098(*v220, v132[128]);
      *(void *)(v131 + 120) = v225;
      *(unsigned char *)(v131 + 128) = v221;
    }
  }
  else if (v221 == 255)
  {
    sub_10000BE68(v131 + 120);
    char v226 = v132[128];
    id *v219 = *v220;
    *(unsigned char *)(v131 + 128) = v226;
  }
  else
  {
    id v222 = *v220;
    sub_100009098(*v220, v132[128]);
    v223 = *(void **)(v131 + 120);
    *(void *)(v131 + 120) = v222;
    char v224 = *(unsigned char *)(v131 + 128);
    *(unsigned char *)(v131 + 128) = v221;
    sub_1000096EC(v223, v224);
  }
  *(unsigned char *)(v131 + 129) = v132[129];
  uint64_t v228 = v29[11];
  uint64_t v229 = v131 + v228;
  v230 = &v132[v228];
  uint64_t v231 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v229, v230, v231);
  uint64_t v232 = v29[12];
  v233 = (void *)(v131 + v232);
  v234 = &v132[v232];
  void *v233 = *(void *)v234;
  v233[1] = *((void *)v234 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v131 + v29[13]) = v132[v29[13]];
  *(unsigned char *)(v131 + v29[14]) = v132[v29[14]];
  *(unsigned char *)(v131 + v29[15]) = v132[v29[15]];
  uint64_t v235 = v29[16];
  v236 = (void *)(v131 + v235);
  v237 = &v132[v235];
  void *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v238 = v315[14];
  v239 = *(void **)&a1[v238];
  v240 = *(void **)((char *)a2 + v238);
  *(void *)&a1[v238] = v240;
  id v241 = v240;

  uint64_t v242 = v315[15];
  v243 = &a1[v242];
  v244 = (char *)a2 + v242;
  uint64_t v245 = sub_10008A050();
  uint64_t v246 = *(void *)(v245 - 8);
  v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  int v248 = v247(v243, 1, v245);
  int v249 = v247(v244, 1, v245);
  if (v248)
  {
    if (!v249)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v249)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_148:
    uint64_t v250 = sub_10000903C(&qword_1000A1048);
    memcpy(v243, v244, *(void *)(*(void *)(v250 - 8) + 64));
    goto LABEL_149;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
LABEL_149:
  a1[v315[16]] = *((unsigned char *)a2 + v315[16]);
  uint64_t v251 = v315[17];
  v252 = &a1[v251];
  uint64_t v253 = (char *)a2 + v251;
  uint64_t v254 = *(void *)v253;
  v252[8] = v253[8];
  *(void *)v252 = v254;
  uint64_t v255 = v315[18];
  v256 = &a1[v255];
  uint64_t v257 = (char *)a2 + v255;
  uint64_t v258 = *(void *)v257;
  v256[8] = v257[8];
  *(void *)v256 = v258;
  uint64_t v259 = v315[19];
  v260 = &a1[v259];
  int v261 = (char *)a2 + v259;
  int v262 = v311(&a1[v259], 1, v313);
  int v263 = v311(v261, 1, v313);
  if (v262)
  {
    if (!v263)
    {
      (*(void (**)(char *, char *, uint64_t))(v312 + 16))(v260, v261, v313);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v312 + 56))(v260, 0, 1, v313);
      goto LABEL_155;
    }
    goto LABEL_154;
  }
  if (v263)
  {
    (*(void (**)(char *, uint64_t))(v312 + 8))(v260, v313);
LABEL_154:
    uint64_t v264 = sub_10000903C(&qword_1000A1038);
    memcpy(v260, v261, *(void *)(*(void *)(v264 - 8) + 64));
    goto LABEL_155;
  }
  (*(void (**)(char *, char *, uint64_t))(v312 + 24))(v260, v261, v313);
LABEL_155:
  uint64_t v265 = v315[20];
  v266 = &a1[v265];
  int v267 = (char *)a2 + v265;
  int v268 = v311(&a1[v265], 1, v313);
  int v269 = v311(v267, 1, v313);
  if (v268)
  {
    if (!v269)
    {
      (*(void (**)(char *, char *, uint64_t))(v312 + 16))(v266, v267, v313);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v312 + 56))(v266, 0, 1, v313);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v269)
  {
    (*(void (**)(char *, uint64_t))(v312 + 8))(v266, v313);
LABEL_160:
    uint64_t v270 = sub_10000903C(&qword_1000A1038);
    memcpy(v266, v267, *(void *)(*(void *)(v270 - 8) + 64));
    goto LABEL_161;
  }
  (*(void (**)(char *, char *, uint64_t))(v312 + 24))(v266, v267, v313);
LABEL_161:
  uint64_t v271 = v315[21];
  v272 = &a1[v271];
  uint64_t v273 = (char *)a2 + v271;
  uint64_t v274 = *(void *)((char *)a2 + v271);
  if (*(void *)&a1[v271])
  {
    if (v274)
    {
      *(void *)v272 = v274;
      swift_retain();
      swift_release();
      *((void *)v272 + 1) = *((void *)v273 + 1);
      swift_retain();
      swift_release();
      *((void *)v272 + 2) = *((void *)v273 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10000BF18((uint64_t)&a1[v271]);
      uint64_t v275 = *((void *)v273 + 2);
      *(_OWORD *)v272 = *(_OWORD *)v273;
      *((void *)v272 + 2) = v275;
    }
  }
  else if (v274)
  {
    *(void *)v272 = v274;
    *((void *)v272 + 1) = *((void *)v273 + 1);
    *((void *)v272 + 2) = *((void *)v273 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v276 = *(_OWORD *)v273;
    *((void *)v272 + 2) = *((void *)v273 + 2);
    *(_OWORD *)v272 = v276;
  }
  uint64_t v277 = v315[22];
  v278 = &a1[v277];
  uint64_t v279 = (char *)a2 + v277;
  uint64_t v280 = sub_10000903C(&qword_1000A1050);
  uint64_t v281 = *(void *)(v280 - 8);
  int v282 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v281 + 48);
  int v283 = v282(v278, 1, v280);
  int v284 = v282(v279, 1, v280);
  uint64_t v314 = a1;
  if (v283)
  {
    if (!v284)
    {
      uint64_t v285 = *(void (**)(char *, char *, uint64_t))(v312 + 16);
      v285(v278, v279, v313);
      v285(&v278[*(int *)(v280 + 36)], &v279[*(int *)(v280 + 36)], v313);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v281 + 56))(v278, 0, 1, v280);
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  if (v284)
  {
    sub_100015614((uint64_t)v278, &qword_1000A1050);
LABEL_176:
    uint64_t v286 = sub_10000903C(&qword_1000A1058);
    memcpy(v278, v279, *(void *)(*(void *)(v286 - 8) + 64));
    goto LABEL_177;
  }
  uint64_t v308 = *(void (**)(char *, char *, uint64_t))(v312 + 24);
  v308(v278, v279, v313);
  v308(&v278[*(int *)(v280 + 36)], &v279[*(int *)(v280 + 36)], v313);
LABEL_177:
  uint64_t v287 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v288 = v287[5];
  v289 = &v278[v288];
  uint64_t v290 = &v279[v288];
  uint64_t v291 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v291 - 8) + 24))(v289, v290, v291);
  uint64_t v292 = v287[6];
  v293 = &v278[v292];
  uint64_t v294 = &v279[v292];
  uint64_t v295 = sub_10008A4B0();
  uint64_t v296 = *(void *)(v295 - 8);
  int v297 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v296 + 48);
  int v298 = v297(v293, 1, v295);
  int v299 = v297(v294, 1, v295);
  if (!v298)
  {
    if (!v299)
    {
      (*(void (**)(char *, char *, uint64_t))(v296 + 24))(v293, v294, v295);
      goto LABEL_183;
    }
    (*(void (**)(char *, uint64_t))(v296 + 8))(v293, v295);
    goto LABEL_182;
  }
  if (v299)
  {
LABEL_182:
    uint64_t v300 = sub_10000903C(&qword_1000A1060);
    memcpy(v293, v294, *(void *)(*(void *)(v300 - 8) + 64));
    goto LABEL_183;
  }
  (*(void (**)(char *, char *, uint64_t))(v296 + 16))(v293, v294, v295);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v296 + 56))(v293, 0, 1, v295);
LABEL_183:
  uint64_t v301 = v287[7];
  uint64_t v302 = &v278[v301];
  v303 = &v279[v301];
  *(void *)uint64_t v302 = *(void *)v303;
  *((void *)v302 + 1) = *((void *)v303 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v304 = v287[8];
  uint64_t v305 = &v278[v304];
  v306 = &v279[v304];
  *(void *)uint64_t v305 = *(void *)v306;
  *((void *)v305 + 1) = *((void *)v306 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v314;
}

uint64_t sub_100027DA4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v10 = sub_10008A170();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v82 = v10;
  id v81 = *(unsigned int (**)(const void *, uint64_t))(v11 + 48);
  if (v81(v9, 1))
  {
    uint64_t v12 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v82);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v82);
  }
  uint64_t v13 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  uint64_t v16 = (int *)sub_10008A340();
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48);
  uint64_t v80 = v17;
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_10000903C(&qword_1000A1040);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    long long v20 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v20;
    *((unsigned char *)v14 + 32) = *((unsigned char *)v15 + 32);
    *(_OWORD *)((char *)v14 + 40) = *(_OWORD *)((char *)v15 + 40);
    *((void *)v14 + 7) = *((void *)v15 + 7);
    *((unsigned char *)v14 + 64) = *((unsigned char *)v15 + 64);
    *(_OWORD *)((char *)v14 + 113) = *(_OWORD *)((char *)v15 + 113);
    *(_OWORD *)((char *)v14 + 104) = *(_OWORD *)((char *)v15 + 104);
    *(_OWORD *)((char *)v14 + 88) = *(_OWORD *)((char *)v15 + 88);
    *(_OWORD *)((char *)v14 + 72) = *(_OWORD *)((char *)v15 + 72);
    *((unsigned char *)v14 + 129) = *((unsigned char *)v15 + 129);
    uint64_t v21 = v16[11];
    id v78 = (char *)v14 + v21;
    uint64_t v79 = v11;
    int v22 = (char *)v15 + v21;
    uint64_t v23 = sub_10008A300();
    int v24 = v22;
    uint64_t v11 = v79;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v78, v24, v23);
    *(_OWORD *)((char *)v14 + v16[12]) = *(_OWORD *)((char *)v15 + v16[12]);
    *((unsigned char *)v14 + v16[13]) = *((unsigned char *)v15 + v16[13]);
    *((unsigned char *)v14 + v16[14]) = *((unsigned char *)v15 + v16[14]);
    *((unsigned char *)v14 + v16[15]) = *((unsigned char *)v15 + v16[15]);
    *(_OWORD *)((char *)v14 + v16[16]) = *(_OWORD *)((char *)v15 + v16[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v25 = a3[13];
  uint64_t v26 = (_OWORD *)(a1 + v25);
  uint64_t v27 = (_OWORD *)(a2 + v25);
  if (v18((_OWORD *)(a2 + v25), 1, v16))
  {
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    long long v29 = v27[1];
    _OWORD *v26 = *v27;
    v26[1] = v29;
    *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
    *(_OWORD *)((char *)v26 + 40) = *(_OWORD *)((char *)v27 + 40);
    *((void *)v26 + 7) = *((void *)v27 + 7);
    *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
    *(_OWORD *)((char *)v26 + 113) = *(_OWORD *)((char *)v27 + 113);
    *(_OWORD *)((char *)v26 + 104) = *(_OWORD *)((char *)v27 + 104);
    *(_OWORD *)((char *)v26 + 88) = *(_OWORD *)((char *)v27 + 88);
    *(_OWORD *)((char *)v26 + 72) = *(_OWORD *)((char *)v27 + 72);
    *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
    uint64_t v30 = v16[11];
    int v31 = (char *)v26 + v30;
    uint64_t v32 = v11;
    int v33 = (char *)v27 + v30;
    uint64_t v34 = sub_10008A300();
    uint64_t v35 = v33;
    uint64_t v11 = v32;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v35, v34);
    *(_OWORD *)((char *)v26 + v16[12]) = *(_OWORD *)((char *)v27 + v16[12]);
    *((unsigned char *)v26 + v16[13]) = *((unsigned char *)v27 + v16[13]);
    *((unsigned char *)v26 + v16[14]) = *((unsigned char *)v27 + v16[14]);
    *((unsigned char *)v26 + v16[15]) = *((unsigned char *)v27 + v16[15]);
    *(_OWORD *)((char *)v26 + v16[16]) = *(_OWORD *)((char *)v27 + v16[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v80 + 56))(v26, 0, 1, v16);
  }
  uint64_t v36 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v37 = (void *)(a1 + v36);
  unsigned __int8 v38 = (const void *)(a2 + v36);
  uint64_t v39 = sub_10008A050();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_10000903C(&qword_1000A1048);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  uint64_t v42 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  uint64_t v45 = a3[18];
  uint64_t v46 = a3[19];
  uint64_t v47 = a1 + v45;
  uint64_t v48 = a2 + v45;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  int v49 = (void *)(a1 + v46);
  id v50 = (const void *)(a2 + v46);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81)(a2 + v46, 1, v82))
  {
    uint64_t v51 = sub_10000903C(&qword_1000A1038);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v49, v50, v82);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0, 1, v82);
  }
  uint64_t v52 = a3[20];
  int v53 = (void *)(a1 + v52);
  id v54 = (const void *)(a2 + v52);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81)(a2 + v52, 1, v82))
  {
    uint64_t v55 = sub_10000903C(&qword_1000A1038);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v53, v54, v82);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0, 1, v82);
  }
  uint64_t v56 = a3[21];
  uint64_t v57 = a3[22];
  uint64_t v58 = a1 + v56;
  uint64_t v59 = a2 + v56;
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  uint64_t v60 = (char *)(a1 + v57);
  uint64_t v61 = (char *)(a2 + v57);
  uint64_t v62 = sub_10000903C(&qword_1000A1050);
  uint64_t v63 = *(void *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    uint64_t v64 = sub_10000903C(&qword_1000A1058);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    int v65 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v65(v60, v61, v82);
    v65(&v60[*(int *)(v62 + 36)], &v61[*(int *)(v62 + 36)], v82);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  uint64_t v66 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v67 = v66[5];
  uint64_t v68 = &v60[v67];
  int v69 = &v61[v67];
  uint64_t v70 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
  uint64_t v71 = v66[6];
  uint64_t v72 = &v60[v71];
  char v73 = &v61[v71];
  uint64_t v74 = sub_10008A4B0();
  uint64_t v75 = *(void *)(v74 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
  {
    uint64_t v76 = sub_10000903C(&qword_1000A1060);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v72, v73, v74);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  }
  *(_OWORD *)&v60[v66[7]] = *(_OWORD *)&v61[v66[7]];
  *(_OWORD *)&v60[v66[8]] = *(_OWORD *)&v61[v66[8]];
  return a1;
}

void *sub_1000286AC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[10];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10008A170();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  id v207 = v16;
  int v18 = v16(v13, 1, v14);
  uint64_t v208 = v15;
  uint64_t v209 = v14;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = sub_10000903C(&qword_1000A1038);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)((char *)a1 + v20);
  int v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[12];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)sub_10008A340();
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30((uint64_t)v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      long long v33 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v33;
      *(unsigned char *)(v26 + 32) = v27[32];
      *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
      *(void *)(v26 + 56) = *((void *)v27 + 7);
      *(unsigned char *)(v26 + 64) = v27[64];
      *(_OWORD *)(v26 + 113) = *(_OWORD *)(v27 + 113);
      *(_OWORD *)(v26 + 104) = *(_OWORD *)(v27 + 104);
      *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(unsigned char *)(v26 + 129) = v27[129];
      uint64_t v34 = v28[11];
      uint64_t v35 = v26 + v34;
      v205 = v30;
      uint64_t v36 = a3;
      uint64_t v37 = v29;
      unsigned __int8 v38 = &v27[v34];
      uint64_t v39 = sub_10008A300();
      uint64_t v40 = v38;
      uint64_t v29 = v37;
      a3 = v36;
      uint64_t v30 = v205;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v35, v40, v39);
      *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)&v27[v28[12]];
      *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
      *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
      *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
      *(_OWORD *)(v26 + v28[16]) = *(_OWORD *)&v27[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    sub_10002F058(v26, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_12:
    uint64_t v41 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v206 = v29;
  uint64_t v124 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v124;
  swift_bridgeObjectRelease();
  uint64_t v125 = v27 + 16;
  int v126 = *(unsigned __int8 *)(v26 + 32);
  if (v126 != 255)
  {
    int v127 = v27[32];
    if (v127 != 255)
    {
      uint64_t v128 = *(void *)(v26 + 16);
      uint64_t v129 = *(void *)(v26 + 24);
      *(_OWORD *)(v26 + 16) = *v125;
      *(unsigned char *)(v26 + 32) = v127;
      sub_1000096D4(v128, v129, v126);
      goto LABEL_69;
    }
    sub_10000BE14(v26 + 16);
  }
  *(_OWORD *)(v26 + 16) = *v125;
  *(unsigned char *)(v26 + 32) = v27[32];
LABEL_69:
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  uint64_t v137 = v27 + 56;
  int v138 = *(unsigned __int8 *)(v26 + 64);
  if (v138 != 255)
  {
    int v139 = v27[64];
    if (v139 != 255)
    {
      uint64_t v140 = *(void **)(v26 + 56);
      *(void *)(v26 + 56) = *v137;
      *(unsigned char *)(v26 + 64) = v139;
      sub_1000096EC(v140, v138);
      goto LABEL_79;
    }
    sub_10000BE68(v26 + 56);
  }
  *(void *)(v26 + 56) = *v137;
  *(unsigned char *)(v26 + 64) = v27[64];
LABEL_79:
  uint64_t v145 = v27 + 72;
  int v146 = *(unsigned __int8 *)(v26 + 80);
  if (v146 != 255)
  {
    int v147 = v27[80];
    if (v147 != 255)
    {
      uint64_t v148 = *(void **)(v26 + 72);
      *(void *)(v26 + 72) = *v145;
      *(unsigned char *)(v26 + 80) = v147;
      sub_1000096EC(v148, v146);
      goto LABEL_89;
    }
    sub_10000BE68(v26 + 72);
  }
  *(void *)(v26 + 72) = *v145;
  *(unsigned char *)(v26 + 80) = v27[80];
LABEL_89:
  int v153 = v27 + 88;
  int v154 = *(unsigned __int8 *)(v26 + 96);
  if (v154 != 255)
  {
    int v155 = v27[96];
    if (v155 != 255)
    {
      uint64_t v156 = *(void **)(v26 + 88);
      *(void *)(v26 + 88) = *v153;
      *(unsigned char *)(v26 + 96) = v155;
      sub_1000096EC(v156, v154);
      goto LABEL_99;
    }
    sub_10000BE68(v26 + 88);
  }
  *(void *)(v26 + 88) = *v153;
  *(unsigned char *)(v26 + 96) = v27[96];
LABEL_99:
  int v161 = v27 + 104;
  int v162 = *(unsigned __int8 *)(v26 + 112);
  if (v162 != 255)
  {
    int v163 = v27[112];
    if (v163 != 255)
    {
      int v164 = *(void **)(v26 + 104);
      *(void *)(v26 + 104) = *v161;
      *(unsigned char *)(v26 + 112) = v163;
      sub_1000096EC(v164, v162);
      goto LABEL_109;
    }
    sub_10000BE68(v26 + 104);
  }
  *(void *)(v26 + 104) = *v161;
  *(unsigned char *)(v26 + 112) = v27[112];
LABEL_109:
  uint64_t v169 = v27 + 120;
  int v170 = *(unsigned __int8 *)(v26 + 128);
  if (v170 == 255)
  {
LABEL_118:
    *(void *)(v26 + 120) = *v169;
    *(unsigned char *)(v26 + 128) = v27[128];
    goto LABEL_119;
  }
  int v171 = v27[128];
  if (v171 == 255)
  {
    sub_10000BE68(v26 + 120);
    goto LABEL_118;
  }
  uint64_t v172 = *(void **)(v26 + 120);
  *(void *)(v26 + 120) = *v169;
  *(unsigned char *)(v26 + 128) = v171;
  sub_1000096EC(v172, v170);
LABEL_119:
  *(unsigned char *)(v26 + 129) = v27[129];
  uint64_t v177 = v28[11];
  uint64_t v178 = v26 + v177;
  uint64_t v179 = &v27[v177];
  uint64_t v180 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v180 - 8) + 40))(v178, v179, v180);
  uint64_t v181 = v28[12];
  long long v182 = (void *)(v26 + v181);
  uint64_t v183 = &v27[v181];
  uint64_t v185 = *(void *)v183;
  uint64_t v184 = *((void *)v183 + 1);
  *long long v182 = v185;
  v182[1] = v184;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
  *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
  *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
  uint64_t v186 = v28[16];
  uint64_t v187 = (void *)(v26 + v186);
  char v188 = &v27[v186];
  uint64_t v190 = *(void *)v188;
  uint64_t v189 = *((void *)v188 + 1);
  void *v187 = v190;
  v187[1] = v189;
  swift_bridgeObjectRelease();
  uint64_t v29 = v206;
LABEL_13:
  uint64_t v42 = a3[13];
  uint64_t v43 = (uint64_t)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  int v45 = v30((uint64_t)a1 + v42, 1, v28);
  int v46 = v30((uint64_t)v44, 1, v28);
  if (v45)
  {
    if (!v46)
    {
      long long v47 = *((_OWORD *)v44 + 1);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 16) = v47;
      *(unsigned char *)(v43 + 32) = v44[32];
      *(_OWORD *)(v43 + 40) = *(_OWORD *)(v44 + 40);
      *(void *)(v43 + 56) = *((void *)v44 + 7);
      *(unsigned char *)(v43 + 64) = v44[64];
      *(_OWORD *)(v43 + 113) = *(_OWORD *)(v44 + 113);
      *(_OWORD *)(v43 + 104) = *(_OWORD *)(v44 + 104);
      *(_OWORD *)(v43 + 88) = *(_OWORD *)(v44 + 88);
      *(_OWORD *)(v43 + 72) = *(_OWORD *)(v44 + 72);
      *(unsigned char *)(v43 + 129) = v44[129];
      uint64_t v48 = v28[11];
      uint64_t v49 = v43 + v48;
      uint64_t v50 = v29;
      uint64_t v51 = &v44[v48];
      uint64_t v52 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v49, v51, v52);
      *(_OWORD *)(v43 + v28[12]) = *(_OWORD *)&v44[v28[12]];
      *(unsigned char *)(v43 + v28[13]) = v44[v28[13]];
      *(unsigned char *)(v43 + v28[14]) = v44[v28[14]];
      *(unsigned char *)(v43 + v28[15]) = v44[v28[15]];
      *(_OWORD *)(v43 + v28[16]) = *(_OWORD *)&v44[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v50 + 56))(v43, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v46)
  {
    sub_10002F058(v43, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_18:
    uint64_t v53 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v43, v44, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v130 = *((void *)v44 + 1);
  *(void *)uint64_t v43 = *(void *)v44;
  *(void *)(v43 + 8) = v130;
  swift_bridgeObjectRelease();
  uint64_t v131 = v44 + 16;
  int v132 = *(unsigned __int8 *)(v43 + 32);
  if (v132 != 255)
  {
    int v133 = v44[32];
    if (v133 != 255)
    {
      uint64_t v134 = *(void *)(v43 + 16);
      uint64_t v135 = *(void *)(v43 + 24);
      *(_OWORD *)(v43 + 16) = *v131;
      *(unsigned char *)(v43 + 32) = v133;
      sub_1000096D4(v134, v135, v132);
      goto LABEL_74;
    }
    sub_10000BE14(v43 + 16);
  }
  *(_OWORD *)(v43 + 16) = *v131;
  *(unsigned char *)(v43 + 32) = v44[32];
LABEL_74:
  *(_OWORD *)(v43 + 40) = *(_OWORD *)(v44 + 40);
  int v141 = v44 + 56;
  int v142 = *(unsigned __int8 *)(v43 + 64);
  if (v142 != 255)
  {
    int v143 = v44[64];
    if (v143 != 255)
    {
      uint64_t v144 = *(void **)(v43 + 56);
      *(void *)(v43 + 56) = *v141;
      *(unsigned char *)(v43 + 64) = v143;
      sub_1000096EC(v144, v142);
      goto LABEL_84;
    }
    sub_10000BE68(v43 + 56);
  }
  *(void *)(v43 + 56) = *v141;
  *(unsigned char *)(v43 + 64) = v44[64];
LABEL_84:
  int v149 = v44 + 72;
  int v150 = *(unsigned __int8 *)(v43 + 80);
  if (v150 != 255)
  {
    int v151 = v44[80];
    if (v151 != 255)
    {
      uint64_t v152 = *(void **)(v43 + 72);
      *(void *)(v43 + 72) = *v149;
      *(unsigned char *)(v43 + 80) = v151;
      sub_1000096EC(v152, v150);
      goto LABEL_94;
    }
    sub_10000BE68(v43 + 72);
  }
  *(void *)(v43 + 72) = *v149;
  *(unsigned char *)(v43 + 80) = v44[80];
LABEL_94:
  int v157 = v44 + 88;
  int v158 = *(unsigned __int8 *)(v43 + 96);
  if (v158 != 255)
  {
    int v159 = v44[96];
    if (v159 != 255)
    {
      int v160 = *(void **)(v43 + 88);
      *(void *)(v43 + 88) = *v157;
      *(unsigned char *)(v43 + 96) = v159;
      sub_1000096EC(v160, v158);
      goto LABEL_104;
    }
    sub_10000BE68(v43 + 88);
  }
  *(void *)(v43 + 88) = *v157;
  *(unsigned char *)(v43 + 96) = v44[96];
LABEL_104:
  int v165 = v44 + 104;
  int v166 = *(unsigned __int8 *)(v43 + 112);
  if (v166 != 255)
  {
    int v167 = v44[112];
    if (v167 != 255)
    {
      uint64_t v168 = *(void **)(v43 + 104);
      *(void *)(v43 + 104) = *v165;
      *(unsigned char *)(v43 + 112) = v167;
      sub_1000096EC(v168, v166);
      goto LABEL_114;
    }
    sub_10000BE68(v43 + 104);
  }
  *(void *)(v43 + 104) = *v165;
  *(unsigned char *)(v43 + 112) = v44[112];
LABEL_114:
  uint64_t v173 = v44 + 120;
  int v174 = *(unsigned __int8 *)(v43 + 128);
  if (v174 == 255)
  {
LABEL_121:
    *(void *)(v43 + 120) = *v173;
    *(unsigned char *)(v43 + 128) = v44[128];
    goto LABEL_122;
  }
  int v175 = v44[128];
  if (v175 == 255)
  {
    sub_10000BE68(v43 + 120);
    goto LABEL_121;
  }
  uint64_t v176 = *(void **)(v43 + 120);
  *(void *)(v43 + 120) = *v173;
  *(unsigned char *)(v43 + 128) = v175;
  sub_1000096EC(v176, v174);
LABEL_122:
  *(unsigned char *)(v43 + 129) = v44[129];
  uint64_t v191 = v28[11];
  uint64_t v192 = v43 + v191;
  uint64_t v193 = &v44[v191];
  uint64_t v194 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v194 - 8) + 40))(v192, v193, v194);
  uint64_t v195 = v28[12];
  uint64_t v196 = (void *)(v43 + v195);
  char v197 = &v44[v195];
  uint64_t v199 = *(void *)v197;
  uint64_t v198 = *((void *)v197 + 1);
  void *v196 = v199;
  v196[1] = v198;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v43 + v28[13]) = v44[v28[13]];
  *(unsigned char *)(v43 + v28[14]) = v44[v28[14]];
  *(unsigned char *)(v43 + v28[15]) = v44[v28[15]];
  uint64_t v200 = v28[16];
  v201 = (void *)(v43 + v200);
  uint64_t v202 = &v44[v200];
  uint64_t v204 = *(void *)v202;
  uint64_t v203 = *((void *)v202 + 1);
  void *v201 = v204;
  v201[1] = v203;
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v54 = a3[14];
  uint64_t v55 = *(void **)((char *)a1 + v54);
  *(void *)((char *)a1 + v54) = *(void *)((char *)a2 + v54);

  uint64_t v56 = a3[15];
  uint64_t v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)a2 + v56;
  uint64_t v59 = sub_10008A050();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  int v62 = v61(v57, 1, v59);
  int v63 = v61(v58, 1, v59);
  if (v62)
  {
    uint64_t v65 = v208;
    uint64_t v64 = v209;
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v65 = v208;
  uint64_t v64 = v209;
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v59);
LABEL_24:
    uint64_t v66 = sub_10000903C(&qword_1000A1048);
    memcpy(v57, v58, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 40))(v57, v58, v59);
LABEL_25:
  uint64_t v67 = a3[17];
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  uint64_t v68 = (char *)a1 + v67;
  int v69 = (char *)a2 + v67;
  *(void *)uint64_t v68 = *(void *)v69;
  v68[8] = v69[8];
  uint64_t v70 = a3[18];
  uint64_t v71 = a3[19];
  uint64_t v72 = (char *)a1 + v70;
  char v73 = (char *)a2 + v70;
  *(void *)uint64_t v72 = *(void *)v73;
  v72[8] = v73[8];
  uint64_t v74 = (char *)a1 + v71;
  uint64_t v75 = (char *)a2 + v71;
  int v76 = v207((char *)a1 + v71, 1, v64);
  int v77 = v207(v75, 1, v64);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v74, v75, v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v74, 0, 1, v64);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v74, v64);
LABEL_30:
    uint64_t v78 = sub_10000903C(&qword_1000A1038);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v74, v75, v64);
LABEL_31:
  uint64_t v79 = a3[20];
  uint64_t v80 = (char *)a1 + v79;
  id v81 = (char *)a2 + v79;
  int v82 = v207((char *)a1 + v79, 1, v64);
  int v83 = v207(v81, 1, v64);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v80, v81, v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v80, 0, 1, v64);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v80, v64);
LABEL_36:
    uint64_t v84 = sub_10000903C(&qword_1000A1038);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v80, v81, v64);
LABEL_37:
  uint64_t v85 = a3[21];
  int v86 = (void *)((char *)a1 + v85);
  id v87 = (void *)((char *)a2 + v85);
  if (*(void *)((char *)a1 + v85))
  {
    if (*v87)
    {
      *int v86 = *v87;
      swift_release();
      v86[1] = v87[1];
      swift_release();
      v86[2] = v87[2];
      swift_release();
      goto LABEL_42;
    }
    sub_10000BF18((uint64_t)v86);
  }
  *(_OWORD *)int v86 = *(_OWORD *)v87;
  v86[2] = v87[2];
LABEL_42:
  uint64_t v88 = a3[22];
  char v89 = (char *)a1 + v88;
  id v90 = (char *)a2 + v88;
  uint64_t v91 = sub_10000903C(&qword_1000A1050);
  uint64_t v92 = *(void *)(v91 - 8);
  uint64_t v93 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48);
  int v94 = v93(v89, 1, v91);
  int v95 = v93(v90, 1, v91);
  uint64_t v210 = a1;
  if (v94)
  {
    if (!v95)
    {
      id v96 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
      v96(v89, v90, v64);
      v96(&v89[*(int *)(v91 + 36)], &v90[*(int *)(v91 + 36)], v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v95)
  {
    sub_100015614((uint64_t)v89, &qword_1000A1050);
LABEL_47:
    uint64_t v97 = sub_10000903C(&qword_1000A1058);
    memcpy(v89, v90, *(void *)(*(void *)(v97 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v136 = *(void (**)(char *, char *, uint64_t))(v65 + 40);
  v136(v89, v90, v64);
  v136(&v89[*(int *)(v91 + 36)], &v90[*(int *)(v91 + 36)], v64);
LABEL_48:
  char v98 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v99 = v98[5];
  char v100 = &v89[v99];
  id v101 = &v90[v99];
  uint64_t v102 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 40))(v100, v101, v102);
  uint64_t v103 = v98[6];
  int v104 = &v89[v103];
  id v105 = &v90[v103];
  uint64_t v106 = sub_10008A4B0();
  uint64_t v107 = *(void *)(v106 - 8);
  id v108 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48);
  int v109 = v108(v104, 1, v106);
  int v110 = v108(v105, 1, v106);
  if (!v109)
  {
    uint64_t v111 = v210;
    if (!v110)
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 40))(v104, v105, v106);
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v107 + 8))(v104, v106);
    goto LABEL_53;
  }
  uint64_t v111 = v210;
  if (v110)
  {
LABEL_53:
    uint64_t v112 = sub_10000903C(&qword_1000A1060);
    memcpy(v104, v105, *(void *)(*(void *)(v112 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v104, v105, v106);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
LABEL_54:
  uint64_t v113 = v98[7];
  id v114 = &v89[v113];
  uint64_t v115 = &v90[v113];
  uint64_t v117 = *(void *)v115;
  uint64_t v116 = *((void *)v115 + 1);
  *(void *)id v114 = v117;
  *((void *)v114 + 1) = v116;
  swift_bridgeObjectRelease();
  uint64_t v118 = v98[8];
  id v119 = &v89[v118];
  uint64_t v120 = &v90[v118];
  uint64_t v122 = *(void *)v120;
  uint64_t v121 = *((void *)v120 + 1);
  *(void *)id v119 = v122;
  *((void *)v119 + 1) = v121;
  swift_bridgeObjectRelease();
  return v111;
}

uint64_t sub_1000298BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000298D0);
}

uint64_t sub_1000298D0(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_10000903C(&qword_1000A1038);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[10];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_10000903C(&qword_1000A1040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[12];
    goto LABEL_11;
  }
  uint64_t v13 = sub_10000903C(&qword_1000A1048);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[15];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[22];

  return v16(v18, a2, v17);
}

uint64_t sub_100029AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100029AB4);
}

uint64_t sub_100029AB4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_10000903C(&qword_1000A1038);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[10];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_10000903C(&qword_1000A1040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_9;
  }
  uint64_t v13 = sub_10000903C(&qword_1000A1048);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[15];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[22];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for UpNextEntry.Episode(uint64_t a1)
{
  return sub_100029CA4(a1, (uint64_t *)&unk_1000A17A0);
}

uint64_t sub_100029CA4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100029CDC()
{
  sub_100029EC8(319, (unint64_t *)&qword_1000A1458, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_100029EC8(319, &qword_1000A17B0, (void (*)(uint64_t))&type metadata accessor for ArtworkModel);
    if (v1 <= 0x3F)
    {
      sub_100029EC8(319, (unint64_t *)&qword_1000A17B8, (void (*)(uint64_t))&type metadata accessor for URL);
      if (v2 <= 0x3F)
      {
        type metadata accessor for WidgetPredictedPlayState();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100029EC8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10008B530();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100029F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,unsigned __int8 a21,double a22,char a23,void (*a24)(char *, uint64_t),unsigned __int8 a25,uint64_t a26,void (*a27)(char *, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v130 = a7;
  uint64_t v131 = a8;
  uint64_t v117 = a6;
  uint64_t v116 = a5;
  uint64_t v121 = a3;
  uint64_t v122 = a4;
  uint64_t v109 = a2;
  uint64_t v108 = a1;
  int v132 = a27;
  uint64_t v133 = a26;
  double v127 = a22;
  uint64_t v128 = a28;
  uint64_t v134 = a20;
  uint64_t v135 = a16;
  uint64_t v136 = a15;
  uint64_t v137 = a14;
  uint64_t v32 = type metadata accessor for WidgetPredictedPlayState();
  __chkstk_darwin(v32 - 8);
  uint64_t v129 = (uint64_t)&v97 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10008A1A0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008A190();
  uint64_t v38 = sub_10008A180();
  uint64_t v40 = v39;
  uint64_t v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v107 = v34;
  uint64_t v106 = v35 + 8;
  id v105 = v41;
  v41(v37, v34);
  *a9 = v38;
  a9[1] = v40;
  uint64_t v42 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v43 = (char *)a9 + v42[10];
  uint64_t v44 = sub_10008A170();
  uint64_t v45 = *(void *)(v44 - 8);
  id v123 = v43;
  uint64_t v124 = v45;
  int v46 = *(void (**)(void))(v45 + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46)(v43, 1, 1, v44);
  long long v47 = (uint64_t *)((char *)a9 + v42[11]);
  void *v47 = 0;
  v47[1] = 0;
  uint64_t v120 = v47;
  uint64_t v48 = (uint64_t)a9 + v42[12];
  uint64_t v49 = sub_10008A340();
  uint64_t v50 = *(void (**)(void))(*(void *)(v49 - 8) + 56);
  uint64_t v119 = v48;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50)(v48, 1, 1, v49);
  uint64_t v115 = (uint64_t)a9 + v42[13];
  v50();
  uint64_t v114 = v42[14];
  *(uint64_t *)((char *)a9 + v114) = 0;
  uint64_t v51 = (uint64_t)a9 + v42[15];
  uint64_t v52 = sub_10008A050();
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
  uint64_t v118 = v51;
  uint64_t v54 = v51;
  uint64_t v55 = v109;
  v53(v54, 1, 1, v52);
  uint64_t v112 = v42[16];
  *((unsigned char *)a9 + v112) = 0;
  uint64_t v56 = (char *)a9 + v42[17];
  *(void *)uint64_t v56 = 0;
  v56[8] = 1;
  uint64_t v57 = (char *)a9 + v42[18];
  *(void *)uint64_t v57 = 0;
  v57[8] = 1;
  uint64_t v113 = (uint64_t)a9 + v42[19];
  v46();
  uint64_t v111 = (uint64_t)a9 + v42[20];
  uint64_t v125 = v44;
  v46();
  int v126 = v42;
  uint64_t v58 = (uint64_t *)((char *)a9 + v42[21]);
  *uint64_t v58 = 0;
  v58[1] = 0;
  int v110 = v58;
  v58[2] = 0;
  if (v55)
  {
    uint64_t v59 = v108;
  }
  else
  {
    sub_10008A190();
    uint64_t v59 = sub_10008A180();
    uint64_t v55 = v60;
    v105(v37, v107);
  }
  uint64_t v109 = a31;
  uint64_t v108 = a30;
  uint64_t v107 = a29;
  LODWORD(v106) = a25;
  id v105 = a24;
  char v61 = a23;
  int v104 = a21;
  uint64_t v103 = a18;
  uint64_t v102 = a17;
  uint64_t v101 = a13;
  uint64_t v100 = a12;
  uint64_t v99 = a11;
  uint64_t v98 = a10;
  swift_bridgeObjectRelease();
  *a9 = v59;
  a9[1] = v55;
  uint64_t v62 = v121;
  uint64_t v63 = v122;
  a9[2] = v121;
  a9[3] = v63;
  uint64_t v64 = (uint64_t)v117;
  a9[4] = v116;
  a9[5] = v64;
  uint64_t v66 = v130;
  uint64_t v65 = v131;
  if (v130)
  {
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v66;
    *(void *)(v67 + 24) = v65;
    uint64_t v68 = sub_10002EF18;
  }
  else
  {
    uint64_t v117 = v57;
    uint64_t v69 = v62;
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v69;
    *(void *)(v67 + 24) = v63;
    char v61 = a23;
    uint64_t v57 = v117;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_10002EDCC;
  }
  uint64_t v70 = v68;
  uint64_t v71 = v66;
  LODWORD(v122) = v61 & 1;
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = v70;
  *(void *)(v72 + 24) = v67;
  type metadata accessor for UpNextEntry.Episode.CaptionGenerator();
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = sub_10002EDD8;
  *(void *)(v73 + 24) = v72;
  uint64_t v74 = v98;
  a9[6] = v73;
  a9[7] = v74;
  uint64_t v75 = v100;
  a9[8] = v99;
  a9[9] = v75;
  a9[10] = v101;
  sub_10002EE10(v71);
  sub_10002EE20(v135, (uint64_t)v123, &qword_1000A1038);
  char v76 = v61;
  int v77 = v120;
  swift_bridgeObjectRelease();
  uint64_t v78 = v103;
  *int v77 = v102;
  v77[1] = v78;
  sub_10002EE20(v137, v119, &qword_1000A1040);
  sub_10002EE20(v136, v115, &qword_1000A1040);
  uint64_t v79 = *(void **)((char *)a9 + v114);
  *(uint64_t *)((char *)a9 + v114) = (uint64_t)a19;
  id v123 = a19;

  sub_10002EE20(v134, v118, &qword_1000A1048);
  LODWORD(v121) = v104 & 1;
  *((unsigned char *)a9 + v112) = v104 & 1;
  double v80 = v127;
  char v81 = v76 & 1 | (v127 <= 0.0);
  if (v81) {
    double v82 = 0.0;
  }
  else {
    double v82 = v127;
  }
  *(double *)uint64_t v56 = v82;
  v56[8] = v81;
  char v83 = v106 & 1;
  LODWORD(v120) = v106 & 1;
  uint64_t v84 = (void (*)(void, void))v105;
  *(void *)uint64_t v57 = v105;
  v57[8] = v83;
  sub_10002EE20(v133, v113, &qword_1000A1038);
  sub_10002EE20((uint64_t)v132, v111, &qword_1000A1038);
  uint64_t v85 = v110;
  uint64_t v86 = *v110;
  uint64_t v87 = v107;
  uint64_t v88 = v108;
  uint64_t v89 = v109;
  sub_10000E31C(v107);
  sub_10002EE84(v86);
  *uint64_t v85 = v87;
  v85[1] = v88;
  v85[2] = v89;
  uint64_t v90 = v129;
  double v91 = v80;
  double v92 = *(double *)&v84;
  uint64_t v93 = v132;
  uint64_t v94 = v133;
  uint64_t v95 = v128;
  sub_10003B3F0(v121, v91, v122, v92, (int)v120, v133, v132, v128, v129);
  sub_10002EE84(v87);

  sub_10002EED0(v130);
  (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v95, v125);
  sub_100015614((uint64_t)v93, &qword_1000A1038);
  sub_100015614(v94, &qword_1000A1038);
  sub_100015614(v134, &qword_1000A1048);
  sub_100015614(v135, &qword_1000A1038);
  sub_100015614(v136, &qword_1000A1040);
  sub_100015614(v137, &qword_1000A1040);
  return sub_10002EF68(v90, (uint64_t)a9 + v126[22], (uint64_t (*)(void))type metadata accessor for WidgetPredictedPlayState);
}

uint64_t sub_10002A740@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *sub_10002A750()
{
  return &protocol witness table for String;
}

uint64_t sub_10002A75C()
{
  return sub_10002B49C(&qword_1000A1830, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10002A7A4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v33 = a6;
  int v12 = a1;
  uint64_t v13 = sub_10000903C(&qword_1000A1690);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (objc_class *)[self mainBundle];
  v32._countAndFlagsBits = 0xE000000000000000;
  v35._object = (void *)0x8000000100090120;
  v35._countAndFlagsBits = 0xD000000000000015;
  v36.value._countAndFlagsBits = 0;
  v36.value._object = 0;
  v17.super.isa = v16;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  uint64_t v18 = sub_10008A010(v35, v36, v17, v37, v32);
  uint64_t v20 = v19;

  *(void *)a7 = v18;
  *(void *)(a7 + 8) = v20;
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  sub_10008A190();
  *(void *)(a7 + Entry[8]) = a3;
  uint64_t v22 = a7 + Entry[9];
  uint64_t v34 = a4;
  sub_1000155B0(a4, v22, &qword_1000A1038);
  uint64_t v23 = a7 + Entry[10];
  uint64_t v24 = sub_10008A170();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, a5, v24);
  if (v12 != 2)
  {
    char v28 = v12 & 1;
LABEL_6:
    id v26 = a3;
    uint64_t v29 = swift_bridgeObjectRelease();
    *(unsigned char *)(a7 + 16) = v28;
    __chkstk_darwin(v29);
    uint64_t v27 = v33;
    v32._countAndFlagsBits = v33;
    *(void *)(a7 + 24) = sub_1000205E4((void (*)(unint64_t *))sub_10002EF48, (uint64_t)(&v33 - 4), 1uLL, 6uLL);
    sub_10008B280();
    goto LABEL_7;
  }
  if (!*(void *)(a2 + 16))
  {
    char v28 = 0;
    goto LABEL_6;
  }
  *(unsigned char *)(a7 + 16) = 2;
  *(void *)(a7 + 24) = a2;
  id v26 = a3;
  swift_bridgeObjectRetain();
  sub_1000187E4(a5, a2, (uint64_t)v15);
  swift_bridgeObjectRelease();
  uint64_t v27 = v33;
LABEL_7:

  sub_100015614(v27, &qword_1000A1850);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a5, v24);
  sub_100015614(v34, &qword_1000A1038);
  uint64_t v30 = sub_10008B290();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v15, 0, 1, v30);
  return sub_10001547C((uint64_t)v15, a7 + Entry[11], &qword_1000A1690);
}

uint64_t sub_10002AAC8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v68 = sub_10008A170();
  uint64_t v66 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000903C(&qword_1000A1048);
  __chkstk_darwin(v4 - 8);
  uint64_t v65 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000903C(&qword_1000A1038);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v64 = (void (*)(char *, uint64_t))((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v62 = (char *)&v54 - v10;
  __chkstk_darwin(v9);
  uint64_t v63 = (char *)&v54 - v11;
  uint64_t v12 = sub_10000903C(&qword_1000A1040);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  char v61 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v60 = (char *)&v54 - v15;
  uint64_t v16 = sub_10008B220();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000903C(&qword_1000A1860);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000903C(&qword_1000A1850);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v54 - v28;
  v70._countAndFlagsBits = 109;
  v70._object = (void *)0xE100000000000000;
  uint64_t v30 = sub_10008B3D0(v70, 18);
  uint64_t v58 = v31;
  uint64_t v59 = v30;
  v71._countAndFlagsBits = 109;
  v71._object = (void *)0xE100000000000000;
  uint64_t v32 = sub_10008B3D0(v71, 10);
  uint64_t v56 = v33;
  uint64_t v57 = v32;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v29, enum case for WidgetFamily.systemExtraLarge(_:), v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v29, 0, 1, v16);
  uint64_t v34 = (uint64_t)&v23[*(int *)(v21 + 56)];
  sub_1000155B0(a1, (uint64_t)v23, &qword_1000A1850);
  sub_1000155B0((uint64_t)v29, v34, &qword_1000A1850);
  Swift::String v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v35((uint64_t)v23, 1, v16) != 1)
  {
    sub_1000155B0((uint64_t)v23, (uint64_t)v27, &qword_1000A1850);
    if (v35(v34, 1, v16) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v19, v34, v16);
      sub_10002B49C(&qword_1000A1868, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      char v36 = sub_10008B310();
      Swift::String v37 = *(void (**)(char *, uint64_t))(v17 + 8);
      v37(v19, v16);
      sub_100015614((uint64_t)v29, &qword_1000A1850);
      v37(v27, v16);
      sub_100015614((uint64_t)v23, &qword_1000A1850);
      if (v36) {
        goto LABEL_8;
      }
LABEL_9:
      Swift::Int v38 = 70;
      goto LABEL_10;
    }
    sub_100015614((uint64_t)v29, &qword_1000A1850);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v27, v16);
LABEL_6:
    sub_100015614((uint64_t)v23, &qword_1000A1860);
    goto LABEL_9;
  }
  sub_100015614((uint64_t)v29, &qword_1000A1850);
  if (v35(v34, 1, v16) != 1) {
    goto LABEL_6;
  }
  sub_100015614((uint64_t)v23, &qword_1000A1850);
LABEL_8:
  Swift::Int v38 = 60;
LABEL_10:
  v72._countAndFlagsBits = 109;
  v72._object = (void *)0xE100000000000000;
  uint64_t v39 = sub_10008B3D0(v72, v38);
  uint64_t v54 = v40;
  uint64_t v55 = v39;
  uint64_t v41 = sub_10008A340();
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
  uint64_t v43 = (uint64_t)v60;
  v42(v60, 1, 1, v41);
  uint64_t v44 = (uint64_t)v61;
  v42(v61, 1, 1, v41);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
  uint64_t v46 = (uint64_t)v63;
  uint64_t v47 = v68;
  v45(v63, 1, 1, v68);
  uint64_t v48 = sub_10008A050();
  uint64_t v49 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v65, 1, 1, v48);
  uint64_t v50 = (uint64_t)v62;
  v45(v62, 1, 1, v47);
  uint64_t v51 = v64;
  v45((char *)v64, 1, 1, v47);
  uint64_t v52 = (uint64_t)v67;
  sub_10008A150();
  return sub_100029F1C(0, 0, v59, v58, v57, v56, 0, 0, v69, 0, 0xE000000000000000, v55, v54, v43, v44, v46, 0, 0, 0,
           v49,
           0,
           0.0,
           1,
           0,
           1u,
           v50,
           v51,
           v52,
           0,
           0,
           0);
}

uint64_t sub_10002B208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for WidgetPredictedPlayState();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F0D8(a1, (uint64_t)a3, type metadata accessor for UpNextEntry.Episode);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(a3[6] + 16);
  swift_retain();
  uint64_t v10 = v9(a2);
  uint64_t v12 = v11;
  swift_release();
  swift_bridgeObjectRelease();
  a3[2] = v10;
  a3[3] = v12;
  uint64_t v13 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  sub_10003B3F0(*((unsigned char *)a3 + v13[16]), *(double *)((char *)a3 + v13[17]), *((unsigned char *)a3 + v13[17] + 8), *(double *)((char *)a3 + v13[18]), *((unsigned __int8 *)a3 + v13[18] + 8), (uint64_t)a3 + v13[19], (void (*)(char *, uint64_t))((char *)a3 + v13[20]), a2, (uint64_t)v8);
  return sub_10002F140((uint64_t)v8, (uint64_t)a3 + v13[22]);
}

uint64_t sub_10002B348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_10008A170();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_10002B3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000155B0(v2 + *(int *)(a1 + 44), a2, &qword_1000A1690);
}

uint64_t sub_10002B3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_10008A1A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_10002B454()
{
  return sub_10002B49C(qword_1000A1838, (void (*)(uint64_t))type metadata accessor for UpNextEntry);
}

uint64_t sub_10002B49C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002B4E4(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v8 = sub_10000903C(&qword_1000A1038);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v24 - v16;
  sub_1000155B0(a1, (uint64_t)v10, &qword_1000A1038);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t result = sub_100015614((uint64_t)v10, &qword_1000A1038);
    *a3 = 1;
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v19(v17, v10, v11);
    sub_10002B49C((unint64_t *)&qword_1000A13A0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (sub_10008B2F0())
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
      unint64_t v20 = *a5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a5 = v20;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v20 = sub_10007F66C(0, *(void *)(v20 + 16) + 1, 1, v20);
        *a5 = v20;
      }
      unint64_t v23 = *(void *)(v20 + 16);
      unint64_t v22 = *(void *)(v20 + 24);
      if (v23 >= v22 >> 1)
      {
        unint64_t v20 = sub_10007F66C(v22 > 1, v23 + 1, 1, v20);
        *a5 = v20;
      }
      *(void *)(v20 + 16) = v23 + 1;
      v19((char *)(v20+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v23), v15, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      *a3 = 1;
    }
  }
  return result;
}

Swift::Int sub_10002B7D0(void **a1)
{
  uint64_t v2 = *(void *)(sub_10008A170() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_10002D4E4(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10002B878(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_10002B878(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10008A170();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v136 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  int v151 = (char *)&v131 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  int v146 = (char *)&v131 - v11;
  __chkstk_darwin(v10);
  int v147 = (char *)&v131 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = sub_10008B660(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      return sub_10002C438(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  int v150 = a1;
  Swift::Int v133 = result;
  if (v13 < 2)
  {
    uint64_t v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    int v132 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v19[16 * v126 + 32];
          uint64_t v128 = *(void *)&v19[16 * v21 + 24];
          sub_10002C758(v125 + v5[9] * v127, v125 + v5[9] * *(void *)&v19[16 * v21 + 16], v125 + v5[9] * v128, v138);
          if (v2) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_10002CFC8((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v129 = &v19[16 * v126 + 32];
          *(void *)uint64_t v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_10008B440();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    int v132 = (void *)v17;
    unint64_t v138 = v17 + v18;
  }
  Swift::Int v20 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v5 + 1);
  uint64_t v145 = v5 + 2;
  int v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  uint64_t v19 = (char *)_swiftEmptyArrayStorage;
  int v139 = v5;
  while (1)
  {
    Swift::Int v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    Swift::Int v142 = v20 + 1;
    Swift::Int v153 = v139[9];
    Swift::Int v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_10002B49C((unint64_t *)&qword_1000A13A0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v31 = v147;
    Swift::Int v148 = v30;
    LODWORD(v152) = sub_10008B2F0();
    Swift::Int v32 = v13;
    uint64_t v33 = (void (*)(char *, uint64_t))v139[1];
    uint64_t v34 = v29;
    Swift::Int v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    Swift::Int v35 = v153;
    Swift::Int v23 = v22 + 2;
    Swift::Int v143 = v32;
    if (v22 + 2 >= v32)
    {
      Swift::Int v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      Swift::Int v37 = v153 * v23;
      while (1)
      {
        Swift::Int v38 = v23;
        uint64_t v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        uint64_t v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = sub_10008B2F0();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        Swift::Int v23 = v38 + 1;
        Swift::Int v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          Swift::Int v13 = v143;
          Swift::Int v23 = v143;
          uint64_t v2 = v131;
          uint64_t v19 = v134;
          Swift::Int v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      uint64_t v19 = v134;
      Swift::Int v23 = v38;
      Swift::Int v22 = v137;
      Swift::Int v13 = v143;
      Swift::Int v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      uint64_t v47 = v150;
      goto LABEL_38;
    }
    uint64_t v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    Swift::Int v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    uint64_t v47 = v150;
    Swift::Int v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        uint64_t v52 = (char *)(v141 + v44);
        uint64_t v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        uint64_t v47 = v150;
        Swift::Int v23 = v148;
        Swift::Int v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    uint64_t v19 = v134;
    Swift::Int v22 = v137;
    Swift::Int v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    Swift::Int v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      uint64_t v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      Swift::Int v57 = v23 * v55;
      Swift::Int v135 = v54;
      do
      {
        uint64_t v59 = 0;
        Swift::Int v148 = v23;
        Swift::Int v142 = v57;
        Swift::Int v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          uint64_t v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          Swift::Int v153 = v22;
          Swift::Int v61 = v57 + v59 + v60;
          uint64_t v62 = v147;
          uint64_t v63 = v47;
          uint64_t v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          uint64_t v66 = v146;
          v64(v146, v65, v53);
          sub_10002B49C((unint64_t *)&qword_1000A13A0, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v60) = sub_10008B2F0();
          uint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          Swift::Int v57 = v142;
          uint64_t v56 = v143;
          uint64_t v69 = (char *)(v68 + v143 + v59);
          Swift::String v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          Swift::Int v22 = v153 + 1;
          Swift::Int v58 = v148;
          uint64_t v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v58 = v148;
        uint64_t v53 = v149;
        uint64_t v47 = v63;
        Swift::Int v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        Swift::Int v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        Swift::Int v22 = v137;
      }
      while (v23 != v135);
      Swift::Int v23 = v135;
      uint64_t v2 = v131;
      uint64_t v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_10002CD8C(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      uint64_t v19 = sub_10002CD8C((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v75 = v19 + 32;
    char v76 = &v19[16 * v74 + 32];
    Swift::Int v77 = v148;
    *(void *)char v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          char v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          double v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            uint64_t v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        id v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        uint64_t v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        uint64_t v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        uint64_t v118 = v19;
        uint64_t v119 = &v75[16 * v117];
        uint64_t v120 = *(void *)v119;
        uint64_t v121 = &v75[16 * v78];
        uint64_t v122 = *((void *)v121 + 1);
        sub_10002C758(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        id v123 = v118;
        *(void *)uint64_t v119 = v120;
        *(void *)&v75[16 * v117 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        uint64_t v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = v150[1];
    Swift::Int v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_10008B5B0();
  __break(1u);
  return result;
}

uint64_t sub_10002C438(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_10008A170();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    Swift::Int v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      Swift::Int v22 = v33;
      v33(v36, v20, v7);
      Swift::Int v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_10002B49C((unint64_t *)&qword_1000A13A0, (void (*)(uint64_t))&type metadata accessor for Date);
      LOBYTE(v22) = sub_10008B2F0();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10002C758(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_10008A170();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v56 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        uint64_t v39 = v55;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          uint64_t v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_10002B49C((unint64_t *)&qword_1000A13A0, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v41) = sub_10008B2F0();
          Swift::Int v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      Swift::Int v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_10002B49C((unint64_t *)&qword_1000A13A0, (void (*)(uint64_t))&type metadata accessor for Date);
        char v27 = sub_10008B2F0();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_10002CE88(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

char *sub_10002CD8C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000903C(&qword_1000A1858);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10002CE88(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_10008A170();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_10008B5D0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_10002CFC8(uint64_t a1)
{
  return sub_10002CD8C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10002CFDC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_10007F6A0(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_10000903C(&qword_1000A1038) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

uint64_t sub_10002D190(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_10007F66C(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_10008A170() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

uint64_t sub_10002D334(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_10007F910(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for UpNextEntry(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

uint64_t sub_10002D4E4(void *a1)
{
  return sub_100040DDC(0, a1[2], 0, a1);
}

uint64_t sub_10002D4F8(void *a1, void *a2)
{
  uint64_t v4 = sub_10008A050();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v190 = v4;
  uint64_t v191 = v5;
  __chkstk_darwin(v4);
  char v188 = (char *)&v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_10000903C(&qword_1000A18A8);
  __chkstk_darwin(v189);
  uint64_t v192 = (char *)&v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000903C(&qword_1000A1048);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v197 = (char *)&v173 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v194 = (uint64_t)&v173 - v12;
  __chkstk_darwin(v11);
  uint64_t v198 = (uint64_t)&v173 - v13;
  uint64_t v203 = sub_10008A340();
  uint64_t v207 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  uint64_t v195 = (uint64_t)&v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_10000903C(&qword_1000A18B0);
  uint64_t v15 = __chkstk_darwin(v204);
  uint64_t v196 = (uint64_t)&v173 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v202 = (uint64_t)&v173 - v17;
  uint64_t v18 = sub_10000903C(&qword_1000A1040);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v193 = (uint64_t)&v173 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v200 = (uint64_t)&v173 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v201 = (uint64_t)&v173 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v199 = (uint64_t)&v173 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v29 = (char *)&v173 - v28;
  __chkstk_darwin(v27);
  uint64_t v205 = (uint64_t)&v173 - v30;
  uint64_t v31 = sub_10008A170();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v206 = (char *)&v173 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10000903C(&qword_1000A14C8);
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v183 = (uint64_t)&v173 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v187 = (uint64_t)&v173 - v38;
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v173 - v39;
  uint64_t v41 = sub_10000903C(&qword_1000A1038);
  uint64_t v42 = __chkstk_darwin(v41 - 8);
  uint64_t v180 = (uint64_t)&v173 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v181 = (uint64_t)&v173 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v182 = (uint64_t)&v173 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v184 = (uint64_t)&v173 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v185 = (uint64_t)&v173 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v186 = (uint64_t)&v173 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v56 = (char *)&v173 - v55;
  uint64_t v57 = __chkstk_darwin(v54);
  unint64_t v59 = (char *)&v173 - v58;
  __chkstk_darwin(v57);
  Swift::Int v61 = (char *)&v173 - v60;
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v62 = sub_10008B690();
    char v63 = 0;
    if ((v62 & 1) == 0) {
      return v63 & 1;
    }
  }
  if (a1[2] != a2[2] || a1[3] != a2[3])
  {
    char v64 = sub_10008B690();
    char v63 = 0;
    if ((v64 & 1) == 0) {
      return v63 & 1;
    }
  }
  if (a1[4] != a2[4] || a1[5] != a2[5])
  {
    char v65 = sub_10008B690();
    char v63 = 0;
    if ((v65 & 1) == 0) {
      return v63 & 1;
    }
  }
  if (a1[6] != a2[6])
  {
LABEL_11:
    char v63 = 0;
    return v63 & 1;
  }
  if (a1[7] != a2[7] || a1[8] != a2[8])
  {
    char v67 = sub_10008B690();
    char v63 = 0;
    if ((v67 & 1) == 0) {
      return v63 & 1;
    }
  }
  if (a1[9] != a2[9] || a1[10] != a2[10])
  {
    char v68 = sub_10008B690();
    char v63 = 0;
    if ((v68 & 1) == 0) {
      return v63 & 1;
    }
  }
  uint64_t v69 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v177 = v34;
  Swift::String v70 = (int *)v69;
  uint64_t v71 = (uint64_t)a1 + *(int *)(v69 + 40);
  uint64_t v179 = v31;
  sub_1000155B0(v71, (uint64_t)v61, &qword_1000A1038);
  int v175 = v70;
  sub_1000155B0((uint64_t)a2 + v70[10], (uint64_t)v59, &qword_1000A1038);
  uint64_t v72 = (uint64_t)&v40[*(int *)(v177 + 48)];
  sub_1000155B0((uint64_t)v61, (uint64_t)v40, &qword_1000A1038);
  uint64_t v178 = v72;
  uint64_t v73 = v179;
  sub_1000155B0((uint64_t)v59, v72, &qword_1000A1038);
  uint64_t v176 = v32;
  uint64_t v74 = v32;
  uint64_t v75 = v73;
  unint64_t v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  uint64_t v77 = v74 + 48;
  char v76 = v78;
  if (v78((uint64_t)v40, 1, v75) != 1)
  {
    sub_1000155B0((uint64_t)v40, (uint64_t)v56, &qword_1000A1038);
    if (v76(v178, 1, v75) != 1)
    {
      int v174 = v76;
      uint64_t v81 = v75;
      char v82 = v206;
      (*(void (**)(char *, uint64_t, uint64_t))(v176 + 32))(v206, v178, v81);
      sub_10002B49C(&qword_1000A14D0, (void (*)(uint64_t))&type metadata accessor for Date);
      LODWORD(v173) = sub_10008B310();
      uint64_t v178 = v77;
      char v83 = *(void (**)(char *, uint64_t))(v176 + 8);
      v83(v82, v179);
      sub_100015614((uint64_t)v59, &qword_1000A1038);
      sub_100015614((uint64_t)v61, &qword_1000A1038);
      v83(v56, v179);
      uint64_t v77 = v178;
      sub_100015614((uint64_t)v40, &qword_1000A1038);
      if ((v173 & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_28;
    }
    sub_100015614((uint64_t)v59, &qword_1000A1038);
    sub_100015614((uint64_t)v61, &qword_1000A1038);
    (*(void (**)(char *, uint64_t))(v176 + 8))(v56, v75);
LABEL_24:
    uint64_t v79 = &qword_1000A14C8;
    goto LABEL_25;
  }
  sub_100015614((uint64_t)v59, &qword_1000A1038);
  sub_100015614((uint64_t)v61, &qword_1000A1038);
  if (v76(v178, 1, v179) != 1) {
    goto LABEL_24;
  }
  int v174 = v76;
  sub_100015614((uint64_t)v40, &qword_1000A1038);
LABEL_28:
  uint64_t v84 = v175;
  uint64_t v85 = v175[11];
  uint64_t v86 = (void *)((char *)a1 + v85);
  uint64_t v87 = *(void *)((char *)a1 + v85 + 8);
  uint64_t v88 = (void *)((char *)a2 + v85);
  uint64_t v89 = v88[1];
  if (!v87)
  {
    if (v89) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
  if (!v89) {
    goto LABEL_11;
  }
  if (*v86 == *v88 && v87 == v89 || (v90 = sub_10008B690(), char v63 = 0, (v90 & 1) != 0))
  {
LABEL_35:
    uint64_t v91 = v205;
    sub_1000155B0((uint64_t)a1 + v84[12], v205, &qword_1000A1040);
    sub_1000155B0((uint64_t)a2 + v84[12], (uint64_t)v29, &qword_1000A1040);
    uint64_t v92 = v202;
    uint64_t v93 = v202 + *(int *)(v204 + 48);
    sub_1000155B0(v91, v202, &qword_1000A1040);
    sub_1000155B0((uint64_t)v29, v93, &qword_1000A1040);
    uint64_t v95 = v207 + 48;
    uint64_t v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48);
    uint64_t v96 = v203;
    unsigned int v97 = v94(v92, 1, v203);
    uint64_t v207 = v95;
    if (v97 == 1)
    {
      sub_100015614((uint64_t)v29, &qword_1000A1040);
      sub_100015614(v91, &qword_1000A1040);
      if (v94(v93, 1, v96) == 1)
      {
        uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v94;
        sub_100015614(v92, &qword_1000A1040);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v98 = v199;
      sub_1000155B0(v92, v199, &qword_1000A1040);
      if (v94(v93, 1, v96) != 1)
      {
        uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v94;
        uint64_t v99 = v195;
        sub_10002EF68(v93, v195, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
        char v100 = sub_10008A330();
        sub_10002F058(v99, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
        sub_100015614((uint64_t)v29, &qword_1000A1040);
        sub_100015614(v205, &qword_1000A1040);
        sub_10002F058(v98, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
        uint64_t v96 = v203;
        sub_100015614(v92, &qword_1000A1040);
        if ((v100 & 1) == 0) {
          goto LABEL_11;
        }
LABEL_42:
        uint64_t v178 = v77;
        char v101 = v175;
        uint64_t v102 = v201;
        sub_1000155B0((uint64_t)a1 + v175[13], v201, &qword_1000A1040);
        uint64_t v103 = v200;
        sub_1000155B0((uint64_t)a2 + v101[13], v200, &qword_1000A1040);
        uint64_t v104 = v196;
        uint64_t v105 = v196 + *(int *)(v204 + 48);
        sub_1000155B0(v102, v196, &qword_1000A1040);
        sub_1000155B0(v103, v105, &qword_1000A1040);
        BOOL v106 = v173;
        if (v173(v104, 1, v96) == 1)
        {
          sub_100015614(v103, &qword_1000A1040);
          sub_100015614(v102, &qword_1000A1040);
          int v107 = v106(v105, 1, v96);
          uint64_t v109 = (uint64_t)v197;
          uint64_t v108 = v198;
          if (v107 == 1)
          {
            uint64_t v110 = v194;
            sub_100015614(v104, &qword_1000A1040);
LABEL_49:
            uint64_t v115 = v175;
            uint64_t v116 = v175[14];
            unint64_t v117 = *(void **)((char *)a1 + v116);
            uint64_t v118 = *(void **)((char *)a2 + v116);
            if (v117)
            {
              uint64_t v40 = v192;
              if (!v118) {
                goto LABEL_11;
              }
              sub_10002F1AC();
              id v119 = v118;
              id v120 = v117;
              char v121 = sub_10008B500();

              if ((v121 & 1) == 0) {
                goto LABEL_11;
              }
            }
            else
            {
              uint64_t v40 = v192;
              if (v118) {
                goto LABEL_11;
              }
            }
            sub_1000155B0((uint64_t)a1 + v115[15], v108, &qword_1000A1048);
            sub_1000155B0((uint64_t)a2 + v115[15], v110, &qword_1000A1048);
            uint64_t v122 = (uint64_t)&v40[*(int *)(v189 + 48)];
            sub_1000155B0(v108, (uint64_t)v40, &qword_1000A1048);
            sub_1000155B0(v110, v122, &qword_1000A1048);
            uint64_t v123 = v190;
            uint64_t v124 = v110;
            uint64_t v125 = v108;
            unint64_t v126 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
            if (v126((uint64_t)v40, 1, v190) == 1)
            {
              sub_100015614(v124, &qword_1000A1048);
              sub_100015614(v125, &qword_1000A1048);
              uint64_t v40 = v192;
              if (v126(v122, 1, v123) == 1)
              {
                sub_100015614((uint64_t)v40, &qword_1000A1048);
                goto LABEL_61;
              }
            }
            else
            {
              sub_1000155B0((uint64_t)v40, v109, &qword_1000A1048);
              if (v126(v122, 1, v123) != 1)
              {
                uint64_t v127 = v109;
                uint64_t v128 = v191;
                uint64_t v129 = v188;
                (*(void (**)(char *, uint64_t, uint64_t))(v191 + 32))(v188, v122, v123);
                sub_10002B49C(&qword_1000A18B8, (void (*)(uint64_t))&type metadata accessor for URL);
                char v130 = sub_10008B310();
                uint64_t v131 = *(void (**)(char *, uint64_t))(v128 + 8);
                v131(v129, v123);
                sub_100015614(v194, &qword_1000A1048);
                sub_100015614(v198, &qword_1000A1048);
                v131((char *)v127, v123);
                sub_100015614((uint64_t)v40, &qword_1000A1048);
                if ((v130 & 1) == 0) {
                  goto LABEL_11;
                }
LABEL_61:
                if (*((unsigned __int8 *)a1 + v175[16]) != *((unsigned __int8 *)a2 + v175[16])) {
                  goto LABEL_11;
                }
                uint64_t v132 = v175[17];
                Swift::Int v133 = (double *)((char *)a1 + v132);
                char v134 = *((unsigned char *)a1 + v132 + 8);
                Swift::Int v135 = (double *)((char *)a2 + v132);
                int v136 = *((unsigned __int8 *)a2 + v132 + 8);
                if (v134)
                {
                  if (!v136) {
                    goto LABEL_11;
                  }
                }
                else
                {
                  if (*v133 != *v135) {
                    LOBYTE(v136) = 1;
                  }
                  if (v136) {
                    goto LABEL_11;
                  }
                }
                uint64_t v137 = v175[18];
                unint64_t v138 = (double *)((char *)a1 + v137);
                char v139 = *((unsigned char *)a1 + v137 + 8);
                uint64_t v140 = (double *)((char *)a2 + v137);
                int v141 = *((unsigned __int8 *)a2 + v137 + 8);
                if (v139)
                {
                  if (!v141) {
                    goto LABEL_11;
                  }
                }
                else
                {
                  if (*v138 != *v140) {
                    LOBYTE(v141) = 1;
                  }
                  if (v141) {
                    goto LABEL_11;
                  }
                }
                Swift::Int v142 = v175;
                uint64_t v143 = v186;
                sub_1000155B0((uint64_t)a1 + v175[19], v186, &qword_1000A1038);
                uint64_t v144 = v185;
                sub_1000155B0((uint64_t)a2 + v142[19], v185, &qword_1000A1038);
                uint64_t v145 = v187;
                uint64_t v146 = v187 + *(int *)(v177 + 48);
                sub_1000155B0(v143, v187, &qword_1000A1038);
                sub_1000155B0(v144, v146, &qword_1000A1038);
                if (v174(v145, 1, v179) == 1)
                {
                  sub_100015614(v185, &qword_1000A1038);
                  sub_100015614(v186, &qword_1000A1038);
                  if (v174(v146, 1, v179) == 1)
                  {
                    sub_100015614(v187, &qword_1000A1038);
LABEL_81:
                    Swift::Int v153 = v175;
                    uint64_t v154 = v182;
                    sub_1000155B0((uint64_t)a1 + v175[20], v182, &qword_1000A1038);
                    uint64_t v155 = v181;
                    sub_1000155B0((uint64_t)a2 + v153[20], v181, &qword_1000A1038);
                    uint64_t v156 = v183;
                    uint64_t v157 = v183 + *(int *)(v177 + 48);
                    sub_1000155B0(v154, v183, &qword_1000A1038);
                    sub_1000155B0(v155, v157, &qword_1000A1038);
                    if (v174(v156, 1, v179) == 1)
                    {
                      sub_100015614(v181, &qword_1000A1038);
                      sub_100015614(v182, &qword_1000A1038);
                      if (v174(v157, 1, v179) == 1)
                      {
                        sub_100015614(v183, &qword_1000A1038);
                        goto LABEL_88;
                      }
                    }
                    else
                    {
                      sub_1000155B0(v183, v180, &qword_1000A1038);
                      if (v174(v157, 1, v179) != 1)
                      {
                        uint64_t v158 = v176;
                        int v159 = v206;
                        uint64_t v160 = v179;
                        (*(void (**)(char *, uint64_t, uint64_t))(v176 + 32))(v206, v157, v179);
                        sub_10002B49C(&qword_1000A14D0, (void (*)(uint64_t))&type metadata accessor for Date);
                        uint64_t v161 = v180;
                        char v162 = sub_10008B310();
                        int v163 = *(void (**)(char *, uint64_t))(v158 + 8);
                        v163(v159, v160);
                        sub_100015614(v181, &qword_1000A1038);
                        sub_100015614(v182, &qword_1000A1038);
                        v163((char *)v161, v160);
                        sub_100015614(v183, &qword_1000A1038);
                        if ((v162 & 1) == 0) {
                          goto LABEL_11;
                        }
LABEL_88:
                        uint64_t v164 = v175[21];
                        uint64_t v165 = *(void *)((char *)a1 + v164);
                        int v166 = (void *)((char *)a2 + v164);
                        uint64_t v167 = *v166;
                        if (v165)
                        {
                          if (!v167) {
                            goto LABEL_11;
                          }
                          uint64_t v168 = v166[1];
                          sub_10000E31C(v165);
                          sub_10000E31C(v165);
                          uint64_t v207 = v168;
                          sub_10000E31C(v167);
                          sub_100089EE0();
                          uint64_t v169 = v208;
                          uint64_t v170 = v209;
                          sub_100089EE0();
                          if (v169 == v208 && v170 == v209)
                          {
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_bridgeObjectRelease_n();
                            sub_10002EE84(v165);
                            int v171 = v175;
                          }
                          else
                          {
                            char v172 = sub_10008B690();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            sub_10002EE84(v165);
                            char v63 = 0;
                            int v171 = v175;
                            if ((v172 & 1) == 0) {
                              return v63 & 1;
                            }
                          }
                        }
                        else
                        {
                          int v171 = v175;
                          if (v167) {
                            goto LABEL_11;
                          }
                        }
                        char v63 = sub_10003C610((char *)a1 + v171[22], (char *)a2 + v171[22]);
                        return v63 & 1;
                      }
                      sub_100015614(v181, &qword_1000A1038);
                      sub_100015614(v182, &qword_1000A1038);
                      (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v180, v179);
                    }
                    uint64_t v79 = &qword_1000A14C8;
                    uint64_t v80 = v183;
LABEL_26:
                    sub_100015614(v80, v79);
                    goto LABEL_11;
                  }
                }
                else
                {
                  sub_1000155B0(v187, v184, &qword_1000A1038);
                  if (v174(v146, 1, v179) != 1)
                  {
                    uint64_t v147 = v176;
                    Swift::Int v148 = v206;
                    uint64_t v149 = v179;
                    (*(void (**)(char *, uint64_t, uint64_t))(v176 + 32))(v206, v146, v179);
                    sub_10002B49C(&qword_1000A14D0, (void (*)(uint64_t))&type metadata accessor for Date);
                    uint64_t v150 = v184;
                    char v151 = sub_10008B310();
                    uint64_t v152 = *(void (**)(char *, uint64_t))(v147 + 8);
                    v152(v148, v149);
                    sub_100015614(v185, &qword_1000A1038);
                    sub_100015614(v186, &qword_1000A1038);
                    v152((char *)v150, v149);
                    sub_100015614(v187, &qword_1000A1038);
                    if ((v151 & 1) == 0) {
                      goto LABEL_11;
                    }
                    goto LABEL_81;
                  }
                  sub_100015614(v185, &qword_1000A1038);
                  sub_100015614(v186, &qword_1000A1038);
                  (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v184, v179);
                }
                uint64_t v79 = &qword_1000A14C8;
                uint64_t v80 = v187;
                goto LABEL_26;
              }
              sub_100015614(v194, &qword_1000A1048);
              sub_100015614(v198, &qword_1000A1048);
              (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v109, v123);
            }
            uint64_t v79 = &qword_1000A18A8;
LABEL_25:
            uint64_t v80 = (uint64_t)v40;
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v111 = v193;
          sub_1000155B0(v104, v193, &qword_1000A1040);
          int v112 = v106(v105, 1, v96);
          uint64_t v109 = (uint64_t)v197;
          uint64_t v108 = v198;
          if (v112 != 1)
          {
            uint64_t v110 = v194;
            uint64_t v113 = v195;
            sub_10002EF68(v105, v195, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
            char v114 = sub_10008A330();
            sub_10002F058(v113, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
            sub_100015614(v200, &qword_1000A1040);
            sub_100015614(v201, &qword_1000A1040);
            sub_10002F058(v111, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
            sub_100015614(v104, &qword_1000A1040);
            if ((v114 & 1) == 0) {
              goto LABEL_11;
            }
            goto LABEL_49;
          }
          sub_100015614(v200, &qword_1000A1040);
          sub_100015614(v201, &qword_1000A1040);
          sub_10002F058(v111, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
        }
        uint64_t v79 = &qword_1000A18B0;
        uint64_t v80 = v104;
        goto LABEL_26;
      }
      sub_100015614((uint64_t)v29, &qword_1000A1040);
      sub_100015614(v205, &qword_1000A1040);
      sub_10002F058(v98, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    }
    uint64_t v79 = &qword_1000A18B0;
    uint64_t v80 = v92;
    goto LABEL_26;
  }
  return v63 & 1;
}

uint64_t sub_10002ED94()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002EDCC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10002EDD8()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_10002EE10(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10002EE20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000903C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002EE84(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10002EED0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10002EEE0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002EF18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10002EF48@<X0>(uint64_t *a1@<X8>)
{
  return sub_10002AAC8(*(void *)(v1 + 16), a1);
}

uint64_t sub_10002EF68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10002EFD0()
{
  unint64_t result = qword_1000A1880;
  if (!qword_1000A1880)
  {
    sub_10000E49C(&qword_1000A1878);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1880);
  }
  return result;
}

uint64_t sub_10002F02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002277C(a1, a2);
}

uint64_t sub_10002F058(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002F0B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_10002B208(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10002F0D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002F140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetPredictedPlayState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002F1A4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  return sub_10002B4E4(a1, a2, a3, *(void *)(v3 + 16), *(unint64_t **)(v3 + 24));
}

unint64_t sub_10002F1AC()
{
  unint64_t result = qword_1000A18C0;
  if (!qword_1000A18C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A18C0);
  }
  return result;
}

uint64_t sub_10002F1EC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10002EF48(a1);
}

char *sub_10002F20C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
    uint64_t v8 = Entry[7];
    uint64_t v9 = &v4[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_10008A1A0();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = Entry[8];
    uint64_t v14 = *(void **)((char *)a2 + v13);
    *(void *)&v4[v13] = v14;
    uint64_t v15 = Entry[9];
    uint64_t v16 = &v4[v15];
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_10008A170();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    id v21 = v14;
    if (v20(v17, 1, v18))
    {
      uint64_t v22 = sub_10000903C(&qword_1000A1038);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(&v4[Entry[10]], (uint64_t)a2 + Entry[10], v18);
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v24(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      v24(&v4[Entry[10]], (char *)a2 + Entry[10], v18);
    }
    uint64_t v25 = Entry[11];
    uint64_t v26 = &v4[v25];
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_10008B290();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1690);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(void *)&v4[*(int *)(a3 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return v4;
}

uint64_t sub_10002F528(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v3 = a1 + Entry[7];
  uint64_t v4 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = a1 + Entry[9];
  uint64_t v6 = sub_10008A170();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  if (!v8) {
    v9(v5, v6);
  }
  v9(a1 + Entry[10], v6);
  uint64_t v10 = a1 + Entry[11];
  uint64_t v11 = sub_10008B290();
  uint64_t v14 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v10, 1, v11);
  if (!result)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    return v13(v10, v11);
  }
  return result;
}

uint64_t sub_10002F700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v7 = Entry[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10008A1A0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = Entry[8];
  uint64_t v13 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v13;
  uint64_t v14 = Entry[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_10008A170();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  id v20 = v13;
  if (v19(v16, 1, v17))
  {
    uint64_t v21 = sub_10000903C(&qword_1000A1038);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a1 + Entry[10], a2 + Entry[10], v17);
  }
  else
  {
    uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v18 + 16);
    v22(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    v22((void *)(a1 + Entry[10]), (const void *)(a2 + Entry[10]), v17);
  }
  uint64_t v23 = Entry[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_10008B290();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_10000903C(&qword_1000A1690);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10002F9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v6 = Entry[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = Entry[8];
  uint64_t v11 = *(void **)(a1 + v10);
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v10) = v12;
  id v13 = v12;

  uint64_t v14 = Entry[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = sub_10008A170();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    uint64_t v22 = sub_10000903C(&qword_1000A1038);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24))(a1 + Entry[10], a2 + Entry[10], v17);
  uint64_t v23 = Entry[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = sub_10008B290();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v24, v25, v26);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_10000903C(&qword_1000A1690);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_13:
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10002FD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v7 = Entry[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + Entry[8]) = *(void *)(a2 + Entry[8]);
  uint64_t v11 = Entry[9];
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_10008A170();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a1 + Entry[10], a2 + Entry[10], v14);
  }
  else
  {
    uint64_t v17 = *(void (**)(void *, const void *, uint64_t))(v15 + 32);
    v17(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    v17((void *)(a1 + Entry[10]), (const void *)(a2 + Entry[10]), v14);
  }
  uint64_t v18 = Entry[11];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_10008B290();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_10000903C(&qword_1000A1690);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100030014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v7 = Entry[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = Entry[8];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = Entry[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_10008A170();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = sub_10000903C(&qword_1000A1038);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40))(a1 + Entry[10], a2 + Entry[10], v16);
  uint64_t v22 = Entry[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_10008B290();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_10000903C(&qword_1000A1690);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_13:
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100030398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000303AC);
}

uint64_t sub_1000303AC(uint64_t a1, uint64_t a2)
{
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Entry - 8) + 48);

  return v5(a1, a2, Entry);
}

uint64_t sub_100030418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003042C);
}

uint64_t sub_10003042C(uint64_t a1, uint64_t a2)
{
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Entry - 8) + 56);

  return v5(a1, a2, a2, Entry);
}

uint64_t type metadata accessor for EpisodeListWidgetLarge()
{
  uint64_t result = qword_1000A1920;
  if (!qword_1000A1920) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000304E8()
{
  uint64_t result = type metadata accessor for UpNextEntry(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100030580()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003059C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_10008AFA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000903C(&qword_1000A1960);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10000903C(&qword_1000A1968);
  uint64_t v10 = __chkstk_darwin(v40);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v39 = (uint64_t)&v38 - v13;
  uint64_t v14 = type metadata accessor for EpisodeListWidgetLargeHeader();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v15);
  int v20 = (char *)&v38 - v19;
  uint64_t v21 = *(void *)(a1 + 24);
  if (*(void *)(v21 + 16))
  {
    uint64_t v22 = *(void *)(type metadata accessor for UpNextEntry.Episode(0) - 8);
    sub_100031274(v21 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)), (uint64_t)v20, type metadata accessor for UpNextEntry.Episode);
    char v23 = *(unsigned char *)(a1 + 16);
    uint64_t v24 = *(void *)(a1 + *(int *)(type metadata accessor for EpisodeListWidgetLarge() + 20));
    v20[*(int *)(v14 + 20)] = v23;
    uint64_t v25 = &v20[*(int *)(v14 + 24)];
    *(void *)uint64_t v25 = v24;
    *((void *)v25 + 1) = v24;
    *((void *)v25 + 2) = 0x4028000000000000;
    *((void *)v25 + 3) = v24;
    *(void *)uint64_t v9 = sub_10008AA80();
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
    uint64_t v26 = sub_10000903C(&qword_1000A1970);
    sub_100030A44((void *)a1, &v9[*(int *)(v26 + 44)]);
    sub_10000903C(&qword_1000A1978);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_10008DB20;
    uint64_t v28 = enum case for Color.RGBColorSpace.sRGB(_:);
    int v29 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
    v29(v6, enum case for Color.RGBColorSpace.sRGB(_:), v3);
    *(void *)(v27 + 32) = sub_10008AFF0();
    v29(v6, v28, v3);
    *(void *)(v27 + 40) = sub_10008AFF0();
    uint64_t v42 = v27;
    sub_10008B420();
    sub_10008B110();
    sub_10008B180();
    sub_10008B190();
    sub_10008A710();
    uint64_t v30 = v42;
    long long v38 = v43;
    uint64_t v31 = v44;
    uint64_t v32 = v45;
    uint64_t KeyPath = swift_getKeyPath();
    sub_1000155B0((uint64_t)v9, (uint64_t)v12, &qword_1000A1960);
    uint64_t v34 = &v12[*(int *)(v40 + 36)];
    *(void *)uint64_t v34 = v30;
    *(_OWORD *)(v34 + 8) = v38;
    *((void *)v34 + 3) = v31;
    *((void *)v34 + 4) = v32;
    *((void *)v34 + 5) = KeyPath;
    v34[48] = 0;
    sub_100015614((uint64_t)v9, &qword_1000A1960);
    uint64_t v35 = v39;
    sub_10001547C((uint64_t)v12, v39, &qword_1000A1968);
    sub_100031274((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetLargeHeader);
    sub_1000155B0(v35, (uint64_t)v12, &qword_1000A1968);
    uint64_t v36 = v41;
    sub_100031274((uint64_t)v17, v41, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetLargeHeader);
    uint64_t v37 = sub_10000903C(&qword_1000A1980);
    sub_1000155B0((uint64_t)v12, v36 + *(int *)(v37 + 48), &qword_1000A1968);
    sub_100015614(v35, &qword_1000A1968);
    sub_1000312DC((uint64_t)v20);
    sub_100015614((uint64_t)v12, &qword_1000A1968);
    return sub_1000312DC((uint64_t)v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100030A44@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v68 = a2;
  uint64_t v76 = sub_10000903C(&qword_1000A1988) - 8;
  __chkstk_darwin(v76);
  uint64_t v74 = (uint64_t *)((char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10000903C(&qword_1000A1990);
  __chkstk_darwin(v4 - 8);
  uint64_t v72 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10000903C(&qword_1000A1998) - 8;
  __chkstk_darwin(v73);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10000903C(&qword_1000A19A0) - 8;
  __chkstk_darwin(v77);
  uint64_t v75 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10000903C(&qword_1000A19A8);
  __chkstk_darwin(v81);
  uint64_t v78 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A19B0);
  uint64_t v82 = *(void *)(v10 - 8);
  uint64_t v83 = v10;
  __chkstk_darwin(v10);
  uint64_t v79 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10000903C(&qword_1000A19B8) - 8;
  uint64_t v12 = __chkstk_darwin(v80);
  Swift::String v70 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v69 = (char *)&v68 - v14;
  uint64_t v71 = a1;
  uint64_t v15 = a1[1];
  uint64_t v84 = *a1;
  uint64_t v85 = v15;
  sub_100031338();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10008ADE0();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_10008ACC0();
  sub_10008AC50();
  swift_release();
  uint64_t v21 = sub_10008AD50();
  uint64_t v23 = v22;
  char v25 = v24;
  uint64_t v27 = v26;
  swift_release();
  sub_10001546C(v16, v18, v20);
  swift_bridgeObjectRelease();
  uint64_t v28 = enum case for Text.Case.uppercase(_:);
  uint64_t v29 = sub_10008AD40();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v72, v28, v29);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v74;
  sub_1000155B0(v31, (uint64_t)v74 + *(int *)(v76 + 36), &qword_1000A1990);
  *uint64_t v33 = KeyPath;
  sub_1000155B0((uint64_t)v33, (uint64_t)&v7[*(int *)(v73 + 44)], &qword_1000A1988);
  *(void *)uint64_t v7 = v21;
  *((void *)v7 + 1) = v23;
  v7[16] = v25 & 1;
  *((void *)v7 + 3) = v27;
  sub_100031774(v21, v23, v25 & 1);
  swift_bridgeObjectRetain();
  sub_100015614((uint64_t)v33, &qword_1000A1988);
  sub_100015614(v31, &qword_1000A1990);
  uint64_t v34 = v23;
  uint64_t v35 = (uint64_t)v69;
  sub_10001546C(v21, v34, v25 & 1);
  swift_bridgeObjectRelease();
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = v75;
  sub_1000155B0((uint64_t)v7, v75, &qword_1000A1998);
  uint64_t v38 = v37 + *(int *)(v77 + 44);
  *(void *)uint64_t v38 = v36;
  *(void *)(v38 + 8) = 1;
  uint64_t v39 = (uint64_t)v70;
  *(unsigned char *)(v38 + 16) = 0;
  sub_100015614((uint64_t)v7, &qword_1000A1998);
  LOBYTE(v36) = sub_10008ABC0();
  uint64_t v40 = type metadata accessor for EpisodeListWidgetLarge();
  uint64_t v41 = v71;
  uint64_t v42 = *(void *)((char *)v71 + *(int *)(v40 + 20));
  sub_10008A630();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = v78;
  sub_1000155B0(v37, v78, &qword_1000A19A0);
  uint64_t v52 = v51 + *(int *)(v81 + 36);
  *(unsigned char *)uint64_t v52 = v36;
  *(void *)(v52 + 8) = v44;
  *(void *)(v52 + 16) = v46;
  *(void *)(v52 + 24) = v48;
  *(void *)(v52 + 32) = v50;
  *(unsigned char *)(v52 + 40) = 0;
  sub_100015614(v37, &qword_1000A19A0);
  sub_10003178C();
  uint64_t v53 = v79;
  sub_10008AE50();
  sub_100015614(v51, &qword_1000A19A8);
  uint64_t v54 = swift_getKeyPath();
  uint64_t v56 = v82;
  uint64_t v55 = v83;
  (*(void (**)(uint64_t, char *, uint64_t))(v82 + 16))(v39, v53, v83);
  uint64_t v57 = v39 + *(int *)(v80 + 44);
  *(void *)uint64_t v57 = v54;
  *(unsigned char *)(v57 + 8) = 0;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
  sub_10001547C(v39, v35, &qword_1000A19B8);
  uint64_t v58 = v41[3];
  uint64_t v59 = *(void *)(v58 + 16);
  if (!v59)
  {
    __break(1u);
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v67 = *(void *)(type metadata accessor for UpNextEntry.Episode(0) - 8);
    char v62 = sub_100031454(v58, v58 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80)), 1, (2 * v59) | 1);
    goto LABEL_7;
  }
  sub_10008B6A0();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v60 = (void *)swift_dynamicCastClass();
  if (!v60)
  {
    swift_bridgeObjectRelease();
    uint64_t v60 = _swiftEmptyArrayStorage;
  }
  uint64_t v61 = v60[2];
  swift_release();
  if (v61 != v59 - 1) {
    goto LABEL_9;
  }
  char v62 = (void *)swift_dynamicCastClass();
  if (!v62)
  {
    swift_bridgeObjectRelease();
    char v62 = _swiftEmptyArrayStorage;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  sub_1000155B0(v35, v39, &qword_1000A19B8);
  char v63 = v68;
  *char v68 = 0x4026000000000000;
  char v64 = (int *)sub_10000903C(&qword_1000A19F8);
  sub_1000155B0(v39, (uint64_t)v63 + v64[12], &qword_1000A19B8);
  *(void *)((char *)v63 + v64[16]) = 0x4020000000000000;
  char v65 = (char *)v63 + v64[20];
  *(void *)char v65 = v62;
  *((void *)v65 + 1) = 3;
  v65[16] = 2;
  *((void *)v65 + 3) = 0x4028000000000000;
  *((void *)v65 + 4) = v42;
  *(void *)((char *)v63 + v64[24]) = v42;
  swift_bridgeObjectRetain();
  sub_100015614(v35, &qword_1000A19B8);
  swift_bridgeObjectRelease();
  return sub_100015614(v39, &qword_1000A19B8);
}

uint64_t sub_100031220@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = 0x3FD8000000000000;
  uint64_t v3 = sub_10000903C(&qword_1000A1958);
  return sub_10003059C(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100031274(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000312DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeListWidgetLargeHeader();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100031338()
{
  unint64_t result = qword_1000A19C0;
  if (!qword_1000A19C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A19C0);
  }
  return result;
}

int64_t *sub_10003138C(int64_t *result, int64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (int64_t *)&_swiftEmptyArrayStorage;
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      uint64_t v5 = (int64_t *)&_swiftEmptyArrayStorage;
    }
    else
    {
      sub_10000903C(&qword_1000A1A30);
      uint64_t v5 = (int64_t *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    unint64_t result = sub_100031A10(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

void *sub_100031454(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  if (v5 <= 0)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for UpNextEntry.Episode(0) - 8);
      uint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      char v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_10000903C(&qword_1000A1A00);
  uint64_t v8 = *(void *)(type metadata accessor for UpNextEntry.Episode(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  unint64_t result = (void *)sub_10008B5D0();
  __break(1u);
  return result;
}

uint64_t sub_100031694()
{
  return sub_10008A900();
}

uint64_t sub_1000316B8()
{
  return sub_10008A900();
}

uint64_t sub_1000316DC(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A1990);
  __chkstk_darwin(v2 - 8);
  sub_1000155B0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1000A1990);
  return sub_10008A910();
}

uint64_t sub_100031774(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

unint64_t sub_10003178C()
{
  unint64_t result = qword_1000A19C8;
  if (!qword_1000A19C8)
  {
    sub_10000E49C(&qword_1000A19A8);
    sub_100031808();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A19C8);
  }
  return result;
}

unint64_t sub_100031808()
{
  unint64_t result = qword_1000A19D0;
  if (!qword_1000A19D0)
  {
    sub_10000E49C(&qword_1000A19A0);
    sub_1000318A8();
    sub_100015428(&qword_1000A19E8, &qword_1000A19F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A19D0);
  }
  return result;
}

unint64_t sub_1000318A8()
{
  unint64_t result = qword_1000A19D8;
  if (!qword_1000A19D8)
  {
    sub_10000E49C(&qword_1000A1998);
    sub_100015428(&qword_1000A19E0, &qword_1000A1988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A19D8);
  }
  return result;
}

unint64_t sub_10003194C()
{
  unint64_t result = qword_1000A1A08;
  if (!qword_1000A1A08)
  {
    sub_10000E49C(&qword_1000A1958);
    sub_100015428(&qword_1000A1A10, &qword_1000A1A18);
    sub_100015428(&qword_1000A1A20, &qword_1000A1A28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1A08);
  }
  return result;
}

int64_t *sub_100031A10(int64_t *result, int64_t *a2, uint64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    int64_t v5 = a4;
LABEL_7:
    *unint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_32;
  }
  int64_t v6 = a5 - a4;
  if (a5 > a4)
  {
    int64_t v5 = a4 + 1;
    *a2 = a4;
    if (a3 == 1) {
      goto LABEL_7;
    }
    if (v5 == a5)
    {
      a3 = 1;
      int64_t v5 = a5;
      goto LABEL_7;
    }
    unint64_t v7 = v6 - 2;
    if (v6 - 2 >= (unint64_t)(a3 - 2)) {
      unint64_t v7 = a3 - 2;
    }
    if (v7 >= ~a4 + a5) {
      unint64_t v7 = ~a4 + a5;
    }
    unint64_t v8 = v7 + 1;
    if (v8 >= 5)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      int64_t v13 = v5 + v8 - v11;
      unint64_t v10 = &a2[v8 - v11];
      uint64_t v9 = v12 + 2;
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_10008DB30);
      uint64_t v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        int64x2_t *v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      int64_t v5 = v13;
    }
    else
    {
      uint64_t v9 = 2;
      unint64_t v10 = a2;
    }
    unint64_t v17 = v10 + 1;
    while (v5 < a5)
    {
      int64_t v18 = v5 + 1;
      int64_t *v17 = v5;
      if (a3 == v9)
      {
        ++v5;
        goto LABEL_7;
      }
      ++v9;
      ++v17;
      ++v5;
      if (a5 == v18)
      {
        int64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_100031B50(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    char v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    a1[10] = a2[10];
    uint64_t v169 = (int *)type metadata accessor for UpNextEntry.Episode(0);
    uint64_t v11 = v169[10];
    __dst = (char *)a1 + v11;
    uint64_t v164 = a1;
    uint64_t v165 = a2;
    unint64_t v12 = (char *)a2 + v11;
    uint64_t v13 = sub_10008A170();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v168 = v15;
    uint64_t v166 = v16;
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000903C(&qword_1000A1038);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v16);
    }
    unint64_t v20 = v169;
    uint64_t v21 = v169[11];
    char v19 = v164;
    uint64_t v22 = (void *)((char *)v164 + v21);
    uint64_t v23 = (void *)((char *)v165 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v169[12];
    uint64_t v26 = (void *)((char *)v164 + v25);
    uint64_t v27 = (void *)((char *)v165 + v25);
    uint64_t v28 = (int *)sub_10008A340();
    __dsta = (void *)*((void *)v28 - 1);
    uint64_t v29 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
    swift_bridgeObjectRetain();
    if (v29(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1040);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v27[1];
      void *v26 = *v27;
      v26[1] = v31;
      int v32 = *((unsigned __int8 *)v27 + 32);
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
        *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
      }
      else
      {
        uint64_t v33 = v27[2];
        uint64_t v34 = v27[3];
        sub_100009080(v33, v34, v32);
        v26[2] = v33;
        v26[3] = v34;
        *((unsigned char *)v26 + 32) = v32;
      }
      *(_OWORD *)(v26 + 5) = *(_OWORD *)(v27 + 5);
      uint64_t v35 = (id *)(v27 + 7);
      int v36 = *((unsigned __int8 *)v27 + 64);
      if (v36 == 255)
      {
        v26[7] = *v35;
        *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
      }
      else
      {
        id v37 = *v35;
        sub_100009098(*v35, *((unsigned char *)v27 + 64));
        v26[7] = v37;
        *((unsigned char *)v26 + 64) = v36;
      }
      uint64_t v38 = (id *)(v27 + 9);
      int v39 = *((unsigned __int8 *)v27 + 80);
      if (v39 == 255)
      {
        v26[9] = *v38;
        *((unsigned char *)v26 + 80) = *((unsigned char *)v27 + 80);
      }
      else
      {
        id v40 = *v38;
        sub_100009098(*v38, *((unsigned char *)v27 + 80));
        v26[9] = v40;
        *((unsigned char *)v26 + 80) = v39;
      }
      uint64_t v41 = (id *)(v27 + 11);
      int v42 = *((unsigned __int8 *)v27 + 96);
      if (v42 == 255)
      {
        v26[11] = *v41;
        *((unsigned char *)v26 + 96) = *((unsigned char *)v27 + 96);
      }
      else
      {
        id v43 = *v41;
        sub_100009098(*v41, *((unsigned char *)v27 + 96));
        v26[11] = v43;
        *((unsigned char *)v26 + 96) = v42;
      }
      uint64_t v44 = (id *)(v27 + 13);
      int v45 = *((unsigned __int8 *)v27 + 112);
      if (v45 == 255)
      {
        v26[13] = *v44;
        *((unsigned char *)v26 + 112) = *((unsigned char *)v27 + 112);
      }
      else
      {
        id v46 = *v44;
        sub_100009098(*v44, *((unsigned char *)v27 + 112));
        v26[13] = v46;
        *((unsigned char *)v26 + 112) = v45;
      }
      uint64_t v47 = (id *)(v27 + 15);
      int v48 = *((unsigned __int8 *)v27 + 128);
      if (v48 == 255)
      {
        v26[15] = *v47;
        *((unsigned char *)v26 + 128) = *((unsigned char *)v27 + 128);
      }
      else
      {
        id v49 = *v47;
        sub_100009098(*v47, *((unsigned char *)v27 + 128));
        v26[15] = v49;
        *((unsigned char *)v26 + 128) = v48;
      }
      unint64_t v20 = v169;
      *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
      uint64_t v50 = v28[11];
      uint64_t v51 = (char *)v26 + v50;
      uint64_t v52 = (char *)v27 + v50;
      uint64_t v53 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v28[12];
      uint64_t v55 = (void *)((char *)v26 + v54);
      uint64_t v56 = (void *)((char *)v27 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      *((unsigned char *)v26 + v28[13]) = *((unsigned char *)v27 + v28[13]);
      *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
      *((unsigned char *)v26 + v28[15]) = *((unsigned char *)v27 + v28[15]);
      uint64_t v58 = v28[16];
      uint64_t v59 = (void *)((char *)v26 + v58);
      uint64_t v60 = (void *)((char *)v27 + v58);
      uint64_t v61 = v60[1];
      void *v59 = *v60;
      v59[1] = v61;
      char v62 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(v26, 0, 1, v28);
    }
    uint64_t v63 = v20[13];
    char v64 = (void *)((char *)v164 + v63);
    char v65 = (void *)((char *)v165 + v63);
    if (v29((void *)((char *)v165 + v63), 1, v28))
    {
      uint64_t v66 = sub_10000903C(&qword_1000A1040);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v14;
    }
    else
    {
      uint64_t v68 = v65[1];
      void *v64 = *v65;
      v64[1] = v68;
      int v69 = *((unsigned __int8 *)v65 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = v14;
      if (v69 == 255)
      {
        *((_OWORD *)v64 + 1) = *((_OWORD *)v65 + 1);
        *((unsigned char *)v64 + 32) = *((unsigned char *)v65 + 32);
      }
      else
      {
        uint64_t v70 = v65[2];
        uint64_t v71 = v65[3];
        sub_100009080(v70, v71, v69);
        v64[2] = v70;
        v64[3] = v71;
        *((unsigned char *)v64 + 32) = v69;
      }
      *(_OWORD *)(v64 + 5) = *(_OWORD *)(v65 + 5);
      uint64_t v72 = (id *)(v65 + 7);
      int v73 = *((unsigned __int8 *)v65 + 64);
      if (v73 == 255)
      {
        v64[7] = *v72;
        *((unsigned char *)v64 + 64) = *((unsigned char *)v65 + 64);
      }
      else
      {
        id v74 = *v72;
        sub_100009098(*v72, *((unsigned char *)v65 + 64));
        v64[7] = v74;
        *((unsigned char *)v64 + 64) = v73;
      }
      uint64_t v75 = (id *)(v65 + 9);
      int v76 = *((unsigned __int8 *)v65 + 80);
      if (v76 == 255)
      {
        v64[9] = *v75;
        *((unsigned char *)v64 + 80) = *((unsigned char *)v65 + 80);
      }
      else
      {
        id v77 = *v75;
        sub_100009098(*v75, *((unsigned char *)v65 + 80));
        v64[9] = v77;
        *((unsigned char *)v64 + 80) = v76;
      }
      uint64_t v78 = (id *)(v65 + 11);
      int v79 = *((unsigned __int8 *)v65 + 96);
      if (v79 == 255)
      {
        v64[11] = *v78;
        *((unsigned char *)v64 + 96) = *((unsigned char *)v65 + 96);
      }
      else
      {
        id v80 = *v78;
        sub_100009098(*v78, *((unsigned char *)v65 + 96));
        v64[11] = v80;
        *((unsigned char *)v64 + 96) = v79;
      }
      uint64_t v81 = (id *)(v65 + 13);
      int v82 = *((unsigned __int8 *)v65 + 112);
      if (v82 == 255)
      {
        v64[13] = *v81;
        *((unsigned char *)v64 + 112) = *((unsigned char *)v65 + 112);
      }
      else
      {
        id v83 = *v81;
        sub_100009098(*v81, *((unsigned char *)v65 + 112));
        v64[13] = v83;
        *((unsigned char *)v64 + 112) = v82;
      }
      uint64_t v84 = (id *)(v65 + 15);
      int v85 = *((unsigned __int8 *)v65 + 128);
      if (v85 == 255)
      {
        v64[15] = *v84;
        *((unsigned char *)v64 + 128) = *((unsigned char *)v65 + 128);
      }
      else
      {
        id v86 = *v84;
        sub_100009098(*v84, *((unsigned char *)v65 + 128));
        v64[15] = v86;
        *((unsigned char *)v64 + 128) = v85;
      }
      unint64_t v20 = v169;
      *((unsigned char *)v64 + 129) = *((unsigned char *)v65 + 129);
      uint64_t v87 = v28[11];
      uint64_t v88 = (char *)v64 + v87;
      uint64_t v89 = (char *)v65 + v87;
      uint64_t v90 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      uint64_t v91 = v28[12];
      uint64_t v92 = (void *)((char *)v64 + v91);
      uint64_t v93 = (void *)((char *)v65 + v91);
      uint64_t v94 = v93[1];
      void *v92 = *v93;
      v92[1] = v94;
      *((unsigned char *)v64 + v28[13]) = *((unsigned char *)v65 + v28[13]);
      *((unsigned char *)v64 + v28[14]) = *((unsigned char *)v65 + v28[14]);
      *((unsigned char *)v64 + v28[15]) = *((unsigned char *)v65 + v28[15]);
      uint64_t v95 = v28[16];
      uint64_t v96 = (void *)((char *)v64 + v95);
      unsigned int v97 = (void *)((char *)v65 + v95);
      uint64_t v98 = v97[1];
      void *v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99(v64, 0, 1, v28);
    }
    uint64_t v100 = v20[14];
    char v101 = *(void **)((char *)v165 + v100);
    *(void *)((char *)v164 + v100) = v101;
    uint64_t v102 = v20[15];
    uint64_t v103 = (char *)v164 + v102;
    uint64_t v104 = (char *)v165 + v102;
    uint64_t v105 = sub_10008A050();
    uint64_t v106 = *(void *)(v105 - 8);
    int v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
    id v108 = v101;
    if (v107(v104, 1, v105))
    {
      uint64_t v109 = sub_10000903C(&qword_1000A1048);
      memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
    }
    *((unsigned char *)v164 + v169[16]) = *((unsigned char *)v165 + v169[16]);
    uint64_t v110 = v169[17];
    uint64_t v111 = (char *)v164 + v110;
    int v112 = (char *)v165 + v110;
    *(void *)uint64_t v111 = *(void *)v112;
    v111[8] = v112[8];
    uint64_t v113 = v169[18];
    char v114 = (char *)v164 + v113;
    uint64_t v115 = (char *)v165 + v113;
    *(void *)char v114 = *(void *)v115;
    v114[8] = v115[8];
    uint64_t v116 = v169[19];
    unint64_t v117 = (char *)v164 + v116;
    uint64_t v118 = (char *)v165 + v116;
    if (v168((char *)v165 + v116, 1, v166))
    {
      uint64_t v119 = sub_10000903C(&qword_1000A1038);
      memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v117, v118, v166);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v117, 0, 1, v166);
    }
    uint64_t v120 = v169[20];
    char v121 = (char *)v164 + v120;
    uint64_t v122 = (char *)v165 + v120;
    if (v168((char *)v165 + v120, 1, v166))
    {
      uint64_t v123 = sub_10000903C(&qword_1000A1038);
      memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v121, v122, v166);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v121, 0, 1, v166);
    }
    uint64_t v124 = v169[21];
    uint64_t v125 = (void *)((char *)v164 + v124);
    unint64_t v126 = (void *)((char *)v165 + v124);
    if (*v126)
    {
      uint64_t v127 = v126[1];
      uint64_t v128 = v126[2];
      void *v125 = *v126;
      v125[1] = v127;
      v125[2] = v128;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
      v125[2] = v126[2];
    }
    uint64_t v129 = v169[22];
    char v130 = (char *)v164 + v129;
    uint64_t v131 = (char *)v165 + v129;
    uint64_t v132 = sub_10000903C(&qword_1000A1050);
    uint64_t v133 = *(void *)(v132 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
    {
      uint64_t v134 = sub_10000903C(&qword_1000A1058);
      memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      Swift::Int v135 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v135(v130, v131, v166);
      v135(&v130[*(int *)(v132 + 36)], &v131[*(int *)(v132 + 36)], v166);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
    }
    int v136 = (int *)type metadata accessor for WidgetPredictedPlayState();
    uint64_t v137 = v136[5];
    unint64_t v138 = &v130[v137];
    char v139 = &v131[v137];
    uint64_t v140 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
    uint64_t v141 = v136[6];
    Swift::Int v142 = &v130[v141];
    uint64_t v143 = &v131[v141];
    uint64_t v144 = sub_10008A4B0();
    uint64_t v145 = *(void *)(v144 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
    {
      uint64_t v146 = sub_10000903C(&qword_1000A1060);
      memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v142, v143, v144);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
    }
    uint64_t v147 = v136[7];
    Swift::Int v148 = &v130[v147];
    uint64_t v149 = &v131[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *(void *)Swift::Int v148 = *(void *)v149;
    *((void *)v148 + 1) = v150;
    uint64_t v151 = v136[8];
    uint64_t v152 = &v130[v151];
    Swift::Int v153 = &v131[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)uint64_t v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    uint64_t v155 = a3[6];
    *(void *)((char *)v164 + a3[5]) = *(void *)((char *)v165 + a3[5]);
    *((unsigned char *)v164 + v155) = *((unsigned char *)v165 + v155);
    uint64_t v156 = a3[7];
    uint64_t v157 = (char *)v164 + v156;
    uint64_t v158 = (char *)v165 + v156;
    uint64_t v159 = type metadata accessor for EpisodeViewStyle();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v157, v158, *(void *)(*(void *)(v159 - 8) + 64));
    }
    else
    {
      uint64_t v160 = sub_10008B220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16))(v157, v158, v160);
      swift_storeEnumTagMultiPayload();
    }
    *(void *)((char *)v164 + a3[8]) = *(void *)((char *)v165 + a3[8]);
  }
  return v19;
}

uint64_t sub_100032978(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v5 = a1 + v4[10];
  uint64_t v6 = sub_10008A170();
  uint64_t v7 = *(void *)(v6 - 8);
  id v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v49(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + v4[12];
  uint64_t v9 = sub_10008A340();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v11 = *(unsigned __int8 *)(v8 + 32);
    if (v11 != 255) {
      sub_1000096D4(*(void *)(v8 + 16), *(void *)(v8 + 24), v11);
    }
    int v12 = *(unsigned __int8 *)(v8 + 64);
    if (v12 != 255) {
      sub_1000096EC(*(id *)(v8 + 56), v12);
    }
    int v13 = *(unsigned __int8 *)(v8 + 80);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v8 + 72), v13);
    }
    int v14 = *(unsigned __int8 *)(v8 + 96);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v8 + 88), v14);
    }
    uint64_t v48 = v7;
    int v15 = *(unsigned __int8 *)(v8 + 112);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v8 + 104), v15);
    }
    uint64_t v16 = a2;
    int v17 = *(unsigned __int8 *)(v8 + 128);
    if (v17 != 255) {
      sub_1000096EC(*(id *)(v8 + 120), v17);
    }
    uint64_t v18 = v8 + *(int *)(v9 + 44);
    uint64_t v19 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v16;
    uint64_t v7 = v48;
  }
  uint64_t v20 = a1 + v4[13];
  if (!v10(v20, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v21 = *(unsigned __int8 *)(v20 + 32);
    if (v21 != 255) {
      sub_1000096D4(*(void *)(v20 + 16), *(void *)(v20 + 24), v21);
    }
    int v22 = *(unsigned __int8 *)(v20 + 64);
    if (v22 != 255) {
      sub_1000096EC(*(id *)(v20 + 56), v22);
    }
    int v23 = *(unsigned __int8 *)(v20 + 80);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v20 + 72), v23);
    }
    int v24 = *(unsigned __int8 *)(v20 + 96);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v20 + 88), v24);
    }
    int v25 = *(unsigned __int8 *)(v20 + 112);
    if (v25 != 255) {
      sub_1000096EC(*(id *)(v20 + 104), v25);
    }
    uint64_t v26 = a2;
    int v27 = *(unsigned __int8 *)(v20 + 128);
    if (v27 != 255) {
      sub_1000096EC(*(id *)(v20 + 120), v27);
    }
    uint64_t v28 = v20 + *(int *)(v9 + 44);
    uint64_t v29 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v26;
  }

  uint64_t v30 = a1 + v4[15];
  uint64_t v31 = sub_10008A050();
  uint64_t v32 = *(void *)(v31 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v33 = a1 + v4[19];
  if (!v49(v33, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v33, v6);
  }
  uint64_t v34 = a1 + v4[20];
  if (!v49(v34, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v34, v6);
  }
  if (*(void *)(a1 + v4[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v35 = a1 + v4[22];
  uint64_t v36 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36))
  {
    id v37 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v37(v35, v6);
    v37(v35 + *(int *)(v36 + 36), v6);
  }
  uint64_t v38 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v39 = v35 + *(int *)(v38 + 20);
  uint64_t v40 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  uint64_t v41 = v35 + *(int *)(v38 + 24);
  uint64_t v42 = sub_10008A4B0();
  uint64_t v43 = *(void *)(v42 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = a1 + *(int *)(a2 + 28);
  type metadata accessor for EpisodeViewStyle();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v46 = sub_10008B220();
    uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8);
    return v47(v44, v46);
  }
  return result;
}

void *sub_100032FFC(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  uint64_t v165 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v10 = v165[10];
  __dst = (char *)a1 + v10;
  uint64_t v161 = a1;
  char v162 = a2;
  int v11 = (char *)a2 + v10;
  uint64_t v12 = sub_10008A170();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v163 = v15;
  if (v14(v11, 1, v15))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v15);
  }
  int v17 = v165;
  uint64_t v18 = v165[11];
  uint64_t v19 = (void *)((char *)v161 + v18);
  uint64_t v20 = (void *)((char *)v162 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v165[12];
  int v23 = (void *)((char *)v161 + v22);
  int v24 = (void *)((char *)v162 + v22);
  int v25 = (int *)sub_10008A340();
  __dsta = (void *)*((void *)v25 - 1);
  uint64_t v26 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    uint64_t v27 = sub_10000903C(&qword_1000A1040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v24[1];
    void *v23 = *v24;
    v23[1] = v28;
    int v29 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
    }
    else
    {
      uint64_t v30 = v24[2];
      uint64_t v31 = v24[3];
      sub_100009080(v30, v31, v29);
      v23[2] = v30;
      void v23[3] = v31;
      *((unsigned char *)v23 + 32) = v29;
    }
    *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
    uint64_t v32 = (id *)(v24 + 7);
    int v33 = *((unsigned __int8 *)v24 + 64);
    if (v33 == 255)
    {
      v23[7] = *v32;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
    }
    else
    {
      id v34 = *v32;
      sub_100009098(*v32, *((unsigned char *)v24 + 64));
      v23[7] = v34;
      *((unsigned char *)v23 + 64) = v33;
    }
    uint64_t v35 = (id *)(v24 + 9);
    int v36 = *((unsigned __int8 *)v24 + 80);
    if (v36 == 255)
    {
      v23[9] = *v35;
      *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
    }
    else
    {
      id v37 = *v35;
      sub_100009098(*v35, *((unsigned char *)v24 + 80));
      v23[9] = v37;
      *((unsigned char *)v23 + 80) = v36;
    }
    uint64_t v38 = (id *)(v24 + 11);
    int v39 = *((unsigned __int8 *)v24 + 96);
    if (v39 == 255)
    {
      v23[11] = *v38;
      *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
    }
    else
    {
      id v40 = *v38;
      sub_100009098(*v38, *((unsigned char *)v24 + 96));
      v23[11] = v40;
      *((unsigned char *)v23 + 96) = v39;
    }
    uint64_t v41 = (id *)(v24 + 13);
    int v42 = *((unsigned __int8 *)v24 + 112);
    if (v42 == 255)
    {
      v23[13] = *v41;
      *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_100009098(*v41, *((unsigned char *)v24 + 112));
      v23[13] = v43;
      *((unsigned char *)v23 + 112) = v42;
    }
    uint64_t v44 = (id *)(v24 + 15);
    int v45 = *((unsigned __int8 *)v24 + 128);
    if (v45 == 255)
    {
      v23[15] = *v44;
      *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_100009098(*v44, *((unsigned char *)v24 + 128));
      v23[15] = v46;
      *((unsigned char *)v23 + 128) = v45;
    }
    int v17 = v165;
    *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
    uint64_t v47 = v25[11];
    uint64_t v48 = (char *)v23 + v47;
    id v49 = (char *)v24 + v47;
    uint64_t v50 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v25[12];
    uint64_t v52 = (void *)((char *)v23 + v51);
    uint64_t v53 = (void *)((char *)v24 + v51);
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
    *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
    *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
    uint64_t v55 = v25[16];
    uint64_t v56 = (void *)((char *)v23 + v55);
    uint64_t v57 = (void *)((char *)v24 + v55);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v23, 0, 1, v25);
  }
  uint64_t v60 = v17[13];
  uint64_t v61 = (void *)((char *)v161 + v60);
  char v62 = (void *)((char *)v162 + v60);
  if (v26((void *)((char *)v162 + v60), 1, v25))
  {
    uint64_t v63 = sub_10000903C(&qword_1000A1040);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    uint64_t v64 = v13;
  }
  else
  {
    uint64_t v65 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v65;
    int v66 = *((unsigned __int8 *)v62 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = v13;
    if (v66 == 255)
    {
      *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
      *((unsigned char *)v61 + 32) = *((unsigned char *)v62 + 32);
    }
    else
    {
      uint64_t v67 = v62[2];
      uint64_t v68 = v62[3];
      sub_100009080(v67, v68, v66);
      v61[2] = v67;
      v61[3] = v68;
      *((unsigned char *)v61 + 32) = v66;
    }
    *(_OWORD *)(v61 + 5) = *(_OWORD *)(v62 + 5);
    int v69 = (id *)(v62 + 7);
    int v70 = *((unsigned __int8 *)v62 + 64);
    if (v70 == 255)
    {
      v61[7] = *v69;
      *((unsigned char *)v61 + 64) = *((unsigned char *)v62 + 64);
    }
    else
    {
      id v71 = *v69;
      sub_100009098(*v69, *((unsigned char *)v62 + 64));
      v61[7] = v71;
      *((unsigned char *)v61 + 64) = v70;
    }
    uint64_t v72 = (id *)(v62 + 9);
    int v73 = *((unsigned __int8 *)v62 + 80);
    if (v73 == 255)
    {
      v61[9] = *v72;
      *((unsigned char *)v61 + 80) = *((unsigned char *)v62 + 80);
    }
    else
    {
      id v74 = *v72;
      sub_100009098(*v72, *((unsigned char *)v62 + 80));
      v61[9] = v74;
      *((unsigned char *)v61 + 80) = v73;
    }
    uint64_t v75 = (id *)(v62 + 11);
    int v76 = *((unsigned __int8 *)v62 + 96);
    if (v76 == 255)
    {
      v61[11] = *v75;
      *((unsigned char *)v61 + 96) = *((unsigned char *)v62 + 96);
    }
    else
    {
      id v77 = *v75;
      sub_100009098(*v75, *((unsigned char *)v62 + 96));
      v61[11] = v77;
      *((unsigned char *)v61 + 96) = v76;
    }
    uint64_t v78 = (id *)(v62 + 13);
    int v79 = *((unsigned __int8 *)v62 + 112);
    if (v79 == 255)
    {
      v61[13] = *v78;
      *((unsigned char *)v61 + 112) = *((unsigned char *)v62 + 112);
    }
    else
    {
      id v80 = *v78;
      sub_100009098(*v78, *((unsigned char *)v62 + 112));
      v61[13] = v80;
      *((unsigned char *)v61 + 112) = v79;
    }
    uint64_t v81 = (id *)(v62 + 15);
    int v82 = *((unsigned __int8 *)v62 + 128);
    if (v82 == 255)
    {
      v61[15] = *v81;
      *((unsigned char *)v61 + 128) = *((unsigned char *)v62 + 128);
    }
    else
    {
      id v83 = *v81;
      sub_100009098(*v81, *((unsigned char *)v62 + 128));
      v61[15] = v83;
      *((unsigned char *)v61 + 128) = v82;
    }
    int v17 = v165;
    *((unsigned char *)v61 + 129) = *((unsigned char *)v62 + 129);
    uint64_t v84 = v25[11];
    int v85 = (char *)v61 + v84;
    id v86 = (char *)v62 + v84;
    uint64_t v87 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    uint64_t v88 = v25[12];
    uint64_t v89 = (void *)((char *)v61 + v88);
    uint64_t v90 = (void *)((char *)v62 + v88);
    uint64_t v91 = v90[1];
    void *v89 = *v90;
    v89[1] = v91;
    *((unsigned char *)v61 + v25[13]) = *((unsigned char *)v62 + v25[13]);
    *((unsigned char *)v61 + v25[14]) = *((unsigned char *)v62 + v25[14]);
    *((unsigned char *)v61 + v25[15]) = *((unsigned char *)v62 + v25[15]);
    uint64_t v92 = v25[16];
    uint64_t v93 = (void *)((char *)v61 + v92);
    uint64_t v94 = (void *)((char *)v62 + v92);
    uint64_t v95 = v94[1];
    void *v93 = *v94;
    v93[1] = v95;
    uint64_t v96 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96(v61, 0, 1, v25);
  }
  uint64_t v97 = v17[14];
  uint64_t v98 = *(void **)((char *)v162 + v97);
  *(void *)((char *)v161 + v97) = v98;
  uint64_t v99 = v17[15];
  uint64_t v100 = (char *)v161 + v99;
  char v101 = (char *)v162 + v99;
  uint64_t v102 = sub_10008A050();
  uint64_t v103 = *(void *)(v102 - 8);
  uint64_t v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
  id v105 = v98;
  if (v104(v101, 1, v102))
  {
    uint64_t v106 = sub_10000903C(&qword_1000A1048);
    memcpy(v100, v101, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  *((unsigned char *)v161 + v165[16]) = *((unsigned char *)v162 + v165[16]);
  uint64_t v107 = v165[17];
  id v108 = (char *)v161 + v107;
  uint64_t v109 = (char *)v162 + v107;
  *(void *)id v108 = *(void *)v109;
  v108[8] = v109[8];
  uint64_t v110 = v165[18];
  uint64_t v111 = (char *)v161 + v110;
  int v112 = (char *)v162 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  v111[8] = v112[8];
  uint64_t v113 = v165[19];
  char v114 = (char *)v161 + v113;
  uint64_t v115 = (char *)v162 + v113;
  if (v14((char *)v162 + v113, 1, v163))
  {
    uint64_t v116 = sub_10000903C(&qword_1000A1038);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v114, v115, v163);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v114, 0, 1, v163);
  }
  uint64_t v117 = v165[20];
  uint64_t v118 = (char *)v161 + v117;
  uint64_t v119 = (char *)v162 + v117;
  if (v14((char *)v162 + v117, 1, v163))
  {
    uint64_t v120 = sub_10000903C(&qword_1000A1038);
    memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v118, v119, v163);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v163);
  }
  uint64_t v121 = v165[21];
  uint64_t v122 = (void *)((char *)v161 + v121);
  uint64_t v123 = (void *)((char *)v162 + v121);
  if (*v123)
  {
    uint64_t v124 = v123[1];
    uint64_t v125 = v123[2];
    void *v122 = *v123;
    v122[1] = v124;
    v122[2] = v125;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    v122[2] = v123[2];
  }
  uint64_t v126 = v165[22];
  uint64_t v127 = (char *)v161 + v126;
  uint64_t v128 = (char *)v162 + v126;
  uint64_t v129 = sub_10000903C(&qword_1000A1050);
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = sub_10000903C(&qword_1000A1058);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v132(v127, v128, v163);
    v132(&v127[*(int *)(v129 + 36)], &v128[*(int *)(v129 + 36)], v163);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  uint64_t v133 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v134 = v133[5];
  Swift::Int v135 = &v127[v134];
  int v136 = &v128[v134];
  uint64_t v137 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
  uint64_t v138 = v133[6];
  char v139 = &v127[v138];
  uint64_t v140 = &v128[v138];
  uint64_t v141 = sub_10008A4B0();
  uint64_t v142 = *(void *)(v141 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
  {
    uint64_t v143 = sub_10000903C(&qword_1000A1060);
    memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  }
  uint64_t v144 = v133[7];
  uint64_t v145 = &v127[v144];
  uint64_t v146 = &v128[v144];
  uint64_t v147 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v147;
  uint64_t v148 = v133[8];
  uint64_t v149 = &v127[v148];
  uint64_t v150 = &v128[v148];
  uint64_t v151 = *((void *)v150 + 1);
  *(void *)uint64_t v149 = *(void *)v150;
  *((void *)v149 + 1) = v151;
  uint64_t v152 = a3[6];
  *(void *)((char *)v161 + a3[5]) = *(void *)((char *)v162 + a3[5]);
  *((unsigned char *)v161 + v152) = *((unsigned char *)v162 + v152);
  uint64_t v153 = a3[7];
  uint64_t v154 = (char *)v161 + v153;
  uint64_t v155 = (char *)v162 + v153;
  uint64_t v156 = type metadata accessor for EpisodeViewStyle();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v154, v155, *(void *)(*(void *)(v156 - 8) + 64));
  }
  else
  {
    uint64_t v157 = sub_10008B220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v154, v155, v157);
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)v161 + a3[8]) = *(void *)((char *)v162 + a3[8]);
  return v161;
}

void *sub_100033DD4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008A170();
  uint64_t v319 = *(void *)(v10 - 8);
  int v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v319 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  v316 = a3;
  uint64_t v314 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v319 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v319 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v319 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v319 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = v6[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  int v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[12];
  uint64_t v19 = (uint64_t)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_10008A340();
  uint64_t v313 = *((void *)v21 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v313 + 48);
  int v23 = v22(v19, 1, v21);
  int v24 = v22((uint64_t)v20, 1, v21);
  uint64_t v315 = v10;
  if (!v23)
  {
    if (!v24)
    {
      uint64_t v312 = v22;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = (long long *)(v19 + 16);
      uint64_t v30 = (long long *)(v20 + 16);
      int v31 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v31 == 255)
        {
          long long v72 = *v30;
          *(unsigned char *)(v19 + 32) = v20[32];
          *int v29 = v72;
        }
        else
        {
          uint64_t v69 = *((void *)v20 + 2);
          uint64_t v70 = *((void *)v20 + 3);
          sub_100009080(v69, v70, v20[32]);
          *(void *)(v19 + 16) = v69;
          *(void *)(v19 + 24) = v70;
          *(unsigned char *)(v19 + 32) = v31;
        }
      }
      else if (v31 == 255)
      {
        sub_10000BE14(v19 + 16);
        char v71 = v20[32];
        *int v29 = *v30;
        *(unsigned char *)(v19 + 32) = v71;
      }
      else
      {
        uint64_t v33 = *((void *)v20 + 2);
        uint64_t v32 = *((void *)v20 + 3);
        sub_100009080(v33, v32, v20[32]);
        uint64_t v34 = *(void *)(v19 + 16);
        uint64_t v35 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v33;
        *(void *)(v19 + 24) = v32;
        unsigned __int8 v36 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v31;
        sub_1000096D4(v34, v35, v36);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v73 = (void **)(v19 + 56);
      id v74 = (void **)(v20 + 56);
      int v75 = v20[64];
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v75 == 255)
        {
          uint64_t v81 = *v74;
          *(unsigned char *)(v19 + 64) = v20[64];
          *int v73 = v81;
        }
        else
        {
          int v79 = *v74;
          sub_100009098(v79, v20[64]);
          *(void *)(v19 + 56) = v79;
          *(unsigned char *)(v19 + 64) = v75;
        }
      }
      else if (v75 == 255)
      {
        sub_10000BE68(v19 + 56);
        char v80 = v20[64];
        *int v73 = *v74;
        *(unsigned char *)(v19 + 64) = v80;
      }
      else
      {
        int v76 = *v74;
        sub_100009098(v76, v20[64]);
        id v77 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v76;
        char v78 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v75;
        sub_1000096EC(v77, v78);
      }
      int v82 = (void **)(v19 + 72);
      id v83 = (void **)(v20 + 72);
      int v84 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v84 == 255)
        {
          uint64_t v90 = *v83;
          *(unsigned char *)(v19 + 80) = v20[80];
          *int v82 = v90;
        }
        else
        {
          uint64_t v88 = *v83;
          sub_100009098(v88, v20[80]);
          *(void *)(v19 + 72) = v88;
          *(unsigned char *)(v19 + 80) = v84;
        }
      }
      else if (v84 == 255)
      {
        sub_10000BE68(v19 + 72);
        char v89 = v20[80];
        *int v82 = *v83;
        *(unsigned char *)(v19 + 80) = v89;
      }
      else
      {
        int v85 = *v83;
        sub_100009098(v85, v20[80]);
        id v86 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v85;
        char v87 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v84;
        sub_1000096EC(v86, v87);
      }
      uint64_t v91 = (void **)(v19 + 88);
      uint64_t v92 = (void **)(v20 + 88);
      int v93 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v93 == 255)
        {
          uint64_t v99 = *v92;
          *(unsigned char *)(v19 + 96) = v20[96];
          *uint64_t v91 = v99;
        }
        else
        {
          uint64_t v97 = *v92;
          sub_100009098(v97, v20[96]);
          *(void *)(v19 + 88) = v97;
          *(unsigned char *)(v19 + 96) = v93;
        }
      }
      else if (v93 == 255)
      {
        sub_10000BE68(v19 + 88);
        char v98 = v20[96];
        *uint64_t v91 = *v92;
        *(unsigned char *)(v19 + 96) = v98;
      }
      else
      {
        uint64_t v94 = *v92;
        sub_100009098(v94, v20[96]);
        uint64_t v95 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v94;
        char v96 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v93;
        sub_1000096EC(v95, v96);
      }
      uint64_t v100 = (void **)(v19 + 104);
      char v101 = (void **)(v20 + 104);
      int v102 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v102 == 255)
        {
          id v108 = *v101;
          *(unsigned char *)(v19 + 112) = v20[112];
          *uint64_t v100 = v108;
        }
        else
        {
          uint64_t v106 = *v101;
          sub_100009098(v106, v20[112]);
          *(void *)(v19 + 104) = v106;
          *(unsigned char *)(v19 + 112) = v102;
        }
      }
      else if (v102 == 255)
      {
        sub_10000BE68(v19 + 104);
        char v107 = v20[112];
        *uint64_t v100 = *v101;
        *(unsigned char *)(v19 + 112) = v107;
      }
      else
      {
        uint64_t v103 = *v101;
        sub_100009098(v103, v20[112]);
        uint64_t v104 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v103;
        char v105 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v102;
        sub_1000096EC(v104, v105);
      }
      uint64_t v109 = (void **)(v19 + 120);
      uint64_t v110 = (void **)(v20 + 120);
      int v111 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v111 == 255)
        {
          uint64_t v117 = *v110;
          *(unsigned char *)(v19 + 128) = v20[128];
          *uint64_t v109 = v117;
        }
        else
        {
          uint64_t v115 = *v110;
          sub_100009098(v115, v20[128]);
          *(void *)(v19 + 120) = v115;
          *(unsigned char *)(v19 + 128) = v111;
        }
      }
      else if (v111 == 255)
      {
        sub_10000BE68(v19 + 120);
        char v116 = v20[128];
        *uint64_t v109 = *v110;
        *(unsigned char *)(v19 + 128) = v116;
      }
      else
      {
        int v112 = *v110;
        sub_100009098(v112, v20[128]);
        uint64_t v113 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v112;
        char v114 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v111;
        sub_1000096EC(v113, v114);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v118 = v21[11];
      uint64_t v119 = v19 + v118;
      uint64_t v120 = &v20[v118];
      uint64_t v121 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
      uint64_t v122 = v21[12];
      uint64_t v123 = (void *)(v19 + v122);
      uint64_t v124 = &v20[v122];
      *uint64_t v123 = *(void *)v124;
      v123[1] = *((void *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v125 = v21[16];
      uint64_t v126 = (void *)(v19 + v125);
      uint64_t v127 = &v20[v125];
      void *v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_100039B30(v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_13:
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_76;
  }
  if (v24) {
    goto LABEL_13;
  }
  uint64_t v312 = v22;
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v25 = v20[32];
  swift_bridgeObjectRetain();
  if (v25 == 255)
  {
    long long v37 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v37;
  }
  else
  {
    uint64_t v26 = *((void *)v20 + 2);
    uint64_t v27 = *((void *)v20 + 3);
    sub_100009080(v26, v27, v25);
    *(void *)(v19 + 16) = v26;
    *(void *)(v19 + 24) = v27;
    *(unsigned char *)(v19 + 32) = v25;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v38 = (id *)(v20 + 56);
  int v39 = v20[64];
  if (v39 == 255)
  {
    id v41 = *v38;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v41;
  }
  else
  {
    id v40 = *v38;
    sub_100009098(*v38, v20[64]);
    *(void *)(v19 + 56) = v40;
    *(unsigned char *)(v19 + 64) = v39;
  }
  int v42 = (id *)(v20 + 72);
  int v43 = v20[80];
  if (v43 == 255)
  {
    id v45 = *v42;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v45;
  }
  else
  {
    id v44 = *v42;
    sub_100009098(*v42, v20[80]);
    *(void *)(v19 + 72) = v44;
    *(unsigned char *)(v19 + 80) = v43;
  }
  id v46 = (id *)(v20 + 88);
  int v47 = v20[96];
  if (v47 == 255)
  {
    id v49 = *v46;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v49;
  }
  else
  {
    id v48 = *v46;
    sub_100009098(*v46, v20[96]);
    *(void *)(v19 + 88) = v48;
    *(unsigned char *)(v19 + 96) = v47;
  }
  uint64_t v50 = (id *)(v20 + 104);
  int v51 = v20[112];
  if (v51 == 255)
  {
    id v53 = *v50;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v53;
  }
  else
  {
    id v52 = *v50;
    sub_100009098(*v50, v20[112]);
    *(void *)(v19 + 104) = v52;
    *(unsigned char *)(v19 + 112) = v51;
  }
  uint64_t v54 = (id *)(v20 + 120);
  int v55 = v20[128];
  if (v55 == 255)
  {
    id v57 = *v54;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v57;
  }
  else
  {
    id v56 = *v54;
    sub_100009098(*v54, v20[128]);
    *(void *)(v19 + 120) = v56;
    *(unsigned char *)(v19 + 128) = v55;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v58 = v21[11];
  uint64_t v59 = v19 + v58;
  uint64_t v60 = &v20[v58];
  uint64_t v61 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  uint64_t v62 = v21[12];
  uint64_t v63 = (void *)(v19 + v62);
  uint64_t v64 = &v20[v62];
  *uint64_t v63 = *(void *)v64;
  v63[1] = *((void *)v64 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v65 = v21[16];
  int v66 = (void *)(v19 + v65);
  uint64_t v67 = &v20[v65];
  *int v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  uint64_t v68 = *(void (**)(uint64_t, void, uint64_t, int *))(v313 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v19, 0, 1, v21);
LABEL_75:
  uint64_t v22 = v312;
LABEL_76:
  uint64_t v128 = v6[13];
  uint64_t v129 = (uint64_t)a1 + v128;
  uint64_t v130 = (char *)a2 + v128;
  int v131 = v22((uint64_t)a1 + v128, 1, v21);
  uint64_t v132 = (uint64_t (*)(char *, uint64_t, int *))v22;
  int v133 = v131;
  int v134 = v132(v130, 1, v21);
  if (v133)
  {
    if (!v134)
    {
      *(void *)uint64_t v129 = *(void *)v130;
      *(void *)(v129 + 8) = *((void *)v130 + 1);
      int v135 = v130[32];
      swift_bridgeObjectRetain();
      if (v135 == 255)
      {
        long long v147 = *((_OWORD *)v130 + 1);
        *(unsigned char *)(v129 + 32) = v130[32];
        *(_OWORD *)(v129 + 16) = v147;
      }
      else
      {
        uint64_t v136 = *((void *)v130 + 2);
        uint64_t v137 = *((void *)v130 + 3);
        sub_100009080(v136, v137, v135);
        *(void *)(v129 + 16) = v136;
        *(void *)(v129 + 24) = v137;
        *(unsigned char *)(v129 + 32) = v135;
      }
      *(void *)(v129 + 40) = *((void *)v130 + 5);
      *(void *)(v129 + 48) = *((void *)v130 + 6);
      uint64_t v148 = (id *)(v130 + 56);
      int v149 = v130[64];
      if (v149 == 255)
      {
        id v151 = *v148;
        *(unsigned char *)(v129 + 64) = v130[64];
        *(void *)(v129 + 56) = v151;
      }
      else
      {
        id v150 = *v148;
        sub_100009098(*v148, v130[64]);
        *(void *)(v129 + 56) = v150;
        *(unsigned char *)(v129 + 64) = v149;
      }
      uint64_t v152 = (id *)(v130 + 72);
      int v153 = v130[80];
      if (v153 == 255)
      {
        id v155 = *v152;
        *(unsigned char *)(v129 + 80) = v130[80];
        *(void *)(v129 + 72) = v155;
      }
      else
      {
        id v154 = *v152;
        sub_100009098(*v152, v130[80]);
        *(void *)(v129 + 72) = v154;
        *(unsigned char *)(v129 + 80) = v153;
      }
      uint64_t v156 = (id *)(v130 + 88);
      int v157 = v130[96];
      if (v157 == 255)
      {
        id v159 = *v156;
        *(unsigned char *)(v129 + 96) = v130[96];
        *(void *)(v129 + 88) = v159;
      }
      else
      {
        id v158 = *v156;
        sub_100009098(*v156, v130[96]);
        *(void *)(v129 + 88) = v158;
        *(unsigned char *)(v129 + 96) = v157;
      }
      uint64_t v160 = (id *)(v130 + 104);
      int v161 = v130[112];
      if (v161 == 255)
      {
        id v163 = *v160;
        *(unsigned char *)(v129 + 112) = v130[112];
        *(void *)(v129 + 104) = v163;
      }
      else
      {
        id v162 = *v160;
        sub_100009098(*v160, v130[112]);
        *(void *)(v129 + 104) = v162;
        *(unsigned char *)(v129 + 112) = v161;
      }
      uint64_t v164 = (id *)(v130 + 120);
      int v165 = v130[128];
      if (v165 == 255)
      {
        id v167 = *v164;
        *(unsigned char *)(v129 + 128) = v130[128];
        *(void *)(v129 + 120) = v167;
      }
      else
      {
        id v166 = *v164;
        sub_100009098(*v164, v130[128]);
        *(void *)(v129 + 120) = v166;
        *(unsigned char *)(v129 + 128) = v165;
      }
      *(unsigned char *)(v129 + 129) = v130[129];
      uint64_t v168 = v21[11];
      uint64_t v169 = v129 + v168;
      uint64_t v170 = &v130[v168];
      uint64_t v171 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      uint64_t v172 = v21[12];
      uint64_t v173 = (void *)(v129 + v172);
      int v174 = &v130[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
      *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
      *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
      uint64_t v175 = v21[16];
      uint64_t v176 = (void *)(v129 + v175);
      uint64_t v177 = &v130[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      uint64_t v178 = *(void (**)(uint64_t, void, uint64_t, int *))(v313 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178(v129, 0, 1, v21);
      goto LABEL_143;
    }
LABEL_82:
    uint64_t v138 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v129, v130, *(void *)(*(void *)(v138 - 8) + 64));
    goto LABEL_143;
  }
  if (v134)
  {
    sub_100039B30(v129, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_82;
  }
  *(void *)uint64_t v129 = *(void *)v130;
  *(void *)(v129 + 8) = *((void *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v139 = (long long *)(v129 + 16);
  uint64_t v140 = (long long *)(v130 + 16);
  int v141 = v130[32];
  if (*(unsigned __int8 *)(v129 + 32) == 255)
  {
    if (v141 == 255)
    {
      long long v182 = *v140;
      *(unsigned char *)(v129 + 32) = v130[32];
      long long *v139 = v182;
    }
    else
    {
      uint64_t v179 = *((void *)v130 + 2);
      uint64_t v180 = *((void *)v130 + 3);
      sub_100009080(v179, v180, v130[32]);
      *(void *)(v129 + 16) = v179;
      *(void *)(v129 + 24) = v180;
      *(unsigned char *)(v129 + 32) = v141;
    }
  }
  else if (v141 == 255)
  {
    sub_10000BE14(v129 + 16);
    char v181 = v130[32];
    long long *v139 = *v140;
    *(unsigned char *)(v129 + 32) = v181;
  }
  else
  {
    uint64_t v142 = *((void *)v130 + 2);
    uint64_t v143 = *((void *)v130 + 3);
    sub_100009080(v142, v143, v130[32]);
    uint64_t v144 = *(void *)(v129 + 16);
    uint64_t v145 = *(void *)(v129 + 24);
    *(void *)(v129 + 16) = v142;
    *(void *)(v129 + 24) = v143;
    unsigned __int8 v146 = *(unsigned char *)(v129 + 32);
    *(unsigned char *)(v129 + 32) = v141;
    sub_1000096D4(v144, v145, v146);
  }
  *(void *)(v129 + 40) = *((void *)v130 + 5);
  *(void *)(v129 + 48) = *((void *)v130 + 6);
  uint64_t v183 = (void **)(v129 + 56);
  uint64_t v184 = (void **)(v130 + 56);
  int v185 = v130[64];
  if (*(unsigned __int8 *)(v129 + 64) == 255)
  {
    if (v185 == 255)
    {
      uint64_t v191 = *v184;
      *(unsigned char *)(v129 + 64) = v130[64];
      *uint64_t v183 = v191;
    }
    else
    {
      uint64_t v189 = *v184;
      sub_100009098(v189, v130[64]);
      *(void *)(v129 + 56) = v189;
      *(unsigned char *)(v129 + 64) = v185;
    }
  }
  else if (v185 == 255)
  {
    sub_10000BE68(v129 + 56);
    char v190 = v130[64];
    *uint64_t v183 = *v184;
    *(unsigned char *)(v129 + 64) = v190;
  }
  else
  {
    uint64_t v186 = *v184;
    sub_100009098(v186, v130[64]);
    uint64_t v187 = *(void **)(v129 + 56);
    *(void *)(v129 + 56) = v186;
    char v188 = *(unsigned char *)(v129 + 64);
    *(unsigned char *)(v129 + 64) = v185;
    sub_1000096EC(v187, v188);
  }
  uint64_t v192 = (void **)(v129 + 72);
  uint64_t v193 = (void **)(v130 + 72);
  int v194 = v130[80];
  if (*(unsigned __int8 *)(v129 + 80) == 255)
  {
    if (v194 == 255)
    {
      uint64_t v200 = *v193;
      *(unsigned char *)(v129 + 80) = v130[80];
      char *v192 = v200;
    }
    else
    {
      uint64_t v198 = *v193;
      sub_100009098(v198, v130[80]);
      *(void *)(v129 + 72) = v198;
      *(unsigned char *)(v129 + 80) = v194;
    }
  }
  else if (v194 == 255)
  {
    sub_10000BE68(v129 + 72);
    char v199 = v130[80];
    char *v192 = *v193;
    *(unsigned char *)(v129 + 80) = v199;
  }
  else
  {
    uint64_t v195 = *v193;
    sub_100009098(v195, v130[80]);
    uint64_t v196 = *(void **)(v129 + 72);
    *(void *)(v129 + 72) = v195;
    char v197 = *(unsigned char *)(v129 + 80);
    *(unsigned char *)(v129 + 80) = v194;
    sub_1000096EC(v196, v197);
  }
  uint64_t v201 = (void **)(v129 + 88);
  uint64_t v202 = (void **)(v130 + 88);
  int v203 = v130[96];
  if (*(unsigned __int8 *)(v129 + 96) == 255)
  {
    if (v203 == 255)
    {
      uint64_t v209 = *v202;
      *(unsigned char *)(v129 + 96) = v130[96];
      void *v201 = v209;
    }
    else
    {
      uint64_t v207 = *v202;
      sub_100009098(v207, v130[96]);
      *(void *)(v129 + 88) = v207;
      *(unsigned char *)(v129 + 96) = v203;
    }
  }
  else if (v203 == 255)
  {
    sub_10000BE68(v129 + 88);
    char v208 = v130[96];
    void *v201 = *v202;
    *(unsigned char *)(v129 + 96) = v208;
  }
  else
  {
    uint64_t v204 = *v202;
    sub_100009098(v204, v130[96]);
    uint64_t v205 = *(void **)(v129 + 88);
    *(void *)(v129 + 88) = v204;
    char v206 = *(unsigned char *)(v129 + 96);
    *(unsigned char *)(v129 + 96) = v203;
    sub_1000096EC(v205, v206);
  }
  uint64_t v210 = (void **)(v129 + 104);
  v211 = (void **)(v130 + 104);
  int v212 = v130[112];
  if (*(unsigned __int8 *)(v129 + 112) == 255)
  {
    if (v212 == 255)
    {
      id v218 = *v211;
      *(unsigned char *)(v129 + 112) = v130[112];
      *uint64_t v210 = v218;
    }
    else
    {
      id v216 = *v211;
      sub_100009098(v216, v130[112]);
      *(void *)(v129 + 104) = v216;
      *(unsigned char *)(v129 + 112) = v212;
    }
  }
  else if (v212 == 255)
  {
    sub_10000BE68(v129 + 104);
    char v217 = v130[112];
    *uint64_t v210 = *v211;
    *(unsigned char *)(v129 + 112) = v217;
  }
  else
  {
    id v213 = *v211;
    sub_100009098(v213, v130[112]);
    v214 = *(void **)(v129 + 104);
    *(void *)(v129 + 104) = v213;
    char v215 = *(unsigned char *)(v129 + 112);
    *(unsigned char *)(v129 + 112) = v212;
    sub_1000096EC(v214, v215);
  }
  v219 = (void **)(v129 + 120);
  v220 = (void **)(v130 + 120);
  int v221 = v130[128];
  if (*(unsigned __int8 *)(v129 + 128) == 255)
  {
    if (v221 == 255)
    {
      id v227 = *v220;
      *(unsigned char *)(v129 + 128) = v130[128];
      id *v219 = v227;
    }
    else
    {
      id v225 = *v220;
      sub_100009098(v225, v130[128]);
      *(void *)(v129 + 120) = v225;
      *(unsigned char *)(v129 + 128) = v221;
    }
  }
  else if (v221 == 255)
  {
    sub_10000BE68(v129 + 120);
    char v226 = v130[128];
    id *v219 = *v220;
    *(unsigned char *)(v129 + 128) = v226;
  }
  else
  {
    id v222 = *v220;
    sub_100009098(v222, v130[128]);
    v223 = *(void **)(v129 + 120);
    *(void *)(v129 + 120) = v222;
    char v224 = *(unsigned char *)(v129 + 128);
    *(unsigned char *)(v129 + 128) = v221;
    sub_1000096EC(v223, v224);
  }
  *(unsigned char *)(v129 + 129) = v130[129];
  uint64_t v228 = v21[11];
  uint64_t v229 = v129 + v228;
  v230 = &v130[v228];
  uint64_t v231 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v229, v230, v231);
  uint64_t v232 = v21[12];
  v233 = (void *)(v129 + v232);
  v234 = &v130[v232];
  void *v233 = *(void *)v234;
  v233[1] = *((void *)v234 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
  *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
  *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
  uint64_t v235 = v21[16];
  v236 = (void *)(v129 + v235);
  v237 = &v130[v235];
  void *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v238 = v6[14];
  v239 = *(void **)((char *)a1 + v238);
  v240 = *(void **)((char *)a2 + v238);
  *(void *)((char *)a1 + v238) = v240;
  id v241 = v240;

  uint64_t v242 = v6[15];
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  uint64_t v245 = sub_10008A050();
  uint64_t v246 = *(void *)(v245 - 8);
  v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  LODWORD(v239) = v247(v243, 1, v245);
  int v248 = v247(v244, 1, v245);
  if (v239)
  {
    if (!v248)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v248)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_148:
    uint64_t v249 = sub_10000903C(&qword_1000A1048);
    memcpy(v243, v244, *(void *)(*(void *)(v249 - 8) + 64));
    goto LABEL_149;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
LABEL_149:
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  uint64_t v250 = v6[17];
  uint64_t v251 = (char *)a1 + v250;
  v252 = (char *)a2 + v250;
  uint64_t v253 = *(void *)v252;
  v251[8] = v252[8];
  *(void *)uint64_t v251 = v253;
  uint64_t v254 = v6[18];
  uint64_t v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  uint64_t v257 = *(void *)v256;
  v255[8] = v256[8];
  *(void *)uint64_t v255 = v257;
  uint64_t v258 = v6[19];
  uint64_t v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  int v261 = v314((char *)a1 + v258, 1, v315);
  int v262 = v314(v260, 1, v315);
  if (v261)
  {
    if (!v262)
    {
      (*(void (**)(char *, char *, uint64_t))(v319 + 16))(v259, v260, v315);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v319 + 56))(v259, 0, 1, v315);
      goto LABEL_155;
    }
    goto LABEL_154;
  }
  if (v262)
  {
    (*(void (**)(char *, uint64_t))(v319 + 8))(v259, v315);
LABEL_154:
    uint64_t v263 = sub_10000903C(&qword_1000A1038);
    memcpy(v259, v260, *(void *)(*(void *)(v263 - 8) + 64));
    goto LABEL_155;
  }
  (*(void (**)(char *, char *, uint64_t))(v319 + 24))(v259, v260, v315);
LABEL_155:
  uint64_t v264 = v6[20];
  uint64_t v265 = (char *)a1 + v264;
  v266 = (char *)a2 + v264;
  int v267 = v314((char *)a1 + v264, 1, v315);
  int v268 = v314(v266, 1, v315);
  if (v267)
  {
    if (!v268)
    {
      (*(void (**)(char *, char *, uint64_t))(v319 + 16))(v265, v266, v315);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v319 + 56))(v265, 0, 1, v315);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v268)
  {
    (*(void (**)(char *, uint64_t))(v319 + 8))(v265, v315);
LABEL_160:
    uint64_t v269 = sub_10000903C(&qword_1000A1038);
    memcpy(v265, v266, *(void *)(*(void *)(v269 - 8) + 64));
    goto LABEL_161;
  }
  (*(void (**)(char *, char *, uint64_t))(v319 + 24))(v265, v266, v315);
LABEL_161:
  uint64_t v270 = v6[21];
  uint64_t v271 = (void *)((char *)a1 + v270);
  v272 = (char *)a2 + v270;
  uint64_t v273 = *(void *)((char *)a2 + v270);
  if (*(void *)((char *)a1 + v270))
  {
    if (v273)
    {
      void *v271 = v273;
      swift_retain();
      swift_release();
      v271[1] = *((void *)v272 + 1);
      swift_retain();
      swift_release();
      v271[2] = *((void *)v272 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10000BF18((uint64_t)a1 + v270);
      uint64_t v274 = *((void *)v272 + 2);
      *(_OWORD *)uint64_t v271 = *(_OWORD *)v272;
      v271[2] = v274;
    }
  }
  else if (v273)
  {
    void *v271 = v273;
    v271[1] = *((void *)v272 + 1);
    v271[2] = *((void *)v272 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v275 = *(_OWORD *)v272;
    v271[2] = *((void *)v272 + 2);
    *(_OWORD *)uint64_t v271 = v275;
  }
  uint64_t v276 = v6[22];
  uint64_t v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  uint64_t v279 = sub_10000903C(&qword_1000A1050);
  uint64_t v280 = *(void *)(v279 - 8);
  uint64_t v281 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v280 + 48);
  int v282 = v281(v277, 1, v279);
  int v283 = v281(v278, 1, v279);
  uint64_t v317 = a2;
  uint64_t v318 = a1;
  if (v282)
  {
    if (!v283)
    {
      int v284 = *(void (**)(char *, char *, uint64_t))(v319 + 16);
      v284(v277, v278, v315);
      v284(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v315);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  if (v283)
  {
    sub_100015614((uint64_t)v277, &qword_1000A1050);
LABEL_176:
    uint64_t v285 = sub_10000903C(&qword_1000A1058);
    memcpy(v277, v278, *(void *)(*(void *)(v285 - 8) + 64));
    goto LABEL_177;
  }
  uint64_t v311 = *(void (**)(char *, char *, uint64_t))(v319 + 24);
  v311(v277, v278, v315);
  v311(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v315);
LABEL_177:
  uint64_t v286 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v287 = v286[5];
  uint64_t v288 = &v277[v287];
  v289 = &v278[v287];
  uint64_t v290 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 24))(v288, v289, v290);
  uint64_t v291 = v286[6];
  uint64_t v292 = &v277[v291];
  v293 = &v278[v291];
  uint64_t v294 = sub_10008A4B0();
  uint64_t v295 = *(void *)(v294 - 8);
  uint64_t v296 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v295 + 48);
  LODWORD(v288) = v296(v292, 1, v294);
  int v297 = v296(v293, 1, v294);
  if (v288)
  {
    if (!v297)
    {
      (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v293, v294);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
      goto LABEL_183;
    }
    goto LABEL_182;
  }
  if (v297)
  {
    (*(void (**)(char *, uint64_t))(v295 + 8))(v292, v294);
LABEL_182:
    uint64_t v298 = sub_10000903C(&qword_1000A1060);
    memcpy(v292, v293, *(void *)(*(void *)(v298 - 8) + 64));
    goto LABEL_183;
  }
  (*(void (**)(char *, char *, uint64_t))(v295 + 24))(v292, v293, v294);
LABEL_183:
  uint64_t v299 = v286[7];
  uint64_t v300 = &v277[v299];
  uint64_t v301 = &v278[v299];
  *(void *)uint64_t v300 = *(void *)v301;
  *((void *)v300 + 1) = *((void *)v301 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v302 = v286[8];
  v303 = &v277[v302];
  uint64_t v304 = &v278[v302];
  *(void *)v303 = *(void *)v304;
  *((void *)v303 + 1) = *((void *)v304 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v318 + v316[5]) = *(void *)((char *)v317 + v316[5]);
  *((unsigned char *)v318 + v316[6]) = *((unsigned char *)v317 + v316[6]);
  if (v318 != v317)
  {
    uint64_t v305 = v316[7];
    v306 = (char *)v318 + v305;
    v307 = (char *)v317 + v305;
    sub_100039B30((uint64_t)v318 + v305, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
    uint64_t v308 = type metadata accessor for EpisodeViewStyle();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v306, v307, *(void *)(*(void *)(v308 - 8) + 64));
    }
    else
    {
      uint64_t v309 = sub_10008B220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16))(v306, v307, v309);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(void *)((char *)v318 + v316[8]) = *(void *)((char *)v317 + v316[8]);
  return v318;
}

uint64_t sub_100035920(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v8 = v7[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v90 = v11;
  uint64_t v89 = v12;
  uint64_t v88 = *(unsigned int (**)(const void *, uint64_t))(v12 + 48);
  if (v88(v10, 1))
  {
    uint64_t v13 = sub_10000903C(&qword_1000A1038);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v90);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v90);
  }
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  uint64_t v14 = v7[12];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  int v17 = (int *)sub_10008A340();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48);
  uint64_t v87 = v18;
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1040);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v21;
    *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((unsigned char *)v15 + 64) = *((unsigned char *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((unsigned char *)v15 + 129) = *((unsigned char *)v16 + 129);
    uint64_t v22 = v17[11];
    int v85 = (char *)v15 + v22;
    id v86 = a3;
    int v23 = (char *)v16 + v22;
    uint64_t v24 = sub_10008A300();
    int v25 = v23;
    a3 = v86;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v85, v25, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((unsigned char *)v15 + v17[13]) = *((unsigned char *)v16 + v17[13]);
    *((unsigned char *)v15 + v17[14]) = *((unsigned char *)v16 + v17[14]);
    *((unsigned char *)v15 + v17[15]) = *((unsigned char *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = v7[13];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  if (v19((_OWORD *)(a2 + v26), 1, v17))
  {
    uint64_t v29 = sub_10000903C(&qword_1000A1040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v28[1];
    _OWORD *v27 = *v28;
    v27[1] = v30;
    *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
    *(_OWORD *)((char *)v27 + 40) = *(_OWORD *)((char *)v28 + 40);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
    *(_OWORD *)((char *)v27 + 113) = *(_OWORD *)((char *)v28 + 113);
    *(_OWORD *)((char *)v27 + 104) = *(_OWORD *)((char *)v28 + 104);
    *(_OWORD *)((char *)v27 + 88) = *(_OWORD *)((char *)v28 + 88);
    *(_OWORD *)((char *)v27 + 72) = *(_OWORD *)((char *)v28 + 72);
    *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
    uint64_t v31 = v17[11];
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = a3;
    uint64_t v34 = (char *)v28 + v31;
    uint64_t v35 = sub_10008A300();
    unsigned __int8 v36 = v34;
    a3 = v33;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v36, v35);
    *(_OWORD *)((char *)v27 + v17[12]) = *(_OWORD *)((char *)v28 + v17[12]);
    *((unsigned char *)v27 + v17[13]) = *((unsigned char *)v28 + v17[13]);
    *((unsigned char *)v27 + v17[14]) = *((unsigned char *)v28 + v17[14]);
    *((unsigned char *)v27 + v17[15]) = *((unsigned char *)v28 + v17[15]);
    *(_OWORD *)((char *)v27 + v17[16]) = *(_OWORD *)((char *)v28 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v87 + 56))(v27, 0, 1, v17);
  }
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  uint64_t v37 = v7[15];
  uint64_t v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_10008A050();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10000903C(&qword_1000A1048);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v43 = v7[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = v7[18];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = v7[19];
  uint64_t v50 = (void *)(a1 + v49);
  int v51 = (const void *)(a2 + v49);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v88)(a2 + v49, 1, v90))
  {
    uint64_t v52 = sub_10000903C(&qword_1000A1038);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v89 + 32))(v50, v51, v90);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v50, 0, 1, v90);
  }
  uint64_t v53 = v7[20];
  uint64_t v54 = (void *)(a1 + v53);
  int v55 = (const void *)(a2 + v53);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v88)(a2 + v53, 1, v90))
  {
    uint64_t v56 = sub_10000903C(&qword_1000A1038);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v89 + 32))(v54, v55, v90);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v54, 0, 1, v90);
  }
  uint64_t v57 = v7[21];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  uint64_t v60 = v7[22];
  uint64_t v61 = (char *)(a1 + v60);
  uint64_t v62 = (char *)(a2 + v60);
  uint64_t v63 = sub_10000903C(&qword_1000A1050);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_10000903C(&qword_1000A1058);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    int v66 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
    v66(v61, v62, v90);
    v66(&v61[*(int *)(v63 + 36)], &v62[*(int *)(v63 + 36)], v90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v67 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v68 = v67[5];
  uint64_t v69 = &v61[v68];
  uint64_t v70 = &v62[v68];
  uint64_t v71 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = v67[6];
  int v73 = &v61[v72];
  id v74 = &v62[v72];
  uint64_t v75 = sub_10008A4B0();
  uint64_t v76 = *(void *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    uint64_t v77 = sub_10000903C(&qword_1000A1060);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  *(_OWORD *)&v61[v67[7]] = *(_OWORD *)&v62[v67[7]];
  *(_OWORD *)&v61[v67[8]] = *(_OWORD *)&v62[v67[8]];
  uint64_t v78 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v78) = *(unsigned char *)(a2 + v78);
  uint64_t v79 = a3[7];
  char v80 = (void *)(a1 + v79);
  uint64_t v81 = (const void *)(a2 + v79);
  uint64_t v82 = type metadata accessor for EpisodeViewStyle();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    uint64_t v83 = sub_10008B220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v80, v81, v83);
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

void *sub_100036368(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v12 = v11[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10008A170();
  uint64_t v210 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v210 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  char v206 = a3;
  uint64_t v205 = v16;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v210 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v210 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10000903C(&qword_1000A1038);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v210 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[11];
  long long v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *long long v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v11[12];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)sub_10008A340();
  uint64_t v204 = *((void *)v28 - 1);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v204 + 48);
  int v30 = v29(v26, 1, v28);
  int v31 = v29((uint64_t)v27, 1, v28);
  uint64_t v209 = v15;
  if (v30)
  {
    if (!v31)
    {
      long long v32 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v32;
      *(unsigned char *)(v26 + 32) = v27[32];
      *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
      *(void *)(v26 + 56) = *((void *)v27 + 7);
      *(unsigned char *)(v26 + 64) = v27[64];
      *(_OWORD *)(v26 + 113) = *(_OWORD *)(v27 + 113);
      *(_OWORD *)(v26 + 104) = *(_OWORD *)(v27 + 104);
      *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(unsigned char *)(v26 + 129) = v27[129];
      uint64_t v33 = v28[11];
      uint64_t v34 = v26 + v33;
      uint64_t v35 = &v27[v33];
      uint64_t v36 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)&v27[v28[12]];
      *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
      *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
      *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
      *(_OWORD *)(v26 + v28[16]) = *(_OWORD *)&v27[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v204 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    sub_100039B30(v26, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_12:
    uint64_t v37 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v123 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v123;
  swift_bridgeObjectRelease();
  uint64_t v124 = v27 + 16;
  int v125 = *(unsigned __int8 *)(v26 + 32);
  if (v125 != 255)
  {
    int v126 = v27[32];
    if (v126 != 255)
    {
      uint64_t v127 = *(void *)(v26 + 16);
      uint64_t v128 = *(void *)(v26 + 24);
      *(_OWORD *)(v26 + 16) = *v124;
      *(unsigned char *)(v26 + 32) = v126;
      sub_1000096D4(v127, v128, v125);
      goto LABEL_73;
    }
    sub_10000BE14(v26 + 16);
  }
  *(_OWORD *)(v26 + 16) = *v124;
  *(unsigned char *)(v26 + 32) = v27[32];
LABEL_73:
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  uint64_t v136 = v27 + 56;
  int v137 = *(unsigned __int8 *)(v26 + 64);
  if (v137 != 255)
  {
    int v138 = v27[64];
    if (v138 != 255)
    {
      char v139 = *(void **)(v26 + 56);
      *(void *)(v26 + 56) = *v136;
      *(unsigned char *)(v26 + 64) = v138;
      sub_1000096EC(v139, v137);
      goto LABEL_83;
    }
    sub_10000BE68(v26 + 56);
  }
  *(void *)(v26 + 56) = *v136;
  *(unsigned char *)(v26 + 64) = v27[64];
LABEL_83:
  uint64_t v144 = v27 + 72;
  int v145 = *(unsigned __int8 *)(v26 + 80);
  if (v145 != 255)
  {
    int v146 = v27[80];
    if (v146 != 255)
    {
      long long v147 = *(void **)(v26 + 72);
      *(void *)(v26 + 72) = *v144;
      *(unsigned char *)(v26 + 80) = v146;
      sub_1000096EC(v147, v145);
      goto LABEL_93;
    }
    sub_10000BE68(v26 + 72);
  }
  *(void *)(v26 + 72) = *v144;
  *(unsigned char *)(v26 + 80) = v27[80];
LABEL_93:
  uint64_t v152 = v27 + 88;
  int v153 = *(unsigned __int8 *)(v26 + 96);
  if (v153 != 255)
  {
    int v154 = v27[96];
    if (v154 != 255)
    {
      id v155 = *(void **)(v26 + 88);
      *(void *)(v26 + 88) = *v152;
      *(unsigned char *)(v26 + 96) = v154;
      sub_1000096EC(v155, v153);
      goto LABEL_103;
    }
    sub_10000BE68(v26 + 88);
  }
  *(void *)(v26 + 88) = *v152;
  *(unsigned char *)(v26 + 96) = v27[96];
LABEL_103:
  uint64_t v160 = v27 + 104;
  int v161 = *(unsigned __int8 *)(v26 + 112);
  if (v161 != 255)
  {
    int v162 = v27[112];
    if (v162 != 255)
    {
      id v163 = *(void **)(v26 + 104);
      *(void *)(v26 + 104) = *v160;
      *(unsigned char *)(v26 + 112) = v162;
      sub_1000096EC(v163, v161);
      goto LABEL_113;
    }
    sub_10000BE68(v26 + 104);
  }
  *(void *)(v26 + 104) = *v160;
  *(unsigned char *)(v26 + 112) = v27[112];
LABEL_113:
  uint64_t v168 = v27 + 120;
  int v169 = *(unsigned __int8 *)(v26 + 128);
  if (v169 == 255)
  {
LABEL_122:
    *(void *)(v26 + 120) = *v168;
    *(unsigned char *)(v26 + 128) = v27[128];
    goto LABEL_123;
  }
  int v170 = v27[128];
  if (v170 == 255)
  {
    sub_10000BE68(v26 + 120);
    goto LABEL_122;
  }
  uint64_t v171 = *(void **)(v26 + 120);
  *(void *)(v26 + 120) = *v168;
  *(unsigned char *)(v26 + 128) = v170;
  sub_1000096EC(v171, v169);
LABEL_123:
  *(unsigned char *)(v26 + 129) = v27[129];
  uint64_t v176 = v28[11];
  uint64_t v177 = v26 + v176;
  uint64_t v178 = &v27[v176];
  uint64_t v179 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v179 - 8) + 40))(v177, v178, v179);
  uint64_t v180 = v28[12];
  char v181 = (void *)(v26 + v180);
  long long v182 = &v27[v180];
  uint64_t v184 = *(void *)v182;
  uint64_t v183 = *((void *)v182 + 1);
  *char v181 = v184;
  v181[1] = v183;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
  *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
  *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
  uint64_t v185 = v28[16];
  uint64_t v186 = (void *)(v26 + v185);
  uint64_t v187 = &v27[v185];
  uint64_t v189 = *(void *)v187;
  uint64_t v188 = *((void *)v187 + 1);
  void *v186 = v189;
  v186[1] = v188;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v38 = v11[13];
  uint64_t v39 = (uint64_t)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v29((uint64_t)a1 + v38, 1, v28);
  int v42 = v29((uint64_t)v40, 1, v28);
  if (v41)
  {
    if (!v42)
    {
      long long v43 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v43;
      *(unsigned char *)(v39 + 32) = v40[32];
      *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
      *(void *)(v39 + 56) = *((void *)v40 + 7);
      *(unsigned char *)(v39 + 64) = v40[64];
      *(_OWORD *)(v39 + 113) = *(_OWORD *)(v40 + 113);
      *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
      *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      *(unsigned char *)(v39 + 129) = v40[129];
      uint64_t v44 = v28[11];
      uint64_t v45 = v39 + v44;
      uint64_t v46 = &v40[v44];
      uint64_t v47 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      *(_OWORD *)(v39 + v28[12]) = *(_OWORD *)&v40[v28[12]];
      *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
      *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
      *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
      *(_OWORD *)(v39 + v28[16]) = *(_OWORD *)&v40[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v204 + 56))(v39, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    sub_100039B30(v39, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_18:
    uint64_t v48 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v129 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v129;
  swift_bridgeObjectRelease();
  uint64_t v130 = v40 + 16;
  int v131 = *(unsigned __int8 *)(v39 + 32);
  if (v131 != 255)
  {
    int v132 = v40[32];
    if (v132 != 255)
    {
      uint64_t v133 = *(void *)(v39 + 16);
      uint64_t v134 = *(void *)(v39 + 24);
      *(_OWORD *)(v39 + 16) = *v130;
      *(unsigned char *)(v39 + 32) = v132;
      sub_1000096D4(v133, v134, v131);
      goto LABEL_78;
    }
    sub_10000BE14(v39 + 16);
  }
  *(_OWORD *)(v39 + 16) = *v130;
  *(unsigned char *)(v39 + 32) = v40[32];
LABEL_78:
  *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
  uint64_t v140 = v40 + 56;
  int v141 = *(unsigned __int8 *)(v39 + 64);
  if (v141 != 255)
  {
    int v142 = v40[64];
    if (v142 != 255)
    {
      uint64_t v143 = *(void **)(v39 + 56);
      *(void *)(v39 + 56) = *v140;
      *(unsigned char *)(v39 + 64) = v142;
      sub_1000096EC(v143, v141);
      goto LABEL_88;
    }
    sub_10000BE68(v39 + 56);
  }
  *(void *)(v39 + 56) = *v140;
  *(unsigned char *)(v39 + 64) = v40[64];
LABEL_88:
  uint64_t v148 = v40 + 72;
  int v149 = *(unsigned __int8 *)(v39 + 80);
  if (v149 != 255)
  {
    int v150 = v40[80];
    if (v150 != 255)
    {
      id v151 = *(void **)(v39 + 72);
      *(void *)(v39 + 72) = *v148;
      *(unsigned char *)(v39 + 80) = v150;
      sub_1000096EC(v151, v149);
      goto LABEL_98;
    }
    sub_10000BE68(v39 + 72);
  }
  *(void *)(v39 + 72) = *v148;
  *(unsigned char *)(v39 + 80) = v40[80];
LABEL_98:
  uint64_t v156 = v40 + 88;
  int v157 = *(unsigned __int8 *)(v39 + 96);
  if (v157 != 255)
  {
    int v158 = v40[96];
    if (v158 != 255)
    {
      id v159 = *(void **)(v39 + 88);
      *(void *)(v39 + 88) = *v156;
      *(unsigned char *)(v39 + 96) = v158;
      sub_1000096EC(v159, v157);
      goto LABEL_108;
    }
    sub_10000BE68(v39 + 88);
  }
  *(void *)(v39 + 88) = *v156;
  *(unsigned char *)(v39 + 96) = v40[96];
LABEL_108:
  uint64_t v164 = v40 + 104;
  int v165 = *(unsigned __int8 *)(v39 + 112);
  if (v165 != 255)
  {
    int v166 = v40[112];
    if (v166 != 255)
    {
      id v167 = *(void **)(v39 + 104);
      *(void *)(v39 + 104) = *v164;
      *(unsigned char *)(v39 + 112) = v166;
      sub_1000096EC(v167, v165);
      goto LABEL_118;
    }
    sub_10000BE68(v39 + 104);
  }
  *(void *)(v39 + 104) = *v164;
  *(unsigned char *)(v39 + 112) = v40[112];
LABEL_118:
  uint64_t v172 = v40 + 120;
  int v173 = *(unsigned __int8 *)(v39 + 128);
  if (v173 == 255)
  {
LABEL_125:
    *(void *)(v39 + 120) = *v172;
    *(unsigned char *)(v39 + 128) = v40[128];
    goto LABEL_126;
  }
  int v174 = v40[128];
  if (v174 == 255)
  {
    sub_10000BE68(v39 + 120);
    goto LABEL_125;
  }
  uint64_t v175 = *(void **)(v39 + 120);
  *(void *)(v39 + 120) = *v172;
  *(unsigned char *)(v39 + 128) = v174;
  sub_1000096EC(v175, v173);
LABEL_126:
  *(unsigned char *)(v39 + 129) = v40[129];
  uint64_t v190 = v28[11];
  uint64_t v191 = v39 + v190;
  uint64_t v192 = &v40[v190];
  uint64_t v193 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v193 - 8) + 40))(v191, v192, v193);
  uint64_t v194 = v28[12];
  uint64_t v195 = (void *)(v39 + v194);
  uint64_t v196 = &v40[v194];
  uint64_t v198 = *(void *)v196;
  uint64_t v197 = *((void *)v196 + 1);
  void *v195 = v198;
  v195[1] = v197;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
  *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
  *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
  uint64_t v199 = v28[16];
  uint64_t v200 = (void *)(v39 + v199);
  uint64_t v201 = &v40[v199];
  uint64_t v203 = *(void *)v201;
  uint64_t v202 = *((void *)v201 + 1);
  void *v200 = v203;
  v200[1] = v202;
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v49 = v11[14];
  uint64_t v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

  uint64_t v51 = v11[15];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_10008A050();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    uint64_t v59 = v209;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v59 = v209;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_24:
    uint64_t v60 = sub_10000903C(&qword_1000A1048);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_25:
  *((unsigned char *)a1 + v11[16]) = *((unsigned char *)a2 + v11[16]);
  uint64_t v61 = v11[17];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = v11[18];
  uint64_t v65 = (char *)a1 + v64;
  int v66 = (char *)a2 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = v11[19];
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  int v70 = v205((char *)a1 + v67, 1, v59);
  int v71 = v205(v69, 1, v59);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v68, v69, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v210 + 56))(v68, 0, 1, v59);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v210 + 8))(v68, v59);
LABEL_30:
    uint64_t v72 = sub_10000903C(&qword_1000A1038);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v210 + 40))(v68, v69, v59);
LABEL_31:
  uint64_t v73 = v11[20];
  id v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  int v76 = v205((char *)a1 + v73, 1, v59);
  int v77 = v205(v75, 1, v59);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v74, v75, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v210 + 56))(v74, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v210 + 8))(v74, v59);
LABEL_36:
    uint64_t v78 = sub_10000903C(&qword_1000A1038);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v210 + 40))(v74, v75, v59);
LABEL_37:
  uint64_t v79 = v11[21];
  char v80 = (void *)((char *)a1 + v79);
  uint64_t v81 = (void *)((char *)a2 + v79);
  if (*(void *)((char *)a1 + v79))
  {
    if (*v81)
    {
      *char v80 = *v81;
      swift_release();
      v80[1] = v81[1];
      swift_release();
      v80[2] = v81[2];
      swift_release();
      goto LABEL_42;
    }
    sub_10000BF18((uint64_t)v80);
  }
  *(_OWORD *)char v80 = *(_OWORD *)v81;
  v80[2] = v81[2];
LABEL_42:
  uint64_t v82 = v11[22];
  uint64_t v83 = (char *)a1 + v82;
  int v84 = (char *)a2 + v82;
  uint64_t v85 = sub_10000903C(&qword_1000A1050);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  uint64_t v207 = a2;
  char v208 = a1;
  if (v88)
  {
    if (!v89)
    {
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v210 + 32);
      v90(v83, v84, v59);
      v90(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v89)
  {
    sub_100015614((uint64_t)v83, &qword_1000A1050);
LABEL_47:
    uint64_t v91 = sub_10000903C(&qword_1000A1058);
    memcpy(v83, v84, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_48;
  }
  int v135 = *(void (**)(char *, char *, uint64_t))(v210 + 40);
  v135(v83, v84, v59);
  v135(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
LABEL_48:
  uint64_t v92 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v93 = v92[5];
  uint64_t v94 = &v83[v93];
  uint64_t v95 = &v84[v93];
  uint64_t v96 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  uint64_t v97 = v92[6];
  char v98 = &v83[v97];
  uint64_t v99 = &v84[v97];
  uint64_t v100 = sub_10008A4B0();
  uint64_t v101 = *(void *)(v100 - 8);
  int v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  int v103 = v102(v98, 1, v100);
  int v104 = v102(v99, 1, v100);
  if (v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v98, v99, v100);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  if (v104)
  {
    (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v100);
LABEL_53:
    uint64_t v105 = sub_10000903C(&qword_1000A1060);
    memcpy(v98, v99, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 40))(v98, v99, v100);
LABEL_54:
  uint64_t v106 = v92[7];
  char v107 = &v83[v106];
  id v108 = &v84[v106];
  uint64_t v110 = *(void *)v108;
  uint64_t v109 = *((void *)v108 + 1);
  *(void *)char v107 = v110;
  *((void *)v107 + 1) = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v92[8];
  int v112 = &v83[v111];
  uint64_t v113 = &v84[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)int v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  uint64_t v116 = v206[6];
  *(void *)((char *)v208 + v206[5]) = *(void *)((char *)v207 + v206[5]);
  *((unsigned char *)v208 + v116) = *((unsigned char *)v207 + v116);
  if (v208 != v207)
  {
    uint64_t v117 = v206[7];
    uint64_t v118 = (char *)v208 + v117;
    uint64_t v119 = (char *)v207 + v117;
    sub_100039B30((uint64_t)v208 + v117, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
    uint64_t v120 = type metadata accessor for EpisodeViewStyle();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      uint64_t v121 = sub_10008B220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v118, v119, v121);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(void *)((char *)v208 + v206[8]) = *(void *)((char *)v207 + v206[8]);
  return v208;
}

uint64_t sub_1000376C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000376D8);
}

uint64_t sub_1000376D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 253)
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 2u) {
      int v10 = 2;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    }
    unsigned int v11 = v10 - 2;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 2u) {
      return v11;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v12 = type metadata accessor for EpisodeViewStyle();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 28);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_100037808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003781C);
}

uint64_t sub_10003781C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 253)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  }
  else
  {
    uint64_t v11 = type metadata accessor for EpisodeViewStyle();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for EpisodeRowView()
{
  uint64_t result = qword_1000A1A90;
  if (!qword_1000A1A90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100037990()
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for EpisodeViewStyle();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100037A70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100037A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = type metadata accessor for EpisodeRowView();
  uint64_t v3 = v2 - 8;
  uint64_t v30 = *(void *)(v2 - 8);
  v29[1] = *(void *)(v30 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000903C(&qword_1000A1048);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A1AD8);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000903C(&qword_1000A1AE0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000903C(&qword_1000A1AE8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[0] = type metadata accessor for UpNextEntry.Episode(0);
  sub_1000155B0((uint64_t)v1 + *(int *)(v29[0] + 60), (uint64_t)v8, &qword_1000A1048);
  uint64_t v20 = *(void *)((char *)v1 + *(int *)(v3 + 40));
  sub_100039AC8((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for EpisodeRowView);
  unint64_t v21 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v22 = swift_allocObject();
  sub_1000399B4((uint64_t)v5, v22 + v21, (uint64_t (*)(void))type metadata accessor for EpisodeRowView);
  sub_10001547C((uint64_t)v8, (uint64_t)v12, &qword_1000A1048);
  *(void *)&v12[*(int *)(v10 + 44)] = v20;
  uint64_t v23 = (uint64_t (**)())&v12[*(int *)(v10 + 48)];
  char *v23 = sub_10003989C;
  v23[1] = (uint64_t (*)())v22;
  sub_1000155B0((uint64_t)v12, (uint64_t)v15, &qword_1000A1AD8);
  sub_100015614((uint64_t)v12, &qword_1000A1AD8);
  uint64_t v25 = *v1;
  uint64_t v24 = v1[1];
  sub_1000155B0((uint64_t)v15, (uint64_t)v19, &qword_1000A1AE0);
  uint64_t v26 = &v19[*(int *)(v17 + 60)];
  *(void *)uint64_t v26 = v25;
  *((void *)v26 + 1) = v24;
  swift_bridgeObjectRetain();
  sub_100015614((uint64_t)v15, &qword_1000A1AE0);
  char v27 = *(void *)((char *)v1 + *(int *)(v29[0] + 84)) != 0;
  long long v32 = v1;
  sub_10004CB98(v27, (void (*)(uint64_t))sub_10003990C, v31);
  return sub_100015614((uint64_t)v19, &qword_1000A1AE8);
}

uint64_t sub_100037DF8(uint64_t a1)
{
  uint64_t v2 = sub_10008AB50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000903C(&qword_1000A1AF8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A1B00);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_10008A9C0();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v12 = sub_10000903C(&qword_1000A1B08);
  sub_100038038(a1, (uint64_t)&v8[*(int *)(v12 + 44)]);
  char v13 = sub_10008ABC0();
  type metadata accessor for EpisodeRowView();
  sub_10008A630();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_1000155B0((uint64_t)v8, (uint64_t)v11, &qword_1000A1AF8);
  uint64_t v22 = &v11[*(int *)(v9 + 36)];
  char *v22 = v13;
  *((void *)v22 + 1) = v15;
  *((void *)v22 + 2) = v17;
  *((void *)v22 + 3) = v19;
  *((void *)v22 + 4) = v21;
  v22[40] = 0;
  sub_100015614((uint64_t)v8, &qword_1000A1AF8);
  sub_10008AB40();
  sub_100039914();
  sub_10008AF20();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_100015614((uint64_t)v11, &qword_1000A1B00);
}

uint64_t sub_100038038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v85 = type metadata accessor for PlayButtonSmall();
  __chkstk_darwin(v85);
  uint64_t v84 = (uint64_t)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000903C(&qword_1000A1B20);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v87 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v86 = (uint64_t)&v69 - v7;
  uint64_t v81 = type metadata accessor for WidgetEmptyText();
  __chkstk_darwin(v81);
  int v71 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10000903C(&qword_1000A1B28);
  __chkstk_darwin(v78);
  uint64_t v80 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A1B30);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10000903C(&qword_1000A1B38);
  uint64_t v13 = __chkstk_darwin(v79);
  uint64_t v69 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v70 = (uint64_t)&v69 - v15;
  uint64_t v16 = sub_10000903C(&qword_1000A1B40);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v83 = (uint64_t)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v89 = (uint64_t)&v69 - v19;
  uint64_t v20 = type metadata accessor for EpisodeViewStyle();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for UpNextEntry.Episode(0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for WidgetArtworkView();
  uint64_t v27 = v26 - 8;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v82 = (uint64_t)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  long long v32 = (char *)&v69 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v69 - v33;
  sub_100039AC8(a1, (uint64_t)v25, type metadata accessor for UpNextEntry.Episode);
  uint64_t v35 = type metadata accessor for EpisodeRowView();
  uint64_t v36 = a1 + *(int *)(v35 + 28);
  sub_100039AC8(v36, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
  if (swift_getEnumCaseMultiPayload() == 1) {
    double v37 = 8.0;
  }
  else {
    double v37 = 6.0;
  }
  sub_100039B30((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
  sub_1000399B4((uint64_t)v25, (uint64_t)v32, type metadata accessor for UpNextEntry.Episode);
  *(double *)&v32[*(int *)(v27 + 28)] = v37;
  uint64_t v38 = (uint64_t)v34;
  sub_1000399B4((uint64_t)v32, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  sub_10008B130();
  sub_10008A6A0();
  uint64_t v77 = v90;
  int v76 = v91;
  uint64_t v75 = v92;
  int v74 = v93;
  uint64_t v73 = v94;
  uint64_t v72 = v95;
  int v39 = *(unsigned __int8 *)(a1 + *(int *)(v35 + 24));
  if (v39 == 2)
  {
    *(void *)uint64_t v12 = sub_10008AA80();
    *((void *)v12 + 1) = 0x4000000000000000;
    v12[16] = 0;
    uint64_t v40 = sub_10000903C(&qword_1000A1B48);
    sub_100038A0C(a1, (uint64_t *)&v12[*(int *)(v40 + 44)]);
    char v41 = sub_10008AC20();
    sub_10008A630();
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v50 = v69;
    sub_1000155B0((uint64_t)v12, v69, &qword_1000A1B30);
    uint64_t v51 = v50 + *(int *)(v79 + 36);
    *(unsigned char *)uint64_t v51 = v41;
    *(void *)(v51 + 8) = v43;
    *(void *)(v51 + 16) = v45;
    *(void *)(v51 + 24) = v47;
    *(void *)(v51 + 32) = v49;
    *(unsigned char *)(v51 + 40) = 0;
    sub_100015614((uint64_t)v12, &qword_1000A1B30);
    uint64_t v52 = v70;
    sub_10001547C(v50, v70, &qword_1000A1B38);
    sub_1000155B0(v52, v80, &qword_1000A1B38);
    swift_storeEnumTagMultiPayload();
    sub_100039D04((unint64_t *)&qword_1000A1B50, (void (*)(uint64_t))type metadata accessor for WidgetEmptyText);
    sub_100039A1C();
    sub_10008AAE0();
    sub_100015614(v52, &qword_1000A1B38);
  }
  else
  {
    char v53 = v39 & 1;
    uint64_t v54 = v71;
    sub_100039AC8(v36, (uint64_t)&v71[*(int *)(v81 + 20)], (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
    *uint64_t v54 = v53;
    sub_100039AC8((uint64_t)v54, v80, (uint64_t (*)(void))type metadata accessor for WidgetEmptyText);
    swift_storeEnumTagMultiPayload();
    sub_100039D04((unint64_t *)&qword_1000A1B50, (void (*)(uint64_t))type metadata accessor for WidgetEmptyText);
    sub_100039A1C();
    sub_10008AAE0();
    sub_100039B30((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for WidgetEmptyText);
  }
  uint64_t v55 = v84;
  sub_100039AC8(a1, v84, type metadata accessor for UpNextEntry.Episode);
  uint64_t v56 = v55 + *(int *)(v85 + 20);
  *(void *)uint64_t v56 = swift_getKeyPath();
  *(unsigned char *)(v56 + 8) = 0;
  sub_100039D04(&qword_1000A1B68, (void (*)(uint64_t))type metadata accessor for PlayButtonSmall);
  uint64_t v57 = (uint64_t)v87;
  sub_10008AEF0();
  sub_100039B30(v55, (uint64_t (*)(void))type metadata accessor for PlayButtonSmall);
  uint64_t v58 = v86;
  sub_10001547C(v57, v86, &qword_1000A1B20);
  uint64_t v59 = v38;
  uint64_t v60 = v82;
  sub_100039AC8(v38, v82, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  uint64_t v61 = v89;
  uint64_t v62 = v83;
  sub_1000155B0(v89, v83, &qword_1000A1B40);
  sub_1000155B0(v58, v57, &qword_1000A1B20);
  uint64_t v63 = v88;
  sub_100039AC8(v60, v88, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  uint64_t v64 = (int *)sub_10000903C(&qword_1000A1B70);
  uint64_t v65 = v63 + v64[12];
  *(void *)uint64_t v65 = 0;
  *(unsigned char *)(v65 + 8) = 1;
  *(void *)(v65 + 16) = v77;
  *(unsigned char *)(v65 + 24) = v76;
  *(void *)(v65 + 32) = v75;
  *(unsigned char *)(v65 + 40) = v74;
  uint64_t v66 = v72;
  *(void *)(v65 + 48) = v73;
  *(void *)(v65 + 56) = v66;
  sub_1000155B0(v62, v63 + v64[16], &qword_1000A1B40);
  uint64_t v67 = v63 + v64[20];
  *(void *)uint64_t v67 = 0x4028000000000000;
  *(unsigned char *)(v67 + 8) = 0;
  sub_1000155B0(v57, v63 + v64[24], &qword_1000A1B20);
  sub_100015614(v58, &qword_1000A1B20);
  sub_100015614(v61, &qword_1000A1B40);
  sub_100039B30(v59, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  sub_100015614(v57, &qword_1000A1B20);
  sub_100015614(v62, &qword_1000A1B40);
  return sub_100039B30(v60, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
}

uint64_t sub_100038A0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v3 = sub_10008B160();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  __chkstk_darwin(v3);
  uint64_t v61 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10008AFA0();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v56 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10000903C(&qword_1000A1B78) - 8;
  __chkstk_darwin(v59);
  uint64_t v57 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for EpisodeCaptionView() - 8;
  __chkstk_darwin(v51);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10000903C(&qword_1000A1B80) - 8;
  __chkstk_darwin(v52);
  uint64_t v50 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000903C(&qword_1000A1B88) - 8;
  uint64_t v10 = __chkstk_darwin(v54);
  char v53 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (uint64_t)&v47 - v12;
  uint64_t v13 = sub_10008AC90();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a1;
  uint64_t v17 = *(void *)(a1 + 80);
  uint64_t v65 = *(void *)(a1 + 72);
  uint64_t v66 = v17;
  sub_100031338();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10008ADE0();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_10008ACD0();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Font.Leading.tight(_:), v13);
  sub_10008ACB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v23 = sub_10008AD50();
  uint64_t v48 = v24;
  uint64_t v49 = v23;
  uint64_t v26 = v25;
  LOBYTE(v13) = v27;
  swift_release();
  LOBYTE(v13) = v13 & 1;
  sub_10001546C(v18, v20, v22);
  swift_bridgeObjectRelease();
  sub_100039AC8(v47, (uint64_t)v8, type metadata accessor for UpNextEntry.Episode);
  uint64_t v28 = v51;
  v8[*(int *)(v51 + 28)] = 0;
  v8[*(int *)(v28 + 32)] = 1;
  v8[*(int *)(v28 + 36)] = 1;
  uint64_t v29 = sub_10008ACC0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v50;
  sub_100039AC8((uint64_t)v8, v50, (uint64_t (*)(void))type metadata accessor for EpisodeCaptionView);
  long long v32 = (uint64_t *)(v31 + *(int *)(v52 + 44));
  *long long v32 = KeyPath;
  v32[1] = v29;
  sub_100039B30((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EpisodeCaptionView);
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v56, enum case for Color.RGBColorSpace.sRGB(_:), v60);
  uint64_t v33 = sub_10008AFE0();
  uint64_t v34 = v57;
  sub_1000155B0(v31, v57, &qword_1000A1B80);
  *(void *)(v34 + *(int *)(v59 + 44)) = v33;
  uint64_t v36 = v61;
  uint64_t v35 = v62;
  uint64_t v37 = v63;
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for BlendMode.plusLighter(_:), v63);
  uint64_t v38 = (uint64_t)v53;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v53[*(int *)(v54 + 44)], v36, v37);
  uint64_t v39 = v38;
  sub_1000155B0(v34, v38, &qword_1000A1B78);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  sub_100015614(v34, &qword_1000A1B78);
  sub_100015614(v31, &qword_1000A1B80);
  uint64_t v40 = v55;
  sub_10001547C(v39, v55, &qword_1000A1B88);
  sub_1000155B0(v40, v39, &qword_1000A1B88);
  char v41 = v64;
  uint64_t v42 = v48;
  uint64_t v43 = v49;
  uint64_t *v64 = v49;
  v41[1] = v26;
  *((unsigned char *)v41 + 16) = v13;
  v41[3] = v42;
  uint64_t v44 = v41;
  uint64_t v45 = sub_10000903C(&qword_1000A1B90);
  sub_1000155B0(v39, (uint64_t)v44 + *(int *)(v45 + 48), &qword_1000A1B88);
  sub_100031774(v43, v26, v13);
  swift_bridgeObjectRetain();
  sub_100015614(v40, &qword_1000A1B88);
  sub_100015614(v39, &qword_1000A1B88);
  sub_10001546C(v43, v26, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100039084(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t result = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v5 = *(void *)(a2 + *(int *)(v3 + 84));
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_10000E31C(v5);
    sub_10000903C(&qword_1000A1AE8);
    sub_100015428(&qword_1000A1AF0, &qword_1000A1AE8);
    sub_100031338();
    sub_10000E368();
    sub_10008ADF0();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000391D4()
{
  uint64_t v45 = type metadata accessor for EpisodeRowView();
  uint64_t v48 = *(unsigned __int8 *)(*(void *)(v45 - 8) + 80);
  uint64_t v46 = *(void *)(*(void *)(v45 - 8) + 64);
  uint64_t v47 = (v48 + 16) & ~v48;
  uint64_t v1 = v0 + v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v3 = v0 + v47 + v2[10];
  uint64_t v4 = sub_10008A170();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v44 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = v1 + v2[12];
  uint64_t v8 = sub_10008A340();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    int v10 = *(unsigned __int8 *)(v7 + 32);
    if (v10 != 255) {
      sub_1000096D4(*(void *)(v7 + 16), *(void *)(v7 + 24), v10);
    }
    int v11 = *(unsigned __int8 *)(v7 + 64);
    if (v11 != 255) {
      sub_1000096EC(*(id *)(v7 + 56), v11);
    }
    int v12 = *(unsigned __int8 *)(v7 + 80);
    if (v12 != 255) {
      sub_1000096EC(*(id *)(v7 + 72), v12);
    }
    int v13 = *(unsigned __int8 *)(v7 + 96);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v7 + 88), v13);
    }
    int v14 = *(unsigned __int8 *)(v7 + 112);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v7 + 104), v14);
    }
    int v15 = *(unsigned __int8 *)(v7 + 128);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v7 + 120), v15);
    }
    uint64_t v16 = v7 + *(int *)(v8 + 44);
    uint64_t v17 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v1 + v2[13];
  if (!v9(v18, 1, v8))
  {
    swift_bridgeObjectRelease();
    int v19 = *(unsigned __int8 *)(v18 + 32);
    if (v19 != 255) {
      sub_1000096D4(*(void *)(v18 + 16), *(void *)(v18 + 24), v19);
    }
    int v20 = *(unsigned __int8 *)(v18 + 64);
    if (v20 != 255) {
      sub_1000096EC(*(id *)(v18 + 56), v20);
    }
    int v21 = *(unsigned __int8 *)(v18 + 80);
    if (v21 != 255) {
      sub_1000096EC(*(id *)(v18 + 72), v21);
    }
    int v22 = *(unsigned __int8 *)(v18 + 96);
    if (v22 != 255) {
      sub_1000096EC(*(id *)(v18 + 88), v22);
    }
    int v23 = *(unsigned __int8 *)(v18 + 112);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v18 + 104), v23);
    }
    int v24 = *(unsigned __int8 *)(v18 + 128);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v18 + 120), v24);
    }
    uint64_t v25 = v18 + *(int *)(v8 + 44);
    uint64_t v26 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v27 = v1 + v2[15];
  uint64_t v28 = sub_10008A050();
  uint64_t v29 = *(void *)(v28 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  uint64_t v30 = v1 + v2[19];
  if (!v6(v30, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v30, v4);
  }
  uint64_t v31 = v1 + v2[20];
  if (!v6(v31, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v31, v4);
  }
  if (*(void *)(v1 + v2[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v32 = v1 + v2[22];
  uint64_t v33 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33))
  {
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v34(v32, v4);
    v34(v32 + *(int *)(v33 + 36), v4);
  }
  uint64_t v35 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v36 = v32 + *(int *)(v35 + 20);
  uint64_t v37 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
  uint64_t v38 = v32 + *(int *)(v35 + 24);
  uint64_t v39 = sub_10008A4B0();
  uint64_t v40 = *(void *)(v39 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39)) {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = v1 + *(int *)(v45 + 28);
  type metadata accessor for EpisodeViewStyle();
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    uint64_t v42 = sub_10008B220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  }

  return _swift_deallocObject(v0, v47 + v46, v48 | 7);
}

uint64_t sub_10003989C()
{
  uint64_t v1 = *(void *)(type metadata accessor for EpisodeRowView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100037DF8(v2);
}

uint64_t sub_10003990C(uint64_t a1)
{
  return sub_100039084(a1, *(void *)(v1 + 16));
}

unint64_t sub_100039914()
{
  unint64_t result = qword_1000A1B10;
  if (!qword_1000A1B10)
  {
    sub_10000E49C(&qword_1000A1B00);
    sub_100015428(&qword_1000A1B18, &qword_1000A1AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1B10);
  }
  return result;
}

uint64_t sub_1000399B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100039A1C()
{
  unint64_t result = qword_1000A1B58;
  if (!qword_1000A1B58)
  {
    sub_10000E49C(&qword_1000A1B38);
    sub_100015428(&qword_1000A1B60, &qword_1000A1B30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1B58);
  }
  return result;
}

uint64_t sub_100039AC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100039B30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100039B94()
{
  unint64_t result = qword_1000A1B98;
  if (!qword_1000A1B98)
  {
    sub_10000E49C(&qword_1000A1BA0);
    sub_100039C34();
    sub_100015428(&qword_1000A1AF0, &qword_1000A1AE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1B98);
  }
  return result;
}

unint64_t sub_100039C34()
{
  unint64_t result = qword_1000A1BA8;
  if (!qword_1000A1BA8)
  {
    sub_10000E49C(&qword_1000A1BB0);
    sub_100015428(&qword_1000A1AF0, &qword_1000A1AE8);
    sub_100039D04((unint64_t *)&qword_1000A1238, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1BA8);
  }
  return result;
}

uint64_t sub_100039D04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100039D4C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10000903C(&qword_1000A1050);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000903C(&qword_1000A1058);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_10008A170();
      int v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      v12((uint64_t *)((char *)a1 + *(int *)(v7 + 36)), (uint64_t *)((char *)a2 + *(int *)(v7 + 36)), v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v13 = a3[5];
    int v14 = (char *)a1 + v13;
    int v15 = (char *)a2 + v13;
    uint64_t v16 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[6];
    uint64_t v18 = (char *)a1 + v17;
    int v19 = (char *)a2 + v17;
    uint64_t v20 = sub_10008A4B0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_10000903C(&qword_1000A1060);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = a3[7];
    uint64_t v24 = a3[8];
    uint64_t v25 = (uint64_t *)((char *)a1 + v23);
    uint64_t v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = (uint64_t *)((char *)a1 + v24);
    uint64_t v29 = (uint64_t *)((char *)a2 + v24);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10003A050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    uint64_t v5 = sub_10008A170();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v6(a1, v5);
    v6(a1 + *(int *)(v4 + 36), v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  uint64_t v10 = sub_10008A4B0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_10003A208(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10000903C(&qword_1000A1050);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000903C(&qword_1000A1058);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_10008A170();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    v10(a1, a2, v9);
    v10(&a1[*(int *)(v6 + 36)], &a2[*(int *)(v6 + 36)], v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v11 = a3[5];
  int v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_10008A4B0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1060);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v21];
  uint64_t v24 = &a2[v21];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  uint64_t v26 = &a1[v22];
  uint64_t v27 = &a2[v22];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_10003A4BC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10000903C(&qword_1000A1050);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = sub_10008A170();
      int v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      v12(&a1[*(int *)(v6 + 36)], &a2[*(int *)(v6 + 36)], v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_100015614((uint64_t)a1, &qword_1000A1050);
LABEL_6:
    uint64_t v13 = sub_10000903C(&qword_1000A1058);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v34 = sub_10008A170();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24);
  v35(a1, a2, v34);
  v35(&a1[*(int *)(v6 + 36)], &a2[*(int *)(v6 + 36)], v34);
LABEL_7:
  uint64_t v14 = a3[5];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_10008A4B0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_10000903C(&qword_1000A1060);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  uint64_t v27 = a3[7];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_10003A890(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10000903C(&qword_1000A1050);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000903C(&qword_1000A1058);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_10008A170();
    int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    v10(a1, a2, v9);
    v10(&a1[*(int *)(v6 + 36)], &a2[*(int *)(v6 + 36)], v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v11 = a3[5];
  int v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_10008A4B0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1060);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  return a1;
}

char *sub_10003AB28(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10000903C(&qword_1000A1050);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = sub_10008A170();
      int v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
      v12(a1, a2, v11);
      v12(&a1[*(int *)(v6 + 36)], &a2[*(int *)(v6 + 36)], v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_100015614((uint64_t)a1, &qword_1000A1050);
LABEL_6:
    uint64_t v13 = sub_10000903C(&qword_1000A1058);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v38 = sub_10008A170();
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40);
  v39(a1, a2, v38);
  v39(&a1[*(int *)(v6 + 36)], &a2[*(int *)(v6 + 36)], v38);
LABEL_7:
  uint64_t v14 = a3[5];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_10008A4B0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_10000903C(&qword_1000A1060);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  uint64_t v27 = a3[7];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v31 = *(void *)v29;
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v36 = *(void *)v34;
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = v36;
  *((void *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10003AEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003AEF0);
}

uint64_t sub_10003AEF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10000903C(&qword_1000A1058);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10008A740();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_10000903C(&qword_1000A1060);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[8] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_10003B05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003B070);
}

uint64_t sub_10003B070(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10000903C(&qword_1000A1058);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_10008A740();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_10000903C(&qword_1000A1060);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[8] + 8) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for WidgetPredictedPlayState()
{
  uint64_t result = qword_1000A1C10;
  if (!qword_1000A1C10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003B224()
{
  sub_10003B33C();
  if (v0 <= 0x3F)
  {
    sub_10008A740();
    if (v1 <= 0x3F)
    {
      sub_10003B398();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10003B33C()
{
  if (!qword_1000A1C20)
  {
    sub_10000E49C(&qword_1000A1050);
    unint64_t v0 = sub_10008B530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A1C20);
    }
  }
}

void sub_10003B398()
{
  if (!qword_1000A1C28)
  {
    sub_10008A4B0();
    unint64_t v0 = sub_10008B530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A1C28);
    }
  }
}

void sub_10003B3F0(char a1@<W0>, double a2@<X1>, char a3@<W2>, double a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, void (*a7)(char *, uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v149 = a8;
  int v150 = a7;
  uint64_t v153 = a6;
  LODWORD(v152) = a5;
  double v151 = a4;
  uint64_t v162 = a9;
  uint64_t v12 = sub_10000903C(&qword_1000A1060);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  long long v147 = (char *)&v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v146 = (char *)&v142 - v15;
  uint64_t v16 = sub_10008A740();
  uint64_t v160 = *(void *)(v16 - 8);
  uint64_t v161 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v148 = (char *)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v145 = (char *)&v142 - v19;
  uint64_t v158 = sub_10000903C(&qword_1000A1C68);
  uint64_t v20 = __chkstk_darwin(v158);
  id v155 = (char *)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int v157 = (char *)&v142 - v22;
  uint64_t v159 = sub_10000903C(&qword_1000A1050);
  uint64_t v23 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v156 = (char *)&v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10000903C(&qword_1000A1058);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  int v154 = (void (*)(char *, uint64_t))((char *)&v142 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v142 - v28;
  uint64_t v30 = sub_10000903C(&qword_1000A1038);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v33 = (char *)&v142 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v142 - v34;
  uint64_t v36 = sub_10008A170();
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v142 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v42 = (char *)&v142 - v41;
  uint64_t v43 = __chkstk_darwin(v40);
  __chkstk_darwin(v43);
  if ((a3 & 1) != 0 || a2 <= 0.0) {
    goto LABEL_16;
  }
  double v144 = a2;
  if ((a1 & 1) == 0)
  {
    uint64_t v49 = v45;
    if ((v152 & 1) != 0 || v151 >= a2)
    {
      uint64_t v153 = v23;
      sub_10008A150();
      sub_10008A140();
      sub_10003CF14((unint64_t *)&qword_1000A13A0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (sub_10008B300())
      {
        uint64_t v66 = v157;
        uint64_t v67 = v158;
        uint64_t v68 = &v157[*(int *)(v158 + 48)];
        uint64_t v69 = (void (*)(char *, char *, uint64_t))v49[4];
        v69(v157, v42, v36);
        uint64_t v152 = (void (*)(void))v68;
        v69(v68, v39, v36);
        uint64_t v70 = *(int *)(v67 + 48);
        int v71 = v155;
        uint64_t v72 = &v155[v70];
        uint64_t v73 = (void (*)(char *, char *, uint64_t))v49[2];
        v73(v155, v66, v36);
        v73(v72, v68, v36);
        uint64_t v74 = (uint64_t)v156;
        v69(v156, v71, v36);
        uint64_t v75 = (void (*)(char *, uint64_t))v49[1];
        v75(v72, v36);
        int v76 = &v71[*(int *)(v158 + 48)];
        v69(v71, v66, v36);
        v69(v76, (char *)v152, v36);
        uint64_t v77 = v159;
        v69((char *)(v74 + *(int *)(v159 + 36)), v76, v36);
        v75(v71, v36);
        uint64_t v61 = v154;
        sub_10001547C(v74, (uint64_t)v154, &qword_1000A1050);
        (*(void (**)(void (*)(char *, uint64_t), void, uint64_t, uint64_t))(v153 + 56))(v61, 0, 1, v77);
        uint64_t v62 = (int *)type metadata accessor for WidgetPredictedPlayState();
        uint64_t v63 = v162;
        (*(void (**)(uint64_t, void, uint64_t))(v160 + 104))(v162 + v62[5], enum case for PlaybackButton.State.unplayed(_:), v161);
        sub_10008A490();
        id v65 = [self mainBundle];
        goto LABEL_12;
      }
      __break(1u);
    }
    else
    {
      sub_10008A150();
      sub_10008A140();
      sub_10003CF14((unint64_t *)&qword_1000A13A0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (sub_10008B300())
      {
        uint64_t v50 = v158;
        uint64_t v51 = (uint64_t)&v157[*(int *)(v158 + 48)];
        uint64_t v52 = (void (*)(void))v49[4];
        v52();
        uint64_t v153 = v51;
        ((void (*)(uint64_t, char *, uint64_t))v52)(v51, v39, v36);
        uint64_t v53 = *(int *)(v50 + 48);
        uint64_t v54 = v155;
        uint64_t v55 = &v155[v53];
        uint64_t v56 = (void (*)(char *, char *, uint64_t))v49[2];
        v56(v155, v157, v36);
        v56(v55, (char *)v51, v36);
        uint64_t v57 = (uint64_t)v156;
        ((void (*)(char *, char *, uint64_t))v52)(v156, v54, v36);
        uint64_t v58 = (void (*)(char *, uint64_t))v49[1];
        v58(v55, v36);
        uint64_t v59 = &v54[*(int *)(v158 + 48)];
        ((void (*)(char *, char *, uint64_t))v52)(v54, v157, v36);
        ((void (*)(char *, uint64_t, uint64_t))v52)(v59, v153, v36);
        uint64_t v60 = v159;
        ((void (*)(uint64_t, char *, uint64_t))v52)(v57 + *(int *)(v159 + 36), v59, v36);
        v58(v54, v36);
        uint64_t v61 = v154;
        sub_10001547C(v57, (uint64_t)v154, &qword_1000A1050);
        (*(void (**)(void (*)(char *, uint64_t), void, uint64_t, uint64_t))(v23 + 56))(v61, 0, 1, v60);
        uint64_t v62 = (int *)type metadata accessor for WidgetPredictedPlayState();
        uint64_t v63 = v162;
        uint64_t v64 = v162 + v62[5];
        sub_10008A140();
        (*(void (**)(uint64_t, void, uint64_t))(v160 + 104))(v64, enum case for PlaybackButton.State.paused(_:), v161);
        sub_10008A490();
        id v65 = [self mainBundle];
LABEL_12:
        uint64_t v78 = (objc_class *)v65;
        v141._countAndFlagsBits = 0xE000000000000000;
        v163._object = (void *)0x8000000100090210;
        v163._countAndFlagsBits = 0xD000000000000013;
        v167.value._countAndFlagsBits = 0;
        v167.value._object = 0;
        v79.super.isa = v78;
        v171._countAndFlagsBits = 0;
        v171._object = (void *)0xE000000000000000;
        uint64_t v80 = sub_10008A010(v163, v167, v79, v171, v141);
        uint64_t v82 = v81;

        sub_10001547C((uint64_t)v61, v63, &qword_1000A1058);
LABEL_17:
        uint64_t v90 = (void *)(v63 + v62[7]);
        *uint64_t v90 = 0;
        v90[1] = 0;
        unsigned __int8 v91 = (uint64_t *)(v63 + v62[8]);
        *unsigned __int8 v91 = v80;
LABEL_18:
        v91[1] = v82;
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int v142 = v46;
  uint64_t v143 = (char *)&v142 - v44;
  uint64_t v47 = (uint64_t)v45;
  sub_1000155B0(v153, (uint64_t)v35, &qword_1000A1038);
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  if (v48(v35, 1, v36) == 1)
  {
    uint64_t v33 = v35;
LABEL_15:
    sub_100015614((uint64_t)v33, &qword_1000A1038);
LABEL_16:
    uint64_t v63 = v162;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v162, 1, 1, v159);
    uint64_t v62 = (int *)type metadata accessor for WidgetPredictedPlayState();
    (*(void (**)(uint64_t, void, uint64_t))(v160 + 104))(v63 + v62[5], enum case for PlaybackButton.State.unplayed(_:), v161);
    uint64_t v85 = v63 + v62[6];
    uint64_t v86 = sub_10008A4B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 1, 1, v86);
    uint64_t v87 = (objc_class *)[self mainBundle];
    v141._countAndFlagsBits = 0xE000000000000000;
    v164._object = (void *)0x8000000100090210;
    v164._countAndFlagsBits = 0xD000000000000013;
    v168.value._countAndFlagsBits = 0;
    v168.value._object = 0;
    v88.super.isa = v87;
    v172._countAndFlagsBits = 0;
    v172._object = (void *)0xE000000000000000;
    uint64_t v80 = sub_10008A010(v164, v168, v88, v172, v141);
    uint64_t v82 = v89;

    goto LABEL_17;
  }
  uint64_t v83 = v35;
  *(void *)&double v84 = v47 + 32;
  uint64_t v152 = *(void (**)(void))(v47 + 32);
  ((void (*)(char *, char *, uint64_t))v152)(v143, v83, v36);
  sub_1000155B0((uint64_t)v150, (uint64_t)v33, &qword_1000A1038);
  if (v48(v33, 1, v36) == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v143, v36);
    goto LABEL_15;
  }
  uint64_t v153 = v47;
  uint64_t v92 = v142;
  unsigned __int8 v93 = v152;
  ((void (*)(char *, char *, uint64_t))v152)(v142, v33, v36);
  sub_10003CF14((unint64_t *)&qword_1000A13A0, (void (*)(uint64_t))&type metadata accessor for Date);
  if (sub_10008B2F0())
  {
    double v151 = v84;
    uint64_t v94 = v143;
    if (sub_10008B300())
    {
      uint64_t v95 = v157;
      uint64_t v96 = v158;
      uint64_t v97 = &v157[*(int *)(v158 + 48)];
      uint64_t v98 = v153;
      uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
      v99(v157, v94, v36);
      int v146 = v97;
      v99(v97, v92, v36);
      uint64_t v100 = v155;
      uint64_t v101 = &v155[*(int *)(v96 + 48)];
      v99(v155, v95, v36);
      v99(v101, v97, v36);
      uint64_t v102 = (uint64_t)v156;
      int v103 = v152;
      ((void (*)(char *, char *, uint64_t))v152)(v156, v100, v36);
      uint64_t v104 = v98 + 8;
      uint64_t v105 = *(void (**)(char *, uint64_t))(v98 + 8);
      uint64_t v153 = v104;
      v105(v101, v36);
      int v150 = v105;
      uint64_t v106 = &v100[*(int *)(v158 + 48)];
      ((void (*)(char *, char *, uint64_t))v103)(v100, v95, v36);
      ((void (*)(char *, char *, uint64_t))v103)(v106, v146, v36);
      uint64_t v107 = v159;
      ((void (*)(uint64_t, char *, uint64_t))v103)(v102 + *(int *)(v159 + 36), v106, v36);
      v105(v100, v36);
      id v108 = v154;
      sub_10001547C(v102, (uint64_t)v154, &qword_1000A1050);
      (*(void (**)(void (*)(char *, uint64_t), void, uint64_t, uint64_t))(v23 + 56))(v108, 0, 1, v107);
      uint64_t v110 = v160;
      uint64_t v109 = v161;
      (*(void (**)(char *, void, uint64_t))(v160 + 104))(v148, enum case for PlaybackButton.State.playing(_:), v161);
      uint64_t v111 = v142;
      sub_10008A0A0();
      uint64_t v112 = (uint64_t)v147;
      sub_10008A490();
      uint64_t v113 = (objc_class *)[self mainBundle];
      v165._countAndFlagsBits = 0xD000000000000014;
      v141._countAndFlagsBits = 0xE000000000000000;
      v165._object = (void *)0x8000000100090250;
      v169.value._countAndFlagsBits = 0;
      v169.value._object = 0;
      v114.super.isa = v113;
      v173._countAndFlagsBits = 0;
      v173._object = (void *)0xE000000000000000;
      uint64_t v115 = sub_10008A010(v165, v169, v114, v173, v141);
      uint64_t v82 = v116;

      uint64_t v117 = v111;
      uint64_t v118 = v150;
      v150(v117, v36);
      v118(v143, v36);
      uint64_t v119 = v162;
      sub_10001547C((uint64_t)v108, v162, &qword_1000A1058);
      uint64_t v120 = (int *)type metadata accessor for WidgetPredictedPlayState();
      (*(void (**)(uint64_t, char *, uint64_t))(v110 + 32))(v119 + v120[5], v148, v109);
      sub_10001547C(v112, v119 + v120[6], &qword_1000A1060);
      uint64_t v121 = (void *)(v119 + v120[7]);
      void *v121 = 0;
      v121[1] = 0;
      unsigned __int8 v91 = (uint64_t *)(v119 + v120[8]);
      *unsigned __int8 v91 = v115;
      goto LABEL_18;
    }
    goto LABEL_26;
  }
  sub_10008A150();
  sub_10008A140();
  if (sub_10008B300())
  {
    uint64_t v122 = v158;
    uint64_t v123 = &v157[*(int *)(v158 + 48)];
    v93();
    double v151 = *(double *)&v123;
    ((void (*)(char *, char *, uint64_t))v93)(v123, v39, v36);
    uint64_t v124 = v155;
    int v125 = &v155[*(int *)(v122 + 48)];
    int v126 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
    v126(v155, v157, v36);
    v126(v125, v123, v36);
    ((void (*)(char *, char *, uint64_t))v93)(v156, v124, v36);
    uint64_t v127 = *(void (**)(char *, uint64_t))(v153 + 8);
    v153 += 8;
    v127(v125, v36);
    int v154 = v127;
    uint64_t v128 = &v124[*(int *)(v158 + 48)];
    ((void (*)(char *, char *, uint64_t))v93)(v124, v157, v36);
    ((void (*)(char *, void, uint64_t))v93)(v128, *(void *)&v151, v36);
    uint64_t v129 = v159;
    uint64_t v130 = (uint64_t)v156;
    ((void (*)(char *, char *, uint64_t))v93)(&v156[*(int *)(v159 + 36)], v128, v36);
    v127(v124, v36);
    sub_10001547C(v130, (uint64_t)v29, &qword_1000A1050);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v129);
    uint64_t v132 = v160;
    uint64_t v131 = v161;
    uint64_t v133 = v145;
    (*(void (**)(char *, void, uint64_t))(v160 + 104))(v145, enum case for PlaybackButton.State.unplayed(_:), v161);
    uint64_t v134 = (uint64_t)v146;
    sub_10008A490();
    int v135 = (objc_class *)[self mainBundle];
    v166._countAndFlagsBits = 0xD000000000000015;
    v141._countAndFlagsBits = 0xE000000000000000;
    v166._object = (void *)0x8000000100090230;
    v170.value._countAndFlagsBits = 0;
    v170.value._object = 0;
    v136.super.isa = v135;
    v174._countAndFlagsBits = 0;
    v174._object = (void *)0xE000000000000000;
    uint64_t v159 = sub_10008A010(v166, v170, v136, v174, v141);
    uint64_t v82 = v137;

    int v138 = v154;
    v154(v142, v36);
    v138(v143, v36);
    uint64_t v139 = v162;
    sub_10001547C((uint64_t)v29, v162, &qword_1000A1058);
    uint64_t v140 = (int *)type metadata accessor for WidgetPredictedPlayState();
    (*(void (**)(uint64_t, char *, uint64_t))(v132 + 32))(v139 + v140[5], v133, v131);
    sub_10001547C(v134, v139 + v140[6], &qword_1000A1060);
    *(_OWORD *)(v139 + v140[7]) = xmmword_10008DD50;
    unsigned __int8 v91 = (uint64_t *)(v139 + v140[8]);
    *unsigned __int8 v91 = v159;
    goto LABEL_18;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_10003C614(uint64_t a1, uint64_t a2)
{
  uint64_t v83 = a1;
  uint64_t v84 = a2;
  uint64_t v79 = sub_10008A4B0();
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v74 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10000903C(&qword_1000A1C70);
  __chkstk_darwin(v76);
  uint64_t v78 = (uint64_t)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000903C(&qword_1000A1060);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v75 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v80 = (uint64_t)&v71 - v8;
  __chkstk_darwin(v7);
  uint64_t v81 = (uint64_t)&v71 - v9;
  uint64_t v10 = sub_10000903C(&qword_1000A1050);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v71 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v71 - v18;
  uint64_t v20 = sub_10000903C(&qword_1000A1C78);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000903C(&qword_1000A1058);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v82 = (uint64_t)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v71 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v71 - v30;
  sub_1000155B0(v83, (uint64_t)&v71 - v30, &qword_1000A1058);
  sub_1000155B0(v84, (uint64_t)v29, &qword_1000A1058);
  uint64_t v32 = (uint64_t)&v23[*(int *)(v21 + 56)];
  sub_1000155B0((uint64_t)v31, (uint64_t)v23, &qword_1000A1058);
  sub_1000155B0((uint64_t)v29, v32, &qword_1000A1058);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v33((uint64_t)v23, 1, v10) == 1)
  {
    sub_100015614((uint64_t)v29, &qword_1000A1058);
    sub_100015614((uint64_t)v31, &qword_1000A1058);
    if (v33(v32, 1, v10) == 1)
    {
      sub_100015614((uint64_t)v23, &qword_1000A1058);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  uint64_t v72 = v14;
  uint64_t v73 = v17;
  uint64_t v34 = v82;
  sub_1000155B0((uint64_t)v23, v82, &qword_1000A1058);
  if (v33(v32, 1, v10) == 1)
  {
    sub_100015614((uint64_t)v29, &qword_1000A1058);
    sub_100015614((uint64_t)v31, &qword_1000A1058);
    sub_100015614(v34, &qword_1000A1050);
LABEL_6:
    uint64_t v35 = &qword_1000A1C78;
    uint64_t v36 = (uint64_t)v23;
LABEL_17:
    sub_100015614(v36, v35);
    goto LABEL_18;
  }
  uint64_t v37 = (uint64_t)v19;
  sub_10001547C(v32, (uint64_t)v19, &qword_1000A1050);
  sub_10008A170();
  uint64_t v71 = sub_10003CF14(&qword_1000A14D0, (void (*)(uint64_t))&type metadata accessor for Date);
  char v38 = sub_10008B310();
  uint64_t v39 = (uint64_t)v73;
  sub_1000155B0(v34, (uint64_t)v73, &qword_1000A1050);
  uint64_t v40 = (uint64_t)v72;
  sub_1000155B0(v37, (uint64_t)v72, &qword_1000A1050);
  if ((v38 & 1) == 0)
  {
    sub_100015614(v40, &qword_1000A1050);
    sub_100015614(v39, &qword_1000A1050);
    sub_100015614(v37, &qword_1000A1050);
    sub_100015614((uint64_t)v29, &qword_1000A1058);
    sub_100015614((uint64_t)v31, &qword_1000A1058);
    sub_100015614(v34, &qword_1000A1050);
    uint64_t v36 = (uint64_t)v23;
    uint64_t v35 = &qword_1000A1058;
    goto LABEL_17;
  }
  char v41 = sub_10008B310();
  sub_100015614(v40, &qword_1000A1050);
  sub_100015614(v39, &qword_1000A1050);
  sub_100015614(v37, &qword_1000A1050);
  sub_100015614((uint64_t)v29, &qword_1000A1058);
  sub_100015614((uint64_t)v31, &qword_1000A1058);
  sub_100015614(v34, &qword_1000A1050);
  sub_100015614((uint64_t)v23, &qword_1000A1058);
  if ((v41 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_9:
  uint64_t v42 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v44 = v83;
  uint64_t v43 = v84;
  if ((sub_10008A730() & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v45 = v81;
  sub_1000155B0(v44 + v42[6], v81, &qword_1000A1060);
  uint64_t v46 = v80;
  sub_1000155B0(v43 + v42[6], v80, &qword_1000A1060);
  uint64_t v47 = v78;
  uint64_t v48 = v78 + *(int *)(v76 + 48);
  sub_1000155B0(v45, v78, &qword_1000A1060);
  sub_1000155B0(v46, v48, &qword_1000A1060);
  uint64_t v49 = v77;
  uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
  uint64_t v51 = v79;
  if (v50(v47, 1, v79) == 1)
  {
    sub_100015614(v46, &qword_1000A1060);
    sub_100015614(v45, &qword_1000A1060);
    if (v50(v48, 1, v51) == 1)
    {
      sub_100015614(v47, &qword_1000A1060);
      goto LABEL_21;
    }
    goto LABEL_16;
  }
  uint64_t v52 = v75;
  sub_1000155B0(v47, v75, &qword_1000A1060);
  if (v50(v48, 1, v51) == 1)
  {
    sub_100015614(v80, &qword_1000A1060);
    sub_100015614(v81, &qword_1000A1060);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v52, v51);
LABEL_16:
    uint64_t v35 = &qword_1000A1C70;
    uint64_t v36 = v47;
    goto LABEL_17;
  }
  uint64_t v55 = v52;
  uint64_t v56 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v74, v48, v51);
  sub_10003CF14(&qword_1000A1C80, (void (*)(uint64_t))&type metadata accessor for PlayButtonTimeFormatHelper);
  char v57 = sub_10008B310();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v49 + 8);
  v58(v56, v51);
  sub_100015614(v80, &qword_1000A1060);
  sub_100015614(v81, &qword_1000A1060);
  v58((char *)v55, v51);
  sub_100015614(v47, &qword_1000A1060);
  if ((v57 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_21:
  uint64_t v59 = v42[7];
  uint64_t v61 = v83;
  uint64_t v60 = v84;
  uint64_t v62 = (void *)(v83 + v59);
  uint64_t v63 = *(void *)(v83 + v59 + 8);
  uint64_t v64 = (void *)(v84 + v59);
  uint64_t v65 = v64[1];
  if (!v63)
  {
    if (!v65)
    {
LABEL_28:
      uint64_t v67 = v42[8];
      uint64_t v68 = *(void *)(v61 + v67);
      uint64_t v69 = *(void *)(v61 + v67 + 8);
      uint64_t v70 = (void *)(v60 + v67);
      if (v68 == *v70 && v69 == v70[1]) {
        char v53 = 1;
      }
      else {
        char v53 = sub_10008B690();
      }
      return v53 & 1;
    }
LABEL_18:
    char v53 = 0;
    return v53 & 1;
  }
  if (!v65) {
    goto LABEL_18;
  }
  if (*v62 == *v64 && v63 == v65) {
    goto LABEL_28;
  }
  char v66 = sub_10008B690();
  char v53 = 0;
  if (v66) {
    goto LABEL_28;
  }
  return v53 & 1;
}

uint64_t sub_10003CF14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10003CF5C(uint64_t a1)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = type metadata accessor for UpNextEntry.Episode(0);
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = *(void **)(v5 + *(int *)(v4 + 56));
      if (v7)
      {
        id v8 = v7;
        sub_10008B3F0();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10008B430();
        }
        sub_10008B450();
        sub_10008B420();
      }
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10003D0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = _swiftEmptyArrayStorage;
  id v6 = [self sharedInstance];
  id v7 = [v6 mainOrPrivateContext];

  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  int64_t v8[3] = v7;
  v8[4] = &v15;
  v8[5] = a2;
  v8[6] = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1000445E0;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_100044600;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003D6E0;
  aBlock[3] = &unk_10009ED00;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v7;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v10];

  _Block_release(v10);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = v15;
    swift_release();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_10003D264(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void), uint64_t a5)
{
  sub_10008B360();
  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = sub_10008B350();
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithEntityName:v7];

  uint64_t v9 = self;
  id v10 = [v9 predicateForListenNow];
  [v8 setPredicate:v10];

  Class isa = (Class)[v9 sortDescriptorsForListenNow];
  if (!isa)
  {
    sub_100044640(0, &qword_1000A1D90);
    sub_10008B410();
    Class isa = sub_10008B400().super.isa;
    swift_bridgeObjectRelease();
  }
  [v8 setSortDescriptors:isa];

  [v8 setFetchLimit:a1];
  sub_100044640(0, &qword_1000A1D98);
  unint64_t v12 = sub_10008B4F0();
  unint64_t v13 = v12;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10008B5C0();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_5;
    }
  }
  else if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  sub_10008B360();
  id v17 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v18 = sub_10008B350();
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithEntityName:v18];

  id v20 = [v9 predicateForListenNowLatestEpisodes];
  [v19 setPredicate:v20];

  Class v21 = (Class)[v9 sortDescriptorsForListenNowLatestEpisodes];
  if (!v21)
  {
    sub_100044640(0, &qword_1000A1D90);
    sub_10008B410();
    Class v21 = sub_10008B400().super.isa;
    swift_bridgeObjectRelease();
  }
  [v19 setSortDescriptors:v21];

  [v19 setFetchLimit:a1];
  unint64_t v13 = sub_10008B4F0();

LABEL_5:
  uint64_t v14 = sub_100041C20(v13, a4, a5);
  swift_bridgeObjectRelease();

  *a3 = v14;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003D6E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_10003D708@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10008B220();
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WidgetNowPlayingInfo();
  __chkstk_darwin(v9 - 8);
  id v11 = (uint64_t *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100044850(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  id v12 = a1;
  sub_10008B2A0();
  return sub_10003D814(v12, v11, (uint64_t)v8, a3);
}

uint64_t sub_10003D814@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v210 = a3;
  uint64_t v198 = a4;
  uint64_t v6 = sub_10000903C(&qword_1000A1040);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v209 = (uint64_t)&v174 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v208 = (uint64_t)&v174 - v9;
  uint64_t v10 = sub_10008A170();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v206 = (char *)&v174 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_100089FE0();
  uint64_t v176 = *(void *)(v175 - 8);
  __chkstk_darwin(v175);
  uint64_t v188 = (uint64_t)&v174 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000903C(&qword_1000A1048);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  id v17 = (char *)&v174 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v207 = (uint64_t)&v174 - v18;
  uint64_t v19 = sub_10008B220();
  uint64_t v211 = *(void *)(v19 - 8);
  uint64_t v212 = v19;
  __chkstk_darwin(v19);
  uint64_t v181 = (uint64_t)&v174 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000903C(&qword_1000A1DB0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v174 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  uint64_t v24 = __chkstk_darwin(v182);
  uint64_t v26 = (char *)&v174 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v205 = (uint64_t *)((char *)&v174 - v27);
  uint64_t v28 = sub_10000903C(&qword_1000A1DB8);
  __chkstk_darwin(v28 - 8);
  uint64_t v189 = (char *)&v174 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_10008A390();
  uint64_t v179 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  uint64_t v187 = (char *)&v174 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_10008A380();
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v186 = (char *)&v174 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10008A420();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v214 = v32;
  uint64_t v215 = v33;
  uint64_t v34 = *(void *)(v33 + 64);
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v201 = (uint64_t *)((char *)&v174 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v190 = (char *)&v174 - v37;
  __chkstk_darwin(v36);
  uint64_t v204 = (char *)&v174 - v38;
  uint64_t v39 = sub_10000903C(&qword_1000A1038);
  uint64_t v40 = __chkstk_darwin(v39 - 8);
  uint64_t v195 = (void (*)(char *, uint64_t))((char *)&v174 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v194 = (uint64_t)&v174 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v203 = (uint64_t)&v174 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v48 = (char *)&v174 - v47;
  __chkstk_darwin(v46);
  unsigned __int8 v219 = 0;
  uint64_t v191 = v11;
  uint64_t v49 = *(void (**)(void))(v11 + 56);
  uint64_t v213 = (uint64_t)&v174 - v50;
  v49();
  uint64_t v199 = v48;
  uint64_t v193 = v11 + 56;
  uint64_t v192 = (char *)v49;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v49)(v48, 1, 1, v10);
  unint64_t v51 = (unint64_t)[a1 playState];
  [a1 duration];
  if (v51 >= 3)
  {
    type metadata accessor for MTEpisodePlayState(0);
    id v216 = (id)v51;
    uint64_t result = sub_10008B6B0();
    __break(1u);
    return result;
  }
  double v53 = v52;
  uint64_t v196 = v10;
  uint64_t v197 = v17;
  [a1 *(SEL *)off_10009EDC8[v51]];
  uint64_t v55 = v54;
  uint64_t v56 = *a2;
  uint64_t v57 = a2[1];
  uint64_t v200 = a2;
  swift_bridgeObjectRetain();
  id v58 = [a1 uuid];
  uint64_t v184 = v26;
  uint64_t v183 = v23;
  if (!v58)
  {
    if (!v57) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  uint64_t v59 = v58;
  uint64_t v60 = sub_10008B360();
  uint64_t v62 = v61;

  if (!v57)
  {
    if (!v62) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  if (!v62)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v56 == v60 && v57 == v62)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v64 = sub_10008B690();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v64 & 1) == 0)
  {
LABEL_12:
    int v63 = 0;
LABEL_15:
    uint64_t v70 = v214;
    goto LABEL_16;
  }
LABEL_14:
  uint64_t v65 = (uint64_t)v199;
  sub_100015614((uint64_t)v199, &qword_1000A1038);
  uint64_t v66 = v213;
  sub_100015614(v213, &qword_1000A1038);
  uint64_t v67 = (uint64_t)v200;
  int v63 = *((unsigned __int8 *)v200 + 16);
  unsigned __int8 v219 = *((unsigned char *)v200 + 16);
  uint64_t v68 = (int *)type metadata accessor for WidgetNowPlayingInfo();
  sub_1000155B0(v67 + v68[6], v66, &qword_1000A1038);
  sub_1000155B0(v67 + v68[7], v65, &qword_1000A1038);
  uint64_t v69 = v67 + v68[9];
  if (*(unsigned char *)(v69 + 8)) {
    goto LABEL_15;
  }
  uint64_t v100 = v67 + v68[8];
  uint64_t v70 = v214;
  if ((*(unsigned char *)(v100 + 8) & 1) == 0)
  {
    uint64_t v55 = *(void (**)(char *, uint64_t))v100;
    double v53 = *(double *)v69;
  }
LABEL_16:
  uint64_t v217 = sub_100044640(0, &qword_1000A1D98);
  id v218 = (void *)sub_10004467C(&qword_1000A1DC0, &qword_1000A1D98);
  id v216 = a1;
  id v202 = a1;
  uint64_t v71 = v204;
  sub_10008A410();
  uint64_t v72 = v215;
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v215 + 16);
  uint64_t v74 = v190;
  v73(v190, v71, v70);
  v73((char *)v201, v74, v70);
  unint64_t v75 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  uint64_t v76 = v75 + v34;
  uint64_t v77 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v77 + v75, v74, v70);
  uint64_t v190 = (char *)v77;
  LODWORD(v185) = v63;
  *(unsigned char *)(v77 + v76) = v63;
  uint64_t v217 = v70;
  id v218 = &protocol witness table for EyebrowBuilderSourceCopy;
  uint64_t v78 = sub_1000439B8((uint64_t *)&v216);
  uint64_t v79 = v71;
  id v80 = v202;
  v73((char *)v78, v79, v70);
  swift_beginAccess();
  uint64_t v81 = v186;
  char *v186 = v219;
  (*(void (**)(char *, void, uint64_t))(v177 + 104))(v81, enum case for EyebrowBuilder.ListContext.widget(_:), v178);
  (*(void (**)(char *, void, uint64_t))(v179 + 104))(v187, enum case for EyebrowBuilder.Style.short(_:), v180);
  uint64_t v82 = sub_10008A4D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v189, 1, 1, v82);
  sub_10008A3C0();
  swift_allocObject();
  uint64_t v83 = sub_10008A3B0();
  uint64_t v187 = (char *)sub_10008A3A0();
  uint64_t v186 = v84;
  if ((uint64_t)[v80 storeTrackId] < 1)
  {
    uint64_t v180 = 0xE500000000000000;
    uint64_t v179 = 0x6C61636F6CLL;
  }
  else
  {
    id v216 = [v80 storeTrackId];
    uint64_t v179 = sub_10008B670();
    uint64_t v180 = v85;
  }
  id v86 = [v80 podcast];
  if (v86 && (uint64_t v87 = v86, v88 = [v86 uuid], v87, v88))
  {
    uint64_t v178 = sub_10008B360();
    uint64_t v90 = v89;
  }
  else
  {
    uint64_t v178 = 0;
    uint64_t v90 = 0;
  }
  uint64_t v91 = v181;
  id v92 = [v80 uuid];
  if (v92)
  {
    unsigned __int8 v93 = v92;
    uint64_t v94 = sub_10008B360();
    uint64_t v96 = v95;
  }
  else
  {
    uint64_t v94 = 0;
    uint64_t v96 = 0;
  }
  uint64_t v97 = v211;
  uint64_t v98 = v212;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v211 + 16))(v91, v210, v212);
  int v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 88))(v91, v98);
  uint64_t v189 = (char *)v83;
  if (v99 != enum case for WidgetFamily.systemSmall(_:)
    && v99 != enum case for WidgetFamily.systemMedium(_:)
    && v99 != enum case for WidgetFamily.systemLarge(_:)
    && v99 != enum case for WidgetFamily.systemExtraLarge(_:))
  {
    if (&enum case for WidgetFamily.accessoryCorner(_:))
    {
      if (v99 == enum case for WidgetFamily.accessoryCorner(_:)
        || v99 == enum case for WidgetFamily.accessoryCircular(_:))
      {
        goto LABEL_33;
      }
    }
    else if (v99 == enum case for WidgetFamily.accessoryCircular(_:))
    {
      goto LABEL_33;
    }
    if (v99 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v99 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v91, v212);
    }
  }
LABEL_33:
  if (qword_1000A0F78 != -1) {
    swift_once();
  }
  uint64_t v101 = qword_1000A0F80;
  swift_bridgeObjectRetain();
  if (v101 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v102 = (uint64_t)v183;
  sub_10008A3E0();
  uint64_t v103 = sub_10008A3F0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v102, 0, 1, v103);
  uint64_t v104 = v205;
  void *v205 = v178;
  v104[1] = v90;
  v104[2] = v94;
  v104[3] = v96;
  v104[4] = 0;
  *((unsigned char *)v104 + 40) = 1;
  v104[6] = 0;
  *((unsigned char *)v104 + 56) = 1;
  *(_WORD *)((char *)v104 + 57) = 256;
  sub_1000447E8(v102, (uint64_t)v104 + *(int *)(v182 + 40));
  uint64_t v105 = (uint64_t)v184;
  sub_100044850((uint64_t)v104, (uint64_t)v184, type metadata accessor for PodcastsURLEpisodeParameters);
  type metadata accessor for PodcastsURLShowCommand(0);
  uint64_t v106 = swift_allocObject();
  sub_1000448B8(v105, v106 + OBJC_IVAR____TtC14PodcastsWidget25PodcastsURLEpisodeCommand_episodeParameters, type metadata accessor for PodcastsURLEpisodeParameters);
  type metadata accessor for PodcastsURLScheme();
  type metadata accessor for PodcastsURLNowPlayingCommand();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    uint64_t v107 = v188;
    sub_100089FD0();
    uint64_t v108 = v196;
    uint64_t v109 = &OBJC_CATEGORY_MTPodcastPlaylistSettings___DB;
    uint64_t v110 = &OBJC_CATEGORY_MTPodcastPlaylistSettings___DB;
    if (qword_1000A0FA0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_100089FC0();
    if (qword_1000A0FA8 == -1) {
      goto LABEL_46;
    }
    goto LABEL_104;
  }
  type metadata accessor for PodcastsURLBrowseCommand();
  uint64_t v111 = swift_dynamicCastClass();
  uint64_t v108 = v196;
  uint64_t v107 = v188;
  uint64_t v109 = &OBJC_CATEGORY_MTPodcastPlaylistSettings___DB;
  uint64_t v110 = &OBJC_CATEGORY_MTPodcastPlaylistSettings___DB;
  if (!v111)
  {
    type metadata accessor for PodcastsURLOpenCommand(0);
    uint64_t v166 = swift_dynamicCastClass();
    if (v166)
    {
      uint64_t v167 = v166;
      swift_retain();
      sub_10007E5F0(v167, v207);
      goto LABEL_48;
    }
    uint64_t v168 = swift_dynamicCastClass();
    if (v168)
    {
      uint64_t v169 = v168;
      swift_retain();
      sub_100089FD0();
      if (qword_1000A0FA0 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_100089FC0();
      if (qword_1000A0FC0 == -1) {
        goto LABEL_102;
      }
    }
    else
    {
      type metadata accessor for PodcastsURLPlayCommand(0);
      uint64_t v170 = swift_dynamicCastClass();
      if (v170)
      {
        uint64_t v169 = v170;
        swift_retain();
        sub_100089FD0();
        if (qword_1000A0FA0 != -1) {
          swift_once();
        }
        swift_bridgeObjectRetain();
        sub_100089FC0();
        if (qword_1000A0FC8 == -1) {
          goto LABEL_102;
        }
      }
      else
      {
        type metadata accessor for PodcastsURLShowAndPlayCommand(0);
        uint64_t v171 = swift_dynamicCastClass();
        if (!v171)
        {
          uint64_t v172 = sub_10008A050();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v172 - 8) + 56))(v207, 1, 1, v172);
          goto LABEL_49;
        }
        uint64_t v169 = v171;
        swift_retain();
        sub_100089FD0();
        if (qword_1000A0FA0 != -1) {
          swift_once();
        }
        swift_bridgeObjectRetain();
        sub_100089FC0();
        if (qword_1000A0FD0 == -1) {
          goto LABEL_102;
        }
      }
    }
    swift_once();
LABEL_102:
    swift_bridgeObjectRetain();
    sub_100089FB0();
    sub_10007FE7C(v169 + OBJC_IVAR____TtC14PodcastsWidget25PodcastsURLEpisodeCommand_episodeParameters);
    sub_100089F90();
    goto LABEL_47;
  }
  swift_retain();
  sub_100089FD0();
  if (qword_1000A0FA0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_100089FC0();
  if (qword_1000A0FB0 == -1) {
    goto LABEL_46;
  }
LABEL_104:
  swift_once();
LABEL_46:
  swift_bridgeObjectRetain();
  sub_100089FB0();
LABEL_47:
  sub_100089FA0();
  (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v107, v175);
LABEL_48:
  swift_release();
LABEL_49:
  id v112 = [v80 (SEL)v109[60].prots];
  uint64_t v196 = v106;
  if (v112)
  {
    uint64_t v113 = v112;
    uint64_t v114 = sub_10008B360();
    uint64_t v116 = v115;

    id v216 = [v80 storeTrackId];
    uint64_t v117 = sub_10008B670();
    uint64_t v119 = v118;
    id v120 = [v80 v110[50].inst_meths];
    id v121 = v120;
    if (v120)
    {
      id v122 = [v120 channel];

      if (v122)
      {
        id v121 = [v122 storeId];
      }
      else
      {
        id v121 = 0;
      }
    }
    id v216 = v121;
    uint64_t v123 = sub_10008B670();
    uint64_t v188 = sub_1000175B0(v114, v116, v117, v119, v123, v124);
    uint64_t v184 = (char *)v125;
    uint64_t v183 = (char *)v126;
  }
  else
  {
    uint64_t v188 = 0;
    uint64_t v184 = 0;
    uint64_t v183 = 0;
  }
  id v127 = [v80 (SEL)v109[60].prots];
  if (v127)
  {
    uint64_t v128 = v127;
    uint64_t v182 = sub_10008B360();
    uint64_t v181 = v129;
  }
  else
  {
    uint64_t v182 = 0;
    uint64_t v181 = 0;
  }
  uint64_t v130 = v214;
  uint64_t v131 = (uint64_t)v206;
  sub_10008A150();
  uint64_t v132 = (void (*)(void, void))v201;
  uint64_t v185 = sub_10004084C(v131, (uint64_t)v201, v185);
  uint64_t v180 = v133;
  (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v131, v108);
  uint64_t v134 = *(uint64_t **)(v215 + 8);
  v215 += 8;
  uint64_t v201 = v134;
  ((void (*)(void, uint64_t))v134)(v132, v130);
  id v135 = [v80 v110[50].inst_meths];
  if (v135
    && (NSBundle v136 = v135,
        uint64_t v137 = (objc_class *)[v135 title],
        v136,
        v137))
  {
    uint64_t v138 = sub_10008B360();
  }
  else
  {
    uint64_t v137 = (objc_class *)[self mainBundle];
    v173._countAndFlagsBits = 0xE000000000000000;
    v220._countAndFlagsBits = 0x44454C5449544E55;
    v220._object = (void *)0xED0000574F48535FLL;
    v222.value._countAndFlagsBits = 0;
    v222.value._object = 0;
    v140.super.Class isa = v137;
    v224._countAndFlagsBits = 0;
    v224._object = (void *)0xE000000000000000;
    uint64_t v138 = sub_10008A010(v220, v222, v140, v224, v173);
  }
  uint64_t v191 = v138;
  uint64_t v179 = v139;

  Swift::String v141 = (objc_class *)[v80 bestTitle];
  if (v141)
  {
    int v142 = v141;
    uint64_t v143 = sub_10008B360();
  }
  else
  {
    int v142 = (objc_class *)[self mainBundle];
    v173._countAndFlagsBits = 0xE000000000000000;
    v221._object = (void *)0x8000000100090380;
    v221._countAndFlagsBits = 0xD000000000000010;
    v223.value._countAndFlagsBits = 0;
    v223.value._object = 0;
    v145.super.Class isa = v142;
    v225._countAndFlagsBits = 0;
    v225._object = (void *)0xE000000000000000;
    uint64_t v143 = sub_10008A010(v221, v223, v145, v225, v173);
  }
  uint64_t v178 = v143;
  uint64_t v177 = v144;

  uint64_t v146 = sub_10008A340();
  long long v147 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56);
  v147(v208, 1, 1, v146);
  id v148 = [v80 (v110[50].inst_meths)];
  if (v148)
  {
    uint64_t v149 = v148;
    sub_10008B510();
  }
  else
  {
    v147(v209, 1, 1, v146);
  }
  [v80 pubDate];
  uint64_t v150 = v203;
  sub_10008A070();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v192)(v150, 0, 1, v108);
  id v151 = [v80 bestSummary];
  if (v151)
  {
    uint64_t v152 = v151;
    uint64_t v193 = sub_10008B360();
    uint64_t v154 = v153;
  }
  else
  {
    uint64_t v193 = 0;
    uint64_t v154 = 0;
  }
  id v155 = (char *)0xE000000000000000;
  if (v186) {
    id v155 = v186;
  }
  uint64_t v192 = v155;
  if (v186) {
    uint64_t v156 = (uint64_t)v187;
  }
  else {
    uint64_t v156 = 0;
  }
  uint64_t v157 = v207;
  uint64_t v158 = (uint64_t)v197;
  sub_1000155B0(v207, (uint64_t)v197, &qword_1000A1048);
  unsigned __int8 v159 = v219;
  uint64_t v160 = v194;
  sub_1000155B0(v213, v194, &qword_1000A1038);
  uint64_t v161 = (uint64_t)v199;
  uint64_t v162 = v195;
  sub_1000155B0((uint64_t)v199, (uint64_t)v195, &qword_1000A1038);
  uint64_t v163 = (uint64_t)v206;
  sub_10008A150();
  uint64_t v164 = (uint64_t)v190;
  swift_retain();
  sub_100029F1C(v182, v181, v185, v180, v156, v192, (uint64_t)sub_100044754, v164, v198, v191, v179, v178, v177, v208, v209, v203, v193, v154, 0,
    v158,
    v159,
    v53,
    0,
    v55,
    0,
    v160,
    v162,
    v163,
    v188,
    (uint64_t)v184,
    (uint64_t)v183);
  swift_release();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v210, v212);
  sub_100044920((uint64_t)v200, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  sub_100015614(v157, &qword_1000A1048);
  sub_100044920((uint64_t)v205, type metadata accessor for PodcastsURLEpisodeParameters);
  ((void (*)(char *, uint64_t))v201)(v204, v214);
  sub_100015614(v161, &qword_1000A1038);
  return sub_100015614(v213, &qword_1000A1038);
}

uint64_t sub_10003F310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v42 = a3;
  uint64_t v9 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v37 = *(void *)(v38 + 64);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10008A2D0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10000903C(&qword_1000A1D58);
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  id v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000903C(&qword_1000A1D60);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v40 = v18;
  uint64_t v41 = v19;
  __chkstk_darwin(v18);
  v35[0] = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35[1] = v9;
  uint64_t v21 = *(int *)(v9 + 48);
  uint64_t v22 = *(int *)(v9 + 52);
  uint64_t v23 = a1;
  uint64_t v43 = sub_1000413F8(a1 + v21, a1 + v22, a2, a4, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  unint64_t v24 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v25 = (v14 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v26 + v24, v15, v12);
  uint64_t v27 = (double *)(v26 + v25);
  double *v27 = a4;
  v27[1] = a5;
  sub_10000903C(&qword_1000A1D30);
  sub_100015428(&qword_1000A1D38, &qword_1000A1D30);
  sub_10008A5D0();
  swift_release();
  swift_release();
  sub_100044850(v23, (uint64_t)v11, type metadata accessor for UpNextEntry.Episode);
  unint64_t v28 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v29 = swift_allocObject();
  sub_1000448B8((uint64_t)v11, v29 + v28, type metadata accessor for UpNextEntry.Episode);
  sub_100015428(&qword_1000A1D68, &qword_1000A1D58);
  uint64_t v30 = v36;
  sub_10008A5C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v30);
  sub_100044850(v23, (uint64_t)v11, type metadata accessor for UpNextEntry.Episode);
  uint64_t v31 = swift_allocObject();
  sub_1000448B8((uint64_t)v11, v31 + v28, type metadata accessor for UpNextEntry.Episode);
  sub_10000903C(&qword_1000A1D70);
  sub_100015428(&qword_1000A1D78, &qword_1000A1D60);
  sub_100015428(&qword_1000A1D80, &qword_1000A1D70);
  uint64_t v32 = v40;
  uint64_t v33 = v35[0];
  sub_10008A5D0();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v33, v32);
}

uint64_t sub_10003F84C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  id v17 = a2;
  uint64_t v3 = sub_10008A540();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  sub_10008A520();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = sub_10008A530();
  os_log_type_t v9 = sub_10008B4C0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v16 = v3;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v7;
    uint64_t v19 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    v15[1] = v10 + 4;
    swift_errorRetain();
    sub_10000903C(&qword_1000A1D88);
    uint64_t v12 = sub_10008B380();
    uint64_t v18 = sub_10001C4D0(v12, v13, &v19);
    sub_10008B540();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to load artwork. Attempting to load placeholder: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_10008A2D0();
  uint64_t result = sub_10008A2A0();
  uint64_t *v17 = result;
  return result;
}

void sub_10003FAD0(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  sub_100044850(a2, a3, type metadata accessor for UpNextEntry.Episode);
  uint64_t v5 = *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 56);
  uint64_t v6 = *(void **)(a3 + v5);
  id v7 = v4;

  *(void *)(a3 + v5) = v4;
}

uint64_t sub_10003FB38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = type metadata accessor for UpNextEntry.Episode(0);
  __chkstk_darwin(v5);
  id v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008A540();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_10008A520();
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v13 = sub_10008A530();
  os_log_type_t v14 = sub_10008B4C0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v23 = v7;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = v5;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v26 = v12;
    uint64_t v27 = v17;
    uint64_t v22 = v8;
    *(_DWORD *)uint64_t v16 = 136315138;
    v21[1] = v16 + 4;
    swift_errorRetain();
    sub_10000903C(&qword_1000A1D88);
    uint64_t v18 = sub_10008B380();
    uint64_t v26 = sub_10001C4D0(v18, v19, &v27);
    sub_10008B540();
    id v7 = v23;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Critical failure: unable to recover with image placeholder. returning episode without artwork. %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_100044850(a2, (uint64_t)v7, type metadata accessor for UpNextEntry.Episode);
  return sub_10008A580();
}

uint64_t sub_10003FE10@<X0>(uint64_t *a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10008A170();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000903C(&qword_1000A1850);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000903C(&qword_1000A1038);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  uint64_t v18 = *a2;
  uint64_t v19 = type metadata accessor for WidgetNowPlayingInfo();
  sub_1000155B0(a3 + *(int *)(v19 + 40), (uint64_t)v16, &qword_1000A1038);
  id v20 = v18;
  swift_bridgeObjectRetain();
  sub_10008B2A0();
  uint64_t v21 = sub_10008B220();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 0, 1, v21);
  sub_10008A160();
  return sub_10002A7A4(2u, v17, v18, (uint64_t)v16, (uint64_t)v10, (uint64_t)v13, a4);
}

uint64_t sub_10003FFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v37 = a5;
  uint64_t v38 = a4;
  uint64_t v8 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v35 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (void *)((char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100044640(0, &qword_1000A1CB8);
  uint64_t v11 = (void *)sub_10008B520();
  sub_10000903C(&qword_1000A1CC0);
  uint64_t v12 = swift_allocObject();
  long long v36 = xmmword_10008DB20;
  *(_OWORD *)(v12 + 16) = xmmword_10008DB20;
  uint64_t v39 = a1;
  uint64_t v13 = swift_bridgeObjectRetain();
  unint64_t v14 = (unint64_t)sub_10003CF5C(v13);
  swift_bridgeObjectRelease();
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10008B5C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v12 + 56) = &type metadata for Int;
  *(void *)(v12 + 64) = &protocol witness table for Int;
  *(void *)(v12 + 32) = v15;
  *(void *)(v12 + 96) = &type metadata for String;
  unint64_t v16 = sub_100043914();
  *(void *)(v12 + 104) = v16;
  *(void *)(v12 + 72) = a2;
  *(void *)(v12 + 80) = a3;
  swift_bridgeObjectRetain();
  sub_10008B4E0();
  sub_10008A4F0();

  swift_bridgeObjectRelease();
  if ([self isRunningOnInternalOS])
  {
    uint64_t v17 = (void *)sub_10008B520();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v36;
    *(void *)(v18 + 56) = &type metadata for String;
    *(void *)(v18 + 64) = v16;
    *(void *)(v18 + 32) = a2;
    *(void *)(v18 + 40) = a3;
    *(void *)&long long v36 = v18;
    uint64_t v19 = *(void *)(v39 + 24);
    int64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v34 = v17;
      uint64_t v41 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100040DBC(0, v20, 0);
      uint64_t v21 = *(unsigned __int8 *)(v35 + 80);
      v33[1] = v19;
      uint64_t v22 = v19 + ((v21 + 32) & ~v21);
      uint64_t v23 = *(void *)(v35 + 72);
      do
      {
        sub_100044850(v22, (uint64_t)v10, type metadata accessor for UpNextEntry.Episode);
        sub_1000403F8(v10, v40);
        sub_100044920((uint64_t)v10, type metadata accessor for UpNextEntry.Episode);
        uint64_t v25 = v40[0];
        uint64_t v24 = v40[1];
        uint64_t v26 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100040DBC(0, v26[2] + 1, 1);
          uint64_t v26 = v41;
        }
        unint64_t v28 = v26[2];
        unint64_t v27 = v26[3];
        if (v28 >= v27 >> 1)
        {
          sub_100040DBC(v27 > 1, v28 + 1, 1);
          uint64_t v26 = v41;
        }
        v26[2] = v28 + 1;
        uint64_t v29 = &v26[2 * v28];
        v29[4] = v25;
        v29[5] = v24;
        v22 += v23;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
      uint64_t v17 = v34;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _swiftEmptyArrayStorage;
    }
    uint64_t v30 = sub_10000903C(&qword_1000A1D40);
    uint64_t v31 = v36;
    *(void *)(v36 + 96) = v30;
    *(void *)(v31 + 104) = sub_100015428(&qword_1000A1D48, &qword_1000A1D40);
    *(void *)(v31 + 72) = v26;
    sub_10008B4E0();
    sub_10008A4F0();

    swift_bridgeObjectRelease();
  }
  return v38(v39);
}

uint64_t sub_1000403F8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = 8250;
  v11._object = (void *)0xE200000000000000;
  sub_10008B3B0(v11);
  uint64_t v4 = a1[2];
  uint64_t v5 = (void *)a1[3];
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v4;
  v12._object = v5;
  sub_10008B3B0(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 2108704;
  v13._object = (void *)0xE300000000000000;
  sub_10008B3B0(v13);
  uint64_t v6 = a1[9];
  id v7 = (void *)a1[10];
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v6;
  v14._object = v7;
  sub_10008B3B0(v14);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v10;
  return result;
}

uint64_t sub_1000404BC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v31 = a2;
  uint64_t v6 = sub_10008A370();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)&v27 - v10;
  uint64_t v11 = sub_10008A540();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  Swift::String v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_10008A520();
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v16 = sub_10008A530();
  os_log_type_t v17 = sub_10008B4C0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v30 = a4;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = v6;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v28 = v11;
    uint64_t v35 = v15;
    uint64_t v36 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    unint64_t v27 = v19 + 4;
    swift_errorRetain();
    sub_10000903C(&qword_1000A1D88);
    uint64_t v21 = sub_10008B380();
    uint64_t v35 = sub_10001C4D0(v21, v22, &v36);
    sub_10008B540();
    a4 = v30;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to load episode artwork, attempting show artwork: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v29;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v28);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_10001D5F0(v31, v31[3]);
  sub_10008A320();
  uint64_t v23 = v32;
  sub_10008A360();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v34 + 8);
  v24(v9, v6);
  uint64_t v25 = sub_10008A290();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v23, v6);
  *a4 = v25;
  return result;
}

uint64_t sub_10004084C(uint64_t a1, uint64_t a2, int a3)
{
  int v36 = a3;
  uint64_t v35 = a2;
  uint64_t v37 = a1;
  uint64_t v3 = sub_10008A390();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  __chkstk_darwin(v3);
  uint64_t v38 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A1DC8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008A170();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::String v14 = (char *)&v34 - v13;
  uint64_t v15 = sub_10000903C(&qword_1000A1DB8);
  __chkstk_darwin(v15 - 8);
  os_log_type_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10008A380();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10008A420();
  v41[3] = v22;
  v41[4] = (uint64_t)&protocol witness table for EyebrowBuilderSourceCopy;
  uint64_t v23 = sub_1000439B8(v41);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v23, v35, v22);
  *uint64_t v21 = v36;
  (*(void (**)(unsigned char *, void, uint64_t))(v19 + 104))(v21, enum case for EyebrowBuilder.ListContext.widget(_:), v18);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v25 = v37;
  v24(v14, v37, v8);
  v24(v12, v25, v8);
  uint64_t v26 = enum case for TimeSpan.hoursAgo(_:);
  uint64_t v27 = sub_10008A4E0();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v7, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v7, 0, 1, v27);
  sub_10008A4C0();
  uint64_t v29 = sub_10008A4D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 0, 1, v29);
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, enum case for EyebrowBuilder.Style.default(_:), v40);
  sub_10008A3C0();
  swift_allocObject();
  sub_10008A3B0();
  uint64_t v30 = sub_10008A3A0();
  uint64_t v32 = v31;
  swift_release();
  if (v32) {
    return v30;
  }
  else {
    return 0;
  }
}

void sub_100040CD4()
{
  qword_1000A5768 = (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t sub_100040CE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100041044(a1, a2, a3, (void *)*v3, &qword_1000A1898, (uint64_t (*)(void))&type metadata accessor for Date);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100040D24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100041044(a1, a2, a3, (void *)*v3, &qword_1000A1A00, type metadata accessor for UpNextEntry.Episode);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100040D60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100040DFC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100040D80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100041044(a1, a2, a3, (void *)*v3, &qword_1000A1888, type metadata accessor for UpNextEntry);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100040DBC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10004128C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100040DDC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100041044(a1, a2, a3, a4, &qword_1000A1898, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_100040DFC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000903C(&qword_1000A1890);
  uint64_t v10 = *(void *)(sub_10000903C(&qword_1000A1038) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10000903C(&qword_1000A1038) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

uint64_t sub_100041044(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000903C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

uint64_t sub_10004128C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000903C(&qword_1000A1D50);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

uint64_t sub_1000413F8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v82 = a2;
  uint64_t v75 = sub_10008A540();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10008A370();
  uint64_t v78 = *(void *)(v10 - 8);
  uint64_t v79 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v77 = (char *)&v67 - v13;
  uint64_t v70 = sub_10000903C(&qword_1000A1D58);
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v68 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10008A340();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v72 = (uint64_t)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v67 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v67 - v23;
  __chkstk_darwin(v22);
  uint64_t v71 = (uint64_t)&v67 - v25;
  uint64_t v26 = sub_10000903C(&qword_1000A18B0);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10008A2D0();
  v85[3] = v30;
  v85[4] = (uint64_t)&protocol witness table for WidgetImageProvider;
  uint64_t v31 = sub_1000439B8(v85);
  uint64_t v32 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  uint64_t v80 = v30;
  uint64_t v81 = v31;
  v32(v31, a3, v30);
  uint64_t v33 = *(int *)(v27 + 56);
  uint64_t v34 = v16;
  uint64_t v35 = (uint64_t)&v29[v33];
  sub_1000155B0(a1, (uint64_t)v29, &qword_1000A1040);
  sub_1000155B0(v82, v35, &qword_1000A1040);
  int v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v30) = v36(v29, 1, v15);
  int v37 = v36((char *)v35, 1, v15);
  if (v30 != 1)
  {
    uint64_t v82 = v34;
    uint64_t v39 = v73;
    uint64_t v40 = v74;
    uint64_t v41 = v75;
    if (v37 != 1)
    {
      uint64_t v52 = v71;
      sub_1000448B8((uint64_t)v29, v71, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      uint64_t v53 = (uint64_t)v24;
      sub_1000448B8(v35, (uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      uint64_t v54 = v76;
      uint64_t v55 = v52;
      sub_10008A320();
      uint64_t v56 = v77;
      sub_10008A360();
      uint64_t v57 = *(void (**)(char *, uint64_t))(v78 + 8);
      id v58 = v54;
      uint64_t v59 = v79;
      v57(v58, v79);
      uint64_t v60 = sub_10008A290();
      v57(v56, v59);
      uint64_t v84 = v60;
      sub_1000442D4((uint64_t)v85, (uint64_t)v83);
      sub_100044850(v53, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      unint64_t v61 = (*(unsigned __int8 *)(v82 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
      uint64_t v62 = swift_allocObject();
      sub_1000444DC(v83, v62 + 16);
      sub_1000448B8((uint64_t)v21, v62 + v61, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      int v63 = (double *)(v62 + ((v17 + v61 + 7) & 0xFFFFFFFFFFFFFFF8));
      *int v63 = a4;
      v63[1] = a5;
      sub_10000903C(&qword_1000A1D30);
      sub_100015428(&qword_1000A1D38, &qword_1000A1D30);
      char v64 = v68;
      sub_10008A5D0();
      swift_release();
      swift_release();
      sub_100015428(&qword_1000A1D68, &qword_1000A1D58);
      uint64_t v65 = v70;
      uint64_t v38 = sub_10008A5A0();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v65);
      sub_100044920(v53, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      uint64_t v51 = v55;
      goto LABEL_11;
    }
    uint64_t v42 = v72;
    sub_1000448B8((uint64_t)v29, v72, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    sub_10008A520();
    uint64_t v43 = sub_10008A530();
    os_log_type_t v44 = sub_10008B4C0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Unexpectedly found episode artwork without show artwork. No Fallback path available.", v45, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
LABEL_9:
    uint64_t v47 = v76;
    sub_10008A320();
    uint64_t v48 = v77;
    sub_10008A360();
    uint64_t v49 = v79;
    uint64_t v50 = *(void (**)(char *, uint64_t))(v78 + 8);
    v50(v47, v79);
    uint64_t v38 = sub_10008A290();
    v50(v48, v49);
    uint64_t v51 = v42;
LABEL_11:
    sub_100044920(v51, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_12;
  }
  if (v37 != 1)
  {
    uint64_t v46 = v35;
    uint64_t v42 = v71;
    sub_1000448B8(v46, v71, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_9;
  }
  uint64_t v38 = sub_10008A280();
LABEL_12:
  sub_10001F160((uint64_t)v85);
  return v38;
}

uint64_t sub_100041C20(unint64_t a1, void (*a2)(void), uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v6 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    if (!v10) {
      return (uint64_t)v11;
    }
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100040D24(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0) {
      break;
    }
    uint64_t v13 = 0;
    uint64_t v11 = v23;
    unint64_t v19 = v4;
    unint64_t v20 = a1 & 0xC000000000000001;
    unint64_t v14 = a1;
    while (v10 != v13)
    {
      if (v20) {
        id v15 = (id)sub_10008B590();
      }
      else {
        id v15 = *(id *)(a1 + 8 * v13 + 32);
      }
      uint64_t v16 = v15;
      v21();

      uint64_t v23 = v11;
      unint64_t v18 = v11[2];
      unint64_t v17 = v11[3];
      unint64_t v4 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        sub_100040D24(v17 > 1, v18 + 1, 1);
        uint64_t v11 = v23;
      }
      ++v13;
      v11[2] = v4;
      sub_1000448B8((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v18, type metadata accessor for UpNextEntry.Episode);
      a1 = v14;
      if (v10 == v13) {
        return (uint64_t)v11;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10008B5C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100041E30(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = sub_10000903C(&qword_1000A1040);
  __chkstk_darwin(v6 - 8);
  uint64_t v152 = (uint64_t)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_10008A370();
  uint64_t v147 = *(void *)(v149 - 8);
  uint64_t v8 = __chkstk_darwin(v149);
  uint64_t v144 = (char *)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  NSBundle v145 = (char *)&v143 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v146 = (char *)&v143 - v13;
  __chkstk_darwin(v12);
  id v148 = (char *)&v143 - v14;
  uint64_t v189 = sub_10008B2B0();
  uint64_t v187 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v183 = v15;
  uint64_t v185 = (char *)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_10000903C(&qword_1000A1C88);
  uint64_t v179 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v177 = (char *)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_10000903C(&qword_1000A1C90);
  uint64_t v180 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  uint64_t v178 = (char *)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_10000903C(&qword_1000A1C98);
  uint64_t v186 = *(void *)(v188 - 8);
  __chkstk_darwin(v188);
  uint64_t v184 = (char *)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000903C(&qword_1000A1CA0);
  uint64_t v191 = *(void *)(v19 - 8);
  uint64_t v192 = v19;
  __chkstk_darwin(v19);
  uint64_t v190 = (char *)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_10000903C(&qword_1000A1CA8);
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v158 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v153 = *(void *)(v151 - 8);
  uint64_t v22 = __chkstk_darwin(v151);
  uint64_t v168 = (char *)&v143 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v150 = (uint64_t)&v143 - v24;
  uint64_t v200 = sub_10008A2D0();
  uint64_t v198 = *(void *)(v200 - 8);
  uint64_t v25 = __chkstk_darwin(v200);
  uint64_t v174 = (char *)&v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = v26;
  __chkstk_darwin(v25);
  uint64_t v199 = (char *)&v143 - v27;
  uint64_t v28 = sub_10008A170();
  uint64_t v193 = *(void *)(v28 - 8);
  uint64_t v194 = v28;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v156 = (char *)&v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v195 = (char *)&v143 - v31;
  uint64_t v32 = sub_10000903C(&qword_1000A1850);
  __chkstk_darwin(v32 - 8);
  uint64_t v167 = (char *)&v143 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10000903C(&qword_1000A1038);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v155 = (uint64_t)&v143 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v166 = (char *)&v143 - v37;
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  __chkstk_darwin(Entry);
  uint64_t v165 = (uint64_t)&v143 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for WidgetNowPlayingInfo();
  uint64_t v171 = *(void *)(v154 - 8);
  uint64_t v39 = __chkstk_darwin(v154);
  uint64_t v175 = (uint64_t)&v143 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v157 = (uint64_t)&v143 - v42;
  uint64_t v173 = v43;
  __chkstk_darwin(v41);
  uint64_t v196 = (uint64_t)&v143 - v44;
  uint64_t v45 = sub_10008B220();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v163 = (char *)&v143 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v162 = (char *)&v143 - v50;
  __chkstk_darwin(v49);
  uint64_t v52 = (char *)&v143 - v51;
  uint64_t v53 = swift_allocObject();
  uint64_t v169 = a2;
  *(void *)(v53 + 16) = a2;
  *(void *)(v53 + 24) = a3;
  uint64_t v197 = v53;
  uint64_t v202 = 40;
  unint64_t v203 = 0xE100000000000000;
  uint64_t v170 = a3;
  swift_retain();
  uint64_t v201 = a1;
  sub_10008B2A0();
  sub_100043970(&qword_1000A1CB0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  v206._countAndFlagsBits = sub_10008B670();
  sub_10008B3B0(v206);
  swift_bridgeObjectRelease();
  uint64_t v164 = *(void (**)(char *, uint64_t))(v46 + 8);
  v164(v52, v45);
  v207._countAndFlagsBits = 41;
  v207._object = (void *)0xE100000000000000;
  sub_10008B3B0(v207);
  uint64_t v55 = v202;
  uint64_t v54 = (void (*)(void))v203;
  uint64_t v56 = sub_100044640(0, &qword_1000A1CB8);
  uint64_t v57 = (void *)sub_10008B520();
  uint64_t v58 = sub_10000903C(&qword_1000A1CC0);
  uint64_t v59 = swift_allocObject();
  long long v161 = xmmword_10008D8C0;
  *(_OWORD *)(v59 + 16) = xmmword_10008D8C0;
  *(void *)(v59 + 56) = &type metadata for String;
  unint64_t v60 = sub_100043914();
  *(void *)(v59 + 64) = v60;
  *(void *)(v59 + 32) = v55;
  *(void *)(v59 + 40) = v54;
  swift_bridgeObjectRetain();
  sub_10008B4E0();
  sub_10008A4F0();

  swift_bridgeObjectRelease();
  if (![self canExtensionOpenDatabase])
  {
    uint64_t v69 = (void *)sub_10008B520();
    sub_10008B4C0();
    uint64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = v161;
    *(void *)(v70 + 56) = &type metadata for String;
    *(void *)(v70 + 64) = v60;
    *(void *)(v70 + 32) = v55;
    *(void *)(v70 + 40) = v54;
    sub_10008A4F0();

    swift_bridgeObjectRelease();
    uint64_t v71 = (uint64_t)v166;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v193 + 56))(v166, 1, 1, v194);
    uint64_t v72 = (uint64_t)v167;
    sub_10008B2A0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v72, 0, 1, v45);
    uint64_t v73 = (uint64_t)v195;
    sub_10008A160();
    uint64_t v74 = v165;
    sub_10002A7A4(1u, (uint64_t)_swiftEmptyArrayStorage, 0, v71, v73, v72, v165);
    sub_100020E08(v74, v169, v170);
    sub_100044920(v74, type metadata accessor for UpNextEntry);
    return swift_release();
  }
  uint64_t v167 = (char *)v56;
  uint64_t v166 = (char *)v58;
  uint64_t v169 = v54;
  uint64_t v170 = v55;
  uint64_t v61 = v196;
  sub_10001A408(v196);
  WidgetNowPlayingInfo.logInfo()();
  uint64_t v62 = v162;
  uint64_t v63 = v201;
  sub_10008B2A0();
  char v64 = v163;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v163, v62, v45);
  int v65 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v64, v45);
  if (v65 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v66 = 1;
    uint64_t v67 = v63;
    uint64_t v68 = ((uint64_t (*)(char *, uint64_t))v164)(v62, v45);
  }
  else
  {
    uint64_t v67 = v63;
    uint64_t v75 = (uint64_t (*)(char *, uint64_t))v164;
    if (v65 == enum case for WidgetFamily.systemMedium(_:))
    {
      uint64_t v66 = 2;
    }
    else if (v65 == enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t v66 = 4;
    }
    else if (v65 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      uint64_t v66 = 6;
    }
    else
    {
      int v142 = v64;
      uint64_t v66 = 1;
      if (v65 != enum case for WidgetFamily.accessoryCircular(_:)
        && v65 != enum case for WidgetFamily.accessoryRectangular(_:)
        && v65 != enum case for WidgetFamily.accessoryInline(_:))
      {
        v164(v142, v45);
        uint64_t v66 = 6;
      }
    }
    uint64_t v68 = v75(v62, v45);
  }
  __chkstk_darwin(v68);
  *(&v143 - 2) = v61;
  *(&v143 - 1) = v67;
  uint64_t v76 = sub_10003D0A0(v66, (uint64_t)sub_100043968, (uint64_t)(&v143 - 4));
  uint64_t v77 = (void *)sub_10008B520();
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_10008DB20;
  uint64_t v79 = *(void *)(v76 + 16);
  *(void *)(v78 + 56) = &type metadata for Int;
  *(void *)(v78 + 64) = &protocol witness table for Int;
  *(void *)(v78 + 32) = v79;
  *(void *)(v78 + 96) = &type metadata for String;
  *(void *)(v78 + 104) = v60;
  *(void *)(v78 + 72) = v170;
  *(void *)(v78 + 80) = v169;
  swift_bridgeObjectRetain();
  sub_10008B4E0();
  sub_10008A4F0();

  swift_bridgeObjectRelease();
  uint64_t v80 = kMTWidgetArtworkWidth;
  uint64_t v81 = kMTWidgetArtworkHeight;
  uint64_t v82 = v199;
  sub_10008A2C0();
  uint64_t v83 = sub_10008A2F0();
  uint64_t v204 = v83;
  uint64_t v205 = sub_100043970(&qword_1000A1CD0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  uint64_t v84 = sub_1000439B8(&v202);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v83 - 8) + 104))(v84, enum case for Podcasts.widgetNowPlayingArtwork(_:), v83);
  LOBYTE(v83) = sub_10008A2E0();
  sub_10001F160((uint64_t)&v202);
  uint64_t v85 = v200;
  id v86 = v168;
  if ((v83 & 1) == 0) {
    goto LABEL_31;
  }
  int v87 = *(unsigned __int8 *)(v61 + 16);
  uint64_t v88 = v157;
  sub_100044850(v61, v157, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  if (v87 == 1)
  {
    sub_100044920(v88, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  }
  else
  {
    uint64_t v89 = v155;
    sub_1000155B0(v88 + *(int *)(v154 + 40), v155, &qword_1000A1038);
    uint64_t v90 = v193;
    uint64_t v91 = v194;
    int v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v193 + 48))(v89, 1, v194);
    uint64_t v166 = (char *)v76;
    unsigned __int8 v93 = v156;
    if (v92 == 1)
    {
      sub_10008A160();
      sub_100015614(v89, &qword_1000A1038);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v156, v89, v91);
    }
    uint64_t v94 = v195;
    sub_10008A160();
    char v95 = sub_10008A120();
    uint64_t v96 = *(void (**)(char *, uint64_t))(v90 + 8);
    v96(v94, v91);
    v96(v93, v91);
    sub_100044920(v157, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
    uint64_t v76 = (uint64_t)v166;
    if ((v95 & 1) == 0) {
      goto LABEL_31;
    }
  }
  uint64_t v97 = *(void *)(v76 + 16);
  if (v97)
  {
    uint64_t v98 = v76 + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    uint64_t v99 = *(void *)(v153 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100044850(v98, (uint64_t)v86, type metadata accessor for UpNextEntry.Episode);
      uint64_t v100 = *(void *)(v61 + 8);
      if (v100)
      {
        BOOL v101 = *v86 == *(void *)v61 && v100 == v86[1];
        if (v101 || (sub_10008B690() & 1) != 0) {
          break;
        }
      }
      sub_100044920((uint64_t)v86, type metadata accessor for UpNextEntry.Episode);
      v98 += v99;
      if (!--v97)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v102 = v150;
    sub_1000448B8((uint64_t)v86, v150, type metadata accessor for UpNextEntry.Episode);
    uint64_t v103 = v152;
    sub_1000155B0(v102 + *(int *)(v151 + 52), v152, &qword_1000A1040);
    sub_100044920(v102, type metadata accessor for UpNextEntry.Episode);
    uint64_t v104 = sub_10008A340();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 48))(v103, 1, v104) == 1)
    {
      sub_100015614(v103, &qword_1000A1040);
      goto LABEL_31;
    }
    uint64_t v105 = v61;
    uint64_t v133 = v144;
    sub_10008A320();
    sub_100044920(v103, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    uint64_t v134 = v145;
    sub_10008A360();
    uint64_t v135 = v147;
    NSBundle v136 = *(void (**)(char *, uint64_t))(v147 + 8);
    uint64_t v166 = (char *)v76;
    uint64_t v137 = v149;
    v136(v133, v149);
    uint64_t v195 = (char *)v136;
    uint64_t v138 = v146;
    sub_10008A350();
    v136(v134, v137);
    uint64_t v139 = v148;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v148, v138, v137);
    uint64_t v202 = sub_10008A2B0();
    sub_10000903C(&qword_1000A1D30);
    sub_100015428(&qword_1000A1D38, &qword_1000A1D30);
    uint64_t v140 = sub_10008A590();
    swift_release();
    uint64_t v202 = v140;
    sub_10000903C(&qword_1000A1D10);
    uint64_t v82 = v199;
    sub_100015428(&qword_1000A1D20, &qword_1000A1D10);
    uint64_t v108 = sub_10008A5A0();
    swift_release();
    uint64_t v141 = v137;
    uint64_t v76 = (uint64_t)v166;
    ((void (*)(char *, uint64_t))v195)(v139, v141);
    uint64_t v85 = v200;
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v105 = v61;
  uint64_t v202 = 0;
  sub_10000903C(&qword_1000A1CD8);
  uint64_t v106 = v158;
  sub_10008A580();
  sub_100015428(&qword_1000A1CE0, &qword_1000A1CA8);
  uint64_t v107 = v160;
  uint64_t v108 = sub_10008A5A0();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v106, v107);
LABEL_32:
  uint64_t v202 = v76;
  sub_10000903C(&qword_1000A1878);
  sub_100015428(&qword_1000A1CE8, &qword_1000A1878);
  uint64_t v109 = v177;
  sub_10008A550();
  uint64_t v110 = v198;
  uint64_t v111 = v174;
  (*(void (**)(char *, char *, uint64_t))(v198 + 16))(v174, v82, v85);
  unint64_t v112 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  uint64_t v113 = swift_allocObject();
  *(void *)(v113 + 16) = v80;
  *(void *)(v113 + 24) = v81;
  (*(void (**)(unint64_t, char *, uint64_t))(v110 + 32))(v113 + v112, v111, v85);
  sub_10008A560();
  sub_10000903C(&qword_1000A1CF0);
  sub_100015428(&qword_1000A1CF8, &qword_1000A1C88);
  sub_100015428(&qword_1000A1D00, &qword_1000A1CF0);
  uint64_t v114 = v178;
  uint64_t v115 = v181;
  sub_10008A600();
  swift_release();
  (*(void (**)(char *, uint64_t))(v179 + 8))(v109, v115);
  sub_100015428(&qword_1000A1D08, &qword_1000A1C90);
  uint64_t v116 = v184;
  uint64_t v117 = v182;
  sub_10008A5E0();
  (*(void (**)(char *, uint64_t))(v180 + 8))(v114, v117);
  uint64_t v202 = v108;
  uint64_t v118 = v105;
  uint64_t v119 = v175;
  sub_100044850(v118, v175, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  uint64_t v120 = v187;
  id v121 = v185;
  uint64_t v122 = v189;
  (*(void (**)(char *, uint64_t, uint64_t))(v187 + 16))(v185, v201, v189);
  unint64_t v123 = (*(unsigned __int8 *)(v171 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80);
  unint64_t v124 = (v173 + *(unsigned __int8 *)(v120 + 80) + v123) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
  uint64_t v125 = swift_allocObject();
  sub_1000448B8(v119, v125 + v123, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  (*(void (**)(unint64_t, char *, uint64_t))(v120 + 32))(v125 + v124, v121, v122);
  swift_retain();
  sub_10000903C(&qword_1000A1D10);
  sub_100015428(&qword_1000A1D18, &qword_1000A1C98);
  sub_100015428(&qword_1000A1D20, &qword_1000A1D10);
  uint64_t v126 = v190;
  uint64_t v127 = v188;
  sub_10008A5B0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v186 + 8))(v116, v127);
  uint64_t v128 = (void *)swift_allocObject();
  uint64_t v129 = v169;
  v128[2] = v170;
  v128[3] = v129;
  uint64_t v130 = v197;
  v128[4] = sub_10004390C;
  v128[5] = v130;
  sub_100015428(&qword_1000A1D28, &qword_1000A1CA0);
  swift_retain();
  uint64_t v131 = v192;
  sub_10008A5F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v191 + 8))(v126, v131);
  if (qword_1000A0F88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10008A570();
  swift_endAccess();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v198 + 8))(v199, v200);
  sub_100044920(v196, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  return swift_release();
}

uint64_t sub_1000438D4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004390C(uint64_t a1)
{
  return sub_100020E08(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_100043914()
{
  unint64_t result = qword_1000A1CC8;
  if (!qword_1000A1CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1CC8);
  }
  return result;
}

uint64_t sub_100043968@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10003D708(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100043970(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1000439B8(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100043A30(uint64_t a1)
{
  return sub_10003FFDC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100043A3C()
{
  uint64_t v1 = sub_10008A2D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100043AD8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10008A2D0();

  return sub_10003F84C(a1, a2);
}

uint64_t sub_100043B8C(uint64_t a1)
{
  return sub_100044240(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10003FAD0);
}

uint64_t sub_100043BA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v48 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v49 = (v3 + 16) & ~v3;
  uint64_t v4 = v0 + v49;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v49 + v2[10];
  uint64_t v6 = sub_10008A170();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v46(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v47 = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + v2[12];
  uint64_t v9 = sub_10008A340();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v11 = *(unsigned __int8 *)(v8 + 32);
    if (v11 != 255) {
      sub_1000096D4(*(void *)(v8 + 16), *(void *)(v8 + 24), v11);
    }
    int v12 = *(unsigned __int8 *)(v8 + 64);
    if (v12 != 255) {
      sub_1000096EC(*(id *)(v8 + 56), v12);
    }
    int v13 = *(unsigned __int8 *)(v8 + 80);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v8 + 72), v13);
    }
    int v14 = *(unsigned __int8 *)(v8 + 96);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v8 + 88), v14);
    }
    uint64_t v45 = v3;
    int v15 = *(unsigned __int8 *)(v8 + 112);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v8 + 104), v15);
    }
    uint64_t v16 = v1;
    int v17 = *(unsigned __int8 *)(v8 + 128);
    if (v17 != 255) {
      sub_1000096EC(*(id *)(v8 + 120), v17);
    }
    uint64_t v18 = v8 + *(int *)(v9 + 44);
    uint64_t v19 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v16;
    uint64_t v3 = v45;
  }
  uint64_t v20 = v4 + v2[13];
  if (!v10(v20, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v21 = *(unsigned __int8 *)(v20 + 32);
    if (v21 != 255) {
      sub_1000096D4(*(void *)(v20 + 16), *(void *)(v20 + 24), v21);
    }
    int v22 = *(unsigned __int8 *)(v20 + 64);
    if (v22 != 255) {
      sub_1000096EC(*(id *)(v20 + 56), v22);
    }
    int v23 = *(unsigned __int8 *)(v20 + 80);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v20 + 72), v23);
    }
    int v24 = *(unsigned __int8 *)(v20 + 96);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v20 + 88), v24);
    }
    int v25 = *(unsigned __int8 *)(v20 + 112);
    if (v25 != 255) {
      sub_1000096EC(*(id *)(v20 + 104), v25);
    }
    uint64_t v26 = v1;
    int v27 = *(unsigned __int8 *)(v20 + 128);
    if (v27 != 255) {
      sub_1000096EC(*(id *)(v20 + 120), v27);
    }
    uint64_t v28 = v20 + *(int *)(v9 + 44);
    uint64_t v29 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v26;
  }

  uint64_t v30 = v4 + v2[15];
  uint64_t v31 = sub_10008A050();
  uint64_t v32 = *(void *)(v31 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v33 = v4 + v2[19];
  if (!v46(v33, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v33, v6);
  }
  uint64_t v34 = v4 + v2[20];
  if (!v46(v34, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v34, v6);
  }
  if (*(void *)(v4 + v2[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v35 = v4 + v2[22];
  uint64_t v36 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36))
  {
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v37(v35, v6);
    v37(v35 + *(int *)(v36 + 36), v6);
  }
  uint64_t v38 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v39 = v35 + *(int *)(v38 + 20);
  uint64_t v40 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  uint64_t v41 = v35 + *(int *)(v38 + 24);
  uint64_t v42 = sub_10008A4B0();
  uint64_t v43 = *(void *)(v42 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, v49 + v48, v3 | 7);
}

uint64_t sub_100044228(uint64_t a1)
{
  return sub_100044240(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10003FB38);
}

uint64_t sub_100044240(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for UpNextEntry.Episode(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_1000442D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100044338()
{
  uint64_t v1 = sub_10008A340();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_10001F160(v0 + 16);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  int v6 = *(unsigned __int8 *)(v0 + v3 + 32);
  if (v6 != 255) {
    sub_1000096D4(*(void *)(v5 + 16), *(void *)(v5 + 24), v6);
  }
  int v7 = *(unsigned __int8 *)(v5 + 64);
  if (v7 != 255) {
    sub_1000096EC(*(id *)(v5 + 56), v7);
  }
  int v8 = *(unsigned __int8 *)(v5 + 80);
  if (v8 != 255) {
    sub_1000096EC(*(id *)(v5 + 72), v8);
  }
  int v9 = *(unsigned __int8 *)(v5 + 96);
  if (v9 != 255) {
    sub_1000096EC(*(id *)(v5 + 88), v9);
  }
  int v10 = *(unsigned __int8 *)(v5 + 112);
  if (v10 != 255) {
    sub_1000096EC(*(id *)(v5 + 104), v10);
  }
  int v11 = *(unsigned __int8 *)(v5 + 128);
  if (v11 != 255) {
    sub_1000096EC(*(id *)(v5 + 120), v11);
  }
  unint64_t v12 = ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v13 = v5 + *(int *)(v1 + 44);
  uint64_t v14 = sub_10008A300();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v12, v2 | 7);
}

uint64_t sub_1000444DC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000444F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10008A340() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000404BC(a1, (void *)(v2 + 16), v6, a2);
}

uint64_t sub_1000445A8()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000445E0()
{
  return sub_10003D264(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32), *(void (**)(void))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1000445F0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100044600()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100044628(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100044638()
{
  return swift_release();
}

uint64_t sub_100044640(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10004467C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100044640(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000446C0()
{
  uint64_t v1 = sub_10008A420();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100044754(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10008A420() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int v5 = *(unsigned __int8 *)(v1 + v4 + *(void *)(v3 + 64));

  return sub_10004084C(a1, v1 + v4, v5);
}

uint64_t sub_1000447E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100044850(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000448B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100044920(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100044980(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v192 = a3;
  uint64_t v194 = a2;
  uint64_t v4 = sub_10000903C(&qword_1000A1850);
  __chkstk_darwin(v4 - 8);
  uint64_t v171 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  __chkstk_darwin(Entry);
  uint64_t v170 = (uint64_t)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = sub_10008B2B0();
  uint64_t v182 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v178 = v7;
  uint64_t v180 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_10000903C(&qword_1000A1C88);
  uint64_t v174 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v172 = (char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_10000903C(&qword_1000A1C90);
  uint64_t v175 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v173 = (char *)&v141 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_10000903C(&qword_1000A1C98);
  uint64_t v181 = *(void *)(v183 - 8);
  __chkstk_darwin(v183);
  uint64_t v179 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000903C(&qword_1000A1CA0);
  uint64_t v186 = *(void *)(v11 - 8);
  uint64_t v187 = v11;
  __chkstk_darwin(v11);
  uint64_t v185 = (char *)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_10000903C(&qword_1000A1CA8);
  uint64_t v157 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v156 = (char *)&v141 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000903C(&qword_1000A1040);
  __chkstk_darwin(v14 - 8);
  uint64_t v149 = (uint64_t)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10008A370();
  uint64_t v145 = *(void *)(v150 - 8);
  uint64_t v16 = __chkstk_darwin(v150);
  int v142 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v143 = (char *)&v141 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v144 = (char *)&v141 - v21;
  __chkstk_darwin(v20);
  uint64_t v146 = (char *)&v141 - v22;
  uint64_t v148 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v151 = *(void *)(v148 - 8);
  uint64_t v23 = __chkstk_darwin(v148);
  uint64_t v164 = (char *)&v141 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v147 = (uint64_t)&v141 - v25;
  uint64_t v26 = sub_10000903C(&qword_1000A1038);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v163 = (char *)&v141 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v154 = (uint64_t)&v141 - v29;
  uint64_t v30 = sub_10008A170();
  uint64_t v189 = *(void *)(v30 - 8);
  uint64_t v190 = v30;
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v191 = (char *)&v141 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v153 = (char *)&v141 - v33;
  uint64_t v196 = sub_10008A2D0();
  uint64_t v193 = *(void *)(v196 - 8);
  uint64_t v34 = __chkstk_darwin(v196);
  uint64_t v166 = (char *)&v141 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = v35;
  __chkstk_darwin(v34);
  uint64_t v195 = (char *)&v141 - v36;
  uint64_t v152 = type metadata accessor for WidgetNowPlayingInfo();
  uint64_t v167 = *(void *)(v152 - 8);
  uint64_t v37 = __chkstk_darwin(v152);
  uint64_t v169 = (uint64_t)&v141 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v155 = (uint64_t)&v141 - v40;
  uint64_t v168 = v41;
  __chkstk_darwin(v39);
  uint64_t v198 = (uint64_t)&v141 - v42;
  uint64_t v43 = sub_10008B220();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = __chkstk_darwin(v43);
  long long v161 = (char *)&v141 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v160 = (char *)&v141 - v48;
  __chkstk_darwin(v47);
  uint64_t v50 = (char *)&v141 - v49;
  uint64_t v199 = 40;
  unint64_t v200 = 0xE100000000000000;
  uint64_t v197 = a1;
  sub_10008B2A0();
  sub_100043970(&qword_1000A1CB0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  v203._countAndFlagsBits = sub_10008B670();
  sub_10008B3B0(v203);
  swift_bridgeObjectRelease();
  uint64_t v162 = *(void (**)(char *, uint64_t))(v44 + 8);
  v162(v50, v43);
  v204._countAndFlagsBits = 41;
  v204._object = (void *)0xE100000000000000;
  sub_10008B3B0(v204);
  uint64_t v51 = v199;
  uint64_t v52 = v200;
  sub_100044640(0, &qword_1000A1CB8);
  uint64_t v53 = (void *)sub_10008B520();
  uint64_t v54 = sub_10000903C(&qword_1000A1CC0);
  uint64_t v55 = swift_allocObject();
  long long v159 = xmmword_10008D8C0;
  *(_OWORD *)(v55 + 16) = xmmword_10008D8C0;
  *(void *)(v55 + 56) = &type metadata for String;
  unint64_t v56 = sub_100043914();
  *(void *)(v55 + 64) = v56;
  *(void *)(v55 + 32) = v51;
  *(void *)(v55 + 40) = v52;
  swift_bridgeObjectRetain();
  sub_10008B4E0();
  sub_10008A4F0();

  swift_bridgeObjectRelease();
  if (![self canExtensionOpenDatabase])
  {
    int v65 = (void *)sub_10008B520();
    sub_10008B4C0();
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = v159;
    *(void *)(v66 + 56) = &type metadata for String;
    *(void *)(v66 + 64) = v56;
    *(void *)(v66 + 32) = v51;
    *(void *)(v66 + 40) = v52;
    sub_10008A4F0();

    swift_bridgeObjectRelease();
    uint64_t v67 = (uint64_t)v163;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v189 + 56))(v163, 1, 1, v190);
    uint64_t v68 = (uint64_t)v171;
    sub_10008B2A0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v68, 0, 1, v43);
    uint64_t v69 = (uint64_t)v191;
    sub_10008A160();
    uint64_t v70 = v170;
    sub_10002A7A4(1u, (uint64_t)_swiftEmptyArrayStorage, 0, v67, v69, v68, v170);
    v194(v70);
    uint64_t v71 = type metadata accessor for UpNextEntry;
    uint64_t v72 = v70;
    return sub_100044920(v72, v71);
  }
  uint64_t v163 = (char *)v54;
  uint64_t v170 = v52;
  uint64_t v171 = (char *)v51;
  sub_10001A408(v198);
  WidgetNowPlayingInfo.logInfo()();
  uint64_t v57 = v160;
  sub_10008B2A0();
  uint64_t v58 = v161;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v161, v57, v43);
  int v59 = (*(uint64_t (**)(char *, uint64_t))(v44 + 88))(v58, v43);
  uint64_t v60 = v43;
  if (v59 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v61 = 1;
    uint64_t v62 = v197;
    uint64_t v63 = v171;
    char v64 = v164;
LABEL_7:
    uint64_t v73 = (uint64_t (*)(char *, uint64_t))v162;
    goto LABEL_8;
  }
  uint64_t v62 = v197;
  uint64_t v63 = v171;
  char v64 = v164;
  if (v59 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v61 = 2;
    goto LABEL_7;
  }
  uint64_t v73 = (uint64_t (*)(char *, uint64_t))v162;
  if (v59 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v61 = 4;
    goto LABEL_8;
  }
  if (v59 == enum case for WidgetFamily.systemExtraLarge(_:)) {
    goto LABEL_20;
  }
  int v92 = v58;
  uint64_t v61 = 1;
  if (v59 != enum case for WidgetFamily.accessoryCircular(_:)
    && v59 != enum case for WidgetFamily.accessoryRectangular(_:)
    && v59 != enum case for WidgetFamily.accessoryInline(_:))
  {
    v162(v92, v60);
LABEL_20:
    uint64_t v61 = 6;
  }
LABEL_8:
  uint64_t v74 = v73(v57, v60);
  __chkstk_darwin(v74);
  *(&v141 - 2) = v198;
  *(&v141 - 1) = v62;
  uint64_t v75 = sub_10003D0A0(v61, (uint64_t)sub_100046844, (uint64_t)(&v141 - 4));
  uint64_t v76 = (void *)sub_10008B520();
  uint64_t v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_10008DB20;
  uint64_t v78 = *(void *)(v75 + 16);
  *(void *)(v77 + 56) = &type metadata for Int;
  *(void *)(v77 + 64) = &protocol witness table for Int;
  *(void *)(v77 + 32) = v78;
  *(void *)(v77 + 96) = &type metadata for String;
  *(void *)(v77 + 104) = v56;
  *(void *)(v77 + 72) = v63;
  *(void *)(v77 + 80) = v170;
  swift_bridgeObjectRetain();
  sub_10008B4E0();
  sub_10008A4F0();

  swift_bridgeObjectRelease();
  uint64_t v79 = kMTWidgetArtworkWidth;
  uint64_t v80 = kMTWidgetArtworkHeight;
  uint64_t v81 = v195;
  sub_10008A2C0();
  uint64_t v82 = sub_10008A2F0();
  uint64_t v201 = v82;
  uint64_t v202 = sub_100043970(&qword_1000A1CD0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  uint64_t v83 = sub_1000439B8(&v199);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v82 - 8) + 104))(v83, enum case for Podcasts.widgetNowPlayingArtwork(_:), v82);
  LOBYTE(v82) = sub_10008A2E0();
  sub_10001F160((uint64_t)&v199);
  uint64_t v84 = v196;
  uint64_t v85 = v193;
  if (v82)
  {
    int v86 = *(unsigned __int8 *)(v198 + 16);
    uint64_t v87 = v155;
    sub_100044850(v198, v155, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
    if (v86 == 1)
    {
      sub_100044920(v87, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
    }
    else
    {
      uint64_t v88 = v154;
      sub_1000155B0(v87 + *(int *)(v152 + 40), v154, &qword_1000A1038);
      uint64_t v89 = v189;
      uint64_t v90 = v190;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v189 + 48))(v88, 1, v190) == 1)
      {
        uint64_t v91 = v153;
        sub_10008A160();
        sub_100015614(v88, &qword_1000A1038);
      }
      else
      {
        uint64_t v91 = v153;
        (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v153, v88, v90);
      }
      unsigned __int8 v93 = v191;
      sub_10008A160();
      char v94 = sub_10008A120();
      char v95 = *(void (**)(char *, uint64_t))(v89 + 8);
      v95(v93, v90);
      v95(v91, v90);
      sub_100044920(v155, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
      uint64_t v84 = v196;
      if ((v94 & 1) == 0) {
        goto LABEL_35;
      }
    }
    uint64_t v96 = *(void *)(v75 + 16);
    if (v96)
    {
      uint64_t v97 = v75 + ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80));
      uint64_t v98 = *(void *)(v151 + 72);
      swift_bridgeObjectRetain();
      uint64_t v99 = (void *)v198;
      while (1)
      {
        sub_100044850(v97, (uint64_t)v64, type metadata accessor for UpNextEntry.Episode);
        uint64_t v100 = v99[1];
        if (v100)
        {
          BOOL v101 = *v64 == *v99 && v100 == v64[1];
          if (v101 || (sub_10008B690() & 1) != 0) {
            break;
          }
        }
        sub_100044920((uint64_t)v64, type metadata accessor for UpNextEntry.Episode);
        v97 += v98;
        if (!--v96)
        {
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v102 = v147;
      sub_1000448B8((uint64_t)v64, v147, type metadata accessor for UpNextEntry.Episode);
      uint64_t v103 = v149;
      sub_1000155B0(v102 + *(int *)(v148 + 52), v149, &qword_1000A1040);
      sub_100044920(v102, type metadata accessor for UpNextEntry.Episode);
      uint64_t v104 = sub_10008A340();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 48))(v103, 1, v104) == 1)
      {
        sub_100015614(v103, &qword_1000A1040);
        goto LABEL_35;
      }
      uint64_t v130 = v142;
      sub_10008A320();
      sub_100044920(v103, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      uint64_t v131 = v143;
      sub_10008A360();
      uint64_t v132 = v145;
      uint64_t v134 = v145 + 8;
      uint64_t v133 = *(void (**)(char *, uint64_t))(v145 + 8);
      v133(v130, v150);
      uint64_t v190 = v134;
      uint64_t v191 = (char *)v133;
      uint64_t v135 = v133;
      NSBundle v136 = v144;
      sub_10008A350();
      uint64_t v137 = v150;
      v135(v131, v150);
      uint64_t v138 = v146;
      (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v146, v136, v137);
      uint64_t v199 = sub_10008A2B0();
      sub_10000903C(&qword_1000A1D30);
      sub_100015428(&qword_1000A1D38, &qword_1000A1D30);
      uint64_t v139 = sub_10008A590();
      swift_release();
      uint64_t v199 = v139;
      sub_10000903C(&qword_1000A1D10);
      uint64_t v81 = v195;
      sub_100015428(&qword_1000A1D20, &qword_1000A1D10);
      uint64_t v140 = sub_10008A5A0();
      swift_release();
      ((void (*)(char *, uint64_t))v191)(v138, v137);
      uint64_t v107 = v140;
      goto LABEL_36;
    }
  }
LABEL_35:
  uint64_t v199 = 0;
  sub_10000903C(&qword_1000A1CD8);
  uint64_t v105 = v156;
  sub_10008A580();
  sub_100015428(&qword_1000A1CE0, &qword_1000A1CA8);
  uint64_t v106 = v158;
  uint64_t v107 = sub_10008A5A0();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v105, v106);
LABEL_36:
  uint64_t v199 = v75;
  sub_10000903C(&qword_1000A1878);
  sub_100015428(&qword_1000A1CE8, &qword_1000A1878);
  uint64_t v108 = v172;
  sub_10008A550();
  uint64_t v109 = v166;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v166, v81, v84);
  unint64_t v110 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  uint64_t v111 = swift_allocObject();
  *(void *)(v111 + 16) = v79;
  *(void *)(v111 + 24) = v80;
  (*(void (**)(unint64_t, char *, uint64_t))(v85 + 32))(v111 + v110, v109, v84);
  sub_10008A560();
  sub_10000903C(&qword_1000A1CF0);
  sub_100015428(&qword_1000A1CF8, &qword_1000A1C88);
  sub_100015428(&qword_1000A1D00, &qword_1000A1CF0);
  unint64_t v112 = v173;
  uint64_t v113 = v176;
  sub_10008A600();
  swift_release();
  (*(void (**)(char *, uint64_t))(v174 + 8))(v108, v113);
  sub_100015428(&qword_1000A1D08, &qword_1000A1C90);
  uint64_t v114 = v179;
  uint64_t v115 = v177;
  sub_10008A5E0();
  (*(void (**)(char *, uint64_t))(v175 + 8))(v112, v115);
  uint64_t v199 = v107;
  uint64_t v116 = v169;
  sub_100044850(v198, v169, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  uint64_t v117 = v182;
  uint64_t v118 = v180;
  uint64_t v119 = v184;
  (*(void (**)(char *, uint64_t, uint64_t))(v182 + 16))(v180, v197, v184);
  unint64_t v120 = (*(unsigned __int8 *)(v167 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
  unint64_t v121 = (v168 + *(unsigned __int8 *)(v117 + 80) + v120) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
  uint64_t v122 = swift_allocObject();
  sub_1000448B8(v116, v122 + v120, (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo);
  (*(void (**)(unint64_t, char *, uint64_t))(v117 + 32))(v122 + v121, v118, v119);
  swift_retain();
  sub_10000903C(&qword_1000A1D10);
  sub_100015428(&qword_1000A1D18, &qword_1000A1C98);
  sub_100015428(&qword_1000A1D20, &qword_1000A1D10);
  unint64_t v123 = v185;
  uint64_t v124 = v183;
  sub_10008A5B0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v181 + 8))(v114, v124);
  uint64_t v125 = (void *)swift_allocObject();
  uint64_t v126 = v170;
  v125[2] = v171;
  v125[3] = v126;
  uint64_t v127 = v192;
  v125[4] = v194;
  v125[5] = v127;
  sub_100015428(&qword_1000A1D28, &qword_1000A1CA0);
  swift_retain();
  uint64_t v128 = v187;
  sub_10008A5F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v186 + 8))(v123, v128);
  if (qword_1000A0F88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10008A570();
  swift_endAccess();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v193 + 8))(v195, v196);
  uint64_t v71 = (uint64_t (*)(void))type metadata accessor for WidgetNowPlayingInfo;
  uint64_t v72 = v198;
  return sub_100044920(v72, v71);
}

uint64_t sub_100046398()
{
  uint64_t v1 = sub_10008A2D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100046428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10008A2D0() - 8);
  double v6 = *(double *)(v2 + 16);
  double v7 = *(double *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10003F310(a1, v8, a2, v6, v7);
}

uint64_t sub_1000464B0()
{
  uint64_t v1 = (int *)type metadata accessor for WidgetNowPlayingInfo();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v16 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v17 = sub_10008B2B0();
  uint64_t v3 = *(void *)(v17 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v18 = v0;
  uint64_t v5 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + v1[6];
  uint64_t v7 = sub_10008A170();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v10 = v5 + v1[7];
  if (!v9(v10, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v11 = v5 + v1[10];
  if (!v9(v11, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  }
  uint64_t v12 = (((v2 + 16) & ~v2) + v16 + v4) & ~v4;
  uint64_t v13 = v12 + v15;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v18 + v12, v17);

  return _swift_deallocObject(v18, v13, v2 | v4 | 7);
}

uint64_t sub_100046710@<X0>(uint64_t *a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for WidgetNowPlayingInfo() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  sub_10008B2B0();

  return sub_10003FE10(a1, a2, v3 + v8, a3);
}

uint64_t sub_100046800()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void *sub_100046848(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    a1[10] = a2[10];
    uint64_t v177 = (int *)type metadata accessor for UpNextEntry.Episode(0);
    uint64_t v11 = v177[10];
    __dst = (char *)a1 + v11;
    uint64_t v172 = a1;
    uint64_t v173 = a2;
    uint64_t v12 = (char *)a2 + v11;
    uint64_t v13 = sub_10008A170();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v176 = v15;
    uint64_t v174 = v16;
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000903C(&qword_1000A1038);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v20 = v177;
    uint64_t v21 = v177[11];
    uint64_t v19 = v172;
    uint64_t v22 = (void *)((char *)v172 + v21);
    uint64_t v23 = (void *)((char *)v173 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v177[12];
    uint64_t v26 = (void *)((char *)v172 + v25);
    uint64_t v27 = (void *)((char *)v173 + v25);
    uint64_t v28 = (int *)sub_10008A340();
    __dsta = (void *)*((void *)v28 - 1);
    uint64_t v29 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
    swift_bridgeObjectRetain();
    if (v29(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1040);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v27[1];
      void *v26 = *v27;
      v26[1] = v31;
      int v32 = *((unsigned __int8 *)v27 + 32);
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
        *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
      }
      else
      {
        uint64_t v33 = v27[2];
        uint64_t v34 = v27[3];
        sub_100009080(v33, v34, v32);
        v26[2] = v33;
        v26[3] = v34;
        *((unsigned char *)v26 + 32) = v32;
      }
      *(_OWORD *)(v26 + 5) = *(_OWORD *)(v27 + 5);
      uint64_t v35 = (id *)(v27 + 7);
      int v36 = *((unsigned __int8 *)v27 + 64);
      if (v36 == 255)
      {
        v26[7] = *v35;
        *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
      }
      else
      {
        id v37 = *v35;
        sub_100009098(*v35, *((unsigned char *)v27 + 64));
        v26[7] = v37;
        *((unsigned char *)v26 + 64) = v36;
      }
      uint64_t v38 = (id *)(v27 + 9);
      int v39 = *((unsigned __int8 *)v27 + 80);
      if (v39 == 255)
      {
        v26[9] = *v38;
        *((unsigned char *)v26 + 80) = *((unsigned char *)v27 + 80);
      }
      else
      {
        id v40 = *v38;
        sub_100009098(*v38, *((unsigned char *)v27 + 80));
        v26[9] = v40;
        *((unsigned char *)v26 + 80) = v39;
      }
      uint64_t v41 = (id *)(v27 + 11);
      int v42 = *((unsigned __int8 *)v27 + 96);
      if (v42 == 255)
      {
        v26[11] = *v41;
        *((unsigned char *)v26 + 96) = *((unsigned char *)v27 + 96);
      }
      else
      {
        id v43 = *v41;
        sub_100009098(*v41, *((unsigned char *)v27 + 96));
        v26[11] = v43;
        *((unsigned char *)v26 + 96) = v42;
      }
      uint64_t v44 = (id *)(v27 + 13);
      int v45 = *((unsigned __int8 *)v27 + 112);
      if (v45 == 255)
      {
        v26[13] = *v44;
        *((unsigned char *)v26 + 112) = *((unsigned char *)v27 + 112);
      }
      else
      {
        id v46 = *v44;
        sub_100009098(*v44, *((unsigned char *)v27 + 112));
        v26[13] = v46;
        *((unsigned char *)v26 + 112) = v45;
      }
      uint64_t v47 = (id *)(v27 + 15);
      int v48 = *((unsigned __int8 *)v27 + 128);
      if (v48 == 255)
      {
        v26[15] = *v47;
        *((unsigned char *)v26 + 128) = *((unsigned char *)v27 + 128);
      }
      else
      {
        id v49 = *v47;
        sub_100009098(*v47, *((unsigned char *)v27 + 128));
        v26[15] = v49;
        *((unsigned char *)v26 + 128) = v48;
      }
      uint64_t v20 = v177;
      *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
      uint64_t v50 = v28[11];
      uint64_t v51 = (char *)v26 + v50;
      uint64_t v52 = (char *)v27 + v50;
      uint64_t v53 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v28[12];
      uint64_t v55 = (void *)((char *)v26 + v54);
      unint64_t v56 = (void *)((char *)v27 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      *((unsigned char *)v26 + v28[13]) = *((unsigned char *)v27 + v28[13]);
      *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
      *((unsigned char *)v26 + v28[15]) = *((unsigned char *)v27 + v28[15]);
      uint64_t v58 = v28[16];
      int v59 = (void *)((char *)v26 + v58);
      uint64_t v60 = (void *)((char *)v27 + v58);
      uint64_t v61 = v60[1];
      void *v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(v26, 0, 1, v28);
    }
    uint64_t v63 = v20[13];
    char v64 = (void *)((char *)v172 + v63);
    int v65 = (void *)((char *)v173 + v63);
    if (v29((void *)((char *)v173 + v63), 1, v28))
    {
      uint64_t v66 = sub_10000903C(&qword_1000A1040);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v14;
    }
    else
    {
      uint64_t v68 = v65[1];
      void *v64 = *v65;
      v64[1] = v68;
      int v69 = *((unsigned __int8 *)v65 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = v14;
      if (v69 == 255)
      {
        *((_OWORD *)v64 + 1) = *((_OWORD *)v65 + 1);
        *((unsigned char *)v64 + 32) = *((unsigned char *)v65 + 32);
      }
      else
      {
        uint64_t v70 = v65[2];
        uint64_t v71 = v65[3];
        sub_100009080(v70, v71, v69);
        v64[2] = v70;
        v64[3] = v71;
        *((unsigned char *)v64 + 32) = v69;
      }
      *(_OWORD *)(v64 + 5) = *(_OWORD *)(v65 + 5);
      uint64_t v72 = (id *)(v65 + 7);
      int v73 = *((unsigned __int8 *)v65 + 64);
      if (v73 == 255)
      {
        v64[7] = *v72;
        *((unsigned char *)v64 + 64) = *((unsigned char *)v65 + 64);
      }
      else
      {
        id v74 = *v72;
        sub_100009098(*v72, *((unsigned char *)v65 + 64));
        v64[7] = v74;
        *((unsigned char *)v64 + 64) = v73;
      }
      uint64_t v75 = (id *)(v65 + 9);
      int v76 = *((unsigned __int8 *)v65 + 80);
      if (v76 == 255)
      {
        v64[9] = *v75;
        *((unsigned char *)v64 + 80) = *((unsigned char *)v65 + 80);
      }
      else
      {
        id v77 = *v75;
        sub_100009098(*v75, *((unsigned char *)v65 + 80));
        v64[9] = v77;
        *((unsigned char *)v64 + 80) = v76;
      }
      uint64_t v78 = (id *)(v65 + 11);
      int v79 = *((unsigned __int8 *)v65 + 96);
      if (v79 == 255)
      {
        v64[11] = *v78;
        *((unsigned char *)v64 + 96) = *((unsigned char *)v65 + 96);
      }
      else
      {
        id v80 = *v78;
        sub_100009098(*v78, *((unsigned char *)v65 + 96));
        v64[11] = v80;
        *((unsigned char *)v64 + 96) = v79;
      }
      uint64_t v81 = (id *)(v65 + 13);
      int v82 = *((unsigned __int8 *)v65 + 112);
      if (v82 == 255)
      {
        v64[13] = *v81;
        *((unsigned char *)v64 + 112) = *((unsigned char *)v65 + 112);
      }
      else
      {
        id v83 = *v81;
        sub_100009098(*v81, *((unsigned char *)v65 + 112));
        v64[13] = v83;
        *((unsigned char *)v64 + 112) = v82;
      }
      uint64_t v84 = (id *)(v65 + 15);
      int v85 = *((unsigned __int8 *)v65 + 128);
      if (v85 == 255)
      {
        v64[15] = *v84;
        *((unsigned char *)v64 + 128) = *((unsigned char *)v65 + 128);
      }
      else
      {
        id v86 = *v84;
        sub_100009098(*v84, *((unsigned char *)v65 + 128));
        v64[15] = v86;
        *((unsigned char *)v64 + 128) = v85;
      }
      uint64_t v20 = v177;
      *((unsigned char *)v64 + 129) = *((unsigned char *)v65 + 129);
      uint64_t v87 = v28[11];
      uint64_t v88 = (char *)v64 + v87;
      uint64_t v89 = (char *)v65 + v87;
      uint64_t v90 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      uint64_t v91 = v28[12];
      int v92 = (void *)((char *)v64 + v91);
      unsigned __int8 v93 = (void *)((char *)v65 + v91);
      uint64_t v94 = v93[1];
      void *v92 = *v93;
      v92[1] = v94;
      *((unsigned char *)v64 + v28[13]) = *((unsigned char *)v65 + v28[13]);
      *((unsigned char *)v64 + v28[14]) = *((unsigned char *)v65 + v28[14]);
      *((unsigned char *)v64 + v28[15]) = *((unsigned char *)v65 + v28[15]);
      uint64_t v95 = v28[16];
      uint64_t v96 = (void *)((char *)v64 + v95);
      uint64_t v97 = (void *)((char *)v65 + v95);
      uint64_t v98 = v97[1];
      void *v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99(v64, 0, 1, v28);
    }
    uint64_t v100 = v20[14];
    BOOL v101 = *(void **)((char *)v173 + v100);
    *(void *)((char *)v172 + v100) = v101;
    uint64_t v102 = v20[15];
    uint64_t v103 = (char *)v172 + v102;
    uint64_t v104 = (char *)v173 + v102;
    uint64_t v105 = sub_10008A050();
    uint64_t v106 = *(void *)(v105 - 8);
    uint64_t v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
    id v108 = v101;
    if (v107(v104, 1, v105))
    {
      uint64_t v109 = sub_10000903C(&qword_1000A1048);
      memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
    }
    *((unsigned char *)v172 + v177[16]) = *((unsigned char *)v173 + v177[16]);
    uint64_t v110 = v177[17];
    uint64_t v111 = (char *)v172 + v110;
    unint64_t v112 = (char *)v173 + v110;
    *(void *)uint64_t v111 = *(void *)v112;
    v111[8] = v112[8];
    uint64_t v113 = v177[18];
    uint64_t v114 = (char *)v172 + v113;
    uint64_t v115 = (char *)v173 + v113;
    *(void *)uint64_t v114 = *(void *)v115;
    v114[8] = v115[8];
    uint64_t v116 = v177[19];
    uint64_t v117 = (char *)v172 + v116;
    uint64_t v118 = (char *)v173 + v116;
    if (v176((char *)v173 + v116, 1, v174))
    {
      uint64_t v119 = sub_10000903C(&qword_1000A1038);
      memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v117, v118, v174);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v117, 0, 1, v174);
    }
    uint64_t v120 = v177[20];
    unint64_t v121 = (char *)v172 + v120;
    uint64_t v122 = (char *)v173 + v120;
    if (v176((char *)v173 + v120, 1, v174))
    {
      uint64_t v123 = sub_10000903C(&qword_1000A1038);
      memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v121, v122, v174);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v121, 0, 1, v174);
    }
    uint64_t v124 = v177[21];
    uint64_t v125 = (void *)((char *)v172 + v124);
    uint64_t v126 = (void *)((char *)v173 + v124);
    if (*v126)
    {
      uint64_t v127 = v126[1];
      uint64_t v128 = v126[2];
      void *v125 = *v126;
      v125[1] = v127;
      v125[2] = v128;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
      v125[2] = v126[2];
    }
    uint64_t v129 = v177[22];
    uint64_t v130 = (char *)v172 + v129;
    uint64_t v131 = (char *)v173 + v129;
    uint64_t v132 = sub_10000903C(&qword_1000A1050);
    uint64_t v133 = *(void *)(v132 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
    {
      uint64_t v134 = sub_10000903C(&qword_1000A1058);
      memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      uint64_t v135 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v135(v130, v131, v174);
      v135(&v130[*(int *)(v132 + 36)], &v131[*(int *)(v132 + 36)], v174);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
    }
    NSBundle v136 = (int *)type metadata accessor for WidgetPredictedPlayState();
    uint64_t v137 = v136[5];
    uint64_t v138 = &v130[v137];
    uint64_t v139 = &v131[v137];
    uint64_t v140 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
    uint64_t v141 = v136[6];
    int v142 = &v130[v141];
    uint64_t v143 = &v131[v141];
    uint64_t v144 = sub_10008A4B0();
    uint64_t v145 = *(void *)(v144 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
    {
      uint64_t v146 = sub_10000903C(&qword_1000A1060);
      memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v142, v143, v144);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
    }
    uint64_t v147 = v136[7];
    uint64_t v148 = &v130[v147];
    uint64_t v149 = &v131[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *(void *)uint64_t v148 = *(void *)v149;
    *((void *)v148 + 1) = v150;
    uint64_t v151 = v136[8];
    uint64_t v152 = &v130[v151];
    uint64_t v153 = &v131[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)uint64_t v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    uint64_t v155 = a3[6];
    *(void *)((char *)v172 + a3[5]) = *(void *)((char *)v173 + a3[5]);
    *((unsigned char *)v172 + v155) = *((unsigned char *)v173 + v155);
    uint64_t v156 = a3[7];
    uint64_t v157 = (void *)((char *)v172 + v156);
    uint64_t v158 = (void *)((char *)v173 + v156);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10000903C(&qword_1000A1DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v159 = sub_10008B220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v159 - 8) + 16))(v157, v158, v159);
    }
    else
    {
      void *v157 = *v158;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v160 = a3[8];
    long long v161 = (char *)v172 + v160;
    uint64_t v162 = (char *)v173 + v160;
    uint64_t v163 = *(void *)v162;
    char v164 = v162[8];
    sub_1000090AC(*(void *)v162, v164);
    *(void *)long long v161 = v163;
    v161[8] = v164;
    uint64_t v165 = a3[9];
    uint64_t v166 = (void *)((char *)v172 + v165);
    uint64_t v167 = (void *)((char *)v173 + v165);
    sub_10000903C(&qword_1000A1DE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v168 = sub_10008B1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
    }
    else
    {
      *uint64_t v166 = *v167;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v19;
}

uint64_t sub_1000476C0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v5 = a1 + v4[10];
  uint64_t v6 = sub_10008A170();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v51(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + v4[12];
  uint64_t v9 = sub_10008A340();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v11 = *(unsigned __int8 *)(v8 + 32);
    if (v11 != 255) {
      sub_1000096D4(*(void *)(v8 + 16), *(void *)(v8 + 24), v11);
    }
    int v12 = *(unsigned __int8 *)(v8 + 64);
    if (v12 != 255) {
      sub_1000096EC(*(id *)(v8 + 56), v12);
    }
    int v13 = *(unsigned __int8 *)(v8 + 80);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v8 + 72), v13);
    }
    int v14 = *(unsigned __int8 *)(v8 + 96);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v8 + 88), v14);
    }
    uint64_t v50 = v7;
    int v15 = *(unsigned __int8 *)(v8 + 112);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v8 + 104), v15);
    }
    uint64_t v16 = a2;
    int v17 = *(unsigned __int8 *)(v8 + 128);
    if (v17 != 255) {
      sub_1000096EC(*(id *)(v8 + 120), v17);
    }
    uint64_t v18 = v8 + *(int *)(v9 + 44);
    uint64_t v19 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v16;
    uint64_t v7 = v50;
  }
  uint64_t v20 = a1 + v4[13];
  if (!v10(v20, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v21 = *(unsigned __int8 *)(v20 + 32);
    if (v21 != 255) {
      sub_1000096D4(*(void *)(v20 + 16), *(void *)(v20 + 24), v21);
    }
    int v22 = *(unsigned __int8 *)(v20 + 64);
    if (v22 != 255) {
      sub_1000096EC(*(id *)(v20 + 56), v22);
    }
    int v23 = *(unsigned __int8 *)(v20 + 80);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v20 + 72), v23);
    }
    int v24 = *(unsigned __int8 *)(v20 + 96);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v20 + 88), v24);
    }
    int v25 = *(unsigned __int8 *)(v20 + 112);
    if (v25 != 255) {
      sub_1000096EC(*(id *)(v20 + 104), v25);
    }
    uint64_t v26 = a2;
    int v27 = *(unsigned __int8 *)(v20 + 128);
    if (v27 != 255) {
      sub_1000096EC(*(id *)(v20 + 120), v27);
    }
    uint64_t v28 = v20 + *(int *)(v9 + 44);
    uint64_t v29 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v26;
  }

  uint64_t v30 = a1 + v4[15];
  uint64_t v31 = sub_10008A050();
  uint64_t v32 = *(void *)(v31 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v33 = a1 + v4[19];
  if (!v51(v33, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v33, v6);
  }
  uint64_t v34 = a1 + v4[20];
  if (!v51(v34, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v34, v6);
  }
  if (*(void *)(a1 + v4[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v35 = a1 + v4[22];
  uint64_t v36 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36))
  {
    id v37 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v37(v35, v6);
    v37(v35 + *(int *)(v36 + 36), v6);
  }
  uint64_t v38 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v39 = v35 + *(int *)(v38 + 20);
  uint64_t v40 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  uint64_t v41 = v35 + *(int *)(v38 + 24);
  uint64_t v42 = sub_10008A4B0();
  uint64_t v43 = *(void *)(v42 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = a1 + a2[7];
  sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v45 = sub_10008B220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
  }
  else
  {
    swift_release();
  }
  sub_100009700(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  uint64_t v46 = a1 + a2[9];
  sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = sub_10008B1F0();
    int v48 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8);
    return v48(v46, v47);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100047DDC(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  uint64_t v173 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v10 = v173[10];
  uint64_t v169 = a2;
  uint64_t v170 = a1;
  __dst = (char *)a1 + v10;
  int v11 = (char *)a2 + v10;
  uint64_t v12 = sub_10008A170();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v171 = v15;
  if (v14(v11, 1, v15))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v15);
  }
  int v17 = v173;
  uint64_t v18 = v173[11];
  uint64_t v19 = (void *)((char *)v170 + v18);
  uint64_t v20 = (void *)((char *)v169 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v173[12];
  int v23 = (void *)((char *)v170 + v22);
  int v24 = (void *)((char *)v169 + v22);
  int v25 = (int *)sub_10008A340();
  __dsta = (void *)*((void *)v25 - 1);
  uint64_t v26 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    uint64_t v27 = sub_10000903C(&qword_1000A1040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v24[1];
    void *v23 = *v24;
    v23[1] = v28;
    int v29 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
    }
    else
    {
      uint64_t v30 = v24[2];
      uint64_t v31 = v24[3];
      sub_100009080(v30, v31, v29);
      v23[2] = v30;
      void v23[3] = v31;
      *((unsigned char *)v23 + 32) = v29;
    }
    *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
    uint64_t v32 = (id *)(v24 + 7);
    int v33 = *((unsigned __int8 *)v24 + 64);
    if (v33 == 255)
    {
      v23[7] = *v32;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
    }
    else
    {
      id v34 = *v32;
      sub_100009098(*v32, *((unsigned char *)v24 + 64));
      v23[7] = v34;
      *((unsigned char *)v23 + 64) = v33;
    }
    uint64_t v35 = (id *)(v24 + 9);
    int v36 = *((unsigned __int8 *)v24 + 80);
    if (v36 == 255)
    {
      v23[9] = *v35;
      *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
    }
    else
    {
      id v37 = *v35;
      sub_100009098(*v35, *((unsigned char *)v24 + 80));
      v23[9] = v37;
      *((unsigned char *)v23 + 80) = v36;
    }
    uint64_t v38 = (id *)(v24 + 11);
    int v39 = *((unsigned __int8 *)v24 + 96);
    if (v39 == 255)
    {
      v23[11] = *v38;
      *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
    }
    else
    {
      id v40 = *v38;
      sub_100009098(*v38, *((unsigned char *)v24 + 96));
      v23[11] = v40;
      *((unsigned char *)v23 + 96) = v39;
    }
    uint64_t v41 = (id *)(v24 + 13);
    int v42 = *((unsigned __int8 *)v24 + 112);
    if (v42 == 255)
    {
      v23[13] = *v41;
      *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_100009098(*v41, *((unsigned char *)v24 + 112));
      v23[13] = v43;
      *((unsigned char *)v23 + 112) = v42;
    }
    uint64_t v44 = (id *)(v24 + 15);
    int v45 = *((unsigned __int8 *)v24 + 128);
    if (v45 == 255)
    {
      v23[15] = *v44;
      *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_100009098(*v44, *((unsigned char *)v24 + 128));
      v23[15] = v46;
      *((unsigned char *)v23 + 128) = v45;
    }
    int v17 = v173;
    *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
    uint64_t v47 = v25[11];
    int v48 = (char *)v23 + v47;
    id v49 = (char *)v24 + v47;
    uint64_t v50 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v25[12];
    uint64_t v52 = (void *)((char *)v23 + v51);
    uint64_t v53 = (void *)((char *)v24 + v51);
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
    *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
    *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
    uint64_t v55 = v25[16];
    unint64_t v56 = (void *)((char *)v23 + v55);
    uint64_t v57 = (void *)((char *)v24 + v55);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    int v59 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v23, 0, 1, v25);
  }
  uint64_t v60 = v17[13];
  uint64_t v61 = (void *)((char *)v170 + v60);
  uint64_t v62 = (void *)((char *)v169 + v60);
  if (v26((void *)((char *)v169 + v60), 1, v25))
  {
    uint64_t v63 = sub_10000903C(&qword_1000A1040);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    uint64_t v64 = v13;
  }
  else
  {
    uint64_t v65 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v65;
    int v66 = *((unsigned __int8 *)v62 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = v13;
    if (v66 == 255)
    {
      *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
      *((unsigned char *)v61 + 32) = *((unsigned char *)v62 + 32);
    }
    else
    {
      uint64_t v67 = v62[2];
      uint64_t v68 = v62[3];
      sub_100009080(v67, v68, v66);
      v61[2] = v67;
      v61[3] = v68;
      *((unsigned char *)v61 + 32) = v66;
    }
    *(_OWORD *)(v61 + 5) = *(_OWORD *)(v62 + 5);
    int v69 = (id *)(v62 + 7);
    int v70 = *((unsigned __int8 *)v62 + 64);
    if (v70 == 255)
    {
      v61[7] = *v69;
      *((unsigned char *)v61 + 64) = *((unsigned char *)v62 + 64);
    }
    else
    {
      id v71 = *v69;
      sub_100009098(*v69, *((unsigned char *)v62 + 64));
      v61[7] = v71;
      *((unsigned char *)v61 + 64) = v70;
    }
    uint64_t v72 = (id *)(v62 + 9);
    int v73 = *((unsigned __int8 *)v62 + 80);
    if (v73 == 255)
    {
      v61[9] = *v72;
      *((unsigned char *)v61 + 80) = *((unsigned char *)v62 + 80);
    }
    else
    {
      id v74 = *v72;
      sub_100009098(*v72, *((unsigned char *)v62 + 80));
      v61[9] = v74;
      *((unsigned char *)v61 + 80) = v73;
    }
    uint64_t v75 = (id *)(v62 + 11);
    int v76 = *((unsigned __int8 *)v62 + 96);
    if (v76 == 255)
    {
      v61[11] = *v75;
      *((unsigned char *)v61 + 96) = *((unsigned char *)v62 + 96);
    }
    else
    {
      id v77 = *v75;
      sub_100009098(*v75, *((unsigned char *)v62 + 96));
      v61[11] = v77;
      *((unsigned char *)v61 + 96) = v76;
    }
    uint64_t v78 = (id *)(v62 + 13);
    int v79 = *((unsigned __int8 *)v62 + 112);
    if (v79 == 255)
    {
      v61[13] = *v78;
      *((unsigned char *)v61 + 112) = *((unsigned char *)v62 + 112);
    }
    else
    {
      id v80 = *v78;
      sub_100009098(*v78, *((unsigned char *)v62 + 112));
      v61[13] = v80;
      *((unsigned char *)v61 + 112) = v79;
    }
    uint64_t v81 = (id *)(v62 + 15);
    int v82 = *((unsigned __int8 *)v62 + 128);
    if (v82 == 255)
    {
      v61[15] = *v81;
      *((unsigned char *)v61 + 128) = *((unsigned char *)v62 + 128);
    }
    else
    {
      id v83 = *v81;
      sub_100009098(*v81, *((unsigned char *)v62 + 128));
      v61[15] = v83;
      *((unsigned char *)v61 + 128) = v82;
    }
    int v17 = v173;
    *((unsigned char *)v61 + 129) = *((unsigned char *)v62 + 129);
    uint64_t v84 = v25[11];
    int v85 = (char *)v61 + v84;
    id v86 = (char *)v62 + v84;
    uint64_t v87 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    uint64_t v88 = v25[12];
    uint64_t v89 = (void *)((char *)v61 + v88);
    uint64_t v90 = (void *)((char *)v62 + v88);
    uint64_t v91 = v90[1];
    void *v89 = *v90;
    v89[1] = v91;
    *((unsigned char *)v61 + v25[13]) = *((unsigned char *)v62 + v25[13]);
    *((unsigned char *)v61 + v25[14]) = *((unsigned char *)v62 + v25[14]);
    *((unsigned char *)v61 + v25[15]) = *((unsigned char *)v62 + v25[15]);
    uint64_t v92 = v25[16];
    unsigned __int8 v93 = (void *)((char *)v61 + v92);
    uint64_t v94 = (void *)((char *)v62 + v92);
    uint64_t v95 = v94[1];
    void *v93 = *v94;
    v93[1] = v95;
    uint64_t v96 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96(v61, 0, 1, v25);
  }
  uint64_t v97 = v17[14];
  uint64_t v98 = *(void **)((char *)v169 + v97);
  *(void *)((char *)v170 + v97) = v98;
  uint64_t v99 = v17[15];
  uint64_t v100 = (char *)v170 + v99;
  BOOL v101 = (char *)v169 + v99;
  uint64_t v102 = sub_10008A050();
  uint64_t v103 = *(void *)(v102 - 8);
  uint64_t v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
  id v105 = v98;
  if (v104(v101, 1, v102))
  {
    uint64_t v106 = sub_10000903C(&qword_1000A1048);
    memcpy(v100, v101, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  *((unsigned char *)v170 + v173[16]) = *((unsigned char *)v169 + v173[16]);
  uint64_t v107 = v173[17];
  id v108 = (char *)v170 + v107;
  uint64_t v109 = (char *)v169 + v107;
  *(void *)id v108 = *(void *)v109;
  v108[8] = v109[8];
  uint64_t v110 = v173[18];
  uint64_t v111 = (char *)v170 + v110;
  unint64_t v112 = (char *)v169 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  v111[8] = v112[8];
  uint64_t v113 = v173[19];
  uint64_t v114 = (char *)v170 + v113;
  uint64_t v115 = (char *)v169 + v113;
  if (v14((char *)v169 + v113, 1, v171))
  {
    uint64_t v116 = sub_10000903C(&qword_1000A1038);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v114, v115, v171);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v114, 0, 1, v171);
  }
  uint64_t v117 = v173[20];
  uint64_t v118 = (char *)v170 + v117;
  uint64_t v119 = (char *)v169 + v117;
  if (v14((char *)v169 + v117, 1, v171))
  {
    uint64_t v120 = sub_10000903C(&qword_1000A1038);
    memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v118, v119, v171);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v171);
  }
  uint64_t v121 = v173[21];
  uint64_t v122 = (void *)((char *)v170 + v121);
  uint64_t v123 = (void *)((char *)v169 + v121);
  if (*v123)
  {
    uint64_t v124 = v123[1];
    uint64_t v125 = v123[2];
    void *v122 = *v123;
    v122[1] = v124;
    v122[2] = v125;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    v122[2] = v123[2];
  }
  uint64_t v126 = v173[22];
  uint64_t v127 = (char *)v170 + v126;
  uint64_t v128 = (char *)v169 + v126;
  uint64_t v129 = sub_10000903C(&qword_1000A1050);
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = sub_10000903C(&qword_1000A1058);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v132(v127, v128, v171);
    v132(&v127[*(int *)(v129 + 36)], &v128[*(int *)(v129 + 36)], v171);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  uint64_t v133 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v134 = v133[5];
  uint64_t v135 = &v127[v134];
  NSBundle v136 = &v128[v134];
  uint64_t v137 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
  uint64_t v138 = v133[6];
  uint64_t v139 = &v127[v138];
  uint64_t v140 = &v128[v138];
  uint64_t v141 = sub_10008A4B0();
  uint64_t v142 = *(void *)(v141 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
  {
    uint64_t v143 = sub_10000903C(&qword_1000A1060);
    memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  }
  uint64_t v144 = v133[7];
  uint64_t v145 = &v127[v144];
  uint64_t v146 = &v128[v144];
  uint64_t v147 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v147;
  uint64_t v148 = v133[8];
  uint64_t v149 = &v127[v148];
  uint64_t v150 = &v128[v148];
  uint64_t v151 = *((void *)v150 + 1);
  *(void *)uint64_t v149 = *(void *)v150;
  *((void *)v149 + 1) = v151;
  uint64_t v152 = a3[6];
  *(void *)((char *)v170 + a3[5]) = *(void *)((char *)v169 + a3[5]);
  *((unsigned char *)v170 + v152) = *((unsigned char *)v169 + v152);
  uint64_t v153 = a3[7];
  uint64_t v154 = (void *)((char *)v170 + v153);
  uint64_t v155 = (void *)((char *)v169 + v153);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v156 = sub_10008B220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v156 - 8) + 16))(v154, v155, v156);
  }
  else
  {
    *uint64_t v154 = *v155;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v157 = a3[8];
  uint64_t v158 = (char *)v170 + v157;
  uint64_t v159 = (char *)v169 + v157;
  uint64_t v160 = *(void *)v159;
  char v161 = v159[8];
  sub_1000090AC(*(void *)v159, v161);
  *(void *)uint64_t v158 = v160;
  v158[8] = v161;
  uint64_t v162 = a3[9];
  uint64_t v163 = (void *)((char *)v170 + v162);
  char v164 = (void *)((char *)v169 + v162);
  sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v165 = sub_10008B1F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v165 - 8) + 16))(v163, v164, v165);
  }
  else
  {
    void *v163 = *v164;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return v170;
}

void *sub_100048BFC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008A170();
  uint64_t v328 = *(void *)(v10 - 8);
  int v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v328 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  v326 = a3;
  v324 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v328 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v328 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v328 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v328 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = v6[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  int v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[12];
  uint64_t v19 = (uint64_t)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_10008A340();
  uint64_t v323 = *((void *)v21 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v323 + 48);
  int v23 = v22(v19, 1, v21);
  int v24 = v22((uint64_t)v20, 1, v21);
  v329 = a2;
  uint64_t v325 = v10;
  if (!v23)
  {
    if (!v24)
    {
      v322 = v22;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = (long long *)(v19 + 16);
      uint64_t v30 = (long long *)(v20 + 16);
      int v31 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v31 == 255)
        {
          long long v72 = *v30;
          *(unsigned char *)(v19 + 32) = v20[32];
          *int v29 = v72;
        }
        else
        {
          uint64_t v69 = *((void *)v20 + 2);
          uint64_t v70 = *((void *)v20 + 3);
          sub_100009080(v69, v70, v20[32]);
          *(void *)(v19 + 16) = v69;
          *(void *)(v19 + 24) = v70;
          *(unsigned char *)(v19 + 32) = v31;
        }
      }
      else if (v31 == 255)
      {
        sub_10000BE14(v19 + 16);
        char v71 = v20[32];
        *int v29 = *v30;
        *(unsigned char *)(v19 + 32) = v71;
      }
      else
      {
        uint64_t v33 = *((void *)v20 + 2);
        uint64_t v32 = *((void *)v20 + 3);
        sub_100009080(v33, v32, v20[32]);
        uint64_t v34 = *(void *)(v19 + 16);
        uint64_t v35 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v33;
        *(void *)(v19 + 24) = v32;
        unsigned __int8 v36 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v31;
        sub_1000096D4(v34, v35, v36);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v73 = (void **)(v19 + 56);
      id v74 = (void **)(v20 + 56);
      int v75 = v20[64];
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v75 == 255)
        {
          uint64_t v81 = *v74;
          *(unsigned char *)(v19 + 64) = v20[64];
          *int v73 = v81;
        }
        else
        {
          int v79 = *v74;
          sub_100009098(v79, v20[64]);
          *(void *)(v19 + 56) = v79;
          *(unsigned char *)(v19 + 64) = v75;
        }
      }
      else if (v75 == 255)
      {
        sub_10000BE68(v19 + 56);
        char v80 = v20[64];
        *int v73 = *v74;
        *(unsigned char *)(v19 + 64) = v80;
      }
      else
      {
        int v76 = *v74;
        sub_100009098(v76, v20[64]);
        id v77 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v76;
        char v78 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v75;
        sub_1000096EC(v77, v78);
      }
      int v82 = (void **)(v19 + 72);
      id v83 = (void **)(v20 + 72);
      int v84 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v84 == 255)
        {
          uint64_t v90 = *v83;
          *(unsigned char *)(v19 + 80) = v20[80];
          *int v82 = v90;
        }
        else
        {
          uint64_t v88 = *v83;
          sub_100009098(v88, v20[80]);
          *(void *)(v19 + 72) = v88;
          *(unsigned char *)(v19 + 80) = v84;
        }
      }
      else if (v84 == 255)
      {
        sub_10000BE68(v19 + 72);
        char v89 = v20[80];
        *int v82 = *v83;
        *(unsigned char *)(v19 + 80) = v89;
      }
      else
      {
        int v85 = *v83;
        sub_100009098(v85, v20[80]);
        id v86 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v85;
        char v87 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v84;
        sub_1000096EC(v86, v87);
      }
      uint64_t v91 = (void **)(v19 + 88);
      uint64_t v92 = (void **)(v20 + 88);
      int v93 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v93 == 255)
        {
          uint64_t v99 = *v92;
          *(unsigned char *)(v19 + 96) = v20[96];
          *uint64_t v91 = v99;
        }
        else
        {
          uint64_t v97 = *v92;
          sub_100009098(v97, v20[96]);
          *(void *)(v19 + 88) = v97;
          *(unsigned char *)(v19 + 96) = v93;
        }
      }
      else if (v93 == 255)
      {
        sub_10000BE68(v19 + 88);
        char v98 = v20[96];
        *uint64_t v91 = *v92;
        *(unsigned char *)(v19 + 96) = v98;
      }
      else
      {
        uint64_t v94 = *v92;
        sub_100009098(v94, v20[96]);
        uint64_t v95 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v94;
        char v96 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v93;
        sub_1000096EC(v95, v96);
      }
      uint64_t v100 = (void **)(v19 + 104);
      BOOL v101 = (void **)(v20 + 104);
      int v102 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v102 == 255)
        {
          id v108 = *v101;
          *(unsigned char *)(v19 + 112) = v20[112];
          *uint64_t v100 = v108;
        }
        else
        {
          uint64_t v106 = *v101;
          sub_100009098(v106, v20[112]);
          *(void *)(v19 + 104) = v106;
          *(unsigned char *)(v19 + 112) = v102;
        }
      }
      else if (v102 == 255)
      {
        sub_10000BE68(v19 + 104);
        char v107 = v20[112];
        *uint64_t v100 = *v101;
        *(unsigned char *)(v19 + 112) = v107;
      }
      else
      {
        uint64_t v103 = *v101;
        sub_100009098(v103, v20[112]);
        uint64_t v104 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v103;
        char v105 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v102;
        sub_1000096EC(v104, v105);
      }
      uint64_t v109 = (void **)(v19 + 120);
      uint64_t v110 = (void **)(v20 + 120);
      int v111 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v111 == 255)
        {
          uint64_t v117 = *v110;
          *(unsigned char *)(v19 + 128) = v20[128];
          *uint64_t v109 = v117;
        }
        else
        {
          uint64_t v115 = *v110;
          sub_100009098(v115, v20[128]);
          *(void *)(v19 + 120) = v115;
          *(unsigned char *)(v19 + 128) = v111;
        }
      }
      else if (v111 == 255)
      {
        sub_10000BE68(v19 + 120);
        char v116 = v20[128];
        *uint64_t v109 = *v110;
        *(unsigned char *)(v19 + 128) = v116;
      }
      else
      {
        unint64_t v112 = *v110;
        sub_100009098(v112, v20[128]);
        uint64_t v113 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v112;
        char v114 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v111;
        sub_1000096EC(v113, v114);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v118 = v21[11];
      uint64_t v119 = v19 + v118;
      uint64_t v120 = &v20[v118];
      uint64_t v121 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
      uint64_t v122 = v21[12];
      uint64_t v123 = (void *)(v19 + v122);
      uint64_t v124 = &v20[v122];
      *uint64_t v123 = *(void *)v124;
      v123[1] = *((void *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v125 = v21[16];
      uint64_t v126 = (void *)(v19 + v125);
      uint64_t v127 = &v20[v125];
      void *v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_100050DAC(v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_13:
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_76;
  }
  if (v24) {
    goto LABEL_13;
  }
  v322 = v22;
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v25 = v20[32];
  swift_bridgeObjectRetain();
  if (v25 == 255)
  {
    long long v37 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v37;
  }
  else
  {
    uint64_t v26 = *((void *)v20 + 2);
    uint64_t v27 = *((void *)v20 + 3);
    sub_100009080(v26, v27, v25);
    *(void *)(v19 + 16) = v26;
    *(void *)(v19 + 24) = v27;
    *(unsigned char *)(v19 + 32) = v25;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v38 = (id *)(v20 + 56);
  int v39 = v20[64];
  if (v39 == 255)
  {
    id v41 = *v38;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v41;
  }
  else
  {
    id v40 = *v38;
    sub_100009098(*v38, v20[64]);
    *(void *)(v19 + 56) = v40;
    *(unsigned char *)(v19 + 64) = v39;
  }
  int v42 = (id *)(v20 + 72);
  int v43 = v20[80];
  if (v43 == 255)
  {
    id v45 = *v42;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v45;
  }
  else
  {
    id v44 = *v42;
    sub_100009098(*v42, v20[80]);
    *(void *)(v19 + 72) = v44;
    *(unsigned char *)(v19 + 80) = v43;
  }
  id v46 = (id *)(v20 + 88);
  int v47 = v20[96];
  if (v47 == 255)
  {
    id v49 = *v46;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v49;
  }
  else
  {
    id v48 = *v46;
    sub_100009098(*v46, v20[96]);
    *(void *)(v19 + 88) = v48;
    *(unsigned char *)(v19 + 96) = v47;
  }
  uint64_t v50 = (id *)(v20 + 104);
  int v51 = v20[112];
  if (v51 == 255)
  {
    id v53 = *v50;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v53;
  }
  else
  {
    id v52 = *v50;
    sub_100009098(*v50, v20[112]);
    *(void *)(v19 + 104) = v52;
    *(unsigned char *)(v19 + 112) = v51;
  }
  uint64_t v54 = (id *)(v20 + 120);
  int v55 = v20[128];
  if (v55 == 255)
  {
    id v57 = *v54;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v57;
  }
  else
  {
    id v56 = *v54;
    sub_100009098(*v54, v20[128]);
    *(void *)(v19 + 120) = v56;
    *(unsigned char *)(v19 + 128) = v55;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v58 = v21[11];
  uint64_t v59 = v19 + v58;
  uint64_t v60 = &v20[v58];
  uint64_t v61 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  uint64_t v62 = v21[12];
  uint64_t v63 = (void *)(v19 + v62);
  uint64_t v64 = &v20[v62];
  *uint64_t v63 = *(void *)v64;
  v63[1] = *((void *)v64 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v65 = v21[16];
  int v66 = (void *)(v19 + v65);
  uint64_t v67 = &v20[v65];
  *int v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  uint64_t v68 = *(void (**)(uint64_t, void, uint64_t, int *))(v323 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v19, 0, 1, v21);
LABEL_75:
  uint64_t v22 = v322;
LABEL_76:
  uint64_t v128 = v6[13];
  uint64_t v129 = (uint64_t)a1 + v128;
  uint64_t v130 = (char *)a2 + v128;
  int v131 = v22((uint64_t)a1 + v128, 1, v21);
  uint64_t v132 = (uint64_t (*)(char *, uint64_t, int *))v22;
  int v133 = v131;
  int v134 = v132(v130, 1, v21);
  if (v133)
  {
    if (!v134)
    {
      *(void *)uint64_t v129 = *(void *)v130;
      *(void *)(v129 + 8) = *((void *)v130 + 1);
      int v135 = v130[32];
      swift_bridgeObjectRetain();
      if (v135 == 255)
      {
        long long v147 = *((_OWORD *)v130 + 1);
        *(unsigned char *)(v129 + 32) = v130[32];
        *(_OWORD *)(v129 + 16) = v147;
      }
      else
      {
        uint64_t v136 = *((void *)v130 + 2);
        uint64_t v137 = *((void *)v130 + 3);
        sub_100009080(v136, v137, v135);
        *(void *)(v129 + 16) = v136;
        *(void *)(v129 + 24) = v137;
        *(unsigned char *)(v129 + 32) = v135;
      }
      *(void *)(v129 + 40) = *((void *)v130 + 5);
      *(void *)(v129 + 48) = *((void *)v130 + 6);
      uint64_t v148 = (id *)(v130 + 56);
      int v149 = v130[64];
      if (v149 == 255)
      {
        id v151 = *v148;
        *(unsigned char *)(v129 + 64) = v130[64];
        *(void *)(v129 + 56) = v151;
      }
      else
      {
        id v150 = *v148;
        sub_100009098(*v148, v130[64]);
        *(void *)(v129 + 56) = v150;
        *(unsigned char *)(v129 + 64) = v149;
      }
      uint64_t v152 = (id *)(v130 + 72);
      int v153 = v130[80];
      if (v153 == 255)
      {
        id v155 = *v152;
        *(unsigned char *)(v129 + 80) = v130[80];
        *(void *)(v129 + 72) = v155;
      }
      else
      {
        id v154 = *v152;
        sub_100009098(*v152, v130[80]);
        *(void *)(v129 + 72) = v154;
        *(unsigned char *)(v129 + 80) = v153;
      }
      uint64_t v156 = (id *)(v130 + 88);
      int v157 = v130[96];
      if (v157 == 255)
      {
        id v159 = *v156;
        *(unsigned char *)(v129 + 96) = v130[96];
        *(void *)(v129 + 88) = v159;
      }
      else
      {
        id v158 = *v156;
        sub_100009098(*v156, v130[96]);
        *(void *)(v129 + 88) = v158;
        *(unsigned char *)(v129 + 96) = v157;
      }
      uint64_t v160 = (id *)(v130 + 104);
      int v161 = v130[112];
      if (v161 == 255)
      {
        id v163 = *v160;
        *(unsigned char *)(v129 + 112) = v130[112];
        *(void *)(v129 + 104) = v163;
      }
      else
      {
        id v162 = *v160;
        sub_100009098(*v160, v130[112]);
        *(void *)(v129 + 104) = v162;
        *(unsigned char *)(v129 + 112) = v161;
      }
      char v164 = (id *)(v130 + 120);
      int v165 = v130[128];
      if (v165 == 255)
      {
        id v167 = *v164;
        *(unsigned char *)(v129 + 128) = v130[128];
        *(void *)(v129 + 120) = v167;
      }
      else
      {
        id v166 = *v164;
        sub_100009098(*v164, v130[128]);
        *(void *)(v129 + 120) = v166;
        *(unsigned char *)(v129 + 128) = v165;
      }
      *(unsigned char *)(v129 + 129) = v130[129];
      uint64_t v168 = v21[11];
      uint64_t v169 = v129 + v168;
      uint64_t v170 = &v130[v168];
      uint64_t v171 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      uint64_t v172 = v21[12];
      uint64_t v173 = (void *)(v129 + v172);
      uint64_t v174 = &v130[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
      *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
      *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
      uint64_t v175 = v21[16];
      uint64_t v176 = (void *)(v129 + v175);
      uint64_t v177 = &v130[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      uint64_t v178 = *(void (**)(uint64_t, void, uint64_t, int *))(v323 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178(v129, 0, 1, v21);
      goto LABEL_143;
    }
LABEL_82:
    uint64_t v138 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v129, v130, *(void *)(*(void *)(v138 - 8) + 64));
    goto LABEL_143;
  }
  if (v134)
  {
    sub_100050DAC(v129, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_82;
  }
  *(void *)uint64_t v129 = *(void *)v130;
  *(void *)(v129 + 8) = *((void *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v139 = (long long *)(v129 + 16);
  uint64_t v140 = (long long *)(v130 + 16);
  int v141 = v130[32];
  if (*(unsigned __int8 *)(v129 + 32) == 255)
  {
    if (v141 == 255)
    {
      long long v182 = *v140;
      *(unsigned char *)(v129 + 32) = v130[32];
      long long *v139 = v182;
    }
    else
    {
      uint64_t v179 = *((void *)v130 + 2);
      uint64_t v180 = *((void *)v130 + 3);
      sub_100009080(v179, v180, v130[32]);
      *(void *)(v129 + 16) = v179;
      *(void *)(v129 + 24) = v180;
      *(unsigned char *)(v129 + 32) = v141;
    }
  }
  else if (v141 == 255)
  {
    sub_10000BE14(v129 + 16);
    char v181 = v130[32];
    long long *v139 = *v140;
    *(unsigned char *)(v129 + 32) = v181;
  }
  else
  {
    uint64_t v142 = *((void *)v130 + 2);
    uint64_t v143 = *((void *)v130 + 3);
    sub_100009080(v142, v143, v130[32]);
    uint64_t v144 = *(void *)(v129 + 16);
    uint64_t v145 = *(void *)(v129 + 24);
    *(void *)(v129 + 16) = v142;
    *(void *)(v129 + 24) = v143;
    unsigned __int8 v146 = *(unsigned char *)(v129 + 32);
    *(unsigned char *)(v129 + 32) = v141;
    sub_1000096D4(v144, v145, v146);
  }
  *(void *)(v129 + 40) = *((void *)v130 + 5);
  *(void *)(v129 + 48) = *((void *)v130 + 6);
  uint64_t v183 = (void **)(v129 + 56);
  uint64_t v184 = (void **)(v130 + 56);
  int v185 = v130[64];
  if (*(unsigned __int8 *)(v129 + 64) == 255)
  {
    if (v185 == 255)
    {
      uint64_t v191 = *v184;
      *(unsigned char *)(v129 + 64) = v130[64];
      *uint64_t v183 = v191;
    }
    else
    {
      uint64_t v189 = *v184;
      sub_100009098(v189, v130[64]);
      *(void *)(v129 + 56) = v189;
      *(unsigned char *)(v129 + 64) = v185;
    }
  }
  else if (v185 == 255)
  {
    sub_10000BE68(v129 + 56);
    char v190 = v130[64];
    *uint64_t v183 = *v184;
    *(unsigned char *)(v129 + 64) = v190;
  }
  else
  {
    uint64_t v186 = *v184;
    sub_100009098(v186, v130[64]);
    uint64_t v187 = *(void **)(v129 + 56);
    *(void *)(v129 + 56) = v186;
    char v188 = *(unsigned char *)(v129 + 64);
    *(unsigned char *)(v129 + 64) = v185;
    sub_1000096EC(v187, v188);
  }
  uint64_t v192 = (void **)(v129 + 72);
  uint64_t v193 = (void **)(v130 + 72);
  int v194 = v130[80];
  if (*(unsigned __int8 *)(v129 + 80) == 255)
  {
    if (v194 == 255)
    {
      unint64_t v200 = *v193;
      *(unsigned char *)(v129 + 80) = v130[80];
      char *v192 = v200;
    }
    else
    {
      uint64_t v198 = *v193;
      sub_100009098(v198, v130[80]);
      *(void *)(v129 + 72) = v198;
      *(unsigned char *)(v129 + 80) = v194;
    }
  }
  else if (v194 == 255)
  {
    sub_10000BE68(v129 + 72);
    char v199 = v130[80];
    char *v192 = *v193;
    *(unsigned char *)(v129 + 80) = v199;
  }
  else
  {
    uint64_t v195 = *v193;
    sub_100009098(v195, v130[80]);
    uint64_t v196 = *(void **)(v129 + 72);
    *(void *)(v129 + 72) = v195;
    char v197 = *(unsigned char *)(v129 + 80);
    *(unsigned char *)(v129 + 80) = v194;
    sub_1000096EC(v196, v197);
  }
  uint64_t v201 = (void **)(v129 + 88);
  uint64_t v202 = (void **)(v130 + 88);
  int v203 = v130[96];
  if (*(unsigned __int8 *)(v129 + 96) == 255)
  {
    if (v203 == 255)
    {
      uint64_t v209 = *v202;
      *(unsigned char *)(v129 + 96) = v130[96];
      uint64_t *v201 = v209;
    }
    else
    {
      Swift::String v207 = *v202;
      sub_100009098(v207, v130[96]);
      *(void *)(v129 + 88) = v207;
      *(unsigned char *)(v129 + 96) = v203;
    }
  }
  else if (v203 == 255)
  {
    sub_10000BE68(v129 + 88);
    char v208 = v130[96];
    uint64_t *v201 = *v202;
    *(unsigned char *)(v129 + 96) = v208;
  }
  else
  {
    Swift::String v204 = *v202;
    sub_100009098(v204, v130[96]);
    uint64_t v205 = *(void **)(v129 + 88);
    *(void *)(v129 + 88) = v204;
    char v206 = *(unsigned char *)(v129 + 96);
    *(unsigned char *)(v129 + 96) = v203;
    sub_1000096EC(v205, v206);
  }
  uint64_t v210 = (void **)(v129 + 104);
  uint64_t v211 = (void **)(v130 + 104);
  int v212 = v130[112];
  if (*(unsigned __int8 *)(v129 + 112) == 255)
  {
    if (v212 == 255)
    {
      id v218 = *v211;
      *(unsigned char *)(v129 + 112) = v130[112];
      *uint64_t v210 = v218;
    }
    else
    {
      id v216 = *v211;
      sub_100009098(v216, v130[112]);
      *(void *)(v129 + 104) = v216;
      *(unsigned char *)(v129 + 112) = v212;
    }
  }
  else if (v212 == 255)
  {
    sub_10000BE68(v129 + 104);
    char v217 = v130[112];
    *uint64_t v210 = *v211;
    *(unsigned char *)(v129 + 112) = v217;
  }
  else
  {
    uint64_t v213 = *v211;
    sub_100009098(v213, v130[112]);
    uint64_t v214 = *(void **)(v129 + 104);
    *(void *)(v129 + 104) = v213;
    char v215 = *(unsigned char *)(v129 + 112);
    *(unsigned char *)(v129 + 112) = v212;
    sub_1000096EC(v214, v215);
  }
  unsigned __int8 v219 = (void **)(v129 + 120);
  Swift::String v220 = (void **)(v130 + 120);
  int v221 = v130[128];
  if (*(unsigned __int8 *)(v129 + 128) == 255)
  {
    if (v221 == 255)
    {
      id v227 = *v220;
      *(unsigned char *)(v129 + 128) = v130[128];
      id *v219 = v227;
    }
    else
    {
      Swift::String v225 = *v220;
      sub_100009098(v225, v130[128]);
      *(void *)(v129 + 120) = v225;
      *(unsigned char *)(v129 + 128) = v221;
    }
  }
  else if (v221 == 255)
  {
    sub_10000BE68(v129 + 120);
    char v226 = v130[128];
    id *v219 = *v220;
    *(unsigned char *)(v129 + 128) = v226;
  }
  else
  {
    Swift::String_optional v222 = *v220;
    sub_100009098(v222, v130[128]);
    Swift::String_optional v223 = *(void **)(v129 + 120);
    *(void *)(v129 + 120) = v222;
    char v224 = *(unsigned char *)(v129 + 128);
    *(unsigned char *)(v129 + 128) = v221;
    sub_1000096EC(v223, v224);
  }
  *(unsigned char *)(v129 + 129) = v130[129];
  uint64_t v228 = v21[11];
  uint64_t v229 = v129 + v228;
  v230 = &v130[v228];
  uint64_t v231 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v229, v230, v231);
  uint64_t v232 = v21[12];
  v233 = (void *)(v129 + v232);
  v234 = &v130[v232];
  void *v233 = *(void *)v234;
  v233[1] = *((void *)v234 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
  *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
  *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
  uint64_t v235 = v21[16];
  v236 = (void *)(v129 + v235);
  v237 = &v130[v235];
  void *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v238 = v6[14];
  v239 = *(void **)((char *)a1 + v238);
  v240 = *(void **)((char *)a2 + v238);
  *(void *)((char *)a1 + v238) = v240;
  id v241 = v240;

  uint64_t v242 = v6[15];
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  uint64_t v245 = sub_10008A050();
  uint64_t v246 = *(void *)(v245 - 8);
  v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  LODWORD(v239) = v247(v243, 1, v245);
  int v248 = v247(v244, 1, v245);
  if (v239)
  {
    if (!v248)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v248)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_148:
    uint64_t v249 = sub_10000903C(&qword_1000A1048);
    memcpy(v243, v244, *(void *)(*(void *)(v249 - 8) + 64));
    goto LABEL_149;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
LABEL_149:
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  uint64_t v250 = v6[17];
  uint64_t v251 = (char *)a1 + v250;
  v252 = (char *)a2 + v250;
  uint64_t v253 = *(void *)v252;
  v251[8] = v252[8];
  *(void *)uint64_t v251 = v253;
  uint64_t v254 = v6[18];
  uint64_t v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  uint64_t v257 = *(void *)v256;
  v255[8] = v256[8];
  *(void *)uint64_t v255 = v257;
  uint64_t v258 = v6[19];
  uint64_t v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  int v261 = v324((char *)a1 + v258, 1, v325);
  int v262 = v324(v260, 1, v325);
  if (v261)
  {
    if (!v262)
    {
      (*(void (**)(char *, char *, uint64_t))(v328 + 16))(v259, v260, v325);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v328 + 56))(v259, 0, 1, v325);
      goto LABEL_155;
    }
    goto LABEL_154;
  }
  if (v262)
  {
    (*(void (**)(char *, uint64_t))(v328 + 8))(v259, v325);
LABEL_154:
    uint64_t v263 = sub_10000903C(&qword_1000A1038);
    memcpy(v259, v260, *(void *)(*(void *)(v263 - 8) + 64));
    goto LABEL_155;
  }
  (*(void (**)(char *, char *, uint64_t))(v328 + 24))(v259, v260, v325);
LABEL_155:
  uint64_t v264 = v6[20];
  uint64_t v265 = (char *)a1 + v264;
  v266 = (char *)a2 + v264;
  int v267 = v324((char *)a1 + v264, 1, v325);
  int v268 = v324(v266, 1, v325);
  if (v267)
  {
    if (!v268)
    {
      (*(void (**)(char *, char *, uint64_t))(v328 + 16))(v265, v266, v325);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v328 + 56))(v265, 0, 1, v325);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v268)
  {
    (*(void (**)(char *, uint64_t))(v328 + 8))(v265, v325);
LABEL_160:
    uint64_t v269 = sub_10000903C(&qword_1000A1038);
    memcpy(v265, v266, *(void *)(*(void *)(v269 - 8) + 64));
    goto LABEL_161;
  }
  (*(void (**)(char *, char *, uint64_t))(v328 + 24))(v265, v266, v325);
LABEL_161:
  uint64_t v270 = v6[21];
  uint64_t v271 = (void *)((char *)a1 + v270);
  v272 = (char *)a2 + v270;
  uint64_t v273 = *(void *)((char *)a2 + v270);
  if (*(void *)((char *)a1 + v270))
  {
    if (v273)
    {
      void *v271 = v273;
      swift_retain();
      swift_release();
      v271[1] = *((void *)v272 + 1);
      swift_retain();
      swift_release();
      v271[2] = *((void *)v272 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10000BF18((uint64_t)a1 + v270);
      uint64_t v274 = *((void *)v272 + 2);
      *(_OWORD *)uint64_t v271 = *(_OWORD *)v272;
      v271[2] = v274;
    }
  }
  else if (v273)
  {
    void *v271 = v273;
    v271[1] = *((void *)v272 + 1);
    v271[2] = *((void *)v272 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v275 = *(_OWORD *)v272;
    v271[2] = *((void *)v272 + 2);
    *(_OWORD *)uint64_t v271 = v275;
  }
  uint64_t v276 = v6[22];
  uint64_t v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  uint64_t v279 = sub_10000903C(&qword_1000A1050);
  uint64_t v280 = *(void *)(v279 - 8);
  uint64_t v281 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v280 + 48);
  int v282 = v281(v277, 1, v279);
  int v283 = v281(v278, 1, v279);
  v327 = a1;
  if (v282)
  {
    if (!v283)
    {
      int v284 = *(void (**)(char *, char *, uint64_t))(v328 + 16);
      v284(v277, v278, v325);
      v284(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v325);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  if (v283)
  {
    sub_100015614((uint64_t)v277, &qword_1000A1050);
LABEL_176:
    uint64_t v285 = sub_10000903C(&qword_1000A1058);
    memcpy(v277, v278, *(void *)(*(void *)(v285 - 8) + 64));
    goto LABEL_177;
  }
  uint64_t v321 = *(void (**)(char *, char *, uint64_t))(v328 + 24);
  v321(v277, v278, v325);
  v321(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v325);
LABEL_177:
  uint64_t v286 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v287 = v286[5];
  uint64_t v288 = &v277[v287];
  v289 = &v278[v287];
  uint64_t v290 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 24))(v288, v289, v290);
  uint64_t v291 = v286[6];
  uint64_t v292 = &v277[v291];
  v293 = &v278[v291];
  uint64_t v294 = sub_10008A4B0();
  uint64_t v295 = *(void *)(v294 - 8);
  uint64_t v296 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v295 + 48);
  LODWORD(v288) = v296(v292, 1, v294);
  int v297 = v296(v293, 1, v294);
  if (v288)
  {
    if (!v297)
    {
      (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v293, v294);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
      goto LABEL_183;
    }
    goto LABEL_182;
  }
  if (v297)
  {
    (*(void (**)(char *, uint64_t))(v295 + 8))(v292, v294);
LABEL_182:
    uint64_t v298 = sub_10000903C(&qword_1000A1060);
    memcpy(v292, v293, *(void *)(*(void *)(v298 - 8) + 64));
    goto LABEL_183;
  }
  (*(void (**)(char *, char *, uint64_t))(v295 + 24))(v292, v293, v294);
LABEL_183:
  uint64_t v299 = v286[7];
  uint64_t v300 = &v277[v299];
  uint64_t v301 = &v278[v299];
  *(void *)uint64_t v300 = *(void *)v301;
  *((void *)v300 + 1) = *((void *)v301 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v302 = v286[8];
  v303 = &v277[v302];
  uint64_t v304 = &v278[v302];
  *(void *)v303 = *(void *)v304;
  *((void *)v303 + 1) = *((void *)v304 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v327 + v326[5]) = *(void *)((char *)v329 + v326[5]);
  *((unsigned char *)v327 + v326[6]) = *((unsigned char *)v329 + v326[6]);
  if (v327 != v329)
  {
    uint64_t v305 = v326[7];
    v306 = (void *)((char *)v327 + v305);
    v307 = (void *)((char *)v329 + v305);
    sub_100015614((uint64_t)v327 + v305, &qword_1000A1DD8);
    sub_10000903C(&qword_1000A1DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v308 = sub_10008B220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v308 - 8) + 16))(v306, v307, v308);
    }
    else
    {
      void *v306 = *v307;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v309 = v326[8];
  uint64_t v310 = (char *)v327 + v309;
  uint64_t v311 = (char *)v329 + v309;
  uint64_t v312 = *(void *)v311;
  char v313 = v311[8];
  sub_1000090AC(*(void *)v311, v313);
  uint64_t v314 = *(void *)v310;
  char v315 = v310[8];
  *(void *)uint64_t v310 = v312;
  v310[8] = v313;
  sub_100009700(v314, v315);
  if (v327 != v329)
  {
    uint64_t v316 = v326[9];
    uint64_t v317 = (void *)((char *)v327 + v316);
    uint64_t v318 = (void *)((char *)v329 + v316);
    sub_100015614((uint64_t)v327 + v316, &qword_1000A1DE0);
    sub_10000903C(&qword_1000A1DE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v319 = sub_10008B1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v319 - 8) + 16))(v317, v318, v319);
    }
    else
    {
      *uint64_t v317 = *v318;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v327;
}

uint64_t sub_10004A7CC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v8 = v7[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v98 = v11;
  uint64_t v97 = v12;
  char v96 = *(unsigned int (**)(const void *, uint64_t))(v12 + 48);
  if (v96(v10, 1))
  {
    uint64_t v13 = sub_10000903C(&qword_1000A1038);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v98);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v98);
  }
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  uint64_t v14 = v7[12];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  int v17 = (int *)sub_10008A340();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48);
  uint64_t v95 = v18;
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1040);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v21;
    *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((unsigned char *)v15 + 64) = *((unsigned char *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((unsigned char *)v15 + 129) = *((unsigned char *)v16 + 129);
    uint64_t v22 = v17[11];
    int v93 = (char *)v15 + v22;
    uint64_t v94 = a3;
    int v23 = (char *)v16 + v22;
    uint64_t v24 = sub_10008A300();
    int v25 = v23;
    a3 = v94;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v93, v25, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((unsigned char *)v15 + v17[13]) = *((unsigned char *)v16 + v17[13]);
    *((unsigned char *)v15 + v17[14]) = *((unsigned char *)v16 + v17[14]);
    *((unsigned char *)v15 + v17[15]) = *((unsigned char *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = v7[13];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  if (v19((_OWORD *)(a2 + v26), 1, v17))
  {
    uint64_t v29 = sub_10000903C(&qword_1000A1040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v28[1];
    _OWORD *v27 = *v28;
    v27[1] = v30;
    *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
    *(_OWORD *)((char *)v27 + 40) = *(_OWORD *)((char *)v28 + 40);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
    *(_OWORD *)((char *)v27 + 113) = *(_OWORD *)((char *)v28 + 113);
    *(_OWORD *)((char *)v27 + 104) = *(_OWORD *)((char *)v28 + 104);
    *(_OWORD *)((char *)v27 + 88) = *(_OWORD *)((char *)v28 + 88);
    *(_OWORD *)((char *)v27 + 72) = *(_OWORD *)((char *)v28 + 72);
    *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
    uint64_t v31 = v17[11];
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = a3;
    uint64_t v34 = (char *)v28 + v31;
    uint64_t v35 = sub_10008A300();
    unsigned __int8 v36 = v34;
    a3 = v33;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v36, v35);
    *(_OWORD *)((char *)v27 + v17[12]) = *(_OWORD *)((char *)v28 + v17[12]);
    *((unsigned char *)v27 + v17[13]) = *((unsigned char *)v28 + v17[13]);
    *((unsigned char *)v27 + v17[14]) = *((unsigned char *)v28 + v17[14]);
    *((unsigned char *)v27 + v17[15]) = *((unsigned char *)v28 + v17[15]);
    *(_OWORD *)((char *)v27 + v17[16]) = *(_OWORD *)((char *)v28 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v95 + 56))(v27, 0, 1, v17);
  }
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  uint64_t v37 = v7[15];
  uint64_t v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_10008A050();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10000903C(&qword_1000A1048);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v43 = v7[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = v7[18];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = v7[19];
  uint64_t v50 = (void *)(a1 + v49);
  int v51 = (const void *)(a2 + v49);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v96)(a2 + v49, 1, v98))
  {
    uint64_t v52 = sub_10000903C(&qword_1000A1038);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v97 + 32))(v50, v51, v98);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v50, 0, 1, v98);
  }
  uint64_t v53 = v7[20];
  uint64_t v54 = (void *)(a1 + v53);
  int v55 = (const void *)(a2 + v53);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v96)(a2 + v53, 1, v98))
  {
    uint64_t v56 = sub_10000903C(&qword_1000A1038);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v97 + 32))(v54, v55, v98);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v54, 0, 1, v98);
  }
  uint64_t v57 = v7[21];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  uint64_t v60 = v7[22];
  uint64_t v61 = (char *)(a1 + v60);
  uint64_t v62 = (char *)(a2 + v60);
  uint64_t v63 = sub_10000903C(&qword_1000A1050);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_10000903C(&qword_1000A1058);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    int v66 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
    v66(v61, v62, v98);
    v66(&v61[*(int *)(v63 + 36)], &v62[*(int *)(v63 + 36)], v98);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v67 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v68 = v67[5];
  uint64_t v69 = &v61[v68];
  uint64_t v70 = &v62[v68];
  uint64_t v71 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = v67[6];
  int v73 = &v61[v72];
  id v74 = &v62[v72];
  uint64_t v75 = sub_10008A4B0();
  uint64_t v76 = *(void *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    uint64_t v77 = sub_10000903C(&qword_1000A1060);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  *(_OWORD *)&v61[v67[7]] = *(_OWORD *)&v62[v67[7]];
  *(_OWORD *)&v61[v67[8]] = *(_OWORD *)&v62[v67[8]];
  uint64_t v78 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v78) = *(unsigned char *)(a2 + v78);
  uint64_t v79 = a3[7];
  char v80 = (void *)(a1 + v79);
  uint64_t v81 = (const void *)(a2 + v79);
  uint64_t v82 = sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v83 = sub_10008B220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v80, v81, v83);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  uint64_t v84 = a3[8];
  uint64_t v85 = a3[9];
  uint64_t v86 = a1 + v84;
  uint64_t v87 = a2 + v84;
  *(void *)uint64_t v86 = *(void *)v87;
  *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
  uint64_t v88 = (void *)(a1 + v85);
  char v89 = (const void *)(a2 + v85);
  uint64_t v90 = sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v91 = sub_10008B1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v91 - 8) + 32))(v88, v89, v91);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
  }
  return a1;
}

void *sub_10004B270(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v12 = v11[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10008A170();
  uint64_t v222 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v222 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  id v218 = a3;
  char v217 = v16;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v222 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10000903C(&qword_1000A1038);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v222 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[11];
  long long v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *long long v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v11[12];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)sub_10008A340();
  uint64_t v216 = *((void *)v28 - 1);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v216 + 48);
  int v30 = v29(v26, 1, v28);
  int v31 = v29((uint64_t)v27, 1, v28);
  uint64_t v220 = v15;
  if (v30)
  {
    if (!v31)
    {
      long long v32 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v32;
      *(unsigned char *)(v26 + 32) = v27[32];
      *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
      *(void *)(v26 + 56) = *((void *)v27 + 7);
      *(unsigned char *)(v26 + 64) = v27[64];
      *(_OWORD *)(v26 + 113) = *(_OWORD *)(v27 + 113);
      *(_OWORD *)(v26 + 104) = *(_OWORD *)(v27 + 104);
      *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(unsigned char *)(v26 + 129) = v27[129];
      uint64_t v33 = v28[11];
      uint64_t v34 = v26 + v33;
      uint64_t v35 = &v27[v33];
      uint64_t v36 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)&v27[v28[12]];
      *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
      *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
      *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
      *(_OWORD *)(v26 + v28[16]) = *(_OWORD *)&v27[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v216 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    sub_100050DAC(v26, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_12:
    uint64_t v37 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v135 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v135;
  swift_bridgeObjectRelease();
  uint64_t v136 = v27 + 16;
  int v137 = *(unsigned __int8 *)(v26 + 32);
  if (v137 != 255)
  {
    int v138 = v27[32];
    if (v138 != 255)
    {
      uint64_t v139 = *(void *)(v26 + 16);
      uint64_t v140 = *(void *)(v26 + 24);
      *(_OWORD *)(v26 + 16) = *v136;
      *(unsigned char *)(v26 + 32) = v138;
      sub_1000096D4(v139, v140, v137);
      goto LABEL_77;
    }
    sub_10000BE14(v26 + 16);
  }
  *(_OWORD *)(v26 + 16) = *v136;
  *(unsigned char *)(v26 + 32) = v27[32];
LABEL_77:
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  uint64_t v148 = v27 + 56;
  int v149 = *(unsigned __int8 *)(v26 + 64);
  if (v149 != 255)
  {
    int v150 = v27[64];
    if (v150 != 255)
    {
      id v151 = *(void **)(v26 + 56);
      *(void *)(v26 + 56) = *v148;
      *(unsigned char *)(v26 + 64) = v150;
      sub_1000096EC(v151, v149);
      goto LABEL_87;
    }
    sub_10000BE68(v26 + 56);
  }
  *(void *)(v26 + 56) = *v148;
  *(unsigned char *)(v26 + 64) = v27[64];
LABEL_87:
  uint64_t v156 = v27 + 72;
  int v157 = *(unsigned __int8 *)(v26 + 80);
  if (v157 != 255)
  {
    int v158 = v27[80];
    if (v158 != 255)
    {
      id v159 = *(void **)(v26 + 72);
      *(void *)(v26 + 72) = *v156;
      *(unsigned char *)(v26 + 80) = v158;
      sub_1000096EC(v159, v157);
      goto LABEL_97;
    }
    sub_10000BE68(v26 + 72);
  }
  *(void *)(v26 + 72) = *v156;
  *(unsigned char *)(v26 + 80) = v27[80];
LABEL_97:
  char v164 = v27 + 88;
  int v165 = *(unsigned __int8 *)(v26 + 96);
  if (v165 != 255)
  {
    int v166 = v27[96];
    if (v166 != 255)
    {
      id v167 = *(void **)(v26 + 88);
      *(void *)(v26 + 88) = *v164;
      *(unsigned char *)(v26 + 96) = v166;
      sub_1000096EC(v167, v165);
      goto LABEL_107;
    }
    sub_10000BE68(v26 + 88);
  }
  *(void *)(v26 + 88) = *v164;
  *(unsigned char *)(v26 + 96) = v27[96];
LABEL_107:
  uint64_t v172 = v27 + 104;
  int v173 = *(unsigned __int8 *)(v26 + 112);
  if (v173 != 255)
  {
    int v174 = v27[112];
    if (v174 != 255)
    {
      uint64_t v175 = *(void **)(v26 + 104);
      *(void *)(v26 + 104) = *v172;
      *(unsigned char *)(v26 + 112) = v174;
      sub_1000096EC(v175, v173);
      goto LABEL_117;
    }
    sub_10000BE68(v26 + 104);
  }
  *(void *)(v26 + 104) = *v172;
  *(unsigned char *)(v26 + 112) = v27[112];
LABEL_117:
  uint64_t v180 = v27 + 120;
  int v181 = *(unsigned __int8 *)(v26 + 128);
  if (v181 == 255)
  {
LABEL_126:
    *(void *)(v26 + 120) = *v180;
    *(unsigned char *)(v26 + 128) = v27[128];
    goto LABEL_127;
  }
  int v182 = v27[128];
  if (v182 == 255)
  {
    sub_10000BE68(v26 + 120);
    goto LABEL_126;
  }
  uint64_t v183 = *(void **)(v26 + 120);
  *(void *)(v26 + 120) = *v180;
  *(unsigned char *)(v26 + 128) = v182;
  sub_1000096EC(v183, v181);
LABEL_127:
  *(unsigned char *)(v26 + 129) = v27[129];
  uint64_t v188 = v28[11];
  uint64_t v189 = v26 + v188;
  char v190 = &v27[v188];
  uint64_t v191 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v191 - 8) + 40))(v189, v190, v191);
  uint64_t v192 = v28[12];
  uint64_t v193 = (void *)(v26 + v192);
  int v194 = &v27[v192];
  uint64_t v196 = *(void *)v194;
  uint64_t v195 = *((void *)v194 + 1);
  *uint64_t v193 = v196;
  v193[1] = v195;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
  *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
  *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
  uint64_t v197 = v28[16];
  uint64_t v198 = (void *)(v26 + v197);
  char v199 = &v27[v197];
  uint64_t v201 = *(void *)v199;
  uint64_t v200 = *((void *)v199 + 1);
  void *v198 = v201;
  v198[1] = v200;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v38 = v11[13];
  uint64_t v39 = (uint64_t)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v29((uint64_t)a1 + v38, 1, v28);
  int v42 = v29((uint64_t)v40, 1, v28);
  if (v41)
  {
    if (!v42)
    {
      long long v43 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v43;
      *(unsigned char *)(v39 + 32) = v40[32];
      *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
      *(void *)(v39 + 56) = *((void *)v40 + 7);
      *(unsigned char *)(v39 + 64) = v40[64];
      *(_OWORD *)(v39 + 113) = *(_OWORD *)(v40 + 113);
      *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
      *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      *(unsigned char *)(v39 + 129) = v40[129];
      uint64_t v44 = v28[11];
      uint64_t v45 = v39 + v44;
      uint64_t v46 = &v40[v44];
      uint64_t v47 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      *(_OWORD *)(v39 + v28[12]) = *(_OWORD *)&v40[v28[12]];
      *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
      *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
      *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
      *(_OWORD *)(v39 + v28[16]) = *(_OWORD *)&v40[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v216 + 56))(v39, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    sub_100050DAC(v39, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_18:
    uint64_t v48 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v141 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v141;
  swift_bridgeObjectRelease();
  uint64_t v142 = v40 + 16;
  int v143 = *(unsigned __int8 *)(v39 + 32);
  if (v143 != 255)
  {
    int v144 = v40[32];
    if (v144 != 255)
    {
      uint64_t v145 = *(void *)(v39 + 16);
      uint64_t v146 = *(void *)(v39 + 24);
      *(_OWORD *)(v39 + 16) = *v142;
      *(unsigned char *)(v39 + 32) = v144;
      sub_1000096D4(v145, v146, v143);
      goto LABEL_82;
    }
    sub_10000BE14(v39 + 16);
  }
  *(_OWORD *)(v39 + 16) = *v142;
  *(unsigned char *)(v39 + 32) = v40[32];
LABEL_82:
  *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
  uint64_t v152 = v40 + 56;
  int v153 = *(unsigned __int8 *)(v39 + 64);
  if (v153 != 255)
  {
    int v154 = v40[64];
    if (v154 != 255)
    {
      id v155 = *(void **)(v39 + 56);
      *(void *)(v39 + 56) = *v152;
      *(unsigned char *)(v39 + 64) = v154;
      sub_1000096EC(v155, v153);
      goto LABEL_92;
    }
    sub_10000BE68(v39 + 56);
  }
  *(void *)(v39 + 56) = *v152;
  *(unsigned char *)(v39 + 64) = v40[64];
LABEL_92:
  uint64_t v160 = v40 + 72;
  int v161 = *(unsigned __int8 *)(v39 + 80);
  if (v161 != 255)
  {
    int v162 = v40[80];
    if (v162 != 255)
    {
      id v163 = *(void **)(v39 + 72);
      *(void *)(v39 + 72) = *v160;
      *(unsigned char *)(v39 + 80) = v162;
      sub_1000096EC(v163, v161);
      goto LABEL_102;
    }
    sub_10000BE68(v39 + 72);
  }
  *(void *)(v39 + 72) = *v160;
  *(unsigned char *)(v39 + 80) = v40[80];
LABEL_102:
  uint64_t v168 = v40 + 88;
  int v169 = *(unsigned __int8 *)(v39 + 96);
  if (v169 != 255)
  {
    int v170 = v40[96];
    if (v170 != 255)
    {
      uint64_t v171 = *(void **)(v39 + 88);
      *(void *)(v39 + 88) = *v168;
      *(unsigned char *)(v39 + 96) = v170;
      sub_1000096EC(v171, v169);
      goto LABEL_112;
    }
    sub_10000BE68(v39 + 88);
  }
  *(void *)(v39 + 88) = *v168;
  *(unsigned char *)(v39 + 96) = v40[96];
LABEL_112:
  uint64_t v176 = v40 + 104;
  int v177 = *(unsigned __int8 *)(v39 + 112);
  if (v177 != 255)
  {
    int v178 = v40[112];
    if (v178 != 255)
    {
      uint64_t v179 = *(void **)(v39 + 104);
      *(void *)(v39 + 104) = *v176;
      *(unsigned char *)(v39 + 112) = v178;
      sub_1000096EC(v179, v177);
      goto LABEL_122;
    }
    sub_10000BE68(v39 + 104);
  }
  *(void *)(v39 + 104) = *v176;
  *(unsigned char *)(v39 + 112) = v40[112];
LABEL_122:
  uint64_t v184 = v40 + 120;
  int v185 = *(unsigned __int8 *)(v39 + 128);
  if (v185 == 255)
  {
LABEL_129:
    *(void *)(v39 + 120) = *v184;
    *(unsigned char *)(v39 + 128) = v40[128];
    goto LABEL_130;
  }
  int v186 = v40[128];
  if (v186 == 255)
  {
    sub_10000BE68(v39 + 120);
    goto LABEL_129;
  }
  uint64_t v187 = *(void **)(v39 + 120);
  *(void *)(v39 + 120) = *v184;
  *(unsigned char *)(v39 + 128) = v186;
  sub_1000096EC(v187, v185);
LABEL_130:
  *(unsigned char *)(v39 + 129) = v40[129];
  uint64_t v202 = v28[11];
  uint64_t v203 = v39 + v202;
  Swift::String v204 = &v40[v202];
  uint64_t v205 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v205 - 8) + 40))(v203, v204, v205);
  uint64_t v206 = v28[12];
  Swift::String v207 = (void *)(v39 + v206);
  char v208 = &v40[v206];
  uint64_t v210 = *(void *)v208;
  uint64_t v209 = *((void *)v208 + 1);
  void *v207 = v210;
  v207[1] = v209;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
  *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
  *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
  uint64_t v211 = v28[16];
  int v212 = (void *)(v39 + v211);
  uint64_t v213 = &v40[v211];
  uint64_t v215 = *(void *)v213;
  uint64_t v214 = *((void *)v213 + 1);
  *int v212 = v215;
  v212[1] = v214;
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v49 = v11[14];
  uint64_t v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

  uint64_t v51 = v11[15];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_10008A050();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    uint64_t v59 = v220;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v59 = v220;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_24:
    uint64_t v60 = sub_10000903C(&qword_1000A1048);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_25:
  *((unsigned char *)a1 + v11[16]) = *((unsigned char *)a2 + v11[16]);
  uint64_t v61 = v11[17];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = v11[18];
  uint64_t v65 = (char *)a1 + v64;
  int v66 = (char *)a2 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = v11[19];
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  int v70 = v217((char *)a1 + v67, 1, v59);
  int v71 = v217(v69, 1, v59);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v68, v69, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v68, 0, 1, v59);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v222 + 8))(v68, v59);
LABEL_30:
    uint64_t v72 = sub_10000903C(&qword_1000A1038);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v222 + 40))(v68, v69, v59);
LABEL_31:
  uint64_t v73 = v11[20];
  id v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  int v76 = v217((char *)a1 + v73, 1, v59);
  int v77 = v217(v75, 1, v59);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v74, v75, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v74, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v222 + 8))(v74, v59);
LABEL_36:
    uint64_t v78 = sub_10000903C(&qword_1000A1038);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v222 + 40))(v74, v75, v59);
LABEL_37:
  uint64_t v79 = v11[21];
  char v80 = (void *)((char *)a1 + v79);
  uint64_t v81 = (void *)((char *)a2 + v79);
  if (*(void *)((char *)a1 + v79))
  {
    if (*v81)
    {
      *char v80 = *v81;
      swift_release();
      v80[1] = v81[1];
      swift_release();
      v80[2] = v81[2];
      swift_release();
      goto LABEL_42;
    }
    sub_10000BF18((uint64_t)v80);
  }
  *(_OWORD *)char v80 = *(_OWORD *)v81;
  v80[2] = v81[2];
LABEL_42:
  uint64_t v82 = v11[22];
  uint64_t v83 = (char *)a1 + v82;
  uint64_t v84 = (char *)a2 + v82;
  uint64_t v85 = sub_10000903C(&qword_1000A1050);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  int v221 = a1;
  unsigned __int8 v219 = a2;
  if (v88)
  {
    if (!v89)
    {
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v222 + 32);
      v90(v83, v84, v59);
      v90(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v89)
  {
    sub_100015614((uint64_t)v83, &qword_1000A1050);
LABEL_47:
    uint64_t v91 = sub_10000903C(&qword_1000A1058);
    memcpy(v83, v84, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_48;
  }
  long long v147 = *(void (**)(char *, char *, uint64_t))(v222 + 40);
  v147(v83, v84, v59);
  v147(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
LABEL_48:
  uint64_t v92 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v93 = v92[5];
  uint64_t v94 = &v83[v93];
  uint64_t v95 = &v84[v93];
  uint64_t v96 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  uint64_t v97 = v92[6];
  uint64_t v98 = &v83[v97];
  uint64_t v99 = &v84[v97];
  uint64_t v100 = sub_10008A4B0();
  uint64_t v101 = *(void *)(v100 - 8);
  int v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  int v103 = v102(v98, 1, v100);
  int v104 = v102(v99, 1, v100);
  if (v103)
  {
    char v105 = v221;
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v98, v99, v100);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  char v105 = v221;
  if (v104)
  {
    (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v100);
LABEL_53:
    uint64_t v106 = sub_10000903C(&qword_1000A1060);
    memcpy(v98, v99, *(void *)(*(void *)(v106 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 40))(v98, v99, v100);
LABEL_54:
  uint64_t v107 = v92[7];
  id v108 = &v83[v107];
  uint64_t v109 = &v84[v107];
  uint64_t v111 = *(void *)v109;
  uint64_t v110 = *((void *)v109 + 1);
  *(void *)id v108 = v111;
  *((void *)v108 + 1) = v110;
  swift_bridgeObjectRelease();
  uint64_t v112 = v92[8];
  uint64_t v113 = &v83[v112];
  char v114 = &v84[v112];
  uint64_t v116 = *(void *)v114;
  uint64_t v115 = *((void *)v114 + 1);
  *(void *)uint64_t v113 = v116;
  *((void *)v113 + 1) = v115;
  swift_bridgeObjectRelease();
  uint64_t v117 = v218[6];
  *(void *)((char *)v105 + v218[5]) = *(void *)((char *)v219 + v218[5]);
  *((unsigned char *)v105 + v117) = *((unsigned char *)v219 + v117);
  if (v105 != v219)
  {
    uint64_t v118 = v218[7];
    uint64_t v119 = (char *)v105 + v118;
    uint64_t v120 = (char *)v219 + v118;
    sub_100015614((uint64_t)v105 + v118, &qword_1000A1DD8);
    uint64_t v121 = sub_10000903C(&qword_1000A1DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v122 = sub_10008B220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v119, v120, v122);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
    }
  }
  uint64_t v123 = v218[8];
  uint64_t v124 = (uint64_t)v105 + v123;
  uint64_t v125 = (char *)v219 + v123;
  uint64_t v126 = *(void *)v125;
  LOBYTE(v125) = v125[8];
  uint64_t v127 = *(void *)v124;
  char v128 = *(unsigned char *)(v124 + 8);
  *(void *)uint64_t v124 = v126;
  *(unsigned char *)(v124 + 8) = (_BYTE)v125;
  sub_100009700(v127, v128);
  if (v105 != v219)
  {
    uint64_t v129 = v218[9];
    uint64_t v130 = (char *)v105 + v129;
    int v131 = (char *)v219 + v129;
    sub_100015614((uint64_t)v105 + v129, &qword_1000A1DE0);
    uint64_t v132 = sub_10000903C(&qword_1000A1DE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v133 = sub_10008B1F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v130, v131, v133);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
    }
  }
  return v105;
}

uint64_t sub_10004C64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004C660);
}

uint64_t sub_10004C660(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10000903C(&qword_1000A1DE8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[7];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[8] + 8);
    if (v14 > 1) {
      return (v14 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v15 = sub_10000903C(&qword_1000A1DF0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_10004C7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004C7F8);
}

uint64_t sub_10004C7F8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_10000903C(&qword_1000A1DE8);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[7];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[8] + 8) = -(char)a2;
  }
  else
  {
    uint64_t v15 = sub_10000903C(&qword_1000A1DF0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[9];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for EpisodeListWidgetSingle()
{
  uint64_t result = qword_1000A1E50;
  if (!qword_1000A1E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004C9CC()
{
  type metadata accessor for UpNextEntry.Episode(319);
  if (v0 <= 0x3F)
  {
    sub_10004CB28(319, &qword_1000A1E60, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      sub_10004CB28(319, (unint64_t *)&unk_1000A1E68, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10004CB28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10008A660();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10004CB7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004CB98@<X0>(char a1@<W0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  v19[1] = a3;
  uint64_t v7 = sub_10000903C(&qword_1000A1AE8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A2058);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000903C(&qword_1000A1BB0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    a2(v4);
    sub_1000155B0((uint64_t)v15, (uint64_t)v12, &qword_1000A1BB0);
    swift_storeEnumTagMultiPayload();
    sub_100050E0C((unint64_t *)&qword_1000A1BA8, &qword_1000A1BB0, &qword_1000A1AF0, &qword_1000A1AE8);
    sub_100015428(&qword_1000A1AF0, &qword_1000A1AE8);
    sub_10008AAE0();
    uint64_t v16 = (uint64_t)v15;
    uint64_t v17 = &qword_1000A1BB0;
  }
  else
  {
    sub_1000155B0(v4, (uint64_t)v9, &qword_1000A1AE8);
    sub_1000155B0((uint64_t)v9, (uint64_t)v12, &qword_1000A1AE8);
    swift_storeEnumTagMultiPayload();
    sub_100050E0C((unint64_t *)&qword_1000A1BA8, &qword_1000A1BB0, &qword_1000A1AF0, &qword_1000A1AE8);
    sub_100015428(&qword_1000A1AF0, &qword_1000A1AE8);
    sub_10008AAE0();
    uint64_t v16 = (uint64_t)v9;
    uint64_t v17 = &qword_1000A1AE8;
  }
  return sub_100015614(v16, v17);
}

uint64_t sub_10004CE3C@<X0>(char a1@<W0>, void (*a2)(uint64_t, __n128)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  v20[1] = a3;
  uint64_t v7 = sub_10000903C(&qword_1000A1EB8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A1EC8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000903C(&qword_1000A1ED0);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    a2(v4, v14);
    sub_1000155B0((uint64_t)v16, (uint64_t)v12, &qword_1000A1ED0);
    swift_storeEnumTagMultiPayload();
    sub_100050E0C(&qword_1000A1ED8, &qword_1000A1ED0, &qword_1000A1EE0, &qword_1000A1EB8);
    sub_100015428(&qword_1000A1EE0, &qword_1000A1EB8);
    sub_10008AAE0();
    uint64_t v17 = (uint64_t)v16;
    uint64_t v18 = &qword_1000A1ED0;
  }
  else
  {
    sub_1000155B0(v4, (uint64_t)v9, &qword_1000A1EB8);
    sub_1000155B0((uint64_t)v9, (uint64_t)v12, &qword_1000A1EB8);
    swift_storeEnumTagMultiPayload();
    sub_100050E0C(&qword_1000A1ED8, &qword_1000A1ED0, &qword_1000A1EE0, &qword_1000A1EB8);
    sub_100015428(&qword_1000A1EE0, &qword_1000A1EB8);
    sub_10008AAE0();
    uint64_t v17 = (uint64_t)v9;
    uint64_t v18 = &qword_1000A1EB8;
  }
  return sub_100015614(v17, v18);
}

uint64_t sub_10004D0E0@<X0>(char a1@<W0>, void (*a2)(uint64_t, __n128)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  v20[1] = a3;
  uint64_t v7 = sub_10000903C(&qword_1000A2030);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A2038);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000903C(&qword_1000A2040);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    a2(v4, v14);
    sub_1000155B0((uint64_t)v16, (uint64_t)v12, &qword_1000A2040);
    swift_storeEnumTagMultiPayload();
    sub_100050E0C((unint64_t *)&qword_1000A2048, &qword_1000A2040, &qword_1000A2050, &qword_1000A2030);
    sub_100015428(&qword_1000A2050, &qword_1000A2030);
    sub_10008AAE0();
    uint64_t v17 = (uint64_t)v16;
    uint64_t v18 = &qword_1000A2040;
  }
  else
  {
    sub_1000155B0(v4, (uint64_t)v9, &qword_1000A2030);
    sub_1000155B0((uint64_t)v9, (uint64_t)v12, &qword_1000A2030);
    swift_storeEnumTagMultiPayload();
    sub_100050E0C((unint64_t *)&qword_1000A2048, &qword_1000A2040, &qword_1000A2050, &qword_1000A2030);
    sub_100015428(&qword_1000A2050, &qword_1000A2030);
    sub_10008AAE0();
    uint64_t v17 = (uint64_t)v9;
    uint64_t v18 = &qword_1000A2030;
  }
  return sub_100015614(v17, v18);
}

uint64_t sub_10004D384@<X0>(char a1@<W0>, void (*a2)(uint64_t, __n128)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  v20[1] = a3;
  uint64_t v7 = sub_10000903C(&qword_1000A1FF8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A2000);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000903C(&qword_1000A2008);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    a2(v4, v14);
    sub_1000155B0((uint64_t)v16, (uint64_t)v12, &qword_1000A2008);
    swift_storeEnumTagMultiPayload();
    sub_100050E0C(&qword_1000A2010, &qword_1000A2008, &qword_1000A2018, &qword_1000A1FF8);
    sub_100015428(&qword_1000A2018, &qword_1000A1FF8);
    sub_10008AAE0();
    uint64_t v17 = (uint64_t)v16;
    uint64_t v18 = &qword_1000A2008;
  }
  else
  {
    sub_1000155B0(v4, (uint64_t)v9, &qword_1000A1FF8);
    sub_1000155B0((uint64_t)v9, (uint64_t)v12, &qword_1000A1FF8);
    swift_storeEnumTagMultiPayload();
    sub_100050E0C(&qword_1000A2010, &qword_1000A2008, &qword_1000A2018, &qword_1000A1FF8);
    sub_100015428(&qword_1000A2018, &qword_1000A1FF8);
    sub_10008AAE0();
    uint64_t v17 = (uint64_t)v9;
    uint64_t v18 = &qword_1000A1FF8;
  }
  return sub_100015614(v17, v18);
}

void sub_10004D628()
{
  qword_1000A1DD0 = 0x4059000000000000;
}

double sub_10004D638()
{
  uint64_t v0 = sub_10008B220();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v11 - v5;
  type metadata accessor for EpisodeListWidgetSingle();
  sub_10006ABB0((uint64_t)v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for WidgetFamily.systemLarge(_:), v0);
  sub_100050C84((unint64_t *)&qword_1000A1FC8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_10008B3E0();
  sub_10008B3E0();
  uint64_t v8 = v11[0];
  uint64_t v7 = v11[1];
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  double result = 0.0;
  if (v7 == v8)
  {
    if (qword_1000A0F90 != -1) {
      swift_once();
    }
    return *(double *)&qword_1000A1DD0;
  }
  return result;
}

uint64_t sub_10004D820()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EpisodeListWidgetSingle();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10008B220();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v17 - v10;
  sub_10006ABB0((uint64_t)v17 - v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for WidgetFamily.systemSmall(_:), v5);
  sub_100050C84((unint64_t *)&qword_1000A1FC8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_10008B3E0();
  sub_10008B3E0();
  uint64_t v13 = v17[0];
  uint64_t v12 = v17[1];
  __n128 v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  v14(v11, v5);
  sub_100050D44(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetSingle);
  if (v12 == v13)
  {
    char v15 = sub_10004DA94();
    sub_100050DAC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetSingle);
    if (v15) {
      return 2;
    }
  }
  else
  {
    sub_100050DAC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetSingle);
  }
  return 0;
}

uint64_t sub_10004DA94()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EpisodeListWidgetSingle();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10008B1F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_10006ACE4((uint64_t)&v19 - v10);
  sub_10008B1D0();
  char v12 = sub_10008B1C0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v13(v11, v5);
  sub_100050D44(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetSingle);
  if (v12)
  {
    __n128 v14 = &v4[*(int *)(v2 + 32)];
    uint64_t v15 = *(void *)v14;
    char v16 = v14[8];
    sub_1000090AC(*(void *)v14, v16);
    char v17 = sub_10006A9AC(v15, v16);
    sub_100009700(v15, v16);
  }
  else
  {
    char v17 = 1;
  }
  sub_100050DAC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetSingle);
  return v17 & 1;
}

id sub_10004DC94()
{
  uint64_t v1 = sub_10000903C(&qword_1000A1060);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000903C(&qword_1000A1D50);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10008DE00;
  uint64_t v5 = v0[8];
  *(void *)(v4 + 32) = v0[7];
  *(void *)(v4 + 40) = v5;
  uint64_t v6 = v0[3];
  *(void *)(v4 + 48) = v0[2];
  *(void *)(v4 + 56) = v6;
  uint64_t v7 = v0[10];
  *(void *)(v4 + 64) = v0[9];
  *(void *)(v4 + 72) = v7;
  uint64_t v8 = (char *)v0 + *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 88);
  uint64_t v9 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v10 = &v8[*(int *)(v9 + 32)];
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)(v4 + 80) = *(void *)v10;
  *(void *)(v4 + 88) = v11;
  sub_1000155B0((uint64_t)&v8[*(int *)(v9 + 24)], (uint64_t)v3, &qword_1000A1060);
  uint64_t v12 = sub_10008A4B0();
  uint64_t v13 = *(void *)(v12 - 8);
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v3, 1, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    sub_100015614((uint64_t)v3, &qword_1000A1060);
  }
  else
  {
    sub_10008A4A0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v12);
  }
  id result = (id)AXDurationStringForDurationWithSeconds();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = sub_10008B360();
    uint64_t v18 = v17;

    *(void *)(v4 + 96) = v16;
    *(void *)(v4 + 104) = v18;
    v20[1] = v4;
    sub_10000903C(&qword_1000A1D40);
    sub_100015428(&qword_1000A1F10, &qword_1000A1D40);
    uint64_t v19 = sub_10008B2E0();
    swift_bridgeObjectRelease();
    return (id)v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004DF08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = type metadata accessor for EpisodeListWidgetSingle();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v36 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v33 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000903C(&qword_1000A1048);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000903C(&qword_1000A1EA8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10000903C(&qword_1000A1EB0);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A1EB8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v16 = *(int *)(v34 + 60);
  long long v32 = v1;
  sub_1000155B0((uint64_t)v1 + v16, (uint64_t)v6, &qword_1000A1048);
  uint64_t v17 = (uint64_t)v1;
  uint64_t v18 = v33;
  sub_100050D44(v17, v33, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetSingle);
  unint64_t v19 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v20 = swift_allocObject();
  sub_100050CDC(v18, v20 + v19, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetSingle);
  sub_10001547C((uint64_t)v6, (uint64_t)v9, &qword_1000A1048);
  *(void *)&v9[*(int *)(v7 + 36)] = 0;
  long long v21 = (uint64_t (**)())&v9[*(int *)(v7 + 40)];
  *long long v21 = sub_1000509EC;
  v21[1] = (uint64_t (*)())v20;
  sub_100015428(&qword_1000A1EC0, &qword_1000A1EA8);
  sub_10008AE10();
  sub_100015614((uint64_t)v9, &qword_1000A1EA8);
  uint64_t v23 = *v32;
  uint64_t v22 = v32[1];
  uint64_t v24 = v32;
  uint64_t v25 = v35;
  uint64_t v26 = v37;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v15, v11, v37);
  uint64_t v27 = &v15[*(int *)(v13 + 60)];
  *(void *)uint64_t v27 = v23;
  *((void *)v27 + 1) = v22;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
  swift_bridgeObjectRetain();
  v28(v11, v26);
  char v29 = *(void *)((char *)v24 + *(int *)(v34 + 84)) != 0;
  uint64_t v39 = v24;
  sub_10004CE3C(v29, (void (*)(uint64_t, __n128))sub_100050A5C, v38);
  return sub_100015614((uint64_t)v15, &qword_1000A1EB8);
}

uint64_t sub_10004E2F0(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A1EE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A1EF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v4 = sub_10008AA80();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v8 = sub_10000903C(&qword_1000A1EF8);
  sub_10004E4C4(a1, (uint64_t)&v4[*(int *)(v8 + 44)]);
  type metadata accessor for EpisodeListWidgetSingle();
  char v9 = sub_10008ABD0();
  sub_10008A630();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_1000155B0((uint64_t)v4, (uint64_t)v7, &qword_1000A1EE8);
  uint64_t v18 = &v7[*(int *)(v5 + 36)];
  *uint64_t v18 = v9;
  *((void *)v18 + 1) = v11;
  *((void *)v18 + 2) = v13;
  *((void *)v18 + 3) = v15;
  *((void *)v18 + 4) = v17;
  v18[40] = 0;
  sub_100015614((uint64_t)v4, &qword_1000A1EE8);
  v21[0] = sub_10004DC94();
  v21[1] = v19;
  sub_100050A64();
  sub_100031338();
  sub_10008AEE0();
  swift_bridgeObjectRelease();
  return sub_100015614((uint64_t)v7, &qword_1000A1EF0);
}

uint64_t sub_10004E4C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1F18);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  char v9 = &v29[-v8];
  uint64_t v10 = sub_10000903C(&qword_1000A1F20);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_10000903C(&qword_1000A1F28);
  __chkstk_darwin(v13);
  uint64_t v15 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v18 = &v29[-v17];
  __chkstk_darwin(v19);
  long long v21 = &v29[-v20];
  *(void *)uint64_t v12 = sub_10008A9B0();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v22 = sub_10000903C(&qword_1000A1F30);
  sub_10004FBDC(a1, (uint64_t)&v12[*(int *)(v22 + 44)]);
  sub_10004D638();
  sub_10008B130();
  sub_10008A800();
  sub_1000155B0((uint64_t)v12, (uint64_t)v18, &qword_1000A1F20);
  uint64_t v23 = &v18[*(int *)(v13 + 36)];
  long long v24 = v34;
  v23[4] = v33;
  v23[5] = v24;
  v23[6] = v35;
  long long v25 = v30;
  _OWORD *v23 = *(_OWORD *)&v29[40];
  v23[1] = v25;
  long long v26 = v32;
  v23[2] = v31;
  void v23[3] = v26;
  sub_100015614((uint64_t)v12, &qword_1000A1F20);
  sub_10001547C((uint64_t)v18, (uint64_t)v21, &qword_1000A1F28);
  sub_10004E830(a1, (uint64_t)v9);
  sub_1000155B0((uint64_t)v21, (uint64_t)v15, &qword_1000A1F28);
  sub_1000155B0((uint64_t)v9, (uint64_t)v6, &qword_1000A1F18);
  sub_1000155B0((uint64_t)v15, a2, &qword_1000A1F28);
  uint64_t v27 = sub_10000903C(&qword_1000A1F38);
  sub_1000155B0((uint64_t)v6, a2 + *(int *)(v27 + 48), &qword_1000A1F18);
  sub_100015614((uint64_t)v9, &qword_1000A1F18);
  sub_100015614((uint64_t)v21, &qword_1000A1F28);
  sub_100015614((uint64_t)v6, &qword_1000A1F18);
  return sub_100015614((uint64_t)v15, &qword_1000A1F28);
}

uint64_t sub_10004E830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v31 = sub_10000903C(&qword_1000A1F40);
  __chkstk_darwin(v31);
  uint64_t v4 = (uint64_t *)((char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for WidgetEmptyText();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_10000903C(&qword_1000A1F48);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10000903C(&qword_1000A1F50);
  __chkstk_darwin(v30);
  uint64_t v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10000903C(&qword_1000A1F58);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v21 = (char *)&v29 - v20;
  uint64_t v22 = type metadata accessor for EpisodeListWidgetSingle();
  int v23 = *(unsigned __int8 *)(a1 + *(int *)(v22 + 24));
  if (v23 == 2)
  {
    sub_10004EC98((uint64_t)v21);
    sub_1000155B0((uint64_t)v21, (uint64_t)v18, &qword_1000A1F58);
    void *v15 = 0x4010000000000000;
    uint64_t v24 = sub_10000903C(&qword_1000A1F60);
    sub_1000155B0((uint64_t)v18, (uint64_t)v15 + *(int *)(v24 + 48), &qword_1000A1F58);
    sub_100015614((uint64_t)v18, &qword_1000A1F58);
    sub_1000155B0((uint64_t)v15, (uint64_t)v13, &qword_1000A1F50);
    swift_storeEnumTagMultiPayload();
    sub_100015428(&qword_1000A1F68, &qword_1000A1F40);
    sub_100015428(&qword_1000A1F70, &qword_1000A1F50);
    sub_10008AAE0();
    sub_100015614((uint64_t)v15, &qword_1000A1F50);
    return sub_100015614((uint64_t)v21, &qword_1000A1F58);
  }
  else
  {
    char v26 = v23 & 1;
    uint64_t v27 = *(void *)(a1 + *(int *)(v22 + 20));
    sub_10006ABB0((uint64_t)&v10[*(int *)(v5 + 20)]);
    type metadata accessor for EpisodeViewStyle();
    swift_storeEnumTagMultiPayload();
    unsigned char *v10 = v26;
    sub_100050D44((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WidgetEmptyText);
    void *v4 = v27;
    uint64_t v28 = sub_10000903C(&qword_1000A1F78);
    sub_100050D44((uint64_t)v7, (uint64_t)v4 + *(int *)(v28 + 48), (uint64_t (*)(void))type metadata accessor for WidgetEmptyText);
    sub_100050DAC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WidgetEmptyText);
    sub_1000155B0((uint64_t)v4, (uint64_t)v13, &qword_1000A1F40);
    swift_storeEnumTagMultiPayload();
    sub_100015428(&qword_1000A1F68, &qword_1000A1F40);
    sub_100015428(&qword_1000A1F70, &qword_1000A1F50);
    sub_10008AAE0();
    sub_100015614((uint64_t)v4, &qword_1000A1F40);
    return sub_100050DAC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WidgetEmptyText);
  }
}

uint64_t sub_10004EC98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v133 = a1;
  uint64_t v129 = type metadata accessor for PlayButtonLarge(0);
  __chkstk_darwin(v129);
  uint64_t v130 = (uint64_t)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_10000903C(&qword_1000A1F80);
  __chkstk_darwin(v128);
  uint64_t v132 = (uint64_t)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v131 = (uint64_t)&v103 - v5;
  uint64_t v6 = sub_10008AC90();
  uint64_t v126 = *(void *)(v6 - 8);
  uint64_t v127 = v6;
  __chkstk_darwin(v6);
  uint64_t v125 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for EpisodeCaptionView();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10000903C(&qword_1000A1B80);
  __chkstk_darwin(v122);
  uint64_t v121 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10000903C(&qword_1000A1F88);
  __chkstk_darwin(v124);
  uint64_t v137 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v134 = (uint64_t)&v103 - v14;
  uint64_t v15 = sub_10008A7F0();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10008B160();
  uint64_t v120 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v118 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_10008AFA0();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v111 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10000903C(&qword_1000A1F90);
  __chkstk_darwin(v114);
  uint64_t v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10000903C(&qword_1000A1F98);
  __chkstk_darwin(v116);
  uint64_t v117 = (uint64_t)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_10000903C(&qword_1000A1FA0);
  __chkstk_darwin(v115);
  long long v25 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v119 = (uint64_t)&v103 - v27;
  uint64_t v28 = sub_10000903C(&qword_1000A1FA8);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v103 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v136 = (uint64_t)&v103 - v32;
  char v33 = sub_10004DA94();
  uint64_t v135 = v30;
  if (v33)
  {
    uint64_t v34 = sub_10000903C(&qword_1000A1FB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v136, 1, 1, v34);
  }
  else
  {
    uint64_t v35 = *((void *)v1 + 7);
    uint64_t v123 = v1;
    id v108 = v8;
    uint64_t v36 = *((void *)v1 + 8);
    uint64_t v138 = v35;
    uint64_t v139 = v36;
    sub_100031338();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_10008ADE0();
    uint64_t v109 = v10;
    uint64_t v38 = v37;
    uint64_t v110 = v18;
    uint64_t v40 = v39;
    uint64_t v106 = v17;
    uint64_t v107 = v25;
    char v42 = v41 & 1;
    sub_10008ACC0();
    sub_10008AC50();
    swift_release();
    uint64_t v104 = sub_10008AD50();
    uint64_t v44 = v43;
    char v46 = v45;
    uint64_t v105 = v47;
    swift_release();
    char v48 = v46 & 1;
    uint64_t v10 = v109;
    sub_10001546C(v38, v40, v42);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v112 + 104))(v111, enum case for Color.RGBColorSpace.sRGB(_:), v113);
    uint64_t v49 = sub_10008AFE0();
    uint64_t v50 = v120;
    uint64_t v51 = v118;
    uint64_t v52 = v110;
    (*(void (**)(char *, void, uint64_t))(v120 + 104))(v118, enum case for BlendMode.plusLighter(_:), v110);
    uint64_t v53 = (uint64_t)v106;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v106, v51, v52);
    sub_100050D44(v53, (uint64_t)&v22[*(int *)(v114 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    uint64_t v54 = v104;
    *(void *)uint64_t v22 = v104;
    *((void *)v22 + 1) = v44;
    uint64_t v55 = v44;
    v22[16] = v48;
    *((void *)v22 + 3) = v105;
    *((void *)v22 + 4) = v49;
    uint64_t v56 = v54;
    sub_100031774(v54, v55, v48);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100050DAC(v53, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v110);
    swift_release();
    sub_10001546C(v56, v55, v48);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v58 = v117;
    sub_1000155B0((uint64_t)v22, v117, &qword_1000A1F90);
    uint64_t v59 = v58 + *(int *)(v116 + 36);
    *(void *)uint64_t v59 = KeyPath;
    *(void *)(v59 + 8) = 0;
    *(unsigned char *)(v59 + 16) = 1;
    sub_100015614((uint64_t)v22, &qword_1000A1F90);
    uint64_t v60 = (uint64_t)v107;
    sub_1000155B0(v58, (uint64_t)v107, &qword_1000A1F98);
    *(void *)(v60 + *(int *)(v115 + 36)) = 0xBFF0000000000000;
    sub_100015614(v58, &qword_1000A1F98);
    uint64_t v61 = v119;
    sub_10001547C(v60, v119, &qword_1000A1FA0);
    sub_1000155B0(v61, v60, &qword_1000A1FA0);
    uint64_t v62 = v135;
    void *v135 = 0;
    *((unsigned char *)v62 + 8) = 0;
    uint64_t v63 = sub_10000903C(&qword_1000A1FB0);
    sub_1000155B0(v60, (uint64_t)v62 + *(int *)(v63 + 48), &qword_1000A1FA0);
    sub_100015614(v61, &qword_1000A1FA0);
    uint64_t v8 = v108;
    uint64_t v1 = v123;
    sub_100015614(v60, &qword_1000A1FA0);
    uint64_t v64 = sub_10000903C(&qword_1000A1FB8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v62, 0, 1, v64);
    sub_10001547C((uint64_t)v62, v136, &qword_1000A1FA8);
  }
  uint64_t v123 = type metadata accessor for UpNextEntry.Episode;
  sub_100050D44((uint64_t)v1, (uint64_t)v10, type metadata accessor for UpNextEntry.Episode);
  v10[v8[5]] = sub_10004DA94() & 1;
  v10[v8[6]] = 0;
  v10[v8[7]] = 1;
  sub_10008ACC0();
  uint64_t v65 = (uint64_t)v1;
  uint64_t v66 = sub_10008AC50();
  swift_release();
  uint64_t v67 = swift_getKeyPath();
  uint64_t v68 = v121;
  sub_100050D44((uint64_t)v10, v121, (uint64_t (*)(void))type metadata accessor for EpisodeCaptionView);
  uint64_t v69 = (uint64_t *)(v68 + *(int *)(v122 + 36));
  *uint64_t v69 = v67;
  v69[1] = v66;
  sub_100050DAC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for EpisodeCaptionView);
  uint64_t v70 = swift_getKeyPath();
  uint64_t v71 = v137;
  sub_1000155B0(v68, v137, &qword_1000A1B80);
  uint64_t v72 = v71 + *(int *)(v124 + 36);
  *(void *)uint64_t v72 = v70;
  *(unsigned char *)(v72 + 8) = 0;
  sub_100015614(v68, &qword_1000A1B80);
  sub_10001547C(v71, v134, &qword_1000A1F88);
  uint64_t v73 = *(void *)(v65 + 80);
  uint64_t v138 = *(void *)(v65 + 72);
  uint64_t v139 = v73;
  sub_100031338();
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_10008ADE0();
  uint64_t v76 = v75;
  char v78 = v77 & 1;
  sub_10008ACD0();
  char v80 = v125;
  uint64_t v79 = v126;
  uint64_t v81 = v127;
  (*(void (**)(char *, void, uint64_t))(v126 + 104))(v125, enum case for Font.Leading.tight(_:), v127);
  sub_10008ACB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v81);
  uint64_t v82 = sub_10008AD50();
  uint64_t v125 = v83;
  uint64_t v126 = v82;
  LOBYTE(v79) = v84;
  uint64_t v127 = v85;
  swift_release();
  LOBYTE(v81) = v79 & 1;
  sub_10001546C(v74, v76, v78);
  swift_bridgeObjectRelease();
  uint64_t v124 = sub_10004D820();
  LODWORD(v122) = v86;
  uint64_t v87 = swift_getKeyPath();
  uint64_t v88 = v130;
  sub_100050D44(v65, v130, v123);
  uint64_t v89 = sub_10008B140();
  uint64_t v90 = (uint64_t *)(v88 + *(int *)(v129 + 20));
  *uint64_t v90 = v89;
  v90[1] = v91;
  uint64_t v92 = v132;
  sub_100050D44(v88, v132, type metadata accessor for PlayButtonLarge);
  *(void *)(v92 + *(int *)(v128 + 36)) = 0x3FF0000000000000;
  sub_100050DAC(v88, type metadata accessor for PlayButtonLarge);
  uint64_t v93 = v131;
  sub_10001547C(v92, v131, &qword_1000A1F80);
  uint64_t v94 = v135;
  sub_1000155B0(v136, (uint64_t)v135, &qword_1000A1FA8);
  uint64_t v95 = v134;
  uint64_t v96 = v137;
  sub_1000155B0(v134, v137, &qword_1000A1F88);
  sub_1000155B0(v93, v92, &qword_1000A1F80);
  uint64_t v97 = v133;
  sub_1000155B0((uint64_t)v94, v133, &qword_1000A1FA8);
  uint64_t v98 = (int *)sub_10000903C(&qword_1000A1FC0);
  sub_1000155B0(v96, v97 + v98[12], &qword_1000A1F88);
  uint64_t v99 = v97 + v98[16];
  uint64_t v100 = (uint64_t)v125;
  uint64_t v101 = v126;
  *(void *)uint64_t v99 = v126;
  *(void *)(v99 + 8) = v100;
  *(unsigned char *)(v99 + 16) = v81;
  *(void *)(v99 + 24) = v127;
  *(void *)(v99 + 32) = v87;
  *(void *)(v99 + 40) = v124;
  *(unsigned char *)(v99 + 48) = v122 & 1;
  *(void *)(v97 + v98[20]) = 0x4014000000000000;
  sub_1000155B0(v92, v97 + v98[24], &qword_1000A1F80);
  sub_100031774(v101, v100, v81);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100015614(v93, &qword_1000A1F80);
  sub_100015614(v95, &qword_1000A1F88);
  sub_100015614(v136, &qword_1000A1FA8);
  sub_100015614(v92, &qword_1000A1F80);
  sub_10001546C(v101, v100, v81);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100015614(v137, &qword_1000A1F88);
  return sub_100015614((uint64_t)v135, &qword_1000A1FA8);
}

uint64_t sub_10004FA90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t result = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v5 = *(void *)(a2 + *(int *)(v3 + 84));
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_10000E31C(v5);
    sub_10000903C(&qword_1000A1EB8);
    sub_100015428(&qword_1000A1EE0, &qword_1000A1EB8);
    sub_100031338();
    sub_10000E368();
    sub_10008ADF0();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004FBDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v47 = type metadata accessor for Logo();
  __chkstk_darwin(v47);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v48 = (uint64_t)&v43 - v6;
  uint64_t v45 = type metadata accessor for EpisodeViewStyle();
  __chkstk_darwin(v45);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = type metadata accessor for UpNextEntry.Episode(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for WidgetArtworkView();
  __chkstk_darwin(v44);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10000903C(&qword_1000A1FD0);
  __chkstk_darwin(v43);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v43 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v43 - v23;
  uint64_t v25 = sub_10000903C(&qword_1000A1FD8);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v46 = (uint64_t)&v43 - v29;
  uint64_t v50 = a1;
  if (sub_10004DA94())
  {
    sub_100050D44(v50, (uint64_t)v14, type metadata accessor for UpNextEntry.Episode);
    type metadata accessor for EpisodeListWidgetSingle();
    sub_10006ABB0((uint64_t)v11);
    swift_storeEnumTagMultiPayload();
    sub_100050D44((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
    if (swift_getEnumCaseMultiPayload() == 1) {
      double v30 = 8.0;
    }
    else {
      double v30 = 6.0;
    }
    sub_100050DAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
    sub_100050DAC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
    sub_100050CDC((uint64_t)v14, (uint64_t)v16, type metadata accessor for UpNextEntry.Episode);
    *(double *)&v16[*(int *)(v44 + 20)] = v30;
    sub_100050D44((uint64_t)v16, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
    *(void *)&v21[*(int *)(v43 + 36)] = 0xBFF0000000000000;
    sub_100050DAC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
    sub_10001547C((uint64_t)v21, (uint64_t)v24, &qword_1000A1FD0);
    sub_1000155B0((uint64_t)v24, (uint64_t)v18, &qword_1000A1FD0);
    sub_1000155B0((uint64_t)v18, (uint64_t)v27, &qword_1000A1FD0);
    uint64_t v31 = &v27[*(int *)(sub_10000903C(&qword_1000A1FF0) + 48)];
    *(void *)uint64_t v31 = 0;
    v31[8] = 1;
    sub_100015614((uint64_t)v24, &qword_1000A1FD0);
    sub_100015614((uint64_t)v18, &qword_1000A1FD0);
    uint64_t v32 = sub_10000903C(&qword_1000A1FE0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v27, 0, 1, v32);
    uint64_t v33 = v46;
    sub_10001547C((uint64_t)v27, v46, &qword_1000A1FD8);
  }
  else
  {
    uint64_t v34 = sub_10000903C(&qword_1000A1FE0);
    uint64_t v33 = v46;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v46, 1, 1, v34);
  }
  *(void *)uint64_t v4 = swift_getKeyPath();
  v4[8] = 0;
  uint64_t v35 = v47;
  uint64_t v36 = (uint64_t *)&v4[*(int *)(v47 + 20)];
  *uint64_t v36 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = (uint64_t *)&v4[*(int *)(v35 + 24)];
  *uint64_t v37 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = v48;
  sub_100050CDC((uint64_t)v4, v48, (uint64_t (*)(void))type metadata accessor for Logo);
  LOBYTE(v35) = sub_10004DA94();
  sub_1000155B0(v33, (uint64_t)v27, &qword_1000A1FD8);
  sub_100050D44(v38, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Logo);
  uint64_t v39 = v49;
  sub_1000155B0((uint64_t)v27, v49, &qword_1000A1FD8);
  uint64_t v40 = sub_10000903C(&qword_1000A1FE8);
  sub_100050D44((uint64_t)v4, v39 + *(int *)(v40 + 48), (uint64_t (*)(void))type metadata accessor for Logo);
  uint64_t v41 = v39 + *(int *)(v40 + 64);
  *(void *)uint64_t v41 = 0;
  *(unsigned char *)(v41 + 8) = (v35 & 1) == 0;
  *(unsigned char *)(v41 + 9) = v35 & 1;
  sub_100050DAC(v38, (uint64_t (*)(void))type metadata accessor for Logo);
  sub_100015614(v33, &qword_1000A1FD8);
  sub_100050DAC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Logo);
  return sub_100015614((uint64_t)v27, &qword_1000A1FD8);
}

uint64_t sub_100050278()
{
  uint64_t v1 = v0;
  uint64_t v50 = (int *)type metadata accessor for EpisodeListWidgetSingle();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v50 - 1) + 80);
  uint64_t v51 = *(void *)(*((void *)v50 - 1) + 64);
  uint64_t v52 = (v2 + 16) & ~v2;
  uint64_t v3 = v0 + v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v5 = v0 + v52 + v4[10];
  uint64_t v6 = sub_10008A170();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v48(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v49 = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v4[12];
  uint64_t v9 = sub_10008A340();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v11 = *(unsigned __int8 *)(v8 + 32);
    if (v11 != 255) {
      sub_1000096D4(*(void *)(v8 + 16), *(void *)(v8 + 24), v11);
    }
    int v12 = *(unsigned __int8 *)(v8 + 64);
    if (v12 != 255) {
      sub_1000096EC(*(id *)(v8 + 56), v12);
    }
    int v13 = *(unsigned __int8 *)(v8 + 80);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v8 + 72), v13);
    }
    int v14 = *(unsigned __int8 *)(v8 + 96);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v8 + 88), v14);
    }
    int v15 = *(unsigned __int8 *)(v8 + 112);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v8 + 104), v15);
    }
    int v16 = *(unsigned __int8 *)(v8 + 128);
    if (v16 != 255) {
      sub_1000096EC(*(id *)(v8 + 120), v16);
    }
    uint64_t v17 = v8 + *(int *)(v9 + 44);
    uint64_t v18 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v0;
  }
  uint64_t v19 = v3 + v4[13];
  if (!v10(v19, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v20 = *(unsigned __int8 *)(v19 + 32);
    if (v20 != 255) {
      sub_1000096D4(*(void *)(v19 + 16), *(void *)(v19 + 24), v20);
    }
    int v21 = *(unsigned __int8 *)(v19 + 64);
    if (v21 != 255) {
      sub_1000096EC(*(id *)(v19 + 56), v21);
    }
    int v22 = *(unsigned __int8 *)(v19 + 80);
    if (v22 != 255) {
      sub_1000096EC(*(id *)(v19 + 72), v22);
    }
    int v23 = *(unsigned __int8 *)(v19 + 96);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v19 + 88), v23);
    }
    int v24 = *(unsigned __int8 *)(v19 + 112);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v19 + 104), v24);
    }
    uint64_t v25 = v1;
    int v26 = *(unsigned __int8 *)(v19 + 128);
    if (v26 != 255) {
      sub_1000096EC(*(id *)(v19 + 120), v26);
    }
    uint64_t v27 = v19 + *(int *)(v9 + 44);
    uint64_t v28 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v25;
  }

  uint64_t v29 = v3 + v4[15];
  uint64_t v30 = sub_10008A050();
  uint64_t v31 = *(void *)(v30 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30)) {
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  }
  uint64_t v32 = v3 + v4[19];
  if (!v48(v32, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v32, v6);
  }
  uint64_t v33 = v3 + v4[20];
  if (!v48(v33, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v33, v6);
  }
  if (*(void *)(v3 + v4[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v34 = v3 + v4[22];
  uint64_t v35 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
  {
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v36(v34, v6);
    v36(v34 + *(int *)(v35 + 36), v6);
  }
  uint64_t v37 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v38 = v34 + *(int *)(v37 + 20);
  uint64_t v39 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
  uint64_t v40 = v34 + *(int *)(v37 + 24);
  uint64_t v41 = sub_10008A4B0();
  uint64_t v42 = *(void *)(v41 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41)) {
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v3 + v50[7];
  sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = sub_10008B220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
  }
  else
  {
    swift_release();
  }
  sub_100009700(*(void *)(v3 + v50[8]), *(unsigned char *)(v3 + v50[8] + 8));
  uint64_t v45 = v3 + v50[9];
  sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v46 = sub_10008B1F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v1, v52 + v51, v2 | 7);
}

uint64_t sub_1000509EC()
{
  uint64_t v1 = *(void *)(type metadata accessor for EpisodeListWidgetSingle() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10004E2F0(v2);
}

uint64_t sub_100050A5C(uint64_t a1)
{
  return sub_10004FA90(a1, *(void *)(v1 + 16));
}

unint64_t sub_100050A64()
{
  unint64_t result = qword_1000A1F00;
  if (!qword_1000A1F00)
  {
    sub_10000E49C(&qword_1000A1EF0);
    sub_100015428(&qword_1000A1F08, &qword_1000A1EE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1F00);
  }
  return result;
}

uint64_t sub_100050B04@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10008A950();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100050B38@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10008A950();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100050B6C()
{
  return sub_10008A960();
}

uint64_t sub_100050B9C()
{
  return sub_10008A960();
}

uint64_t sub_100050BCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008A8E0();
  *a1 = result;
  return result;
}

uint64_t sub_100050BF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008A8E0();
  *a1 = result;
  return result;
}

uint64_t sub_100050C24()
{
  return sub_10008A8F0();
}

uint64_t sub_100050C50()
{
  return sub_10008A8F0();
}

uint64_t sub_100050C84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100050CDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100050D44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100050DAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100050E0C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000E49C(a2);
    sub_100015428(a3, a4);
    sub_100050C84((unint64_t *)&qword_1000A1238, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100050EDC()
{
  unint64_t result = qword_1000A2020;
  if (!qword_1000A2020)
  {
    sub_10000E49C(&qword_1000A2028);
    sub_100050E0C(&qword_1000A1ED8, &qword_1000A1ED0, &qword_1000A1EE0, &qword_1000A1EB8);
    sub_100015428(&qword_1000A1EE0, &qword_1000A1EB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2020);
  }
  return result;
}

uint64_t sub_100050FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t View.restrictingSize<A>(alignment:toViewSize:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(__n128)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  void v20[2] = a6;
  v20[0] = a7;
  v20[1] = a4;
  uint64_t v11 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  int v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SizeRestrictingModifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v20 - v17;
  a3(v16);
  *(void *)uint64_t v18 = a1;
  *((void *)v18 + 1) = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[*(int *)(v14 + 36)], v13, a5);
  sub_10008AF70();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t type metadata accessor for SizeRestrictingModifier()
{
  return sub_10005206C();
}

uint64_t sub_10005119C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  uint64_t v7 = (char *)a5 + *(int *)(type metadata accessor for SizeRestrictingModifier() + 36);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);

  return v8(v7, a3, a4);
}

uint64_t SizeRestrictingModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v25 = a3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = sub_10008A790();
  uint64_t v24 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v22 - v6;
  swift_getWitnessTable();
  v22[1] = sub_10008AB00();
  v22[0] = swift_getWitnessTable();
  v22[2] = sub_10008A810();
  uint64_t v8 = sub_10008A790();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v22 - v13;
  uint64_t v15 = *(void *)(a2 + 24);
  sub_10008AF40();
  uint64_t v26 = v4;
  uint64_t v27 = v15;
  uint64_t v28 = v23;
  unint64_t v16 = sub_1000516A4();
  uint64_t v31 = v15;
  unint64_t v32 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_10008AF50();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v29 = WitnessTable;
  uint64_t v30 = v18;
  swift_getWitnessTable();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v19(v14, v11, v8);
  int v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v11, v8);
  v19(v25, v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v14, v8);
}

uint64_t sub_100051548@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  type metadata accessor for SizeRestrictingModifier();
  swift_getWitnessTable();
  uint64_t v4 = sub_10008AB00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - v6;
  swift_getWitnessTable();
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v8(v7, a1, v4);
  v8(a2, (uint64_t)v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100051698@<X0>(char *a1@<X8>)
{
  return sub_100051548(*(void *)(v1 + 32), a1);
}

unint64_t sub_1000516A4()
{
  unint64_t result = qword_1000A2060[0];
  if (!qword_1000A2060[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A2060);
  }
  return result;
}

uint64_t sub_1000516F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100051740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100051748()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000517E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 16) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 16) & ~v5, ((unint64_t)a2 + v5 + 16) & ~v5);
  }
  return v3;
}

uint64_t sub_1000518CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

_OWORD *sub_100051908(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_100051978(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_1000519F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_100051A60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_100051AD0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_100051C4C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 16) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x100051E80);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 16] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_100051EA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100051F3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10005206C()
{
  return swift_getGenericMetadata();
}

void *sub_10005209C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    a1[10] = a2[10];
    id v167 = (int *)type metadata accessor for UpNextEntry.Episode(0);
    uint64_t v11 = v167[10];
    __dst = (char *)a1 + v11;
    int v162 = a1;
    id v163 = a2;
    int v12 = (char *)a2 + v11;
    uint64_t v13 = sub_10008A170();
    uint64_t v14 = *(void *)(v13 - 8);
    unsigned int v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v166 = v15;
    uint64_t v164 = v16;
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000903C(&qword_1000A1038);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v16);
    }
    int v20 = v167;
    uint64_t v21 = v167[11];
    uint64_t v19 = v162;
    int v22 = (void *)((char *)v162 + v21);
    uint64_t v23 = (void *)((char *)v163 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v167[12];
    uint64_t v26 = (void *)((char *)v162 + v25);
    uint64_t v27 = (void *)((char *)v163 + v25);
    uint64_t v28 = (int *)sub_10008A340();
    __dsta = (void *)*((void *)v28 - 1);
    uint64_t v29 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
    swift_bridgeObjectRetain();
    if (v29(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1040);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v27[1];
      void *v26 = *v27;
      v26[1] = v31;
      int v32 = *((unsigned __int8 *)v27 + 32);
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
        *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
      }
      else
      {
        uint64_t v33 = v27[2];
        uint64_t v34 = v27[3];
        sub_100009080(v33, v34, v32);
        v26[2] = v33;
        v26[3] = v34;
        *((unsigned char *)v26 + 32) = v32;
      }
      *(_OWORD *)(v26 + 5) = *(_OWORD *)(v27 + 5);
      uint64_t v35 = (id *)(v27 + 7);
      int v36 = *((unsigned __int8 *)v27 + 64);
      if (v36 == 255)
      {
        v26[7] = *v35;
        *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
      }
      else
      {
        id v37 = *v35;
        sub_100009098(*v35, *((unsigned char *)v27 + 64));
        v26[7] = v37;
        *((unsigned char *)v26 + 64) = v36;
      }
      uint64_t v38 = (id *)(v27 + 9);
      int v39 = *((unsigned __int8 *)v27 + 80);
      if (v39 == 255)
      {
        v26[9] = *v38;
        *((unsigned char *)v26 + 80) = *((unsigned char *)v27 + 80);
      }
      else
      {
        id v40 = *v38;
        sub_100009098(*v38, *((unsigned char *)v27 + 80));
        v26[9] = v40;
        *((unsigned char *)v26 + 80) = v39;
      }
      uint64_t v41 = (id *)(v27 + 11);
      int v42 = *((unsigned __int8 *)v27 + 96);
      if (v42 == 255)
      {
        v26[11] = *v41;
        *((unsigned char *)v26 + 96) = *((unsigned char *)v27 + 96);
      }
      else
      {
        id v43 = *v41;
        sub_100009098(*v41, *((unsigned char *)v27 + 96));
        v26[11] = v43;
        *((unsigned char *)v26 + 96) = v42;
      }
      uint64_t v44 = (id *)(v27 + 13);
      int v45 = *((unsigned __int8 *)v27 + 112);
      if (v45 == 255)
      {
        v26[13] = *v44;
        *((unsigned char *)v26 + 112) = *((unsigned char *)v27 + 112);
      }
      else
      {
        id v46 = *v44;
        sub_100009098(*v44, *((unsigned char *)v27 + 112));
        v26[13] = v46;
        *((unsigned char *)v26 + 112) = v45;
      }
      uint64_t v47 = (id *)(v27 + 15);
      int v48 = *((unsigned __int8 *)v27 + 128);
      if (v48 == 255)
      {
        v26[15] = *v47;
        *((unsigned char *)v26 + 128) = *((unsigned char *)v27 + 128);
      }
      else
      {
        id v49 = *v47;
        sub_100009098(*v47, *((unsigned char *)v27 + 128));
        v26[15] = v49;
        *((unsigned char *)v26 + 128) = v48;
      }
      int v20 = v167;
      *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
      uint64_t v50 = v28[11];
      uint64_t v51 = (char *)v26 + v50;
      uint64_t v52 = (char *)v27 + v50;
      uint64_t v53 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v28[12];
      uint64_t v55 = (void *)((char *)v26 + v54);
      uint64_t v56 = (void *)((char *)v27 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      *((unsigned char *)v26 + v28[13]) = *((unsigned char *)v27 + v28[13]);
      *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
      *((unsigned char *)v26 + v28[15]) = *((unsigned char *)v27 + v28[15]);
      uint64_t v58 = v28[16];
      uint64_t v59 = (void *)((char *)v26 + v58);
      uint64_t v60 = (void *)((char *)v27 + v58);
      uint64_t v61 = v60[1];
      void *v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(v26, 0, 1, v28);
    }
    uint64_t v63 = v20[13];
    uint64_t v64 = (void *)((char *)v162 + v63);
    uint64_t v65 = (void *)((char *)v163 + v63);
    if (v29((void *)((char *)v163 + v63), 1, v28))
    {
      uint64_t v66 = sub_10000903C(&qword_1000A1040);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v14;
    }
    else
    {
      uint64_t v68 = v65[1];
      void *v64 = *v65;
      v64[1] = v68;
      int v69 = *((unsigned __int8 *)v65 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = v14;
      if (v69 == 255)
      {
        *((_OWORD *)v64 + 1) = *((_OWORD *)v65 + 1);
        *((unsigned char *)v64 + 32) = *((unsigned char *)v65 + 32);
      }
      else
      {
        uint64_t v70 = v65[2];
        uint64_t v71 = v65[3];
        sub_100009080(v70, v71, v69);
        v64[2] = v70;
        v64[3] = v71;
        *((unsigned char *)v64 + 32) = v69;
      }
      *(_OWORD *)(v64 + 5) = *(_OWORD *)(v65 + 5);
      uint64_t v72 = (id *)(v65 + 7);
      int v73 = *((unsigned __int8 *)v65 + 64);
      if (v73 == 255)
      {
        v64[7] = *v72;
        *((unsigned char *)v64 + 64) = *((unsigned char *)v65 + 64);
      }
      else
      {
        id v74 = *v72;
        sub_100009098(*v72, *((unsigned char *)v65 + 64));
        v64[7] = v74;
        *((unsigned char *)v64 + 64) = v73;
      }
      uint64_t v75 = (id *)(v65 + 9);
      int v76 = *((unsigned __int8 *)v65 + 80);
      if (v76 == 255)
      {
        v64[9] = *v75;
        *((unsigned char *)v64 + 80) = *((unsigned char *)v65 + 80);
      }
      else
      {
        id v77 = *v75;
        sub_100009098(*v75, *((unsigned char *)v65 + 80));
        v64[9] = v77;
        *((unsigned char *)v64 + 80) = v76;
      }
      char v78 = (id *)(v65 + 11);
      int v79 = *((unsigned __int8 *)v65 + 96);
      if (v79 == 255)
      {
        v64[11] = *v78;
        *((unsigned char *)v64 + 96) = *((unsigned char *)v65 + 96);
      }
      else
      {
        id v80 = *v78;
        sub_100009098(*v78, *((unsigned char *)v65 + 96));
        v64[11] = v80;
        *((unsigned char *)v64 + 96) = v79;
      }
      uint64_t v81 = (id *)(v65 + 13);
      int v82 = *((unsigned __int8 *)v65 + 112);
      if (v82 == 255)
      {
        v64[13] = *v81;
        *((unsigned char *)v64 + 112) = *((unsigned char *)v65 + 112);
      }
      else
      {
        id v83 = *v81;
        sub_100009098(*v81, *((unsigned char *)v65 + 112));
        v64[13] = v83;
        *((unsigned char *)v64 + 112) = v82;
      }
      char v84 = (id *)(v65 + 15);
      int v85 = *((unsigned __int8 *)v65 + 128);
      if (v85 == 255)
      {
        v64[15] = *v84;
        *((unsigned char *)v64 + 128) = *((unsigned char *)v65 + 128);
      }
      else
      {
        id v86 = *v84;
        sub_100009098(*v84, *((unsigned char *)v65 + 128));
        v64[15] = v86;
        *((unsigned char *)v64 + 128) = v85;
      }
      int v20 = v167;
      *((unsigned char *)v64 + 129) = *((unsigned char *)v65 + 129);
      uint64_t v87 = v28[11];
      uint64_t v88 = (char *)v64 + v87;
      uint64_t v89 = (char *)v65 + v87;
      uint64_t v90 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      uint64_t v91 = v28[12];
      uint64_t v92 = (void *)((char *)v64 + v91);
      uint64_t v93 = (void *)((char *)v65 + v91);
      uint64_t v94 = v93[1];
      void *v92 = *v93;
      v92[1] = v94;
      *((unsigned char *)v64 + v28[13]) = *((unsigned char *)v65 + v28[13]);
      *((unsigned char *)v64 + v28[14]) = *((unsigned char *)v65 + v28[14]);
      *((unsigned char *)v64 + v28[15]) = *((unsigned char *)v65 + v28[15]);
      uint64_t v95 = v28[16];
      uint64_t v96 = (void *)((char *)v64 + v95);
      uint64_t v97 = (void *)((char *)v65 + v95);
      uint64_t v98 = v97[1];
      void *v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99(v64, 0, 1, v28);
    }
    uint64_t v100 = v20[14];
    uint64_t v101 = *(void **)((char *)v163 + v100);
    *(void *)((char *)v162 + v100) = v101;
    uint64_t v102 = v20[15];
    uint64_t v103 = (char *)v162 + v102;
    uint64_t v104 = (char *)v163 + v102;
    uint64_t v105 = sub_10008A050();
    uint64_t v106 = *(void *)(v105 - 8);
    uint64_t v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
    id v108 = v101;
    if (v107(v104, 1, v105))
    {
      uint64_t v109 = sub_10000903C(&qword_1000A1048);
      memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
    }
    *((unsigned char *)v162 + v167[16]) = *((unsigned char *)v163 + v167[16]);
    uint64_t v110 = v167[17];
    uint64_t v111 = (char *)v162 + v110;
    uint64_t v112 = (char *)v163 + v110;
    *(void *)uint64_t v111 = *(void *)v112;
    v111[8] = v112[8];
    uint64_t v113 = v167[18];
    uint64_t v114 = (char *)v162 + v113;
    uint64_t v115 = (char *)v163 + v113;
    *(void *)uint64_t v114 = *(void *)v115;
    v114[8] = v115[8];
    uint64_t v116 = v167[19];
    uint64_t v117 = (char *)v162 + v116;
    uint64_t v118 = (char *)v163 + v116;
    if (v166((char *)v163 + v116, 1, v164))
    {
      uint64_t v119 = sub_10000903C(&qword_1000A1038);
      memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v117, v118, v164);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v117, 0, 1, v164);
    }
    uint64_t v120 = v167[20];
    uint64_t v121 = (char *)v162 + v120;
    uint64_t v122 = (char *)v163 + v120;
    if (v166((char *)v163 + v120, 1, v164))
    {
      uint64_t v123 = sub_10000903C(&qword_1000A1038);
      memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v121, v122, v164);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v121, 0, 1, v164);
    }
    uint64_t v124 = v167[21];
    uint64_t v125 = (void *)((char *)v162 + v124);
    uint64_t v126 = (void *)((char *)v163 + v124);
    if (*v126)
    {
      uint64_t v127 = v126[1];
      uint64_t v128 = v126[2];
      void *v125 = *v126;
      v125[1] = v127;
      v125[2] = v128;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
      v125[2] = v126[2];
    }
    uint64_t v129 = v167[22];
    uint64_t v130 = (char *)v162 + v129;
    uint64_t v131 = (char *)v163 + v129;
    uint64_t v132 = sub_10000903C(&qword_1000A1050);
    uint64_t v133 = *(void *)(v132 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
    {
      uint64_t v134 = sub_10000903C(&qword_1000A1058);
      memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      uint64_t v135 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v135(v130, v131, v164);
      v135(&v130[*(int *)(v132 + 36)], &v131[*(int *)(v132 + 36)], v164);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
    }
    uint64_t v136 = (int *)type metadata accessor for WidgetPredictedPlayState();
    uint64_t v137 = v136[5];
    uint64_t v138 = &v130[v137];
    uint64_t v139 = &v131[v137];
    uint64_t v140 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
    uint64_t v141 = v136[6];
    uint64_t v142 = &v130[v141];
    int v143 = &v131[v141];
    uint64_t v144 = sub_10008A4B0();
    uint64_t v145 = *(void *)(v144 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
    {
      uint64_t v146 = sub_10000903C(&qword_1000A1060);
      memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v142, v143, v144);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
    }
    uint64_t v147 = v136[7];
    uint64_t v148 = &v130[v147];
    int v149 = &v131[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *(void *)uint64_t v148 = *(void *)v149;
    *((void *)v148 + 1) = v150;
    uint64_t v151 = v136[8];
    uint64_t v152 = &v130[v151];
    int v153 = &v131[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)uint64_t v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    uint64_t v155 = *(int *)(a3 + 24);
    *((unsigned char *)v162 + *(int *)(a3 + 20)) = *((unsigned char *)v163 + *(int *)(a3 + 20));
    uint64_t v156 = (_OWORD *)((char *)v162 + v155);
    int v157 = (_OWORD *)((char *)v163 + v155);
    long long v158 = v157[1];
    _OWORD *v156 = *v157;
    v156[1] = v158;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v19;
}

void *sub_100052DCC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  id v163 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v10 = v163[10];
  __dst = (char *)a1 + v10;
  id v159 = a1;
  uint64_t v160 = a2;
  uint64_t v11 = (char *)a2 + v10;
  uint64_t v12 = sub_10008A170();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v161 = v15;
  if (v14(v11, 1, v15))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v17 = v163;
  uint64_t v18 = v163[11];
  uint64_t v19 = (void *)((char *)v159 + v18);
  int v20 = (void *)((char *)v160 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v163[12];
  uint64_t v23 = (void *)((char *)v159 + v22);
  uint64_t v24 = (void *)((char *)v160 + v22);
  uint64_t v25 = (int *)sub_10008A340();
  __dsta = (void *)*((void *)v25 - 1);
  uint64_t v26 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    uint64_t v27 = sub_10000903C(&qword_1000A1040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v24[1];
    void *v23 = *v24;
    v23[1] = v28;
    int v29 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
    }
    else
    {
      uint64_t v30 = v24[2];
      uint64_t v31 = v24[3];
      sub_100009080(v30, v31, v29);
      v23[2] = v30;
      void v23[3] = v31;
      *((unsigned char *)v23 + 32) = v29;
    }
    *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
    int v32 = (id *)(v24 + 7);
    int v33 = *((unsigned __int8 *)v24 + 64);
    if (v33 == 255)
    {
      v23[7] = *v32;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
    }
    else
    {
      id v34 = *v32;
      sub_100009098(*v32, *((unsigned char *)v24 + 64));
      v23[7] = v34;
      *((unsigned char *)v23 + 64) = v33;
    }
    uint64_t v35 = (id *)(v24 + 9);
    int v36 = *((unsigned __int8 *)v24 + 80);
    if (v36 == 255)
    {
      v23[9] = *v35;
      *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
    }
    else
    {
      id v37 = *v35;
      sub_100009098(*v35, *((unsigned char *)v24 + 80));
      v23[9] = v37;
      *((unsigned char *)v23 + 80) = v36;
    }
    uint64_t v38 = (id *)(v24 + 11);
    int v39 = *((unsigned __int8 *)v24 + 96);
    if (v39 == 255)
    {
      v23[11] = *v38;
      *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
    }
    else
    {
      id v40 = *v38;
      sub_100009098(*v38, *((unsigned char *)v24 + 96));
      v23[11] = v40;
      *((unsigned char *)v23 + 96) = v39;
    }
    uint64_t v41 = (id *)(v24 + 13);
    int v42 = *((unsigned __int8 *)v24 + 112);
    if (v42 == 255)
    {
      v23[13] = *v41;
      *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_100009098(*v41, *((unsigned char *)v24 + 112));
      v23[13] = v43;
      *((unsigned char *)v23 + 112) = v42;
    }
    uint64_t v44 = (id *)(v24 + 15);
    int v45 = *((unsigned __int8 *)v24 + 128);
    if (v45 == 255)
    {
      v23[15] = *v44;
      *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_100009098(*v44, *((unsigned char *)v24 + 128));
      v23[15] = v46;
      *((unsigned char *)v23 + 128) = v45;
    }
    uint64_t v17 = v163;
    *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
    uint64_t v47 = v25[11];
    int v48 = (char *)v23 + v47;
    id v49 = (char *)v24 + v47;
    uint64_t v50 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v25[12];
    uint64_t v52 = (void *)((char *)v23 + v51);
    uint64_t v53 = (void *)((char *)v24 + v51);
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
    *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
    *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
    uint64_t v55 = v25[16];
    uint64_t v56 = (void *)((char *)v23 + v55);
    uint64_t v57 = (void *)((char *)v24 + v55);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v23, 0, 1, v25);
  }
  uint64_t v60 = v17[13];
  uint64_t v61 = (void *)((char *)v159 + v60);
  uint64_t v62 = (void *)((char *)v160 + v60);
  if (v26((void *)((char *)v160 + v60), 1, v25))
  {
    uint64_t v63 = sub_10000903C(&qword_1000A1040);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    uint64_t v64 = v13;
  }
  else
  {
    uint64_t v65 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v65;
    int v66 = *((unsigned __int8 *)v62 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = v13;
    if (v66 == 255)
    {
      *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
      *((unsigned char *)v61 + 32) = *((unsigned char *)v62 + 32);
    }
    else
    {
      uint64_t v67 = v62[2];
      uint64_t v68 = v62[3];
      sub_100009080(v67, v68, v66);
      v61[2] = v67;
      v61[3] = v68;
      *((unsigned char *)v61 + 32) = v66;
    }
    *(_OWORD *)(v61 + 5) = *(_OWORD *)(v62 + 5);
    int v69 = (id *)(v62 + 7);
    int v70 = *((unsigned __int8 *)v62 + 64);
    if (v70 == 255)
    {
      v61[7] = *v69;
      *((unsigned char *)v61 + 64) = *((unsigned char *)v62 + 64);
    }
    else
    {
      id v71 = *v69;
      sub_100009098(*v69, *((unsigned char *)v62 + 64));
      v61[7] = v71;
      *((unsigned char *)v61 + 64) = v70;
    }
    uint64_t v72 = (id *)(v62 + 9);
    int v73 = *((unsigned __int8 *)v62 + 80);
    if (v73 == 255)
    {
      v61[9] = *v72;
      *((unsigned char *)v61 + 80) = *((unsigned char *)v62 + 80);
    }
    else
    {
      id v74 = *v72;
      sub_100009098(*v72, *((unsigned char *)v62 + 80));
      v61[9] = v74;
      *((unsigned char *)v61 + 80) = v73;
    }
    uint64_t v75 = (id *)(v62 + 11);
    int v76 = *((unsigned __int8 *)v62 + 96);
    if (v76 == 255)
    {
      v61[11] = *v75;
      *((unsigned char *)v61 + 96) = *((unsigned char *)v62 + 96);
    }
    else
    {
      id v77 = *v75;
      sub_100009098(*v75, *((unsigned char *)v62 + 96));
      v61[11] = v77;
      *((unsigned char *)v61 + 96) = v76;
    }
    char v78 = (id *)(v62 + 13);
    int v79 = *((unsigned __int8 *)v62 + 112);
    if (v79 == 255)
    {
      v61[13] = *v78;
      *((unsigned char *)v61 + 112) = *((unsigned char *)v62 + 112);
    }
    else
    {
      id v80 = *v78;
      sub_100009098(*v78, *((unsigned char *)v62 + 112));
      v61[13] = v80;
      *((unsigned char *)v61 + 112) = v79;
    }
    uint64_t v81 = (id *)(v62 + 15);
    int v82 = *((unsigned __int8 *)v62 + 128);
    if (v82 == 255)
    {
      v61[15] = *v81;
      *((unsigned char *)v61 + 128) = *((unsigned char *)v62 + 128);
    }
    else
    {
      id v83 = *v81;
      sub_100009098(*v81, *((unsigned char *)v62 + 128));
      v61[15] = v83;
      *((unsigned char *)v61 + 128) = v82;
    }
    uint64_t v17 = v163;
    *((unsigned char *)v61 + 129) = *((unsigned char *)v62 + 129);
    uint64_t v84 = v25[11];
    int v85 = (char *)v61 + v84;
    id v86 = (char *)v62 + v84;
    uint64_t v87 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    uint64_t v88 = v25[12];
    uint64_t v89 = (void *)((char *)v61 + v88);
    uint64_t v90 = (void *)((char *)v62 + v88);
    uint64_t v91 = v90[1];
    void *v89 = *v90;
    v89[1] = v91;
    *((unsigned char *)v61 + v25[13]) = *((unsigned char *)v62 + v25[13]);
    *((unsigned char *)v61 + v25[14]) = *((unsigned char *)v62 + v25[14]);
    *((unsigned char *)v61 + v25[15]) = *((unsigned char *)v62 + v25[15]);
    uint64_t v92 = v25[16];
    uint64_t v93 = (void *)((char *)v61 + v92);
    uint64_t v94 = (void *)((char *)v62 + v92);
    uint64_t v95 = v94[1];
    void *v93 = *v94;
    v93[1] = v95;
    uint64_t v96 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96(v61, 0, 1, v25);
  }
  uint64_t v97 = v17[14];
  uint64_t v98 = *(void **)((char *)v160 + v97);
  *(void *)((char *)v159 + v97) = v98;
  uint64_t v99 = v17[15];
  uint64_t v100 = (char *)v159 + v99;
  uint64_t v101 = (char *)v160 + v99;
  uint64_t v102 = sub_10008A050();
  uint64_t v103 = *(void *)(v102 - 8);
  uint64_t v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
  id v105 = v98;
  if (v104(v101, 1, v102))
  {
    uint64_t v106 = sub_10000903C(&qword_1000A1048);
    memcpy(v100, v101, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  *((unsigned char *)v159 + v163[16]) = *((unsigned char *)v160 + v163[16]);
  uint64_t v107 = v163[17];
  id v108 = (char *)v159 + v107;
  uint64_t v109 = (char *)v160 + v107;
  *(void *)id v108 = *(void *)v109;
  v108[8] = v109[8];
  uint64_t v110 = v163[18];
  uint64_t v111 = (char *)v159 + v110;
  uint64_t v112 = (char *)v160 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  v111[8] = v112[8];
  uint64_t v113 = v163[19];
  uint64_t v114 = (char *)v159 + v113;
  uint64_t v115 = (char *)v160 + v113;
  if (v14((char *)v160 + v113, 1, v161))
  {
    uint64_t v116 = sub_10000903C(&qword_1000A1038);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v114, v115, v161);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v114, 0, 1, v161);
  }
  uint64_t v117 = v163[20];
  uint64_t v118 = (char *)v159 + v117;
  uint64_t v119 = (char *)v160 + v117;
  if (v14((char *)v160 + v117, 1, v161))
  {
    uint64_t v120 = sub_10000903C(&qword_1000A1038);
    memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v118, v119, v161);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v161);
  }
  uint64_t v121 = v163[21];
  uint64_t v122 = (void *)((char *)v159 + v121);
  uint64_t v123 = (void *)((char *)v160 + v121);
  if (*v123)
  {
    uint64_t v124 = v123[1];
    uint64_t v125 = v123[2];
    void *v122 = *v123;
    v122[1] = v124;
    v122[2] = v125;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    v122[2] = v123[2];
  }
  uint64_t v126 = v163[22];
  uint64_t v127 = (char *)v159 + v126;
  uint64_t v128 = (char *)v160 + v126;
  uint64_t v129 = sub_10000903C(&qword_1000A1050);
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = sub_10000903C(&qword_1000A1058);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v132(v127, v128, v161);
    v132(&v127[*(int *)(v129 + 36)], &v128[*(int *)(v129 + 36)], v161);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  uint64_t v133 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v134 = v133[5];
  uint64_t v135 = &v127[v134];
  uint64_t v136 = &v128[v134];
  uint64_t v137 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
  uint64_t v138 = v133[6];
  uint64_t v139 = &v127[v138];
  uint64_t v140 = &v128[v138];
  uint64_t v141 = sub_10008A4B0();
  uint64_t v142 = *(void *)(v141 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
  {
    uint64_t v143 = sub_10000903C(&qword_1000A1060);
    memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  }
  uint64_t v144 = v133[7];
  uint64_t v145 = &v127[v144];
  uint64_t v146 = &v128[v144];
  uint64_t v147 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v147;
  uint64_t v148 = v133[8];
  int v149 = &v127[v148];
  uint64_t v150 = &v128[v148];
  uint64_t v151 = *((void *)v150 + 1);
  *(void *)int v149 = *(void *)v150;
  *((void *)v149 + 1) = v151;
  uint64_t v152 = *(int *)(a3 + 24);
  *((unsigned char *)v159 + *(int *)(a3 + 20)) = *((unsigned char *)v160 + *(int *)(a3 + 20));
  int v153 = (_OWORD *)((char *)v159 + v152);
  uint64_t v154 = (_OWORD *)((char *)v160 + v152);
  long long v155 = v154[1];
  _OWORD *v153 = *v154;
  v153[1] = v155;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v159;
}

void *sub_100053AAC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008A170();
  uint64_t v317 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v317 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  uint64_t v314 = a3;
  uint64_t v312 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v317 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v317 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v317 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v317 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = v6[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[12];
  uint64_t v19 = (uint64_t)a1 + v18;
  int v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_10008A340();
  uint64_t v311 = *((void *)v21 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v311 + 48);
  int v23 = v22(v19, 1, v21);
  int v24 = v22((uint64_t)v20, 1, v21);
  uint64_t v313 = v10;
  if (!v23)
  {
    if (!v24)
    {
      uint64_t v310 = v22;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = (long long *)(v19 + 16);
      uint64_t v30 = (long long *)(v20 + 16);
      int v31 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v31 == 255)
        {
          long long v72 = *v30;
          *(unsigned char *)(v19 + 32) = v20[32];
          *int v29 = v72;
        }
        else
        {
          uint64_t v69 = *((void *)v20 + 2);
          uint64_t v70 = *((void *)v20 + 3);
          sub_100009080(v69, v70, v20[32]);
          *(void *)(v19 + 16) = v69;
          *(void *)(v19 + 24) = v70;
          *(unsigned char *)(v19 + 32) = v31;
        }
      }
      else if (v31 == 255)
      {
        sub_10000BE14(v19 + 16);
        char v71 = v20[32];
        *int v29 = *v30;
        *(unsigned char *)(v19 + 32) = v71;
      }
      else
      {
        uint64_t v33 = *((void *)v20 + 2);
        uint64_t v32 = *((void *)v20 + 3);
        sub_100009080(v33, v32, v20[32]);
        uint64_t v34 = *(void *)(v19 + 16);
        uint64_t v35 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v33;
        *(void *)(v19 + 24) = v32;
        unsigned __int8 v36 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v31;
        sub_1000096D4(v34, v35, v36);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v73 = (void **)(v19 + 56);
      id v74 = (void **)(v20 + 56);
      int v75 = v20[64];
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v75 == 255)
        {
          uint64_t v81 = *v74;
          *(unsigned char *)(v19 + 64) = v20[64];
          *int v73 = v81;
        }
        else
        {
          int v79 = *v74;
          sub_100009098(v79, v20[64]);
          *(void *)(v19 + 56) = v79;
          *(unsigned char *)(v19 + 64) = v75;
        }
      }
      else if (v75 == 255)
      {
        sub_10000BE68(v19 + 56);
        char v80 = v20[64];
        *int v73 = *v74;
        *(unsigned char *)(v19 + 64) = v80;
      }
      else
      {
        int v76 = *v74;
        sub_100009098(v76, v20[64]);
        id v77 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v76;
        char v78 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v75;
        sub_1000096EC(v77, v78);
      }
      int v82 = (void **)(v19 + 72);
      id v83 = (void **)(v20 + 72);
      int v84 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v84 == 255)
        {
          uint64_t v90 = *v83;
          *(unsigned char *)(v19 + 80) = v20[80];
          *int v82 = v90;
        }
        else
        {
          uint64_t v88 = *v83;
          sub_100009098(v88, v20[80]);
          *(void *)(v19 + 72) = v88;
          *(unsigned char *)(v19 + 80) = v84;
        }
      }
      else if (v84 == 255)
      {
        sub_10000BE68(v19 + 72);
        char v89 = v20[80];
        *int v82 = *v83;
        *(unsigned char *)(v19 + 80) = v89;
      }
      else
      {
        int v85 = *v83;
        sub_100009098(v85, v20[80]);
        id v86 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v85;
        char v87 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v84;
        sub_1000096EC(v86, v87);
      }
      uint64_t v91 = (void **)(v19 + 88);
      uint64_t v92 = (void **)(v20 + 88);
      int v93 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v93 == 255)
        {
          uint64_t v99 = *v92;
          *(unsigned char *)(v19 + 96) = v20[96];
          *uint64_t v91 = v99;
        }
        else
        {
          uint64_t v97 = *v92;
          sub_100009098(v97, v20[96]);
          *(void *)(v19 + 88) = v97;
          *(unsigned char *)(v19 + 96) = v93;
        }
      }
      else if (v93 == 255)
      {
        sub_10000BE68(v19 + 88);
        char v98 = v20[96];
        *uint64_t v91 = *v92;
        *(unsigned char *)(v19 + 96) = v98;
      }
      else
      {
        uint64_t v94 = *v92;
        sub_100009098(v94, v20[96]);
        uint64_t v95 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v94;
        char v96 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v93;
        sub_1000096EC(v95, v96);
      }
      uint64_t v100 = (void **)(v19 + 104);
      uint64_t v101 = (void **)(v20 + 104);
      int v102 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v102 == 255)
        {
          id v108 = *v101;
          *(unsigned char *)(v19 + 112) = v20[112];
          *uint64_t v100 = v108;
        }
        else
        {
          uint64_t v106 = *v101;
          sub_100009098(v106, v20[112]);
          *(void *)(v19 + 104) = v106;
          *(unsigned char *)(v19 + 112) = v102;
        }
      }
      else if (v102 == 255)
      {
        sub_10000BE68(v19 + 104);
        char v107 = v20[112];
        *uint64_t v100 = *v101;
        *(unsigned char *)(v19 + 112) = v107;
      }
      else
      {
        uint64_t v103 = *v101;
        sub_100009098(v103, v20[112]);
        uint64_t v104 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v103;
        char v105 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v102;
        sub_1000096EC(v104, v105);
      }
      uint64_t v109 = (void **)(v19 + 120);
      uint64_t v110 = (void **)(v20 + 120);
      int v111 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v111 == 255)
        {
          uint64_t v117 = *v110;
          *(unsigned char *)(v19 + 128) = v20[128];
          *uint64_t v109 = v117;
        }
        else
        {
          uint64_t v115 = *v110;
          sub_100009098(v115, v20[128]);
          *(void *)(v19 + 120) = v115;
          *(unsigned char *)(v19 + 128) = v111;
        }
      }
      else if (v111 == 255)
      {
        sub_10000BE68(v19 + 120);
        char v116 = v20[128];
        *uint64_t v109 = *v110;
        *(unsigned char *)(v19 + 128) = v116;
      }
      else
      {
        uint64_t v112 = *v110;
        sub_100009098(v112, v20[128]);
        uint64_t v113 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v112;
        char v114 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v111;
        sub_1000096EC(v113, v114);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v118 = v21[11];
      uint64_t v119 = v19 + v118;
      uint64_t v120 = &v20[v118];
      uint64_t v121 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
      uint64_t v122 = v21[12];
      uint64_t v123 = (void *)(v19 + v122);
      uint64_t v124 = &v20[v122];
      *uint64_t v123 = *(void *)v124;
      v123[1] = *((void *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v125 = v21[16];
      uint64_t v126 = (void *)(v19 + v125);
      uint64_t v127 = &v20[v125];
      void *v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_100059AB4(v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_13:
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_76;
  }
  if (v24) {
    goto LABEL_13;
  }
  uint64_t v310 = v22;
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v25 = v20[32];
  swift_bridgeObjectRetain();
  if (v25 == 255)
  {
    long long v37 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v37;
  }
  else
  {
    uint64_t v26 = *((void *)v20 + 2);
    uint64_t v27 = *((void *)v20 + 3);
    sub_100009080(v26, v27, v25);
    *(void *)(v19 + 16) = v26;
    *(void *)(v19 + 24) = v27;
    *(unsigned char *)(v19 + 32) = v25;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v38 = (id *)(v20 + 56);
  int v39 = v20[64];
  if (v39 == 255)
  {
    id v41 = *v38;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v41;
  }
  else
  {
    id v40 = *v38;
    sub_100009098(*v38, v20[64]);
    *(void *)(v19 + 56) = v40;
    *(unsigned char *)(v19 + 64) = v39;
  }
  int v42 = (id *)(v20 + 72);
  int v43 = v20[80];
  if (v43 == 255)
  {
    id v45 = *v42;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v45;
  }
  else
  {
    id v44 = *v42;
    sub_100009098(*v42, v20[80]);
    *(void *)(v19 + 72) = v44;
    *(unsigned char *)(v19 + 80) = v43;
  }
  id v46 = (id *)(v20 + 88);
  int v47 = v20[96];
  if (v47 == 255)
  {
    id v49 = *v46;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v49;
  }
  else
  {
    id v48 = *v46;
    sub_100009098(*v46, v20[96]);
    *(void *)(v19 + 88) = v48;
    *(unsigned char *)(v19 + 96) = v47;
  }
  uint64_t v50 = (id *)(v20 + 104);
  int v51 = v20[112];
  if (v51 == 255)
  {
    id v53 = *v50;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v53;
  }
  else
  {
    id v52 = *v50;
    sub_100009098(*v50, v20[112]);
    *(void *)(v19 + 104) = v52;
    *(unsigned char *)(v19 + 112) = v51;
  }
  uint64_t v54 = (id *)(v20 + 120);
  int v55 = v20[128];
  if (v55 == 255)
  {
    id v57 = *v54;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v57;
  }
  else
  {
    id v56 = *v54;
    sub_100009098(*v54, v20[128]);
    *(void *)(v19 + 120) = v56;
    *(unsigned char *)(v19 + 128) = v55;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v58 = v21[11];
  uint64_t v59 = v19 + v58;
  uint64_t v60 = &v20[v58];
  uint64_t v61 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  uint64_t v62 = v21[12];
  uint64_t v63 = (void *)(v19 + v62);
  uint64_t v64 = &v20[v62];
  *uint64_t v63 = *(void *)v64;
  v63[1] = *((void *)v64 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v65 = v21[16];
  int v66 = (void *)(v19 + v65);
  uint64_t v67 = &v20[v65];
  *int v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  uint64_t v68 = *(void (**)(uint64_t, void, uint64_t, int *))(v311 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v19, 0, 1, v21);
LABEL_75:
  uint64_t v22 = v310;
LABEL_76:
  uint64_t v128 = v6[13];
  uint64_t v129 = (uint64_t)a1 + v128;
  uint64_t v130 = (char *)a2 + v128;
  int v131 = v22((uint64_t)a1 + v128, 1, v21);
  uint64_t v132 = (uint64_t (*)(char *, uint64_t, int *))v22;
  int v133 = v131;
  int v134 = v132(v130, 1, v21);
  if (v133)
  {
    if (!v134)
    {
      *(void *)uint64_t v129 = *(void *)v130;
      *(void *)(v129 + 8) = *((void *)v130 + 1);
      int v135 = v130[32];
      swift_bridgeObjectRetain();
      if (v135 == 255)
      {
        long long v147 = *((_OWORD *)v130 + 1);
        *(unsigned char *)(v129 + 32) = v130[32];
        *(_OWORD *)(v129 + 16) = v147;
      }
      else
      {
        uint64_t v136 = *((void *)v130 + 2);
        uint64_t v137 = *((void *)v130 + 3);
        sub_100009080(v136, v137, v135);
        *(void *)(v129 + 16) = v136;
        *(void *)(v129 + 24) = v137;
        *(unsigned char *)(v129 + 32) = v135;
      }
      *(void *)(v129 + 40) = *((void *)v130 + 5);
      *(void *)(v129 + 48) = *((void *)v130 + 6);
      uint64_t v148 = (id *)(v130 + 56);
      int v149 = v130[64];
      if (v149 == 255)
      {
        id v151 = *v148;
        *(unsigned char *)(v129 + 64) = v130[64];
        *(void *)(v129 + 56) = v151;
      }
      else
      {
        id v150 = *v148;
        sub_100009098(*v148, v130[64]);
        *(void *)(v129 + 56) = v150;
        *(unsigned char *)(v129 + 64) = v149;
      }
      uint64_t v152 = (id *)(v130 + 72);
      int v153 = v130[80];
      if (v153 == 255)
      {
        id v155 = *v152;
        *(unsigned char *)(v129 + 80) = v130[80];
        *(void *)(v129 + 72) = v155;
      }
      else
      {
        id v154 = *v152;
        sub_100009098(*v152, v130[80]);
        *(void *)(v129 + 72) = v154;
        *(unsigned char *)(v129 + 80) = v153;
      }
      uint64_t v156 = (id *)(v130 + 88);
      int v157 = v130[96];
      if (v157 == 255)
      {
        id v159 = *v156;
        *(unsigned char *)(v129 + 96) = v130[96];
        *(void *)(v129 + 88) = v159;
      }
      else
      {
        id v158 = *v156;
        sub_100009098(*v156, v130[96]);
        *(void *)(v129 + 88) = v158;
        *(unsigned char *)(v129 + 96) = v157;
      }
      uint64_t v160 = (id *)(v130 + 104);
      int v161 = v130[112];
      if (v161 == 255)
      {
        id v163 = *v160;
        *(unsigned char *)(v129 + 112) = v130[112];
        *(void *)(v129 + 104) = v163;
      }
      else
      {
        id v162 = *v160;
        sub_100009098(*v160, v130[112]);
        *(void *)(v129 + 104) = v162;
        *(unsigned char *)(v129 + 112) = v161;
      }
      uint64_t v164 = (id *)(v130 + 120);
      int v165 = v130[128];
      if (v165 == 255)
      {
        id v167 = *v164;
        *(unsigned char *)(v129 + 128) = v130[128];
        *(void *)(v129 + 120) = v167;
      }
      else
      {
        id v166 = *v164;
        sub_100009098(*v164, v130[128]);
        *(void *)(v129 + 120) = v166;
        *(unsigned char *)(v129 + 128) = v165;
      }
      *(unsigned char *)(v129 + 129) = v130[129];
      uint64_t v168 = v21[11];
      uint64_t v169 = v129 + v168;
      int v170 = &v130[v168];
      uint64_t v171 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      uint64_t v172 = v21[12];
      int v173 = (void *)(v129 + v172);
      int v174 = &v130[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
      *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
      *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
      uint64_t v175 = v21[16];
      uint64_t v176 = (void *)(v129 + v175);
      int v177 = &v130[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      int v178 = *(void (**)(uint64_t, void, uint64_t, int *))(v311 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178(v129, 0, 1, v21);
      goto LABEL_143;
    }
LABEL_82:
    uint64_t v138 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v129, v130, *(void *)(*(void *)(v138 - 8) + 64));
    goto LABEL_143;
  }
  if (v134)
  {
    sub_100059AB4(v129, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_82;
  }
  *(void *)uint64_t v129 = *(void *)v130;
  *(void *)(v129 + 8) = *((void *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v139 = (long long *)(v129 + 16);
  uint64_t v140 = (long long *)(v130 + 16);
  int v141 = v130[32];
  if (*(unsigned __int8 *)(v129 + 32) == 255)
  {
    if (v141 == 255)
    {
      long long v182 = *v140;
      *(unsigned char *)(v129 + 32) = v130[32];
      long long *v139 = v182;
    }
    else
    {
      uint64_t v179 = *((void *)v130 + 2);
      uint64_t v180 = *((void *)v130 + 3);
      sub_100009080(v179, v180, v130[32]);
      *(void *)(v129 + 16) = v179;
      *(void *)(v129 + 24) = v180;
      *(unsigned char *)(v129 + 32) = v141;
    }
  }
  else if (v141 == 255)
  {
    sub_10000BE14(v129 + 16);
    char v181 = v130[32];
    long long *v139 = *v140;
    *(unsigned char *)(v129 + 32) = v181;
  }
  else
  {
    uint64_t v142 = *((void *)v130 + 2);
    uint64_t v143 = *((void *)v130 + 3);
    sub_100009080(v142, v143, v130[32]);
    uint64_t v144 = *(void *)(v129 + 16);
    uint64_t v145 = *(void *)(v129 + 24);
    *(void *)(v129 + 16) = v142;
    *(void *)(v129 + 24) = v143;
    unsigned __int8 v146 = *(unsigned char *)(v129 + 32);
    *(unsigned char *)(v129 + 32) = v141;
    sub_1000096D4(v144, v145, v146);
  }
  *(void *)(v129 + 40) = *((void *)v130 + 5);
  *(void *)(v129 + 48) = *((void *)v130 + 6);
  uint64_t v183 = (void **)(v129 + 56);
  uint64_t v184 = (void **)(v130 + 56);
  int v185 = v130[64];
  if (*(unsigned __int8 *)(v129 + 64) == 255)
  {
    if (v185 == 255)
    {
      uint64_t v191 = *v184;
      *(unsigned char *)(v129 + 64) = v130[64];
      *uint64_t v183 = v191;
    }
    else
    {
      uint64_t v189 = *v184;
      sub_100009098(v189, v130[64]);
      *(void *)(v129 + 56) = v189;
      *(unsigned char *)(v129 + 64) = v185;
    }
  }
  else if (v185 == 255)
  {
    sub_10000BE68(v129 + 56);
    char v190 = v130[64];
    *uint64_t v183 = *v184;
    *(unsigned char *)(v129 + 64) = v190;
  }
  else
  {
    int v186 = *v184;
    sub_100009098(v186, v130[64]);
    uint64_t v187 = *(void **)(v129 + 56);
    *(void *)(v129 + 56) = v186;
    char v188 = *(unsigned char *)(v129 + 64);
    *(unsigned char *)(v129 + 64) = v185;
    sub_1000096EC(v187, v188);
  }
  uint64_t v192 = (void **)(v129 + 72);
  uint64_t v193 = (void **)(v130 + 72);
  int v194 = v130[80];
  if (*(unsigned __int8 *)(v129 + 80) == 255)
  {
    if (v194 == 255)
    {
      uint64_t v200 = *v193;
      *(unsigned char *)(v129 + 80) = v130[80];
      char *v192 = v200;
    }
    else
    {
      uint64_t v198 = *v193;
      sub_100009098(v198, v130[80]);
      *(void *)(v129 + 72) = v198;
      *(unsigned char *)(v129 + 80) = v194;
    }
  }
  else if (v194 == 255)
  {
    sub_10000BE68(v129 + 72);
    char v199 = v130[80];
    char *v192 = *v193;
    *(unsigned char *)(v129 + 80) = v199;
  }
  else
  {
    uint64_t v195 = *v193;
    sub_100009098(v195, v130[80]);
    uint64_t v196 = *(void **)(v129 + 72);
    *(void *)(v129 + 72) = v195;
    char v197 = *(unsigned char *)(v129 + 80);
    *(unsigned char *)(v129 + 80) = v194;
    sub_1000096EC(v196, v197);
  }
  uint64_t v201 = (void **)(v129 + 88);
  uint64_t v202 = (void **)(v130 + 88);
  int v203 = v130[96];
  if (*(unsigned __int8 *)(v129 + 96) == 255)
  {
    if (v203 == 255)
    {
      uint64_t v209 = *v202;
      *(unsigned char *)(v129 + 96) = v130[96];
      uint64_t *v201 = v209;
    }
    else
    {
      Swift::String v207 = *v202;
      sub_100009098(v207, v130[96]);
      *(void *)(v129 + 88) = v207;
      *(unsigned char *)(v129 + 96) = v203;
    }
  }
  else if (v203 == 255)
  {
    sub_10000BE68(v129 + 88);
    char v208 = v130[96];
    uint64_t *v201 = *v202;
    *(unsigned char *)(v129 + 96) = v208;
  }
  else
  {
    Swift::String v204 = *v202;
    sub_100009098(v204, v130[96]);
    uint64_t v205 = *(void **)(v129 + 88);
    *(void *)(v129 + 88) = v204;
    char v206 = *(unsigned char *)(v129 + 96);
    *(unsigned char *)(v129 + 96) = v203;
    sub_1000096EC(v205, v206);
  }
  uint64_t v210 = (void **)(v129 + 104);
  uint64_t v211 = (void **)(v130 + 104);
  int v212 = v130[112];
  if (*(unsigned __int8 *)(v129 + 112) == 255)
  {
    if (v212 == 255)
    {
      id v218 = *v211;
      *(unsigned char *)(v129 + 112) = v130[112];
      *uint64_t v210 = v218;
    }
    else
    {
      uint64_t v216 = *v211;
      sub_100009098(v216, v130[112]);
      *(void *)(v129 + 104) = v216;
      *(unsigned char *)(v129 + 112) = v212;
    }
  }
  else if (v212 == 255)
  {
    sub_10000BE68(v129 + 104);
    char v217 = v130[112];
    *uint64_t v210 = *v211;
    *(unsigned char *)(v129 + 112) = v217;
  }
  else
  {
    uint64_t v213 = *v211;
    sub_100009098(v213, v130[112]);
    uint64_t v214 = *(void **)(v129 + 104);
    *(void *)(v129 + 104) = v213;
    char v215 = *(unsigned char *)(v129 + 112);
    *(unsigned char *)(v129 + 112) = v212;
    sub_1000096EC(v214, v215);
  }
  unsigned __int8 v219 = (void **)(v129 + 120);
  uint64_t v220 = (void **)(v130 + 120);
  int v221 = v130[128];
  if (*(unsigned __int8 *)(v129 + 128) == 255)
  {
    if (v221 == 255)
    {
      id v227 = *v220;
      *(unsigned char *)(v129 + 128) = v130[128];
      void *v219 = v227;
    }
    else
    {
      Swift::String v225 = *v220;
      sub_100009098(v225, v130[128]);
      *(void *)(v129 + 120) = v225;
      *(unsigned char *)(v129 + 128) = v221;
    }
  }
  else if (v221 == 255)
  {
    sub_10000BE68(v129 + 120);
    char v226 = v130[128];
    void *v219 = *v220;
    *(unsigned char *)(v129 + 128) = v226;
  }
  else
  {
    uint64_t v222 = *v220;
    sub_100009098(v222, v130[128]);
    Swift::String_optional v223 = *(void **)(v129 + 120);
    *(void *)(v129 + 120) = v222;
    char v224 = *(unsigned char *)(v129 + 128);
    *(unsigned char *)(v129 + 128) = v221;
    sub_1000096EC(v223, v224);
  }
  *(unsigned char *)(v129 + 129) = v130[129];
  uint64_t v228 = v21[11];
  uint64_t v229 = v129 + v228;
  v230 = &v130[v228];
  uint64_t v231 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v229, v230, v231);
  uint64_t v232 = v21[12];
  v233 = (void *)(v129 + v232);
  v234 = &v130[v232];
  void *v233 = *(void *)v234;
  v233[1] = *((void *)v234 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
  *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
  *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
  uint64_t v235 = v21[16];
  v236 = (void *)(v129 + v235);
  v237 = &v130[v235];
  void *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v238 = v6[14];
  v239 = *(void **)((char *)a1 + v238);
  v240 = *(void **)((char *)a2 + v238);
  *(void *)((char *)a1 + v238) = v240;
  id v241 = v240;

  uint64_t v242 = v6[15];
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  uint64_t v245 = sub_10008A050();
  uint64_t v246 = *(void *)(v245 - 8);
  v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  LODWORD(v239) = v247(v243, 1, v245);
  int v248 = v247(v244, 1, v245);
  if (v239)
  {
    if (!v248)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v248)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_148:
    uint64_t v249 = sub_10000903C(&qword_1000A1048);
    memcpy(v243, v244, *(void *)(*(void *)(v249 - 8) + 64));
    goto LABEL_149;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
LABEL_149:
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  uint64_t v250 = v6[17];
  uint64_t v251 = (char *)a1 + v250;
  v252 = (char *)a2 + v250;
  uint64_t v253 = *(void *)v252;
  v251[8] = v252[8];
  *(void *)uint64_t v251 = v253;
  uint64_t v254 = v6[18];
  uint64_t v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  uint64_t v257 = *(void *)v256;
  v255[8] = v256[8];
  *(void *)uint64_t v255 = v257;
  uint64_t v258 = v6[19];
  uint64_t v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  int v261 = v312((char *)a1 + v258, 1, v313);
  int v262 = v312(v260, 1, v313);
  if (v261)
  {
    if (!v262)
    {
      (*(void (**)(char *, char *, uint64_t))(v317 + 16))(v259, v260, v313);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v317 + 56))(v259, 0, 1, v313);
      goto LABEL_155;
    }
    goto LABEL_154;
  }
  if (v262)
  {
    (*(void (**)(char *, uint64_t))(v317 + 8))(v259, v313);
LABEL_154:
    uint64_t v263 = sub_10000903C(&qword_1000A1038);
    memcpy(v259, v260, *(void *)(*(void *)(v263 - 8) + 64));
    goto LABEL_155;
  }
  (*(void (**)(char *, char *, uint64_t))(v317 + 24))(v259, v260, v313);
LABEL_155:
  uint64_t v264 = v6[20];
  uint64_t v265 = (char *)a1 + v264;
  v266 = (char *)a2 + v264;
  int v267 = v312((char *)a1 + v264, 1, v313);
  int v268 = v312(v266, 1, v313);
  if (v267)
  {
    if (!v268)
    {
      (*(void (**)(char *, char *, uint64_t))(v317 + 16))(v265, v266, v313);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v317 + 56))(v265, 0, 1, v313);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v268)
  {
    (*(void (**)(char *, uint64_t))(v317 + 8))(v265, v313);
LABEL_160:
    uint64_t v269 = sub_10000903C(&qword_1000A1038);
    memcpy(v265, v266, *(void *)(*(void *)(v269 - 8) + 64));
    goto LABEL_161;
  }
  (*(void (**)(char *, char *, uint64_t))(v317 + 24))(v265, v266, v313);
LABEL_161:
  uint64_t v270 = v6[21];
  uint64_t v271 = (void *)((char *)a1 + v270);
  v272 = (char *)a2 + v270;
  uint64_t v273 = *(void *)((char *)a2 + v270);
  if (*(void *)((char *)a1 + v270))
  {
    if (v273)
    {
      void *v271 = v273;
      swift_retain();
      swift_release();
      v271[1] = *((void *)v272 + 1);
      swift_retain();
      swift_release();
      v271[2] = *((void *)v272 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10000BF18((uint64_t)a1 + v270);
      uint64_t v274 = *((void *)v272 + 2);
      *(_OWORD *)uint64_t v271 = *(_OWORD *)v272;
      v271[2] = v274;
    }
  }
  else if (v273)
  {
    void *v271 = v273;
    v271[1] = *((void *)v272 + 1);
    v271[2] = *((void *)v272 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v275 = *(_OWORD *)v272;
    v271[2] = *((void *)v272 + 2);
    *(_OWORD *)uint64_t v271 = v275;
  }
  uint64_t v276 = v6[22];
  uint64_t v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  uint64_t v279 = sub_10000903C(&qword_1000A1050);
  uint64_t v280 = *(void *)(v279 - 8);
  uint64_t v281 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v280 + 48);
  int v282 = v281(v277, 1, v279);
  int v283 = v281(v278, 1, v279);
  char v315 = a2;
  uint64_t v316 = a1;
  if (v282)
  {
    if (!v283)
    {
      int v284 = *(void (**)(char *, char *, uint64_t))(v317 + 16);
      v284(v277, v278, v313);
      v284(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v313);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  if (v283)
  {
    sub_100015614((uint64_t)v277, &qword_1000A1050);
LABEL_176:
    uint64_t v285 = sub_10000903C(&qword_1000A1058);
    memcpy(v277, v278, *(void *)(*(void *)(v285 - 8) + 64));
    goto LABEL_177;
  }
  uint64_t v309 = *(void (**)(char *, char *, uint64_t))(v317 + 24);
  v309(v277, v278, v313);
  v309(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v313);
LABEL_177:
  uint64_t v286 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v287 = v286[5];
  uint64_t v288 = &v277[v287];
  v289 = &v278[v287];
  uint64_t v290 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 24))(v288, v289, v290);
  uint64_t v291 = v286[6];
  uint64_t v292 = &v277[v291];
  v293 = &v278[v291];
  uint64_t v294 = sub_10008A4B0();
  uint64_t v295 = *(void *)(v294 - 8);
  uint64_t v296 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v295 + 48);
  LODWORD(v288) = v296(v292, 1, v294);
  int v297 = v296(v293, 1, v294);
  if (!v288)
  {
    if (!v297)
    {
      (*(void (**)(char *, char *, uint64_t))(v295 + 24))(v292, v293, v294);
      goto LABEL_183;
    }
    (*(void (**)(char *, uint64_t))(v295 + 8))(v292, v294);
    goto LABEL_182;
  }
  if (v297)
  {
LABEL_182:
    uint64_t v298 = sub_10000903C(&qword_1000A1060);
    memcpy(v292, v293, *(void *)(*(void *)(v298 - 8) + 64));
    goto LABEL_183;
  }
  (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v293, v294);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
LABEL_183:
  uint64_t v299 = v286[7];
  uint64_t v300 = &v277[v299];
  uint64_t v301 = &v278[v299];
  *(void *)uint64_t v300 = *(void *)v301;
  *((void *)v300 + 1) = *((void *)v301 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v302 = v286[8];
  v303 = &v277[v302];
  uint64_t v304 = &v278[v302];
  *(void *)v303 = *(void *)v304;
  *((void *)v303 + 1) = *((void *)v304 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v316 + *(int *)(v314 + 20)) = *((unsigned char *)v315 + *(int *)(v314 + 20));
  uint64_t v305 = *(int *)(v314 + 24);
  v306 = (void *)((char *)v316 + v305);
  v307 = (void *)((char *)v315 + v305);
  void *v306 = *v307;
  v306[1] = v307[1];
  v306[2] = v307[2];
  v306[3] = v307[3];
  return v316;
}

uint64_t sub_1000554F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v8 = v7[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v88 = v11;
  uint64_t v87 = v12;
  id v86 = *(unsigned int (**)(const void *, uint64_t))(v12 + 48);
  if (v86(v10, 1))
  {
    uint64_t v13 = sub_10000903C(&qword_1000A1038);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v88);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v88);
  }
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  uint64_t v14 = v7[12];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  uint64_t v17 = (int *)sub_10008A340();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48);
  uint64_t v85 = v18;
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1040);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v21;
    *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((unsigned char *)v15 + 64) = *((unsigned char *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((unsigned char *)v15 + 129) = *((unsigned char *)v16 + 129);
    uint64_t v22 = v17[11];
    id v83 = (char *)v15 + v22;
    uint64_t v84 = a3;
    int v23 = (char *)v16 + v22;
    uint64_t v24 = sub_10008A300();
    int v25 = v23;
    a3 = v84;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v83, v25, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((unsigned char *)v15 + v17[13]) = *((unsigned char *)v16 + v17[13]);
    *((unsigned char *)v15 + v17[14]) = *((unsigned char *)v16 + v17[14]);
    *((unsigned char *)v15 + v17[15]) = *((unsigned char *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = v7[13];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  if (v19((_OWORD *)(a2 + v26), 1, v17))
  {
    uint64_t v29 = sub_10000903C(&qword_1000A1040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v28[1];
    _OWORD *v27 = *v28;
    v27[1] = v30;
    *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
    *(_OWORD *)((char *)v27 + 40) = *(_OWORD *)((char *)v28 + 40);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
    *(_OWORD *)((char *)v27 + 113) = *(_OWORD *)((char *)v28 + 113);
    *(_OWORD *)((char *)v27 + 104) = *(_OWORD *)((char *)v28 + 104);
    *(_OWORD *)((char *)v27 + 88) = *(_OWORD *)((char *)v28 + 88);
    *(_OWORD *)((char *)v27 + 72) = *(_OWORD *)((char *)v28 + 72);
    *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
    uint64_t v31 = v17[11];
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = a3;
    uint64_t v34 = (char *)v28 + v31;
    uint64_t v35 = sub_10008A300();
    unsigned __int8 v36 = v34;
    a3 = v33;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v36, v35);
    *(_OWORD *)((char *)v27 + v17[12]) = *(_OWORD *)((char *)v28 + v17[12]);
    *((unsigned char *)v27 + v17[13]) = *((unsigned char *)v28 + v17[13]);
    *((unsigned char *)v27 + v17[14]) = *((unsigned char *)v28 + v17[14]);
    *((unsigned char *)v27 + v17[15]) = *((unsigned char *)v28 + v17[15]);
    *(_OWORD *)((char *)v27 + v17[16]) = *(_OWORD *)((char *)v28 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v85 + 56))(v27, 0, 1, v17);
  }
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  uint64_t v37 = v7[15];
  uint64_t v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_10008A050();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10000903C(&qword_1000A1048);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v43 = v7[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = v7[18];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = v7[19];
  uint64_t v50 = (void *)(a1 + v49);
  int v51 = (const void *)(a2 + v49);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86)(a2 + v49, 1, v88))
  {
    uint64_t v52 = sub_10000903C(&qword_1000A1038);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v87 + 32))(v50, v51, v88);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v87 + 56))(v50, 0, 1, v88);
  }
  uint64_t v53 = v7[20];
  uint64_t v54 = (void *)(a1 + v53);
  int v55 = (const void *)(a2 + v53);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86)(a2 + v53, 1, v88))
  {
    uint64_t v56 = sub_10000903C(&qword_1000A1038);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v87 + 32))(v54, v55, v88);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v87 + 56))(v54, 0, 1, v88);
  }
  uint64_t v57 = v7[21];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  uint64_t v60 = v7[22];
  uint64_t v61 = (char *)(a1 + v60);
  uint64_t v62 = (char *)(a2 + v60);
  uint64_t v63 = sub_10000903C(&qword_1000A1050);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_10000903C(&qword_1000A1058);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    int v66 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
    v66(v61, v62, v88);
    v66(&v61[*(int *)(v63 + 36)], &v62[*(int *)(v63 + 36)], v88);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v67 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v68 = v67[5];
  uint64_t v69 = &v61[v68];
  uint64_t v70 = &v62[v68];
  uint64_t v71 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = v67[6];
  int v73 = &v61[v72];
  id v74 = &v62[v72];
  uint64_t v75 = sub_10008A4B0();
  uint64_t v76 = *(void *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    uint64_t v77 = sub_10000903C(&qword_1000A1060);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  *(_OWORD *)&v61[v67[7]] = *(_OWORD *)&v62[v67[7]];
  *(_OWORD *)&v61[v67[8]] = *(_OWORD *)&v62[v67[8]];
  uint64_t v78 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  int v79 = (_OWORD *)(a1 + v78);
  char v80 = (_OWORD *)(a2 + v78);
  long long v81 = v80[1];
  *int v79 = *v80;
  v79[1] = v81;
  return a1;
}

void *sub_100055E4C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v12 = v11[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10008A170();
  uint64_t v208 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v208 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  uint64_t v204 = a3;
  int v203 = v16;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v208 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v208 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v208 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10000903C(&qword_1000A1038);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v208 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[11];
  long long v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *long long v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v11[12];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)sub_10008A340();
  uint64_t v202 = *((void *)v28 - 1);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v202 + 48);
  int v30 = v29(v26, 1, v28);
  int v31 = v29((uint64_t)v27, 1, v28);
  uint64_t v207 = v15;
  if (v30)
  {
    if (!v31)
    {
      long long v32 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v32;
      *(unsigned char *)(v26 + 32) = v27[32];
      *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
      *(void *)(v26 + 56) = *((void *)v27 + 7);
      *(unsigned char *)(v26 + 64) = v27[64];
      *(_OWORD *)(v26 + 113) = *(_OWORD *)(v27 + 113);
      *(_OWORD *)(v26 + 104) = *(_OWORD *)(v27 + 104);
      *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(unsigned char *)(v26 + 129) = v27[129];
      uint64_t v33 = v28[11];
      uint64_t v34 = v26 + v33;
      uint64_t v35 = &v27[v33];
      uint64_t v36 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)&v27[v28[12]];
      *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
      *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
      *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
      *(_OWORD *)(v26 + v28[16]) = *(_OWORD *)&v27[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v202 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    sub_100059AB4(v26, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_12:
    uint64_t v37 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v121 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v121;
  swift_bridgeObjectRelease();
  uint64_t v122 = v27 + 16;
  int v123 = *(unsigned __int8 *)(v26 + 32);
  if (v123 != 255)
  {
    int v124 = v27[32];
    if (v124 != 255)
    {
      uint64_t v125 = *(void *)(v26 + 16);
      uint64_t v126 = *(void *)(v26 + 24);
      *(_OWORD *)(v26 + 16) = *v122;
      *(unsigned char *)(v26 + 32) = v124;
      sub_1000096D4(v125, v126, v123);
      goto LABEL_69;
    }
    sub_10000BE14(v26 + 16);
  }
  *(_OWORD *)(v26 + 16) = *v122;
  *(unsigned char *)(v26 + 32) = v27[32];
LABEL_69:
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  int v134 = v27 + 56;
  int v135 = *(unsigned __int8 *)(v26 + 64);
  if (v135 != 255)
  {
    int v136 = v27[64];
    if (v136 != 255)
    {
      uint64_t v137 = *(void **)(v26 + 56);
      *(void *)(v26 + 56) = *v134;
      *(unsigned char *)(v26 + 64) = v136;
      sub_1000096EC(v137, v135);
      goto LABEL_79;
    }
    sub_10000BE68(v26 + 56);
  }
  *(void *)(v26 + 56) = *v134;
  *(unsigned char *)(v26 + 64) = v27[64];
LABEL_79:
  uint64_t v142 = v27 + 72;
  int v143 = *(unsigned __int8 *)(v26 + 80);
  if (v143 != 255)
  {
    int v144 = v27[80];
    if (v144 != 255)
    {
      uint64_t v145 = *(void **)(v26 + 72);
      *(void *)(v26 + 72) = *v142;
      *(unsigned char *)(v26 + 80) = v144;
      sub_1000096EC(v145, v143);
      goto LABEL_89;
    }
    sub_10000BE68(v26 + 72);
  }
  *(void *)(v26 + 72) = *v142;
  *(unsigned char *)(v26 + 80) = v27[80];
LABEL_89:
  id v150 = v27 + 88;
  int v151 = *(unsigned __int8 *)(v26 + 96);
  if (v151 != 255)
  {
    int v152 = v27[96];
    if (v152 != 255)
    {
      int v153 = *(void **)(v26 + 88);
      *(void *)(v26 + 88) = *v150;
      *(unsigned char *)(v26 + 96) = v152;
      sub_1000096EC(v153, v151);
      goto LABEL_99;
    }
    sub_10000BE68(v26 + 88);
  }
  *(void *)(v26 + 88) = *v150;
  *(unsigned char *)(v26 + 96) = v27[96];
LABEL_99:
  id v158 = v27 + 104;
  int v159 = *(unsigned __int8 *)(v26 + 112);
  if (v159 != 255)
  {
    int v160 = v27[112];
    if (v160 != 255)
    {
      int v161 = *(void **)(v26 + 104);
      *(void *)(v26 + 104) = *v158;
      *(unsigned char *)(v26 + 112) = v160;
      sub_1000096EC(v161, v159);
      goto LABEL_109;
    }
    sub_10000BE68(v26 + 104);
  }
  *(void *)(v26 + 104) = *v158;
  *(unsigned char *)(v26 + 112) = v27[112];
LABEL_109:
  id v166 = v27 + 120;
  int v167 = *(unsigned __int8 *)(v26 + 128);
  if (v167 == 255)
  {
LABEL_118:
    *(void *)(v26 + 120) = *v166;
    *(unsigned char *)(v26 + 128) = v27[128];
    goto LABEL_119;
  }
  int v168 = v27[128];
  if (v168 == 255)
  {
    sub_10000BE68(v26 + 120);
    goto LABEL_118;
  }
  uint64_t v169 = *(void **)(v26 + 120);
  *(void *)(v26 + 120) = *v166;
  *(unsigned char *)(v26 + 128) = v168;
  sub_1000096EC(v169, v167);
LABEL_119:
  *(unsigned char *)(v26 + 129) = v27[129];
  uint64_t v174 = v28[11];
  uint64_t v175 = v26 + v174;
  uint64_t v176 = &v27[v174];
  uint64_t v177 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v177 - 8) + 40))(v175, v176, v177);
  uint64_t v178 = v28[12];
  uint64_t v179 = (void *)(v26 + v178);
  uint64_t v180 = &v27[v178];
  uint64_t v182 = *(void *)v180;
  uint64_t v181 = *((void *)v180 + 1);
  *uint64_t v179 = v182;
  v179[1] = v181;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
  *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
  *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
  uint64_t v183 = v28[16];
  uint64_t v184 = (void *)(v26 + v183);
  int v185 = &v27[v183];
  uint64_t v187 = *(void *)v185;
  uint64_t v186 = *((void *)v185 + 1);
  *uint64_t v184 = v187;
  v184[1] = v186;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v38 = v11[13];
  uint64_t v39 = (uint64_t)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v29((uint64_t)a1 + v38, 1, v28);
  int v42 = v29((uint64_t)v40, 1, v28);
  if (v41)
  {
    if (!v42)
    {
      long long v43 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v43;
      *(unsigned char *)(v39 + 32) = v40[32];
      *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
      *(void *)(v39 + 56) = *((void *)v40 + 7);
      *(unsigned char *)(v39 + 64) = v40[64];
      *(_OWORD *)(v39 + 113) = *(_OWORD *)(v40 + 113);
      *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
      *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      *(unsigned char *)(v39 + 129) = v40[129];
      uint64_t v44 = v28[11];
      uint64_t v45 = v39 + v44;
      uint64_t v46 = &v40[v44];
      uint64_t v47 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      *(_OWORD *)(v39 + v28[12]) = *(_OWORD *)&v40[v28[12]];
      *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
      *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
      *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
      *(_OWORD *)(v39 + v28[16]) = *(_OWORD *)&v40[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v202 + 56))(v39, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    sub_100059AB4(v39, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_18:
    uint64_t v48 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v127 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v127;
  swift_bridgeObjectRelease();
  uint64_t v128 = v40 + 16;
  int v129 = *(unsigned __int8 *)(v39 + 32);
  if (v129 != 255)
  {
    int v130 = v40[32];
    if (v130 != 255)
    {
      uint64_t v131 = *(void *)(v39 + 16);
      uint64_t v132 = *(void *)(v39 + 24);
      *(_OWORD *)(v39 + 16) = *v128;
      *(unsigned char *)(v39 + 32) = v130;
      sub_1000096D4(v131, v132, v129);
      goto LABEL_74;
    }
    sub_10000BE14(v39 + 16);
  }
  *(_OWORD *)(v39 + 16) = *v128;
  *(unsigned char *)(v39 + 32) = v40[32];
LABEL_74:
  *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
  uint64_t v138 = v40 + 56;
  int v139 = *(unsigned __int8 *)(v39 + 64);
  if (v139 != 255)
  {
    int v140 = v40[64];
    if (v140 != 255)
    {
      int v141 = *(void **)(v39 + 56);
      *(void *)(v39 + 56) = *v138;
      *(unsigned char *)(v39 + 64) = v140;
      sub_1000096EC(v141, v139);
      goto LABEL_84;
    }
    sub_10000BE68(v39 + 56);
  }
  *(void *)(v39 + 56) = *v138;
  *(unsigned char *)(v39 + 64) = v40[64];
LABEL_84:
  unsigned __int8 v146 = v40 + 72;
  int v147 = *(unsigned __int8 *)(v39 + 80);
  if (v147 != 255)
  {
    int v148 = v40[80];
    if (v148 != 255)
    {
      int v149 = *(void **)(v39 + 72);
      *(void *)(v39 + 72) = *v146;
      *(unsigned char *)(v39 + 80) = v148;
      sub_1000096EC(v149, v147);
      goto LABEL_94;
    }
    sub_10000BE68(v39 + 72);
  }
  *(void *)(v39 + 72) = *v146;
  *(unsigned char *)(v39 + 80) = v40[80];
LABEL_94:
  id v154 = v40 + 88;
  int v155 = *(unsigned __int8 *)(v39 + 96);
  if (v155 != 255)
  {
    int v156 = v40[96];
    if (v156 != 255)
    {
      int v157 = *(void **)(v39 + 88);
      *(void *)(v39 + 88) = *v154;
      *(unsigned char *)(v39 + 96) = v156;
      sub_1000096EC(v157, v155);
      goto LABEL_104;
    }
    sub_10000BE68(v39 + 88);
  }
  *(void *)(v39 + 88) = *v154;
  *(unsigned char *)(v39 + 96) = v40[96];
LABEL_104:
  id v162 = v40 + 104;
  int v163 = *(unsigned __int8 *)(v39 + 112);
  if (v163 != 255)
  {
    int v164 = v40[112];
    if (v164 != 255)
    {
      int v165 = *(void **)(v39 + 104);
      *(void *)(v39 + 104) = *v162;
      *(unsigned char *)(v39 + 112) = v164;
      sub_1000096EC(v165, v163);
      goto LABEL_114;
    }
    sub_10000BE68(v39 + 104);
  }
  *(void *)(v39 + 104) = *v162;
  *(unsigned char *)(v39 + 112) = v40[112];
LABEL_114:
  int v170 = v40 + 120;
  int v171 = *(unsigned __int8 *)(v39 + 128);
  if (v171 == 255)
  {
LABEL_121:
    *(void *)(v39 + 120) = *v170;
    *(unsigned char *)(v39 + 128) = v40[128];
    goto LABEL_122;
  }
  int v172 = v40[128];
  if (v172 == 255)
  {
    sub_10000BE68(v39 + 120);
    goto LABEL_121;
  }
  int v173 = *(void **)(v39 + 120);
  *(void *)(v39 + 120) = *v170;
  *(unsigned char *)(v39 + 128) = v172;
  sub_1000096EC(v173, v171);
LABEL_122:
  *(unsigned char *)(v39 + 129) = v40[129];
  uint64_t v188 = v28[11];
  uint64_t v189 = v39 + v188;
  char v190 = &v40[v188];
  uint64_t v191 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v191 - 8) + 40))(v189, v190, v191);
  uint64_t v192 = v28[12];
  uint64_t v193 = (void *)(v39 + v192);
  int v194 = &v40[v192];
  uint64_t v196 = *(void *)v194;
  uint64_t v195 = *((void *)v194 + 1);
  *uint64_t v193 = v196;
  v193[1] = v195;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
  *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
  *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
  uint64_t v197 = v28[16];
  uint64_t v198 = (void *)(v39 + v197);
  char v199 = &v40[v197];
  uint64_t v201 = *(void *)v199;
  uint64_t v200 = *((void *)v199 + 1);
  void *v198 = v201;
  v198[1] = v200;
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v49 = v11[14];
  uint64_t v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

  uint64_t v51 = v11[15];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_10008A050();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    uint64_t v59 = v207;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v59 = v207;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_24:
    uint64_t v60 = sub_10000903C(&qword_1000A1048);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_25:
  *((unsigned char *)a1 + v11[16]) = *((unsigned char *)a2 + v11[16]);
  uint64_t v61 = v11[17];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = v11[18];
  uint64_t v65 = (char *)a1 + v64;
  int v66 = (char *)a2 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = v11[19];
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  int v70 = v203((char *)a1 + v67, 1, v59);
  int v71 = v203(v69, 1, v59);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v208 + 32))(v68, v69, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v208 + 56))(v68, 0, 1, v59);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v208 + 8))(v68, v59);
LABEL_30:
    uint64_t v72 = sub_10000903C(&qword_1000A1038);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v208 + 40))(v68, v69, v59);
LABEL_31:
  uint64_t v73 = v11[20];
  id v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  int v76 = v203((char *)a1 + v73, 1, v59);
  int v77 = v203(v75, 1, v59);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v208 + 32))(v74, v75, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v208 + 56))(v74, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v208 + 8))(v74, v59);
LABEL_36:
    uint64_t v78 = sub_10000903C(&qword_1000A1038);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v208 + 40))(v74, v75, v59);
LABEL_37:
  uint64_t v79 = v11[21];
  char v80 = (void *)((char *)a1 + v79);
  long long v81 = (void *)((char *)a2 + v79);
  if (*(void *)((char *)a1 + v79))
  {
    if (*v81)
    {
      *char v80 = *v81;
      swift_release();
      v80[1] = v81[1];
      swift_release();
      v80[2] = v81[2];
      swift_release();
      goto LABEL_42;
    }
    sub_10000BF18((uint64_t)v80);
  }
  *(_OWORD *)char v80 = *(_OWORD *)v81;
  v80[2] = v81[2];
LABEL_42:
  uint64_t v82 = v11[22];
  id v83 = (char *)a1 + v82;
  uint64_t v84 = (char *)a2 + v82;
  uint64_t v85 = sub_10000903C(&qword_1000A1050);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  uint64_t v205 = a2;
  char v206 = a1;
  if (v88)
  {
    if (!v89)
    {
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v208 + 32);
      v90(v83, v84, v59);
      v90(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v89)
  {
    sub_100015614((uint64_t)v83, &qword_1000A1050);
LABEL_47:
    uint64_t v91 = sub_10000903C(&qword_1000A1058);
    memcpy(v83, v84, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_48;
  }
  int v133 = *(void (**)(char *, char *, uint64_t))(v208 + 40);
  v133(v83, v84, v59);
  v133(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
LABEL_48:
  uint64_t v92 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v93 = v92[5];
  uint64_t v94 = &v83[v93];
  uint64_t v95 = &v84[v93];
  uint64_t v96 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  uint64_t v97 = v92[6];
  char v98 = &v83[v97];
  uint64_t v99 = &v84[v97];
  uint64_t v100 = sub_10008A4B0();
  uint64_t v101 = *(void *)(v100 - 8);
  int v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  int v103 = v102(v98, 1, v100);
  int v104 = v102(v99, 1, v100);
  if (!v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 40))(v98, v99, v100);
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v100);
    goto LABEL_53;
  }
  if (v104)
  {
LABEL_53:
    uint64_t v105 = sub_10000903C(&qword_1000A1060);
    memcpy(v98, v99, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v98, v99, v100);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
LABEL_54:
  uint64_t v106 = v92[7];
  char v107 = &v83[v106];
  id v108 = &v84[v106];
  uint64_t v110 = *(void *)v108;
  uint64_t v109 = *((void *)v108 + 1);
  *(void *)char v107 = v110;
  *((void *)v107 + 1) = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v92[8];
  uint64_t v112 = &v83[v111];
  uint64_t v113 = &v84[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)uint64_t v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  uint64_t v116 = *(int *)(v204 + 24);
  *((unsigned char *)v206 + *(int *)(v204 + 20)) = *((unsigned char *)v205 + *(int *)(v204 + 20));
  uint64_t v117 = (_OWORD *)((char *)v206 + v116);
  uint64_t v118 = (_OWORD *)((char *)v205 + v116);
  long long v119 = v118[1];
  _OWORD *v117 = *v118;
  v117[1] = v119;
  return v206;
}

uint64_t sub_100057090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000570A4);
}

uint64_t sub_1000570A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 2u) {
      int v10 = 2;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v11 = v10 - 2;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 2u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10005716C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100057180);
}

uint64_t sub_100057180(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  return result;
}

uint64_t type metadata accessor for EpisodeListWidgetLargeHeader()
{
  uint64_t result = qword_1000A2140;
  if (!qword_1000A2140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100057288()
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100057328()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_100057344()
{
  uint64_t v1 = sub_10000903C(&qword_1000A1060);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000903C(&qword_1000A1D50);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10008DE00;
  uint64_t v5 = v0[8];
  *(void *)(v4 + 32) = v0[7];
  *(void *)(v4 + 40) = v5;
  uint64_t v6 = v0[3];
  *(void *)(v4 + 48) = v0[2];
  *(void *)(v4 + 56) = v6;
  uint64_t v7 = v0[10];
  *(void *)(v4 + 64) = v0[9];
  *(void *)(v4 + 72) = v7;
  uint64_t v8 = (char *)v0 + *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 88);
  uint64_t v9 = type metadata accessor for WidgetPredictedPlayState();
  int v10 = &v8[*(int *)(v9 + 32)];
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)(v4 + 80) = *(void *)v10;
  *(void *)(v4 + 88) = v11;
  sub_1000155B0((uint64_t)&v8[*(int *)(v9 + 24)], (uint64_t)v3, &qword_1000A1060);
  uint64_t v12 = sub_10008A4B0();
  uint64_t v13 = *(void *)(v12 - 8);
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v3, 1, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    sub_100015614((uint64_t)v3, &qword_1000A1060);
  }
  else
  {
    sub_10008A4A0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v12);
  }
  id result = (id)AXDurationStringForDurationWithSeconds();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = sub_10008B360();
    uint64_t v18 = v17;

    *(void *)(v4 + 96) = v16;
    *(void *)(v4 + 104) = v18;
    v20[1] = v4;
    sub_10000903C(&qword_1000A1D40);
    sub_100015428(&qword_1000A1F10, &qword_1000A1D40);
    uint64_t v19 = sub_10008B2E0();
    swift_bridgeObjectRelease();
    return (id)v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000575B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = type metadata accessor for EpisodeListWidgetLargeHeader();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000903C(&qword_1000A1048);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A2180);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000903C(&qword_1000A2030);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UpNextEntry.Episode(0);
  sub_1000155B0((uint64_t)v1 + *(int *)(v17 + 60), (uint64_t)v8, &qword_1000A1048);
  sub_100059A4C((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetLargeHeader);
  unint64_t v18 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1000599DC((uint64_t)v5, v19 + v18, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetLargeHeader);
  sub_10001547C((uint64_t)v8, (uint64_t)v12, &qword_1000A1048);
  *(void *)&v12[*(int *)(v10 + 44)] = 0;
  uint64_t v20 = (uint64_t (**)())&v12[*(int *)(v10 + 48)];
  char *v20 = sub_1000598B4;
  v20[1] = (uint64_t (*)())v19;
  uint64_t v22 = *v1;
  uint64_t v21 = v1[1];
  sub_1000155B0((uint64_t)v12, (uint64_t)v16, &qword_1000A2180);
  uint64_t v23 = &v16[*(int *)(v14 + 60)];
  *(void *)uint64_t v23 = v22;
  *((void *)v23 + 1) = v21;
  swift_bridgeObjectRetain();
  sub_100015614((uint64_t)v12, &qword_1000A2180);
  char v24 = *(void *)((char *)v1 + *(int *)(v17 + 84)) != 0;
  uint64_t v28 = v1;
  sub_10004D0E0(v24, (void (*)(uint64_t, __n128))sub_100059924, v27);
  return sub_100015614((uint64_t)v16, &qword_1000A2030);
}

uint64_t sub_100057894(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A2188);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A2190);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v4 = sub_10008A9C0();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  uint64_t v8 = sub_10000903C(&qword_1000A2198);
  sub_100057A54(a1, (uint64_t)&v4[*(int *)(v8 + 44)]);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for EpisodeListWidgetLargeHeader() + 24);
  long long v16 = *(_OWORD *)v9;
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 24);
  char v12 = sub_10008ABD0();
  sub_1000155B0((uint64_t)v4, (uint64_t)v7, &qword_1000A2188);
  uint64_t v13 = &v7[*(int *)(v5 + 36)];
  char *v13 = v12;
  *(_OWORD *)(v13 + 8) = v16;
  *((void *)v13 + 3) = v10;
  *((void *)v13 + 4) = v11;
  v13[40] = 0;
  sub_100015614((uint64_t)v4, &qword_1000A2188);
  id v17 = sub_100057344();
  uint64_t v18 = v14;
  sub_10005992C();
  sub_100031338();
  sub_10008AEE0();
  swift_bridgeObjectRelease();
  return sub_100015614((uint64_t)v7, &qword_1000A2190);
}

uint64_t sub_100057A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v51 = sub_10000903C(&qword_1000A21B0);
  __chkstk_darwin(v51);
  uint64_t v45 = (uint64_t *)((char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = sub_10000903C(&qword_1000A21B8);
  __chkstk_darwin(v46);
  uint64_t v49 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10000903C(&qword_1000A21C0);
  __chkstk_darwin(v48);
  uint64_t v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10000903C(&qword_1000A21C8);
  __chkstk_darwin(v7 - 8);
  uint64_t v52 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v50 = (char *)&v44 - v10;
  uint64_t v11 = type metadata accessor for EpisodeViewStyle();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v16 = (char *)&v44 - v15;
  uint64_t v17 = type metadata accessor for UpNextEntry.Episode(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for WidgetArtworkView();
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v47 = (uint64_t)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v44 - v24;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v44 - v27;
  sub_100059A4C(a1, (uint64_t)v19, type metadata accessor for UpNextEntry.Episode);
  uint64_t v29 = enum case for WidgetFamily.systemLarge(_:);
  uint64_t v30 = sub_10008B220();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v16, v29, v30);
  swift_storeEnumTagMultiPayload();
  sub_100059A4C((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
  if (swift_getEnumCaseMultiPayload() == 1) {
    double v31 = 8.0;
  }
  else {
    double v31 = 6.0;
  }
  sub_100059AB4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
  sub_100059AB4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
  sub_1000599DC((uint64_t)v19, (uint64_t)v25, type metadata accessor for UpNextEntry.Episode);
  *(double *)&v25[*(int *)(v21 + 28)] = v31;
  sub_1000599DC((uint64_t)v25, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  int v32 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for EpisodeListWidgetLargeHeader() + 20));
  if (v32 == 2)
  {
    uint64_t *v6 = sub_10008AA80();
    v6[1] = 0;
    *((unsigned char *)v6 + 16) = 0;
    uint64_t v33 = sub_10000903C(&qword_1000A21D0);
    sub_100058678(a1, (uint64_t)v6 + *(int *)(v33 + 44));
    uint64_t v34 = &qword_1000A21C0;
    sub_1000155B0((uint64_t)v6, v49, &qword_1000A21C0);
  }
  else
  {
    char v35 = v32 & 1;
    uint64_t v36 = sub_10008AA70();
    uint64_t v6 = v45;
    *uint64_t v45 = v36;
    v6[1] = 0;
    *((unsigned char *)v6 + 16) = 1;
    uint64_t v37 = sub_10000903C(&qword_1000A21F0);
    sub_100058204(v35, (uint64_t)v6 + *(int *)(v37 + 44));
    uint64_t v34 = &qword_1000A21B0;
    sub_1000155B0((uint64_t)v6, v49, &qword_1000A21B0);
  }
  swift_storeEnumTagMultiPayload();
  sub_100015428(&qword_1000A21D8, &qword_1000A21B0);
  sub_100015428(&qword_1000A21E0, &qword_1000A21C0);
  uint64_t v38 = (uint64_t)v50;
  sub_10008AAE0();
  sub_100015614((uint64_t)v6, v34);
  uint64_t v39 = v47;
  sub_100059A4C((uint64_t)v28, v47, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  uint64_t v40 = v52;
  sub_1000155B0(v38, v52, &qword_1000A21C8);
  uint64_t v41 = v53;
  sub_100059A4C(v39, v53, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  uint64_t v42 = sub_10000903C(&qword_1000A21E8);
  *(void *)(v41 + *(int *)(v42 + 48)) = 0x402E000000000000;
  sub_1000155B0(v40, v41 + *(int *)(v42 + 64), &qword_1000A21C8);
  sub_100015614(v38, &qword_1000A21C8);
  sub_100059AB4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  sub_100015614(v40, &qword_1000A21C8);
  return sub_100059AB4(v39, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
}

uint64_t sub_1000580B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t result = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v5 = *(void *)(a2 + *(int *)(v3 + 84));
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_10000E31C(v5);
    sub_10000903C(&qword_1000A2030);
    sub_100015428(&qword_1000A2050, &qword_1000A2030);
    sub_100031338();
    sub_10000E368();
    sub_10008ADF0();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100058204@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  int v39 = a1 & 1;
  uint64_t v2 = type metadata accessor for WidgetEmptyText();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10000903C(&qword_1000A21F8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v38[-v10];
  uint64_t v12 = type metadata accessor for Logo();
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = &v38[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v18 = &v38[-v17];
  uint64_t v19 = sub_10000903C(&qword_1000A2200);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = &v38[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  uint64_t v24 = &v38[-v23];
  *(void *)uint64_t v15 = swift_getKeyPath();
  v15[8] = 0;
  uint64_t v25 = (uint64_t *)&v15[*(int *)(v13 + 28)];
  *uint64_t v25 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (uint64_t *)&v15[*(int *)(v13 + 32)];
  uint64_t *v26 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DD8);
  swift_storeEnumTagMultiPayload();
  sub_1000599DC((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Logo);
  uint64_t v27 = sub_10008B150();
  sub_100084880(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, 0.0, 1, v27, v28);
  sub_100059AB4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Logo);
  sub_10001547C((uint64_t)v21, (uint64_t)v24, &qword_1000A2200);
  uint64_t v29 = &v5[*(int *)(v3 + 28)];
  uint64_t v30 = enum case for WidgetFamily.systemLarge(_:);
  uint64_t v31 = sub_10008B220();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v29, v30, v31);
  type metadata accessor for EpisodeViewStyle();
  swift_storeEnumTagMultiPayload();
  unsigned char *v5 = v39;
  uint64_t v32 = sub_10008B140();
  sub_1000848E4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, 0.0, 1, v32, v33);
  sub_100059AB4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WidgetEmptyText);
  sub_10001547C((uint64_t)v8, (uint64_t)v11, &qword_1000A21F8);
  sub_1000155B0((uint64_t)v24, (uint64_t)v21, &qword_1000A2200);
  sub_1000155B0((uint64_t)v11, (uint64_t)v8, &qword_1000A21F8);
  uint64_t v34 = v40;
  sub_1000155B0((uint64_t)v21, v40, &qword_1000A2200);
  uint64_t v35 = sub_10000903C(&qword_1000A2208);
  uint64_t v36 = v34 + *(int *)(v35 + 48);
  *(void *)uint64_t v36 = 0;
  *(unsigned char *)(v36 + 8) = 1;
  sub_1000155B0((uint64_t)v8, v34 + *(int *)(v35 + 64), &qword_1000A21F8);
  sub_100015614((uint64_t)v11, &qword_1000A21F8);
  sub_100015614((uint64_t)v24, &qword_1000A2200);
  sub_100015614((uint64_t)v8, &qword_1000A21F8);
  return sub_100015614((uint64_t)v21, &qword_1000A2200);
}

uint64_t sub_100058678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v42 = type metadata accessor for PlayButtonLarge(0) - 8;
  __chkstk_darwin(v42);
  uint64_t v43 = (uint64_t)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v41 = (uint64_t)&v39 - v5;
  uint64_t v6 = sub_10008AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A2210);
  __chkstk_darwin(v10 - 8);
  uint64_t v45 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v39 - v13;
  *(void *)uint64_t v14 = sub_10008A9C0();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v15 = sub_10000903C(&qword_1000A2218);
  sub_100058A78(a1, (uint64_t)&v14[*(int *)(v15 + 44)]);
  uint64_t v40 = a1;
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v46 = *(void *)(a1 + 72);
  uint64_t v47 = v16;
  sub_100031338();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_10008ADE0();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_10008AC30();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Font.Leading.tight(_:), v6);
  sub_10008ACB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v22 = sub_10008AD50();
  uint64_t v24 = v23;
  LOBYTE(v9) = v25;
  uint64_t v27 = v26;
  swift_release();
  LOBYTE(v9) = v9 & 1;
  sub_10001546C(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v28 = v41;
  sub_100059A4C(v40, v41, type metadata accessor for UpNextEntry.Episode);
  uint64_t v29 = sub_10008B140();
  uint64_t v30 = (uint64_t *)(v28 + *(int *)(v42 + 28));
  *uint64_t v30 = v29;
  v30[1] = v31;
  uint64_t v32 = v45;
  sub_1000155B0((uint64_t)v14, v45, &qword_1000A2210);
  uint64_t v33 = v43;
  sub_100059A4C(v28, v43, type metadata accessor for PlayButtonLarge);
  uint64_t v34 = v32;
  uint64_t v35 = v44;
  sub_1000155B0(v34, v44, &qword_1000A2210);
  uint64_t v36 = (int *)sub_10000903C(&qword_1000A2220);
  uint64_t v37 = v35 + v36[12];
  *(void *)uint64_t v37 = v22;
  *(void *)(v37 + 8) = v24;
  *(unsigned char *)(v37 + 16) = (_BYTE)v9;
  *(void *)(v37 + 24) = v27;
  *(void *)(v37 + 32) = 0x3FF0000000000000;
  *(void *)(v35 + v36[16]) = 0x4010000000000000;
  sub_100059A4C(v33, v35 + v36[20], type metadata accessor for PlayButtonLarge);
  sub_100031774(v22, v24, (char)v9);
  swift_bridgeObjectRetain();
  sub_100059AB4(v28, type metadata accessor for PlayButtonLarge);
  sub_100015614((uint64_t)v14, &qword_1000A2210);
  sub_100059AB4(v33, type metadata accessor for PlayButtonLarge);
  sub_10001546C(v22, v24, (char)v9);
  swift_bridgeObjectRelease();
  return sub_100015614(v45, &qword_1000A2210);
}

uint64_t sub_100058A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logo();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_10000903C(&qword_1000A2200);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = sub_10000903C(&qword_1000A2228);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v31 - v21;
  *(void *)uint64_t v22 = sub_10008AA70();
  *((void *)v22 + 1) = 0;
  v22[16] = 1;
  uint64_t v23 = sub_10000903C(&qword_1000A2230);
  sub_100058DD8(a1, &v22[*(int *)(v23 + 44)]);
  *(void *)uint64_t v7 = swift_getKeyPath();
  v7[8] = 0;
  uint64_t v24 = (uint64_t *)&v7[*(int *)(v5 + 28)];
  *uint64_t v24 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DE0);
  swift_storeEnumTagMultiPayload();
  char v25 = (uint64_t *)&v7[*(int *)(v5 + 32)];
  *char v25 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DD8);
  swift_storeEnumTagMultiPayload();
  sub_1000599DC((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Logo);
  uint64_t v26 = sub_10008B120();
  sub_100084880(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v13, 0.0, 1, INFINITY, 0, v26, v27);
  sub_100059AB4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Logo);
  sub_10001547C((uint64_t)v13, (uint64_t)v16, &qword_1000A2200);
  sub_1000155B0((uint64_t)v22, (uint64_t)v19, &qword_1000A2228);
  sub_1000155B0((uint64_t)v16, (uint64_t)v13, &qword_1000A2200);
  sub_1000155B0((uint64_t)v19, a2, &qword_1000A2228);
  uint64_t v28 = sub_10000903C(&qword_1000A2238);
  uint64_t v29 = a2 + *(int *)(v28 + 48);
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  sub_1000155B0((uint64_t)v13, a2 + *(int *)(v28 + 64), &qword_1000A2200);
  sub_100015614((uint64_t)v16, &qword_1000A2200);
  sub_100015614((uint64_t)v22, &qword_1000A2228);
  sub_100015614((uint64_t)v13, &qword_1000A2200);
  return sub_100015614((uint64_t)v19, &qword_1000A2228);
}

uint64_t sub_100058DD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_10000903C(&qword_1000A1990);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EpisodeCaptionView();
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000903C(&qword_1000A1B80);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000903C(&qword_1000A2240);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000903C(&qword_1000A2248);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v40 = (uint64_t)&v40 - v23;
  sub_100059A4C(a1, (uint64_t)v9, type metadata accessor for UpNextEntry.Episode);
  v9[v7[7]] = 1;
  v9[v7[8]] = 0;
  v9[v7[9]] = 0;
  sub_10008ACC0();
  uint64_t v24 = sub_10008AC50();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100059A4C((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for EpisodeCaptionView);
  uint64_t v26 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  uint64_t *v26 = KeyPath;
  v26[1] = v24;
  sub_100059AB4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for EpisodeCaptionView);
  uint64_t v27 = enum case for Text.Case.uppercase(_:);
  uint64_t v28 = sub_10008AD40();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v5, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v5, 0, 1, v28);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  uint64_t v32 = sub_10000903C(&qword_1000A1988);
  sub_1000155B0((uint64_t)v5, (uint64_t)v31 + *(int *)(v32 + 28), &qword_1000A1990);
  *uint64_t v31 = v30;
  sub_1000155B0((uint64_t)v13, (uint64_t)v17, &qword_1000A1B80);
  sub_100015614((uint64_t)v5, &qword_1000A1990);
  sub_100015614((uint64_t)v13, &qword_1000A1B80);
  uint64_t v33 = swift_getKeyPath();
  sub_1000155B0((uint64_t)v17, (uint64_t)v21, &qword_1000A2240);
  uint64_t v34 = &v21[*(int *)(v19 + 44)];
  *(void *)uint64_t v34 = v33;
  v34[8] = 0;
  sub_100015614((uint64_t)v17, &qword_1000A2240);
  uint64_t v35 = v40;
  sub_10001547C((uint64_t)v21, v40, &qword_1000A2248);
  sub_1000155B0(v35, (uint64_t)v21, &qword_1000A2248);
  uint64_t v36 = v41;
  void *v41 = 0;
  *((unsigned char *)v36 + 8) = 1;
  uint64_t v37 = v36;
  uint64_t v38 = sub_10000903C(&qword_1000A2250);
  sub_1000155B0((uint64_t)v21, (uint64_t)v37 + *(int *)(v38 + 48), &qword_1000A2248);
  *(void *)((char *)v37 + *(int *)(v38 + 64)) = 0x4010000000000000;
  sub_100015614(v35, &qword_1000A2248);
  return sub_100015614((uint64_t)v21, &qword_1000A2248);
}

uint64_t sub_100059230()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(type metadata accessor for EpisodeListWidgetLargeHeader() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v49 = *(void *)(v2 + 64);
  uint64_t v50 = (v3 + 16) & ~v3;
  uint64_t v4 = v0 + v50;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v6 = v0 + v50 + v5[10];
  uint64_t v7 = sub_10008A170();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v47(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v48 = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = v4 + v5[12];
  uint64_t v10 = sub_10008A340();
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    int v12 = *(unsigned __int8 *)(v9 + 32);
    if (v12 != 255) {
      sub_1000096D4(*(void *)(v9 + 16), *(void *)(v9 + 24), v12);
    }
    int v13 = *(unsigned __int8 *)(v9 + 64);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v9 + 56), v13);
    }
    int v14 = *(unsigned __int8 *)(v9 + 80);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v9 + 72), v14);
    }
    int v15 = *(unsigned __int8 *)(v9 + 96);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v9 + 88), v15);
    }
    uint64_t v46 = v3;
    int v16 = *(unsigned __int8 *)(v9 + 112);
    if (v16 != 255) {
      sub_1000096EC(*(id *)(v9 + 104), v16);
    }
    uint64_t v17 = v1;
    int v18 = *(unsigned __int8 *)(v9 + 128);
    if (v18 != 255) {
      sub_1000096EC(*(id *)(v9 + 120), v18);
    }
    uint64_t v19 = v9 + *(int *)(v10 + 44);
    uint64_t v20 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v17;
    uint64_t v3 = v46;
  }
  uint64_t v21 = v4 + v5[13];
  if (!v11(v21, 1, v10))
  {
    swift_bridgeObjectRelease();
    int v22 = *(unsigned __int8 *)(v21 + 32);
    if (v22 != 255) {
      sub_1000096D4(*(void *)(v21 + 16), *(void *)(v21 + 24), v22);
    }
    int v23 = *(unsigned __int8 *)(v21 + 64);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v21 + 56), v23);
    }
    int v24 = *(unsigned __int8 *)(v21 + 80);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v21 + 72), v24);
    }
    int v25 = *(unsigned __int8 *)(v21 + 96);
    if (v25 != 255) {
      sub_1000096EC(*(id *)(v21 + 88), v25);
    }
    int v26 = *(unsigned __int8 *)(v21 + 112);
    if (v26 != 255) {
      sub_1000096EC(*(id *)(v21 + 104), v26);
    }
    uint64_t v27 = v1;
    int v28 = *(unsigned __int8 *)(v21 + 128);
    if (v28 != 255) {
      sub_1000096EC(*(id *)(v21 + 120), v28);
    }
    uint64_t v29 = v21 + *(int *)(v10 + 44);
    uint64_t v30 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v27;
  }

  uint64_t v31 = v4 + v5[15];
  uint64_t v32 = sub_10008A050();
  uint64_t v33 = *(void *)(v32 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  uint64_t v34 = v4 + v5[19];
  if (!v47(v34, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v34, v7);
  }
  uint64_t v35 = v4 + v5[20];
  if (!v47(v35, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v35, v7);
  }
  if (*(void *)(v4 + v5[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v36 = v4 + v5[22];
  uint64_t v37 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37))
  {
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v38(v36, v7);
    v38(v36 + *(int *)(v37 + 36), v7);
  }
  uint64_t v39 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v40 = v36 + *(int *)(v39 + 20);
  uint64_t v41 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
  uint64_t v42 = v36 + *(int *)(v39 + 24);
  uint64_t v43 = sub_10008A4B0();
  uint64_t v44 = *(void *)(v43 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43)) {
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, v50 + v49, v3 | 7);
}

uint64_t sub_1000598B4()
{
  uint64_t v1 = *(void *)(type metadata accessor for EpisodeListWidgetLargeHeader() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100057894(v2);
}

uint64_t sub_100059924(uint64_t a1)
{
  return sub_1000580B8(a1, *(void *)(v1 + 16));
}

unint64_t sub_10005992C()
{
  unint64_t result = qword_1000A21A0;
  if (!qword_1000A21A0)
  {
    sub_10000E49C(&qword_1000A2190);
    sub_100015428(&qword_1000A21A8, &qword_1000A2188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A21A0);
  }
  return result;
}

uint64_t sub_1000599DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100059A4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100059AB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100059B28()
{
  unint64_t result = qword_1000A2258;
  if (!qword_1000A2258)
  {
    sub_10000E49C(&qword_1000A2260);
    sub_100059BC8();
    sub_100015428(&qword_1000A2050, &qword_1000A2030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2258);
  }
  return result;
}

unint64_t sub_100059BC8()
{
  unint64_t result = qword_1000A2048;
  if (!qword_1000A2048)
  {
    sub_10000E49C(&qword_1000A2040);
    sub_100015428(&qword_1000A2050, &qword_1000A2030);
    sub_100015264();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2048);
  }
  return result;
}

void *sub_100059C68(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    a1[10] = a2[10];
    int v164 = (int *)type metadata accessor for UpNextEntry.Episode(0);
    uint64_t v11 = v164[10];
    __dst = (char *)a1 + v11;
    int v159 = a1;
    int v160 = a2;
    int v12 = (char *)a2 + v11;
    uint64_t v13 = sub_10008A170();
    uint64_t v14 = *(void *)(v13 - 8);
    int v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v163 = v15;
    uint64_t v161 = v16;
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000903C(&qword_1000A1038);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v20 = v164;
    uint64_t v21 = v164[11];
    uint64_t v19 = v159;
    int v22 = (void *)((char *)v159 + v21);
    int v23 = (void *)((char *)v160 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v164[12];
    int v26 = (void *)((char *)v159 + v25);
    uint64_t v27 = (void *)((char *)v160 + v25);
    int v28 = (int *)sub_10008A340();
    __dsta = (void *)*((void *)v28 - 1);
    uint64_t v29 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
    swift_bridgeObjectRetain();
    if (v29(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1040);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v27[1];
      void *v26 = *v27;
      v26[1] = v31;
      int v32 = *((unsigned __int8 *)v27 + 32);
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
        *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
      }
      else
      {
        uint64_t v33 = v27[2];
        uint64_t v34 = v27[3];
        sub_100009080(v33, v34, v32);
        v26[2] = v33;
        v26[3] = v34;
        *((unsigned char *)v26 + 32) = v32;
      }
      *(_OWORD *)(v26 + 5) = *(_OWORD *)(v27 + 5);
      uint64_t v35 = (id *)(v27 + 7);
      int v36 = *((unsigned __int8 *)v27 + 64);
      if (v36 == 255)
      {
        v26[7] = *v35;
        *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
      }
      else
      {
        id v37 = *v35;
        sub_100009098(*v35, *((unsigned char *)v27 + 64));
        v26[7] = v37;
        *((unsigned char *)v26 + 64) = v36;
      }
      uint64_t v38 = (id *)(v27 + 9);
      int v39 = *((unsigned __int8 *)v27 + 80);
      if (v39 == 255)
      {
        v26[9] = *v38;
        *((unsigned char *)v26 + 80) = *((unsigned char *)v27 + 80);
      }
      else
      {
        id v40 = *v38;
        sub_100009098(*v38, *((unsigned char *)v27 + 80));
        v26[9] = v40;
        *((unsigned char *)v26 + 80) = v39;
      }
      uint64_t v41 = (id *)(v27 + 11);
      int v42 = *((unsigned __int8 *)v27 + 96);
      if (v42 == 255)
      {
        v26[11] = *v41;
        *((unsigned char *)v26 + 96) = *((unsigned char *)v27 + 96);
      }
      else
      {
        id v43 = *v41;
        sub_100009098(*v41, *((unsigned char *)v27 + 96));
        v26[11] = v43;
        *((unsigned char *)v26 + 96) = v42;
      }
      uint64_t v44 = (id *)(v27 + 13);
      int v45 = *((unsigned __int8 *)v27 + 112);
      if (v45 == 255)
      {
        v26[13] = *v44;
        *((unsigned char *)v26 + 112) = *((unsigned char *)v27 + 112);
      }
      else
      {
        id v46 = *v44;
        sub_100009098(*v44, *((unsigned char *)v27 + 112));
        v26[13] = v46;
        *((unsigned char *)v26 + 112) = v45;
      }
      uint64_t v47 = (id *)(v27 + 15);
      int v48 = *((unsigned __int8 *)v27 + 128);
      if (v48 == 255)
      {
        v26[15] = *v47;
        *((unsigned char *)v26 + 128) = *((unsigned char *)v27 + 128);
      }
      else
      {
        id v49 = *v47;
        sub_100009098(*v47, *((unsigned char *)v27 + 128));
        v26[15] = v49;
        *((unsigned char *)v26 + 128) = v48;
      }
      uint64_t v20 = v164;
      *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
      uint64_t v50 = v28[11];
      uint64_t v51 = (char *)v26 + v50;
      uint64_t v52 = (char *)v27 + v50;
      uint64_t v53 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v28[12];
      uint64_t v55 = (void *)((char *)v26 + v54);
      uint64_t v56 = (void *)((char *)v27 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      *((unsigned char *)v26 + v28[13]) = *((unsigned char *)v27 + v28[13]);
      *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
      *((unsigned char *)v26 + v28[15]) = *((unsigned char *)v27 + v28[15]);
      uint64_t v58 = v28[16];
      uint64_t v59 = (void *)((char *)v26 + v58);
      uint64_t v60 = (void *)((char *)v27 + v58);
      uint64_t v61 = v60[1];
      void *v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(v26, 0, 1, v28);
    }
    uint64_t v63 = v20[13];
    uint64_t v64 = (void *)((char *)v159 + v63);
    uint64_t v65 = (void *)((char *)v160 + v63);
    if (v29((void *)((char *)v160 + v63), 1, v28))
    {
      uint64_t v66 = sub_10000903C(&qword_1000A1040);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v14;
    }
    else
    {
      uint64_t v68 = v65[1];
      void *v64 = *v65;
      v64[1] = v68;
      int v69 = *((unsigned __int8 *)v65 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = v14;
      if (v69 == 255)
      {
        *((_OWORD *)v64 + 1) = *((_OWORD *)v65 + 1);
        *((unsigned char *)v64 + 32) = *((unsigned char *)v65 + 32);
      }
      else
      {
        uint64_t v70 = v65[2];
        uint64_t v71 = v65[3];
        sub_100009080(v70, v71, v69);
        v64[2] = v70;
        v64[3] = v71;
        *((unsigned char *)v64 + 32) = v69;
      }
      *(_OWORD *)(v64 + 5) = *(_OWORD *)(v65 + 5);
      uint64_t v72 = (id *)(v65 + 7);
      int v73 = *((unsigned __int8 *)v65 + 64);
      if (v73 == 255)
      {
        v64[7] = *v72;
        *((unsigned char *)v64 + 64) = *((unsigned char *)v65 + 64);
      }
      else
      {
        id v74 = *v72;
        sub_100009098(*v72, *((unsigned char *)v65 + 64));
        v64[7] = v74;
        *((unsigned char *)v64 + 64) = v73;
      }
      uint64_t v75 = (id *)(v65 + 9);
      int v76 = *((unsigned __int8 *)v65 + 80);
      if (v76 == 255)
      {
        v64[9] = *v75;
        *((unsigned char *)v64 + 80) = *((unsigned char *)v65 + 80);
      }
      else
      {
        id v77 = *v75;
        sub_100009098(*v75, *((unsigned char *)v65 + 80));
        v64[9] = v77;
        *((unsigned char *)v64 + 80) = v76;
      }
      uint64_t v78 = (id *)(v65 + 11);
      int v79 = *((unsigned __int8 *)v65 + 96);
      if (v79 == 255)
      {
        v64[11] = *v78;
        *((unsigned char *)v64 + 96) = *((unsigned char *)v65 + 96);
      }
      else
      {
        id v80 = *v78;
        sub_100009098(*v78, *((unsigned char *)v65 + 96));
        v64[11] = v80;
        *((unsigned char *)v64 + 96) = v79;
      }
      long long v81 = (id *)(v65 + 13);
      int v82 = *((unsigned __int8 *)v65 + 112);
      if (v82 == 255)
      {
        v64[13] = *v81;
        *((unsigned char *)v64 + 112) = *((unsigned char *)v65 + 112);
      }
      else
      {
        id v83 = *v81;
        sub_100009098(*v81, *((unsigned char *)v65 + 112));
        v64[13] = v83;
        *((unsigned char *)v64 + 112) = v82;
      }
      uint64_t v84 = (id *)(v65 + 15);
      int v85 = *((unsigned __int8 *)v65 + 128);
      if (v85 == 255)
      {
        v64[15] = *v84;
        *((unsigned char *)v64 + 128) = *((unsigned char *)v65 + 128);
      }
      else
      {
        id v86 = *v84;
        sub_100009098(*v84, *((unsigned char *)v65 + 128));
        v64[15] = v86;
        *((unsigned char *)v64 + 128) = v85;
      }
      uint64_t v20 = v164;
      *((unsigned char *)v64 + 129) = *((unsigned char *)v65 + 129);
      uint64_t v87 = v28[11];
      int v88 = (char *)v64 + v87;
      int v89 = (char *)v65 + v87;
      uint64_t v90 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      uint64_t v91 = v28[12];
      uint64_t v92 = (void *)((char *)v64 + v91);
      uint64_t v93 = (void *)((char *)v65 + v91);
      uint64_t v94 = v93[1];
      void *v92 = *v93;
      v92[1] = v94;
      *((unsigned char *)v64 + v28[13]) = *((unsigned char *)v65 + v28[13]);
      *((unsigned char *)v64 + v28[14]) = *((unsigned char *)v65 + v28[14]);
      *((unsigned char *)v64 + v28[15]) = *((unsigned char *)v65 + v28[15]);
      uint64_t v95 = v28[16];
      uint64_t v96 = (void *)((char *)v64 + v95);
      uint64_t v97 = (void *)((char *)v65 + v95);
      uint64_t v98 = v97[1];
      void *v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99(v64, 0, 1, v28);
    }
    uint64_t v100 = v20[14];
    uint64_t v101 = *(void **)((char *)v160 + v100);
    *(void *)((char *)v159 + v100) = v101;
    uint64_t v102 = v20[15];
    int v103 = (char *)v159 + v102;
    int v104 = (char *)v160 + v102;
    uint64_t v105 = sub_10008A050();
    uint64_t v106 = *(void *)(v105 - 8);
    char v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
    id v108 = v101;
    if (v107(v104, 1, v105))
    {
      uint64_t v109 = sub_10000903C(&qword_1000A1048);
      memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
    }
    *((unsigned char *)v159 + v164[16]) = *((unsigned char *)v160 + v164[16]);
    uint64_t v110 = v164[17];
    uint64_t v111 = (char *)v159 + v110;
    uint64_t v112 = (char *)v160 + v110;
    *(void *)uint64_t v111 = *(void *)v112;
    v111[8] = v112[8];
    uint64_t v113 = v164[18];
    uint64_t v114 = (char *)v159 + v113;
    uint64_t v115 = (char *)v160 + v113;
    *(void *)uint64_t v114 = *(void *)v115;
    v114[8] = v115[8];
    uint64_t v116 = v164[19];
    uint64_t v117 = (char *)v159 + v116;
    uint64_t v118 = (char *)v160 + v116;
    if (v163((char *)v160 + v116, 1, v161))
    {
      uint64_t v119 = sub_10000903C(&qword_1000A1038);
      memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v117, v118, v161);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v117, 0, 1, v161);
    }
    uint64_t v120 = v164[20];
    uint64_t v121 = (char *)v159 + v120;
    uint64_t v122 = (char *)v160 + v120;
    if (v163((char *)v160 + v120, 1, v161))
    {
      uint64_t v123 = sub_10000903C(&qword_1000A1038);
      memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v121, v122, v161);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v121, 0, 1, v161);
    }
    uint64_t v124 = v164[21];
    uint64_t v125 = (void *)((char *)v159 + v124);
    uint64_t v126 = (void *)((char *)v160 + v124);
    if (*v126)
    {
      uint64_t v127 = v126[1];
      uint64_t v128 = v126[2];
      void *v125 = *v126;
      v125[1] = v127;
      v125[2] = v128;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
      v125[2] = v126[2];
    }
    uint64_t v129 = v164[22];
    int v130 = (char *)v159 + v129;
    uint64_t v131 = (char *)v160 + v129;
    uint64_t v132 = sub_10000903C(&qword_1000A1050);
    uint64_t v133 = *(void *)(v132 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
    {
      uint64_t v134 = sub_10000903C(&qword_1000A1058);
      memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      int v135 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v135(v130, v131, v161);
      v135(&v130[*(int *)(v132 + 36)], &v131[*(int *)(v132 + 36)], v161);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
    }
    int v136 = (int *)type metadata accessor for WidgetPredictedPlayState();
    uint64_t v137 = v136[5];
    uint64_t v138 = &v130[v137];
    int v139 = &v131[v137];
    uint64_t v140 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
    uint64_t v141 = v136[6];
    uint64_t v142 = &v130[v141];
    int v143 = &v131[v141];
    uint64_t v144 = sub_10008A4B0();
    uint64_t v145 = *(void *)(v144 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
    {
      uint64_t v146 = sub_10000903C(&qword_1000A1060);
      memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v142, v143, v144);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
    }
    uint64_t v147 = v136[7];
    int v148 = &v130[v147];
    int v149 = &v131[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *(void *)int v148 = *(void *)v149;
    *((void *)v148 + 1) = v150;
    uint64_t v151 = v136[8];
    int v152 = &v130[v151];
    int v153 = &v131[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)int v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    uint64_t v155 = a3[6];
    *((unsigned char *)v159 + a3[5]) = *((unsigned char *)v160 + a3[5]);
    *((unsigned char *)v159 + v155) = *((unsigned char *)v160 + v155);
    *((unsigned char *)v159 + a3[7]) = *((unsigned char *)v160 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v19;
}

void *sub_10005A99C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  int v160 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v10 = v160[10];
  __dst = (char *)a1 + v10;
  int v156 = a1;
  int v157 = a2;
  uint64_t v11 = (char *)a2 + v10;
  uint64_t v12 = sub_10008A170();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v158 = v15;
  if (v14(v11, 1, v15))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v17 = v160;
  uint64_t v18 = v160[11];
  uint64_t v19 = (void *)((char *)v156 + v18);
  uint64_t v20 = (void *)((char *)v157 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v160[12];
  int v23 = (void *)((char *)v156 + v22);
  uint64_t v24 = (void *)((char *)v157 + v22);
  uint64_t v25 = (int *)sub_10008A340();
  __dsta = (void *)*((void *)v25 - 1);
  int v26 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    uint64_t v27 = sub_10000903C(&qword_1000A1040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v24[1];
    void *v23 = *v24;
    v23[1] = v28;
    int v29 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
    }
    else
    {
      uint64_t v30 = v24[2];
      uint64_t v31 = v24[3];
      sub_100009080(v30, v31, v29);
      v23[2] = v30;
      void v23[3] = v31;
      *((unsigned char *)v23 + 32) = v29;
    }
    *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
    int v32 = (id *)(v24 + 7);
    int v33 = *((unsigned __int8 *)v24 + 64);
    if (v33 == 255)
    {
      v23[7] = *v32;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
    }
    else
    {
      id v34 = *v32;
      sub_100009098(*v32, *((unsigned char *)v24 + 64));
      v23[7] = v34;
      *((unsigned char *)v23 + 64) = v33;
    }
    uint64_t v35 = (id *)(v24 + 9);
    int v36 = *((unsigned __int8 *)v24 + 80);
    if (v36 == 255)
    {
      v23[9] = *v35;
      *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
    }
    else
    {
      id v37 = *v35;
      sub_100009098(*v35, *((unsigned char *)v24 + 80));
      v23[9] = v37;
      *((unsigned char *)v23 + 80) = v36;
    }
    uint64_t v38 = (id *)(v24 + 11);
    int v39 = *((unsigned __int8 *)v24 + 96);
    if (v39 == 255)
    {
      v23[11] = *v38;
      *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
    }
    else
    {
      id v40 = *v38;
      sub_100009098(*v38, *((unsigned char *)v24 + 96));
      v23[11] = v40;
      *((unsigned char *)v23 + 96) = v39;
    }
    uint64_t v41 = (id *)(v24 + 13);
    int v42 = *((unsigned __int8 *)v24 + 112);
    if (v42 == 255)
    {
      v23[13] = *v41;
      *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_100009098(*v41, *((unsigned char *)v24 + 112));
      v23[13] = v43;
      *((unsigned char *)v23 + 112) = v42;
    }
    uint64_t v44 = (id *)(v24 + 15);
    int v45 = *((unsigned __int8 *)v24 + 128);
    if (v45 == 255)
    {
      v23[15] = *v44;
      *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_100009098(*v44, *((unsigned char *)v24 + 128));
      v23[15] = v46;
      *((unsigned char *)v23 + 128) = v45;
    }
    uint64_t v17 = v160;
    *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
    uint64_t v47 = v25[11];
    int v48 = (char *)v23 + v47;
    id v49 = (char *)v24 + v47;
    uint64_t v50 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v25[12];
    uint64_t v52 = (void *)((char *)v23 + v51);
    uint64_t v53 = (void *)((char *)v24 + v51);
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
    *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
    *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
    uint64_t v55 = v25[16];
    uint64_t v56 = (void *)((char *)v23 + v55);
    uint64_t v57 = (void *)((char *)v24 + v55);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v23, 0, 1, v25);
  }
  uint64_t v60 = v17[13];
  uint64_t v61 = (void *)((char *)v156 + v60);
  uint64_t v62 = (void *)((char *)v157 + v60);
  if (v26((void *)((char *)v157 + v60), 1, v25))
  {
    uint64_t v63 = sub_10000903C(&qword_1000A1040);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    uint64_t v64 = v13;
  }
  else
  {
    uint64_t v65 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v65;
    int v66 = *((unsigned __int8 *)v62 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = v13;
    if (v66 == 255)
    {
      *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
      *((unsigned char *)v61 + 32) = *((unsigned char *)v62 + 32);
    }
    else
    {
      uint64_t v67 = v62[2];
      uint64_t v68 = v62[3];
      sub_100009080(v67, v68, v66);
      v61[2] = v67;
      v61[3] = v68;
      *((unsigned char *)v61 + 32) = v66;
    }
    *(_OWORD *)(v61 + 5) = *(_OWORD *)(v62 + 5);
    int v69 = (id *)(v62 + 7);
    int v70 = *((unsigned __int8 *)v62 + 64);
    if (v70 == 255)
    {
      v61[7] = *v69;
      *((unsigned char *)v61 + 64) = *((unsigned char *)v62 + 64);
    }
    else
    {
      id v71 = *v69;
      sub_100009098(*v69, *((unsigned char *)v62 + 64));
      v61[7] = v71;
      *((unsigned char *)v61 + 64) = v70;
    }
    uint64_t v72 = (id *)(v62 + 9);
    int v73 = *((unsigned __int8 *)v62 + 80);
    if (v73 == 255)
    {
      v61[9] = *v72;
      *((unsigned char *)v61 + 80) = *((unsigned char *)v62 + 80);
    }
    else
    {
      id v74 = *v72;
      sub_100009098(*v72, *((unsigned char *)v62 + 80));
      v61[9] = v74;
      *((unsigned char *)v61 + 80) = v73;
    }
    uint64_t v75 = (id *)(v62 + 11);
    int v76 = *((unsigned __int8 *)v62 + 96);
    if (v76 == 255)
    {
      v61[11] = *v75;
      *((unsigned char *)v61 + 96) = *((unsigned char *)v62 + 96);
    }
    else
    {
      id v77 = *v75;
      sub_100009098(*v75, *((unsigned char *)v62 + 96));
      v61[11] = v77;
      *((unsigned char *)v61 + 96) = v76;
    }
    uint64_t v78 = (id *)(v62 + 13);
    int v79 = *((unsigned __int8 *)v62 + 112);
    if (v79 == 255)
    {
      v61[13] = *v78;
      *((unsigned char *)v61 + 112) = *((unsigned char *)v62 + 112);
    }
    else
    {
      id v80 = *v78;
      sub_100009098(*v78, *((unsigned char *)v62 + 112));
      v61[13] = v80;
      *((unsigned char *)v61 + 112) = v79;
    }
    long long v81 = (id *)(v62 + 15);
    int v82 = *((unsigned __int8 *)v62 + 128);
    if (v82 == 255)
    {
      v61[15] = *v81;
      *((unsigned char *)v61 + 128) = *((unsigned char *)v62 + 128);
    }
    else
    {
      id v83 = *v81;
      sub_100009098(*v81, *((unsigned char *)v62 + 128));
      v61[15] = v83;
      *((unsigned char *)v61 + 128) = v82;
    }
    uint64_t v17 = v160;
    *((unsigned char *)v61 + 129) = *((unsigned char *)v62 + 129);
    uint64_t v84 = v25[11];
    int v85 = (char *)v61 + v84;
    id v86 = (char *)v62 + v84;
    uint64_t v87 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    uint64_t v88 = v25[12];
    int v89 = (void *)((char *)v61 + v88);
    uint64_t v90 = (void *)((char *)v62 + v88);
    uint64_t v91 = v90[1];
    void *v89 = *v90;
    v89[1] = v91;
    *((unsigned char *)v61 + v25[13]) = *((unsigned char *)v62 + v25[13]);
    *((unsigned char *)v61 + v25[14]) = *((unsigned char *)v62 + v25[14]);
    *((unsigned char *)v61 + v25[15]) = *((unsigned char *)v62 + v25[15]);
    uint64_t v92 = v25[16];
    uint64_t v93 = (void *)((char *)v61 + v92);
    uint64_t v94 = (void *)((char *)v62 + v92);
    uint64_t v95 = v94[1];
    void *v93 = *v94;
    v93[1] = v95;
    uint64_t v96 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96(v61, 0, 1, v25);
  }
  uint64_t v97 = v17[14];
  uint64_t v98 = *(void **)((char *)v157 + v97);
  *(void *)((char *)v156 + v97) = v98;
  uint64_t v99 = v17[15];
  uint64_t v100 = (char *)v156 + v99;
  uint64_t v101 = (char *)v157 + v99;
  uint64_t v102 = sub_10008A050();
  uint64_t v103 = *(void *)(v102 - 8);
  int v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
  id v105 = v98;
  if (v104(v101, 1, v102))
  {
    uint64_t v106 = sub_10000903C(&qword_1000A1048);
    memcpy(v100, v101, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  *((unsigned char *)v156 + v160[16]) = *((unsigned char *)v157 + v160[16]);
  uint64_t v107 = v160[17];
  id v108 = (char *)v156 + v107;
  uint64_t v109 = (char *)v157 + v107;
  *(void *)id v108 = *(void *)v109;
  v108[8] = v109[8];
  uint64_t v110 = v160[18];
  uint64_t v111 = (char *)v156 + v110;
  uint64_t v112 = (char *)v157 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  v111[8] = v112[8];
  uint64_t v113 = v160[19];
  uint64_t v114 = (char *)v156 + v113;
  uint64_t v115 = (char *)v157 + v113;
  if (v14((char *)v157 + v113, 1, v158))
  {
    uint64_t v116 = sub_10000903C(&qword_1000A1038);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v114, v115, v158);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v114, 0, 1, v158);
  }
  uint64_t v117 = v160[20];
  uint64_t v118 = (char *)v156 + v117;
  uint64_t v119 = (char *)v157 + v117;
  if (v14((char *)v157 + v117, 1, v158))
  {
    uint64_t v120 = sub_10000903C(&qword_1000A1038);
    memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v118, v119, v158);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v158);
  }
  uint64_t v121 = v160[21];
  uint64_t v122 = (void *)((char *)v156 + v121);
  uint64_t v123 = (void *)((char *)v157 + v121);
  if (*v123)
  {
    uint64_t v124 = v123[1];
    uint64_t v125 = v123[2];
    void *v122 = *v123;
    v122[1] = v124;
    v122[2] = v125;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    v122[2] = v123[2];
  }
  uint64_t v126 = v160[22];
  uint64_t v127 = (char *)v156 + v126;
  uint64_t v128 = (char *)v157 + v126;
  uint64_t v129 = sub_10000903C(&qword_1000A1050);
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = sub_10000903C(&qword_1000A1058);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v132(v127, v128, v158);
    v132(&v127[*(int *)(v129 + 36)], &v128[*(int *)(v129 + 36)], v158);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  uint64_t v133 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v134 = v133[5];
  int v135 = &v127[v134];
  int v136 = &v128[v134];
  uint64_t v137 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
  uint64_t v138 = v133[6];
  int v139 = &v127[v138];
  uint64_t v140 = &v128[v138];
  uint64_t v141 = sub_10008A4B0();
  uint64_t v142 = *(void *)(v141 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
  {
    uint64_t v143 = sub_10000903C(&qword_1000A1060);
    memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  }
  uint64_t v144 = v133[7];
  uint64_t v145 = &v127[v144];
  uint64_t v146 = &v128[v144];
  uint64_t v147 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v147;
  uint64_t v148 = v133[8];
  int v149 = &v127[v148];
  uint64_t v150 = &v128[v148];
  uint64_t v151 = *((void *)v150 + 1);
  *(void *)int v149 = *(void *)v150;
  *((void *)v149 + 1) = v151;
  uint64_t v152 = a3[6];
  *((unsigned char *)v156 + a3[5]) = *((unsigned char *)v157 + a3[5]);
  *((unsigned char *)v156 + v152) = *((unsigned char *)v157 + v152);
  *((unsigned char *)v156 + a3[7]) = *((unsigned char *)v157 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v156;
}

void *sub_10005B680(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008A170();
  uint64_t v314 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v314 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  uint64_t v311 = a3;
  uint64_t v309 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v314 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v314 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = v6[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[12];
  uint64_t v19 = (uint64_t)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_10008A340();
  uint64_t v308 = *((void *)v21 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v308 + 48);
  int v23 = v22(v19, 1, v21);
  int v24 = v22((uint64_t)v20, 1, v21);
  uint64_t v310 = v10;
  if (!v23)
  {
    if (!v24)
    {
      v307 = v22;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = (long long *)(v19 + 16);
      uint64_t v30 = (long long *)(v20 + 16);
      int v31 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v31 == 255)
        {
          long long v72 = *v30;
          *(unsigned char *)(v19 + 32) = v20[32];
          *int v29 = v72;
        }
        else
        {
          uint64_t v69 = *((void *)v20 + 2);
          uint64_t v70 = *((void *)v20 + 3);
          sub_100009080(v69, v70, v20[32]);
          *(void *)(v19 + 16) = v69;
          *(void *)(v19 + 24) = v70;
          *(unsigned char *)(v19 + 32) = v31;
        }
      }
      else if (v31 == 255)
      {
        sub_10000BE14(v19 + 16);
        char v71 = v20[32];
        *int v29 = *v30;
        *(unsigned char *)(v19 + 32) = v71;
      }
      else
      {
        uint64_t v33 = *((void *)v20 + 2);
        uint64_t v32 = *((void *)v20 + 3);
        sub_100009080(v33, v32, v20[32]);
        uint64_t v34 = *(void *)(v19 + 16);
        uint64_t v35 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v33;
        *(void *)(v19 + 24) = v32;
        unsigned __int8 v36 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v31;
        sub_1000096D4(v34, v35, v36);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v73 = (void **)(v19 + 56);
      id v74 = (void **)(v20 + 56);
      int v75 = v20[64];
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v75 == 255)
        {
          long long v81 = *v74;
          *(unsigned char *)(v19 + 64) = v20[64];
          *int v73 = v81;
        }
        else
        {
          int v79 = *v74;
          sub_100009098(v79, v20[64]);
          *(void *)(v19 + 56) = v79;
          *(unsigned char *)(v19 + 64) = v75;
        }
      }
      else if (v75 == 255)
      {
        sub_10000BE68(v19 + 56);
        char v80 = v20[64];
        *int v73 = *v74;
        *(unsigned char *)(v19 + 64) = v80;
      }
      else
      {
        int v76 = *v74;
        sub_100009098(v76, v20[64]);
        id v77 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v76;
        char v78 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v75;
        sub_1000096EC(v77, v78);
      }
      int v82 = (void **)(v19 + 72);
      id v83 = (void **)(v20 + 72);
      int v84 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v84 == 255)
        {
          uint64_t v90 = *v83;
          *(unsigned char *)(v19 + 80) = v20[80];
          *int v82 = v90;
        }
        else
        {
          uint64_t v88 = *v83;
          sub_100009098(v88, v20[80]);
          *(void *)(v19 + 72) = v88;
          *(unsigned char *)(v19 + 80) = v84;
        }
      }
      else if (v84 == 255)
      {
        sub_10000BE68(v19 + 72);
        char v89 = v20[80];
        *int v82 = *v83;
        *(unsigned char *)(v19 + 80) = v89;
      }
      else
      {
        int v85 = *v83;
        sub_100009098(v85, v20[80]);
        id v86 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v85;
        char v87 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v84;
        sub_1000096EC(v86, v87);
      }
      uint64_t v91 = (void **)(v19 + 88);
      uint64_t v92 = (void **)(v20 + 88);
      int v93 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v93 == 255)
        {
          uint64_t v99 = *v92;
          *(unsigned char *)(v19 + 96) = v20[96];
          *uint64_t v91 = v99;
        }
        else
        {
          uint64_t v97 = *v92;
          sub_100009098(v97, v20[96]);
          *(void *)(v19 + 88) = v97;
          *(unsigned char *)(v19 + 96) = v93;
        }
      }
      else if (v93 == 255)
      {
        sub_10000BE68(v19 + 88);
        char v98 = v20[96];
        *uint64_t v91 = *v92;
        *(unsigned char *)(v19 + 96) = v98;
      }
      else
      {
        uint64_t v94 = *v92;
        sub_100009098(v94, v20[96]);
        uint64_t v95 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v94;
        char v96 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v93;
        sub_1000096EC(v95, v96);
      }
      uint64_t v100 = (void **)(v19 + 104);
      uint64_t v101 = (void **)(v20 + 104);
      int v102 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v102 == 255)
        {
          id v108 = *v101;
          *(unsigned char *)(v19 + 112) = v20[112];
          *uint64_t v100 = v108;
        }
        else
        {
          uint64_t v106 = *v101;
          sub_100009098(v106, v20[112]);
          *(void *)(v19 + 104) = v106;
          *(unsigned char *)(v19 + 112) = v102;
        }
      }
      else if (v102 == 255)
      {
        sub_10000BE68(v19 + 104);
        char v107 = v20[112];
        *uint64_t v100 = *v101;
        *(unsigned char *)(v19 + 112) = v107;
      }
      else
      {
        uint64_t v103 = *v101;
        sub_100009098(v103, v20[112]);
        int v104 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v103;
        char v105 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v102;
        sub_1000096EC(v104, v105);
      }
      uint64_t v109 = (void **)(v19 + 120);
      uint64_t v110 = (void **)(v20 + 120);
      int v111 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v111 == 255)
        {
          uint64_t v117 = *v110;
          *(unsigned char *)(v19 + 128) = v20[128];
          *uint64_t v109 = v117;
        }
        else
        {
          uint64_t v115 = *v110;
          sub_100009098(v115, v20[128]);
          *(void *)(v19 + 120) = v115;
          *(unsigned char *)(v19 + 128) = v111;
        }
      }
      else if (v111 == 255)
      {
        sub_10000BE68(v19 + 120);
        char v116 = v20[128];
        *uint64_t v109 = *v110;
        *(unsigned char *)(v19 + 128) = v116;
      }
      else
      {
        uint64_t v112 = *v110;
        sub_100009098(v112, v20[128]);
        uint64_t v113 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v112;
        char v114 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v111;
        sub_1000096EC(v113, v114);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v118 = v21[11];
      uint64_t v119 = v19 + v118;
      uint64_t v120 = &v20[v118];
      uint64_t v121 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
      uint64_t v122 = v21[12];
      uint64_t v123 = (void *)(v19 + v122);
      uint64_t v124 = &v20[v122];
      *uint64_t v123 = *(void *)v124;
      v123[1] = *((void *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v125 = v21[16];
      uint64_t v126 = (void *)(v19 + v125);
      uint64_t v127 = &v20[v125];
      void *v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_10000BEBC(v19);
LABEL_13:
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_76;
  }
  if (v24) {
    goto LABEL_13;
  }
  v307 = v22;
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v25 = v20[32];
  swift_bridgeObjectRetain();
  if (v25 == 255)
  {
    long long v37 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v37;
  }
  else
  {
    uint64_t v26 = *((void *)v20 + 2);
    uint64_t v27 = *((void *)v20 + 3);
    sub_100009080(v26, v27, v25);
    *(void *)(v19 + 16) = v26;
    *(void *)(v19 + 24) = v27;
    *(unsigned char *)(v19 + 32) = v25;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v38 = (id *)(v20 + 56);
  int v39 = v20[64];
  if (v39 == 255)
  {
    id v41 = *v38;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v41;
  }
  else
  {
    id v40 = *v38;
    sub_100009098(*v38, v20[64]);
    *(void *)(v19 + 56) = v40;
    *(unsigned char *)(v19 + 64) = v39;
  }
  int v42 = (id *)(v20 + 72);
  int v43 = v20[80];
  if (v43 == 255)
  {
    id v45 = *v42;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v45;
  }
  else
  {
    id v44 = *v42;
    sub_100009098(*v42, v20[80]);
    *(void *)(v19 + 72) = v44;
    *(unsigned char *)(v19 + 80) = v43;
  }
  id v46 = (id *)(v20 + 88);
  int v47 = v20[96];
  if (v47 == 255)
  {
    id v49 = *v46;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v49;
  }
  else
  {
    id v48 = *v46;
    sub_100009098(*v46, v20[96]);
    *(void *)(v19 + 88) = v48;
    *(unsigned char *)(v19 + 96) = v47;
  }
  uint64_t v50 = (id *)(v20 + 104);
  int v51 = v20[112];
  if (v51 == 255)
  {
    id v53 = *v50;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v53;
  }
  else
  {
    id v52 = *v50;
    sub_100009098(*v50, v20[112]);
    *(void *)(v19 + 104) = v52;
    *(unsigned char *)(v19 + 112) = v51;
  }
  uint64_t v54 = (id *)(v20 + 120);
  int v55 = v20[128];
  if (v55 == 255)
  {
    id v57 = *v54;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v57;
  }
  else
  {
    id v56 = *v54;
    sub_100009098(*v54, v20[128]);
    *(void *)(v19 + 120) = v56;
    *(unsigned char *)(v19 + 128) = v55;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v58 = v21[11];
  uint64_t v59 = v19 + v58;
  uint64_t v60 = &v20[v58];
  uint64_t v61 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  uint64_t v62 = v21[12];
  uint64_t v63 = (void *)(v19 + v62);
  uint64_t v64 = &v20[v62];
  *uint64_t v63 = *(void *)v64;
  v63[1] = *((void *)v64 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v65 = v21[16];
  int v66 = (void *)(v19 + v65);
  uint64_t v67 = &v20[v65];
  *int v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  uint64_t v68 = *(void (**)(uint64_t, void, uint64_t, int *))(v308 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v19, 0, 1, v21);
LABEL_75:
  uint64_t v22 = v307;
LABEL_76:
  uint64_t v128 = v6[13];
  uint64_t v129 = (uint64_t)a1 + v128;
  uint64_t v130 = (char *)a2 + v128;
  int v131 = v22((uint64_t)a1 + v128, 1, v21);
  uint64_t v132 = (uint64_t (*)(char *, uint64_t, int *))v22;
  int v133 = v131;
  int v134 = v132(v130, 1, v21);
  if (v133)
  {
    if (!v134)
    {
      *(void *)uint64_t v129 = *(void *)v130;
      *(void *)(v129 + 8) = *((void *)v130 + 1);
      int v135 = v130[32];
      swift_bridgeObjectRetain();
      if (v135 == 255)
      {
        long long v147 = *((_OWORD *)v130 + 1);
        *(unsigned char *)(v129 + 32) = v130[32];
        *(_OWORD *)(v129 + 16) = v147;
      }
      else
      {
        uint64_t v136 = *((void *)v130 + 2);
        uint64_t v137 = *((void *)v130 + 3);
        sub_100009080(v136, v137, v135);
        *(void *)(v129 + 16) = v136;
        *(void *)(v129 + 24) = v137;
        *(unsigned char *)(v129 + 32) = v135;
      }
      *(void *)(v129 + 40) = *((void *)v130 + 5);
      *(void *)(v129 + 48) = *((void *)v130 + 6);
      uint64_t v148 = (id *)(v130 + 56);
      int v149 = v130[64];
      if (v149 == 255)
      {
        id v151 = *v148;
        *(unsigned char *)(v129 + 64) = v130[64];
        *(void *)(v129 + 56) = v151;
      }
      else
      {
        id v150 = *v148;
        sub_100009098(*v148, v130[64]);
        *(void *)(v129 + 56) = v150;
        *(unsigned char *)(v129 + 64) = v149;
      }
      uint64_t v152 = (id *)(v130 + 72);
      int v153 = v130[80];
      if (v153 == 255)
      {
        id v155 = *v152;
        *(unsigned char *)(v129 + 80) = v130[80];
        *(void *)(v129 + 72) = v155;
      }
      else
      {
        id v154 = *v152;
        sub_100009098(*v152, v130[80]);
        *(void *)(v129 + 72) = v154;
        *(unsigned char *)(v129 + 80) = v153;
      }
      int v156 = (id *)(v130 + 88);
      int v157 = v130[96];
      if (v157 == 255)
      {
        id v159 = *v156;
        *(unsigned char *)(v129 + 96) = v130[96];
        *(void *)(v129 + 88) = v159;
      }
      else
      {
        id v158 = *v156;
        sub_100009098(*v156, v130[96]);
        *(void *)(v129 + 88) = v158;
        *(unsigned char *)(v129 + 96) = v157;
      }
      int v160 = (id *)(v130 + 104);
      int v161 = v130[112];
      if (v161 == 255)
      {
        id v163 = *v160;
        *(unsigned char *)(v129 + 112) = v130[112];
        *(void *)(v129 + 104) = v163;
      }
      else
      {
        id v162 = *v160;
        sub_100009098(*v160, v130[112]);
        *(void *)(v129 + 104) = v162;
        *(unsigned char *)(v129 + 112) = v161;
      }
      int v164 = (id *)(v130 + 120);
      int v165 = v130[128];
      if (v165 == 255)
      {
        id v167 = *v164;
        *(unsigned char *)(v129 + 128) = v130[128];
        *(void *)(v129 + 120) = v167;
      }
      else
      {
        id v166 = *v164;
        sub_100009098(*v164, v130[128]);
        *(void *)(v129 + 120) = v166;
        *(unsigned char *)(v129 + 128) = v165;
      }
      *(unsigned char *)(v129 + 129) = v130[129];
      uint64_t v168 = v21[11];
      uint64_t v169 = v129 + v168;
      int v170 = &v130[v168];
      uint64_t v171 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      uint64_t v172 = v21[12];
      int v173 = (void *)(v129 + v172);
      uint64_t v174 = &v130[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
      *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
      *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
      uint64_t v175 = v21[16];
      uint64_t v176 = (void *)(v129 + v175);
      uint64_t v177 = &v130[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      uint64_t v178 = *(void (**)(uint64_t, void, uint64_t, int *))(v308 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178(v129, 0, 1, v21);
      goto LABEL_143;
    }
LABEL_82:
    uint64_t v138 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v129, v130, *(void *)(*(void *)(v138 - 8) + 64));
    goto LABEL_143;
  }
  if (v134)
  {
    sub_10000BEBC(v129);
    goto LABEL_82;
  }
  *(void *)uint64_t v129 = *(void *)v130;
  *(void *)(v129 + 8) = *((void *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v139 = (long long *)(v129 + 16);
  uint64_t v140 = (long long *)(v130 + 16);
  int v141 = v130[32];
  if (*(unsigned __int8 *)(v129 + 32) == 255)
  {
    if (v141 == 255)
    {
      long long v182 = *v140;
      *(unsigned char *)(v129 + 32) = v130[32];
      long long *v139 = v182;
    }
    else
    {
      uint64_t v179 = *((void *)v130 + 2);
      uint64_t v180 = *((void *)v130 + 3);
      sub_100009080(v179, v180, v130[32]);
      *(void *)(v129 + 16) = v179;
      *(void *)(v129 + 24) = v180;
      *(unsigned char *)(v129 + 32) = v141;
    }
  }
  else if (v141 == 255)
  {
    sub_10000BE14(v129 + 16);
    char v181 = v130[32];
    long long *v139 = *v140;
    *(unsigned char *)(v129 + 32) = v181;
  }
  else
  {
    uint64_t v142 = *((void *)v130 + 2);
    uint64_t v143 = *((void *)v130 + 3);
    sub_100009080(v142, v143, v130[32]);
    uint64_t v144 = *(void *)(v129 + 16);
    uint64_t v145 = *(void *)(v129 + 24);
    *(void *)(v129 + 16) = v142;
    *(void *)(v129 + 24) = v143;
    unsigned __int8 v146 = *(unsigned char *)(v129 + 32);
    *(unsigned char *)(v129 + 32) = v141;
    sub_1000096D4(v144, v145, v146);
  }
  *(void *)(v129 + 40) = *((void *)v130 + 5);
  *(void *)(v129 + 48) = *((void *)v130 + 6);
  uint64_t v183 = (void **)(v129 + 56);
  uint64_t v184 = (void **)(v130 + 56);
  int v185 = v130[64];
  if (*(unsigned __int8 *)(v129 + 64) == 255)
  {
    if (v185 == 255)
    {
      uint64_t v191 = *v184;
      *(unsigned char *)(v129 + 64) = v130[64];
      *uint64_t v183 = v191;
    }
    else
    {
      uint64_t v189 = *v184;
      sub_100009098(v189, v130[64]);
      *(void *)(v129 + 56) = v189;
      *(unsigned char *)(v129 + 64) = v185;
    }
  }
  else if (v185 == 255)
  {
    sub_10000BE68(v129 + 56);
    char v190 = v130[64];
    *uint64_t v183 = *v184;
    *(unsigned char *)(v129 + 64) = v190;
  }
  else
  {
    uint64_t v186 = *v184;
    sub_100009098(v186, v130[64]);
    uint64_t v187 = *(void **)(v129 + 56);
    *(void *)(v129 + 56) = v186;
    char v188 = *(unsigned char *)(v129 + 64);
    *(unsigned char *)(v129 + 64) = v185;
    sub_1000096EC(v187, v188);
  }
  uint64_t v192 = (void **)(v129 + 72);
  uint64_t v193 = (void **)(v130 + 72);
  int v194 = v130[80];
  if (*(unsigned __int8 *)(v129 + 80) == 255)
  {
    if (v194 == 255)
    {
      uint64_t v200 = *v193;
      *(unsigned char *)(v129 + 80) = v130[80];
      char *v192 = v200;
    }
    else
    {
      uint64_t v198 = *v193;
      sub_100009098(v198, v130[80]);
      *(void *)(v129 + 72) = v198;
      *(unsigned char *)(v129 + 80) = v194;
    }
  }
  else if (v194 == 255)
  {
    sub_10000BE68(v129 + 72);
    char v199 = v130[80];
    char *v192 = *v193;
    *(unsigned char *)(v129 + 80) = v199;
  }
  else
  {
    uint64_t v195 = *v193;
    sub_100009098(v195, v130[80]);
    uint64_t v196 = *(void **)(v129 + 72);
    *(void *)(v129 + 72) = v195;
    char v197 = *(unsigned char *)(v129 + 80);
    *(unsigned char *)(v129 + 80) = v194;
    sub_1000096EC(v196, v197);
  }
  uint64_t v201 = (void **)(v129 + 88);
  uint64_t v202 = (void **)(v130 + 88);
  int v203 = v130[96];
  if (*(unsigned __int8 *)(v129 + 96) == 255)
  {
    if (v203 == 255)
    {
      uint64_t v209 = *v202;
      *(unsigned char *)(v129 + 96) = v130[96];
      uint64_t *v201 = v209;
    }
    else
    {
      uint64_t v207 = *v202;
      sub_100009098(v207, v130[96]);
      *(void *)(v129 + 88) = v207;
      *(unsigned char *)(v129 + 96) = v203;
    }
  }
  else if (v203 == 255)
  {
    sub_10000BE68(v129 + 88);
    char v208 = v130[96];
    uint64_t *v201 = *v202;
    *(unsigned char *)(v129 + 96) = v208;
  }
  else
  {
    uint64_t v204 = *v202;
    sub_100009098(v204, v130[96]);
    uint64_t v205 = *(void **)(v129 + 88);
    *(void *)(v129 + 88) = v204;
    char v206 = *(unsigned char *)(v129 + 96);
    *(unsigned char *)(v129 + 96) = v203;
    sub_1000096EC(v205, v206);
  }
  uint64_t v210 = (void **)(v129 + 104);
  uint64_t v211 = (void **)(v130 + 104);
  int v212 = v130[112];
  if (*(unsigned __int8 *)(v129 + 112) == 255)
  {
    if (v212 == 255)
    {
      id v218 = *v211;
      *(unsigned char *)(v129 + 112) = v130[112];
      *uint64_t v210 = v218;
    }
    else
    {
      uint64_t v216 = *v211;
      sub_100009098(v216, v130[112]);
      *(void *)(v129 + 104) = v216;
      *(unsigned char *)(v129 + 112) = v212;
    }
  }
  else if (v212 == 255)
  {
    sub_10000BE68(v129 + 104);
    char v217 = v130[112];
    *uint64_t v210 = *v211;
    *(unsigned char *)(v129 + 112) = v217;
  }
  else
  {
    uint64_t v213 = *v211;
    sub_100009098(v213, v130[112]);
    uint64_t v214 = *(void **)(v129 + 104);
    *(void *)(v129 + 104) = v213;
    char v215 = *(unsigned char *)(v129 + 112);
    *(unsigned char *)(v129 + 112) = v212;
    sub_1000096EC(v214, v215);
  }
  unsigned __int8 v219 = (void **)(v129 + 120);
  uint64_t v220 = (void **)(v130 + 120);
  int v221 = v130[128];
  if (*(unsigned __int8 *)(v129 + 128) == 255)
  {
    if (v221 == 255)
    {
      id v227 = *v220;
      *(unsigned char *)(v129 + 128) = v130[128];
      void *v219 = v227;
    }
    else
    {
      Swift::String v225 = *v220;
      sub_100009098(v225, v130[128]);
      *(void *)(v129 + 120) = v225;
      *(unsigned char *)(v129 + 128) = v221;
    }
  }
  else if (v221 == 255)
  {
    sub_10000BE68(v129 + 120);
    char v226 = v130[128];
    void *v219 = *v220;
    *(unsigned char *)(v129 + 128) = v226;
  }
  else
  {
    uint64_t v222 = *v220;
    sub_100009098(v222, v130[128]);
    Swift::String_optional v223 = *(void **)(v129 + 120);
    *(void *)(v129 + 120) = v222;
    char v224 = *(unsigned char *)(v129 + 128);
    *(unsigned char *)(v129 + 128) = v221;
    sub_1000096EC(v223, v224);
  }
  *(unsigned char *)(v129 + 129) = v130[129];
  uint64_t v228 = v21[11];
  uint64_t v229 = v129 + v228;
  v230 = &v130[v228];
  uint64_t v231 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v229, v230, v231);
  uint64_t v232 = v21[12];
  v233 = (void *)(v129 + v232);
  v234 = &v130[v232];
  void *v233 = *(void *)v234;
  v233[1] = *((void *)v234 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
  *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
  *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
  uint64_t v235 = v21[16];
  v236 = (void *)(v129 + v235);
  v237 = &v130[v235];
  void *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v238 = v6[14];
  v239 = *(void **)((char *)a1 + v238);
  v240 = *(void **)((char *)a2 + v238);
  *(void *)((char *)a1 + v238) = v240;
  id v241 = v240;

  uint64_t v242 = v6[15];
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  uint64_t v245 = sub_10008A050();
  uint64_t v246 = *(void *)(v245 - 8);
  v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  LODWORD(v239) = v247(v243, 1, v245);
  int v248 = v247(v244, 1, v245);
  if (v239)
  {
    if (!v248)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v248)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_148:
    uint64_t v249 = sub_10000903C(&qword_1000A1048);
    memcpy(v243, v244, *(void *)(*(void *)(v249 - 8) + 64));
    goto LABEL_149;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
LABEL_149:
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  uint64_t v250 = v6[17];
  uint64_t v251 = (char *)a1 + v250;
  v252 = (char *)a2 + v250;
  uint64_t v253 = *(void *)v252;
  v251[8] = v252[8];
  *(void *)uint64_t v251 = v253;
  uint64_t v254 = v6[18];
  uint64_t v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  uint64_t v257 = *(void *)v256;
  v255[8] = v256[8];
  *(void *)uint64_t v255 = v257;
  uint64_t v258 = v6[19];
  uint64_t v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  int v261 = v309((char *)a1 + v258, 1, v310);
  int v262 = v309(v260, 1, v310);
  if (v261)
  {
    if (!v262)
    {
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v259, v260, v310);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v259, 0, 1, v310);
      goto LABEL_155;
    }
    goto LABEL_154;
  }
  if (v262)
  {
    (*(void (**)(char *, uint64_t))(v314 + 8))(v259, v310);
LABEL_154:
    uint64_t v263 = sub_10000903C(&qword_1000A1038);
    memcpy(v259, v260, *(void *)(*(void *)(v263 - 8) + 64));
    goto LABEL_155;
  }
  (*(void (**)(char *, char *, uint64_t))(v314 + 24))(v259, v260, v310);
LABEL_155:
  uint64_t v264 = v6[20];
  uint64_t v265 = (char *)a1 + v264;
  v266 = (char *)a2 + v264;
  int v267 = v309((char *)a1 + v264, 1, v310);
  int v268 = v309(v266, 1, v310);
  if (v267)
  {
    if (!v268)
    {
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v265, v266, v310);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v265, 0, 1, v310);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v268)
  {
    (*(void (**)(char *, uint64_t))(v314 + 8))(v265, v310);
LABEL_160:
    uint64_t v269 = sub_10000903C(&qword_1000A1038);
    memcpy(v265, v266, *(void *)(*(void *)(v269 - 8) + 64));
    goto LABEL_161;
  }
  (*(void (**)(char *, char *, uint64_t))(v314 + 24))(v265, v266, v310);
LABEL_161:
  uint64_t v270 = v6[21];
  uint64_t v271 = (void *)((char *)a1 + v270);
  v272 = (char *)a2 + v270;
  uint64_t v273 = *(void *)((char *)a2 + v270);
  if (*(void *)((char *)a1 + v270))
  {
    if (v273)
    {
      void *v271 = v273;
      swift_retain();
      swift_release();
      v271[1] = *((void *)v272 + 1);
      swift_retain();
      swift_release();
      v271[2] = *((void *)v272 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10000BF18((uint64_t)a1 + v270);
      uint64_t v274 = *((void *)v272 + 2);
      *(_OWORD *)uint64_t v271 = *(_OWORD *)v272;
      v271[2] = v274;
    }
  }
  else if (v273)
  {
    void *v271 = v273;
    v271[1] = *((void *)v272 + 1);
    v271[2] = *((void *)v272 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v275 = *(_OWORD *)v272;
    v271[2] = *((void *)v272 + 2);
    *(_OWORD *)uint64_t v271 = v275;
  }
  uint64_t v276 = v6[22];
  uint64_t v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  uint64_t v279 = sub_10000903C(&qword_1000A1050);
  uint64_t v280 = *(void *)(v279 - 8);
  uint64_t v281 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v280 + 48);
  int v282 = v281(v277, 1, v279);
  int v283 = v281(v278, 1, v279);
  uint64_t v312 = a2;
  uint64_t v313 = a1;
  if (v282)
  {
    if (!v283)
    {
      int v284 = *(void (**)(char *, char *, uint64_t))(v314 + 16);
      v284(v277, v278, v310);
      v284(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v310);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  if (v283)
  {
    sub_100015614((uint64_t)v277, &qword_1000A1050);
LABEL_176:
    uint64_t v285 = sub_10000903C(&qword_1000A1058);
    memcpy(v277, v278, *(void *)(*(void *)(v285 - 8) + 64));
    goto LABEL_177;
  }
  v306 = *(void (**)(char *, char *, uint64_t))(v314 + 24);
  v306(v277, v278, v310);
  v306(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v310);
LABEL_177:
  uint64_t v286 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v287 = v286[5];
  uint64_t v288 = &v277[v287];
  v289 = &v278[v287];
  uint64_t v290 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 24))(v288, v289, v290);
  uint64_t v291 = v286[6];
  uint64_t v292 = &v277[v291];
  v293 = &v278[v291];
  uint64_t v294 = sub_10008A4B0();
  uint64_t v295 = *(void *)(v294 - 8);
  uint64_t v296 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v295 + 48);
  LODWORD(v288) = v296(v292, 1, v294);
  int v297 = v296(v293, 1, v294);
  if (!v288)
  {
    if (!v297)
    {
      (*(void (**)(char *, char *, uint64_t))(v295 + 24))(v292, v293, v294);
      goto LABEL_183;
    }
    (*(void (**)(char *, uint64_t))(v295 + 8))(v292, v294);
    goto LABEL_182;
  }
  if (v297)
  {
LABEL_182:
    uint64_t v298 = sub_10000903C(&qword_1000A1060);
    memcpy(v292, v293, *(void *)(*(void *)(v298 - 8) + 64));
    goto LABEL_183;
  }
  (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v293, v294);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
LABEL_183:
  uint64_t v299 = v286[7];
  uint64_t v300 = &v277[v299];
  uint64_t v301 = &v278[v299];
  *(void *)uint64_t v300 = *(void *)v301;
  *((void *)v300 + 1) = *((void *)v301 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v302 = v286[8];
  v303 = &v277[v302];
  uint64_t v304 = &v278[v302];
  *(void *)v303 = *(void *)v304;
  *((void *)v303 + 1) = *((void *)v304 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v313 + v311[5]) = *((unsigned char *)v312 + v311[5]);
  *((unsigned char *)v313 + v311[6]) = *((unsigned char *)v312 + v311[6]);
  *((unsigned char *)v313 + v311[7]) = *((unsigned char *)v312 + v311[7]);
  return v313;
}

uint64_t sub_10005D090(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v8 = v7[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v85 = v11;
  uint64_t v84 = v12;
  id v83 = *(unsigned int (**)(const void *, uint64_t))(v12 + 48);
  if (v83(v10, 1))
  {
    uint64_t v13 = sub_10000903C(&qword_1000A1038);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v85);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v85);
  }
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  uint64_t v14 = v7[12];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  uint64_t v17 = (int *)sub_10008A340();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48);
  uint64_t v82 = v18;
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1040);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v21;
    *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((unsigned char *)v15 + 64) = *((unsigned char *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((unsigned char *)v15 + 129) = *((unsigned char *)v16 + 129);
    uint64_t v22 = v17[11];
    char v80 = (char *)v15 + v22;
    long long v81 = a3;
    int v23 = (char *)v16 + v22;
    uint64_t v24 = sub_10008A300();
    int v25 = v23;
    a3 = v81;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v80, v25, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((unsigned char *)v15 + v17[13]) = *((unsigned char *)v16 + v17[13]);
    *((unsigned char *)v15 + v17[14]) = *((unsigned char *)v16 + v17[14]);
    *((unsigned char *)v15 + v17[15]) = *((unsigned char *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = v7[13];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  if (v19((_OWORD *)(a2 + v26), 1, v17))
  {
    uint64_t v29 = sub_10000903C(&qword_1000A1040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v28[1];
    _OWORD *v27 = *v28;
    v27[1] = v30;
    *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
    *(_OWORD *)((char *)v27 + 40) = *(_OWORD *)((char *)v28 + 40);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
    *(_OWORD *)((char *)v27 + 113) = *(_OWORD *)((char *)v28 + 113);
    *(_OWORD *)((char *)v27 + 104) = *(_OWORD *)((char *)v28 + 104);
    *(_OWORD *)((char *)v27 + 88) = *(_OWORD *)((char *)v28 + 88);
    *(_OWORD *)((char *)v27 + 72) = *(_OWORD *)((char *)v28 + 72);
    *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
    uint64_t v31 = v17[11];
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = a3;
    uint64_t v34 = (char *)v28 + v31;
    uint64_t v35 = sub_10008A300();
    unsigned __int8 v36 = v34;
    a3 = v33;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v36, v35);
    *(_OWORD *)((char *)v27 + v17[12]) = *(_OWORD *)((char *)v28 + v17[12]);
    *((unsigned char *)v27 + v17[13]) = *((unsigned char *)v28 + v17[13]);
    *((unsigned char *)v27 + v17[14]) = *((unsigned char *)v28 + v17[14]);
    *((unsigned char *)v27 + v17[15]) = *((unsigned char *)v28 + v17[15]);
    *(_OWORD *)((char *)v27 + v17[16]) = *(_OWORD *)((char *)v28 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v82 + 56))(v27, 0, 1, v17);
  }
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  uint64_t v37 = v7[15];
  uint64_t v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_10008A050();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10000903C(&qword_1000A1048);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v43 = v7[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = v7[18];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = v7[19];
  uint64_t v50 = (void *)(a1 + v49);
  int v51 = (const void *)(a2 + v49);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v83)(a2 + v49, 1, v85))
  {
    uint64_t v52 = sub_10000903C(&qword_1000A1038);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v84 + 32))(v50, v51, v85);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v50, 0, 1, v85);
  }
  uint64_t v53 = v7[20];
  uint64_t v54 = (void *)(a1 + v53);
  int v55 = (const void *)(a2 + v53);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v83)(a2 + v53, 1, v85))
  {
    uint64_t v56 = sub_10000903C(&qword_1000A1038);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v84 + 32))(v54, v55, v85);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v54, 0, 1, v85);
  }
  uint64_t v57 = v7[21];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  uint64_t v60 = v7[22];
  uint64_t v61 = (char *)(a1 + v60);
  uint64_t v62 = (char *)(a2 + v60);
  uint64_t v63 = sub_10000903C(&qword_1000A1050);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_10000903C(&qword_1000A1058);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    int v66 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
    v66(v61, v62, v85);
    v66(&v61[*(int *)(v63 + 36)], &v62[*(int *)(v63 + 36)], v85);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v67 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v68 = v67[5];
  uint64_t v69 = &v61[v68];
  uint64_t v70 = &v62[v68];
  uint64_t v71 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = v67[6];
  int v73 = &v61[v72];
  id v74 = &v62[v72];
  uint64_t v75 = sub_10008A4B0();
  uint64_t v76 = *(void *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    uint64_t v77 = sub_10000903C(&qword_1000A1060);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  *(_OWORD *)&v61[v67[7]] = *(_OWORD *)&v62[v67[7]];
  *(_OWORD *)&v61[v67[8]] = *(_OWORD *)&v62[v67[8]];
  uint64_t v78 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v78) = *(unsigned char *)(a2 + v78);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

void *sub_10005D9E8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v12 = v11[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10008A170();
  uint64_t v205 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v205 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  uint64_t v201 = a3;
  uint64_t v200 = v16;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v205 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v205 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10000903C(&qword_1000A1038);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v205 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[11];
  long long v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *long long v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v11[12];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)sub_10008A340();
  uint64_t v199 = *((void *)v28 - 1);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v199 + 48);
  int v30 = v29(v26, 1, v28);
  int v31 = v29((uint64_t)v27, 1, v28);
  uint64_t v204 = v15;
  if (v30)
  {
    if (!v31)
    {
      long long v32 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v32;
      *(unsigned char *)(v26 + 32) = v27[32];
      *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
      *(void *)(v26 + 56) = *((void *)v27 + 7);
      *(unsigned char *)(v26 + 64) = v27[64];
      *(_OWORD *)(v26 + 113) = *(_OWORD *)(v27 + 113);
      *(_OWORD *)(v26 + 104) = *(_OWORD *)(v27 + 104);
      *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(unsigned char *)(v26 + 129) = v27[129];
      uint64_t v33 = v28[11];
      uint64_t v34 = v26 + v33;
      uint64_t v35 = &v27[v33];
      uint64_t v36 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)&v27[v28[12]];
      *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
      *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
      *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
      *(_OWORD *)(v26 + v28[16]) = *(_OWORD *)&v27[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v199 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    sub_10000BEBC(v26);
LABEL_12:
    uint64_t v37 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v118 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v118;
  swift_bridgeObjectRelease();
  uint64_t v119 = v27 + 16;
  int v120 = *(unsigned __int8 *)(v26 + 32);
  if (v120 != 255)
  {
    int v121 = v27[32];
    if (v121 != 255)
    {
      uint64_t v122 = *(void *)(v26 + 16);
      uint64_t v123 = *(void *)(v26 + 24);
      *(_OWORD *)(v26 + 16) = *v119;
      *(unsigned char *)(v26 + 32) = v121;
      sub_1000096D4(v122, v123, v120);
      goto LABEL_69;
    }
    sub_10000BE14(v26 + 16);
  }
  *(_OWORD *)(v26 + 16) = *v119;
  *(unsigned char *)(v26 + 32) = v27[32];
LABEL_69:
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  int v131 = v27 + 56;
  int v132 = *(unsigned __int8 *)(v26 + 64);
  if (v132 != 255)
  {
    int v133 = v27[64];
    if (v133 != 255)
    {
      int v134 = *(void **)(v26 + 56);
      *(void *)(v26 + 56) = *v131;
      *(unsigned char *)(v26 + 64) = v133;
      sub_1000096EC(v134, v132);
      goto LABEL_79;
    }
    sub_10000BE68(v26 + 56);
  }
  *(void *)(v26 + 56) = *v131;
  *(unsigned char *)(v26 + 64) = v27[64];
LABEL_79:
  int v139 = v27 + 72;
  int v140 = *(unsigned __int8 *)(v26 + 80);
  if (v140 != 255)
  {
    int v141 = v27[80];
    if (v141 != 255)
    {
      uint64_t v142 = *(void **)(v26 + 72);
      *(void *)(v26 + 72) = *v139;
      *(unsigned char *)(v26 + 80) = v141;
      sub_1000096EC(v142, v140);
      goto LABEL_89;
    }
    sub_10000BE68(v26 + 72);
  }
  *(void *)(v26 + 72) = *v139;
  *(unsigned char *)(v26 + 80) = v27[80];
LABEL_89:
  long long v147 = v27 + 88;
  int v148 = *(unsigned __int8 *)(v26 + 96);
  if (v148 != 255)
  {
    int v149 = v27[96];
    if (v149 != 255)
    {
      id v150 = *(void **)(v26 + 88);
      *(void *)(v26 + 88) = *v147;
      *(unsigned char *)(v26 + 96) = v149;
      sub_1000096EC(v150, v148);
      goto LABEL_99;
    }
    sub_10000BE68(v26 + 88);
  }
  *(void *)(v26 + 88) = *v147;
  *(unsigned char *)(v26 + 96) = v27[96];
LABEL_99:
  id v155 = v27 + 104;
  int v156 = *(unsigned __int8 *)(v26 + 112);
  if (v156 != 255)
  {
    int v157 = v27[112];
    if (v157 != 255)
    {
      id v158 = *(void **)(v26 + 104);
      *(void *)(v26 + 104) = *v155;
      *(unsigned char *)(v26 + 112) = v157;
      sub_1000096EC(v158, v156);
      goto LABEL_109;
    }
    sub_10000BE68(v26 + 104);
  }
  *(void *)(v26 + 104) = *v155;
  *(unsigned char *)(v26 + 112) = v27[112];
LABEL_109:
  id v163 = v27 + 120;
  int v164 = *(unsigned __int8 *)(v26 + 128);
  if (v164 == 255)
  {
LABEL_118:
    *(void *)(v26 + 120) = *v163;
    *(unsigned char *)(v26 + 128) = v27[128];
    goto LABEL_119;
  }
  int v165 = v27[128];
  if (v165 == 255)
  {
    sub_10000BE68(v26 + 120);
    goto LABEL_118;
  }
  id v166 = *(void **)(v26 + 120);
  *(void *)(v26 + 120) = *v163;
  *(unsigned char *)(v26 + 128) = v165;
  sub_1000096EC(v166, v164);
LABEL_119:
  *(unsigned char *)(v26 + 129) = v27[129];
  uint64_t v171 = v28[11];
  uint64_t v172 = v26 + v171;
  int v173 = &v27[v171];
  uint64_t v174 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v174 - 8) + 40))(v172, v173, v174);
  uint64_t v175 = v28[12];
  uint64_t v176 = (void *)(v26 + v175);
  uint64_t v177 = &v27[v175];
  uint64_t v179 = *(void *)v177;
  uint64_t v178 = *((void *)v177 + 1);
  void *v176 = v179;
  v176[1] = v178;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
  *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
  *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
  uint64_t v180 = v28[16];
  char v181 = (void *)(v26 + v180);
  long long v182 = &v27[v180];
  uint64_t v184 = *(void *)v182;
  uint64_t v183 = *((void *)v182 + 1);
  *char v181 = v184;
  v181[1] = v183;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v38 = v11[13];
  uint64_t v39 = (uint64_t)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v29((uint64_t)a1 + v38, 1, v28);
  int v42 = v29((uint64_t)v40, 1, v28);
  if (v41)
  {
    if (!v42)
    {
      long long v43 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v43;
      *(unsigned char *)(v39 + 32) = v40[32];
      *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
      *(void *)(v39 + 56) = *((void *)v40 + 7);
      *(unsigned char *)(v39 + 64) = v40[64];
      *(_OWORD *)(v39 + 113) = *(_OWORD *)(v40 + 113);
      *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
      *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      *(unsigned char *)(v39 + 129) = v40[129];
      uint64_t v44 = v28[11];
      uint64_t v45 = v39 + v44;
      uint64_t v46 = &v40[v44];
      uint64_t v47 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      *(_OWORD *)(v39 + v28[12]) = *(_OWORD *)&v40[v28[12]];
      *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
      *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
      *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
      *(_OWORD *)(v39 + v28[16]) = *(_OWORD *)&v40[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v199 + 56))(v39, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    sub_10000BEBC(v39);
LABEL_18:
    uint64_t v48 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v124 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v124;
  swift_bridgeObjectRelease();
  uint64_t v125 = v40 + 16;
  int v126 = *(unsigned __int8 *)(v39 + 32);
  if (v126 != 255)
  {
    int v127 = v40[32];
    if (v127 != 255)
    {
      uint64_t v128 = *(void *)(v39 + 16);
      uint64_t v129 = *(void *)(v39 + 24);
      *(_OWORD *)(v39 + 16) = *v125;
      *(unsigned char *)(v39 + 32) = v127;
      sub_1000096D4(v128, v129, v126);
      goto LABEL_74;
    }
    sub_10000BE14(v39 + 16);
  }
  *(_OWORD *)(v39 + 16) = *v125;
  *(unsigned char *)(v39 + 32) = v40[32];
LABEL_74:
  *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
  int v135 = v40 + 56;
  int v136 = *(unsigned __int8 *)(v39 + 64);
  if (v136 != 255)
  {
    int v137 = v40[64];
    if (v137 != 255)
    {
      uint64_t v138 = *(void **)(v39 + 56);
      *(void *)(v39 + 56) = *v135;
      *(unsigned char *)(v39 + 64) = v137;
      sub_1000096EC(v138, v136);
      goto LABEL_84;
    }
    sub_10000BE68(v39 + 56);
  }
  *(void *)(v39 + 56) = *v135;
  *(unsigned char *)(v39 + 64) = v40[64];
LABEL_84:
  uint64_t v143 = v40 + 72;
  int v144 = *(unsigned __int8 *)(v39 + 80);
  if (v144 != 255)
  {
    int v145 = v40[80];
    if (v145 != 255)
    {
      unsigned __int8 v146 = *(void **)(v39 + 72);
      *(void *)(v39 + 72) = *v143;
      *(unsigned char *)(v39 + 80) = v145;
      sub_1000096EC(v146, v144);
      goto LABEL_94;
    }
    sub_10000BE68(v39 + 72);
  }
  *(void *)(v39 + 72) = *v143;
  *(unsigned char *)(v39 + 80) = v40[80];
LABEL_94:
  id v151 = v40 + 88;
  int v152 = *(unsigned __int8 *)(v39 + 96);
  if (v152 != 255)
  {
    int v153 = v40[96];
    if (v153 != 255)
    {
      id v154 = *(void **)(v39 + 88);
      *(void *)(v39 + 88) = *v151;
      *(unsigned char *)(v39 + 96) = v153;
      sub_1000096EC(v154, v152);
      goto LABEL_104;
    }
    sub_10000BE68(v39 + 88);
  }
  *(void *)(v39 + 88) = *v151;
  *(unsigned char *)(v39 + 96) = v40[96];
LABEL_104:
  id v159 = v40 + 104;
  int v160 = *(unsigned __int8 *)(v39 + 112);
  if (v160 != 255)
  {
    int v161 = v40[112];
    if (v161 != 255)
    {
      id v162 = *(void **)(v39 + 104);
      *(void *)(v39 + 104) = *v159;
      *(unsigned char *)(v39 + 112) = v161;
      sub_1000096EC(v162, v160);
      goto LABEL_114;
    }
    sub_10000BE68(v39 + 104);
  }
  *(void *)(v39 + 104) = *v159;
  *(unsigned char *)(v39 + 112) = v40[112];
LABEL_114:
  id v167 = v40 + 120;
  int v168 = *(unsigned __int8 *)(v39 + 128);
  if (v168 == 255)
  {
LABEL_121:
    *(void *)(v39 + 120) = *v167;
    *(unsigned char *)(v39 + 128) = v40[128];
    goto LABEL_122;
  }
  int v169 = v40[128];
  if (v169 == 255)
  {
    sub_10000BE68(v39 + 120);
    goto LABEL_121;
  }
  int v170 = *(void **)(v39 + 120);
  *(void *)(v39 + 120) = *v167;
  *(unsigned char *)(v39 + 128) = v169;
  sub_1000096EC(v170, v168);
LABEL_122:
  *(unsigned char *)(v39 + 129) = v40[129];
  uint64_t v185 = v28[11];
  uint64_t v186 = v39 + v185;
  uint64_t v187 = &v40[v185];
  uint64_t v188 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v188 - 8) + 40))(v186, v187, v188);
  uint64_t v189 = v28[12];
  char v190 = (void *)(v39 + v189);
  uint64_t v191 = &v40[v189];
  uint64_t v193 = *(void *)v191;
  uint64_t v192 = *((void *)v191 + 1);
  *char v190 = v193;
  v190[1] = v192;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
  *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
  *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
  uint64_t v194 = v28[16];
  uint64_t v195 = (void *)(v39 + v194);
  uint64_t v196 = &v40[v194];
  uint64_t v198 = *(void *)v196;
  uint64_t v197 = *((void *)v196 + 1);
  void *v195 = v198;
  v195[1] = v197;
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v49 = v11[14];
  uint64_t v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

  uint64_t v51 = v11[15];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_10008A050();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    uint64_t v59 = v204;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v59 = v204;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_24:
    uint64_t v60 = sub_10000903C(&qword_1000A1048);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_25:
  *((unsigned char *)a1 + v11[16]) = *((unsigned char *)a2 + v11[16]);
  uint64_t v61 = v11[17];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = v11[18];
  uint64_t v65 = (char *)a1 + v64;
  int v66 = (char *)a2 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = v11[19];
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  int v70 = v200((char *)a1 + v67, 1, v59);
  int v71 = v200(v69, 1, v59);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v68, v69, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v205 + 56))(v68, 0, 1, v59);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v205 + 8))(v68, v59);
LABEL_30:
    uint64_t v72 = sub_10000903C(&qword_1000A1038);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v205 + 40))(v68, v69, v59);
LABEL_31:
  uint64_t v73 = v11[20];
  id v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  int v76 = v200((char *)a1 + v73, 1, v59);
  int v77 = v200(v75, 1, v59);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v74, v75, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v205 + 56))(v74, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v205 + 8))(v74, v59);
LABEL_36:
    uint64_t v78 = sub_10000903C(&qword_1000A1038);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v205 + 40))(v74, v75, v59);
LABEL_37:
  uint64_t v79 = v11[21];
  char v80 = (void *)((char *)a1 + v79);
  long long v81 = (void *)((char *)a2 + v79);
  if (*(void *)((char *)a1 + v79))
  {
    if (*v81)
    {
      *char v80 = *v81;
      swift_release();
      v80[1] = v81[1];
      swift_release();
      v80[2] = v81[2];
      swift_release();
      goto LABEL_42;
    }
    sub_10000BF18((uint64_t)v80);
  }
  *(_OWORD *)char v80 = *(_OWORD *)v81;
  v80[2] = v81[2];
LABEL_42:
  uint64_t v82 = v11[22];
  id v83 = (char *)a1 + v82;
  uint64_t v84 = (char *)a2 + v82;
  uint64_t v85 = sub_10000903C(&qword_1000A1050);
  uint64_t v86 = *(void *)(v85 - 8);
  char v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  uint64_t v202 = a2;
  int v203 = a1;
  if (v88)
  {
    if (!v89)
    {
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v205 + 32);
      v90(v83, v84, v59);
      v90(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v89)
  {
    sub_100015614((uint64_t)v83, &qword_1000A1050);
LABEL_47:
    uint64_t v91 = sub_10000903C(&qword_1000A1058);
    memcpy(v83, v84, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v130 = *(void (**)(char *, char *, uint64_t))(v205 + 40);
  v130(v83, v84, v59);
  v130(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
LABEL_48:
  uint64_t v92 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v93 = v92[5];
  uint64_t v94 = &v83[v93];
  uint64_t v95 = &v84[v93];
  uint64_t v96 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  uint64_t v97 = v92[6];
  char v98 = &v83[v97];
  uint64_t v99 = &v84[v97];
  uint64_t v100 = sub_10008A4B0();
  uint64_t v101 = *(void *)(v100 - 8);
  int v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  int v103 = v102(v98, 1, v100);
  int v104 = v102(v99, 1, v100);
  if (!v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 40))(v98, v99, v100);
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v100);
    goto LABEL_53;
  }
  if (v104)
  {
LABEL_53:
    uint64_t v105 = sub_10000903C(&qword_1000A1060);
    memcpy(v98, v99, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v98, v99, v100);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
LABEL_54:
  uint64_t v106 = v92[7];
  char v107 = &v83[v106];
  id v108 = &v84[v106];
  uint64_t v110 = *(void *)v108;
  uint64_t v109 = *((void *)v108 + 1);
  *(void *)char v107 = v110;
  *((void *)v107 + 1) = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v92[8];
  uint64_t v112 = &v83[v111];
  uint64_t v113 = &v84[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)uint64_t v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  uint64_t v116 = v201[6];
  *((unsigned char *)v203 + v201[5]) = *((unsigned char *)v202 + v201[5]);
  *((unsigned char *)v203 + v116) = *((unsigned char *)v202 + v116);
  *((unsigned char *)v203 + v201[7]) = *((unsigned char *)v202 + v201[7]);
  return v203;
}

uint64_t sub_10005EC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005EC1C);
}

uint64_t sub_10005EC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10005ECEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005ED00);
}

uint64_t sub_10005ED00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for EpisodeCaptionView()
{
  uint64_t result = qword_1000A22C0;
  if (!qword_1000A22C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10005EE08()
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10005EEA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005EEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v43 = a1;
  uint64_t v3 = sub_10008AB50();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  __chkstk_darwin(v3);
  uint64_t v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10008A840();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A2300);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A2308);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000903C(&qword_1000A2310);
  __chkstk_darwin(v16);
  int v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000903C(&qword_1000A2318);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v38 = v19;
  uint64_t v39 = v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned char *v11 = sub_10008ABA0();
  uint64_t v23 = sub_10000903C(&qword_1000A2320);
  sub_10005F33C(v2, (uint64_t)&v11[*(int *)(v23 + 44)]);
  sub_10008A820();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  uint64_t v26 = sub_10000903C(&qword_1000A2328);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v25 + *(int *)(v26 + 28), v8, v5);
  *uint64_t v25 = KeyPath;
  sub_1000155B0((uint64_t)v11, (uint64_t)v15, &qword_1000A2300);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100015614((uint64_t)v11, &qword_1000A2300);
  uint64_t v27 = swift_getKeyPath();
  sub_1000155B0((uint64_t)v15, (uint64_t)v18, &qword_1000A2308);
  uint64_t v28 = &v18[*(int *)(v16 + 36)];
  *(void *)uint64_t v28 = v27;
  *((void *)v28 + 1) = 1;
  v28[16] = 0;
  sub_100015614((uint64_t)v15, &qword_1000A2308);
  uint64_t v29 = v40;
  sub_10008AB40();
  unint64_t v30 = sub_1000628F4();
  sub_10008AF20();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v42);
  sub_100015614((uint64_t)v18, &qword_1000A2310);
  id v31 = sub_1000605FC();
  uint64_t v33 = v32;
  LOBYTE(KeyPath) = v34 & 1;
  uint64_t v44 = v16;
  unint64_t v45 = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v38;
  sub_10008AED0();
  sub_10001546C((uint64_t)v31, v33, KeyPath);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v22, v35);
}

uint64_t sub_10005F33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v3 = sub_10000903C(&qword_1000A2358);
  __chkstk_darwin(v3 - 8);
  uint64_t v100 = &v84[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v84[-v6];
  uint64_t v8 = type metadata accessor for EpisodeCaptionView();
  if (*(unsigned char *)(a1 + *(int *)(v8 + 24)) == 1)
  {
    sub_10005F9E8((uint64_t)v7);
    uint64_t v9 = sub_10000903C(&qword_1000A2360);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
  }
  else
  {
    uint64_t v10 = sub_10000903C(&qword_1000A2360);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  }
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  int v90 = *(unsigned __int8 *)(a1 + *(int *)(v8 + 20));
  uint64_t v99 = v7;
  uint64_t v96 = v8;
  uint64_t v97 = a1;
  if (v90 == 1)
  {
    uint64_t v105 = v12;
    uint64_t v106 = v11;
    sub_100031338();
    uint64_t v13 = sub_10008B560();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = v12;
    uint64_t v14 = v11;
  }
  uint64_t v105 = v13;
  uint64_t v106 = v14;
  sub_100031338();
  uint64_t v15 = sub_10008ADE0();
  uint64_t v94 = v16;
  LODWORD(v93) = v17 & 1;
  uint64_t v91 = v12;
  uint64_t v105 = v12;
  uint64_t v106 = v11;
  swift_bridgeObjectRetain();
  uint64_t v103 = sub_10008B390();
  uint64_t v104 = v18;
  uint64_t v101 = 44;
  unint64_t v102 = 0xE100000000000000;
  uint64_t v19 = sub_10008B570();
  uint64_t v21 = v20;
  uint64_t v95 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v105 = v19;
  uint64_t v106 = v21;
  uint64_t v22 = sub_10008ADE0();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  uint64_t v27 = v94;
  char v28 = v93;
  uint64_t v87 = sub_10008AD30();
  uint64_t v86 = v29;
  uint64_t v88 = v30;
  int v85 = v31;
  int v32 = v31 & 1;
  sub_10001546C(v22, v24, v26);
  swift_bridgeObjectRelease();
  sub_10001546C(v15, v27, v28);
  swift_bridgeObjectRelease();
  uint64_t v33 = v97;
  int v89 = *(unsigned __int8 *)(v97 + *(int *)(v96 + 28));
  uint64_t v34 = v87;
  uint64_t v35 = v86;
  if (v89 == 1)
  {
    uint64_t v36 = sub_10008AD10();
    uint64_t v93 = v37;
    uint64_t v94 = v36;
    uint64_t v92 = v38;
    int v32 = v39 & 1;
  }
  else
  {
    sub_100031774(v87, v86, v32);
    uint64_t v40 = v88;
    swift_bridgeObjectRetain();
    uint64_t v93 = v40;
    uint64_t v94 = v34;
    uint64_t v92 = v35;
  }
  sub_10001546C(v34, v35, v85 & 1);
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v33 + 32);
  uint64_t v41 = *(void *)(v33 + 40);
  uint64_t v43 = v91;
  LODWORD(v96) = v32;
  if (v90)
  {
    uint64_t v105 = v42;
    uint64_t v106 = v41;
    uint64_t v42 = sub_10008B560();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v45 = swift_bridgeObjectRetain();
  }
  uint64_t v46 = v95;
  uint64_t v105 = v42;
  uint64_t v106 = v45;
  uint64_t v47 = sub_10008ADE0();
  uint64_t v49 = v48;
  LODWORD(v97) = v50 & 1;
  uint64_t v105 = v43;
  uint64_t v106 = v46;
  swift_bridgeObjectRetain();
  uint64_t v103 = sub_10008B390();
  uint64_t v104 = v51;
  uint64_t v101 = 44;
  unint64_t v102 = 0xE100000000000000;
  uint64_t v52 = sub_10008B570();
  uint64_t v54 = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v105 = v52;
  uint64_t v106 = v54;
  uint64_t v55 = sub_10008ADE0();
  uint64_t v57 = v56;
  char v59 = v58 & 1;
  LOBYTE(v54) = v97;
  uint64_t v91 = sub_10008AD30();
  uint64_t v61 = v60;
  uint64_t v95 = v62;
  int v90 = v63;
  char v64 = v63 & 1;
  sub_10001546C(v55, v57, v59);
  swift_bridgeObjectRelease();
  sub_10001546C(v47, v49, v54);
  swift_bridgeObjectRelease();
  uint64_t v65 = v91;
  if (v89)
  {
    uint64_t v97 = sub_10008AD10();
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    char v64 = v70 & 1;
  }
  else
  {
    sub_100031774(v91, v61, v64);
    uint64_t v71 = v95;
    swift_bridgeObjectRetain();
    uint64_t v97 = v65;
    uint64_t v67 = v61;
    uint64_t v69 = v71;
  }
  sub_10001546C(v65, v61, v90 & 1);
  swift_bridgeObjectRelease();
  uint64_t v73 = (uint64_t)v99;
  uint64_t v72 = v100;
  sub_1000155B0((uint64_t)v99, (uint64_t)v100, &qword_1000A2358);
  char v74 = v96;
  LOBYTE(v105) = v96;
  uint64_t v75 = v98;
  sub_1000155B0((uint64_t)v72, v98, &qword_1000A2358);
  uint64_t v76 = sub_10000903C(&qword_1000A2368);
  uint64_t v77 = v75 + *(int *)(v76 + 48);
  uint64_t v78 = v93;
  uint64_t v79 = v94;
  uint64_t v80 = v92;
  *(void *)uint64_t v77 = v94;
  *(void *)(v77 + 8) = v80;
  *(unsigned char *)(v77 + 16) = v74;
  *(void *)(v77 + 24) = v78;
  uint64_t v81 = v75 + *(int *)(v76 + 64);
  uint64_t v82 = v97;
  *(void *)uint64_t v81 = v97;
  *(void *)(v81 + 8) = v67;
  *(unsigned char *)(v81 + 16) = v64;
  *(void *)(v81 + 24) = v69;
  sub_100031774(v79, v80, v74);
  swift_bridgeObjectRetain();
  sub_100031774(v82, v67, v64);
  swift_bridgeObjectRetain();
  sub_100015614(v73, &qword_1000A2358);
  sub_10001546C(v82, v67, v64);
  swift_bridgeObjectRelease();
  sub_10001546C(v79, v80, v105);
  swift_bridgeObjectRelease();
  return sub_100015614((uint64_t)v72, &qword_1000A2358);
}

uint64_t sub_10005F9E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v113 = a1;
  uint64_t v115 = sub_10000903C(&qword_1000A2370);
  __chkstk_darwin(v115);
  uint64_t v112 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_10000903C(&qword_1000A2378);
  __chkstk_darwin(v107);
  unint64_t v102 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_10000903C(&qword_1000A2380);
  __chkstk_darwin(v111);
  uint64_t v105 = (uint64_t)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A1058);
  __chkstk_darwin(v5 - 8);
  uint64_t v110 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000903C(&qword_1000A1038);
  __chkstk_darwin(v7 - 8);
  uint64_t v100 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_10008A170();
  uint64_t v101 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v99 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10000903C(&qword_1000A2388);
  __chkstk_darwin(v106);
  uint64_t v103 = (uint64_t)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10008A740();
  uint64_t v108 = *(void *)(v11 - 8);
  uint64_t v109 = (char *)v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10000903C(&qword_1000A2390);
  __chkstk_darwin(v114);
  uint64_t v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000903C(&qword_1000A1060);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10008A4B0();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t)&v1[*(int *)(type metadata accessor for UpNextEntry.Episode(0) + 88)];
  uint64_t v24 = type metadata accessor for WidgetPredictedPlayState();
  sub_1000155B0(v23 + *(int *)(v24 + 24), (uint64_t)v18, &qword_1000A1060);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
  {
    uint64_t v29 = (uint64_t)v110;
    uint64_t v96 = v15;
    uint64_t v97 = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    uint64_t v31 = v108;
    uint64_t v30 = v109;
    (*(void (**)(char *, void, char *))(v108 + 104))(v13, enum case for PlaybackButton.State.playing(_:), v109);
    char v32 = sub_10008A730();
    (*(void (**)(char *, char *))(v31 + 8))(v13, v30);
    if ((v32 & 1) == 0)
    {
      __chkstk_darwin(*((void *)v1 + 2));
      uint64_t v92 = v22;
      unint64_t v93 = (unint64_t)v1;
      uint64_t v71 = (uint64_t)v102;
      sub_10006179C(v72, v73, (void (*)(uint64_t *__return_ptr, uint64_t))sub_100062E3C, (uint64_t)&v90);
      sub_1000155B0(v71, v105, &qword_1000A2378);
      swift_storeEnumTagMultiPayload();
      sub_100062AD4();
      sub_100062D9C();
      uint64_t v74 = (uint64_t)v96;
      sub_10008AAE0();
      sub_100015614(v71, &qword_1000A2378);
      uint64_t v39 = (uint64_t)v112;
      uint64_t v75 = v22;
LABEL_17:
      sub_1000155B0(v74, v39, &qword_1000A2390);
      swift_storeEnumTagMultiPayload();
      sub_100062A58();
      sub_10008AAE0();
      sub_100015614(v74, &qword_1000A2390);
      return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v75, v19);
    }
    uint64_t v109 = v22;
    uint64_t v33 = v23;
    uint64_t v34 = v29;
    sub_1000155B0(v33, v29, &qword_1000A1058);
    uint64_t v35 = sub_10000903C(&qword_1000A1050);
    int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v29, 1, v35);
    uint64_t v95 = v19;
    if (v36 == 1)
    {
      sub_100015614(v29, &qword_1000A1058);
      uint64_t v37 = v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v100, 1, 1, v104);
      uint64_t v38 = (uint64_t)v37;
      uint64_t v39 = (uint64_t)v112;
      uint64_t v40 = v105;
    }
    else
    {
      uint64_t v79 = v29 + *(int *)(v35 + 36);
      uint64_t v80 = v101;
      uint64_t v38 = (uint64_t)v100;
      uint64_t v81 = v104;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v100, v79, v104);
      sub_100015614(v34, &qword_1000A1050);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v38, 0, 1, v81);
      int v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v38, 1, v81);
      uint64_t v39 = (uint64_t)v112;
      uint64_t v40 = v105;
      if (v82 != 1)
      {
        int v85 = v99;
        (*(void (**)(void))(v80 + 32))();
        uint64_t v110 = (char *)&v94;
        __chkstk_darwin(*((void *)v1 + 2));
        uint64_t v75 = v109;
        int v90 = v85;
        unint64_t v91 = (unint64_t)v109;
        uint64_t v92 = v1;
        uint64_t v86 = v103;
        sub_100061504(v87, v88, (void (*)(uint64_t))sub_100062E44, (uint64_t)(&v94 - 6), v103);
        uint64_t v84 = v86;
        uint64_t v89 = sub_10000903C(&qword_1000A23B0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v86, 0, 1, v89);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v85, v104);
        goto LABEL_16;
      }
    }
    sub_100015614(v38, &qword_1000A1038);
    uint64_t v83 = sub_10000903C(&qword_1000A23B0);
    uint64_t v84 = v103;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v103, 1, 1, v83);
    uint64_t v75 = v109;
LABEL_16:
    sub_1000155B0(v84, v40, &qword_1000A2388);
    swift_storeEnumTagMultiPayload();
    sub_100062AD4();
    sub_100062D9C();
    uint64_t v74 = (uint64_t)v96;
    sub_10008AAE0();
    sub_100015614(v84, &qword_1000A2388);
    uint64_t v19 = v95;
    goto LABEL_17;
  }
  sub_100015614((uint64_t)v18, &qword_1000A1060);
  uint64_t v26 = *((void *)v1 + 2);
  uint64_t v25 = *((void *)v1 + 3);
  uint64_t v27 = type metadata accessor for EpisodeCaptionView();
  BOOL v28 = v1[*(int *)(v27 + 20)] == 1;
  uint64_t v98 = v1;
  uint64_t v111 = v27;
  if (v28)
  {
    uint64_t v120 = v26;
    uint64_t v121 = v25;
    sub_100031338();
    uint64_t v41 = sub_10008B560();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = v26;
    uint64_t v42 = v25;
  }
  uint64_t v120 = v41;
  uint64_t v121 = v42;
  unint64_t v43 = sub_100031338();
  uint64_t v44 = sub_10008ADE0();
  uint64_t v109 = v46;
  uint64_t v110 = v45;
  LODWORD(v108) = v47 & 1;
  uint64_t v120 = v26;
  uint64_t v121 = v25;
  swift_bridgeObjectRetain();
  uint64_t v118 = sub_10008B390();
  uint64_t v119 = v48;
  uint64_t v116 = 44;
  unint64_t v117 = 0xE100000000000000;
  uint64_t v92 = (char *)v43;
  unint64_t v93 = v43;
  int v90 = (char *)&type metadata for String;
  unint64_t v91 = v43;
  uint64_t v49 = sub_10008B570();
  uint64_t v51 = v50;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v120 = v49;
  uint64_t v121 = v51;
  uint64_t v52 = sub_10008ADE0();
  uint64_t v54 = v53;
  char v56 = v55 & 1;
  uint64_t v57 = (uint64_t)v110;
  char v58 = v108;
  uint64_t v106 = sub_10008AD30();
  uint64_t v107 = v59;
  uint64_t v61 = v60;
  LODWORD(v105) = v62;
  char v63 = v62 & 1;
  sub_10001546C(v52, v54, v56);
  swift_bridgeObjectRelease();
  sub_10001546C(v44, v57, v58);
  swift_bridgeObjectRelease();
  uint64_t v64 = v106;
  if (v98[*(int *)(v111 + 28)] == 1)
  {
    uint64_t v65 = sub_10008AD10();
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    char v63 = v70 & 1;
  }
  else
  {
    sub_100031774(v106, v61, v63);
    uint64_t v76 = v107;
    swift_bridgeObjectRetain();
    uint64_t v65 = v64;
    uint64_t v67 = v61;
    uint64_t v69 = v76;
  }
  uint64_t v77 = v112;
  sub_10001546C(v64, v61, v105 & 1);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v77 = v65;
  *((void *)v77 + 1) = v67;
  v77[16] = v63;
  *((void *)v77 + 3) = v69;
  swift_storeEnumTagMultiPayload();
  sub_100062A58();
  return sub_10008AAE0();
}

id sub_1000605FC()
{
  uint64_t v1 = sub_10008A740();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v38 - v6;
  uint64_t v8 = sub_10000903C(&qword_1000A1060);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10008A4B0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for EpisodeCaptionView() + 24)) != 1) {
    goto LABEL_4;
  }
  uint64_t v15 = v0 + *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 88);
  uint64_t v42 = type metadata accessor for WidgetPredictedPlayState();
  sub_1000155B0(v15 + *(int *)(v42 + 24), (uint64_t)v10, &qword_1000A1060);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100015614((uint64_t)v10, &qword_1000A1060);
LABEL_4:
    uint64_t v16 = *(void *)(v0 + 24);
    uint64_t v43 = *(void *)(v0 + 16);
    uint64_t v44 = v16;
    sub_100031338();
    swift_bridgeObjectRetain();
    return (id)sub_10008ADE0();
  }
  uint64_t v40 = v15;
  uint64_t v41 = v2;
  uint64_t v39 = v12;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_10000903C(&qword_1000A1D50);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10008DB20;
  uint64_t v19 = *(void *)(v0 + 24);
  *(void *)(v18 + 32) = *(void *)(v0 + 16);
  *(void *)(v18 + 40) = v19;
  swift_bridgeObjectRetain();
  sub_10008A4A0();
  id result = (id)AXDurationStringForDurationWithSeconds();
  if (result)
  {
    uint64_t v21 = result;
    uint64_t v22 = sub_10008B360();
    uint64_t v24 = v23;

    *(void *)(v18 + 48) = v22;
    *(void *)(v18 + 56) = v24;
    uint64_t v43 = v18;
    sub_10000903C(&qword_1000A1D40);
    sub_100015428(&qword_1000A1F10, &qword_1000A1D40);
    uint64_t v25 = sub_10008B2E0();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v43 = v25;
    uint64_t v44 = v27;
    sub_100031338();
    uint64_t v28 = sub_10008ADE0();
    v38[0] = v29;
    v38[1] = v30;
    char v32 = v31 & 1;
    uint64_t v33 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v7, v40 + *(int *)(v42 + 20), v1);
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v4, enum case for PlaybackButton.State.unplayed(_:), v1);
    sub_100063084(&qword_1000A2350, (void (*)(uint64_t))&type metadata accessor for PlaybackButton.State);
    LOBYTE(v25) = sub_10008B310();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v33 + 8);
    v34(v4, v1);
    v34(v7, v1);
    uint64_t v35 = v28;
    uint64_t v36 = v28;
    uint64_t v37 = v38[0];
    uint64_t v17 = sub_1000613B8((v25 & 1) == 0, v36, v38[0], v32);
    sub_10001546C(v35, v37, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v11);
    return (id)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_100060AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v99 = a3;
  uint64_t v101 = a1;
  uint64_t v106 = a4;
  uint64_t v104 = sub_10000903C(&qword_1000A2328);
  __chkstk_darwin(v104);
  uint64_t v105 = (uint64_t *)((char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10008AA10();
  __chkstk_darwin(v6 - 8);
  uint64_t v103 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v109 = sub_10008A840();
  uint64_t v107 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v108 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10008AD60();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10008AD80();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10008ADB0();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = sub_10008A170();
  __n128 v20 = __chkstk_darwin(v19);
  (*(void (**)(char *, uint64_t, __n128))(v22 + 16))((char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v101, v20);
  sub_10008A470();
  char v23 = sub_10008A460();
  uint64_t v102 = a2;
  if (v23)
  {
    sub_10008AD90();
  }
  else
  {
    sub_10008A470();
    sub_10008A450();
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for Text.DateStyle.UnitsConfiguration.Style.short(_:), v10);
    sub_10008AD70();
    sub_10008ADA0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  uint64_t v24 = sub_10008ADC0();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  uint64_t v29 = v108;
  sub_10008A830();
  uint64_t v30 = sub_10008AD20();
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  sub_10001546C(v24, v26, v28);
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v107 + 8);
  uint64_t v101 = v107 + 8;
  uint64_t v100 = v35;
  v35(v29, v109);
  sub_10008AA00();
  v118._countAndFlagsBits = 0;
  v118._object = (void *)0xE000000000000000;
  sub_10008A9F0(v118);
  sub_10008A9D0();
  v119._countAndFlagsBits = 0x7466656C20;
  v119._object = (void *)0xE500000000000000;
  sub_10008A9F0(v119);
  sub_10008AA30();
  uint64_t v36 = sub_10008ADD0();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  int v42 = v41 & 1;
  sub_10001546C(v30, v32, v34);
  swift_bridgeObjectRelease();
  int v43 = *(unsigned __int8 *)(v99 + *(int *)(type metadata accessor for EpisodeCaptionView() + 28));
  if (v43 == 1)
  {
    uint64_t v44 = sub_10008AD10();
    char v45 = v42;
    uint64_t v46 = v44;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    int v52 = v51 & 1;
    sub_10001546C(v36, v38, v45);
    swift_bridgeObjectRelease();
    uint64_t v99 = v46;
    uint64_t v98 = v48;
    int v97 = v52;
    uint64_t v40 = v50;
  }
  else
  {
    int v97 = v42;
    uint64_t v98 = v38;
    uint64_t v99 = v36;
  }
  int v96 = sub_10008AC10();
  sub_10008A630();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v95 = sub_10008B140();
  uint64_t v94 = v61;
  sub_10008A430();
  *(void *)&long long v110 = sub_1000184D8();
  *((void *)&v110 + 1) = v62;
  sub_100031338();
  uint64_t v63 = sub_10008ADE0();
  uint64_t v65 = v64;
  char v67 = v66 & 1;
  sub_10008AA00();
  v120._countAndFlagsBits = 0;
  v120._object = (void *)0xE000000000000000;
  sub_10008A9F0(v120);
  sub_10008A9D0();
  v121._countAndFlagsBits = 0x7466656C20;
  v121._object = (void *)0xE500000000000000;
  sub_10008A9F0(v121);
  sub_10008AA30();
  uint64_t v68 = sub_10008ADD0();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  char v74 = v73 & 1;
  sub_10001546C(v63, v65, v67);
  swift_bridgeObjectRelease();
  if (v43)
  {
    uint64_t v75 = sub_10008AD10();
    uint64_t v77 = v76;
    uint64_t v79 = v78;
    uint64_t v80 = v40;
    char v82 = v81 & 1;
    sub_10001546C(v68, v70, v74);
    swift_bridgeObjectRelease();
    uint64_t v68 = v75;
    uint64_t v70 = v77;
    char v74 = v82;
    uint64_t v40 = v80;
    uint64_t v72 = v79;
  }
  *(void *)&long long v110 = v99;
  *((void *)&v110 + 1) = v98;
  LOBYTE(v111) = v97;
  *((void *)&v111 + 1) = v40;
  LOBYTE(v112) = v96;
  *((void *)&v112 + 1) = v54;
  *(void *)&long long v113 = v56;
  *((void *)&v113 + 1) = v58;
  *(void *)&long long v114 = v60;
  BYTE8(v114) = 0;
  *(void *)&long long v115 = v95;
  *((void *)&v115 + 1) = v94;
  *(void *)&long long v116 = v68;
  *((void *)&v116 + 1) = v70;
  LOBYTE(v117) = v74;
  *((void *)&v117 + 1) = v72;
  uint64_t v83 = v108;
  sub_10008A830();
  uint64_t KeyPath = swift_getKeyPath();
  int v85 = v105;
  uint64_t v86 = v109;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))((char *)v105 + *(int *)(v104 + 28), v83, v109);
  *int v85 = KeyPath;
  uint64_t v87 = sub_10000903C(&qword_1000A23C0);
  unint64_t v88 = v106;
  sub_1000155B0((uint64_t)v85, (uint64_t)v106 + *(int *)(v87 + 36), &qword_1000A2328);
  long long v89 = v115;
  v88[4] = v114;
  v88[5] = v89;
  long long v90 = v117;
  v88[6] = v116;
  v88[7] = v90;
  long long v91 = v111;
  _OWORD *v88 = v110;
  v88[1] = v91;
  long long v92 = v113;
  v88[2] = v112;
  v88[3] = v92;
  sub_100062EB8((uint64_t)&v110);
  sub_100015614((uint64_t)v85, &qword_1000A2328);
  v100(v83, v86);
  return sub_100062F2C((uint64_t)&v110);
}

uint64_t sub_1000613B8(char a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7 = a4 & 1;
  uint64_t v8 = sub_10008AA10();
  __chkstk_darwin(v8 - 8);
  if (a1)
  {
    sub_10008AA00();
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    sub_10008A9F0(v10);
    sub_10008A9D0();
    v11._countAndFlagsBits = 0x7466656C20;
    v11._object = (void *)0xE500000000000000;
    sub_10008A9F0(v11);
    sub_10008AA30();
    return sub_10008ADD0();
  }
  else
  {
    sub_100031774(a2, a3, v7);
    swift_bridgeObjectRetain();
  }
  return a2;
}

uint64_t sub_100061504@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v24[1] = a5;
  uint64_t v9 = sub_10000903C(&qword_1000A2400);
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A2420);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000903C(&qword_1000A23C0);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v19 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v19)
  {
    *(void *)Swift::String v11 = sub_10008A9C0();
    *((void *)v11 + 1) = 0;
    v11[16] = 0;
    uint64_t v20 = sub_10000903C(&qword_1000A2428);
    sub_1000621D0(v24[0], a1, a2, a3, a4, (uint64_t *)&v11[*(int *)(v20 + 44)]);
    uint64_t v21 = &qword_1000A2400;
    sub_1000155B0((uint64_t)v11, (uint64_t)v14, &qword_1000A2400);
    swift_storeEnumTagMultiPayload();
    sub_100062BE8();
    sub_100015428(&qword_1000A23F8, &qword_1000A2400);
    sub_10008AAE0();
    uint64_t v22 = (uint64_t)v11;
  }
  else
  {
    ((void (*)(__n128))a3)(v16);
    uint64_t v21 = &qword_1000A23C0;
    sub_1000155B0((uint64_t)v18, (uint64_t)v14, &qword_1000A23C0);
    swift_storeEnumTagMultiPayload();
    sub_100062BE8();
    sub_100015428(&qword_1000A23F8, &qword_1000A2400);
    sub_10008AAE0();
    uint64_t v22 = (uint64_t)v18;
  }
  return sub_100015614(v22, v21);
}

uint64_t sub_10006179C(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4)
{
  uint64_t v9 = sub_10000903C(&qword_1000A2418);
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A2440);
  __n128 v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    *(void *)Swift::String v11 = sub_10008A9C0();
    *((void *)v11 + 1) = 0;
    v11[16] = 0;
    uint64_t v17 = sub_10000903C(&qword_1000A2448);
    sub_100061CAC(v4, a1, a2, a3, a4, (uint64_t *)&v11[*(int *)(v17 + 44)]);
    sub_1000155B0((uint64_t)v11, (uint64_t)v15, &qword_1000A2418);
    swift_storeEnumTagMultiPayload();
    sub_100015428(&qword_1000A2410, &qword_1000A2418);
    sub_10008AAE0();
    return sub_100015614((uint64_t)v11, &qword_1000A2418);
  }
  else
  {
    ((void (*)(long long *__return_ptr, __n128))a3)(&v21, v13);
    char v19 = v22;
    uint64_t v20 = v23;
    *(_OWORD *)uint64_t v15 = v21;
    v15[16] = v19;
    *((void *)v15 + 3) = v20;
    swift_storeEnumTagMultiPayload();
    sub_100015428(&qword_1000A2410, &qword_1000A2418);
    return sub_10008AAE0();
  }
}

uint64_t sub_1000619E4@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v3 = sub_10008A740();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v37 = sub_100017F20();
  uint64_t v38 = v10;
  sub_100031338();
  uint64_t v11 = sub_10008ADE0();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v16 = a1 + *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 88);
  uint64_t v17 = type metadata accessor for WidgetPredictedPlayState();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v16 + *(int *)(v17 + 20), v3);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for PlaybackButton.State.unplayed(_:), v3);
  sub_100063084(&qword_1000A2350, (void (*)(uint64_t))&type metadata accessor for PlaybackButton.State);
  LOBYTE(v16) = sub_10008B310();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  v18(v6, v3);
  v18(v9, v3);
  uint64_t v19 = sub_1000613B8((v16 & 1) == 0, v11, v13, v15);
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  char v26 = v22 & 1;
  sub_10001546C(v11, v13, v15);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v35 + *(int *)(type metadata accessor for EpisodeCaptionView() + 28)) == 1)
  {
    uint64_t v27 = sub_10008AD10();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    char v26 = v32 & 1;
  }
  else
  {
    sub_100031774(v19, v21, v26);
    swift_bridgeObjectRetain();
    uint64_t v27 = v19;
    uint64_t v29 = v21;
    uint64_t v31 = v25;
  }
  sub_10001546C(v19, v21, v23 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  char v34 = v36;
  *uint64_t v36 = v27;
  v34[1] = v29;
  *((unsigned char *)v34 + 16) = v26;
  v34[3] = v31;
  return result;
}

uint64_t sub_100061CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t *__return_ptr, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  void (*v86)(uint64_t *__return_ptr, uint64_t);
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;

  uint64_t v85 = a5;
  uint64_t v86 = a4;
  unint64_t v88 = a6;
  uint64_t v9 = sub_10000903C(&qword_1000A2430);
  __chkstk_darwin(v9 - 8);
  long long v89 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v84 = (char *)&v77 - v12;
  __chkstk_darwin(v13);
  uint64_t v87 = (uint64_t)&v77 - v14;
  long long v91 = type metadata accessor for EpisodeCaptionView();
  if (*(unsigned char *)(a1 + *(int *)(v91 + 20)) == 1)
  {
    long long v92 = a2;
    unint64_t v93 = a3;
    sub_100031338();
    a2 = sub_10008B560();
    a3 = v15;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  long long v92 = a2;
  unint64_t v93 = a3;
  unint64_t v16 = sub_100031338();
  uint64_t v17 = sub_10008ADE0();
  long long v90 = v18;
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(a1 + 24);
  LODWORD(v83) = v21 & 1;
  long long v92 = v19;
  unint64_t v93 = v20;
  swift_bridgeObjectRetain();
  uint64_t v98 = sub_10008B390();
  uint64_t v99 = v22;
  int v96 = 44;
  int v97 = 0xE100000000000000;
  uint64_t v23 = sub_10008B570();
  uint64_t v78 = a1;
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v92 = v23;
  unint64_t v93 = v25;
  unint64_t v82 = v16;
  uint64_t v26 = sub_10008ADE0();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  uint64_t v31 = v17;
  uint64_t v32 = v90;
  char v33 = v83;
  uint64_t v34 = sub_10008AD30();
  uint64_t v80 = v35;
  uint64_t v81 = v36;
  int v79 = v37;
  char v38 = v37 & 1;
  sub_10001546C(v26, v28, v30);
  swift_bridgeObjectRelease();
  sub_10001546C(v31, v32, v33);
  swift_bridgeObjectRelease();
  int v39 = *(unsigned __int8 *)(v78 + *(int *)(v91 + 28));
  uint64_t v40 = v80;
  if (v39 == 1)
  {
    uint64_t v83 = sub_10008AD10();
    long long v90 = v41;
    long long v91 = v42;
    char v44 = v43 & 1;
  }
  else
  {
    sub_100031774(v34, v80, v38);
    uint64_t v45 = v81;
    swift_bridgeObjectRetain();
    uint64_t v83 = v34;
    long long v90 = v40;
    long long v91 = v45;
    char v44 = v38;
  }
  sub_10001546C(v34, v40, v79 & 1);
  swift_bridgeObjectRelease();
  long long v92 = sub_10008B390();
  unint64_t v93 = v46;
  uint64_t v47 = sub_10008ADE0();
  uint64_t v50 = v47;
  uint64_t v51 = v48;
  char v52 = v49;
  uint64_t v54 = v53;
  char v55 = v49 & 1;
  if (v39)
  {
    uint64_t v56 = sub_10008AD10();
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    char v55 = v61 & 1;
  }
  else
  {
    sub_100031774(v47, v48, v49 & 1);
    swift_bridgeObjectRetain();
    uint64_t v56 = v50;
    uint64_t v58 = v51;
    uint64_t v60 = v54;
  }
  sub_10001546C(v50, v51, v52 & 1);
  swift_bridgeObjectRelease();
  long long v92 = v56;
  unint64_t v93 = v58;
  uint64_t v94 = v55;
  uint64_t v95 = v60;
  uint64_t v62 = (uint64_t)v84;
  sub_10008AEF0();
  sub_10001546C(v56, v58, v55);
  swift_bridgeObjectRelease();
  uint64_t v63 = v87;
  uint64_t v64 = sub_100062E50(v62, v87);
  v86(&v92, v64);
  uint64_t v65 = v92;
  uint64_t v66 = v93;
  char v67 = v94;
  uint64_t v68 = v95;
  uint64_t v69 = v89;
  sub_1000155B0(v63, v89, &qword_1000A2430);
  uint64_t v70 = v88;
  uint64_t v71 = v83;
  uint64_t v72 = v90;
  _OWORD *v88 = v83;
  v70[1] = v72;
  *((unsigned char *)v70 + 16) = v44;
  v70[3] = v91;
  uint64_t v73 = sub_10000903C(&qword_1000A2450);
  sub_1000155B0(v69, (uint64_t)v70 + *(int *)(v73 + 48), &qword_1000A2430);
  char v74 = (char *)v70 + *(int *)(v73 + 64);
  *(void *)char v74 = v65;
  *((void *)v74 + 1) = v66;
  v74[16] = v67;
  *((void *)v74 + 3) = v68;
  uint64_t v75 = v90;
  sub_100031774(v71, v90, v44);
  swift_bridgeObjectRetain();
  sub_100031774(v65, v66, v67);
  swift_bridgeObjectRetain();
  sub_100015614(v63, &qword_1000A2430);
  sub_10001546C(v65, v66, v67);
  swift_bridgeObjectRelease();
  sub_100015614(v69, &qword_1000A2430);
  sub_10001546C(v71, v75, v44);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000621D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v88 = a5;
  long long v89 = a4;
  long long v91 = a6;
  uint64_t v9 = sub_10000903C(&qword_1000A23C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v94 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v92 = (char *)&v76 - v12;
  uint64_t v13 = sub_10000903C(&qword_1000A2430);
  __chkstk_darwin(v13 - 8);
  uint64_t v93 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v87 = (char *)&v76 - v16;
  __chkstk_darwin(v17);
  uint64_t v90 = (uint64_t)&v76 - v18;
  uint64_t v86 = type metadata accessor for EpisodeCaptionView();
  if (*(unsigned char *)(a1 + *(int *)(v86 + 20)) == 1)
  {
    uint64_t v95 = a2;
    uint64_t v96 = a3;
    sub_100031338();
    a2 = sub_10008B560();
    a3 = v19;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v95 = a2;
  uint64_t v96 = a3;
  unint64_t v20 = sub_100031338();
  uint64_t v84 = sub_10008ADE0();
  uint64_t v79 = v21;
  uint64_t v85 = v22;
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = *(void *)(a1 + 24);
  int v78 = v25 & 1;
  uint64_t v95 = v23;
  uint64_t v96 = v24;
  swift_bridgeObjectRetain();
  uint64_t v101 = sub_10008B390();
  uint64_t v102 = v26;
  uint64_t v99 = 44;
  unint64_t v100 = 0xE100000000000000;
  uint64_t v27 = sub_10008B570();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v95 = v27;
  uint64_t v96 = v29;
  unint64_t v83 = v20;
  uint64_t v30 = sub_10008ADE0();
  uint64_t v77 = a1;
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  uint64_t v35 = v84;
  uint64_t v36 = v79;
  char v37 = v78;
  uint64_t v38 = sub_10008AD30();
  uint64_t v81 = v39;
  uint64_t v82 = v40;
  int v80 = v41;
  char v42 = v41 & 1;
  sub_10001546C(v30, v32, v34);
  swift_bridgeObjectRelease();
  sub_10001546C(v35, v36, v37);
  swift_bridgeObjectRelease();
  int v43 = *(unsigned __int8 *)(v77 + *(int *)(v86 + 28));
  uint64_t v44 = v81;
  if (v43 == 1)
  {
    uint64_t v86 = sub_10008AD10();
    uint64_t v84 = v45;
    uint64_t v85 = v46;
    char v42 = v47 & 1;
  }
  else
  {
    sub_100031774(v38, v81, v42);
    uint64_t v48 = v82;
    swift_bridgeObjectRetain();
    uint64_t v86 = v38;
    uint64_t v84 = v44;
    uint64_t v85 = v48;
  }
  sub_10001546C(v38, v44, v80 & 1);
  swift_bridgeObjectRelease();
  uint64_t v95 = sub_10008B390();
  uint64_t v96 = v49;
  uint64_t v50 = sub_10008ADE0();
  uint64_t v53 = v50;
  uint64_t v54 = v51;
  char v55 = v52;
  uint64_t v57 = v56;
  char v58 = v52 & 1;
  if (v43)
  {
    uint64_t v59 = sub_10008AD10();
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    char v58 = v64 & 1;
  }
  else
  {
    sub_100031774(v50, v51, v52 & 1);
    swift_bridgeObjectRetain();
    uint64_t v59 = v53;
    uint64_t v61 = v54;
    uint64_t v63 = v57;
  }
  sub_10001546C(v53, v54, v55 & 1);
  swift_bridgeObjectRelease();
  uint64_t v95 = v59;
  uint64_t v96 = v61;
  char v97 = v58;
  uint64_t v98 = v63;
  uint64_t v65 = (uint64_t)v87;
  sub_10008AEF0();
  sub_10001546C(v59, v61, v58);
  swift_bridgeObjectRelease();
  uint64_t v66 = v90;
  uint64_t v67 = sub_100062E50(v65, v90);
  uint64_t v68 = (uint64_t)v92;
  v89(v67);
  LOBYTE(v95) = v42;
  uint64_t v69 = v93;
  sub_1000155B0(v66, v93, &qword_1000A2430);
  uint64_t v70 = v94;
  sub_1000155B0(v68, v94, &qword_1000A23C0);
  uint64_t v71 = v91;
  uint64_t v72 = v86;
  uint64_t v73 = v84;
  *long long v91 = v86;
  v71[1] = v73;
  *((unsigned char *)v71 + 16) = v42;
  v71[3] = v85;
  uint64_t v74 = sub_10000903C(&qword_1000A2438);
  sub_1000155B0(v69, (uint64_t)v71 + *(int *)(v74 + 48), &qword_1000A2430);
  sub_1000155B0(v70, (uint64_t)v71 + *(int *)(v74 + 64), &qword_1000A23C0);
  sub_100031774(v72, v73, v42);
  swift_bridgeObjectRetain();
  sub_100031774(v72, v73, v42);
  swift_bridgeObjectRetain();
  sub_100015614(v68, &qword_1000A23C0);
  sub_100015614(v66, &qword_1000A2430);
  sub_10001546C(v72, v73, v42);
  swift_bridgeObjectRelease();
  sub_100015614(v70, &qword_1000A23C0);
  sub_100015614(v69, &qword_1000A2430);
  sub_10001546C(v72, v73, v95);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000627D8()
{
  return sub_10008A880();
}

uint64_t sub_1000627FC()
{
  return sub_10008A880();
}

uint64_t sub_100062820(uint64_t a1)
{
  uint64_t v2 = sub_10008A840();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_10008A890();
}

unint64_t sub_1000628F4()
{
  unint64_t result = qword_1000A2330;
  if (!qword_1000A2330)
  {
    sub_10000E49C(&qword_1000A2310);
    sub_100062994();
    sub_100015428(&qword_1000A19E8, &qword_1000A19F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2330);
  }
  return result;
}

unint64_t sub_100062994()
{
  unint64_t result = qword_1000A2338;
  if (!qword_1000A2338)
  {
    sub_10000E49C(&qword_1000A2308);
    sub_100015428(&qword_1000A2340, &qword_1000A2300);
    sub_100015428(&qword_1000A2348, &qword_1000A2328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2338);
  }
  return result;
}

unint64_t sub_100062A58()
{
  unint64_t result = qword_1000A2398;
  if (!qword_1000A2398)
  {
    sub_10000E49C(&qword_1000A2390);
    sub_100062AD4();
    sub_100062D9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2398);
  }
  return result;
}

unint64_t sub_100062AD4()
{
  unint64_t result = qword_1000A23A0;
  if (!qword_1000A23A0)
  {
    sub_10000E49C(&qword_1000A2388);
    sub_100062B48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A23A0);
  }
  return result;
}

unint64_t sub_100062B48()
{
  unint64_t result = qword_1000A23A8;
  if (!qword_1000A23A8)
  {
    sub_10000E49C(&qword_1000A23B0);
    sub_100062BE8();
    sub_100015428(&qword_1000A23F8, &qword_1000A2400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A23A8);
  }
  return result;
}

unint64_t sub_100062BE8()
{
  unint64_t result = qword_1000A23B8;
  if (!qword_1000A23B8)
  {
    sub_10000E49C(&qword_1000A23C0);
    sub_100062C88();
    sub_100015428(&qword_1000A2348, &qword_1000A2328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A23B8);
  }
  return result;
}

unint64_t sub_100062C88()
{
  unint64_t result = qword_1000A23C8;
  if (!qword_1000A23C8)
  {
    sub_10000E49C(&qword_1000A23D0);
    sub_100062D28();
    sub_100015428(&qword_1000A23E8, &qword_1000A23F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A23C8);
  }
  return result;
}

unint64_t sub_100062D28()
{
  unint64_t result = qword_1000A23D8;
  if (!qword_1000A23D8)
  {
    sub_10000E49C(&qword_1000A23E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A23D8);
  }
  return result;
}

unint64_t sub_100062D9C()
{
  unint64_t result = qword_1000A2408;
  if (!qword_1000A2408)
  {
    sub_10000E49C(&qword_1000A2378);
    sub_100015428(&qword_1000A2410, &qword_1000A2418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2408);
  }
  return result;
}

uint64_t sub_100062E3C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000619E4(*(void *)(v1 + 24), a1);
}

uint64_t sub_100062E44@<X0>(_OWORD *a1@<X8>)
{
  return sub_100060AC4(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100062E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A2430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100062EB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_100031774(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_100031774(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100062F2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_10001546C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  sub_10001546C(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100062FA4()
{
  unint64_t result = qword_1000A2458;
  if (!qword_1000A2458)
  {
    sub_10000E49C(&qword_1000A2460);
    sub_10000E49C(&qword_1000A2310);
    sub_1000628F4();
    swift_getOpaqueTypeConformance2();
    sub_100063084((unint64_t *)&qword_1000A1238, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2458);
  }
  return result;
}

uint64_t sub_100063084(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TwoViewPercentageLayout(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TwoViewPercentageLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TwoViewPercentageLayout()
{
  return &type metadata for TwoViewPercentageLayout;
}

unint64_t sub_100063164()
{
  unint64_t result = qword_1000A2468;
  if (!qword_1000A2468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2468);
  }
  return result;
}

uint64_t sub_1000631B8@<X0>(uint64_t a1@<X8>)
{
  sub_10008A6F0();
  sub_100063AB4();
  sub_10008B470();
  sub_10008B4A0();
  if (v9[4] == v9[0])
  {
    uint64_t v2 = sub_10008A6D0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    BOOL v4 = (void (*)(void *, void))sub_10008B4B0();
    uint64_t v6 = v5;
    uint64_t v7 = sub_10008A6D0();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_100063324(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v36 = a5;
  uint64_t v7 = sub_10000903C(&qword_1000A2478);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v37 = sub_10008A6D0();
  uint64_t v13 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  char v34 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v35 = (char *)&v34 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v34 - v18;
  int v20 = sub_10008ABB0();
  uint64_t v21 = v13;
  uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v20 == sub_10008ABB0())
  {
    sub_1000631B8((uint64_t)v12);
    if ((*v22)(v12, 1, v37) == 1)
    {
      uint64_t v23 = (uint64_t)v12;
      return sub_100063A54(v23);
    }
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v19, v12, v37);
    sub_10008B170();
    char v39 = a2 & 1;
    char v38 = 0;
    sub_10008A6C0();
    sub_10008A6F0();
    sub_100063AB4();
    sub_10008B470();
    sub_10008B4A0();
    if (sub_10008B490() < 2)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v19, v37);
    }
    else
    {
      char v25 = v35;
      sub_10008A700();
      sub_10008B170();
      char v39 = a2 & 1;
      char v38 = 0;
      sub_10008A6C0();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v27 = v37;
      v26(v25, v37);
      return ((uint64_t (*)(char *, uint64_t))v26)(v19, v27);
    }
  }
  else
  {
    sub_1000631B8((uint64_t)v9);
    if ((*v22)(v9, 1, v37) == 1)
    {
      uint64_t v23 = (uint64_t)v9;
      return sub_100063A54(v23);
    }
    uint64_t v28 = v21;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v30 = v34;
    v29(v34, v9, v37);
    sub_10008B170();
    char v39 = 0;
    char v38 = a4 & 1;
    sub_10008A6C0();
    sub_10008A6F0();
    sub_100063AB4();
    sub_10008B470();
    sub_10008B4A0();
    if (sub_10008B490() < 2)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v30, v37);
    }
    else
    {
      uint64_t v31 = v35;
      sub_10008A700();
      sub_10008B170();
      char v39 = 0;
      char v38 = a4 & 1;
      sub_10008A6C0();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v28 + 8);
      uint64_t v33 = v37;
      v32(v31, v37);
      return ((uint64_t (*)(char *, uint64_t))v32)(v30, v33);
    }
  }
}

double sub_10006384C(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 10.0;
  }
  return result;
}

uint64_t sub_10006386C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_100063324(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_10006388C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1000638FC(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1000638C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1000638FC(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1000638FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_100063940(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10008A610();
  return sub_1000639B0;
}

void sub_1000639B0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

unint64_t sub_100063A00()
{
  unint64_t result = qword_1000A2470;
  if (!qword_1000A2470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2470);
  }
  return result;
}

uint64_t sub_100063A54(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A2478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100063AB4()
{
  unint64_t result = qword_1000A2480;
  if (!qword_1000A2480)
  {
    sub_10008A6F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2480);
  }
  return result;
}

double MTEpisode.timeRemainingOpt.getter()
{
  [v0 timeRemaining];
  return result;
}

uint64_t MTEpisode.channelName.getter()
{
  return sub_100063B50((SEL *)&selRef_name);
}

uint64_t MTEpisode.subscriptionName.getter()
{
  return sub_100063B50((SEL *)&selRef_subscriptionName);
}

uint64_t sub_100063B50(SEL *a1)
{
  id v3 = [v1 podcast];
  if (!v3) {
    return 0;
  }
  BOOL v4 = v3;
  id v5 = [v3 channel];

  if (!v5) {
    return 0;
  }
  id v6 = [v5 *a1];

  if (!v6) {
    return 0;
  }
  uint64_t v7 = sub_10008B360();

  return v7;
}

double MTEpisode.durationOpt.getter()
{
  [v0 duration];
  return result;
}

id MTEpisode.isExplicit.getter()
{
  return [v0 explicit];
}

uint64_t MTEpisode.mediaType.getter()
{
  if ([v0 isVideo]) {
    return 1;
  }
  if ([v0 isExternalType]) {
    return 2;
  }
  return 0;
}

uint64_t MTEpisode.episodeTypeResolvedValue.getter()
{
  if ([v0 isTrailer]) {
    return 2;
  }
  else {
    return [v0 isBonus] ^ 1;
  }
}

void MTEpisode.episodeTypeResolvedValue.setter()
{
  uint64_t v1 = sub_10008A310();
  uint64_t v3 = v2;
  if (v1 == sub_10008A310() && v3 == v4)
  {
    swift_bridgeObjectRelease();
    NSString v7 = 0;
  }
  else
  {
    char v6 = sub_10008B690();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      NSString v7 = 0;
      [v0 setEpisodeType:0];
      goto LABEL_10;
    }
    sub_10008A310();
    NSString v7 = sub_10008B350();
  }
  swift_bridgeObjectRelease();
  [v0 setEpisodeType:v7];
LABEL_10:
}

void (*MTEpisode.episodeTypeResolvedValue.modify(uint64_t a1))(id *a1)
{
  uint64_t v2 = v1;
  *(void *)a1 = v2;
  if ([v2 isTrailer]) {
    char v4 = 2;
  }
  else {
    char v4 = [v2 isBonus] ^ 1;
  }
  *(unsigned char *)(a1 + 8) = v4;
  return sub_100063E5C;
}

void sub_100063E5C(id *a1)
{
  uint64_t v2 = sub_10008A310();
  uint64_t v4 = v3;
  if (v2 == sub_10008A310() && v4 == v5)
  {
    swift_bridgeObjectRelease();
    NSString v9 = 0;
  }
  else
  {
    char v8 = sub_10008B690();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8)
    {
      NSString v9 = 0;
      [*a1 setEpisodeType:0];
      goto LABEL_13;
    }
    sub_10008A310();
    NSString v9 = sub_10008B350();
  }
  swift_bridgeObjectRelease();
  [*a1 setEpisodeType:v9];
LABEL_13:
}

id MTEpisode.showTypeIsSerial.getter()
{
  id v1 = [v0 podcast];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [v1 isSerialShowTypeInFeed];

  return v3;
}

uint64_t MTEpisode.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  [v1 pubDate];
  if (v3 <= 0.0)
  {
    uint64_t v9 = sub_10008A170();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v6 = v9;
    uint64_t v7 = a1;
    uint64_t v8 = 1;
  }
  else
  {
    [v1 pubDate];
    sub_10008A070();
    uint64_t v4 = sub_10008A170();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v6 = v4;
    uint64_t v7 = a1;
    uint64_t v8 = 0;
  }

  return v5(v7, v8, 1, v6);
}

void MTEpisode.listenNowReason.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10008A170();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v2, "listenNowEpisode", v6))
  {
    id v9 = [v2 podcast];
    if (v9)
    {
      uint64_t v10 = v9;
      if ([v2 isVisuallyPlayed])
      {

        uint64_t v11 = (unsigned int *)&enum case for EpisodeListenNowReason.playAgain(_:);
LABEL_10:
        uint64_t v17 = *v11;
        uint64_t v18 = sub_10008A400();
        uint64_t v43 = *(void *)(v18 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 104))(a1, v17, v18);
        uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
        uint64_t v15 = a1;
        uint64_t v16 = 0;
        uint64_t v14 = v18;
        goto LABEL_11;
      }
      if (([v2 isPartiallyPlayed] & 1) != 0
        || ([v2 isPartiallyPlayedBackCatalogItem] & 1) != 0
        || [v2 isPlayheadPartiallyPlayed])
      {

        uint64_t v11 = (unsigned int *)&enum case for EpisodeListenNowReason.resume(_:);
        goto LABEL_10;
      }
      sub_10008A160();
      sub_10008A080();
      double v20 = v19;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      if (([v10 subscribed] & 1) != 0
        || ![v2 isBookmarked]
        || ([v2 lastBookmarkedDate], double v22 = v21, objc_msgSend(v10, "lastDatePlayed"), v23 >= v22))
      {
        [v10 lastDatePlayed];
        if (v24 > 0.0)
        {
          if ([v2 episodeLevel])
          {
          }
          else
          {
            [v2 pubDate];
            double v36 = v35;

            if (v20 < v36 + 5184000.0)
            {
              uint64_t v37 = (unsigned int *)&enum case for EpisodeListenNowReason.new(_:);
LABEL_29:
              uint64_t v38 = *v37;
              uint64_t v39 = sub_10008A400();
              uint64_t v40 = *(void *)(v39 - 8);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 104))(a1, v38, v39);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
              return;
            }
          }
          uint64_t v37 = (unsigned int *)&enum case for EpisodeListenNowReason.next(_:);
          goto LABEL_29;
        }
        if ([v10 subscribed])
        {
          [v10 addedDate];
          double v26 = v25;

          uint64_t v27 = sub_10008A400();
          uint64_t v28 = *(void *)(v27 - 8);
          uint64_t v29 = *(void (**)(uint64_t, void, uint64_t))(v28 + 104);
          uint64_t v30 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56);
          if (v20 >= v26 + 5184000.0) {
            uint64_t v31 = (unsigned int *)&enum case for EpisodeListenNowReason.followed(_:);
          }
          else {
            uint64_t v31 = (unsigned int *)&enum case for EpisodeListenNowReason.recentlyFollowed(_:);
          }
LABEL_32:
          v29(a1, *v31, v27);
          (*v30)(a1, 0, 1, v27);
          return;
        }
        if (![v2 isBookmarked])
        {
          uint64_t v41 = sub_10008A400();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(a1, 1, 1, v41);

          return;
        }
      }
      [v2 lastBookmarkedDate];
      double v33 = v32;

      uint64_t v27 = sub_10008A400();
      uint64_t v34 = *(void *)(v27 - 8);
      uint64_t v29 = *(void (**)(uint64_t, void, uint64_t))(v34 + 104);
      uint64_t v30 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56);
      if (v20 >= v33 + 5184000.0) {
        uint64_t v31 = (unsigned int *)&enum case for EpisodeListenNowReason.saved(_:);
      }
      else {
        uint64_t v31 = (unsigned int *)&enum case for EpisodeListenNowReason.recentlySaved(_:);
      }
      goto LABEL_32;
    }
  }
  uint64_t v12 = sub_10008A400();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v14 = v12;
  uint64_t v15 = a1;
  uint64_t v16 = 1;
LABEL_11:

  v13(v15, v16, 1, v14);
}

id MTEpisode.seasonNumberOpt.getter()
{
  return sub_100064604((SEL *)&selRef_seasonNumber);
}

id MTEpisode.episodeNumberOpt.getter()
{
  return sub_100064604((SEL *)&selRef_episodeNumber);
}

id sub_100064604(SEL *a1)
{
  if ((uint64_t)[v1 *a1] < 1) {
    return 0;
  }
  else {
    return [v1 *a1];
  }
}

uint64_t sub_100064660()
{
  return MTEpisode.channelName.getter();
}

uint64_t sub_100064684()
{
  return MTEpisode.subscriptionName.getter();
}

id sub_1000646A8()
{
  return [*v0 entitlementState];
}

id sub_1000646B8()
{
  return [*v0 hasFreeVersion];
}

void sub_1000646DC(uint64_t a1@<X8>)
{
}

uint64_t sub_100064700()
{
  id v1 = *v0;
  if ([*v0 isTrailer]) {
    return 2;
  }
  else {
    return [v1 isBonus] ^ 1;
  }
}

uint64_t sub_100064750()
{
  id v1 = *v0;
  if ([*v0 isVideo]) {
    return 1;
  }
  if ([v1 isExternalType]) {
    return 2;
  }
  return 0;
}

id sub_1000647A8()
{
  return [*v0 explicit];
}

id sub_1000647CC()
{
  id v1 = [*v0 podcast];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [v1 isSerialShowTypeInFeed];

  return v3;
}

double sub_100064828()
{
  [*v0 duration];
  return result;
}

id sub_100064854(uint64_t a1, uint64_t a2)
{
  return sub_10006486C(a1, a2, (SEL *)&selRef_seasonNumber);
}

id sub_100064860(uint64_t a1, uint64_t a2)
{
  return sub_10006486C(a1, a2, (SEL *)&selRef_episodeNumber);
}

id sub_10006486C(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5 = *v3;
  if ((uint64_t)[v5 *a3] < 1) {
    return 0;
  }
  else {
    return [v5 *a3];
  }
}

uint64_t sub_1000648CC@<X0>(uint64_t a1@<X8>)
{
  id v3 = *v1;
  [v3 pubDate];
  if (v4 <= 0.0)
  {
    uint64_t v10 = sub_10008A170();
    double v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  else
  {
    [v3 pubDate];
    sub_10008A070();
    uint64_t v5 = sub_10008A170();
    double v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }

  return v6(v8, v9, 1, v7);
}

double sub_1000649A4()
{
  [*v0 timeRemaining];
  return result;
}

char *sub_1000649D0(uint64_t a1, uint64_t *a2, int *a3)
{
  double v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)double v4 = *a2;
    double v4 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
    uint64_t v8 = Entry[7];
    uint64_t v9 = &v4[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_10008A1A0();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = Entry[8];
    uint64_t v14 = *(void **)((char *)a2 + v13);
    *(void *)&v4[v13] = v14;
    uint64_t v15 = Entry[9];
    uint64_t v16 = &v4[v15];
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_10008A170();
    uint64_t v19 = *(void *)(v18 - 8);
    double v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    id v21 = v14;
    if (v20(v17, 1, v18))
    {
      uint64_t v22 = sub_10000903C(&qword_1000A1038);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(&v4[Entry[10]], (uint64_t)a2 + Entry[10], v18);
    }
    else
    {
      double v24 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v24(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      v24(&v4[Entry[10]], (char *)a2 + Entry[10], v18);
    }
    uint64_t v25 = Entry[11];
    double v26 = &v4[v25];
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_10008B290();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1690);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v31 = a3[5];
    double v32 = &v4[v31];
    double v33 = (uint64_t *)((char *)a2 + v31);
    sub_10000903C(&qword_1000A1DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = sub_10008B220();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      *(void *)double v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = a3[6];
    double v36 = &v4[v35];
    uint64_t v37 = (uint64_t *)((char *)a2 + v35);
    sub_10000903C(&qword_1000A2488);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = sub_10008A7D0();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    }
    else
    {
      *(void *)double v36 = *v37;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = a3[7];
    uint64_t v40 = &v4[v39];
    uint64_t v41 = (uint64_t *)((char *)a2 + v39);
    sub_10000903C(&qword_1000A2490);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = sub_10008A770();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    }
    else
    {
      *(void *)uint64_t v40 = *v41;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = a3[8];
    uint64_t v44 = &v4[v43];
    uint64_t v45 = (uint64_t)a2 + v43;
    uint64_t v46 = *(void *)v45;
    char v47 = *(unsigned char *)(v45 + 8);
    sub_1000090AC(*(void *)v45, v47);
    *(void *)uint64_t v44 = v46;
    v44[8] = v47;
    uint64_t v48 = a3[9];
    uint64_t v49 = &v4[v48];
    uint64_t v50 = (uint64_t *)((char *)a2 + v48);
    sub_10000903C(&qword_1000A1DE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = sub_10008B1F0();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    }
    else
    {
      *(void *)uint64_t v49 = *v50;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = a3[10];
    uint64_t v53 = &v4[v52];
    uint64_t v54 = (uint64_t *)((char *)a2 + v52);
    sub_10000903C(&qword_1000A14E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v55 = sub_10008A650();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    }
    else
    {
      *(void *)uint64_t v53 = *v54;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100064FE0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v5 = a1 + Entry[7];
  uint64_t v6 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  uint64_t v7 = a1 + Entry[9];
  uint64_t v8 = sub_10008A170();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  if (!v10) {
    v11(v7, v8);
  }
  v11(a1 + Entry[10], v8);
  uint64_t v12 = a1 + Entry[11];
  uint64_t v13 = sub_10008B290();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = a1 + a2[5];
  sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_10008B220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  uint64_t v17 = a1 + a2[6];
  sub_10000903C(&qword_1000A2488);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_10008A7D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  uint64_t v19 = a1 + a2[7];
  sub_10000903C(&qword_1000A2490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_10008A770();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  else
  {
    swift_release();
  }
  sub_100009700(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  uint64_t v21 = a1 + a2[9];
  sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_10008B1F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  }
  else
  {
    swift_release();
  }
  uint64_t v23 = a1 + a2[10];
  sub_10000903C(&qword_1000A14E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_10008A650();
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
    return v25(v23, v24);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1000653F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v7 = Entry[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10008A1A0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = Entry[8];
  uint64_t v13 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v13;
  uint64_t v14 = Entry[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_10008A170();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  id v20 = v13;
  if (v19(v16, 1, v17))
  {
    uint64_t v21 = sub_10000903C(&qword_1000A1038);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a1 + Entry[10], a2 + Entry[10], v17);
  }
  else
  {
    uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v18 + 16);
    v22(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    v22((void *)(a1 + Entry[10]), (const void *)(a2 + Entry[10]), v17);
  }
  uint64_t v23 = Entry[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_10008B290();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_10000903C(&qword_1000A1690);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = a3[5];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_10008B220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  else
  {
    *uint64_t v30 = *v31;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = a3[6];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  sub_10000903C(&qword_1000A2488);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_10008A7D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  }
  else
  {
    *uint64_t v34 = *v35;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = a3[7];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  sub_10000903C(&qword_1000A2490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_10008A770();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  }
  else
  {
    void *v38 = *v39;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = a3[8];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = *(void *)v43;
  char v45 = *(unsigned char *)(v43 + 8);
  sub_1000090AC(*(void *)v43, v45);
  *(void *)uint64_t v42 = v44;
  *(unsigned char *)(v42 + 8) = v45;
  uint64_t v46 = a3[9];
  char v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v49 = sub_10008B1F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  }
  else
  {
    void *v47 = *v48;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = a3[10];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  sub_10000903C(&qword_1000A14E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = sub_10008A650();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  }
  else
  {
    void *v51 = *v52;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000659A8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v6 = Entry[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = Entry[8];
  uint64_t v11 = *(void **)(a1 + v10);
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v10) = v12;
  id v13 = v12;

  uint64_t v14 = Entry[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = sub_10008A170();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    uint64_t v22 = sub_10000903C(&qword_1000A1038);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24))(a1 + Entry[10], a2 + Entry[10], v17);
  uint64_t v23 = Entry[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = sub_10008B290();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
LABEL_12:
    uint64_t v31 = sub_10000903C(&qword_1000A1690);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v24, v25, v26);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v32 = a3[5];
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (void *)(a2 + v32);
    sub_100015614(a1 + v32, &qword_1000A1DD8);
    sub_10000903C(&qword_1000A1DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = sub_10008B220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      *uint64_t v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = a3[6];
    uint64_t v37 = (void *)(a1 + v36);
    uint64_t v38 = (void *)(a2 + v36);
    sub_100015614(a1 + v36, &qword_1000A2488);
    sub_10000903C(&qword_1000A2488);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = sub_10008A7D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *uint64_t v37 = *v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = a3[7];
    uint64_t v41 = (void *)(a1 + v40);
    uint64_t v42 = (void *)(a2 + v40);
    sub_100015614(a1 + v40, &qword_1000A2490);
    sub_10000903C(&qword_1000A2490);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v43 = sub_10008A770();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    }
    else
    {
      void *v41 = *v42;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v44 = a3[8];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = *(void *)v46;
  char v48 = *(unsigned char *)(v46 + 8);
  sub_1000090AC(*(void *)v46, v48);
  uint64_t v49 = *(void *)v45;
  char v50 = *(unsigned char *)(v45 + 8);
  *(void *)uint64_t v45 = v47;
  *(unsigned char *)(v45 + 8) = v48;
  sub_100009700(v49, v50);
  if (a1 != a2)
  {
    uint64_t v51 = a3[9];
    uint64_t v52 = (void *)(a1 + v51);
    uint64_t v53 = (void *)(a2 + v51);
    sub_100015614(a1 + v51, &qword_1000A1DE0);
    sub_10000903C(&qword_1000A1DE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v54 = sub_10008B1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    }
    else
    {
      void *v52 = *v53;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = a3[10];
    uint64_t v56 = (void *)(a1 + v55);
    uint64_t v57 = (void *)(a2 + v55);
    sub_100015614(a1 + v55, &qword_1000A14E8);
    sub_10000903C(&qword_1000A14E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = sub_10008A650();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    }
    else
    {
      void *v56 = *v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000660A0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v7 = Entry[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + Entry[8]) = *(void *)(a2 + Entry[8]);
  uint64_t v11 = Entry[9];
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_10008A170();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a1 + Entry[10], a2 + Entry[10], v14);
  }
  else
  {
    uint64_t v17 = *(void (**)(void *, const void *, uint64_t))(v15 + 32);
    v17(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    v17((void *)(a1 + Entry[10]), (const void *)(a2 + Entry[10]), v14);
  }
  uint64_t v18 = Entry[11];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_10008B290();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_10000903C(&qword_1000A1690);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[5];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = sub_10008B220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  uint64_t v29 = a3[6];
  int v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v32 = sub_10000903C(&qword_1000A2488);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = sub_10008A7D0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  uint64_t v34 = a3[7];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = sub_10000903C(&qword_1000A2490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = sub_10008A770();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  uint64_t v39 = a3[8];
  uint64_t v40 = a3[9];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = (void *)(a1 + v40);
  uint64_t v44 = (const void *)(a2 + v40);
  uint64_t v45 = sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v46 = sub_10008B1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  uint64_t v47 = a3[10];
  char v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  uint64_t v50 = sub_10000903C(&qword_1000A14E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v51 = sub_10008A650();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 32))(v48, v49, v51);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100066674(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v7 = Entry[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = Entry[8];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = Entry[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_10008A170();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = sub_10000903C(&qword_1000A1038);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40))(a1 + Entry[10], a2 + Entry[10], v16);
  uint64_t v22 = Entry[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_10008B290();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    int v30 = a3;
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      if (a1 == a2) {
        goto LABEL_23;
      }
      goto LABEL_14;
    }
  }
  else
  {
    int v30 = a3;
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      if (a1 == a2) {
        goto LABEL_23;
      }
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
  }
  uint64_t v31 = sub_10000903C(&qword_1000A1690);
  memcpy(v23, v24, *(void *)(*(void *)(v31 - 8) + 64));
  if (a1 == a2) {
    goto LABEL_23;
  }
LABEL_14:
  uint64_t v32 = v30[5];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  sub_100015614(a1 + v32, &qword_1000A1DD8);
  uint64_t v35 = sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_10008B220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  uint64_t v37 = v30[6];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (const void *)(a2 + v37);
  sub_100015614(a1 + v37, &qword_1000A2488);
  uint64_t v40 = sub_10000903C(&qword_1000A2488);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v41 = sub_10008A7D0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 32))(v38, v39, v41);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  uint64_t v42 = v30[7];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (const void *)(a2 + v42);
  sub_100015614(a1 + v42, &qword_1000A2490);
  uint64_t v45 = sub_10000903C(&qword_1000A2490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v46 = sub_10008A770();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
LABEL_23:
  uint64_t v47 = v30[8];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = (uint64_t *)(a2 + v47);
  uint64_t v50 = *v49;
  LOBYTE(v49) = *((unsigned char *)v49 + 8);
  uint64_t v51 = *(void *)v48;
  char v52 = *(unsigned char *)(v48 + 8);
  *(void *)uint64_t v48 = v50;
  *(unsigned char *)(v48 + 8) = (_BYTE)v49;
  sub_100009700(v51, v52);
  if (a1 != a2)
  {
    uint64_t v53 = v30[9];
    uint64_t v54 = (void *)(a1 + v53);
    uint64_t v55 = (const void *)(a2 + v53);
    sub_100015614(a1 + v53, &qword_1000A1DE0);
    uint64_t v56 = sub_10000903C(&qword_1000A1DE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v57 = sub_10008B1F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v57 - 8) + 32))(v54, v55, v57);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    uint64_t v58 = v30[10];
    uint64_t v59 = (void *)(a1 + v58);
    uint64_t v60 = (const void *)(a2 + v58);
    sub_100015614(a1 + v58, &qword_1000A14E8);
    uint64_t v61 = sub_10000903C(&qword_1000A14E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v62 = sub_10008A650();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(v59, v60, v62);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100066DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100066DBC);
}

uint64_t sub_100066DBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v7 = *(void *)(Entry - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = Entry;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10000903C(&qword_1000A1DE8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  uint64_t v14 = sub_10000903C(&qword_1000A2498);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  uint64_t v15 = sub_10000903C(&qword_1000A24A0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  if (a2 == 254)
  {
    unsigned int v16 = *(unsigned __int8 *)(a1 + a3[8] + 8);
    if (v16 > 1) {
      return (v16 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v18 = sub_10000903C(&qword_1000A1DF0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  uint64_t v19 = sub_10000903C(&qword_1000A14F0);
  int v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[10];

  return v20(v22, a2, v21);
}

uint64_t sub_100067030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100067044);
}

uint64_t sub_100067044(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v9 = *(void *)(Entry - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = Entry;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_10000903C(&qword_1000A1DE8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  uint64_t v16 = sub_10000903C(&qword_1000A2498);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  uint64_t result = sub_10000903C(&qword_1000A24A0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[8] + 8) = -(char)a2;
    return result;
  }
  uint64_t v18 = sub_10000903C(&qword_1000A1DF0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  uint64_t v19 = sub_10000903C(&qword_1000A14F0);
  int v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[10];

  return v20(v22, a2, a2, v21);
}

uint64_t type metadata accessor for EpisodeListWidgetMain()
{
  uint64_t result = qword_1000A2500;
  if (!qword_1000A2500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100067308()
{
  type metadata accessor for UpNextEntry(319);
  if (v0 <= 0x3F)
  {
    sub_100067554(319, &qword_1000A1E60, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      sub_100067554(319, &qword_1000A2510, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
      if (v2 <= 0x3F)
      {
        sub_100067554(319, (unint64_t *)&unk_1000A2518, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
        if (v3 <= 0x3F)
        {
          sub_100067554(319, (unint64_t *)&unk_1000A1E68, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
          if (v4 <= 0x3F)
          {
            sub_100067554(319, (unint64_t *)&qword_1000A1560, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_100067554(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10008A660();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000675A8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1000675C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EpisodeListWidgetMain();
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10008B1F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - v10;
  sub_10006AD1C(&qword_1000A1DE0, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000905A0, (uint64_t)&v24 - v10);
  sub_10008B1D0();
  char v12 = sub_10008B1C0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v13(v11, v5);
  sub_10006B348(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
  if (v12)
  {
    uint64_t v14 = &v4[*(int *)(v2 + 32)];
    uint64_t v15 = *(void *)v14;
    char v16 = v14[8];
    sub_1000090AC(*(void *)v14, v16);
    char v17 = sub_10006A9AC(v15, v16);
    sub_100009700(v15, v16);
    char v18 = v17 ^ 1;
  }
  else
  {
    char v18 = 0;
  }
  sub_10006B3B0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
  uint64_t v19 = v1 + *(int *)(v2 + 32);
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_1000090AC(*(void *)v19, v21);
  char v22 = sub_10006A9AC(v20, v21);
  sub_100009700(v20, v21);
  double result = 7.0;
  if (v22) {
    double result = 16.0;
  }
  if (v18) {
    return 0.0;
  }
  return result;
}

uint64_t sub_10006784C()
{
  uint64_t v1 = v0;
  uint64_t v47 = sub_10008A770();
  uint64_t v2 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  unint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10008B220();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  uint64_t v52 = v6;
  __chkstk_darwin(v5);
  uint64_t v50 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = type metadata accessor for EpisodeListWidgetMain();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v16 = (char *)&v39 - v15;
  uint64_t v17 = sub_10008A540();
  uint64_t v48 = *(void *)(v17 - 8);
  uint64_t v49 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008A510();
  sub_10006B348(v0, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
  sub_10006B348(v0, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
  uint64_t v20 = sub_10008A530();
  os_log_type_t v21 = sub_10008B4E0();
  int v22 = v21;
  BOOL v23 = os_log_type_enabled(v20, v21);
  uint64_t v45 = v4;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = v2;
    uint64_t v25 = v24;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v54 = v42;
    *(_DWORD *)uint64_t v25 = 136446466;
    uint64_t v39 = v25 + 4;
    uint64_t v46 = v11;
    int v41 = v22;
    sub_10006AD1C(&qword_1000A1DD8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v10);
    sub_10006B410(&qword_1000A1CB0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    os_log_t v40 = v20;
    uint64_t v26 = v51;
    uint64_t v27 = sub_10008B670();
    uint64_t v43 = v1;
    unint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v26);
    uint64_t v53 = sub_10001C4D0(v27, v29, &v54);
    sub_10008B540();
    swift_bridgeObjectRelease();
    sub_10006B3B0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
    *(_WORD *)(v25 + 12) = 2082;
    sub_10006AD1C(&qword_1000A2490, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v4);
    uint64_t v30 = sub_10008B380();
    uint64_t v53 = sub_10001C4D0(v30, v31, &v54);
    sub_10008B540();
    swift_bridgeObjectRelease();
    sub_10006B3B0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
    uint64_t v20 = v40;
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v41, "Creating UpNextView with widgetFamily.%{public}s, DynamicTypeSize.%{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v44;
    swift_slowDealloc();
  }
  else
  {
    sub_10006B3B0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
    sub_10006B3B0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
  }

  (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v49);
  uint64_t v32 = v51;
  uint64_t v33 = v52;
  uint64_t v34 = v50;
  sub_10006AD1C(&qword_1000A1DD8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, v50);
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 88))(v34, v32);
  if (v35 == enum case for WidgetFamily.systemSmall(_:))
  {
    char v36 = 1;
    return v36 & 1;
  }
  if (v35 == enum case for WidgetFamily.systemMedium(_:))
  {
LABEL_14:
    char v36 = 0;
    return v36 & 1;
  }
  if (v35 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v37 = (uint64_t)v45;
    sub_10006AD1C(&qword_1000A2490, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v45);
    char v36 = sub_10008A760();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v37, v47);
    return v36 & 1;
  }
  char v36 = 0;
  if (v35 != enum case for WidgetFamily.systemExtraLarge(_:)
    && v35 != enum case for WidgetFamily.accessoryCircular(_:)
    && v35 != enum case for WidgetFamily.accessoryRectangular(_:)
    && v35 != enum case for WidgetFamily.accessoryInline(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
    goto LABEL_14;
  }
  return v36 & 1;
}

__n128 sub_100067F60@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v24 = a1;
  uint64_t v3 = sub_10008AFA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10008A650();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10008B1F0();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + *(int *)(type metadata accessor for EpisodeListWidgetMain() + 32);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_1000090AC(*(void *)v13, v15);
  char v16 = sub_10006A9AC(v14, v15);
  sub_100009700(v14, v15);
  sub_10006AD1C(&qword_1000A1DE0, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000905A0, (uint64_t)v12);
  BOOL v17 = *(void *)(v2 + *(int *)(type metadata accessor for UpNextEntry(0) + 32)) != 0;
  sub_10006AD1C(&qword_1000A14E8, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v9);
  sub_100088F1C(v16 & 1, v12, v17, (uint64_t)v9);
  sub_10000903C(&qword_1000A1978);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10008DB20;
  uint64_t v19 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v20(v6, enum case for Color.RGBColorSpace.sRGB(_:), v3);
  *(void *)(v18 + 32) = sub_10008AFE0();
  v20(v6, v19, v3);
  *(void *)(v18 + 40) = sub_10008AFE0();
  v25.n128_u64[0] = v18;
  sub_10008B420();
  sub_10008B110();
  sub_10008B180();
  sub_10008B190();
  sub_10008A710();
  __n128 result = v25;
  __n128 v22 = v26;
  BOOL v23 = v24;
  *uint64_t v24 = v25;
  v23[1] = v22;
  v23[2].n128_u64[0] = v27;
  return result;
}

uint64_t sub_100068330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v79 = a1;
  uint64_t v2 = sub_10008A650();
  __chkstk_darwin(v2 - 8);
  uint64_t v78 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10008B1F0();
  __chkstk_darwin(v4 - 8);
  uint64_t v77 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10008A7D0();
  uint64_t v75 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v74 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10008B220();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v89 = v7;
  uint64_t v90 = v8;
  __chkstk_darwin(v7);
  uint64_t v87 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_10000903C(&qword_1000A2560);
  __chkstk_darwin(v93);
  long long v92 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for EpisodeListWidgetMain();
  uint64_t v94 = *(void *)(v88 - 8);
  uint64_t v86 = *(char **)(v94 + 64);
  __chkstk_darwin(v88);
  uint64_t v85 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10008AB70();
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10000903C(&qword_1000A2568);
  __chkstk_darwin(v80);
  char v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000903C(&qword_1000A2570);
  uint64_t v83 = *(void *)(v17 - 8);
  uint64_t v84 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000903C(&qword_1000A2578);
  __chkstk_darwin(v20);
  __n128 v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10000903C(&qword_1000A2580);
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  long long v91 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10000903C(&qword_1000A2588);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v71 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10000903C(&qword_1000A2590);
  __chkstk_darwin(v69);
  uint64_t v70 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068F14((uint64_t)v16);
  sub_10008AB60();
  uint64_t v95 = v1;
  sub_10008B130();
  sub_10000903C(&qword_1000A2598);
  sub_10006A1C0();
  sub_10006A3F4();
  uint64_t v26 = v1;
  sub_10008AF00();
  unint64_t v27 = v14;
  uint64_t v28 = (uint64_t)v87;
  (*(void (**)(char *, uint64_t))(v81 + 8))(v27, v82);
  sub_100015614((uint64_t)v16, &qword_1000A2568);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v85;
  sub_10006B348(v1, v85, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
  unint64_t v31 = (*(unsigned __int8 *)(v94 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v32 + v31;
  uint64_t v34 = v89;
  sub_10006B2E0(v30, v33, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMain);
  uint64_t v35 = v83;
  uint64_t v36 = v84;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v22, v19, v84);
  uint64_t v94 = v20;
  uint64_t v37 = *(int *)(v20 + 36);
  uint64_t v38 = v90;
  uint64_t v86 = v22;
  uint64_t v39 = (uint64_t *)&v22[v37];
  *uint64_t v39 = KeyPath;
  v39[1] = (uint64_t)sub_10006A93C;
  v39[2] = v32;
  os_log_t v40 = v19;
  uint64_t v41 = v88;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v40, v36);
  sub_10006AD1C(&qword_1000A1DD8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, v28);
  int v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 88))(v28, v34);
  LODWORD(v22) = enum case for WidgetFamily.systemSmall(_:);
  uint64_t v43 = sub_10008A770();
  uint64_t v44 = *(void (**)(char *, void, uint64_t))(*(void *)(v43 - 8) + 104);
  if (v42 == v22 || v42 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v45 = (uint64_t)v92;
    v44(v92, enum case for DynamicTypeSize.xxxLarge(_:), v43);
  }
  else
  {
    uint64_t v45 = (uint64_t)v92;
    v44(v92, enum case for DynamicTypeSize.accessibility5(_:), v43);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v28, v34);
  }
  sub_10006B410(&qword_1000A25F8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_10008B310();
  uint64_t v47 = v93;
  uint64_t v48 = v91;
  if (result)
  {
    unint64_t v49 = sub_10006ABEC();
    uint64_t v50 = sub_100015428(&qword_1000A2618, &qword_1000A2560);
    uint64_t v51 = (uint64_t)v86;
    sub_10008AEB0();
    sub_100015614(v45, &qword_1000A2560);
    sub_100015614(v51, &qword_1000A2578);
    uint64_t v52 = v74;
    if (*(unsigned char *)(v26 + 16) == 2) {
      sub_10006AD1C(&qword_1000A2488, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x80000001000905C0, v74);
    }
    else {
      sub_10008A7C0();
    }
    uint64_t v96 = v94;
    uint64_t v97 = v47;
    unint64_t v98 = v49;
    uint64_t v99 = v50;
    swift_getOpaqueTypeConformance2();
    uint64_t v53 = v71;
    uint64_t v54 = v68;
    sub_10008AF80();
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v52, v76);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v48, v54);
    uint64_t v55 = swift_getKeyPath();
    uint64_t v56 = v26 + *(int *)(v41 + 32);
    uint64_t v57 = *(void *)v56;
    char v58 = *(unsigned char *)(v56 + 8);
    sub_1000090AC(*(void *)v56, v58);
    char v59 = sub_10006A9AC(v57, v58);
    sub_100009700(v57, v58);
    uint64_t v60 = v77;
    sub_10006AD1C(&qword_1000A1DE0, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000905A0, (uint64_t)v77);
    BOOL v61 = *(void *)(v26 + *(int *)(type metadata accessor for UpNextEntry(0) + 32)) != 0;
    uint64_t v62 = v78;
    sub_10006AD1C(&qword_1000A14E8, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, v78);
    LOBYTE(v57) = sub_100088F1C(v59 & 1, v60, v61, v62);
    uint64_t v63 = v72;
    uint64_t v64 = (uint64_t)v70;
    uint64_t v65 = v73;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v70, v53, v73);
    uint64_t v66 = v64 + *(int *)(v69 + 36);
    *(void *)uint64_t v66 = v55;
    *(unsigned char *)(v66 + 8) = v57;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v53, v65);
    return sub_10001547C(v64, v79, &qword_1000A2590);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100068F14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = type metadata accessor for EpisodeListWidgetMedium();
  __chkstk_darwin(v57);
  uint64_t v52 = (uint64_t)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000903C(&qword_1000A2630);
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A25D0);
  __chkstk_darwin(v5);
  char v58 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for EpisodeListWidgetXL();
  __chkstk_darwin(v55);
  uint64_t v51 = (uint64_t)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for EpisodeListWidgetLarge();
  __chkstk_darwin(v63);
  uint64_t v53 = (uint64_t)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10008B220();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v50 - v14;
  uint64_t v64 = sub_10000903C(&qword_1000A2638);
  __chkstk_darwin(v64);
  uint64_t v66 = (uint64_t)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10000903C(&qword_1000A2640);
  __chkstk_darwin(v60);
  uint64_t v61 = (uint64_t)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10000903C(&qword_1000A25B0);
  __chkstk_darwin(v65);
  uint64_t v62 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for EpisodeListWidgetSingle();
  __chkstk_darwin(v59);
  uint64_t v20 = (char *)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v50 - v22;
  uint64_t v24 = v1;
  uint64_t result = sub_10006784C();
  if ((result & 1) == 0)
  {
    v50[3] = v5;
    v50[4] = a1;
    v50[1] = v1 + *(int *)(type metadata accessor for EpisodeListWidgetMain() + 20);
    sub_10006AD1C(&qword_1000A1DD8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v15);
    v50[0] = *(void *)(v10 + 104);
    ((void (*)(char *, void, uint64_t))v50[0])(v12, enum case for WidgetFamily.systemLarge(_:), v9);
    sub_10006B410((unint64_t *)&qword_1000A1FC8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    sub_10008B3E0();
    sub_10008B3E0();
    uint64_t v37 = v67;
    uint64_t v36 = v68;
    uint64_t v38 = *(void (**)(char *, uint64_t))(v10 + 8);
    v38(v12, v9);
    v50[2] = v10 + 8;
    v38(v15, v9);
    if (v36 == v37)
    {
      uint64_t v39 = v53;
      sub_10006B348(v24, v53, type metadata accessor for UpNextEntry);
      *(double *)(v39 + *(int *)(v63 + 20)) = sub_1000675C4();
      sub_10006B348(v39, v61, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetLarge);
      swift_storeEnumTagMultiPayload();
      sub_10006B410(&qword_1000A25B8, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetSingle);
      sub_10006B410(&qword_1000A25C0, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetLarge);
      uint64_t v40 = (uint64_t)v62;
      sub_10008AAE0();
      sub_1000155B0(v40, v66, &qword_1000A25B0);
      swift_storeEnumTagMultiPayload();
      sub_10006A23C();
      sub_10006A318();
      sub_10008AAE0();
      sub_100015614(v40, &qword_1000A25B0);
      uint64_t v41 = type metadata accessor for EpisodeListWidgetLarge;
    }
    else
    {
      sub_10006AD1C(&qword_1000A1DD8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v15);
      ((void (*)(char *, void, uint64_t))v50[0])(v12, enum case for WidgetFamily.systemExtraLarge(_:), v9);
      sub_10008B3E0();
      sub_10008B3E0();
      uint64_t v43 = v67;
      uint64_t v42 = v68;
      v38(v12, v9);
      v38(v15, v9);
      if (v42 == v43)
      {
        uint64_t v39 = v51;
        sub_10006B348(v24, v51, type metadata accessor for UpNextEntry);
        double v44 = sub_1000675C4();
        uint64_t v45 = (uint64_t)v56;
        *(double *)(v39 + *(int *)(v55 + 20)) = v44;
        sub_10006B348(v39, v45, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetXL);
        swift_storeEnumTagMultiPayload();
        sub_10006B410(&qword_1000A25D8, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetXL);
        sub_10006B410(&qword_1000A25E0, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetMedium);
        uint64_t v46 = (uint64_t)v58;
        sub_10008AAE0();
        sub_1000155B0(v46, v66, &qword_1000A25D0);
        swift_storeEnumTagMultiPayload();
        sub_10006A23C();
        sub_10006A318();
        sub_10008AAE0();
        sub_100015614(v46, &qword_1000A25D0);
        uint64_t v41 = type metadata accessor for EpisodeListWidgetXL;
      }
      else
      {
        uint64_t v39 = v52;
        sub_10006B348(v24, v52, type metadata accessor for UpNextEntry);
        double v47 = sub_1000675C4();
        uint64_t v48 = (uint64_t)v56;
        *(double *)(v39 + *(int *)(v57 + 20)) = v47;
        sub_10006B348(v39, v48, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetMedium);
        swift_storeEnumTagMultiPayload();
        sub_10006B410(&qword_1000A25D8, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetXL);
        sub_10006B410(&qword_1000A25E0, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetMedium);
        uint64_t v49 = (uint64_t)v58;
        sub_10008AAE0();
        sub_1000155B0(v49, v66, &qword_1000A25D0);
        swift_storeEnumTagMultiPayload();
        sub_10006A23C();
        sub_10006A318();
        sub_10008AAE0();
        sub_100015614(v49, &qword_1000A25D0);
        uint64_t v41 = type metadata accessor for EpisodeListWidgetMedium;
      }
    }
    uint64_t v34 = v41;
    uint64_t v35 = v39;
    return sub_10006B3B0(v35, (uint64_t (*)(void))v34);
  }
  uint64_t v26 = *(void *)(v1 + 24);
  if (*(void *)(v26 + 16))
  {
    uint64_t v27 = *(void *)(type metadata accessor for UpNextEntry.Episode(0) - 8);
    sub_10006B348(v26 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)), (uint64_t)v20, type metadata accessor for UpNextEntry.Episode);
    double v28 = sub_1000675C4();
    unint64_t v29 = (int *)v59;
    *(double *)&v20[*(int *)(v59 + 20)] = v28;
    v20[v29[6]] = *(unsigned char *)(v1 + 16);
    uint64_t v30 = (uint64_t *)&v20[v29[7]];
    *uint64_t v30 = swift_getKeyPath();
    sub_10000903C(&qword_1000A1DD8);
    swift_storeEnumTagMultiPayload();
    unint64_t v31 = &v20[v29[8]];
    *(void *)unint64_t v31 = swift_getKeyPath();
    v31[8] = 0;
    uint64_t v32 = (uint64_t *)&v20[v29[9]];
    *uint64_t v32 = swift_getKeyPath();
    sub_10000903C(&qword_1000A1DE0);
    swift_storeEnumTagMultiPayload();
    sub_10006B2E0((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetSingle);
    sub_10006B348((uint64_t)v23, v61, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetSingle);
    swift_storeEnumTagMultiPayload();
    sub_10006B410(&qword_1000A25B8, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetSingle);
    sub_10006B410(&qword_1000A25C0, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetLarge);
    uint64_t v33 = (uint64_t)v62;
    sub_10008AAE0();
    sub_1000155B0(v33, v66, &qword_1000A25B0);
    swift_storeEnumTagMultiPayload();
    sub_10006A23C();
    sub_10006A318();
    sub_10008AAE0();
    sub_100015614(v33, &qword_1000A25B0);
    uint64_t v34 = type metadata accessor for EpisodeListWidgetSingle;
    uint64_t v35 = (uint64_t)v23;
    return sub_10006B3B0(v35, (uint64_t (*)(void))v34);
  }
  __break(1u);
  return result;
}

double sub_100069BA0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10008B030();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(a1 + *(int *)(type metadata accessor for UpNextEntry(0) + 32));
  if (v8)
  {
    id v9 = v8;
    sub_10008B010();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v10 = sub_10008B060();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v15 = v10;
    long long v16 = 0u;
    long long v17 = 0u;
    char v18 = 0;
    sub_10006A470();
    swift_retain();
    sub_10008AAE0();
    swift_release();
  }
  else
  {
    sub_100067F60((__n128 *)v19);
    uint64_t v15 = *(void *)v19;
    long long v16 = *(_OWORD *)&v19[8];
    long long v17 = *(_OWORD *)&v19[24];
    char v18 = 1;
    sub_10006A470();
    sub_10008AAE0();
  }
  double result = *(double *)v19;
  long long v12 = *(_OWORD *)&v19[16];
  uint64_t v13 = *(void *)&v19[32];
  char v14 = v20;
  *(_OWORD *)a2 = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 16) = v12;
  *(void *)(a2 + 32) = v13;
  *(unsigned char *)(a2 + 40) = v14;
  return result;
}

uint64_t sub_100069DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v3 = sub_10000903C(&qword_1000A2628);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v25 = (uint64_t)&v24 - v7;
  uint64_t v8 = sub_10008A650();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10008B1F0();
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2 + *(int *)(type metadata accessor for EpisodeListWidgetMain() + 32);
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_1000090AC(*(void *)v15, v17);
  char v18 = sub_10006A9AC(v16, v17);
  sub_100009700(v16, v17);
  sub_10006AD1C(&qword_1000A1DE0, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000905A0, (uint64_t)v14);
  BOOL v19 = *(void *)(a2 + *(int *)(type metadata accessor for UpNextEntry(0) + 32)) != 0;
  sub_10006AD1C(&qword_1000A14E8, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v11);
  if (sub_100088F1C(v18 & 1, v14, v19, (uint64_t)v11) > 2u)
  {
    uint64_t v20 = 1;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v5, enum case for ColorScheme.dark(_:), v8);
    uint64_t v20 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, v20, 1, v8);
  uint64_t v21 = v25;
  sub_10001547C((uint64_t)v5, v25, &qword_1000A2628);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v21, 1, v8) == 1) {
    return sub_100015614(v21, &qword_1000A2628);
  }
  uint64_t v23 = v24;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v24, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v23, v21, v8);
}

uint64_t sub_10006A118@<X0>(unsigned char *a1@<X8>)
{
  sub_10006B27C();
  uint64_t result = sub_10008A990();
  *a1 = v3;
  return result;
}

uint64_t sub_10006A168()
{
  return sub_10008A9A0();
}

double sub_10006A1B8@<D0>(uint64_t a1@<X8>)
{
  return sub_100069BA0(*(void *)(v1 + 16), a1);
}

unint64_t sub_10006A1C0()
{
  unint64_t result = qword_1000A25A0;
  if (!qword_1000A25A0)
  {
    sub_10000E49C(&qword_1000A2568);
    sub_10006A23C();
    sub_10006A318();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A25A0);
  }
  return result;
}

unint64_t sub_10006A23C()
{
  unint64_t result = qword_1000A25A8;
  if (!qword_1000A25A8)
  {
    sub_10000E49C(&qword_1000A25B0);
    sub_10006B410(&qword_1000A25B8, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetSingle);
    sub_10006B410(&qword_1000A25C0, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetLarge);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A25A8);
  }
  return result;
}

unint64_t sub_10006A318()
{
  unint64_t result = qword_1000A25C8;
  if (!qword_1000A25C8)
  {
    sub_10000E49C(&qword_1000A25D0);
    sub_10006B410(&qword_1000A25D8, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetXL);
    sub_10006B410(&qword_1000A25E0, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetMedium);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A25C8);
  }
  return result;
}

unint64_t sub_10006A3F4()
{
  unint64_t result = qword_1000A25E8;
  if (!qword_1000A25E8)
  {
    sub_10000E49C(&qword_1000A2598);
    sub_10006A470();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A25E8);
  }
  return result;
}

unint64_t sub_10006A470()
{
  unint64_t result = qword_1000A25F0;
  if (!qword_1000A25F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A25F0);
  }
  return result;
}

uint64_t sub_10006A4CC()
{
  uint64_t v1 = (int *)type metadata accessor for EpisodeListWidgetMain();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v27 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v6 = v0 + v3 + Entry[7];
  uint64_t v7 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = v0 + v3 + Entry[9];
  uint64_t v9 = sub_10008A170();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v11) {
    v12(v8, v9);
  }
  v12(v4 + Entry[10], v9);
  uint64_t v13 = v4 + Entry[11];
  uint64_t v14 = sub_10008B290();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v16 = v4 + v1[5];
  sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_10008B220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }
  uint64_t v18 = v4 + v1[6];
  sub_10000903C(&qword_1000A2488);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_10008A7D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  else
  {
    swift_release();
  }
  uint64_t v20 = v4 + v1[7];
  sub_10000903C(&qword_1000A2490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_10008A770();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  else
  {
    swift_release();
  }
  sub_100009700(*(void *)(v4 + v1[8]), *(unsigned char *)(v4 + v1[8] + 8));
  uint64_t v22 = v4 + v1[9];
  sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_10008B1F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  else
  {
    swift_release();
  }
  uint64_t v24 = v4 + v1[10];
  sub_10000903C(&qword_1000A14E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_10008A650();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v27, v2 | 7);
}

uint64_t sub_10006A93C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for EpisodeListWidgetMain() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100069DB8(a1, v4);
}

uint64_t sub_10006A9AC(uint64_t a1, char a2)
{
  uint64_t v4 = sub_10008A980();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_10008B4D0();
  uint64_t v9 = sub_10008AB90();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    int v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)int v11 = 136315138;
    uint64_t v13 = sub_10001C4D0(1819242306, 0xE400000000000000, &v14);
    sub_10008B540();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10008A970();
  swift_getAtKeyPath();
  sub_100009700(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_10006ABB0@<X0>(uint64_t a1@<X8>)
{
  return sub_10006AD1C(&qword_1000A1DD8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

unint64_t sub_10006ABEC()
{
  unint64_t result = qword_1000A2600;
  if (!qword_1000A2600)
  {
    sub_10000E49C(&qword_1000A2578);
    sub_10000E49C(&qword_1000A2568);
    sub_10000E49C(&qword_1000A2598);
    sub_10006A1C0();
    sub_10006A3F4();
    swift_getOpaqueTypeConformance2();
    sub_100015428(&qword_1000A2608, &qword_1000A2610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2600);
  }
  return result;
}

uint64_t sub_10006ACE4@<X0>(uint64_t a1@<X8>)
{
  return sub_10006AD1C(&qword_1000A1DE0, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000905A0, a1);
}

uint64_t sub_10006AD1C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_10008A980();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000903C(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000155B0(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_10008B4D0();
    uint64_t v21 = sub_10008AB90();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_10001C4D0(v27, v25, &v29);
      sub_10008B540();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10008A970();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_10006AFD4@<X0>(unsigned char *a1@<X8>)
{
  sub_10006B27C();
  uint64_t result = sub_10008A990();
  *a1 = v3;
  return result;
}

uint64_t sub_10006B024()
{
  return sub_10008A9A0();
}

uint64_t sub_10006B070(uint64_t a1, char a2)
{
  uint64_t v4 = sub_10008A980();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_10008B4D0();
    uint64_t v9 = sub_10008AB90();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_10001C4D0(0xD000000000000023, 0x80000001000905E0, &v14);
      sub_10008B540();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10008A970();
    swift_getAtKeyPath();
    sub_100009700(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

unint64_t sub_10006B27C()
{
  unint64_t result = qword_1000A2620;
  if (!qword_1000A2620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2620);
  }
  return result;
}

uint64_t sub_10006B2E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006B348(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006B3B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006B410(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006B45C()
{
  unint64_t result = qword_1000A2648;
  if (!qword_1000A2648)
  {
    sub_10000E49C(&qword_1000A2590);
    sub_10000E49C(&qword_1000A2580);
    sub_10000E49C(&qword_1000A2578);
    sub_10000E49C(&qword_1000A2560);
    sub_10006ABEC();
    sub_100015428(&qword_1000A2618, &qword_1000A2560);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100015428(&qword_1000A2650, &qword_1000A2658);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2648);
  }
  return result;
}

uint64_t *sub_10006B5B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = sub_10008B220();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10006B704(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_10008B220();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_10006B780(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10008B220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10006B88C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10006B9A8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10008B220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10006B9A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeViewStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for EpisodeViewStyle()
{
  uint64_t result = qword_1000A26D0;
  if (!qword_1000A26D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_10006BA50(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10008B220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10006BB5C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10006B9A8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10008B220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10006BC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_10006BCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_10006BCCC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10006BCDC()
{
  uint64_t result = sub_10008B220();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10006BD64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10008AC90();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EpisodeViewStyle();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17 - v10;
  sub_10006BFB8(v1, (uint64_t)&v17 - v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10006BFB8((uint64_t)v11, (uint64_t)v8);
    uint64_t v12 = sub_10008B220();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v8, v12) == enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t v14 = sub_10008ACA0();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
      uint64_t v14 = sub_10008AC40();
    }
    uint64_t v15 = v14;
  }
  else
  {
    sub_10008AC30();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v2);
    uint64_t v15 = sub_10008ACB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_10006B9A8((uint64_t)v11);
  return v15;
}

uint64_t sub_10006BFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeViewStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006C01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008B220();
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = type metadata accessor for EpisodeViewStyle();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = sub_10000903C(&qword_1000A2708);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v18[*(int *)(v19 + 56)];
  sub_10006BFB8(a1, (uint64_t)v18);
  sub_10006BFB8(a2, v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_10006BFB8((uint64_t)v18, (uint64_t)v15);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v25 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v9, v20, v4);
      sub_10006C408();
      sub_10008B3E0();
      sub_10008B3E0();
      BOOL v23 = v31 == v30;
      uint64_t v26 = *(void (**)(char *, uint64_t))(v25 + 8);
      v26(v9, v4);
      v26(v15, v4);
      goto LABEL_12;
    }
    uint64_t v12 = v15;
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_10006BFB8((uint64_t)v18, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v6, v20, v4);
      sub_10006C408();
      sub_10008B3E0();
      sub_10008B3E0();
      BOOL v23 = v31 == v30;
      uint64_t v24 = *(void (**)(char *, uint64_t))(v22 + 8);
      v24(v6, v4);
      v24(v12, v4);
LABEL_12:
      sub_10006B9A8((uint64_t)v18);
      return v23;
    }
LABEL_7:
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v4);
LABEL_10:
    sub_10006C3A8((uint64_t)v18);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload() != 2) {
    goto LABEL_10;
  }
  sub_10006B9A8((uint64_t)v18);
  return 1;
}

uint64_t sub_10006C3A8(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A2708);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10006C408()
{
  unint64_t result = qword_1000A1FC8;
  if (!qword_1000A1FC8)
  {
    sub_10008B220();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1FC8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetEmptyMessage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetEmptyMessage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006C5BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10006C5E4(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetEmptyMessage()
{
  return &type metadata for WidgetEmptyMessage;
}

unint64_t sub_10006C604()
{
  unint64_t result = qword_1000A2710;
  if (!qword_1000A2710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2710);
  }
  return result;
}

BOOL sub_10006C658(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t *sub_10006C670(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    uint64_t *v3 = *a2;
    int v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unsigned int v6 = (char *)a1 + v5;
    BOOL v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for EpisodeViewStyle();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v9 = sub_10008B220();
      (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v3;
}

uint64_t sub_10006C7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  type metadata accessor for EpisodeViewStyle();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v4 = sub_10008B220();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v2, v4);
  }
  return result;
}

unsigned char *sub_10006C874(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  unsigned int v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for EpisodeViewStyle();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_10008B220();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_10006C998(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = &a1[v4];
    unsigned int v6 = &a2[v4];
    sub_10006B9A8((uint64_t)&a1[v4]);
    uint64_t v7 = type metadata accessor for EpisodeViewStyle();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v8 = sub_10008B220();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

unsigned char *sub_10006CACC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  unsigned int v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for EpisodeViewStyle();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_10008B220();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_10006CBF0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = &a1[v4];
    unsigned int v6 = &a2[v4];
    sub_10006B9A8((uint64_t)&a1[v4]);
    uint64_t v7 = type metadata accessor for EpisodeViewStyle();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v8 = sub_10008B220();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10006CD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006CD38);
}

uint64_t sub_10006CD38(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for EpisodeViewStyle();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10006CDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006CDF4);
}

unsigned char *sub_10006CDF4(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for EpisodeViewStyle();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for WidgetEmptyText()
{
  uint64_t result = qword_1000A2770;
  if (!qword_1000A2770) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006CEE4()
{
  uint64_t result = type metadata accessor for EpisodeViewStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10006CF7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006CF98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v2 = sub_10008B160();
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  __chkstk_darwin(v2);
  uint64_t v49 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10008AFA0();
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10000903C(&qword_1000A27A8);
  __chkstk_darwin(v45);
  unsigned int v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10000903C(&qword_1000A27B0);
  __chkstk_darwin(v48);
  double v47 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10000903C(&qword_1000A27B8);
  uint64_t v8 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10000903C(&qword_1000A27C0);
  __chkstk_darwin(v36);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10000903C(&qword_1000A27C8);
  __chkstk_darwin(v37);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000903C(&qword_1000A27D0);
  uint64_t v40 = *(void *)(v15 - 8);
  uint64_t v41 = v15;
  __chkstk_darwin(v15);
  uint64_t v39 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v1;
  sub_10008AA20();
  uint64_t v17 = sub_10008ADD0();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v53 = v17;
  uint64_t v54 = v18;
  char v55 = v20 & 1;
  uint64_t v56 = v22;
  sub_10008AEC0();
  sub_10001546C(v17, v19, v21);
  swift_bridgeObjectRelease();
  type metadata accessor for WidgetEmptyText();
  uint64_t v23 = sub_10006BD64();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = v38;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v38);
  uint64_t v26 = (uint64_t *)&v12[*(int *)(v36 + 36)];
  uint64_t *v26 = KeyPath;
  v26[1] = v23;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
  uint64_t v27 = swift_getKeyPath();
  sub_1000155B0((uint64_t)v12, (uint64_t)v14, &qword_1000A27C0);
  uint64_t v28 = (uint64_t *)&v14[*(int *)(v37 + 36)];
  uint64_t *v28 = v27;
  v28[1] = 0x3FE0000000000000;
  sub_100015614((uint64_t)v12, &qword_1000A27C0);
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, enum case for Color.RGBColorSpace.sRGB(_:), v46);
  uint64_t v29 = sub_10008AFE0();
  sub_1000155B0((uint64_t)v14, (uint64_t)v6, &qword_1000A27C8);
  *(void *)&v6[*(int *)(v45 + 36)] = v29;
  uint64_t v31 = v49;
  uint64_t v30 = v50;
  uint64_t v32 = v51;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, enum case for BlendMode.plusLighter(_:), v51);
  uint64_t v33 = (uint64_t)v47;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(&v47[*(int *)(v48 + 36)], v31, v32);
  sub_1000155B0((uint64_t)v6, v33, &qword_1000A27A8);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  sub_100015614((uint64_t)v6, &qword_1000A27A8);
  sub_100015614((uint64_t)v14, &qword_1000A27C8);
  sub_10006D6C0();
  uint64_t v34 = v39;
  sub_10008AE50();
  sub_100015614(v33, &qword_1000A27B0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v52, v34, v41);
}

uint64_t sub_10006D618@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10008A8A0();
  *a1 = v3;
  return result;
}

uint64_t sub_10006D644@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10008A8A0();
  *a1 = v3;
  return result;
}

uint64_t sub_10006D670()
{
  return sub_10008A8B0();
}

uint64_t sub_10006D698()
{
  return sub_10008A8B0();
}

unint64_t sub_10006D6C0()
{
  unint64_t result = qword_1000A27D8;
  if (!qword_1000A27D8)
  {
    sub_10000E49C(&qword_1000A27B0);
    sub_10006D73C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A27D8);
  }
  return result;
}

unint64_t sub_10006D73C()
{
  unint64_t result = qword_1000A27E0;
  if (!qword_1000A27E0)
  {
    sub_10000E49C(&qword_1000A27A8);
    sub_10006D7DC();
    sub_100015428(&qword_1000A2818, &qword_1000A2820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A27E0);
  }
  return result;
}

unint64_t sub_10006D7DC()
{
  unint64_t result = qword_1000A27E8;
  if (!qword_1000A27E8)
  {
    sub_10000E49C(&qword_1000A27C8);
    sub_10006D87C();
    sub_100015428(&qword_1000A2808, &qword_1000A2810);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A27E8);
  }
  return result;
}

unint64_t sub_10006D87C()
{
  unint64_t result = qword_1000A27F0;
  if (!qword_1000A27F0)
  {
    sub_10000E49C(&qword_1000A27C0);
    swift_getOpaqueTypeConformance2();
    sub_100015428(&qword_1000A27F8, &qword_1000A2800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A27F0);
  }
  return result;
}

uint64_t sub_10006D94C()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10006D9A8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    a1[10] = a2[10];
    id v163 = (int *)type metadata accessor for UpNextEntry.Episode(0);
    uint64_t v11 = v163[10];
    __dst = (char *)a1 + v11;
    id v158 = a1;
    id v159 = a2;
    uint64_t v12 = (char *)a2 + v11;
    uint64_t v13 = sub_10008A170();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v162 = v15;
    uint64_t v160 = v16;
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000903C(&qword_1000A1038);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v16);
    }
    char v20 = v163;
    uint64_t v21 = v163[11];
    uint64_t v19 = v158;
    uint64_t v22 = (void *)((char *)v158 + v21);
    uint64_t v23 = (void *)((char *)v159 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v163[12];
    uint64_t v26 = (void *)((char *)v158 + v25);
    uint64_t v27 = (void *)((char *)v159 + v25);
    uint64_t v28 = (int *)sub_10008A340();
    __dsta = (void *)*((void *)v28 - 1);
    uint64_t v29 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
    swift_bridgeObjectRetain();
    if (v29(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1040);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v27[1];
      void *v26 = *v27;
      v26[1] = v31;
      int v32 = *((unsigned __int8 *)v27 + 32);
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
        *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
      }
      else
      {
        uint64_t v33 = v27[2];
        uint64_t v34 = v27[3];
        sub_100009080(v33, v34, v32);
        v26[2] = v33;
        v26[3] = v34;
        *((unsigned char *)v26 + 32) = v32;
      }
      *(_OWORD *)(v26 + 5) = *(_OWORD *)(v27 + 5);
      uint64_t v35 = (id *)(v27 + 7);
      int v36 = *((unsigned __int8 *)v27 + 64);
      if (v36 == 255)
      {
        v26[7] = *v35;
        *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
      }
      else
      {
        id v37 = *v35;
        sub_100009098(*v35, *((unsigned char *)v27 + 64));
        v26[7] = v37;
        *((unsigned char *)v26 + 64) = v36;
      }
      uint64_t v38 = (id *)(v27 + 9);
      int v39 = *((unsigned __int8 *)v27 + 80);
      if (v39 == 255)
      {
        v26[9] = *v38;
        *((unsigned char *)v26 + 80) = *((unsigned char *)v27 + 80);
      }
      else
      {
        id v40 = *v38;
        sub_100009098(*v38, *((unsigned char *)v27 + 80));
        v26[9] = v40;
        *((unsigned char *)v26 + 80) = v39;
      }
      uint64_t v41 = (id *)(v27 + 11);
      int v42 = *((unsigned __int8 *)v27 + 96);
      if (v42 == 255)
      {
        v26[11] = *v41;
        *((unsigned char *)v26 + 96) = *((unsigned char *)v27 + 96);
      }
      else
      {
        id v43 = *v41;
        sub_100009098(*v41, *((unsigned char *)v27 + 96));
        v26[11] = v43;
        *((unsigned char *)v26 + 96) = v42;
      }
      uint64_t v44 = (id *)(v27 + 13);
      int v45 = *((unsigned __int8 *)v27 + 112);
      if (v45 == 255)
      {
        v26[13] = *v44;
        *((unsigned char *)v26 + 112) = *((unsigned char *)v27 + 112);
      }
      else
      {
        id v46 = *v44;
        sub_100009098(*v44, *((unsigned char *)v27 + 112));
        v26[13] = v46;
        *((unsigned char *)v26 + 112) = v45;
      }
      double v47 = (id *)(v27 + 15);
      int v48 = *((unsigned __int8 *)v27 + 128);
      if (v48 == 255)
      {
        v26[15] = *v47;
        *((unsigned char *)v26 + 128) = *((unsigned char *)v27 + 128);
      }
      else
      {
        id v49 = *v47;
        sub_100009098(*v47, *((unsigned char *)v27 + 128));
        v26[15] = v49;
        *((unsigned char *)v26 + 128) = v48;
      }
      char v20 = v163;
      *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
      uint64_t v50 = v28[11];
      uint64_t v51 = (char *)v26 + v50;
      uint64_t v52 = (char *)v27 + v50;
      uint64_t v53 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v28[12];
      char v55 = (void *)((char *)v26 + v54);
      uint64_t v56 = (void *)((char *)v27 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      *((unsigned char *)v26 + v28[13]) = *((unsigned char *)v27 + v28[13]);
      *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
      *((unsigned char *)v26 + v28[15]) = *((unsigned char *)v27 + v28[15]);
      uint64_t v58 = v28[16];
      uint64_t v59 = (void *)((char *)v26 + v58);
      uint64_t v60 = (void *)((char *)v27 + v58);
      uint64_t v61 = v60[1];
      void *v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(v26, 0, 1, v28);
    }
    uint64_t v63 = v20[13];
    uint64_t v64 = (void *)((char *)v158 + v63);
    uint64_t v65 = (void *)((char *)v159 + v63);
    if (v29((void *)((char *)v159 + v63), 1, v28))
    {
      uint64_t v66 = sub_10000903C(&qword_1000A1040);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v14;
    }
    else
    {
      uint64_t v68 = v65[1];
      void *v64 = *v65;
      v64[1] = v68;
      int v69 = *((unsigned __int8 *)v65 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = v14;
      if (v69 == 255)
      {
        *((_OWORD *)v64 + 1) = *((_OWORD *)v65 + 1);
        *((unsigned char *)v64 + 32) = *((unsigned char *)v65 + 32);
      }
      else
      {
        uint64_t v70 = v65[2];
        uint64_t v71 = v65[3];
        sub_100009080(v70, v71, v69);
        v64[2] = v70;
        v64[3] = v71;
        *((unsigned char *)v64 + 32) = v69;
      }
      *(_OWORD *)(v64 + 5) = *(_OWORD *)(v65 + 5);
      uint64_t v72 = (id *)(v65 + 7);
      int v73 = *((unsigned __int8 *)v65 + 64);
      if (v73 == 255)
      {
        v64[7] = *v72;
        *((unsigned char *)v64 + 64) = *((unsigned char *)v65 + 64);
      }
      else
      {
        id v74 = *v72;
        sub_100009098(*v72, *((unsigned char *)v65 + 64));
        v64[7] = v74;
        *((unsigned char *)v64 + 64) = v73;
      }
      uint64_t v75 = (id *)(v65 + 9);
      int v76 = *((unsigned __int8 *)v65 + 80);
      if (v76 == 255)
      {
        v64[9] = *v75;
        *((unsigned char *)v64 + 80) = *((unsigned char *)v65 + 80);
      }
      else
      {
        id v77 = *v75;
        sub_100009098(*v75, *((unsigned char *)v65 + 80));
        v64[9] = v77;
        *((unsigned char *)v64 + 80) = v76;
      }
      uint64_t v78 = (id *)(v65 + 11);
      int v79 = *((unsigned __int8 *)v65 + 96);
      if (v79 == 255)
      {
        v64[11] = *v78;
        *((unsigned char *)v64 + 96) = *((unsigned char *)v65 + 96);
      }
      else
      {
        id v80 = *v78;
        sub_100009098(*v78, *((unsigned char *)v65 + 96));
        v64[11] = v80;
        *((unsigned char *)v64 + 96) = v79;
      }
      uint64_t v81 = (id *)(v65 + 13);
      int v82 = *((unsigned __int8 *)v65 + 112);
      if (v82 == 255)
      {
        v64[13] = *v81;
        *((unsigned char *)v64 + 112) = *((unsigned char *)v65 + 112);
      }
      else
      {
        id v83 = *v81;
        sub_100009098(*v81, *((unsigned char *)v65 + 112));
        v64[13] = v83;
        *((unsigned char *)v64 + 112) = v82;
      }
      uint64_t v84 = (id *)(v65 + 15);
      int v85 = *((unsigned __int8 *)v65 + 128);
      if (v85 == 255)
      {
        v64[15] = *v84;
        *((unsigned char *)v64 + 128) = *((unsigned char *)v65 + 128);
      }
      else
      {
        id v86 = *v84;
        sub_100009098(*v84, *((unsigned char *)v65 + 128));
        v64[15] = v86;
        *((unsigned char *)v64 + 128) = v85;
      }
      char v20 = v163;
      *((unsigned char *)v64 + 129) = *((unsigned char *)v65 + 129);
      uint64_t v87 = v28[11];
      uint64_t v88 = (char *)v64 + v87;
      uint64_t v89 = (char *)v65 + v87;
      uint64_t v90 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      uint64_t v91 = v28[12];
      long long v92 = (void *)((char *)v64 + v91);
      uint64_t v93 = (void *)((char *)v65 + v91);
      uint64_t v94 = v93[1];
      void *v92 = *v93;
      v92[1] = v94;
      *((unsigned char *)v64 + v28[13]) = *((unsigned char *)v65 + v28[13]);
      *((unsigned char *)v64 + v28[14]) = *((unsigned char *)v65 + v28[14]);
      *((unsigned char *)v64 + v28[15]) = *((unsigned char *)v65 + v28[15]);
      uint64_t v95 = v28[16];
      uint64_t v96 = (void *)((char *)v64 + v95);
      uint64_t v97 = (void *)((char *)v65 + v95);
      uint64_t v98 = v97[1];
      void *v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99(v64, 0, 1, v28);
    }
    uint64_t v100 = v20[14];
    uint64_t v101 = *(void **)((char *)v159 + v100);
    *(void *)((char *)v158 + v100) = v101;
    uint64_t v102 = v20[15];
    uint64_t v103 = (char *)v158 + v102;
    uint64_t v104 = (char *)v159 + v102;
    uint64_t v105 = sub_10008A050();
    uint64_t v106 = *(void *)(v105 - 8);
    uint64_t v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
    id v108 = v101;
    if (v107(v104, 1, v105))
    {
      uint64_t v109 = sub_10000903C(&qword_1000A1048);
      memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
    }
    *((unsigned char *)v158 + v163[16]) = *((unsigned char *)v159 + v163[16]);
    uint64_t v110 = v163[17];
    long long v111 = (char *)v158 + v110;
    long long v112 = (char *)v159 + v110;
    *(void *)long long v111 = *(void *)v112;
    v111[8] = v112[8];
    uint64_t v113 = v163[18];
    long long v114 = (char *)v158 + v113;
    long long v115 = (char *)v159 + v113;
    *(void *)long long v114 = *(void *)v115;
    v114[8] = v115[8];
    uint64_t v116 = v163[19];
    long long v117 = (char *)v158 + v116;
    Swift::String v118 = (char *)v159 + v116;
    if (v162((char *)v159 + v116, 1, v160))
    {
      uint64_t v119 = sub_10000903C(&qword_1000A1038);
      memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v117, v118, v160);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v117, 0, 1, v160);
    }
    uint64_t v120 = v163[20];
    Swift::String v121 = (char *)v158 + v120;
    uint64_t v122 = (char *)v159 + v120;
    if (v162((char *)v159 + v120, 1, v160))
    {
      uint64_t v123 = sub_10000903C(&qword_1000A1038);
      memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v121, v122, v160);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v121, 0, 1, v160);
    }
    uint64_t v124 = v163[21];
    uint64_t v125 = (void *)((char *)v158 + v124);
    int v126 = (void *)((char *)v159 + v124);
    if (*v126)
    {
      uint64_t v127 = v126[1];
      uint64_t v128 = v126[2];
      void *v125 = *v126;
      v125[1] = v127;
      v125[2] = v128;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
      v125[2] = v126[2];
    }
    uint64_t v129 = v163[22];
    uint64_t v130 = (char *)v158 + v129;
    int v131 = (char *)v159 + v129;
    uint64_t v132 = sub_10000903C(&qword_1000A1050);
    uint64_t v133 = *(void *)(v132 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
    {
      uint64_t v134 = sub_10000903C(&qword_1000A1058);
      memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      int v135 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v135(v130, v131, v160);
      v135(&v130[*(int *)(v132 + 36)], &v131[*(int *)(v132 + 36)], v160);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
    }
    int v136 = (int *)type metadata accessor for WidgetPredictedPlayState();
    uint64_t v137 = v136[5];
    uint64_t v138 = &v130[v137];
    int v139 = &v131[v137];
    uint64_t v140 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
    uint64_t v141 = v136[6];
    uint64_t v142 = &v130[v141];
    uint64_t v143 = &v131[v141];
    uint64_t v144 = sub_10008A4B0();
    uint64_t v145 = *(void *)(v144 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
    {
      uint64_t v146 = sub_10000903C(&qword_1000A1060);
      memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v142, v143, v144);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
    }
    uint64_t v147 = v136[7];
    int v148 = &v130[v147];
    int v149 = &v131[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *(void *)int v148 = *(void *)v149;
    *((void *)v148 + 1) = v150;
    uint64_t v151 = v136[8];
    int v152 = &v130[v151];
    int v153 = &v131[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)int v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    *(_OWORD *)((char *)v158 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)v159 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v19;
}

void *sub_10006E6CC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  id v159 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v10 = v159[10];
  __dst = (char *)a1 + v10;
  id v155 = a1;
  int v156 = a2;
  uint64_t v11 = (char *)a2 + v10;
  uint64_t v12 = sub_10008A170();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v157 = v15;
  if (v14(v11, 1, v15))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v17 = v159;
  uint64_t v18 = v159[11];
  uint64_t v19 = (void *)((char *)v155 + v18);
  char v20 = (void *)((char *)v156 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v159[12];
  uint64_t v23 = (void *)((char *)v155 + v22);
  uint64_t v24 = (void *)((char *)v156 + v22);
  uint64_t v25 = (int *)sub_10008A340();
  __dsta = (void *)*((void *)v25 - 1);
  uint64_t v26 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    uint64_t v27 = sub_10000903C(&qword_1000A1040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v24[1];
    void *v23 = *v24;
    v23[1] = v28;
    int v29 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
    }
    else
    {
      uint64_t v30 = v24[2];
      uint64_t v31 = v24[3];
      sub_100009080(v30, v31, v29);
      v23[2] = v30;
      void v23[3] = v31;
      *((unsigned char *)v23 + 32) = v29;
    }
    *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
    int v32 = (id *)(v24 + 7);
    int v33 = *((unsigned __int8 *)v24 + 64);
    if (v33 == 255)
    {
      v23[7] = *v32;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
    }
    else
    {
      id v34 = *v32;
      sub_100009098(*v32, *((unsigned char *)v24 + 64));
      v23[7] = v34;
      *((unsigned char *)v23 + 64) = v33;
    }
    uint64_t v35 = (id *)(v24 + 9);
    int v36 = *((unsigned __int8 *)v24 + 80);
    if (v36 == 255)
    {
      v23[9] = *v35;
      *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
    }
    else
    {
      id v37 = *v35;
      sub_100009098(*v35, *((unsigned char *)v24 + 80));
      v23[9] = v37;
      *((unsigned char *)v23 + 80) = v36;
    }
    uint64_t v38 = (id *)(v24 + 11);
    int v39 = *((unsigned __int8 *)v24 + 96);
    if (v39 == 255)
    {
      v23[11] = *v38;
      *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
    }
    else
    {
      id v40 = *v38;
      sub_100009098(*v38, *((unsigned char *)v24 + 96));
      v23[11] = v40;
      *((unsigned char *)v23 + 96) = v39;
    }
    uint64_t v41 = (id *)(v24 + 13);
    int v42 = *((unsigned __int8 *)v24 + 112);
    if (v42 == 255)
    {
      v23[13] = *v41;
      *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_100009098(*v41, *((unsigned char *)v24 + 112));
      v23[13] = v43;
      *((unsigned char *)v23 + 112) = v42;
    }
    uint64_t v44 = (id *)(v24 + 15);
    int v45 = *((unsigned __int8 *)v24 + 128);
    if (v45 == 255)
    {
      v23[15] = *v44;
      *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_100009098(*v44, *((unsigned char *)v24 + 128));
      v23[15] = v46;
      *((unsigned char *)v23 + 128) = v45;
    }
    uint64_t v17 = v159;
    *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
    uint64_t v47 = v25[11];
    int v48 = (char *)v23 + v47;
    id v49 = (char *)v24 + v47;
    uint64_t v50 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v25[12];
    uint64_t v52 = (void *)((char *)v23 + v51);
    uint64_t v53 = (void *)((char *)v24 + v51);
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
    *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
    *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
    uint64_t v55 = v25[16];
    uint64_t v56 = (void *)((char *)v23 + v55);
    uint64_t v57 = (void *)((char *)v24 + v55);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v23, 0, 1, v25);
  }
  uint64_t v60 = v17[13];
  uint64_t v61 = (void *)((char *)v155 + v60);
  uint64_t v62 = (void *)((char *)v156 + v60);
  if (v26((void *)((char *)v156 + v60), 1, v25))
  {
    uint64_t v63 = sub_10000903C(&qword_1000A1040);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    uint64_t v64 = v13;
  }
  else
  {
    uint64_t v65 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v65;
    int v66 = *((unsigned __int8 *)v62 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = v13;
    if (v66 == 255)
    {
      *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
      *((unsigned char *)v61 + 32) = *((unsigned char *)v62 + 32);
    }
    else
    {
      uint64_t v67 = v62[2];
      uint64_t v68 = v62[3];
      sub_100009080(v67, v68, v66);
      v61[2] = v67;
      v61[3] = v68;
      *((unsigned char *)v61 + 32) = v66;
    }
    *(_OWORD *)(v61 + 5) = *(_OWORD *)(v62 + 5);
    int v69 = (id *)(v62 + 7);
    int v70 = *((unsigned __int8 *)v62 + 64);
    if (v70 == 255)
    {
      v61[7] = *v69;
      *((unsigned char *)v61 + 64) = *((unsigned char *)v62 + 64);
    }
    else
    {
      id v71 = *v69;
      sub_100009098(*v69, *((unsigned char *)v62 + 64));
      v61[7] = v71;
      *((unsigned char *)v61 + 64) = v70;
    }
    uint64_t v72 = (id *)(v62 + 9);
    int v73 = *((unsigned __int8 *)v62 + 80);
    if (v73 == 255)
    {
      v61[9] = *v72;
      *((unsigned char *)v61 + 80) = *((unsigned char *)v62 + 80);
    }
    else
    {
      id v74 = *v72;
      sub_100009098(*v72, *((unsigned char *)v62 + 80));
      v61[9] = v74;
      *((unsigned char *)v61 + 80) = v73;
    }
    uint64_t v75 = (id *)(v62 + 11);
    int v76 = *((unsigned __int8 *)v62 + 96);
    if (v76 == 255)
    {
      v61[11] = *v75;
      *((unsigned char *)v61 + 96) = *((unsigned char *)v62 + 96);
    }
    else
    {
      id v77 = *v75;
      sub_100009098(*v75, *((unsigned char *)v62 + 96));
      v61[11] = v77;
      *((unsigned char *)v61 + 96) = v76;
    }
    uint64_t v78 = (id *)(v62 + 13);
    int v79 = *((unsigned __int8 *)v62 + 112);
    if (v79 == 255)
    {
      v61[13] = *v78;
      *((unsigned char *)v61 + 112) = *((unsigned char *)v62 + 112);
    }
    else
    {
      id v80 = *v78;
      sub_100009098(*v78, *((unsigned char *)v62 + 112));
      v61[13] = v80;
      *((unsigned char *)v61 + 112) = v79;
    }
    uint64_t v81 = (id *)(v62 + 15);
    int v82 = *((unsigned __int8 *)v62 + 128);
    if (v82 == 255)
    {
      v61[15] = *v81;
      *((unsigned char *)v61 + 128) = *((unsigned char *)v62 + 128);
    }
    else
    {
      id v83 = *v81;
      sub_100009098(*v81, *((unsigned char *)v62 + 128));
      v61[15] = v83;
      *((unsigned char *)v61 + 128) = v82;
    }
    uint64_t v17 = v159;
    *((unsigned char *)v61 + 129) = *((unsigned char *)v62 + 129);
    uint64_t v84 = v25[11];
    int v85 = (char *)v61 + v84;
    id v86 = (char *)v62 + v84;
    uint64_t v87 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    uint64_t v88 = v25[12];
    uint64_t v89 = (void *)((char *)v61 + v88);
    uint64_t v90 = (void *)((char *)v62 + v88);
    uint64_t v91 = v90[1];
    void *v89 = *v90;
    v89[1] = v91;
    *((unsigned char *)v61 + v25[13]) = *((unsigned char *)v62 + v25[13]);
    *((unsigned char *)v61 + v25[14]) = *((unsigned char *)v62 + v25[14]);
    *((unsigned char *)v61 + v25[15]) = *((unsigned char *)v62 + v25[15]);
    uint64_t v92 = v25[16];
    uint64_t v93 = (void *)((char *)v61 + v92);
    uint64_t v94 = (void *)((char *)v62 + v92);
    uint64_t v95 = v94[1];
    void *v93 = *v94;
    v93[1] = v95;
    uint64_t v96 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96(v61, 0, 1, v25);
  }
  uint64_t v97 = v17[14];
  uint64_t v98 = *(void **)((char *)v156 + v97);
  *(void *)((char *)v155 + v97) = v98;
  uint64_t v99 = v17[15];
  uint64_t v100 = (char *)v155 + v99;
  uint64_t v101 = (char *)v156 + v99;
  uint64_t v102 = sub_10008A050();
  uint64_t v103 = *(void *)(v102 - 8);
  uint64_t v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
  id v105 = v98;
  if (v104(v101, 1, v102))
  {
    uint64_t v106 = sub_10000903C(&qword_1000A1048);
    memcpy(v100, v101, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  *((unsigned char *)v155 + v159[16]) = *((unsigned char *)v156 + v159[16]);
  uint64_t v107 = v159[17];
  id v108 = (char *)v155 + v107;
  uint64_t v109 = (char *)v156 + v107;
  *(void *)id v108 = *(void *)v109;
  v108[8] = v109[8];
  uint64_t v110 = v159[18];
  long long v111 = (char *)v155 + v110;
  long long v112 = (char *)v156 + v110;
  *(void *)long long v111 = *(void *)v112;
  v111[8] = v112[8];
  uint64_t v113 = v159[19];
  long long v114 = (char *)v155 + v113;
  long long v115 = (char *)v156 + v113;
  if (v14((char *)v156 + v113, 1, v157))
  {
    uint64_t v116 = sub_10000903C(&qword_1000A1038);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v114, v115, v157);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v114, 0, 1, v157);
  }
  uint64_t v117 = v159[20];
  Swift::String v118 = (char *)v155 + v117;
  uint64_t v119 = (char *)v156 + v117;
  if (v14((char *)v156 + v117, 1, v157))
  {
    uint64_t v120 = sub_10000903C(&qword_1000A1038);
    memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v118, v119, v157);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v157);
  }
  uint64_t v121 = v159[21];
  uint64_t v122 = (void *)((char *)v155 + v121);
  uint64_t v123 = (void *)((char *)v156 + v121);
  if (*v123)
  {
    uint64_t v124 = v123[1];
    uint64_t v125 = v123[2];
    void *v122 = *v123;
    v122[1] = v124;
    v122[2] = v125;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    v122[2] = v123[2];
  }
  uint64_t v126 = v159[22];
  uint64_t v127 = (char *)v155 + v126;
  uint64_t v128 = (char *)v156 + v126;
  uint64_t v129 = sub_10000903C(&qword_1000A1050);
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = sub_10000903C(&qword_1000A1058);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v132(v127, v128, v157);
    v132(&v127[*(int *)(v129 + 36)], &v128[*(int *)(v129 + 36)], v157);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  uint64_t v133 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v134 = v133[5];
  int v135 = &v127[v134];
  int v136 = &v128[v134];
  uint64_t v137 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
  uint64_t v138 = v133[6];
  int v139 = &v127[v138];
  uint64_t v140 = &v128[v138];
  uint64_t v141 = sub_10008A4B0();
  uint64_t v142 = *(void *)(v141 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
  {
    uint64_t v143 = sub_10000903C(&qword_1000A1060);
    memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  }
  uint64_t v144 = v133[7];
  uint64_t v145 = &v127[v144];
  uint64_t v146 = &v128[v144];
  uint64_t v147 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v147;
  uint64_t v148 = v133[8];
  int v149 = &v127[v148];
  uint64_t v150 = &v128[v148];
  uint64_t v151 = *((void *)v150 + 1);
  *(void *)int v149 = *(void *)v150;
  *((void *)v149 + 1) = v151;
  *(_OWORD *)((char *)v155 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)v156 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v155;
}

void *sub_10006F39C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008A170();
  uint64_t v317 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v317 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  uint64_t v314 = a3;
  uint64_t v312 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v317 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v317 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v317 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v317 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = v6[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[12];
  uint64_t v19 = (uint64_t)a1 + v18;
  char v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_10008A340();
  uint64_t v311 = *((void *)v21 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v311 + 48);
  int v23 = v22(v19, 1, v21);
  int v24 = v22((uint64_t)v20, 1, v21);
  uint64_t v313 = v10;
  if (!v23)
  {
    if (!v24)
    {
      uint64_t v310 = v22;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = (long long *)(v19 + 16);
      uint64_t v30 = (long long *)(v20 + 16);
      int v31 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v31 == 255)
        {
          long long v72 = *v30;
          *(unsigned char *)(v19 + 32) = v20[32];
          *int v29 = v72;
        }
        else
        {
          uint64_t v69 = *((void *)v20 + 2);
          uint64_t v70 = *((void *)v20 + 3);
          sub_100009080(v69, v70, v20[32]);
          *(void *)(v19 + 16) = v69;
          *(void *)(v19 + 24) = v70;
          *(unsigned char *)(v19 + 32) = v31;
        }
      }
      else if (v31 == 255)
      {
        sub_10000BE14(v19 + 16);
        char v71 = v20[32];
        *int v29 = *v30;
        *(unsigned char *)(v19 + 32) = v71;
      }
      else
      {
        uint64_t v33 = *((void *)v20 + 2);
        uint64_t v32 = *((void *)v20 + 3);
        sub_100009080(v33, v32, v20[32]);
        uint64_t v34 = *(void *)(v19 + 16);
        uint64_t v35 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v33;
        *(void *)(v19 + 24) = v32;
        unsigned __int8 v36 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v31;
        sub_1000096D4(v34, v35, v36);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v73 = (void **)(v19 + 56);
      id v74 = (void **)(v20 + 56);
      int v75 = v20[64];
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v75 == 255)
        {
          uint64_t v81 = *v74;
          *(unsigned char *)(v19 + 64) = v20[64];
          *int v73 = v81;
        }
        else
        {
          int v79 = *v74;
          sub_100009098(v79, v20[64]);
          *(void *)(v19 + 56) = v79;
          *(unsigned char *)(v19 + 64) = v75;
        }
      }
      else if (v75 == 255)
      {
        sub_10000BE68(v19 + 56);
        char v80 = v20[64];
        *int v73 = *v74;
        *(unsigned char *)(v19 + 64) = v80;
      }
      else
      {
        int v76 = *v74;
        sub_100009098(v76, v20[64]);
        id v77 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v76;
        char v78 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v75;
        sub_1000096EC(v77, v78);
      }
      int v82 = (void **)(v19 + 72);
      id v83 = (void **)(v20 + 72);
      int v84 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v84 == 255)
        {
          uint64_t v90 = *v83;
          *(unsigned char *)(v19 + 80) = v20[80];
          *int v82 = v90;
        }
        else
        {
          uint64_t v88 = *v83;
          sub_100009098(v88, v20[80]);
          *(void *)(v19 + 72) = v88;
          *(unsigned char *)(v19 + 80) = v84;
        }
      }
      else if (v84 == 255)
      {
        sub_10000BE68(v19 + 72);
        char v89 = v20[80];
        *int v82 = *v83;
        *(unsigned char *)(v19 + 80) = v89;
      }
      else
      {
        int v85 = *v83;
        sub_100009098(v85, v20[80]);
        id v86 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v85;
        char v87 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v84;
        sub_1000096EC(v86, v87);
      }
      uint64_t v91 = (void **)(v19 + 88);
      uint64_t v92 = (void **)(v20 + 88);
      int v93 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v93 == 255)
        {
          uint64_t v99 = *v92;
          *(unsigned char *)(v19 + 96) = v20[96];
          *uint64_t v91 = v99;
        }
        else
        {
          uint64_t v97 = *v92;
          sub_100009098(v97, v20[96]);
          *(void *)(v19 + 88) = v97;
          *(unsigned char *)(v19 + 96) = v93;
        }
      }
      else if (v93 == 255)
      {
        sub_10000BE68(v19 + 88);
        char v98 = v20[96];
        *uint64_t v91 = *v92;
        *(unsigned char *)(v19 + 96) = v98;
      }
      else
      {
        uint64_t v94 = *v92;
        sub_100009098(v94, v20[96]);
        uint64_t v95 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v94;
        char v96 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v93;
        sub_1000096EC(v95, v96);
      }
      uint64_t v100 = (void **)(v19 + 104);
      uint64_t v101 = (void **)(v20 + 104);
      int v102 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v102 == 255)
        {
          id v108 = *v101;
          *(unsigned char *)(v19 + 112) = v20[112];
          *uint64_t v100 = v108;
        }
        else
        {
          uint64_t v106 = *v101;
          sub_100009098(v106, v20[112]);
          *(void *)(v19 + 104) = v106;
          *(unsigned char *)(v19 + 112) = v102;
        }
      }
      else if (v102 == 255)
      {
        sub_10000BE68(v19 + 104);
        char v107 = v20[112];
        *uint64_t v100 = *v101;
        *(unsigned char *)(v19 + 112) = v107;
      }
      else
      {
        uint64_t v103 = *v101;
        sub_100009098(v103, v20[112]);
        uint64_t v104 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v103;
        char v105 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v102;
        sub_1000096EC(v104, v105);
      }
      uint64_t v109 = (void **)(v19 + 120);
      uint64_t v110 = (void **)(v20 + 120);
      int v111 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v111 == 255)
        {
          uint64_t v117 = *v110;
          *(unsigned char *)(v19 + 128) = v20[128];
          *uint64_t v109 = v117;
        }
        else
        {
          long long v115 = *v110;
          sub_100009098(v115, v20[128]);
          *(void *)(v19 + 120) = v115;
          *(unsigned char *)(v19 + 128) = v111;
        }
      }
      else if (v111 == 255)
      {
        sub_10000BE68(v19 + 120);
        char v116 = v20[128];
        *uint64_t v109 = *v110;
        *(unsigned char *)(v19 + 128) = v116;
      }
      else
      {
        long long v112 = *v110;
        sub_100009098(v112, v20[128]);
        uint64_t v113 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v112;
        char v114 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v111;
        sub_1000096EC(v113, v114);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v118 = v21[11];
      uint64_t v119 = v19 + v118;
      uint64_t v120 = &v20[v118];
      uint64_t v121 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
      uint64_t v122 = v21[12];
      uint64_t v123 = (void *)(v19 + v122);
      uint64_t v124 = &v20[v122];
      *uint64_t v123 = *(void *)v124;
      v123[1] = *((void *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v125 = v21[16];
      uint64_t v126 = (void *)(v19 + v125);
      uint64_t v127 = &v20[v125];
      void *v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_100073F50(v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_13:
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_76;
  }
  if (v24) {
    goto LABEL_13;
  }
  uint64_t v310 = v22;
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v25 = v20[32];
  swift_bridgeObjectRetain();
  if (v25 == 255)
  {
    long long v37 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v37;
  }
  else
  {
    uint64_t v26 = *((void *)v20 + 2);
    uint64_t v27 = *((void *)v20 + 3);
    sub_100009080(v26, v27, v25);
    *(void *)(v19 + 16) = v26;
    *(void *)(v19 + 24) = v27;
    *(unsigned char *)(v19 + 32) = v25;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v38 = (id *)(v20 + 56);
  int v39 = v20[64];
  if (v39 == 255)
  {
    id v41 = *v38;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v41;
  }
  else
  {
    id v40 = *v38;
    sub_100009098(*v38, v20[64]);
    *(void *)(v19 + 56) = v40;
    *(unsigned char *)(v19 + 64) = v39;
  }
  int v42 = (id *)(v20 + 72);
  int v43 = v20[80];
  if (v43 == 255)
  {
    id v45 = *v42;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v45;
  }
  else
  {
    id v44 = *v42;
    sub_100009098(*v42, v20[80]);
    *(void *)(v19 + 72) = v44;
    *(unsigned char *)(v19 + 80) = v43;
  }
  id v46 = (id *)(v20 + 88);
  int v47 = v20[96];
  if (v47 == 255)
  {
    id v49 = *v46;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v49;
  }
  else
  {
    id v48 = *v46;
    sub_100009098(*v46, v20[96]);
    *(void *)(v19 + 88) = v48;
    *(unsigned char *)(v19 + 96) = v47;
  }
  uint64_t v50 = (id *)(v20 + 104);
  int v51 = v20[112];
  if (v51 == 255)
  {
    id v53 = *v50;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v53;
  }
  else
  {
    id v52 = *v50;
    sub_100009098(*v50, v20[112]);
    *(void *)(v19 + 104) = v52;
    *(unsigned char *)(v19 + 112) = v51;
  }
  uint64_t v54 = (id *)(v20 + 120);
  int v55 = v20[128];
  if (v55 == 255)
  {
    id v57 = *v54;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v57;
  }
  else
  {
    id v56 = *v54;
    sub_100009098(*v54, v20[128]);
    *(void *)(v19 + 120) = v56;
    *(unsigned char *)(v19 + 128) = v55;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v58 = v21[11];
  uint64_t v59 = v19 + v58;
  uint64_t v60 = &v20[v58];
  uint64_t v61 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  uint64_t v62 = v21[12];
  uint64_t v63 = (void *)(v19 + v62);
  uint64_t v64 = &v20[v62];
  *uint64_t v63 = *(void *)v64;
  v63[1] = *((void *)v64 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v65 = v21[16];
  int v66 = (void *)(v19 + v65);
  uint64_t v67 = &v20[v65];
  *int v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  uint64_t v68 = *(void (**)(uint64_t, void, uint64_t, int *))(v311 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v19, 0, 1, v21);
LABEL_75:
  uint64_t v22 = v310;
LABEL_76:
  uint64_t v128 = v6[13];
  uint64_t v129 = (uint64_t)a1 + v128;
  uint64_t v130 = (char *)a2 + v128;
  int v131 = v22((uint64_t)a1 + v128, 1, v21);
  uint64_t v132 = (uint64_t (*)(char *, uint64_t, int *))v22;
  int v133 = v131;
  int v134 = v132(v130, 1, v21);
  if (v133)
  {
    if (!v134)
    {
      *(void *)uint64_t v129 = *(void *)v130;
      *(void *)(v129 + 8) = *((void *)v130 + 1);
      int v135 = v130[32];
      swift_bridgeObjectRetain();
      if (v135 == 255)
      {
        long long v147 = *((_OWORD *)v130 + 1);
        *(unsigned char *)(v129 + 32) = v130[32];
        *(_OWORD *)(v129 + 16) = v147;
      }
      else
      {
        uint64_t v136 = *((void *)v130 + 2);
        uint64_t v137 = *((void *)v130 + 3);
        sub_100009080(v136, v137, v135);
        *(void *)(v129 + 16) = v136;
        *(void *)(v129 + 24) = v137;
        *(unsigned char *)(v129 + 32) = v135;
      }
      *(void *)(v129 + 40) = *((void *)v130 + 5);
      *(void *)(v129 + 48) = *((void *)v130 + 6);
      uint64_t v148 = (id *)(v130 + 56);
      int v149 = v130[64];
      if (v149 == 255)
      {
        id v151 = *v148;
        *(unsigned char *)(v129 + 64) = v130[64];
        *(void *)(v129 + 56) = v151;
      }
      else
      {
        id v150 = *v148;
        sub_100009098(*v148, v130[64]);
        *(void *)(v129 + 56) = v150;
        *(unsigned char *)(v129 + 64) = v149;
      }
      int v152 = (id *)(v130 + 72);
      int v153 = v130[80];
      if (v153 == 255)
      {
        id v155 = *v152;
        *(unsigned char *)(v129 + 80) = v130[80];
        *(void *)(v129 + 72) = v155;
      }
      else
      {
        id v154 = *v152;
        sub_100009098(*v152, v130[80]);
        *(void *)(v129 + 72) = v154;
        *(unsigned char *)(v129 + 80) = v153;
      }
      int v156 = (id *)(v130 + 88);
      int v157 = v130[96];
      if (v157 == 255)
      {
        id v159 = *v156;
        *(unsigned char *)(v129 + 96) = v130[96];
        *(void *)(v129 + 88) = v159;
      }
      else
      {
        id v158 = *v156;
        sub_100009098(*v156, v130[96]);
        *(void *)(v129 + 88) = v158;
        *(unsigned char *)(v129 + 96) = v157;
      }
      uint64_t v160 = (id *)(v130 + 104);
      int v161 = v130[112];
      if (v161 == 255)
      {
        id v163 = *v160;
        *(unsigned char *)(v129 + 112) = v130[112];
        *(void *)(v129 + 104) = v163;
      }
      else
      {
        id v162 = *v160;
        sub_100009098(*v160, v130[112]);
        *(void *)(v129 + 104) = v162;
        *(unsigned char *)(v129 + 112) = v161;
      }
      int v164 = (id *)(v130 + 120);
      int v165 = v130[128];
      if (v165 == 255)
      {
        id v167 = *v164;
        *(unsigned char *)(v129 + 128) = v130[128];
        *(void *)(v129 + 120) = v167;
      }
      else
      {
        id v166 = *v164;
        sub_100009098(*v164, v130[128]);
        *(void *)(v129 + 120) = v166;
        *(unsigned char *)(v129 + 128) = v165;
      }
      *(unsigned char *)(v129 + 129) = v130[129];
      uint64_t v168 = v21[11];
      uint64_t v169 = v129 + v168;
      int v170 = &v130[v168];
      uint64_t v171 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      uint64_t v172 = v21[12];
      int v173 = (void *)(v129 + v172);
      uint64_t v174 = &v130[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
      *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
      *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
      uint64_t v175 = v21[16];
      uint64_t v176 = (void *)(v129 + v175);
      uint64_t v177 = &v130[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      uint64_t v178 = *(void (**)(uint64_t, void, uint64_t, int *))(v311 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178(v129, 0, 1, v21);
      goto LABEL_143;
    }
LABEL_82:
    uint64_t v138 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v129, v130, *(void *)(*(void *)(v138 - 8) + 64));
    goto LABEL_143;
  }
  if (v134)
  {
    sub_100073F50(v129, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_82;
  }
  *(void *)uint64_t v129 = *(void *)v130;
  *(void *)(v129 + 8) = *((void *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v139 = (long long *)(v129 + 16);
  uint64_t v140 = (long long *)(v130 + 16);
  int v141 = v130[32];
  if (*(unsigned __int8 *)(v129 + 32) == 255)
  {
    if (v141 == 255)
    {
      long long v182 = *v140;
      *(unsigned char *)(v129 + 32) = v130[32];
      long long *v139 = v182;
    }
    else
    {
      uint64_t v179 = *((void *)v130 + 2);
      uint64_t v180 = *((void *)v130 + 3);
      sub_100009080(v179, v180, v130[32]);
      *(void *)(v129 + 16) = v179;
      *(void *)(v129 + 24) = v180;
      *(unsigned char *)(v129 + 32) = v141;
    }
  }
  else if (v141 == 255)
  {
    sub_10000BE14(v129 + 16);
    char v181 = v130[32];
    long long *v139 = *v140;
    *(unsigned char *)(v129 + 32) = v181;
  }
  else
  {
    uint64_t v142 = *((void *)v130 + 2);
    uint64_t v143 = *((void *)v130 + 3);
    sub_100009080(v142, v143, v130[32]);
    uint64_t v144 = *(void *)(v129 + 16);
    uint64_t v145 = *(void *)(v129 + 24);
    *(void *)(v129 + 16) = v142;
    *(void *)(v129 + 24) = v143;
    unsigned __int8 v146 = *(unsigned char *)(v129 + 32);
    *(unsigned char *)(v129 + 32) = v141;
    sub_1000096D4(v144, v145, v146);
  }
  *(void *)(v129 + 40) = *((void *)v130 + 5);
  *(void *)(v129 + 48) = *((void *)v130 + 6);
  uint64_t v183 = (void **)(v129 + 56);
  uint64_t v184 = (void **)(v130 + 56);
  int v185 = v130[64];
  if (*(unsigned __int8 *)(v129 + 64) == 255)
  {
    if (v185 == 255)
    {
      uint64_t v191 = *v184;
      *(unsigned char *)(v129 + 64) = v130[64];
      *uint64_t v183 = v191;
    }
    else
    {
      uint64_t v189 = *v184;
      sub_100009098(v189, v130[64]);
      *(void *)(v129 + 56) = v189;
      *(unsigned char *)(v129 + 64) = v185;
    }
  }
  else if (v185 == 255)
  {
    sub_10000BE68(v129 + 56);
    char v190 = v130[64];
    *uint64_t v183 = *v184;
    *(unsigned char *)(v129 + 64) = v190;
  }
  else
  {
    uint64_t v186 = *v184;
    sub_100009098(v186, v130[64]);
    uint64_t v187 = *(void **)(v129 + 56);
    *(void *)(v129 + 56) = v186;
    char v188 = *(unsigned char *)(v129 + 64);
    *(unsigned char *)(v129 + 64) = v185;
    sub_1000096EC(v187, v188);
  }
  uint64_t v192 = (void **)(v129 + 72);
  uint64_t v193 = (void **)(v130 + 72);
  int v194 = v130[80];
  if (*(unsigned __int8 *)(v129 + 80) == 255)
  {
    if (v194 == 255)
    {
      uint64_t v200 = *v193;
      *(unsigned char *)(v129 + 80) = v130[80];
      char *v192 = v200;
    }
    else
    {
      uint64_t v198 = *v193;
      sub_100009098(v198, v130[80]);
      *(void *)(v129 + 72) = v198;
      *(unsigned char *)(v129 + 80) = v194;
    }
  }
  else if (v194 == 255)
  {
    sub_10000BE68(v129 + 72);
    char v199 = v130[80];
    char *v192 = *v193;
    *(unsigned char *)(v129 + 80) = v199;
  }
  else
  {
    uint64_t v195 = *v193;
    sub_100009098(v195, v130[80]);
    uint64_t v196 = *(void **)(v129 + 72);
    *(void *)(v129 + 72) = v195;
    char v197 = *(unsigned char *)(v129 + 80);
    *(unsigned char *)(v129 + 80) = v194;
    sub_1000096EC(v196, v197);
  }
  uint64_t v201 = (void **)(v129 + 88);
  uint64_t v202 = (void **)(v130 + 88);
  int v203 = v130[96];
  if (*(unsigned __int8 *)(v129 + 96) == 255)
  {
    if (v203 == 255)
    {
      uint64_t v209 = *v202;
      *(unsigned char *)(v129 + 96) = v130[96];
      int *v201 = v209;
    }
    else
    {
      uint64_t v207 = *v202;
      sub_100009098(v207, v130[96]);
      *(void *)(v129 + 88) = v207;
      *(unsigned char *)(v129 + 96) = v203;
    }
  }
  else if (v203 == 255)
  {
    sub_10000BE68(v129 + 88);
    char v208 = v130[96];
    int *v201 = *v202;
    *(unsigned char *)(v129 + 96) = v208;
  }
  else
  {
    uint64_t v204 = *v202;
    sub_100009098(v204, v130[96]);
    uint64_t v205 = *(void **)(v129 + 88);
    *(void *)(v129 + 88) = v204;
    char v206 = *(unsigned char *)(v129 + 96);
    *(unsigned char *)(v129 + 96) = v203;
    sub_1000096EC(v205, v206);
  }
  uint64_t v210 = (void **)(v129 + 104);
  uint64_t v211 = (void **)(v130 + 104);
  int v212 = v130[112];
  if (*(unsigned __int8 *)(v129 + 112) == 255)
  {
    if (v212 == 255)
    {
      id v218 = *v211;
      *(unsigned char *)(v129 + 112) = v130[112];
      *uint64_t v210 = v218;
    }
    else
    {
      uint64_t v216 = *v211;
      sub_100009098(v216, v130[112]);
      *(void *)(v129 + 104) = v216;
      *(unsigned char *)(v129 + 112) = v212;
    }
  }
  else if (v212 == 255)
  {
    sub_10000BE68(v129 + 104);
    char v217 = v130[112];
    *uint64_t v210 = *v211;
    *(unsigned char *)(v129 + 112) = v217;
  }
  else
  {
    uint64_t v213 = *v211;
    sub_100009098(v213, v130[112]);
    uint64_t v214 = *(void **)(v129 + 104);
    *(void *)(v129 + 104) = v213;
    char v215 = *(unsigned char *)(v129 + 112);
    *(unsigned char *)(v129 + 112) = v212;
    sub_1000096EC(v214, v215);
  }
  unsigned __int8 v219 = (void **)(v129 + 120);
  uint64_t v220 = (void **)(v130 + 120);
  int v221 = v130[128];
  if (*(unsigned __int8 *)(v129 + 128) == 255)
  {
    if (v221 == 255)
    {
      id v227 = *v220;
      *(unsigned char *)(v129 + 128) = v130[128];
      void *v219 = v227;
    }
    else
    {
      Swift::String v225 = *v220;
      sub_100009098(v225, v130[128]);
      *(void *)(v129 + 120) = v225;
      *(unsigned char *)(v129 + 128) = v221;
    }
  }
  else if (v221 == 255)
  {
    sub_10000BE68(v129 + 120);
    char v226 = v130[128];
    void *v219 = *v220;
    *(unsigned char *)(v129 + 128) = v226;
  }
  else
  {
    uint64_t v222 = *v220;
    sub_100009098(v222, v130[128]);
    Swift::String_optional v223 = *(void **)(v129 + 120);
    *(void *)(v129 + 120) = v222;
    char v224 = *(unsigned char *)(v129 + 128);
    *(unsigned char *)(v129 + 128) = v221;
    sub_1000096EC(v223, v224);
  }
  *(unsigned char *)(v129 + 129) = v130[129];
  uint64_t v228 = v21[11];
  uint64_t v229 = v129 + v228;
  v230 = &v130[v228];
  uint64_t v231 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v229, v230, v231);
  uint64_t v232 = v21[12];
  v233 = (void *)(v129 + v232);
  v234 = &v130[v232];
  void *v233 = *(void *)v234;
  v233[1] = *((void *)v234 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
  *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
  *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
  uint64_t v235 = v21[16];
  v236 = (void *)(v129 + v235);
  v237 = &v130[v235];
  void *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v238 = v6[14];
  v239 = *(void **)((char *)a1 + v238);
  v240 = *(void **)((char *)a2 + v238);
  *(void *)((char *)a1 + v238) = v240;
  id v241 = v240;

  uint64_t v242 = v6[15];
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  uint64_t v245 = sub_10008A050();
  uint64_t v246 = *(void *)(v245 - 8);
  v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  LODWORD(v239) = v247(v243, 1, v245);
  int v248 = v247(v244, 1, v245);
  if (v239)
  {
    if (!v248)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v248)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_148:
    uint64_t v249 = sub_10000903C(&qword_1000A1048);
    memcpy(v243, v244, *(void *)(*(void *)(v249 - 8) + 64));
    goto LABEL_149;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
LABEL_149:
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  uint64_t v250 = v6[17];
  uint64_t v251 = (char *)a1 + v250;
  v252 = (char *)a2 + v250;
  uint64_t v253 = *(void *)v252;
  v251[8] = v252[8];
  *(void *)uint64_t v251 = v253;
  uint64_t v254 = v6[18];
  uint64_t v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  uint64_t v257 = *(void *)v256;
  v255[8] = v256[8];
  *(void *)uint64_t v255 = v257;
  uint64_t v258 = v6[19];
  uint64_t v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  int v261 = v312((char *)a1 + v258, 1, v313);
  int v262 = v312(v260, 1, v313);
  if (v261)
  {
    if (!v262)
    {
      (*(void (**)(char *, char *, uint64_t))(v317 + 16))(v259, v260, v313);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v317 + 56))(v259, 0, 1, v313);
      goto LABEL_155;
    }
    goto LABEL_154;
  }
  if (v262)
  {
    (*(void (**)(char *, uint64_t))(v317 + 8))(v259, v313);
LABEL_154:
    uint64_t v263 = sub_10000903C(&qword_1000A1038);
    memcpy(v259, v260, *(void *)(*(void *)(v263 - 8) + 64));
    goto LABEL_155;
  }
  (*(void (**)(char *, char *, uint64_t))(v317 + 24))(v259, v260, v313);
LABEL_155:
  uint64_t v264 = v6[20];
  uint64_t v265 = (char *)a1 + v264;
  v266 = (char *)a2 + v264;
  int v267 = v312((char *)a1 + v264, 1, v313);
  int v268 = v312(v266, 1, v313);
  if (v267)
  {
    if (!v268)
    {
      (*(void (**)(char *, char *, uint64_t))(v317 + 16))(v265, v266, v313);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v317 + 56))(v265, 0, 1, v313);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v268)
  {
    (*(void (**)(char *, uint64_t))(v317 + 8))(v265, v313);
LABEL_160:
    uint64_t v269 = sub_10000903C(&qword_1000A1038);
    memcpy(v265, v266, *(void *)(*(void *)(v269 - 8) + 64));
    goto LABEL_161;
  }
  (*(void (**)(char *, char *, uint64_t))(v317 + 24))(v265, v266, v313);
LABEL_161:
  uint64_t v270 = v6[21];
  uint64_t v271 = (void *)((char *)a1 + v270);
  v272 = (char *)a2 + v270;
  uint64_t v273 = *(void *)((char *)a2 + v270);
  if (*(void *)((char *)a1 + v270))
  {
    if (v273)
    {
      void *v271 = v273;
      swift_retain();
      swift_release();
      v271[1] = *((void *)v272 + 1);
      swift_retain();
      swift_release();
      v271[2] = *((void *)v272 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10000BF18((uint64_t)a1 + v270);
      uint64_t v274 = *((void *)v272 + 2);
      *(_OWORD *)uint64_t v271 = *(_OWORD *)v272;
      v271[2] = v274;
    }
  }
  else if (v273)
  {
    void *v271 = v273;
    v271[1] = *((void *)v272 + 1);
    v271[2] = *((void *)v272 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v275 = *(_OWORD *)v272;
    v271[2] = *((void *)v272 + 2);
    *(_OWORD *)uint64_t v271 = v275;
  }
  uint64_t v276 = v6[22];
  uint64_t v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  uint64_t v279 = sub_10000903C(&qword_1000A1050);
  uint64_t v280 = *(void *)(v279 - 8);
  uint64_t v281 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v280 + 48);
  int v282 = v281(v277, 1, v279);
  int v283 = v281(v278, 1, v279);
  char v315 = a2;
  uint64_t v316 = a1;
  if (v282)
  {
    if (!v283)
    {
      int v284 = *(void (**)(char *, char *, uint64_t))(v317 + 16);
      v284(v277, v278, v313);
      v284(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v313);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  if (v283)
  {
    sub_100015614((uint64_t)v277, &qword_1000A1050);
LABEL_176:
    uint64_t v285 = sub_10000903C(&qword_1000A1058);
    memcpy(v277, v278, *(void *)(*(void *)(v285 - 8) + 64));
    goto LABEL_177;
  }
  uint64_t v309 = *(void (**)(char *, char *, uint64_t))(v317 + 24);
  v309(v277, v278, v313);
  v309(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v313);
LABEL_177:
  uint64_t v286 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v287 = v286[5];
  uint64_t v288 = &v277[v287];
  v289 = &v278[v287];
  uint64_t v290 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 24))(v288, v289, v290);
  uint64_t v291 = v286[6];
  uint64_t v292 = &v277[v291];
  v293 = &v278[v291];
  uint64_t v294 = sub_10008A4B0();
  uint64_t v295 = *(void *)(v294 - 8);
  uint64_t v296 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v295 + 48);
  LODWORD(v288) = v296(v292, 1, v294);
  int v297 = v296(v293, 1, v294);
  if (!v288)
  {
    if (!v297)
    {
      (*(void (**)(char *, char *, uint64_t))(v295 + 24))(v292, v293, v294);
      goto LABEL_183;
    }
    (*(void (**)(char *, uint64_t))(v295 + 8))(v292, v294);
    goto LABEL_182;
  }
  if (v297)
  {
LABEL_182:
    uint64_t v298 = sub_10000903C(&qword_1000A1060);
    memcpy(v292, v293, *(void *)(*(void *)(v298 - 8) + 64));
    goto LABEL_183;
  }
  (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v293, v294);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
LABEL_183:
  uint64_t v299 = v286[7];
  uint64_t v300 = &v277[v299];
  uint64_t v301 = &v278[v299];
  *(void *)uint64_t v300 = *(void *)v301;
  *((void *)v300 + 1) = *((void *)v301 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v302 = v286[8];
  v303 = &v277[v302];
  uint64_t v304 = &v278[v302];
  *(void *)v303 = *(void *)v304;
  *((void *)v303 + 1) = *((void *)v304 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v305 = *(int *)(v314 + 20);
  v306 = (void *)((char *)v316 + v305);
  v307 = (void *)((char *)v315 + v305);
  void *v306 = *v307;
  v306[1] = v307[1];
  return v316;
}

uint64_t sub_100070DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v8 = v7[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v84 = v11;
  uint64_t v83 = v12;
  int v82 = *(unsigned int (**)(const void *, uint64_t))(v12 + 48);
  if (v82(v10, 1))
  {
    uint64_t v13 = sub_10000903C(&qword_1000A1038);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v84);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v84);
  }
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  uint64_t v14 = v7[12];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  uint64_t v17 = (int *)sub_10008A340();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48);
  uint64_t v81 = v18;
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1040);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v21;
    *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((unsigned char *)v15 + 64) = *((unsigned char *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((unsigned char *)v15 + 129) = *((unsigned char *)v16 + 129);
    uint64_t v22 = v17[11];
    int v79 = (char *)v15 + v22;
    uint64_t v80 = a3;
    int v23 = (char *)v16 + v22;
    uint64_t v24 = sub_10008A300();
    int v25 = v23;
    a3 = v80;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v79, v25, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((unsigned char *)v15 + v17[13]) = *((unsigned char *)v16 + v17[13]);
    *((unsigned char *)v15 + v17[14]) = *((unsigned char *)v16 + v17[14]);
    *((unsigned char *)v15 + v17[15]) = *((unsigned char *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = v7[13];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  if (v19((_OWORD *)(a2 + v26), 1, v17))
  {
    uint64_t v29 = sub_10000903C(&qword_1000A1040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v28[1];
    _OWORD *v27 = *v28;
    v27[1] = v30;
    *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
    *(_OWORD *)((char *)v27 + 40) = *(_OWORD *)((char *)v28 + 40);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
    *(_OWORD *)((char *)v27 + 113) = *(_OWORD *)((char *)v28 + 113);
    *(_OWORD *)((char *)v27 + 104) = *(_OWORD *)((char *)v28 + 104);
    *(_OWORD *)((char *)v27 + 88) = *(_OWORD *)((char *)v28 + 88);
    *(_OWORD *)((char *)v27 + 72) = *(_OWORD *)((char *)v28 + 72);
    *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
    uint64_t v31 = v17[11];
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = a3;
    uint64_t v34 = (char *)v28 + v31;
    uint64_t v35 = sub_10008A300();
    unsigned __int8 v36 = v34;
    a3 = v33;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v36, v35);
    *(_OWORD *)((char *)v27 + v17[12]) = *(_OWORD *)((char *)v28 + v17[12]);
    *((unsigned char *)v27 + v17[13]) = *((unsigned char *)v28 + v17[13]);
    *((unsigned char *)v27 + v17[14]) = *((unsigned char *)v28 + v17[14]);
    *((unsigned char *)v27 + v17[15]) = *((unsigned char *)v28 + v17[15]);
    *(_OWORD *)((char *)v27 + v17[16]) = *(_OWORD *)((char *)v28 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v81 + 56))(v27, 0, 1, v17);
  }
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  uint64_t v37 = v7[15];
  uint64_t v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_10008A050();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10000903C(&qword_1000A1048);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v43 = v7[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = v7[18];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = v7[19];
  uint64_t v50 = (void *)(a1 + v49);
  int v51 = (const void *)(a2 + v49);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v82)(a2 + v49, 1, v84))
  {
    uint64_t v52 = sub_10000903C(&qword_1000A1038);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v83 + 32))(v50, v51, v84);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v50, 0, 1, v84);
  }
  uint64_t v53 = v7[20];
  uint64_t v54 = (void *)(a1 + v53);
  int v55 = (const void *)(a2 + v53);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v82)(a2 + v53, 1, v84))
  {
    uint64_t v56 = sub_10000903C(&qword_1000A1038);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v83 + 32))(v54, v55, v84);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v54, 0, 1, v84);
  }
  uint64_t v57 = v7[21];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  uint64_t v60 = v7[22];
  uint64_t v61 = (char *)(a1 + v60);
  uint64_t v62 = (char *)(a2 + v60);
  uint64_t v63 = sub_10000903C(&qword_1000A1050);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_10000903C(&qword_1000A1058);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    int v66 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
    v66(v61, v62, v84);
    v66(&v61[*(int *)(v63 + 36)], &v62[*(int *)(v63 + 36)], v84);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v67 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v68 = v67[5];
  uint64_t v69 = &v61[v68];
  uint64_t v70 = &v62[v68];
  uint64_t v71 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = v67[6];
  int v73 = &v61[v72];
  id v74 = &v62[v72];
  uint64_t v75 = sub_10008A4B0();
  uint64_t v76 = *(void *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    uint64_t v77 = sub_10000903C(&qword_1000A1060);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  *(_OWORD *)&v61[v67[7]] = *(_OWORD *)&v62[v67[7]];
  *(_OWORD *)&v61[v67[8]] = *(_OWORD *)&v62[v67[8]];
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_100071710(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v12 = v11[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10008A170();
  uint64_t v204 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v204 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  uint64_t v200 = a3;
  char v199 = v16;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v204 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v204 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10000903C(&qword_1000A1038);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v204 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[11];
  long long v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *long long v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v11[12];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)sub_10008A340();
  uint64_t v198 = *((void *)v28 - 1);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v198 + 48);
  int v30 = v29(v26, 1, v28);
  int v31 = v29((uint64_t)v27, 1, v28);
  uint64_t v203 = v15;
  if (v30)
  {
    if (!v31)
    {
      long long v32 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v32;
      *(unsigned char *)(v26 + 32) = v27[32];
      *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
      *(void *)(v26 + 56) = *((void *)v27 + 7);
      *(unsigned char *)(v26 + 64) = v27[64];
      *(_OWORD *)(v26 + 113) = *(_OWORD *)(v27 + 113);
      *(_OWORD *)(v26 + 104) = *(_OWORD *)(v27 + 104);
      *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(unsigned char *)(v26 + 129) = v27[129];
      uint64_t v33 = v28[11];
      uint64_t v34 = v26 + v33;
      uint64_t v35 = &v27[v33];
      uint64_t v36 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)&v27[v28[12]];
      *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
      *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
      *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
      *(_OWORD *)(v26 + v28[16]) = *(_OWORD *)&v27[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v198 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    sub_100073F50(v26, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_12:
    uint64_t v37 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v117 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v117;
  swift_bridgeObjectRelease();
  uint64_t v118 = v27 + 16;
  int v119 = *(unsigned __int8 *)(v26 + 32);
  if (v119 != 255)
  {
    int v120 = v27[32];
    if (v120 != 255)
    {
      uint64_t v121 = *(void *)(v26 + 16);
      uint64_t v122 = *(void *)(v26 + 24);
      *(_OWORD *)(v26 + 16) = *v118;
      *(unsigned char *)(v26 + 32) = v120;
      sub_1000096D4(v121, v122, v119);
      goto LABEL_69;
    }
    sub_10000BE14(v26 + 16);
  }
  *(_OWORD *)(v26 + 16) = *v118;
  *(unsigned char *)(v26 + 32) = v27[32];
LABEL_69:
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  uint64_t v130 = v27 + 56;
  int v131 = *(unsigned __int8 *)(v26 + 64);
  if (v131 != 255)
  {
    int v132 = v27[64];
    if (v132 != 255)
    {
      int v133 = *(void **)(v26 + 56);
      *(void *)(v26 + 56) = *v130;
      *(unsigned char *)(v26 + 64) = v132;
      sub_1000096EC(v133, v131);
      goto LABEL_79;
    }
    sub_10000BE68(v26 + 56);
  }
  *(void *)(v26 + 56) = *v130;
  *(unsigned char *)(v26 + 64) = v27[64];
LABEL_79:
  uint64_t v138 = v27 + 72;
  int v139 = *(unsigned __int8 *)(v26 + 80);
  if (v139 != 255)
  {
    int v140 = v27[80];
    if (v140 != 255)
    {
      int v141 = *(void **)(v26 + 72);
      *(void *)(v26 + 72) = *v138;
      *(unsigned char *)(v26 + 80) = v140;
      sub_1000096EC(v141, v139);
      goto LABEL_89;
    }
    sub_10000BE68(v26 + 72);
  }
  *(void *)(v26 + 72) = *v138;
  *(unsigned char *)(v26 + 80) = v27[80];
LABEL_89:
  unsigned __int8 v146 = v27 + 88;
  int v147 = *(unsigned __int8 *)(v26 + 96);
  if (v147 != 255)
  {
    int v148 = v27[96];
    if (v148 != 255)
    {
      int v149 = *(void **)(v26 + 88);
      *(void *)(v26 + 88) = *v146;
      *(unsigned char *)(v26 + 96) = v148;
      sub_1000096EC(v149, v147);
      goto LABEL_99;
    }
    sub_10000BE68(v26 + 88);
  }
  *(void *)(v26 + 88) = *v146;
  *(unsigned char *)(v26 + 96) = v27[96];
LABEL_99:
  id v154 = v27 + 104;
  int v155 = *(unsigned __int8 *)(v26 + 112);
  if (v155 != 255)
  {
    int v156 = v27[112];
    if (v156 != 255)
    {
      int v157 = *(void **)(v26 + 104);
      *(void *)(v26 + 104) = *v154;
      *(unsigned char *)(v26 + 112) = v156;
      sub_1000096EC(v157, v155);
      goto LABEL_109;
    }
    sub_10000BE68(v26 + 104);
  }
  *(void *)(v26 + 104) = *v154;
  *(unsigned char *)(v26 + 112) = v27[112];
LABEL_109:
  id v162 = v27 + 120;
  int v163 = *(unsigned __int8 *)(v26 + 128);
  if (v163 == 255)
  {
LABEL_118:
    *(void *)(v26 + 120) = *v162;
    *(unsigned char *)(v26 + 128) = v27[128];
    goto LABEL_119;
  }
  int v164 = v27[128];
  if (v164 == 255)
  {
    sub_10000BE68(v26 + 120);
    goto LABEL_118;
  }
  int v165 = *(void **)(v26 + 120);
  *(void *)(v26 + 120) = *v162;
  *(unsigned char *)(v26 + 128) = v164;
  sub_1000096EC(v165, v163);
LABEL_119:
  *(unsigned char *)(v26 + 129) = v27[129];
  uint64_t v170 = v28[11];
  uint64_t v171 = v26 + v170;
  uint64_t v172 = &v27[v170];
  uint64_t v173 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v173 - 8) + 40))(v171, v172, v173);
  uint64_t v174 = v28[12];
  uint64_t v175 = (void *)(v26 + v174);
  uint64_t v176 = &v27[v174];
  uint64_t v178 = *(void *)v176;
  uint64_t v177 = *((void *)v176 + 1);
  *uint64_t v175 = v178;
  v175[1] = v177;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
  *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
  *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
  uint64_t v179 = v28[16];
  uint64_t v180 = (void *)(v26 + v179);
  char v181 = &v27[v179];
  uint64_t v183 = *(void *)v181;
  uint64_t v182 = *((void *)v181 + 1);
  *uint64_t v180 = v183;
  v180[1] = v182;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v38 = v11[13];
  uint64_t v39 = (uint64_t)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v29((uint64_t)a1 + v38, 1, v28);
  int v42 = v29((uint64_t)v40, 1, v28);
  if (v41)
  {
    if (!v42)
    {
      long long v43 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v43;
      *(unsigned char *)(v39 + 32) = v40[32];
      *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
      *(void *)(v39 + 56) = *((void *)v40 + 7);
      *(unsigned char *)(v39 + 64) = v40[64];
      *(_OWORD *)(v39 + 113) = *(_OWORD *)(v40 + 113);
      *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
      *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      *(unsigned char *)(v39 + 129) = v40[129];
      uint64_t v44 = v28[11];
      uint64_t v45 = v39 + v44;
      uint64_t v46 = &v40[v44];
      uint64_t v47 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      *(_OWORD *)(v39 + v28[12]) = *(_OWORD *)&v40[v28[12]];
      *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
      *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
      *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
      *(_OWORD *)(v39 + v28[16]) = *(_OWORD *)&v40[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v198 + 56))(v39, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    sub_100073F50(v39, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_18:
    uint64_t v48 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v123 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v123;
  swift_bridgeObjectRelease();
  uint64_t v124 = v40 + 16;
  int v125 = *(unsigned __int8 *)(v39 + 32);
  if (v125 != 255)
  {
    int v126 = v40[32];
    if (v126 != 255)
    {
      uint64_t v127 = *(void *)(v39 + 16);
      uint64_t v128 = *(void *)(v39 + 24);
      *(_OWORD *)(v39 + 16) = *v124;
      *(unsigned char *)(v39 + 32) = v126;
      sub_1000096D4(v127, v128, v125);
      goto LABEL_74;
    }
    sub_10000BE14(v39 + 16);
  }
  *(_OWORD *)(v39 + 16) = *v124;
  *(unsigned char *)(v39 + 32) = v40[32];
LABEL_74:
  *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
  int v134 = v40 + 56;
  int v135 = *(unsigned __int8 *)(v39 + 64);
  if (v135 != 255)
  {
    int v136 = v40[64];
    if (v136 != 255)
    {
      uint64_t v137 = *(void **)(v39 + 56);
      *(void *)(v39 + 56) = *v134;
      *(unsigned char *)(v39 + 64) = v136;
      sub_1000096EC(v137, v135);
      goto LABEL_84;
    }
    sub_10000BE68(v39 + 56);
  }
  *(void *)(v39 + 56) = *v134;
  *(unsigned char *)(v39 + 64) = v40[64];
LABEL_84:
  uint64_t v142 = v40 + 72;
  int v143 = *(unsigned __int8 *)(v39 + 80);
  if (v143 != 255)
  {
    int v144 = v40[80];
    if (v144 != 255)
    {
      uint64_t v145 = *(void **)(v39 + 72);
      *(void *)(v39 + 72) = *v142;
      *(unsigned char *)(v39 + 80) = v144;
      sub_1000096EC(v145, v143);
      goto LABEL_94;
    }
    sub_10000BE68(v39 + 72);
  }
  *(void *)(v39 + 72) = *v142;
  *(unsigned char *)(v39 + 80) = v40[80];
LABEL_94:
  id v150 = v40 + 88;
  int v151 = *(unsigned __int8 *)(v39 + 96);
  if (v151 != 255)
  {
    int v152 = v40[96];
    if (v152 != 255)
    {
      int v153 = *(void **)(v39 + 88);
      *(void *)(v39 + 88) = *v150;
      *(unsigned char *)(v39 + 96) = v152;
      sub_1000096EC(v153, v151);
      goto LABEL_104;
    }
    sub_10000BE68(v39 + 88);
  }
  *(void *)(v39 + 88) = *v150;
  *(unsigned char *)(v39 + 96) = v40[96];
LABEL_104:
  id v158 = v40 + 104;
  int v159 = *(unsigned __int8 *)(v39 + 112);
  if (v159 != 255)
  {
    int v160 = v40[112];
    if (v160 != 255)
    {
      int v161 = *(void **)(v39 + 104);
      *(void *)(v39 + 104) = *v158;
      *(unsigned char *)(v39 + 112) = v160;
      sub_1000096EC(v161, v159);
      goto LABEL_114;
    }
    sub_10000BE68(v39 + 104);
  }
  *(void *)(v39 + 104) = *v158;
  *(unsigned char *)(v39 + 112) = v40[112];
LABEL_114:
  id v166 = v40 + 120;
  int v167 = *(unsigned __int8 *)(v39 + 128);
  if (v167 == 255)
  {
LABEL_121:
    *(void *)(v39 + 120) = *v166;
    *(unsigned char *)(v39 + 128) = v40[128];
    goto LABEL_122;
  }
  int v168 = v40[128];
  if (v168 == 255)
  {
    sub_10000BE68(v39 + 120);
    goto LABEL_121;
  }
  uint64_t v169 = *(void **)(v39 + 120);
  *(void *)(v39 + 120) = *v166;
  *(unsigned char *)(v39 + 128) = v168;
  sub_1000096EC(v169, v167);
LABEL_122:
  *(unsigned char *)(v39 + 129) = v40[129];
  uint64_t v184 = v28[11];
  uint64_t v185 = v39 + v184;
  uint64_t v186 = &v40[v184];
  uint64_t v187 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v187 - 8) + 40))(v185, v186, v187);
  uint64_t v188 = v28[12];
  uint64_t v189 = (void *)(v39 + v188);
  char v190 = &v40[v188];
  uint64_t v192 = *(void *)v190;
  uint64_t v191 = *((void *)v190 + 1);
  void *v189 = v192;
  v189[1] = v191;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
  *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
  *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
  uint64_t v193 = v28[16];
  int v194 = (void *)(v39 + v193);
  uint64_t v195 = &v40[v193];
  uint64_t v197 = *(void *)v195;
  uint64_t v196 = *((void *)v195 + 1);
  *int v194 = v197;
  v194[1] = v196;
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v49 = v11[14];
  uint64_t v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

  uint64_t v51 = v11[15];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_10008A050();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    uint64_t v59 = v203;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v59 = v203;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_24:
    uint64_t v60 = sub_10000903C(&qword_1000A1048);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_25:
  *((unsigned char *)a1 + v11[16]) = *((unsigned char *)a2 + v11[16]);
  uint64_t v61 = v11[17];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = v11[18];
  uint64_t v65 = (char *)a1 + v64;
  int v66 = (char *)a2 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = v11[19];
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  int v70 = v199((char *)a1 + v67, 1, v59);
  int v71 = v199(v69, 1, v59);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v68, v69, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v204 + 56))(v68, 0, 1, v59);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v204 + 8))(v68, v59);
LABEL_30:
    uint64_t v72 = sub_10000903C(&qword_1000A1038);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v204 + 40))(v68, v69, v59);
LABEL_31:
  uint64_t v73 = v11[20];
  id v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  int v76 = v199((char *)a1 + v73, 1, v59);
  int v77 = v199(v75, 1, v59);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v74, v75, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v204 + 56))(v74, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v204 + 8))(v74, v59);
LABEL_36:
    uint64_t v78 = sub_10000903C(&qword_1000A1038);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v204 + 40))(v74, v75, v59);
LABEL_37:
  uint64_t v79 = v11[21];
  uint64_t v80 = (void *)((char *)a1 + v79);
  uint64_t v81 = (void *)((char *)a2 + v79);
  if (*(void *)((char *)a1 + v79))
  {
    if (*v81)
    {
      *uint64_t v80 = *v81;
      swift_release();
      v80[1] = v81[1];
      swift_release();
      v80[2] = v81[2];
      swift_release();
      goto LABEL_42;
    }
    sub_10000BF18((uint64_t)v80);
  }
  *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
  v80[2] = v81[2];
LABEL_42:
  uint64_t v82 = v11[22];
  uint64_t v83 = (char *)a1 + v82;
  uint64_t v84 = (char *)a2 + v82;
  uint64_t v85 = sub_10000903C(&qword_1000A1050);
  uint64_t v86 = *(void *)(v85 - 8);
  char v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  uint64_t v201 = a2;
  uint64_t v202 = a1;
  if (v88)
  {
    if (!v89)
    {
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v204 + 32);
      v90(v83, v84, v59);
      v90(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v89)
  {
    sub_100015614((uint64_t)v83, &qword_1000A1050);
LABEL_47:
    uint64_t v91 = sub_10000903C(&qword_1000A1058);
    memcpy(v83, v84, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v129 = *(void (**)(char *, char *, uint64_t))(v204 + 40);
  v129(v83, v84, v59);
  v129(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
LABEL_48:
  uint64_t v92 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v93 = v92[5];
  uint64_t v94 = &v83[v93];
  uint64_t v95 = &v84[v93];
  uint64_t v96 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  uint64_t v97 = v92[6];
  char v98 = &v83[v97];
  uint64_t v99 = &v84[v97];
  uint64_t v100 = sub_10008A4B0();
  uint64_t v101 = *(void *)(v100 - 8);
  int v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  int v103 = v102(v98, 1, v100);
  int v104 = v102(v99, 1, v100);
  if (!v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 40))(v98, v99, v100);
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v100);
    goto LABEL_53;
  }
  if (v104)
  {
LABEL_53:
    uint64_t v105 = sub_10000903C(&qword_1000A1060);
    memcpy(v98, v99, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v98, v99, v100);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
LABEL_54:
  uint64_t v106 = v92[7];
  char v107 = &v83[v106];
  id v108 = &v84[v106];
  uint64_t v110 = *(void *)v108;
  uint64_t v109 = *((void *)v108 + 1);
  *(void *)char v107 = v110;
  *((void *)v107 + 1) = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v92[8];
  long long v112 = &v83[v111];
  uint64_t v113 = &v84[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)long long v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  *(_OWORD *)((char *)v202 + *(int *)(v200 + 20)) = *(_OWORD *)((char *)v201 + *(int *)(v200 + 20));
  return v202;
}

uint64_t sub_100072944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100072958);
}

uint64_t sub_10007295C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100072970);
}

uint64_t type metadata accessor for PlayButtonLarge(uint64_t a1)
{
  return sub_100029CA4(a1, qword_1000A2888);
}

uint64_t sub_100072994()
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100072A28()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100072A44()
{
  qword_1000A2828 = 0x4024000000000000;
}

uint64_t sub_100072A54()
{
  uint64_t v1 = sub_10008AD60();
  uint64_t v19 = *(void *)(v1 - 8);
  uint64_t v20 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10008AD80();
  uint64_t v18 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000903C(&qword_1000A1060);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10008A4B0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v0 + *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 88);
  uint64_t v15 = type metadata accessor for WidgetPredictedPlayState();
  sub_1000155B0(v14 + *(int *)(v15 + 24), (uint64_t)v9, &qword_1000A1060);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100015614((uint64_t)v9, &qword_1000A1060);
    return sub_10008AD90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_10008A470();
    if (sub_10008A460())
    {
      sub_10008AD90();
    }
    else
    {
      sub_10008A470();
      sub_10008A450();
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v3, enum case for Text.DateStyle.UnitsConfiguration.Style.short(_:), v20);
      sub_10008AD70();
      sub_10008ADA0();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_100072D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v116 = type metadata accessor for PlayButtonLargeToggleStyle(0);
  __chkstk_darwin(v116);
  uint64_t v115 = (uint64_t)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10000903C(&qword_1000A28C0);
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  long long v112 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A28C8);
  uint64_t v119 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v118 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_10000903C(&qword_1000A28D0);
  __chkstk_darwin(v127);
  uint64_t v117 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v91 - v9;
  uint64_t v125 = sub_10000903C(&qword_1000A28D8);
  __chkstk_darwin(v125);
  uint64_t v126 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A1060);
  __chkstk_darwin(v12 - 8);
  uint64_t v110 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_10008A4B0();
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v92 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_10008ADB0();
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v99 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_10008AB20();
  uint64_t v104 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v100 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10008A740();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000903C(&qword_1000A1058);
  __chkstk_darwin(v21 - 8);
  uint64_t v96 = (uint64_t)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10008A750();
  uint64_t v98 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v97 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10000903C(&qword_1000A28E0);
  uint64_t v106 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v105 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10000903C(&qword_1000A28E8);
  uint64_t v108 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  int v102 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  char v107 = (char *)&v91 - v27;
  uint64_t v28 = sub_10000903C(&qword_1000A28F0);
  uint64_t v128 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  int v120 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v31 = v1;
  long long v32 = (uint64_t *)(v1 + *(int *)(v30 + 84));
  uint64_t v33 = *v32;
  if (*v32)
  {
    uint64_t v34 = v30;
    uint64_t v93 = v17;
    uint64_t v91 = v10;
    uint64_t v94 = v28;
    uint64_t v95 = a1;
    uint64_t v35 = (char *)v32[1];
    uint64_t v36 = (char *)v32[2];
    uint64_t v37 = sub_10008A2F0();
    int v132 = (void *)v37;
    uint64_t v133 = sub_100073F08(&qword_1000A1CD0, (void (*)(uint64_t))&type metadata accessor for Podcasts);
    uint64_t v38 = sub_1000439B8(&v129);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v38, enum case for Podcasts.widgetLargePlaybackButton(_:), v37);
    swift_retain();
    swift_retain();
    uint64_t v39 = v36;
    swift_retain();
    LOBYTE(v37) = sub_10008A2E0();
    sub_10001F160((uint64_t)&v129);
    uint64_t v40 = *(int *)(v34 + 88);
    uint64_t v41 = v31 + v40;
    uint64_t v42 = v33;
    if (v37)
    {
      sub_1000155B0(v31 + v40, v96, &qword_1000A1058);
      uint64_t v43 = type metadata accessor for WidgetPredictedPlayState();
      uint64_t v44 = *(int *)(v43 + 20);
      uint64_t v45 = v43;
      uint64_t v116 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v41 + v44, v93);
      uint64_t v129 = v42;
      uint64_t v130 = (uint64_t)v35;
      uint64_t v131 = (uint64_t)v39;
      uint64_t v115 = *(void *)(v41 + *(int *)(v45 + 28));
      type metadata accessor for PlayButtonLarge(0);
      sub_10000E368();
      uint64_t v119 = v42;
      swift_retain();
      uint64_t v118 = v35;
      swift_retain();
      uint64_t v117 = v39;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v46 = v97;
      sub_10008A720();
      uint64_t v47 = v99;
      sub_100072A54();
      uint64_t v48 = v100;
      sub_10008AA90();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v47, v103);
      uint64_t v49 = sub_100073F08((unint64_t *)&qword_1000A1120, (void (*)(uint64_t))&type metadata accessor for PlaybackButton);
      uint64_t v50 = v105;
      uint64_t v51 = v121;
      uint64_t v52 = v123;
      sub_10008AF10();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v48, v52);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v46, v51);
      uint64_t v53 = v110;
      sub_1000155B0(v41 + *(int *)(v116 + 24), v110, &qword_1000A1060);
      uint64_t v54 = v109;
      uint64_t v55 = v111;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v53, 1, v111) == 1)
      {
        sub_100015614(v53, &qword_1000A1060);
      }
      else
      {
        uint64_t v82 = v92;
        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v92, v53, v55);
        sub_10008A480();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v82, v55);
      }
      uint64_t v81 = v95;
      uint64_t v80 = (uint64_t)v120;
      uint64_t v129 = v51;
      uint64_t v130 = v52;
      uint64_t v131 = v49;
      int v132 = &protocol witness table for PillPlaybackButtonStyle;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v84 = v102;
      uint64_t v85 = v122;
      sub_10008AF30();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v50, v85);
      uint64_t v86 = v108;
      char v87 = v107;
      int v88 = v84;
      uint64_t v89 = v124;
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v88, v124);
      (*(void (**)(uint64_t, char *, uint64_t))(v86 + 16))(v126, v87, v89);
      swift_storeEnumTagMultiPayload();
      uint64_t v129 = v85;
      uint64_t v130 = OpaqueTypeConformance2;
      swift_getOpaqueTypeConformance2();
      sub_100073FB0();
      sub_10008AAE0();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v89);
    }
    else
    {
      uint64_t v111 = v5;
      type metadata accessor for WidgetPredictedPlayState();
      uint64_t v58 = v93;
      (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for PlaybackButton.State.playing(_:), v93);
      sub_10008A730();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v58);
      uint64_t v129 = v42;
      uint64_t v130 = (uint64_t)v35;
      uint64_t v131 = (uint64_t)v39;
      sub_10000E368();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v59 = v112;
      sub_10008B0C0();
      uint64_t v60 = v115;
      sub_10007AFB8(v31, v115, type metadata accessor for UpNextEntry.Episode);
      uint64_t v61 = (int *)v116;
      *(void *)(v60 + *(int *)(v116 + 20)) = 0x403C000000000000;
      *(void *)(v60 + v61[6]) = 0x4000000000000000;
      *(void *)(v60 + v61[7]) = 0x4000000000000000;
      *(void *)(v60 + v61[8]) = 0x4022000000000000;
      *(void *)(v60 + v61[9]) = 0x4026000000000000;
      *(void *)(v60 + v61[10]) = 0x4018000000000000;
      sub_100015428(&qword_1000A28F8, &qword_1000A28C0);
      sub_100073F08(&qword_1000A2900, (void (*)(uint64_t))type metadata accessor for PlayButtonLargeToggleStyle);
      uint64_t v62 = v118;
      uint64_t v63 = v114;
      sub_10008AE70();
      sub_100073F50(v60, type metadata accessor for PlayButtonLargeToggleStyle);
      (*(void (**)(char *, uint64_t))(v113 + 8))(v59, v63);
      if (qword_1000A0F98 != -1) {
        swift_once();
      }
      char v64 = sub_10008ABD0();
      sub_10008A630();
      uint64_t v66 = v65;
      uint64_t v68 = v67;
      uint64_t v70 = v69;
      uint64_t v72 = v71;
      uint64_t v73 = v119;
      uint64_t v74 = (uint64_t)v117;
      uint64_t v75 = v111;
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v117, v62, v111);
      uint64_t v76 = v74 + *(int *)(v127 + 36);
      *(unsigned char *)uint64_t v76 = v64;
      *(void *)(v76 + 8) = v66;
      *(void *)(v76 + 16) = v68;
      *(void *)(v76 + 24) = v70;
      *(void *)(v76 + 32) = v72;
      *(unsigned char *)(v76 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v62, v75);
      uint64_t v77 = (uint64_t)v91;
      sub_10001547C(v74, (uint64_t)v91, &qword_1000A28D0);
      sub_1000155B0(v77, v126, &qword_1000A28D0);
      swift_storeEnumTagMultiPayload();
      uint64_t v78 = sub_100073F08((unint64_t *)&qword_1000A1120, (void (*)(uint64_t))&type metadata accessor for PlaybackButton);
      uint64_t v129 = v121;
      uint64_t v130 = v123;
      uint64_t v131 = v78;
      int v132 = &protocol witness table for PillPlaybackButtonStyle;
      uint64_t v79 = swift_getOpaqueTypeConformance2();
      uint64_t v129 = v122;
      uint64_t v130 = v79;
      swift_getOpaqueTypeConformance2();
      sub_100073FB0();
      uint64_t v80 = (uint64_t)v120;
      sub_10008AAE0();
      swift_release();
      swift_release();
      swift_release();
      sub_100015614(v77, &qword_1000A28D0);
      uint64_t v81 = v95;
    }
    uint64_t v90 = v94;
    sub_10001547C(v80, v81, &qword_1000A28F0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v128 + 56))(v81, 0, 1, v90);
  }
  else
  {
    uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56);
    return v56(a1, 1, 1, v28);
  }
}

uint64_t type metadata accessor for PlayButtonLargeToggleStyle(uint64_t a1)
{
  return sub_100029CA4(a1, qword_1000A2968);
}

uint64_t sub_100073F08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100073F50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100073FB0()
{
  unint64_t result = qword_1000A2908;
  if (!qword_1000A2908)
  {
    sub_10000E49C(&qword_1000A28D0);
    sub_10000E49C(&qword_1000A28C0);
    type metadata accessor for PlayButtonLargeToggleStyle(255);
    sub_100015428(&qword_1000A28F8, &qword_1000A28C0);
    sub_100073F08(&qword_1000A2900, (void (*)(uint64_t))type metadata accessor for PlayButtonLargeToggleStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2908);
  }
  return result;
}

void *sub_1000740D4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    a1[10] = a2[10];
    id v166 = (int *)type metadata accessor for UpNextEntry.Episode(0);
    uint64_t v11 = v166[10];
    __dst = (char *)a1 + v11;
    int v161 = a1;
    id v162 = a2;
    uint64_t v12 = (char *)a2 + v11;
    uint64_t v13 = sub_10008A170();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v165 = v15;
    uint64_t v163 = v16;
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000903C(&qword_1000A1038);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v20 = v166;
    uint64_t v21 = v166[11];
    uint64_t v19 = v161;
    uint64_t v22 = (void *)((char *)v161 + v21);
    uint64_t v23 = (void *)((char *)v162 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v166[12];
    uint64_t v26 = (void *)((char *)v161 + v25);
    uint64_t v27 = (void *)((char *)v162 + v25);
    uint64_t v28 = (int *)sub_10008A340();
    __dsta = (void *)*((void *)v28 - 1);
    uint64_t v29 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
    swift_bridgeObjectRetain();
    if (v29(v27, 1, v28))
    {
      uint64_t v30 = sub_10000903C(&qword_1000A1040);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v27[1];
      void *v26 = *v27;
      v26[1] = v31;
      int v32 = *((unsigned __int8 *)v27 + 32);
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
        *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
      }
      else
      {
        uint64_t v33 = v27[2];
        uint64_t v34 = v27[3];
        sub_100009080(v33, v34, v32);
        v26[2] = v33;
        v26[3] = v34;
        *((unsigned char *)v26 + 32) = v32;
      }
      *(_OWORD *)(v26 + 5) = *(_OWORD *)(v27 + 5);
      uint64_t v35 = (id *)(v27 + 7);
      int v36 = *((unsigned __int8 *)v27 + 64);
      if (v36 == 255)
      {
        v26[7] = *v35;
        *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
      }
      else
      {
        id v37 = *v35;
        sub_100009098(*v35, *((unsigned char *)v27 + 64));
        v26[7] = v37;
        *((unsigned char *)v26 + 64) = v36;
      }
      uint64_t v38 = (id *)(v27 + 9);
      int v39 = *((unsigned __int8 *)v27 + 80);
      if (v39 == 255)
      {
        v26[9] = *v38;
        *((unsigned char *)v26 + 80) = *((unsigned char *)v27 + 80);
      }
      else
      {
        id v40 = *v38;
        sub_100009098(*v38, *((unsigned char *)v27 + 80));
        v26[9] = v40;
        *((unsigned char *)v26 + 80) = v39;
      }
      uint64_t v41 = (id *)(v27 + 11);
      int v42 = *((unsigned __int8 *)v27 + 96);
      if (v42 == 255)
      {
        v26[11] = *v41;
        *((unsigned char *)v26 + 96) = *((unsigned char *)v27 + 96);
      }
      else
      {
        id v43 = *v41;
        sub_100009098(*v41, *((unsigned char *)v27 + 96));
        v26[11] = v43;
        *((unsigned char *)v26 + 96) = v42;
      }
      uint64_t v44 = (id *)(v27 + 13);
      int v45 = *((unsigned __int8 *)v27 + 112);
      if (v45 == 255)
      {
        v26[13] = *v44;
        *((unsigned char *)v26 + 112) = *((unsigned char *)v27 + 112);
      }
      else
      {
        id v46 = *v44;
        sub_100009098(*v44, *((unsigned char *)v27 + 112));
        v26[13] = v46;
        *((unsigned char *)v26 + 112) = v45;
      }
      uint64_t v47 = (id *)(v27 + 15);
      int v48 = *((unsigned __int8 *)v27 + 128);
      if (v48 == 255)
      {
        v26[15] = *v47;
        *((unsigned char *)v26 + 128) = *((unsigned char *)v27 + 128);
      }
      else
      {
        id v49 = *v47;
        sub_100009098(*v47, *((unsigned char *)v27 + 128));
        v26[15] = v49;
        *((unsigned char *)v26 + 128) = v48;
      }
      uint64_t v20 = v166;
      *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
      uint64_t v50 = v28[11];
      uint64_t v51 = (char *)v26 + v50;
      uint64_t v52 = (char *)v27 + v50;
      uint64_t v53 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v28[12];
      uint64_t v55 = (void *)((char *)v26 + v54);
      uint64_t v56 = (void *)((char *)v27 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      *((unsigned char *)v26 + v28[13]) = *((unsigned char *)v27 + v28[13]);
      *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
      *((unsigned char *)v26 + v28[15]) = *((unsigned char *)v27 + v28[15]);
      uint64_t v58 = v28[16];
      uint64_t v59 = (void *)((char *)v26 + v58);
      uint64_t v60 = (void *)((char *)v27 + v58);
      uint64_t v61 = v60[1];
      void *v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(v26, 0, 1, v28);
    }
    uint64_t v63 = v20[13];
    char v64 = (void *)((char *)v161 + v63);
    uint64_t v65 = (void *)((char *)v162 + v63);
    if (v29((void *)((char *)v162 + v63), 1, v28))
    {
      uint64_t v66 = sub_10000903C(&qword_1000A1040);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v14;
    }
    else
    {
      uint64_t v68 = v65[1];
      void *v64 = *v65;
      v64[1] = v68;
      int v69 = *((unsigned __int8 *)v65 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = v14;
      if (v69 == 255)
      {
        *((_OWORD *)v64 + 1) = *((_OWORD *)v65 + 1);
        *((unsigned char *)v64 + 32) = *((unsigned char *)v65 + 32);
      }
      else
      {
        uint64_t v70 = v65[2];
        uint64_t v71 = v65[3];
        sub_100009080(v70, v71, v69);
        v64[2] = v70;
        v64[3] = v71;
        *((unsigned char *)v64 + 32) = v69;
      }
      *(_OWORD *)(v64 + 5) = *(_OWORD *)(v65 + 5);
      uint64_t v72 = (id *)(v65 + 7);
      int v73 = *((unsigned __int8 *)v65 + 64);
      if (v73 == 255)
      {
        v64[7] = *v72;
        *((unsigned char *)v64 + 64) = *((unsigned char *)v65 + 64);
      }
      else
      {
        id v74 = *v72;
        sub_100009098(*v72, *((unsigned char *)v65 + 64));
        v64[7] = v74;
        *((unsigned char *)v64 + 64) = v73;
      }
      uint64_t v75 = (id *)(v65 + 9);
      int v76 = *((unsigned __int8 *)v65 + 80);
      if (v76 == 255)
      {
        v64[9] = *v75;
        *((unsigned char *)v64 + 80) = *((unsigned char *)v65 + 80);
      }
      else
      {
        id v77 = *v75;
        sub_100009098(*v75, *((unsigned char *)v65 + 80));
        v64[9] = v77;
        *((unsigned char *)v64 + 80) = v76;
      }
      uint64_t v78 = (id *)(v65 + 11);
      int v79 = *((unsigned __int8 *)v65 + 96);
      if (v79 == 255)
      {
        v64[11] = *v78;
        *((unsigned char *)v64 + 96) = *((unsigned char *)v65 + 96);
      }
      else
      {
        id v80 = *v78;
        sub_100009098(*v78, *((unsigned char *)v65 + 96));
        v64[11] = v80;
        *((unsigned char *)v64 + 96) = v79;
      }
      uint64_t v81 = (id *)(v65 + 13);
      int v82 = *((unsigned __int8 *)v65 + 112);
      if (v82 == 255)
      {
        v64[13] = *v81;
        *((unsigned char *)v64 + 112) = *((unsigned char *)v65 + 112);
      }
      else
      {
        id v83 = *v81;
        sub_100009098(*v81, *((unsigned char *)v65 + 112));
        v64[13] = v83;
        *((unsigned char *)v64 + 112) = v82;
      }
      uint64_t v84 = (id *)(v65 + 15);
      int v85 = *((unsigned __int8 *)v65 + 128);
      if (v85 == 255)
      {
        v64[15] = *v84;
        *((unsigned char *)v64 + 128) = *((unsigned char *)v65 + 128);
      }
      else
      {
        id v86 = *v84;
        sub_100009098(*v84, *((unsigned char *)v65 + 128));
        v64[15] = v86;
        *((unsigned char *)v64 + 128) = v85;
      }
      uint64_t v20 = v166;
      *((unsigned char *)v64 + 129) = *((unsigned char *)v65 + 129);
      uint64_t v87 = v28[11];
      int v88 = (char *)v64 + v87;
      uint64_t v89 = (char *)v65 + v87;
      uint64_t v90 = sub_10008A300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      uint64_t v91 = v28[12];
      uint64_t v92 = (void *)((char *)v64 + v91);
      uint64_t v93 = (void *)((char *)v65 + v91);
      uint64_t v94 = v93[1];
      void *v92 = *v93;
      v92[1] = v94;
      *((unsigned char *)v64 + v28[13]) = *((unsigned char *)v65 + v28[13]);
      *((unsigned char *)v64 + v28[14]) = *((unsigned char *)v65 + v28[14]);
      *((unsigned char *)v64 + v28[15]) = *((unsigned char *)v65 + v28[15]);
      uint64_t v95 = v28[16];
      uint64_t v96 = (void *)((char *)v64 + v95);
      uint64_t v97 = (void *)((char *)v65 + v95);
      uint64_t v98 = v97[1];
      void *v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99(v64, 0, 1, v28);
    }
    uint64_t v100 = v20[14];
    uint64_t v101 = *(void **)((char *)v162 + v100);
    *(void *)((char *)v161 + v100) = v101;
    uint64_t v102 = v20[15];
    uint64_t v103 = (char *)v161 + v102;
    uint64_t v104 = (char *)v162 + v102;
    uint64_t v105 = sub_10008A050();
    uint64_t v106 = *(void *)(v105 - 8);
    char v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
    id v108 = v101;
    if (v107(v104, 1, v105))
    {
      uint64_t v109 = sub_10000903C(&qword_1000A1048);
      memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
    }
    *((unsigned char *)v161 + v166[16]) = *((unsigned char *)v162 + v166[16]);
    uint64_t v110 = v166[17];
    uint64_t v111 = (char *)v161 + v110;
    long long v112 = (char *)v162 + v110;
    *(void *)uint64_t v111 = *(void *)v112;
    v111[8] = v112[8];
    uint64_t v113 = v166[18];
    uint64_t v114 = (char *)v161 + v113;
    uint64_t v115 = (char *)v162 + v113;
    *(void *)uint64_t v114 = *(void *)v115;
    v114[8] = v115[8];
    uint64_t v116 = v166[19];
    uint64_t v117 = (char *)v161 + v116;
    uint64_t v118 = (char *)v162 + v116;
    if (v165((char *)v162 + v116, 1, v163))
    {
      uint64_t v119 = sub_10000903C(&qword_1000A1038);
      memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v117, v118, v163);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v117, 0, 1, v163);
    }
    uint64_t v120 = v166[20];
    uint64_t v121 = (char *)v161 + v120;
    uint64_t v122 = (char *)v162 + v120;
    if (v165((char *)v162 + v120, 1, v163))
    {
      uint64_t v123 = sub_10000903C(&qword_1000A1038);
      memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v121, v122, v163);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v121, 0, 1, v163);
    }
    uint64_t v124 = v166[21];
    uint64_t v125 = (void *)((char *)v161 + v124);
    uint64_t v126 = (void *)((char *)v162 + v124);
    if (*v126)
    {
      uint64_t v127 = v126[1];
      uint64_t v128 = v126[2];
      void *v125 = *v126;
      v125[1] = v127;
      v125[2] = v128;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
      v125[2] = v126[2];
    }
    uint64_t v129 = v166[22];
    uint64_t v130 = (char *)v161 + v129;
    uint64_t v131 = (char *)v162 + v129;
    uint64_t v132 = sub_10000903C(&qword_1000A1050);
    uint64_t v133 = *(void *)(v132 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
    {
      uint64_t v134 = sub_10000903C(&qword_1000A1058);
      memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      int v135 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v135(v130, v131, v163);
      v135(&v130[*(int *)(v132 + 36)], &v131[*(int *)(v132 + 36)], v163);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
    }
    int v136 = (int *)type metadata accessor for WidgetPredictedPlayState();
    uint64_t v137 = v136[5];
    uint64_t v138 = &v130[v137];
    int v139 = &v131[v137];
    uint64_t v140 = sub_10008A740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
    uint64_t v141 = v136[6];
    uint64_t v142 = &v130[v141];
    int v143 = &v131[v141];
    uint64_t v144 = sub_10008A4B0();
    uint64_t v145 = *(void *)(v144 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
    {
      uint64_t v146 = sub_10000903C(&qword_1000A1060);
      memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v142, v143, v144);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
    }
    uint64_t v147 = v136[7];
    int v148 = &v130[v147];
    int v149 = &v131[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *(void *)int v148 = *(void *)v149;
    *((void *)v148 + 1) = v150;
    uint64_t v151 = v136[8];
    int v152 = &v130[v151];
    int v153 = &v131[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)int v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    uint64_t v155 = a3[6];
    *(void *)((char *)v161 + a3[5]) = *(void *)((char *)v162 + a3[5]);
    *(void *)((char *)v161 + v155) = *(void *)((char *)v162 + v155);
    uint64_t v156 = a3[8];
    *(void *)((char *)v161 + a3[7]) = *(void *)((char *)v162 + a3[7]);
    *(void *)((char *)v161 + v156) = *(void *)((char *)v162 + v156);
    uint64_t v157 = a3[10];
    *(void *)((char *)v161 + a3[9]) = *(void *)((char *)v162 + a3[9]);
    *(void *)((char *)v161 + v157) = *(void *)((char *)v162 + v157);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v19;
}

void *sub_100074E24(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  id v162 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v10 = v162[10];
  __dst = (char *)a1 + v10;
  id v158 = a1;
  int v159 = a2;
  uint64_t v11 = (char *)a2 + v10;
  uint64_t v12 = sub_10008A170();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v160 = v15;
  if (v14(v11, 1, v15))
  {
    uint64_t v16 = sub_10000903C(&qword_1000A1038);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v17 = v162;
  uint64_t v18 = v162[11];
  uint64_t v19 = (void *)((char *)v158 + v18);
  uint64_t v20 = (void *)((char *)v159 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v162[12];
  uint64_t v23 = (void *)((char *)v158 + v22);
  uint64_t v24 = (void *)((char *)v159 + v22);
  uint64_t v25 = (int *)sub_10008A340();
  __dsta = (void *)*((void *)v25 - 1);
  uint64_t v26 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    uint64_t v27 = sub_10000903C(&qword_1000A1040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v24[1];
    void *v23 = *v24;
    v23[1] = v28;
    int v29 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
    }
    else
    {
      uint64_t v30 = v24[2];
      uint64_t v31 = v24[3];
      sub_100009080(v30, v31, v29);
      v23[2] = v30;
      void v23[3] = v31;
      *((unsigned char *)v23 + 32) = v29;
    }
    *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
    int v32 = (id *)(v24 + 7);
    int v33 = *((unsigned __int8 *)v24 + 64);
    if (v33 == 255)
    {
      v23[7] = *v32;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
    }
    else
    {
      id v34 = *v32;
      sub_100009098(*v32, *((unsigned char *)v24 + 64));
      v23[7] = v34;
      *((unsigned char *)v23 + 64) = v33;
    }
    uint64_t v35 = (id *)(v24 + 9);
    int v36 = *((unsigned __int8 *)v24 + 80);
    if (v36 == 255)
    {
      v23[9] = *v35;
      *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
    }
    else
    {
      id v37 = *v35;
      sub_100009098(*v35, *((unsigned char *)v24 + 80));
      v23[9] = v37;
      *((unsigned char *)v23 + 80) = v36;
    }
    uint64_t v38 = (id *)(v24 + 11);
    int v39 = *((unsigned __int8 *)v24 + 96);
    if (v39 == 255)
    {
      v23[11] = *v38;
      *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
    }
    else
    {
      id v40 = *v38;
      sub_100009098(*v38, *((unsigned char *)v24 + 96));
      v23[11] = v40;
      *((unsigned char *)v23 + 96) = v39;
    }
    uint64_t v41 = (id *)(v24 + 13);
    int v42 = *((unsigned __int8 *)v24 + 112);
    if (v42 == 255)
    {
      v23[13] = *v41;
      *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_100009098(*v41, *((unsigned char *)v24 + 112));
      v23[13] = v43;
      *((unsigned char *)v23 + 112) = v42;
    }
    uint64_t v44 = (id *)(v24 + 15);
    int v45 = *((unsigned __int8 *)v24 + 128);
    if (v45 == 255)
    {
      v23[15] = *v44;
      *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_100009098(*v44, *((unsigned char *)v24 + 128));
      v23[15] = v46;
      *((unsigned char *)v23 + 128) = v45;
    }
    uint64_t v17 = v162;
    *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
    uint64_t v47 = v25[11];
    int v48 = (char *)v23 + v47;
    id v49 = (char *)v24 + v47;
    uint64_t v50 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v25[12];
    uint64_t v52 = (void *)((char *)v23 + v51);
    uint64_t v53 = (void *)((char *)v24 + v51);
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
    *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
    *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
    uint64_t v55 = v25[16];
    uint64_t v56 = (void *)((char *)v23 + v55);
    uint64_t v57 = (void *)((char *)v24 + v55);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v23, 0, 1, v25);
  }
  uint64_t v60 = v17[13];
  uint64_t v61 = (void *)((char *)v158 + v60);
  uint64_t v62 = (void *)((char *)v159 + v60);
  if (v26((void *)((char *)v159 + v60), 1, v25))
  {
    uint64_t v63 = sub_10000903C(&qword_1000A1040);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    uint64_t v64 = v13;
  }
  else
  {
    uint64_t v65 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v65;
    int v66 = *((unsigned __int8 *)v62 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = v13;
    if (v66 == 255)
    {
      *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
      *((unsigned char *)v61 + 32) = *((unsigned char *)v62 + 32);
    }
    else
    {
      uint64_t v67 = v62[2];
      uint64_t v68 = v62[3];
      sub_100009080(v67, v68, v66);
      v61[2] = v67;
      v61[3] = v68;
      *((unsigned char *)v61 + 32) = v66;
    }
    *(_OWORD *)(v61 + 5) = *(_OWORD *)(v62 + 5);
    int v69 = (id *)(v62 + 7);
    int v70 = *((unsigned __int8 *)v62 + 64);
    if (v70 == 255)
    {
      v61[7] = *v69;
      *((unsigned char *)v61 + 64) = *((unsigned char *)v62 + 64);
    }
    else
    {
      id v71 = *v69;
      sub_100009098(*v69, *((unsigned char *)v62 + 64));
      v61[7] = v71;
      *((unsigned char *)v61 + 64) = v70;
    }
    uint64_t v72 = (id *)(v62 + 9);
    int v73 = *((unsigned __int8 *)v62 + 80);
    if (v73 == 255)
    {
      v61[9] = *v72;
      *((unsigned char *)v61 + 80) = *((unsigned char *)v62 + 80);
    }
    else
    {
      id v74 = *v72;
      sub_100009098(*v72, *((unsigned char *)v62 + 80));
      v61[9] = v74;
      *((unsigned char *)v61 + 80) = v73;
    }
    uint64_t v75 = (id *)(v62 + 11);
    int v76 = *((unsigned __int8 *)v62 + 96);
    if (v76 == 255)
    {
      v61[11] = *v75;
      *((unsigned char *)v61 + 96) = *((unsigned char *)v62 + 96);
    }
    else
    {
      id v77 = *v75;
      sub_100009098(*v75, *((unsigned char *)v62 + 96));
      v61[11] = v77;
      *((unsigned char *)v61 + 96) = v76;
    }
    uint64_t v78 = (id *)(v62 + 13);
    int v79 = *((unsigned __int8 *)v62 + 112);
    if (v79 == 255)
    {
      v61[13] = *v78;
      *((unsigned char *)v61 + 112) = *((unsigned char *)v62 + 112);
    }
    else
    {
      id v80 = *v78;
      sub_100009098(*v78, *((unsigned char *)v62 + 112));
      v61[13] = v80;
      *((unsigned char *)v61 + 112) = v79;
    }
    uint64_t v81 = (id *)(v62 + 15);
    int v82 = *((unsigned __int8 *)v62 + 128);
    if (v82 == 255)
    {
      v61[15] = *v81;
      *((unsigned char *)v61 + 128) = *((unsigned char *)v62 + 128);
    }
    else
    {
      id v83 = *v81;
      sub_100009098(*v81, *((unsigned char *)v62 + 128));
      v61[15] = v83;
      *((unsigned char *)v61 + 128) = v82;
    }
    uint64_t v17 = v162;
    *((unsigned char *)v61 + 129) = *((unsigned char *)v62 + 129);
    uint64_t v84 = v25[11];
    int v85 = (char *)v61 + v84;
    id v86 = (char *)v62 + v84;
    uint64_t v87 = sub_10008A300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    uint64_t v88 = v25[12];
    uint64_t v89 = (void *)((char *)v61 + v88);
    uint64_t v90 = (void *)((char *)v62 + v88);
    uint64_t v91 = v90[1];
    void *v89 = *v90;
    v89[1] = v91;
    *((unsigned char *)v61 + v25[13]) = *((unsigned char *)v62 + v25[13]);
    *((unsigned char *)v61 + v25[14]) = *((unsigned char *)v62 + v25[14]);
    *((unsigned char *)v61 + v25[15]) = *((unsigned char *)v62 + v25[15]);
    uint64_t v92 = v25[16];
    uint64_t v93 = (void *)((char *)v61 + v92);
    uint64_t v94 = (void *)((char *)v62 + v92);
    uint64_t v95 = v94[1];
    void *v93 = *v94;
    v93[1] = v95;
    uint64_t v96 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96(v61, 0, 1, v25);
  }
  uint64_t v97 = v17[14];
  uint64_t v98 = *(void **)((char *)v159 + v97);
  *(void *)((char *)v158 + v97) = v98;
  uint64_t v99 = v17[15];
  uint64_t v100 = (char *)v158 + v99;
  uint64_t v101 = (char *)v159 + v99;
  uint64_t v102 = sub_10008A050();
  uint64_t v103 = *(void *)(v102 - 8);
  uint64_t v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
  id v105 = v98;
  if (v104(v101, 1, v102))
  {
    uint64_t v106 = sub_10000903C(&qword_1000A1048);
    memcpy(v100, v101, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  *((unsigned char *)v158 + v162[16]) = *((unsigned char *)v159 + v162[16]);
  uint64_t v107 = v162[17];
  id v108 = (char *)v158 + v107;
  uint64_t v109 = (char *)v159 + v107;
  *(void *)id v108 = *(void *)v109;
  v108[8] = v109[8];
  uint64_t v110 = v162[18];
  uint64_t v111 = (char *)v158 + v110;
  long long v112 = (char *)v159 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  v111[8] = v112[8];
  uint64_t v113 = v162[19];
  uint64_t v114 = (char *)v158 + v113;
  uint64_t v115 = (char *)v159 + v113;
  if (v14((char *)v159 + v113, 1, v160))
  {
    uint64_t v116 = sub_10000903C(&qword_1000A1038);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v114, v115, v160);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v114, 0, 1, v160);
  }
  uint64_t v117 = v162[20];
  uint64_t v118 = (char *)v158 + v117;
  uint64_t v119 = (char *)v159 + v117;
  if (v14((char *)v159 + v117, 1, v160))
  {
    uint64_t v120 = sub_10000903C(&qword_1000A1038);
    memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v118, v119, v160);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v160);
  }
  uint64_t v121 = v162[21];
  uint64_t v122 = (void *)((char *)v158 + v121);
  uint64_t v123 = (void *)((char *)v159 + v121);
  if (*v123)
  {
    uint64_t v124 = v123[1];
    uint64_t v125 = v123[2];
    void *v122 = *v123;
    v122[1] = v124;
    v122[2] = v125;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    v122[2] = v123[2];
  }
  uint64_t v126 = v162[22];
  uint64_t v127 = (char *)v158 + v126;
  uint64_t v128 = (char *)v159 + v126;
  uint64_t v129 = sub_10000903C(&qword_1000A1050);
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = sub_10000903C(&qword_1000A1058);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v132(v127, v128, v160);
    v132(&v127[*(int *)(v129 + 36)], &v128[*(int *)(v129 + 36)], v160);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  uint64_t v133 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v134 = v133[5];
  int v135 = &v127[v134];
  int v136 = &v128[v134];
  uint64_t v137 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
  uint64_t v138 = v133[6];
  int v139 = &v127[v138];
  uint64_t v140 = &v128[v138];
  uint64_t v141 = sub_10008A4B0();
  uint64_t v142 = *(void *)(v141 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
  {
    uint64_t v143 = sub_10000903C(&qword_1000A1060);
    memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  }
  uint64_t v144 = v133[7];
  uint64_t v145 = &v127[v144];
  uint64_t v146 = &v128[v144];
  uint64_t v147 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v147;
  uint64_t v148 = v133[8];
  int v149 = &v127[v148];
  uint64_t v150 = &v128[v148];
  uint64_t v151 = *((void *)v150 + 1);
  *(void *)int v149 = *(void *)v150;
  *((void *)v149 + 1) = v151;
  uint64_t v152 = a3[6];
  *(void *)((char *)v158 + a3[5]) = *(void *)((char *)v159 + a3[5]);
  *(void *)((char *)v158 + v152) = *(void *)((char *)v159 + v152);
  uint64_t v153 = a3[8];
  *(void *)((char *)v158 + a3[7]) = *(void *)((char *)v159 + a3[7]);
  *(void *)((char *)v158 + v153) = *(void *)((char *)v159 + v153);
  uint64_t v154 = a3[10];
  *(void *)((char *)v158 + a3[9]) = *(void *)((char *)v159 + a3[9]);
  *(void *)((char *)v158 + v154) = *(void *)((char *)v159 + v154);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v158;
}

void *sub_100075B24(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008A170();
  uint64_t v314 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v314 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  uint64_t v311 = a3;
  uint64_t v309 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v314 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10000903C(&qword_1000A1038);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v314 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = v6[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[12];
  uint64_t v19 = (uint64_t)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_10008A340();
  uint64_t v308 = *((void *)v21 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v308 + 48);
  int v23 = v22(v19, 1, v21);
  int v24 = v22((uint64_t)v20, 1, v21);
  uint64_t v310 = v10;
  if (!v23)
  {
    if (!v24)
    {
      v307 = v22;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = (long long *)(v19 + 16);
      uint64_t v30 = (long long *)(v20 + 16);
      int v31 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v31 == 255)
        {
          long long v72 = *v30;
          *(unsigned char *)(v19 + 32) = v20[32];
          *int v29 = v72;
        }
        else
        {
          uint64_t v69 = *((void *)v20 + 2);
          uint64_t v70 = *((void *)v20 + 3);
          sub_100009080(v69, v70, v20[32]);
          *(void *)(v19 + 16) = v69;
          *(void *)(v19 + 24) = v70;
          *(unsigned char *)(v19 + 32) = v31;
        }
      }
      else if (v31 == 255)
      {
        sub_10000BE14(v19 + 16);
        char v71 = v20[32];
        *int v29 = *v30;
        *(unsigned char *)(v19 + 32) = v71;
      }
      else
      {
        uint64_t v33 = *((void *)v20 + 2);
        uint64_t v32 = *((void *)v20 + 3);
        sub_100009080(v33, v32, v20[32]);
        uint64_t v34 = *(void *)(v19 + 16);
        uint64_t v35 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v33;
        *(void *)(v19 + 24) = v32;
        unsigned __int8 v36 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v31;
        sub_1000096D4(v34, v35, v36);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v73 = (void **)(v19 + 56);
      id v74 = (void **)(v20 + 56);
      int v75 = v20[64];
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v75 == 255)
        {
          uint64_t v81 = *v74;
          *(unsigned char *)(v19 + 64) = v20[64];
          *int v73 = v81;
        }
        else
        {
          int v79 = *v74;
          sub_100009098(v79, v20[64]);
          *(void *)(v19 + 56) = v79;
          *(unsigned char *)(v19 + 64) = v75;
        }
      }
      else if (v75 == 255)
      {
        sub_10000BE68(v19 + 56);
        char v80 = v20[64];
        *int v73 = *v74;
        *(unsigned char *)(v19 + 64) = v80;
      }
      else
      {
        int v76 = *v74;
        sub_100009098(v76, v20[64]);
        id v77 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v76;
        char v78 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v75;
        sub_1000096EC(v77, v78);
      }
      int v82 = (void **)(v19 + 72);
      id v83 = (void **)(v20 + 72);
      int v84 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v84 == 255)
        {
          uint64_t v90 = *v83;
          *(unsigned char *)(v19 + 80) = v20[80];
          *int v82 = v90;
        }
        else
        {
          uint64_t v88 = *v83;
          sub_100009098(v88, v20[80]);
          *(void *)(v19 + 72) = v88;
          *(unsigned char *)(v19 + 80) = v84;
        }
      }
      else if (v84 == 255)
      {
        sub_10000BE68(v19 + 72);
        char v89 = v20[80];
        *int v82 = *v83;
        *(unsigned char *)(v19 + 80) = v89;
      }
      else
      {
        int v85 = *v83;
        sub_100009098(v85, v20[80]);
        id v86 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v85;
        char v87 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v84;
        sub_1000096EC(v86, v87);
      }
      uint64_t v91 = (void **)(v19 + 88);
      uint64_t v92 = (void **)(v20 + 88);
      int v93 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v93 == 255)
        {
          uint64_t v99 = *v92;
          *(unsigned char *)(v19 + 96) = v20[96];
          *uint64_t v91 = v99;
        }
        else
        {
          uint64_t v97 = *v92;
          sub_100009098(v97, v20[96]);
          *(void *)(v19 + 88) = v97;
          *(unsigned char *)(v19 + 96) = v93;
        }
      }
      else if (v93 == 255)
      {
        sub_10000BE68(v19 + 88);
        char v98 = v20[96];
        *uint64_t v91 = *v92;
        *(unsigned char *)(v19 + 96) = v98;
      }
      else
      {
        uint64_t v94 = *v92;
        sub_100009098(v94, v20[96]);
        uint64_t v95 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v94;
        char v96 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v93;
        sub_1000096EC(v95, v96);
      }
      uint64_t v100 = (void **)(v19 + 104);
      uint64_t v101 = (void **)(v20 + 104);
      int v102 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v102 == 255)
        {
          id v108 = *v101;
          *(unsigned char *)(v19 + 112) = v20[112];
          *uint64_t v100 = v108;
        }
        else
        {
          uint64_t v106 = *v101;
          sub_100009098(v106, v20[112]);
          *(void *)(v19 + 104) = v106;
          *(unsigned char *)(v19 + 112) = v102;
        }
      }
      else if (v102 == 255)
      {
        sub_10000BE68(v19 + 104);
        char v107 = v20[112];
        *uint64_t v100 = *v101;
        *(unsigned char *)(v19 + 112) = v107;
      }
      else
      {
        uint64_t v103 = *v101;
        sub_100009098(v103, v20[112]);
        uint64_t v104 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v103;
        char v105 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v102;
        sub_1000096EC(v104, v105);
      }
      uint64_t v109 = (void **)(v19 + 120);
      uint64_t v110 = (void **)(v20 + 120);
      int v111 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v111 == 255)
        {
          uint64_t v117 = *v110;
          *(unsigned char *)(v19 + 128) = v20[128];
          *uint64_t v109 = v117;
        }
        else
        {
          uint64_t v115 = *v110;
          sub_100009098(v115, v20[128]);
          *(void *)(v19 + 120) = v115;
          *(unsigned char *)(v19 + 128) = v111;
        }
      }
      else if (v111 == 255)
      {
        sub_10000BE68(v19 + 120);
        char v116 = v20[128];
        *uint64_t v109 = *v110;
        *(unsigned char *)(v19 + 128) = v116;
      }
      else
      {
        long long v112 = *v110;
        sub_100009098(v112, v20[128]);
        uint64_t v113 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v112;
        char v114 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v111;
        sub_1000096EC(v113, v114);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v118 = v21[11];
      uint64_t v119 = v19 + v118;
      uint64_t v120 = &v20[v118];
      uint64_t v121 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
      uint64_t v122 = v21[12];
      uint64_t v123 = (void *)(v19 + v122);
      uint64_t v124 = &v20[v122];
      *uint64_t v123 = *(void *)v124;
      v123[1] = *((void *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v125 = v21[16];
      uint64_t v126 = (void *)(v19 + v125);
      uint64_t v127 = &v20[v125];
      void *v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_100073F50(v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_13:
    uint64_t v28 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_76;
  }
  if (v24) {
    goto LABEL_13;
  }
  v307 = v22;
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v25 = v20[32];
  swift_bridgeObjectRetain();
  if (v25 == 255)
  {
    long long v37 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v37;
  }
  else
  {
    uint64_t v26 = *((void *)v20 + 2);
    uint64_t v27 = *((void *)v20 + 3);
    sub_100009080(v26, v27, v25);
    *(void *)(v19 + 16) = v26;
    *(void *)(v19 + 24) = v27;
    *(unsigned char *)(v19 + 32) = v25;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v38 = (id *)(v20 + 56);
  int v39 = v20[64];
  if (v39 == 255)
  {
    id v41 = *v38;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v41;
  }
  else
  {
    id v40 = *v38;
    sub_100009098(*v38, v20[64]);
    *(void *)(v19 + 56) = v40;
    *(unsigned char *)(v19 + 64) = v39;
  }
  int v42 = (id *)(v20 + 72);
  int v43 = v20[80];
  if (v43 == 255)
  {
    id v45 = *v42;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v45;
  }
  else
  {
    id v44 = *v42;
    sub_100009098(*v42, v20[80]);
    *(void *)(v19 + 72) = v44;
    *(unsigned char *)(v19 + 80) = v43;
  }
  id v46 = (id *)(v20 + 88);
  int v47 = v20[96];
  if (v47 == 255)
  {
    id v49 = *v46;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v49;
  }
  else
  {
    id v48 = *v46;
    sub_100009098(*v46, v20[96]);
    *(void *)(v19 + 88) = v48;
    *(unsigned char *)(v19 + 96) = v47;
  }
  uint64_t v50 = (id *)(v20 + 104);
  int v51 = v20[112];
  if (v51 == 255)
  {
    id v53 = *v50;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v53;
  }
  else
  {
    id v52 = *v50;
    sub_100009098(*v50, v20[112]);
    *(void *)(v19 + 104) = v52;
    *(unsigned char *)(v19 + 112) = v51;
  }
  uint64_t v54 = (id *)(v20 + 120);
  int v55 = v20[128];
  if (v55 == 255)
  {
    id v57 = *v54;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v57;
  }
  else
  {
    id v56 = *v54;
    sub_100009098(*v54, v20[128]);
    *(void *)(v19 + 120) = v56;
    *(unsigned char *)(v19 + 128) = v55;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v58 = v21[11];
  uint64_t v59 = v19 + v58;
  uint64_t v60 = &v20[v58];
  uint64_t v61 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  uint64_t v62 = v21[12];
  uint64_t v63 = (void *)(v19 + v62);
  uint64_t v64 = &v20[v62];
  *uint64_t v63 = *(void *)v64;
  v63[1] = *((void *)v64 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v65 = v21[16];
  int v66 = (void *)(v19 + v65);
  uint64_t v67 = &v20[v65];
  *int v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  uint64_t v68 = *(void (**)(uint64_t, void, uint64_t, int *))(v308 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v19, 0, 1, v21);
LABEL_75:
  uint64_t v22 = v307;
LABEL_76:
  uint64_t v128 = v6[13];
  uint64_t v129 = (uint64_t)a1 + v128;
  uint64_t v130 = (char *)a2 + v128;
  int v131 = v22((uint64_t)a1 + v128, 1, v21);
  uint64_t v132 = (uint64_t (*)(char *, uint64_t, int *))v22;
  int v133 = v131;
  int v134 = v132(v130, 1, v21);
  if (v133)
  {
    if (!v134)
    {
      *(void *)uint64_t v129 = *(void *)v130;
      *(void *)(v129 + 8) = *((void *)v130 + 1);
      int v135 = v130[32];
      swift_bridgeObjectRetain();
      if (v135 == 255)
      {
        long long v147 = *((_OWORD *)v130 + 1);
        *(unsigned char *)(v129 + 32) = v130[32];
        *(_OWORD *)(v129 + 16) = v147;
      }
      else
      {
        uint64_t v136 = *((void *)v130 + 2);
        uint64_t v137 = *((void *)v130 + 3);
        sub_100009080(v136, v137, v135);
        *(void *)(v129 + 16) = v136;
        *(void *)(v129 + 24) = v137;
        *(unsigned char *)(v129 + 32) = v135;
      }
      *(void *)(v129 + 40) = *((void *)v130 + 5);
      *(void *)(v129 + 48) = *((void *)v130 + 6);
      uint64_t v148 = (id *)(v130 + 56);
      int v149 = v130[64];
      if (v149 == 255)
      {
        id v151 = *v148;
        *(unsigned char *)(v129 + 64) = v130[64];
        *(void *)(v129 + 56) = v151;
      }
      else
      {
        id v150 = *v148;
        sub_100009098(*v148, v130[64]);
        *(void *)(v129 + 56) = v150;
        *(unsigned char *)(v129 + 64) = v149;
      }
      uint64_t v152 = (id *)(v130 + 72);
      int v153 = v130[80];
      if (v153 == 255)
      {
        id v155 = *v152;
        *(unsigned char *)(v129 + 80) = v130[80];
        *(void *)(v129 + 72) = v155;
      }
      else
      {
        id v154 = *v152;
        sub_100009098(*v152, v130[80]);
        *(void *)(v129 + 72) = v154;
        *(unsigned char *)(v129 + 80) = v153;
      }
      uint64_t v156 = (id *)(v130 + 88);
      int v157 = v130[96];
      if (v157 == 255)
      {
        id v159 = *v156;
        *(unsigned char *)(v129 + 96) = v130[96];
        *(void *)(v129 + 88) = v159;
      }
      else
      {
        id v158 = *v156;
        sub_100009098(*v156, v130[96]);
        *(void *)(v129 + 88) = v158;
        *(unsigned char *)(v129 + 96) = v157;
      }
      uint64_t v160 = (id *)(v130 + 104);
      int v161 = v130[112];
      if (v161 == 255)
      {
        id v163 = *v160;
        *(unsigned char *)(v129 + 112) = v130[112];
        *(void *)(v129 + 104) = v163;
      }
      else
      {
        id v162 = *v160;
        sub_100009098(*v160, v130[112]);
        *(void *)(v129 + 104) = v162;
        *(unsigned char *)(v129 + 112) = v161;
      }
      int v164 = (id *)(v130 + 120);
      int v165 = v130[128];
      if (v165 == 255)
      {
        id v167 = *v164;
        *(unsigned char *)(v129 + 128) = v130[128];
        *(void *)(v129 + 120) = v167;
      }
      else
      {
        id v166 = *v164;
        sub_100009098(*v164, v130[128]);
        *(void *)(v129 + 120) = v166;
        *(unsigned char *)(v129 + 128) = v165;
      }
      *(unsigned char *)(v129 + 129) = v130[129];
      uint64_t v168 = v21[11];
      uint64_t v169 = v129 + v168;
      uint64_t v170 = &v130[v168];
      uint64_t v171 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      uint64_t v172 = v21[12];
      uint64_t v173 = (void *)(v129 + v172);
      uint64_t v174 = &v130[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
      *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
      *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
      uint64_t v175 = v21[16];
      uint64_t v176 = (void *)(v129 + v175);
      uint64_t v177 = &v130[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      uint64_t v178 = *(void (**)(uint64_t, void, uint64_t, int *))(v308 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178(v129, 0, 1, v21);
      goto LABEL_143;
    }
LABEL_82:
    uint64_t v138 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v129, v130, *(void *)(*(void *)(v138 - 8) + 64));
    goto LABEL_143;
  }
  if (v134)
  {
    sub_100073F50(v129, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_82;
  }
  *(void *)uint64_t v129 = *(void *)v130;
  *(void *)(v129 + 8) = *((void *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v139 = (long long *)(v129 + 16);
  uint64_t v140 = (long long *)(v130 + 16);
  int v141 = v130[32];
  if (*(unsigned __int8 *)(v129 + 32) == 255)
  {
    if (v141 == 255)
    {
      long long v182 = *v140;
      *(unsigned char *)(v129 + 32) = v130[32];
      long long *v139 = v182;
    }
    else
    {
      uint64_t v179 = *((void *)v130 + 2);
      uint64_t v180 = *((void *)v130 + 3);
      sub_100009080(v179, v180, v130[32]);
      *(void *)(v129 + 16) = v179;
      *(void *)(v129 + 24) = v180;
      *(unsigned char *)(v129 + 32) = v141;
    }
  }
  else if (v141 == 255)
  {
    sub_10000BE14(v129 + 16);
    char v181 = v130[32];
    long long *v139 = *v140;
    *(unsigned char *)(v129 + 32) = v181;
  }
  else
  {
    uint64_t v142 = *((void *)v130 + 2);
    uint64_t v143 = *((void *)v130 + 3);
    sub_100009080(v142, v143, v130[32]);
    uint64_t v144 = *(void *)(v129 + 16);
    uint64_t v145 = *(void *)(v129 + 24);
    *(void *)(v129 + 16) = v142;
    *(void *)(v129 + 24) = v143;
    unsigned __int8 v146 = *(unsigned char *)(v129 + 32);
    *(unsigned char *)(v129 + 32) = v141;
    sub_1000096D4(v144, v145, v146);
  }
  *(void *)(v129 + 40) = *((void *)v130 + 5);
  *(void *)(v129 + 48) = *((void *)v130 + 6);
  uint64_t v183 = (void **)(v129 + 56);
  uint64_t v184 = (void **)(v130 + 56);
  int v185 = v130[64];
  if (*(unsigned __int8 *)(v129 + 64) == 255)
  {
    if (v185 == 255)
    {
      uint64_t v191 = *v184;
      *(unsigned char *)(v129 + 64) = v130[64];
      *uint64_t v183 = v191;
    }
    else
    {
      uint64_t v189 = *v184;
      sub_100009098(v189, v130[64]);
      *(void *)(v129 + 56) = v189;
      *(unsigned char *)(v129 + 64) = v185;
    }
  }
  else if (v185 == 255)
  {
    sub_10000BE68(v129 + 56);
    char v190 = v130[64];
    *uint64_t v183 = *v184;
    *(unsigned char *)(v129 + 64) = v190;
  }
  else
  {
    uint64_t v186 = *v184;
    sub_100009098(v186, v130[64]);
    uint64_t v187 = *(void **)(v129 + 56);
    *(void *)(v129 + 56) = v186;
    char v188 = *(unsigned char *)(v129 + 64);
    *(unsigned char *)(v129 + 64) = v185;
    sub_1000096EC(v187, v188);
  }
  uint64_t v192 = (void **)(v129 + 72);
  uint64_t v193 = (void **)(v130 + 72);
  int v194 = v130[80];
  if (*(unsigned __int8 *)(v129 + 80) == 255)
  {
    if (v194 == 255)
    {
      uint64_t v200 = *v193;
      *(unsigned char *)(v129 + 80) = v130[80];
      char *v192 = v200;
    }
    else
    {
      uint64_t v198 = *v193;
      sub_100009098(v198, v130[80]);
      *(void *)(v129 + 72) = v198;
      *(unsigned char *)(v129 + 80) = v194;
    }
  }
  else if (v194 == 255)
  {
    sub_10000BE68(v129 + 72);
    char v199 = v130[80];
    char *v192 = *v193;
    *(unsigned char *)(v129 + 80) = v199;
  }
  else
  {
    uint64_t v195 = *v193;
    sub_100009098(v195, v130[80]);
    uint64_t v196 = *(void **)(v129 + 72);
    *(void *)(v129 + 72) = v195;
    char v197 = *(unsigned char *)(v129 + 80);
    *(unsigned char *)(v129 + 80) = v194;
    sub_1000096EC(v196, v197);
  }
  uint64_t v201 = (void **)(v129 + 88);
  uint64_t v202 = (void **)(v130 + 88);
  int v203 = v130[96];
  if (*(unsigned __int8 *)(v129 + 96) == 255)
  {
    if (v203 == 255)
    {
      uint64_t v209 = *v202;
      *(unsigned char *)(v129 + 96) = v130[96];
      void *v201 = v209;
    }
    else
    {
      uint64_t v207 = *v202;
      sub_100009098(v207, v130[96]);
      *(void *)(v129 + 88) = v207;
      *(unsigned char *)(v129 + 96) = v203;
    }
  }
  else if (v203 == 255)
  {
    sub_10000BE68(v129 + 88);
    char v208 = v130[96];
    void *v201 = *v202;
    *(unsigned char *)(v129 + 96) = v208;
  }
  else
  {
    uint64_t v204 = *v202;
    sub_100009098(v204, v130[96]);
    uint64_t v205 = *(void **)(v129 + 88);
    *(void *)(v129 + 88) = v204;
    char v206 = *(unsigned char *)(v129 + 96);
    *(unsigned char *)(v129 + 96) = v203;
    sub_1000096EC(v205, v206);
  }
  uint64_t v210 = (void **)(v129 + 104);
  uint64_t v211 = (void **)(v130 + 104);
  int v212 = v130[112];
  if (*(unsigned __int8 *)(v129 + 112) == 255)
  {
    if (v212 == 255)
    {
      id v218 = *v211;
      *(unsigned char *)(v129 + 112) = v130[112];
      *uint64_t v210 = v218;
    }
    else
    {
      uint64_t v216 = *v211;
      sub_100009098(v216, v130[112]);
      *(void *)(v129 + 104) = v216;
      *(unsigned char *)(v129 + 112) = v212;
    }
  }
  else if (v212 == 255)
  {
    sub_10000BE68(v129 + 104);
    char v217 = v130[112];
    *uint64_t v210 = *v211;
    *(unsigned char *)(v129 + 112) = v217;
  }
  else
  {
    uint64_t v213 = *v211;
    sub_100009098(v213, v130[112]);
    uint64_t v214 = *(void **)(v129 + 104);
    *(void *)(v129 + 104) = v213;
    char v215 = *(unsigned char *)(v129 + 112);
    *(unsigned char *)(v129 + 112) = v212;
    sub_1000096EC(v214, v215);
  }
  unsigned __int8 v219 = (void **)(v129 + 120);
  uint64_t v220 = (void **)(v130 + 120);
  int v221 = v130[128];
  if (*(unsigned __int8 *)(v129 + 128) == 255)
  {
    if (v221 == 255)
    {
      id v227 = *v220;
      *(unsigned char *)(v129 + 128) = v130[128];
      void *v219 = v227;
    }
    else
    {
      Swift::String v225 = *v220;
      sub_100009098(v225, v130[128]);
      *(void *)(v129 + 120) = v225;
      *(unsigned char *)(v129 + 128) = v221;
    }
  }
  else if (v221 == 255)
  {
    sub_10000BE68(v129 + 120);
    char v226 = v130[128];
    void *v219 = *v220;
    *(unsigned char *)(v129 + 128) = v226;
  }
  else
  {
    uint64_t v222 = *v220;
    sub_100009098(v222, v130[128]);
    Swift::String_optional v223 = *(void **)(v129 + 120);
    *(void *)(v129 + 120) = v222;
    char v224 = *(unsigned char *)(v129 + 128);
    *(unsigned char *)(v129 + 128) = v221;
    sub_1000096EC(v223, v224);
  }
  *(unsigned char *)(v129 + 129) = v130[129];
  uint64_t v228 = v21[11];
  uint64_t v229 = v129 + v228;
  v230 = &v130[v228];
  uint64_t v231 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v229, v230, v231);
  uint64_t v232 = v21[12];
  v233 = (void *)(v129 + v232);
  v234 = &v130[v232];
  void *v233 = *(void *)v234;
  v233[1] = *((void *)v234 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v129 + v21[13]) = v130[v21[13]];
  *(unsigned char *)(v129 + v21[14]) = v130[v21[14]];
  *(unsigned char *)(v129 + v21[15]) = v130[v21[15]];
  uint64_t v235 = v21[16];
  v236 = (void *)(v129 + v235);
  v237 = &v130[v235];
  void *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_143:
  uint64_t v238 = v6[14];
  v239 = *(void **)((char *)a1 + v238);
  v240 = *(void **)((char *)a2 + v238);
  *(void *)((char *)a1 + v238) = v240;
  id v241 = v240;

  uint64_t v242 = v6[15];
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  uint64_t v245 = sub_10008A050();
  uint64_t v246 = *(void *)(v245 - 8);
  v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  LODWORD(v239) = v247(v243, 1, v245);
  int v248 = v247(v244, 1, v245);
  if (v239)
  {
    if (!v248)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_149;
    }
    goto LABEL_148;
  }
  if (v248)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_148:
    uint64_t v249 = sub_10000903C(&qword_1000A1048);
    memcpy(v243, v244, *(void *)(*(void *)(v249 - 8) + 64));
    goto LABEL_149;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
LABEL_149:
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  uint64_t v250 = v6[17];
  uint64_t v251 = (char *)a1 + v250;
  v252 = (char *)a2 + v250;
  uint64_t v253 = *(void *)v252;
  v251[8] = v252[8];
  *(void *)uint64_t v251 = v253;
  uint64_t v254 = v6[18];
  uint64_t v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  uint64_t v257 = *(void *)v256;
  v255[8] = v256[8];
  *(void *)uint64_t v255 = v257;
  uint64_t v258 = v6[19];
  uint64_t v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  int v261 = v309((char *)a1 + v258, 1, v310);
  int v262 = v309(v260, 1, v310);
  if (v261)
  {
    if (!v262)
    {
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v259, v260, v310);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v259, 0, 1, v310);
      goto LABEL_155;
    }
    goto LABEL_154;
  }
  if (v262)
  {
    (*(void (**)(char *, uint64_t))(v314 + 8))(v259, v310);
LABEL_154:
    uint64_t v263 = sub_10000903C(&qword_1000A1038);
    memcpy(v259, v260, *(void *)(*(void *)(v263 - 8) + 64));
    goto LABEL_155;
  }
  (*(void (**)(char *, char *, uint64_t))(v314 + 24))(v259, v260, v310);
LABEL_155:
  uint64_t v264 = v6[20];
  uint64_t v265 = (char *)a1 + v264;
  v266 = (char *)a2 + v264;
  int v267 = v309((char *)a1 + v264, 1, v310);
  int v268 = v309(v266, 1, v310);
  if (v267)
  {
    if (!v268)
    {
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v265, v266, v310);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v265, 0, 1, v310);
      goto LABEL_161;
    }
    goto LABEL_160;
  }
  if (v268)
  {
    (*(void (**)(char *, uint64_t))(v314 + 8))(v265, v310);
LABEL_160:
    uint64_t v269 = sub_10000903C(&qword_1000A1038);
    memcpy(v265, v266, *(void *)(*(void *)(v269 - 8) + 64));
    goto LABEL_161;
  }
  (*(void (**)(char *, char *, uint64_t))(v314 + 24))(v265, v266, v310);
LABEL_161:
  uint64_t v270 = v6[21];
  uint64_t v271 = (void *)((char *)a1 + v270);
  v272 = (char *)a2 + v270;
  uint64_t v273 = *(void *)((char *)a2 + v270);
  if (*(void *)((char *)a1 + v270))
  {
    if (v273)
    {
      void *v271 = v273;
      swift_retain();
      swift_release();
      v271[1] = *((void *)v272 + 1);
      swift_retain();
      swift_release();
      v271[2] = *((void *)v272 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10000BF18((uint64_t)a1 + v270);
      uint64_t v274 = *((void *)v272 + 2);
      *(_OWORD *)uint64_t v271 = *(_OWORD *)v272;
      v271[2] = v274;
    }
  }
  else if (v273)
  {
    void *v271 = v273;
    v271[1] = *((void *)v272 + 1);
    v271[2] = *((void *)v272 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v275 = *(_OWORD *)v272;
    v271[2] = *((void *)v272 + 2);
    *(_OWORD *)uint64_t v271 = v275;
  }
  uint64_t v276 = v6[22];
  uint64_t v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  uint64_t v279 = sub_10000903C(&qword_1000A1050);
  uint64_t v280 = *(void *)(v279 - 8);
  uint64_t v281 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v280 + 48);
  int v282 = v281(v277, 1, v279);
  int v283 = v281(v278, 1, v279);
  uint64_t v312 = a2;
  uint64_t v313 = a1;
  if (v282)
  {
    if (!v283)
    {
      int v284 = *(void (**)(char *, char *, uint64_t))(v314 + 16);
      v284(v277, v278, v310);
      v284(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v310);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  if (v283)
  {
    sub_100015614((uint64_t)v277, &qword_1000A1050);
LABEL_176:
    uint64_t v285 = sub_10000903C(&qword_1000A1058);
    memcpy(v277, v278, *(void *)(*(void *)(v285 - 8) + 64));
    goto LABEL_177;
  }
  v306 = *(void (**)(char *, char *, uint64_t))(v314 + 24);
  v306(v277, v278, v310);
  v306(&v277[*(int *)(v279 + 36)], &v278[*(int *)(v279 + 36)], v310);
LABEL_177:
  uint64_t v286 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v287 = v286[5];
  uint64_t v288 = &v277[v287];
  v289 = &v278[v287];
  uint64_t v290 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 24))(v288, v289, v290);
  uint64_t v291 = v286[6];
  uint64_t v292 = &v277[v291];
  v293 = &v278[v291];
  uint64_t v294 = sub_10008A4B0();
  uint64_t v295 = *(void *)(v294 - 8);
  uint64_t v296 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v295 + 48);
  LODWORD(v288) = v296(v292, 1, v294);
  int v297 = v296(v293, 1, v294);
  if (!v288)
  {
    if (!v297)
    {
      (*(void (**)(char *, char *, uint64_t))(v295 + 24))(v292, v293, v294);
      goto LABEL_183;
    }
    (*(void (**)(char *, uint64_t))(v295 + 8))(v292, v294);
    goto LABEL_182;
  }
  if (v297)
  {
LABEL_182:
    uint64_t v298 = sub_10000903C(&qword_1000A1060);
    memcpy(v292, v293, *(void *)(*(void *)(v298 - 8) + 64));
    goto LABEL_183;
  }
  (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v293, v294);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
LABEL_183:
  uint64_t v299 = v286[7];
  uint64_t v300 = &v277[v299];
  uint64_t v301 = &v278[v299];
  *(void *)uint64_t v300 = *(void *)v301;
  *((void *)v300 + 1) = *((void *)v301 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v302 = v286[8];
  v303 = &v277[v302];
  uint64_t v304 = &v278[v302];
  *(void *)v303 = *(void *)v304;
  *((void *)v303 + 1) = *((void *)v304 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v313 + v311[5]) = *(void *)((char *)v312 + v311[5]);
  *(void *)((char *)v313 + v311[6]) = *(void *)((char *)v312 + v311[6]);
  *(void *)((char *)v313 + v311[7]) = *(void *)((char *)v312 + v311[7]);
  *(void *)((char *)v313 + v311[8]) = *(void *)((char *)v312 + v311[8]);
  *(void *)((char *)v313 + v311[9]) = *(void *)((char *)v312 + v311[9]);
  *(void *)((char *)v313 + v311[10]) = *(void *)((char *)v312 + v311[10]);
  return v313;
}

uint64_t sub_100077580(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v8 = v7[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10008A170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v87 = v11;
  uint64_t v86 = v12;
  int v85 = *(unsigned int (**)(const void *, uint64_t))(v12 + 48);
  if (v85(v10, 1))
  {
    uint64_t v13 = sub_10000903C(&qword_1000A1038);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v87);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v87);
  }
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  uint64_t v14 = v7[12];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  uint64_t v17 = (int *)sub_10008A340();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48);
  uint64_t v84 = v18;
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10000903C(&qword_1000A1040);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v21;
    *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((unsigned char *)v15 + 64) = *((unsigned char *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((unsigned char *)v15 + 129) = *((unsigned char *)v16 + 129);
    uint64_t v22 = v17[11];
    int v82 = (char *)v15 + v22;
    id v83 = a3;
    int v23 = (char *)v16 + v22;
    uint64_t v24 = sub_10008A300();
    int v25 = v23;
    a3 = v83;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v82, v25, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((unsigned char *)v15 + v17[13]) = *((unsigned char *)v16 + v17[13]);
    *((unsigned char *)v15 + v17[14]) = *((unsigned char *)v16 + v17[14]);
    *((unsigned char *)v15 + v17[15]) = *((unsigned char *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v26 = v7[13];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  if (v19((_OWORD *)(a2 + v26), 1, v17))
  {
    uint64_t v29 = sub_10000903C(&qword_1000A1040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v28[1];
    _OWORD *v27 = *v28;
    v27[1] = v30;
    *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
    *(_OWORD *)((char *)v27 + 40) = *(_OWORD *)((char *)v28 + 40);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
    *(_OWORD *)((char *)v27 + 113) = *(_OWORD *)((char *)v28 + 113);
    *(_OWORD *)((char *)v27 + 104) = *(_OWORD *)((char *)v28 + 104);
    *(_OWORD *)((char *)v27 + 88) = *(_OWORD *)((char *)v28 + 88);
    *(_OWORD *)((char *)v27 + 72) = *(_OWORD *)((char *)v28 + 72);
    *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
    uint64_t v31 = v17[11];
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = a3;
    uint64_t v34 = (char *)v28 + v31;
    uint64_t v35 = sub_10008A300();
    unsigned __int8 v36 = v34;
    a3 = v33;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v36, v35);
    *(_OWORD *)((char *)v27 + v17[12]) = *(_OWORD *)((char *)v28 + v17[12]);
    *((unsigned char *)v27 + v17[13]) = *((unsigned char *)v28 + v17[13]);
    *((unsigned char *)v27 + v17[14]) = *((unsigned char *)v28 + v17[14]);
    *((unsigned char *)v27 + v17[15]) = *((unsigned char *)v28 + v17[15]);
    *(_OWORD *)((char *)v27 + v17[16]) = *(_OWORD *)((char *)v28 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v84 + 56))(v27, 0, 1, v17);
  }
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  uint64_t v37 = v7[15];
  uint64_t v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_10008A050();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10000903C(&qword_1000A1048);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v43 = v7[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = v7[18];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = v7[19];
  uint64_t v50 = (void *)(a1 + v49);
  int v51 = (const void *)(a2 + v49);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v85)(a2 + v49, 1, v87))
  {
    uint64_t v52 = sub_10000903C(&qword_1000A1038);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v86 + 32))(v50, v51, v87);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v50, 0, 1, v87);
  }
  uint64_t v53 = v7[20];
  uint64_t v54 = (void *)(a1 + v53);
  int v55 = (const void *)(a2 + v53);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v85)(a2 + v53, 1, v87))
  {
    uint64_t v56 = sub_10000903C(&qword_1000A1038);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v86 + 32))(v54, v55, v87);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v54, 0, 1, v87);
  }
  uint64_t v57 = v7[21];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  uint64_t v60 = v7[22];
  uint64_t v61 = (char *)(a1 + v60);
  uint64_t v62 = (char *)(a2 + v60);
  uint64_t v63 = sub_10000903C(&qword_1000A1050);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_10000903C(&qword_1000A1058);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    int v66 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
    v66(v61, v62, v87);
    v66(&v61[*(int *)(v63 + 36)], &v62[*(int *)(v63 + 36)], v87);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v67 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v68 = v67[5];
  uint64_t v69 = &v61[v68];
  uint64_t v70 = &v62[v68];
  uint64_t v71 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = v67[6];
  int v73 = &v61[v72];
  id v74 = &v62[v72];
  uint64_t v75 = sub_10008A4B0();
  uint64_t v76 = *(void *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    uint64_t v77 = sub_10000903C(&qword_1000A1060);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  *(_OWORD *)&v61[v67[7]] = *(_OWORD *)&v62[v67[7]];
  *(_OWORD *)&v61[v67[8]] = *(_OWORD *)&v62[v67[8]];
  uint64_t v78 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v78) = *(void *)(a2 + v78);
  uint64_t v79 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v79) = *(void *)(a2 + v79);
  uint64_t v80 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v80) = *(void *)(a2 + v80);
  return a1;
}

void *sub_100077EF4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v12 = v11[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10008A170();
  uint64_t v207 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v207 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  int v203 = a3;
  uint64_t v202 = v16;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v207 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v207 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v207 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10000903C(&qword_1000A1038);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v207 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[11];
  long long v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *long long v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v11[12];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)sub_10008A340();
  uint64_t v201 = *((void *)v28 - 1);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v201 + 48);
  int v30 = v29(v26, 1, v28);
  int v31 = v29((uint64_t)v27, 1, v28);
  uint64_t v206 = v15;
  if (v30)
  {
    if (!v31)
    {
      long long v32 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v32;
      *(unsigned char *)(v26 + 32) = v27[32];
      *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
      *(void *)(v26 + 56) = *((void *)v27 + 7);
      *(unsigned char *)(v26 + 64) = v27[64];
      *(_OWORD *)(v26 + 113) = *(_OWORD *)(v27 + 113);
      *(_OWORD *)(v26 + 104) = *(_OWORD *)(v27 + 104);
      *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(unsigned char *)(v26 + 129) = v27[129];
      uint64_t v33 = v28[11];
      uint64_t v34 = v26 + v33;
      uint64_t v35 = &v27[v33];
      uint64_t v36 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(_OWORD *)(v26 + v28[12]) = *(_OWORD *)&v27[v28[12]];
      *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
      *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
      *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
      *(_OWORD *)(v26 + v28[16]) = *(_OWORD *)&v27[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v201 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    sub_100073F50(v26, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_12:
    uint64_t v37 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v120 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v120;
  swift_bridgeObjectRelease();
  uint64_t v121 = v27 + 16;
  int v122 = *(unsigned __int8 *)(v26 + 32);
  if (v122 != 255)
  {
    int v123 = v27[32];
    if (v123 != 255)
    {
      uint64_t v124 = *(void *)(v26 + 16);
      uint64_t v125 = *(void *)(v26 + 24);
      *(_OWORD *)(v26 + 16) = *v121;
      *(unsigned char *)(v26 + 32) = v123;
      sub_1000096D4(v124, v125, v122);
      goto LABEL_69;
    }
    sub_10000BE14(v26 + 16);
  }
  *(_OWORD *)(v26 + 16) = *v121;
  *(unsigned char *)(v26 + 32) = v27[32];
LABEL_69:
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  int v133 = v27 + 56;
  int v134 = *(unsigned __int8 *)(v26 + 64);
  if (v134 != 255)
  {
    int v135 = v27[64];
    if (v135 != 255)
    {
      uint64_t v136 = *(void **)(v26 + 56);
      *(void *)(v26 + 56) = *v133;
      *(unsigned char *)(v26 + 64) = v135;
      sub_1000096EC(v136, v134);
      goto LABEL_79;
    }
    sub_10000BE68(v26 + 56);
  }
  *(void *)(v26 + 56) = *v133;
  *(unsigned char *)(v26 + 64) = v27[64];
LABEL_79:
  int v141 = v27 + 72;
  int v142 = *(unsigned __int8 *)(v26 + 80);
  if (v142 != 255)
  {
    int v143 = v27[80];
    if (v143 != 255)
    {
      uint64_t v144 = *(void **)(v26 + 72);
      *(void *)(v26 + 72) = *v141;
      *(unsigned char *)(v26 + 80) = v143;
      sub_1000096EC(v144, v142);
      goto LABEL_89;
    }
    sub_10000BE68(v26 + 72);
  }
  *(void *)(v26 + 72) = *v141;
  *(unsigned char *)(v26 + 80) = v27[80];
LABEL_89:
  int v149 = v27 + 88;
  int v150 = *(unsigned __int8 *)(v26 + 96);
  if (v150 != 255)
  {
    int v151 = v27[96];
    if (v151 != 255)
    {
      uint64_t v152 = *(void **)(v26 + 88);
      *(void *)(v26 + 88) = *v149;
      *(unsigned char *)(v26 + 96) = v151;
      sub_1000096EC(v152, v150);
      goto LABEL_99;
    }
    sub_10000BE68(v26 + 88);
  }
  *(void *)(v26 + 88) = *v149;
  *(unsigned char *)(v26 + 96) = v27[96];
LABEL_99:
  int v157 = v27 + 104;
  int v158 = *(unsigned __int8 *)(v26 + 112);
  if (v158 != 255)
  {
    int v159 = v27[112];
    if (v159 != 255)
    {
      uint64_t v160 = *(void **)(v26 + 104);
      *(void *)(v26 + 104) = *v157;
      *(unsigned char *)(v26 + 112) = v159;
      sub_1000096EC(v160, v158);
      goto LABEL_109;
    }
    sub_10000BE68(v26 + 104);
  }
  *(void *)(v26 + 104) = *v157;
  *(unsigned char *)(v26 + 112) = v27[112];
LABEL_109:
  int v165 = v27 + 120;
  int v166 = *(unsigned __int8 *)(v26 + 128);
  if (v166 == 255)
  {
LABEL_118:
    *(void *)(v26 + 120) = *v165;
    *(unsigned char *)(v26 + 128) = v27[128];
    goto LABEL_119;
  }
  int v167 = v27[128];
  if (v167 == 255)
  {
    sub_10000BE68(v26 + 120);
    goto LABEL_118;
  }
  uint64_t v168 = *(void **)(v26 + 120);
  *(void *)(v26 + 120) = *v165;
  *(unsigned char *)(v26 + 128) = v167;
  sub_1000096EC(v168, v166);
LABEL_119:
  *(unsigned char *)(v26 + 129) = v27[129];
  uint64_t v173 = v28[11];
  uint64_t v174 = v26 + v173;
  uint64_t v175 = &v27[v173];
  uint64_t v176 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v176 - 8) + 40))(v174, v175, v176);
  uint64_t v177 = v28[12];
  uint64_t v178 = (void *)(v26 + v177);
  uint64_t v179 = &v27[v177];
  uint64_t v181 = *(void *)v179;
  uint64_t v180 = *((void *)v179 + 1);
  void *v178 = v181;
  v178[1] = v180;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v28[13]) = v27[v28[13]];
  *(unsigned char *)(v26 + v28[14]) = v27[v28[14]];
  *(unsigned char *)(v26 + v28[15]) = v27[v28[15]];
  uint64_t v182 = v28[16];
  uint64_t v183 = (void *)(v26 + v182);
  uint64_t v184 = &v27[v182];
  uint64_t v186 = *(void *)v184;
  uint64_t v185 = *((void *)v184 + 1);
  *uint64_t v183 = v186;
  v183[1] = v185;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v38 = v11[13];
  uint64_t v39 = (uint64_t)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v29((uint64_t)a1 + v38, 1, v28);
  int v42 = v29((uint64_t)v40, 1, v28);
  if (v41)
  {
    if (!v42)
    {
      long long v43 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v43;
      *(unsigned char *)(v39 + 32) = v40[32];
      *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
      *(void *)(v39 + 56) = *((void *)v40 + 7);
      *(unsigned char *)(v39 + 64) = v40[64];
      *(_OWORD *)(v39 + 113) = *(_OWORD *)(v40 + 113);
      *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
      *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      *(unsigned char *)(v39 + 129) = v40[129];
      uint64_t v44 = v28[11];
      uint64_t v45 = v39 + v44;
      uint64_t v46 = &v40[v44];
      uint64_t v47 = sub_10008A300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      *(_OWORD *)(v39 + v28[12]) = *(_OWORD *)&v40[v28[12]];
      *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
      *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
      *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
      *(_OWORD *)(v39 + v28[16]) = *(_OWORD *)&v40[v28[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v201 + 56))(v39, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    sub_100073F50(v39, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_18:
    uint64_t v48 = sub_10000903C(&qword_1000A1040);
    memcpy((void *)v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v126 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v126;
  swift_bridgeObjectRelease();
  uint64_t v127 = v40 + 16;
  int v128 = *(unsigned __int8 *)(v39 + 32);
  if (v128 != 255)
  {
    int v129 = v40[32];
    if (v129 != 255)
    {
      uint64_t v130 = *(void *)(v39 + 16);
      uint64_t v131 = *(void *)(v39 + 24);
      *(_OWORD *)(v39 + 16) = *v127;
      *(unsigned char *)(v39 + 32) = v129;
      sub_1000096D4(v130, v131, v128);
      goto LABEL_74;
    }
    sub_10000BE14(v39 + 16);
  }
  *(_OWORD *)(v39 + 16) = *v127;
  *(unsigned char *)(v39 + 32) = v40[32];
LABEL_74:
  *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
  uint64_t v137 = v40 + 56;
  int v138 = *(unsigned __int8 *)(v39 + 64);
  if (v138 != 255)
  {
    int v139 = v40[64];
    if (v139 != 255)
    {
      uint64_t v140 = *(void **)(v39 + 56);
      *(void *)(v39 + 56) = *v137;
      *(unsigned char *)(v39 + 64) = v139;
      sub_1000096EC(v140, v138);
      goto LABEL_84;
    }
    sub_10000BE68(v39 + 56);
  }
  *(void *)(v39 + 56) = *v137;
  *(unsigned char *)(v39 + 64) = v40[64];
LABEL_84:
  uint64_t v145 = v40 + 72;
  int v146 = *(unsigned __int8 *)(v39 + 80);
  if (v146 != 255)
  {
    int v147 = v40[80];
    if (v147 != 255)
    {
      uint64_t v148 = *(void **)(v39 + 72);
      *(void *)(v39 + 72) = *v145;
      *(unsigned char *)(v39 + 80) = v147;
      sub_1000096EC(v148, v146);
      goto LABEL_94;
    }
    sub_10000BE68(v39 + 72);
  }
  *(void *)(v39 + 72) = *v145;
  *(unsigned char *)(v39 + 80) = v40[80];
LABEL_94:
  int v153 = v40 + 88;
  int v154 = *(unsigned __int8 *)(v39 + 96);
  if (v154 != 255)
  {
    int v155 = v40[96];
    if (v155 != 255)
    {
      uint64_t v156 = *(void **)(v39 + 88);
      *(void *)(v39 + 88) = *v153;
      *(unsigned char *)(v39 + 96) = v155;
      sub_1000096EC(v156, v154);
      goto LABEL_104;
    }
    sub_10000BE68(v39 + 88);
  }
  *(void *)(v39 + 88) = *v153;
  *(unsigned char *)(v39 + 96) = v40[96];
LABEL_104:
  int v161 = v40 + 104;
  int v162 = *(unsigned __int8 *)(v39 + 112);
  if (v162 != 255)
  {
    int v163 = v40[112];
    if (v163 != 255)
    {
      int v164 = *(void **)(v39 + 104);
      *(void *)(v39 + 104) = *v161;
      *(unsigned char *)(v39 + 112) = v163;
      sub_1000096EC(v164, v162);
      goto LABEL_114;
    }
    sub_10000BE68(v39 + 104);
  }
  *(void *)(v39 + 104) = *v161;
  *(unsigned char *)(v39 + 112) = v40[112];
LABEL_114:
  uint64_t v169 = v40 + 120;
  int v170 = *(unsigned __int8 *)(v39 + 128);
  if (v170 == 255)
  {
LABEL_121:
    *(void *)(v39 + 120) = *v169;
    *(unsigned char *)(v39 + 128) = v40[128];
    goto LABEL_122;
  }
  int v171 = v40[128];
  if (v171 == 255)
  {
    sub_10000BE68(v39 + 120);
    goto LABEL_121;
  }
  uint64_t v172 = *(void **)(v39 + 120);
  *(void *)(v39 + 120) = *v169;
  *(unsigned char *)(v39 + 128) = v171;
  sub_1000096EC(v172, v170);
LABEL_122:
  *(unsigned char *)(v39 + 129) = v40[129];
  uint64_t v187 = v28[11];
  uint64_t v188 = v39 + v187;
  uint64_t v189 = &v40[v187];
  uint64_t v190 = sub_10008A300();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v190 - 8) + 40))(v188, v189, v190);
  uint64_t v191 = v28[12];
  uint64_t v192 = (void *)(v39 + v191);
  uint64_t v193 = &v40[v191];
  uint64_t v195 = *(void *)v193;
  uint64_t v194 = *((void *)v193 + 1);
  void *v192 = v195;
  v192[1] = v194;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v28[13]) = v40[v28[13]];
  *(unsigned char *)(v39 + v28[14]) = v40[v28[14]];
  *(unsigned char *)(v39 + v28[15]) = v40[v28[15]];
  uint64_t v196 = v28[16];
  char v197 = (void *)(v39 + v196);
  uint64_t v198 = &v40[v196];
  uint64_t v200 = *(void *)v198;
  uint64_t v199 = *((void *)v198 + 1);
  *char v197 = v200;
  v197[1] = v199;
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v49 = v11[14];
  uint64_t v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

  uint64_t v51 = v11[15];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_10008A050();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    uint64_t v59 = v206;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v59 = v206;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_24:
    uint64_t v60 = sub_10000903C(&qword_1000A1048);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_25:
  *((unsigned char *)a1 + v11[16]) = *((unsigned char *)a2 + v11[16]);
  uint64_t v61 = v11[17];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = v11[18];
  uint64_t v65 = (char *)a1 + v64;
  int v66 = (char *)a2 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = v11[19];
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  int v70 = v202((char *)a1 + v67, 1, v59);
  int v71 = v202(v69, 1, v59);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v207 + 32))(v68, v69, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v207 + 56))(v68, 0, 1, v59);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v207 + 8))(v68, v59);
LABEL_30:
    uint64_t v72 = sub_10000903C(&qword_1000A1038);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v207 + 40))(v68, v69, v59);
LABEL_31:
  uint64_t v73 = v11[20];
  id v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  int v76 = v202((char *)a1 + v73, 1, v59);
  int v77 = v202(v75, 1, v59);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v207 + 32))(v74, v75, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v207 + 56))(v74, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v207 + 8))(v74, v59);
LABEL_36:
    uint64_t v78 = sub_10000903C(&qword_1000A1038);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v207 + 40))(v74, v75, v59);
LABEL_37:
  uint64_t v79 = v11[21];
  uint64_t v80 = (void *)((char *)a1 + v79);
  uint64_t v81 = (void *)((char *)a2 + v79);
  if (*(void *)((char *)a1 + v79))
  {
    if (*v81)
    {
      *uint64_t v80 = *v81;
      swift_release();
      v80[1] = v81[1];
      swift_release();
      v80[2] = v81[2];
      swift_release();
      goto LABEL_42;
    }
    sub_10000BF18((uint64_t)v80);
  }
  *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
  v80[2] = v81[2];
LABEL_42:
  uint64_t v82 = v11[22];
  id v83 = (char *)a1 + v82;
  uint64_t v84 = (char *)a2 + v82;
  uint64_t v85 = sub_10000903C(&qword_1000A1050);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  uint64_t v204 = a2;
  uint64_t v205 = a1;
  if (v88)
  {
    if (!v89)
    {
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v207 + 32);
      v90(v83, v84, v59);
      v90(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v89)
  {
    sub_100015614((uint64_t)v83, &qword_1000A1050);
LABEL_47:
    uint64_t v91 = sub_10000903C(&qword_1000A1058);
    memcpy(v83, v84, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v207 + 40);
  v132(v83, v84, v59);
  v132(&v83[*(int *)(v85 + 36)], &v84[*(int *)(v85 + 36)], v59);
LABEL_48:
  uint64_t v92 = (int *)type metadata accessor for WidgetPredictedPlayState();
  uint64_t v93 = v92[5];
  uint64_t v94 = &v83[v93];
  uint64_t v95 = &v84[v93];
  uint64_t v96 = sub_10008A740();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  uint64_t v97 = v92[6];
  char v98 = &v83[v97];
  uint64_t v99 = &v84[v97];
  uint64_t v100 = sub_10008A4B0();
  uint64_t v101 = *(void *)(v100 - 8);
  int v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  int v103 = v102(v98, 1, v100);
  int v104 = v102(v99, 1, v100);
  if (!v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 40))(v98, v99, v100);
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v100);
    goto LABEL_53;
  }
  if (v104)
  {
LABEL_53:
    uint64_t v105 = sub_10000903C(&qword_1000A1060);
    memcpy(v98, v99, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v98, v99, v100);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
LABEL_54:
  uint64_t v106 = v92[7];
  char v107 = &v83[v106];
  id v108 = &v84[v106];
  uint64_t v110 = *(void *)v108;
  uint64_t v109 = *((void *)v108 + 1);
  *(void *)char v107 = v110;
  *((void *)v107 + 1) = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v92[8];
  long long v112 = &v83[v111];
  uint64_t v113 = &v84[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)long long v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  uint64_t v116 = v203[6];
  *(void *)((char *)v205 + v203[5]) = *(void *)((char *)v204 + v203[5]);
  *(void *)((char *)v205 + v116) = *(void *)((char *)v204 + v116);
  uint64_t v117 = v203[8];
  *(void *)((char *)v205 + v203[7]) = *(void *)((char *)v204 + v203[7]);
  *(void *)((char *)v205 + v117) = *(void *)((char *)v204 + v117);
  uint64_t v118 = v203[10];
  *(void *)((char *)v205 + v203[9]) = *(void *)((char *)v204 + v203[9]);
  *(void *)((char *)v205 + v118) = *(void *)((char *)v204 + v118);
  return v205;
}

uint64_t sub_100079158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007916C);
}

uint64_t sub_100079170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000791DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000791F0);
}

uint64_t sub_1000791F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100079264()
{
  uint64_t result = type metadata accessor for UpNextEntry.Episode(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10007930C()
{
  unint64_t result = qword_1000A29B8;
  if (!qword_1000A29B8)
  {
    sub_10000E49C(&qword_1000A29C0);
    sub_100079380();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A29B8);
  }
  return result;
}

unint64_t sub_100079380()
{
  unint64_t result = qword_1000A29C8;
  if (!qword_1000A29C8)
  {
    sub_10000E49C(&qword_1000A28F0);
    sub_10000E49C(&qword_1000A28E0);
    sub_10008A750();
    sub_10008AB20();
    sub_100073F08((unint64_t *)&qword_1000A1120, (void (*)(uint64_t))&type metadata accessor for PlaybackButton);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100073FB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A29C8);
  }
  return result;
}

uint64_t sub_1000794B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000794CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a1;
  uint64_t v94 = a2;
  uint64_t v92 = type metadata accessor for PlayButtonStyling();
  __chkstk_darwin(v92);
  uint64_t v93 = (uint64_t *)((char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = sub_10000903C(&qword_1000A29D0);
  __chkstk_darwin(v90);
  uint64_t v91 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10008B0E0();
  __chkstk_darwin(v5 - 8);
  uint64_t v86 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10000903C(&qword_1000A29D8);
  __chkstk_darwin(v84);
  uint64_t v79 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000903C(&qword_1000A29E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000903C(&qword_1000A29E8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000903C(&qword_1000A29F0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  int v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10000903C(&qword_1000A29F8);
  __chkstk_darwin(v81);
  uint64_t v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10000903C(&qword_1000A2A00);
  __chkstk_darwin(v82);
  id v83 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10000903C(&qword_1000A2A08);
  __chkstk_darwin(v85);
  uint64_t v89 = (uint64_t)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10000903C(&qword_1000A2A10);
  __chkstk_darwin(v88);
  uint64_t v87 = (uint64_t)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10008A9C0();
  uint64_t v25 = *(void *)(v2 + *(int *)(type metadata accessor for PlayButtonLargeToggleStyle(0) + 40));
  *(void *)uint64_t v10 = v24;
  *((void *)v10 + 1) = v25;
  v10[16] = 0;
  uint64_t v26 = sub_10000903C(&qword_1000A2A18);
  sub_100079D90(v2, (uint64_t)&v10[*(int *)(v26 + 44)]);
  LOBYTE(v24) = sub_10008AC00();
  sub_10008A630();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_1000155B0((uint64_t)v10, (uint64_t)v14, &qword_1000A29E0);
  uint64_t v35 = &v14[*(int *)(v12 + 44)];
  char *v35 = v24;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_100015614((uint64_t)v10, &qword_1000A29E0);
  LOBYTE(v10) = sub_10008AC10();
  sub_10008A630();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  sub_1000155B0((uint64_t)v14, (uint64_t)v18, &qword_1000A29E8);
  uint64_t v44 = &v18[*(int *)(v16 + 44)];
  char *v44 = (char)v10;
  *((void *)v44 + 1) = v37;
  *((void *)v44 + 2) = v39;
  *((void *)v44 + 3) = v41;
  *((void *)v44 + 4) = v43;
  v44[40] = 0;
  sub_100015614((uint64_t)v14, &qword_1000A29E8);
  sub_10008B130();
  sub_10008A800();
  sub_1000155B0((uint64_t)v18, (uint64_t)v20, &qword_1000A29F0);
  uint64_t v45 = &v20[*(int *)(v81 + 36)];
  long long v46 = v100;
  *((_OWORD *)v45 + 4) = v99;
  *((_OWORD *)v45 + 5) = v46;
  *((_OWORD *)v45 + 6) = v101;
  long long v47 = v96;
  *(_OWORD *)uint64_t v45 = v95;
  *((_OWORD *)v45 + 1) = v47;
  long long v48 = v98;
  *((_OWORD *)v45 + 2) = v97;
  *((_OWORD *)v45 + 3) = v48;
  sub_100015614((uint64_t)v18, &qword_1000A29F0);
  uint64_t v49 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v50 = sub_10008AA40();
  uint64_t v51 = (uint64_t)v86;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v86, v49, v50);
  uint64_t v52 = v79;
  sub_10007AFB8(v51, v79, (uint64_t (*)(void))&type metadata accessor for Capsule);
  *(_WORD *)(v52 + *(int *)(v84 + 56)) = 256;
  sub_100073F50(v51, (uint64_t (*)(void))&type metadata accessor for Capsule);
  uint64_t v53 = sub_10008B130();
  uint64_t v55 = v54;
  uint64_t v56 = (uint64_t)v83;
  uint64_t v57 = (uint64_t)&v83[*(int *)(v82 + 36)];
  sub_1000155B0(v52, v57, &qword_1000A29D8);
  int v58 = (uint64_t *)(v57 + *(int *)(sub_10000903C(&qword_1000A2A20) + 36));
  *int v58 = v53;
  v58[1] = v55;
  sub_1000155B0((uint64_t)v20, v56, &qword_1000A29F8);
  sub_100015614(v52, &qword_1000A29D8);
  sub_100015614((uint64_t)v20, &qword_1000A29F8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v60 = (uint64_t)v93;
  uint64_t *v93 = KeyPath;
  sub_10000903C(&qword_1000A14E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v61 = v60 + *(int *)(v92 + 20);
  *(void *)uint64_t v61 = swift_getKeyPath();
  *(unsigned char *)(v61 + 8) = 0;
  uint64_t v62 = (uint64_t)v91;
  sub_10007B02C(v60, (uint64_t)&v91[*(int *)(v90 + 36)]);
  sub_10001547C(v56, v62, &qword_1000A2A00);
  if (qword_1000A0F98 != -1) {
    swift_once();
  }
  char v63 = sub_10008ABD0();
  sub_10008A630();
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v72 = v89;
  sub_1000155B0(v62, v89, &qword_1000A29D0);
  uint64_t v73 = v72 + *(int *)(v85 + 36);
  *(unsigned char *)uint64_t v73 = v63;
  *(void *)(v73 + 8) = v65;
  *(void *)(v73 + 16) = v67;
  *(void *)(v73 + 24) = v69;
  *(void *)(v73 + 32) = v71;
  *(unsigned char *)(v73 + 40) = 0;
  sub_100015614(v62, &qword_1000A29D0);
  uint64_t v74 = swift_getKeyPath();
  uint64_t v75 = v87;
  sub_1000155B0(v72, v87, &qword_1000A2A08);
  uint64_t v76 = v75 + *(int *)(v88 + 36);
  *(void *)uint64_t v76 = v74;
  *(unsigned char *)(v76 + 8) = 0;
  sub_100015614(v72, &qword_1000A2A08);
  return sub_10001547C(v75, v94, &qword_1000A2A10);
}

uint64_t sub_100079D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v63 = sub_10000903C(&qword_1000A2328);
  __chkstk_darwin(v63);
  uint64_t v4 = (uint64_t *)&v57[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10008A840();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10000903C(&qword_1000A2A28);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = sub_10000903C(&qword_1000A2A30);
  __chkstk_darwin(v62);
  uint64_t v67 = &v57[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)&v57[-v14];
  __chkstk_darwin(v16);
  uint64_t v66 = &v57[-v17];
  uint64_t v18 = *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 88);
  uint64_t v64 = a1;
  if (!*(void *)(a1 + v18 + *(int *)(type metadata accessor for WidgetPredictedPlayState() + 28) + 8)) {
    sub_10008AB30();
  }
  swift_bridgeObjectRetain();
  uint64_t v61 = sub_10008B020();
  uint64_t v19 = sub_10008B130();
  uint64_t v59 = v20;
  uint64_t v60 = v19;
  uint64_t v21 = sub_10008B020();
  uint64_t v22 = sub_10008AC60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
  uint64_t v23 = sub_10008AC70();
  sub_100015614((uint64_t)v11, &qword_1000A2A28);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = v8;
  sub_10008A830();
  uint64_t v26 = swift_getKeyPath();
  (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v63 + 28), v25, v5);
  uint64_t *v4 = v26;
  sub_1000155B0((uint64_t)v4, (uint64_t)v15 + *(int *)(v62 + 36), &qword_1000A2328);
  uint64_t v27 = v60;
  uint64_t *v15 = v61;
  v15[1] = v27;
  void v15[2] = v59;
  v15[3] = v21;
  v15[4] = KeyPath;
  v15[5] = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100015614((uint64_t)v4, &qword_1000A2328);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v25, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = v66;
  sub_10001547C((uint64_t)v15, (uint64_t)v66, &qword_1000A2A30);
  sub_10007A4E8((uint64_t)&v85);
  long long v75 = v91;
  long long v76 = v92;
  LOWORD(v77) = v93;
  long long v71 = v87;
  long long v72 = v88;
  long long v73 = v89;
  long long v74 = v90;
  long long v69 = v85;
  long long v70 = v86;
  sub_10008ACD0();
  uint64_t v63 = sub_10008AC50();
  swift_release();
  uint64_t v29 = swift_getKeyPath();
  uint64_t v62 = swift_getKeyPath();
  uint64_t v30 = swift_getKeyPath();
  uint64_t v59 = v30;
  unsigned __int8 v68 = 0;
  LODWORD(v61) = sub_10008ABE0();
  type metadata accessor for PlayButtonLargeToggleStyle(0);
  sub_10008A630();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  unsigned __int8 v39 = v68;
  int v58 = v68;
  char v78 = 0;
  LODWORD(v60) = sub_10008ABF0();
  sub_10008A630();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  LOBYTE(v26) = v78;
  unsigned __int8 v81 = 0;
  long long v48 = v67;
  sub_1000155B0((uint64_t)v28, (uint64_t)v67, &qword_1000A2A30);
  LODWORD(v64) = v81;
  uint64_t v49 = (uint64_t)v48;
  uint64_t v50 = v65;
  sub_1000155B0(v49, v65, &qword_1000A2A30);
  uint64_t v51 = *(int *)(sub_10000903C(&qword_1000A2A38) + 48);
  v84[5] = v74;
  v84[6] = v75;
  v84[7] = v76;
  v84[3] = v72;
  unsigned char v84[4] = v73;
  v84[1] = v70;
  v84[2] = v71;
  uint64_t v52 = (void *)(v50 + v51);
  v84[0] = v69;
  *(void *)&v84[8] = v77;
  *((void *)&v84[8] + 1) = v29;
  uint64_t v54 = v62;
  uint64_t v53 = v63;
  *(void *)&v84[9] = v63;
  *((void *)&v84[9] + 1) = v62;
  *(void *)&v84[10] = 0x3FE0000000000000;
  *((void *)&v84[10] + 1) = v30;
  *(void *)&v84[11] = 1;
  BYTE8(v84[11]) = v39;
  *(_DWORD *)((char *)&v84[11] + 9) = *(_DWORD *)v80;
  HIDWORD(v84[11]) = *(_DWORD *)&v80[3];
  LOBYTE(v30) = v61;
  LOBYTE(v84[12]) = v61;
  *(_DWORD *)((char *)&v84[12] + 1) = *(_DWORD *)v79;
  DWORD1(v84[12]) = *(_DWORD *)&v79[3];
  *((void *)&v84[12] + 1) = v32;
  *(void *)&v84[13] = v34;
  *((void *)&v84[13] + 1) = v36;
  *(void *)&v84[14] = v38;
  BYTE8(v84[14]) = v26;
  HIDWORD(v84[14]) = *(_DWORD *)&v83[3];
  *(_DWORD *)((char *)&v84[14] + 9) = *(_DWORD *)v83;
  char v55 = v60;
  LOBYTE(v84[15]) = v60;
  DWORD1(v84[15]) = *(_DWORD *)&v82[3];
  *(_DWORD *)((char *)&v84[15] + 1) = *(_DWORD *)v82;
  *((void *)&v84[15] + 1) = v41;
  *(void *)&v84[16] = v43;
  *((void *)&v84[16] + 1) = v45;
  *(void *)&v84[17] = v47;
  LOBYTE(v25) = v64;
  BYTE8(v84[17]) = v64;
  memcpy(v52, v84, 0x119uLL);
  sub_10007B0B8((uint64_t)v84);
  sub_100015614((uint64_t)v66, &qword_1000A2A30);
  long long v91 = v75;
  long long v92 = v76;
  long long v87 = v71;
  long long v88 = v72;
  long long v89 = v73;
  long long v90 = v74;
  long long v85 = v69;
  long long v86 = v70;
  uint64_t v93 = v77;
  uint64_t v94 = v29;
  uint64_t v95 = v53;
  uint64_t v96 = v54;
  uint64_t v97 = 0x3FE0000000000000;
  uint64_t v98 = v59;
  uint64_t v99 = 1;
  char v100 = v58;
  *(_DWORD *)long long v101 = *(_DWORD *)v80;
  *(_DWORD *)&v101[3] = *(_DWORD *)&v80[3];
  char v102 = v30;
  *(_DWORD *)int v103 = *(_DWORD *)v79;
  *(_DWORD *)&v103[3] = *(_DWORD *)&v79[3];
  uint64_t v104 = v32;
  uint64_t v105 = v34;
  uint64_t v106 = v36;
  uint64_t v107 = v38;
  char v108 = v26;
  *(_DWORD *)&v109[3] = *(_DWORD *)&v83[3];
  *(_DWORD *)uint64_t v109 = *(_DWORD *)v83;
  char v110 = v55;
  *(_DWORD *)&v111[3] = *(_DWORD *)&v82[3];
  *(_DWORD *)uint64_t v111 = *(_DWORD *)v82;
  uint64_t v112 = v41;
  uint64_t v113 = v43;
  uint64_t v114 = v45;
  uint64_t v115 = v47;
  char v116 = (char)v25;
  sub_10007B24C((uint64_t)&v85);
  return sub_100015614((uint64_t)v67, &qword_1000A2A30);
}

__n128 sub_10007A4E8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v96 = a1;
  uint64_t v2 = sub_10000903C(&qword_1000A1058);
  __chkstk_darwin(v2 - 8);
  *(void *)&long long v95 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000903C(&qword_1000A1038);
  __chkstk_darwin(v4 - 8);
  v94.n128_u64[0] = (unint64_t)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10008A170();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v90 = v6;
  uint64_t v91 = v7;
  __chkstk_darwin(v6);
  long long v89 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A1060);
  __chkstk_darwin(v9 - 8);
  uint64_t v93 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v92 = (uint64_t)&v88 - v12;
  uint64_t v13 = sub_10008A4B0();
  uint64_t v97 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v88 - v17;
  uint64_t v19 = sub_10008A740();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v1 + *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 88);
  uint64_t v24 = type metadata accessor for WidgetPredictedPlayState();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for PlaybackButton.State.playing(_:), v19);
  char v25 = sub_10008A730();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if (v25)
  {
    uint64_t v26 = v95;
    uint64_t v27 = v94.n128_u64[0];
    uint64_t v28 = v91;
    uint64_t v29 = v92;
    sub_1000155B0(v23 + *(int *)(v24 + 24), v92, &qword_1000A1060);
    uint64_t v30 = v97;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v29, 1, v13) == 1)
    {
      sub_100015614(v29, &qword_1000A1060);
      uint64_t v31 = v96;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v18, v29, v13);
      sub_1000155B0(v23, v26, &qword_1000A1058);
      uint64_t v43 = sub_10000903C(&qword_1000A1050);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v26, 1, v43) == 1)
      {
        sub_100015614(v26, &qword_1000A1058);
        uint64_t v44 = v27;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v27, 1, 1, v90);
        uint64_t v31 = v96;
      }
      else
      {
        uint64_t v49 = v26 + *(int *)(v43 + 36);
        uint64_t v44 = v27;
        uint64_t v50 = v90;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v49, v90);
        sub_100015614(v26, &qword_1000A1050);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v27, 0, 1, v50);
        int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v27, 1, v50);
        uint64_t v31 = v96;
        if (v51 != 1)
        {
          uint64_t v61 = (uint64_t)v89;
          (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v89, v44, v50);
          uint64_t v62 = sub_100017B88(v61);
          long long v88 = v18;
          uint64_t v63 = v62;
          uint64_t v65 = v64;
          uint64_t v66 = v28;
          char v68 = v67;
          v94.n128_u64[0] = v69;
          char v70 = sub_10008AC10();
          *(void *)&long long v95 = v13;
          char v71 = v70;
          sub_10008A630();
          uint64_t v73 = v72;
          uint64_t v75 = v74;
          uint64_t v77 = v76;
          uint64_t v79 = v78;
          uint64_t v80 = sub_10008B140();
          uint64_t v92 = v81;
          uint64_t v93 = v80;
          sub_10008A430();
          *(void *)&long long v124 = sub_1000184D8();
          *((void *)&v124 + 1) = v82;
          sub_100031338();
          uint64_t v83 = sub_10008ADE0();
          char v104 = v68 & 1;
          char v101 = 0;
          char v99 = v84 & 1;
          *(void *)&long long v124 = v63;
          *((void *)&v124 + 1) = v65;
          v125.n128_u8[0] = v68 & 1;
          *(unsigned __int32 *)((char *)v125.n128_u32 + 1) = *(_DWORD *)v103;
          v125.n128_u32[1] = *(_DWORD *)&v103[3];
          v125.n128_u64[1] = v94.n128_u64[0];
          LOBYTE(v126) = v71;
          DWORD1(v126) = *(_DWORD *)&v102[3];
          *(_DWORD *)((char *)&v126 + 1) = *(_DWORD *)v102;
          *((void *)&v126 + 1) = v73;
          *(void *)&long long v127 = v75;
          *((void *)&v127 + 1) = v77;
          *(void *)&long long v128 = v79;
          BYTE8(v128) = 0;
          HIDWORD(v128) = *(_DWORD *)&v100[3];
          *(_DWORD *)((char *)&v128 + 9) = *(_DWORD *)v100;
          *(void *)&long long v129 = v93;
          *((void *)&v129 + 1) = v92;
          *(void *)&long long v130 = v83;
          *((void *)&v130 + 1) = v85;
          LOBYTE(v131) = v84 & 1;
          DWORD1(v131) = *(_DWORD *)&v98[3];
          *(_DWORD *)((char *)&v131 + 1) = *(_DWORD *)v98;
          *((void *)&v131 + 1) = v86;
          sub_10007B534((uint64_t)&v124);
          sub_10001547C((uint64_t)&v124, (uint64_t)v114, &qword_1000A2A68);
          sub_10000903C(&qword_1000A23D0);
          sub_100062C88();
          sub_10008AAE0();
          (*(void (**)(char *, uint64_t))(v66 + 8))(v89, v90);
          (*(void (**)(char *, void))(v30 + 8))(v88, v95);
          long long v111 = v121;
          long long v112 = v122;
          char v113 = v123;
          long long v107 = v117;
          long long v108 = v118;
          long long v109 = v119;
          long long v110 = v120;
          long long v105 = v115;
          __n128 v106 = v116;
          goto LABEL_13;
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v13);
      sub_100015614(v44, &qword_1000A1038);
    }
    uint64_t v52 = (objc_class *)[self mainBundle];
    v134._countAndFlagsBits = 0xD000000000000011;
    v87._countAndFlagsBits = 0xE000000000000000;
    v134._object = (void *)0x8000000100090680;
    v136.value._countAndFlagsBits = 0;
    v136.value._object = 0;
    v53.super.Class isa = v52;
    v138._countAndFlagsBits = 0;
    v138._object = (void *)0xE000000000000000;
    uint64_t v54 = sub_10008A010(v134, v136, v53, v138, v87);
    uint64_t v56 = v55;

    *(void *)&long long v124 = v54;
    *((void *)&v124 + 1) = v56;
    v125.n128_u8[0] = 0;
    v125.n128_u64[1] = (unint64_t)_swiftEmptyArrayStorage;
    sub_10007B520((uint64_t)&v124);
    sub_10001547C((uint64_t)&v124, (uint64_t)&v115, &qword_1000A2A68);
    sub_10000903C(&qword_1000A23D0);
    sub_100062C88();
    sub_10008AAE0();
LABEL_13:
    long long v121 = v111;
    long long v122 = v112;
    char v123 = v113;
    long long v117 = v107;
    long long v118 = v108;
    long long v119 = v109;
    long long v120 = v110;
    long long v115 = v105;
    __n128 v116 = v106;
    sub_10007B52C((uint64_t)&v115);
    goto LABEL_14;
  }
  uint64_t v32 = v23 + *(int *)(v24 + 24);
  uint64_t v33 = v93;
  sub_1000155B0(v32, v93, &qword_1000A1060);
  uint64_t v34 = v97;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v33, 1, v13) == 1)
  {
    sub_100015614(v33, &qword_1000A1060);
    uint64_t v35 = (objc_class *)[self mainBundle];
    v87._countAndFlagsBits = 0xE000000000000000;
    v133._object = (void *)0x8000000100090660;
    v133._countAndFlagsBits = 0xD000000000000010;
    v135.value._countAndFlagsBits = 0;
    v135.value._object = 0;
    v36.super.Class isa = v35;
    v137._countAndFlagsBits = 0;
    v137._object = (void *)0xE000000000000000;
    uint64_t v37 = sub_10008A010(v133, v135, v36, v137, v87);
    uint64_t v39 = v38;

    *(void *)&long long v115 = v37;
    *((void *)&v115 + 1) = v39;
    v116.n128_u64[0] = 0;
    v116.n128_u64[1] = (unint64_t)_swiftEmptyArrayStorage;
    LOBYTE(v117) = 1;
    sub_10008AAE0();
    long long v40 = v124;
    __n128 v41 = v125;
    char v42 = v126;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v15, v33, v13);
    *(void *)&long long v124 = sub_100017F20();
    *((void *)&v124 + 1) = v45;
    sub_100031338();
    *(void *)&long long v115 = sub_10008ADE0();
    *((void *)&v115 + 1) = v46;
    v116.n128_u64[0] = v47 & 1;
    v116.n128_u64[1] = v48;
    LOBYTE(v117) = 0;
    sub_10008AAE0();
    __n128 v94 = v125;
    long long v95 = v124;
    char v42 = v126;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v13);
    __n128 v41 = v94;
    long long v40 = v95;
  }
  uint64_t v31 = v96;
  long long v115 = v40;
  __n128 v116 = v41;
  LOBYTE(v117) = v42;
  sub_10007B430((uint64_t)&v115);
LABEL_14:
  sub_10001547C((uint64_t)&v115, (uint64_t)v114, &qword_1000A2A40);
  sub_10000903C(&qword_1000A2A48);
  sub_10000903C(&qword_1000A2A50);
  sub_10007B43C();
  sub_10007B4B8(&qword_1000A2A60, &qword_1000A2A50);
  sub_10008AAE0();
  long long v57 = v131;
  *(_OWORD *)(v31 + 96) = v130;
  *(_OWORD *)(v31 + 112) = v57;
  *(_WORD *)(v31 + 128) = v132;
  long long v58 = v127;
  *(_OWORD *)(v31 + 32) = v126;
  *(_OWORD *)(v31 + 48) = v58;
  long long v59 = v129;
  *(_OWORD *)(v31 + 64) = v128;
  *(_OWORD *)(v31 + 80) = v59;
  __n128 result = v125;
  *(_OWORD *)uint64_t v31 = v124;
  *(__n128 *)(v31 + 16) = result;
  return result;
}

uint64_t sub_10007AFB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007B02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlayButtonStyling();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007B0B8(uint64_t a1)
{
  sub_10007B31C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128), *(unsigned char *)(a1 + 129), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10007B188,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10007B210);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10007B188(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17)
{
  sub_100031774(a1, a2, a3 & 1);
  if ((a17 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_100031774(a13, a14, a15 & 1);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10007B210(uint64_t a1, uint64_t a2, char a3)
{
  sub_100031774(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_10007B24C(uint64_t a1)
{
  sub_10007B31C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128), *(unsigned char *)(a1 + 129), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10007B36C,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10007B3F4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_10007B31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, uint64_t (*a19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a18) {
    return a20(a1, a2, a3, a4, a5 & 1);
  }
  else {
    return a19(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_10007B36C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17)
{
  sub_10001546C(a1, a2, a3 & 1);
  if ((a17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_10001546C(a13, a14, a15 & 1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007B3F4(uint64_t a1, uint64_t a2, char a3)
{
  sub_10001546C(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007B430(uint64_t result)
{
  *(unsigned char *)(result + 129) = 1;
  return result;
}

unint64_t sub_10007B43C()
{
  unint64_t result = qword_1000A2A58;
  if (!qword_1000A2A58)
  {
    sub_10000E49C(&qword_1000A2A48);
    sub_100062C88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2A58);
  }
  return result;
}

uint64_t sub_10007B4B8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000E49C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007B520(uint64_t result)
{
  *(unsigned char *)(result + 128) = 1;
  return result;
}

uint64_t sub_10007B52C(uint64_t result)
{
  *(unsigned char *)(result + 129) = 0;
  return result;
}

uint64_t sub_10007B534(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

unint64_t sub_10007B540()
{
  unint64_t result = qword_1000A2A70;
  if (!qword_1000A2A70)
  {
    sub_10000E49C(&qword_1000A2A10);
    sub_10007B784(&qword_1000A2A78, &qword_1000A2A08, (void (*)(void))sub_10007B60C);
    sub_100015428(&qword_1000A2AC0, &qword_1000A2AC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2A70);
  }
  return result;
}

unint64_t sub_10007B60C()
{
  unint64_t result = qword_1000A2A80;
  if (!qword_1000A2A80)
  {
    sub_10000E49C(&qword_1000A29D0);
    sub_10007B6B8();
    sub_100073F08(&qword_1000A2AB8, (void (*)(uint64_t))type metadata accessor for PlayButtonStyling);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2A80);
  }
  return result;
}

unint64_t sub_10007B6B8()
{
  unint64_t result = qword_1000A2A88;
  if (!qword_1000A2A88)
  {
    sub_10000E49C(&qword_1000A2A00);
    sub_10007B784(&qword_1000A2A90, &qword_1000A29F8, (void (*)(void))sub_10007B800);
    sub_100015428(&qword_1000A2AB0, &qword_1000A2A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2A88);
  }
  return result;
}

uint64_t sub_10007B784(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000E49C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007B800()
{
  return sub_10007B784(&qword_1000A2A98, &qword_1000A29F0, (void (*)(void))sub_10007B830);
}

unint64_t sub_10007B830()
{
  unint64_t result = qword_1000A2AA0;
  if (!qword_1000A2AA0)
  {
    sub_10000E49C(&qword_1000A29E8);
    sub_100015428(&qword_1000A2AA8, &qword_1000A29E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2AA0);
  }
  return result;
}

uint64_t destroy for WidgetPodcastsBackground(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);

  return sub_100009700(v2, v3);
}

uint64_t initializeWithCopy for WidgetPodcastsBackground(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  char v4 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_1000090AC(v3, v4);
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = v4;
  return a1;
}

uint64_t assignWithCopy for WidgetPodcastsBackground(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v2[1];
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  *(void *)(a1 + 32) = v2[4];
  uint64_t v4 = v2[5];
  LOBYTE(v2) = *((unsigned char *)v2 + 48);
  sub_1000090AC(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = (_BYTE)v2;
  sub_100009700(v5, v6);
  return a1;
}

__n128 initializeWithTake for WidgetPodcastsBackground(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetPodcastsBackground(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v4;
  sub_100009700(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetPodcastsBackground(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetPodcastsBackground(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetPodcastsBackground()
{
  return &type metadata for WidgetPodcastsBackground;
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetTertiaryVibrantOrPodcastsAccentedModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000090AC(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for WidgetTertiaryVibrantOrPodcastsAccentedModifier(uint64_t a1)
{
  return sub_100009700(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t initializeWithTake for WidgetTertiaryVibrantOrPodcastsAccentedModifier(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t assignWithTake for WidgetTertiaryVibrantOrPodcastsAccentedModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100009700(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for WidgetTertiaryVibrantOrPodcastsAccentedModifier()
{
  return &type metadata for WidgetTertiaryVibrantOrPodcastsAccentedModifier;
}

uint64_t sub_10007BBF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007BC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v57 = a4;
  uint64_t v6 = sub_10008B160();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  char v47 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008AFA0();
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10000903C(&qword_1000A2B08);
  __chkstk_darwin(v56);
  uint64_t v45 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v46 = (uint64_t)&v42 - v13;
  uint64_t v52 = sub_10000903C(&qword_1000A2B10);
  __chkstk_darwin(v52);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10000903C(&qword_1000A2B18);
  __chkstk_darwin(v53);
  uint64_t v55 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000903C(&qword_1000A2B20);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000903C(&qword_1000A2B28);
  __chkstk_darwin(v54);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10000903C(&qword_1000A2B30);
  uint64_t v22 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 &= 1u;
  sub_1000090AC(a2, a3);
  char v25 = sub_10006B070(a2, a3);
  sub_100009700(a2, a3);
  if (v25 == 2)
  {
    if (qword_1000A1020 != -1) {
      swift_once();
    }
    uint64_t v30 = qword_1000A5790;
    uint64_t v31 = sub_10000903C(&qword_1000A2B38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v15, v51, v31);
    *(void *)&v15[*(int *)(v52 + 36)] = v30;
    uint64_t v32 = &qword_1000A2B10;
    sub_1000155B0((uint64_t)v15, (uint64_t)v19, &qword_1000A2B10);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = sub_100015428(&qword_1000A2B48, &qword_1000A2B38);
    swift_retain();
    uint64_t v58 = v31;
    uint64_t v59 = v33;
    swift_getOpaqueTypeConformance2();
    sub_10007D468(&qword_1000A2B50, &qword_1000A2B10, &qword_1000A2B48, &qword_1000A2B38);
    sub_10008AAE0();
    sub_1000155B0((uint64_t)v21, v55, &qword_1000A2B28);
    swift_storeEnumTagMultiPayload();
    sub_10007CFAC();
    sub_10007D0A4();
    sub_10008AAE0();
    sub_100015614((uint64_t)v21, &qword_1000A2B28);
    uint64_t v34 = (uint64_t)v15;
  }
  else
  {
    if (v25 == 3)
    {
      uint64_t v26 = sub_10000903C(&qword_1000A2B38);
      uint64_t v27 = sub_100015428(&qword_1000A2B48, &qword_1000A2B38);
      sub_10008AE00();
      uint64_t v28 = v50;
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v24, v50);
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = v26;
      uint64_t v59 = v27;
      swift_getOpaqueTypeConformance2();
      sub_10007D468(&qword_1000A2B50, &qword_1000A2B10, &qword_1000A2B48, &qword_1000A2B38);
      sub_10008AAE0();
      sub_1000155B0((uint64_t)v21, v55, &qword_1000A2B28);
      swift_storeEnumTagMultiPayload();
      sub_10007CFAC();
      sub_10007D0A4();
      sub_10008AAE0();
      sub_100015614((uint64_t)v21, &qword_1000A2B28);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v28);
    }
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v10, enum case for Color.RGBColorSpace.sRGB(_:), v44);
    uint64_t v35 = sub_10008AFE0();
    uint64_t v36 = sub_10000903C(&qword_1000A2B38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v15, v51, v36);
    *(void *)&v15[*(int *)(v52 + 36)] = v35;
    uint64_t v38 = v47;
    uint64_t v37 = v48;
    uint64_t v39 = v49;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, enum case for BlendMode.plusLighter(_:), v49);
    uint64_t v40 = (uint64_t)v45;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(&v45[*(int *)(v56 + 36)], v38, v39);
    sub_1000155B0((uint64_t)v15, v40, &qword_1000A2B10);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
    sub_100015614((uint64_t)v15, &qword_1000A2B10);
    uint64_t v41 = v46;
    sub_10007CF44(v40, v46);
    uint64_t v32 = &qword_1000A2B08;
    sub_1000155B0(v41, v55, &qword_1000A2B08);
    swift_storeEnumTagMultiPayload();
    sub_10007CFAC();
    sub_10007D0A4();
    sub_10008AAE0();
    uint64_t v34 = v41;
  }
  return sub_100015614(v34, v32);
}

uint64_t sub_10007C474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007BC10(a1, *(void *)v2, *(unsigned char *)(v2 + 8), a2);
}

uint64_t sub_10007C480()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007C49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v40 = a4;
  uint64_t v41 = sub_10000903C(&qword_1000A2B80);
  uint64_t v33 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10000903C(&qword_1000A2B88);
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10000903C(&qword_1000A2B90);
  __chkstk_darwin(v38);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000903C(&qword_1000A2B98);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10000903C(&qword_1000A2BA0);
  __chkstk_darwin(v39);
  uint64_t v35 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10000903C(&qword_1000A2BA8);
  uint64_t v16 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 &= 1u;
  sub_1000090AC(a2, a3);
  char v19 = sub_10006B070(a2, a3);
  sub_100009700(a2, a3);
  if (v19 == 2)
  {
    if (qword_1000A1020 != -1) {
      swift_once();
    }
    uint64_t v25 = qword_1000A5790;
    uint64_t v26 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v9, v37, v41);
    *(void *)&v9[*(int *)(v36 + 36)] = v25;
    sub_1000155B0((uint64_t)v9, (uint64_t)v14, &qword_1000A2B88);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = sub_100015428(&qword_1000A2BB8, &qword_1000A2B80);
    swift_retain();
    uint64_t v42 = v26;
    uint64_t v43 = v27;
    swift_getOpaqueTypeConformance2();
    sub_10007D468(&qword_1000A2BC0, &qword_1000A2B88, &qword_1000A2BB8, &qword_1000A2B80);
    uint64_t v28 = (uint64_t)v35;
    sub_10008AAE0();
    sub_1000155B0(v28, (uint64_t)v11, &qword_1000A2BA0);
    swift_storeEnumTagMultiPayload();
    sub_10007D370();
    sub_10008AAE0();
    sub_100015614(v28, &qword_1000A2BA0);
    return sub_100015614((uint64_t)v9, &qword_1000A2B88);
  }
  else if (v19 == 3)
  {
    uint64_t v20 = sub_100015428(&qword_1000A2BB8, &qword_1000A2B80);
    uint64_t v21 = v41;
    sub_10008AE00();
    uint64_t v22 = v34;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v14, v18, v34);
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = v21;
    uint64_t v43 = v20;
    swift_getOpaqueTypeConformance2();
    sub_10007D468(&qword_1000A2BC0, &qword_1000A2B88, &qword_1000A2BB8, &qword_1000A2B80);
    uint64_t v23 = (uint64_t)v35;
    sub_10008AAE0();
    sub_1000155B0(v23, (uint64_t)v11, &qword_1000A2BA0);
    swift_storeEnumTagMultiPayload();
    sub_10007D370();
    sub_10008AAE0();
    sub_100015614(v23, &qword_1000A2BA0);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v22);
  }
  else
  {
    uint64_t v29 = v33;
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
    uint64_t v31 = v41;
    v30(v7, v37, v41);
    v30(v11, (uint64_t)v7, v31);
    swift_storeEnumTagMultiPayload();
    sub_10007D370();
    sub_100015428(&qword_1000A2BB8, &qword_1000A2B80);
    sub_10008AAE0();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v7, v31);
  }
}

uint64_t sub_10007CAF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007C49C(a1, *(void *)v2, *(unsigned char *)(v2 + 8), a2);
}

uint64_t sub_10007CB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v25 = a2;
  uint64_t v3 = sub_10000903C(&qword_1000A2AD0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000903C(&qword_1000A2AD8);
  __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A2AE0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2[5];
  char v13 = *((unsigned char *)v2 + 48);
  sub_1000090AC(v12, v13);
  char v14 = sub_10006B070(v12, v13);
  sub_100009700(v12, v13);
  if ((v14 - 3) >= 3u)
  {
    uint64_t v17 = *v2;
    long long v22 = *(_OWORD *)(v2 + 1);
    uint64_t v18 = v2[3];
    uint64_t v19 = v2[4];
    swift_bridgeObjectRetain();
    char v20 = sub_10008ABD0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v11, v23, v3);
    uint64_t v21 = &v11[*(int *)(v9 + 36)];
    *(void *)uint64_t v21 = v17;
    *(_OWORD *)(v21 + 8) = v22;
    *((void *)v21 + 3) = v18;
    *((void *)v21 + 4) = v19;
    v21[40] = v20;
    sub_1000155B0((uint64_t)v11, (uint64_t)v8, &qword_1000A2AE0);
    swift_storeEnumTagMultiPayload();
    sub_10007CE80();
    sub_100015428(&qword_1000A2AF0, &qword_1000A2AD0);
    sub_10008AAE0();
    return sub_100015614((uint64_t)v11, &qword_1000A2AE0);
  }
  else
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v15(v6, v23, v3);
    v15(v8, (uint64_t)v6, v3);
    swift_storeEnumTagMultiPayload();
    sub_10007CE80();
    sub_100015428(&qword_1000A2AF0, &qword_1000A2AD0);
    sub_10008AAE0();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_10007CE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007CB04(a1, a2);
}

unint64_t sub_10007CE80()
{
  unint64_t result = qword_1000A2AE8;
  if (!qword_1000A2AE8)
  {
    sub_10000E49C(&qword_1000A2AE0);
    sub_100015428(&qword_1000A2AF0, &qword_1000A2AD0);
    sub_100015428(&qword_1000A2AF8, &qword_1000A2B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2AE8);
  }
  return result;
}

uint64_t sub_10007CF44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A2B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007CFAC()
{
  unint64_t result = qword_1000A2B40;
  if (!qword_1000A2B40)
  {
    sub_10000E49C(&qword_1000A2B28);
    sub_10000E49C(&qword_1000A2B38);
    sub_100015428(&qword_1000A2B48, &qword_1000A2B38);
    swift_getOpaqueTypeConformance2();
    sub_10007D468(&qword_1000A2B50, &qword_1000A2B10, &qword_1000A2B48, &qword_1000A2B38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2B40);
  }
  return result;
}

unint64_t sub_10007D0A4()
{
  unint64_t result = qword_1000A2B58;
  if (!qword_1000A2B58)
  {
    sub_10000E49C(&qword_1000A2B08);
    sub_10007D468(&qword_1000A2B50, &qword_1000A2B10, &qword_1000A2B48, &qword_1000A2B38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2B58);
  }
  return result;
}

uint64_t _s14PodcastsWidget47WidgetTertiaryVibrantOrPodcastsAccentedModifierVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000090AC(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100009700(v5, v6);
  return a1;
}

uint64_t _s14PodcastsWidget47WidgetTertiaryVibrantOrPodcastsAccentedModifierVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14PodcastsWidget47WidgetTertiaryVibrantOrPodcastsAccentedModifierVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetPodcastsAccentedModifier()
{
  return &type metadata for WidgetPodcastsAccentedModifier;
}

unint64_t sub_10007D234()
{
  unint64_t result = qword_1000A2B60;
  if (!qword_1000A2B60)
  {
    sub_10000E49C(&qword_1000A2B68);
    sub_10007CE80();
    sub_100015428(&qword_1000A2AF0, &qword_1000A2AD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2B60);
  }
  return result;
}

unint64_t sub_10007D2D8()
{
  unint64_t result = qword_1000A2B70;
  if (!qword_1000A2B70)
  {
    sub_10000E49C(&qword_1000A2B78);
    sub_10007CFAC();
    sub_10007D0A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2B70);
  }
  return result;
}

uint64_t sub_10007D354()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10007D370()
{
  unint64_t result = qword_1000A2BB0;
  if (!qword_1000A2BB0)
  {
    sub_10000E49C(&qword_1000A2BA0);
    sub_10000E49C(&qword_1000A2B80);
    sub_100015428(&qword_1000A2BB8, &qword_1000A2B80);
    swift_getOpaqueTypeConformance2();
    sub_10007D468(&qword_1000A2BC0, &qword_1000A2B88, &qword_1000A2BB8, &qword_1000A2B80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2BB0);
  }
  return result;
}

uint64_t sub_10007D468(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000E49C(a2);
    sub_100015428(a3, a4);
    sub_100015428(&qword_1000A2818, &qword_1000A2820);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007D52C()
{
  unint64_t result = qword_1000A2BC8;
  if (!qword_1000A2BC8)
  {
    sub_10000E49C(&qword_1000A2BD0);
    sub_10007D370();
    sub_100015428(&qword_1000A2BB8, &qword_1000A2B80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A2BC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for VSpacer()
{
  return &type metadata for VSpacer;
}

uint64_t sub_10007D5EC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10007D608@<D0>(uint64_t a1@<X8>)
{
  sub_10008B130();
  sub_10008A6A0();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a1 + 48) = v7;
  return result;
}

ValueMetadata *type metadata accessor for WidgetURLs()
{
  return &type metadata for WidgetURLs;
}

uint64_t sub_10007D6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_100089FE0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000903C(&qword_1000A1048);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10008B220();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000903C(&qword_1000A1DB0);
  __n128 v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a1, v10, v15);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v18 != enum case for WidgetFamily.systemSmall(_:)
    && v18 != enum case for WidgetFamily.systemMedium(_:)
    && v18 != enum case for WidgetFamily.systemLarge(_:)
    && v18 != enum case for WidgetFamily.systemExtraLarge(_:))
  {
    if (&enum case for WidgetFamily.accessoryCorner(_:))
    {
      if (v18 == enum case for WidgetFamily.accessoryCorner(_:)
        || v18 == enum case for WidgetFamily.accessoryCircular(_:))
      {
        goto LABEL_5;
      }
    }
    else if (v18 == enum case for WidgetFamily.accessoryCircular(_:))
    {
      goto LABEL_5;
    }
    if (v18 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v18 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
LABEL_5:
  if (qword_1000A0F78 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_1000A0F80;
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_10008A3E0();
  uint64_t v20 = sub_10008A3F0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 0, 1, v20);
  type metadata accessor for PodcastsURLOpenCommand(0);
  uint64_t v21 = swift_allocObject();
  sub_1000447E8((uint64_t)v17, v21 + OBJC_IVAR____TtC14PodcastsWidget22PodcastsURLOpenCommand_widgetContext);
  type metadata accessor for PodcastsURLScheme();
  type metadata accessor for PodcastsURLNowPlayingCommand();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    sub_100089FD0();
    if (qword_1000A0FA0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_100089FC0();
    if (qword_1000A0FA8 == -1) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
  type metadata accessor for PodcastsURLBrowseCommand();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    sub_100089FD0();
    if (qword_1000A0FA0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_100089FC0();
    if (qword_1000A0FB0 == -1) {
      goto LABEL_18;
    }
LABEL_47:
    swift_once();
LABEL_18:
    swift_bridgeObjectRetain();
    sub_100089FB0();
LABEL_19:
    sub_100089FA0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_20;
  }
  uint64_t v25 = swift_dynamicCastClass();
  if (!v25)
  {
    type metadata accessor for PodcastsURLShowCommand(0);
    uint64_t v27 = swift_dynamicCastClass();
    if (v27)
    {
      uint64_t v28 = v27;
      swift_retain();
      sub_100089FD0();
      if (qword_1000A0FA0 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_100089FC0();
      if (qword_1000A0FC0 == -1) {
        goto LABEL_46;
      }
    }
    else
    {
      type metadata accessor for PodcastsURLPlayCommand(0);
      uint64_t v29 = swift_dynamicCastClass();
      if (v29)
      {
        uint64_t v28 = v29;
        swift_retain();
        sub_100089FD0();
        if (qword_1000A0FA0 != -1) {
          swift_once();
        }
        swift_bridgeObjectRetain();
        sub_100089FC0();
        if (qword_1000A0FC8 == -1) {
          goto LABEL_46;
        }
      }
      else
      {
        type metadata accessor for PodcastsURLShowAndPlayCommand(0);
        uint64_t v30 = swift_dynamicCastClass();
        if (!v30)
        {
          uint64_t v31 = sub_10008A050();
          uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v9, 1, 1, v31);
          goto LABEL_51;
        }
        uint64_t v28 = v30;
        swift_retain();
        sub_100089FD0();
        if (qword_1000A0FA0 != -1) {
          swift_once();
        }
        swift_bridgeObjectRetain();
        sub_100089FC0();
        if (qword_1000A0FD0 == -1) {
          goto LABEL_46;
        }
      }
    }
    swift_once();
LABEL_46:
    swift_bridgeObjectRetain();
    sub_100089FB0();
    sub_10007FE7C(v28 + OBJC_IVAR____TtC14PodcastsWidget25PodcastsURLEpisodeCommand_episodeParameters);
    sub_100089F90();
    goto LABEL_19;
  }
  uint64_t v26 = v25;
  swift_retain();
  sub_10007E5F0(v26, (uint64_t)v9);
LABEL_20:
  swift_release();
  uint64_t v22 = sub_10008A050();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v22);
  if (result != 1)
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v33, v9, v22);
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_10007DFC4()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for PodcastsURLCommand()
{
  return self;
}

uint64_t type metadata accessor for PodcastsURLNowPlayingCommand()
{
  return self;
}

uint64_t type metadata accessor for PodcastsURLBrowseCommand()
{
  return self;
}

uint64_t sub_10007E040()
{
  return sub_10007F5A4(v0 + OBJC_IVAR____TtC14PodcastsWidget22PodcastsURLOpenCommand_widgetContext);
}

uint64_t sub_10007E050()
{
  return sub_10007E138(&OBJC_IVAR____TtC14PodcastsWidget22PodcastsURLOpenCommand_widgetContext, (void (*)(uint64_t))sub_10007F5A4);
}

uint64_t sub_10007E070()
{
  return type metadata accessor for PodcastsURLOpenCommand(0);
}

uint64_t type metadata accessor for PodcastsURLOpenCommand(uint64_t a1)
{
  return sub_100029CA4(a1, (uint64_t *)&unk_1000A2EA8);
}

uint64_t sub_10007E098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007E1DC(a1, a2, a3, (uint64_t (*)(uint64_t))sub_10007E0B0);
}

void sub_10007E0B0()
{
  if (!qword_1000A2EB8)
  {
    sub_10008A3F0();
    unint64_t v0 = sub_10008B530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A2EB8);
    }
  }
}

uint64_t sub_10007E108()
{
  return sub_10007F548(v0 + OBJC_IVAR____TtC14PodcastsWidget25PodcastsURLEpisodeCommand_episodeParameters);
}

uint64_t sub_10007E118()
{
  return sub_10007E138(&OBJC_IVAR____TtC14PodcastsWidget25PodcastsURLEpisodeCommand_episodeParameters, (void (*)(uint64_t))sub_10007F548);
}

uint64_t sub_10007E138(void *a1, void (*a2)(uint64_t))
{
  a2(v2 + *a1);
  uint64_t v3 = *(unsigned int *)(*(void *)v2 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v2 + 52);

  return _swift_deallocClassInstance(v2, v3, v4);
}

uint64_t sub_10007E19C()
{
  return type metadata accessor for PodcastsURLEpisodeCommand(0);
}

uint64_t type metadata accessor for PodcastsURLEpisodeCommand(uint64_t a1)
{
  return sub_100029CA4(a1, qword_1000A2F68);
}

uint64_t sub_10007E1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007E1DC(a1, a2, a3, type metadata accessor for PodcastsURLEpisodeParameters);
}

uint64_t sub_10007E1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PodcastsURLEpisodeParameters(uint64_t a1)
{
  return sub_100029CA4(a1, qword_1000A3440);
}

uint64_t sub_10007E294()
{
  return type metadata accessor for PodcastsURLShowCommand(0);
}

uint64_t type metadata accessor for PodcastsURLShowCommand(uint64_t a1)
{
  return sub_100029CA4(a1, qword_1000A3020);
}

uint64_t sub_10007E2C0()
{
  return type metadata accessor for PodcastsURLPlayCommand(0);
}

uint64_t type metadata accessor for PodcastsURLPlayCommand(uint64_t a1)
{
  return sub_100029CA4(a1, qword_1000A30D8);
}

uint64_t sub_10007E2E8()
{
  sub_10007F548(v0 + OBJC_IVAR____TtC14PodcastsWidget25PodcastsURLEpisodeCommand_episodeParameters);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_10007E34C()
{
  return type metadata accessor for PodcastsURLShowAndPlayCommand(0);
}

uint64_t type metadata accessor for PodcastsURLShowAndPlayCommand(uint64_t a1)
{
  return sub_100029CA4(a1, qword_1000A3190);
}

uint64_t sub_10007E374()
{
  return swift_updateClassMetadata2();
}

void sub_10007E3AC()
{
  qword_1000A5770 = 0x7374736163646F70;
  *(void *)algn_1000A5778 = 0xE800000000000000;
}

void sub_10007E3D0()
{
  qword_1000A2BD8 = 0x6979616C50776F6ELL;
  unk_1000A2BE0 = 0xEA0000000000676ELL;
}

void sub_10007E3F8()
{
  qword_1000A2BE8 = 0x6573776F7262;
  unk_1000A2BF0 = 0xE600000000000000;
}

void sub_10007E418()
{
  qword_1000A2BF8 = 1852141679;
  unk_1000A2C00 = 0xE400000000000000;
}

void sub_10007E434()
{
  qword_1000A2C08 = 2003789939;
  unk_1000A2C10 = 0xE400000000000000;
}

void sub_10007E450()
{
  qword_1000A2C18 = 2036427888;
  unk_1000A2C20 = 0xE400000000000000;
}

void sub_10007E46C()
{
  qword_1000A2C28 = 0x79616C70776F6873;
  unk_1000A2C30 = 0xE800000000000000;
}

void sub_10007E490()
{
  qword_1000A2C38 = 0x5574736163646F70;
  unk_1000A2C40 = 0xEB00000000646975;
}

void sub_10007E4BC()
{
  qword_1000A2C48 = 0x5565646F73697065;
  unk_1000A2C50 = 0xEB00000000646975;
}

void sub_10007E4E8()
{
  qword_1000A2C58 = 0x4974736163646F70;
  unk_1000A2C60 = 0xE900000000000064;
}

void sub_10007E510()
{
  qword_1000A2C68 = 0x4965646F73697065;
  unk_1000A2C70 = 0xE900000000000064;
}

void sub_10007E538()
{
  qword_1000A2C78 = 0x616C506563726F66;
  unk_1000A2C80 = 0xE900000000000079;
}

void sub_10007E560()
{
  unk_1000A2C97 = -18;
}

void sub_10007E590()
{
  qword_1000A2C98 = 0x6F4E6E657473696CLL;
  unk_1000A2CA0 = 0xEF7478654E705577;
}

void sub_10007E5C0()
{
  unk_1000A2CB6 = -4864;
}

uint64_t sub_10007E5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  uint64_t v3 = sub_10000903C(&qword_1000A1DB0);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10008A3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100089FE0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100089FD0();
  if (qword_1000A0FA0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_100089FC0();
  if (qword_1000A0FB8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_100089FB0();
  sub_10007F604(a1 + OBJC_IVAR____TtC14PodcastsWidget22PodcastsURLOpenCommand_widgetContext, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10007F5A4((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    sub_10008A3D0();
    if (v14)
    {
      sub_10000903C(qword_1000A3490);
      sub_100089F80();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10008D8C0;
      if (qword_1000A1010 != -1) {
        swift_once();
      }
      sub_100089F70();
      swift_bridgeObjectRelease();
      sub_100089F90();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_100089FA0();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t type metadata accessor for PodcastsURLScheme()
{
  return self;
}

uint64_t type metadata accessor for PodcastsURLScheme.Command()
{
  return self;
}

uint64_t type metadata accessor for PodcastsURLScheme.Param()
{
  return self;
}

void *sub_10007EA30(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (char *)a2 + v7;
    uint64_t v9 = (void *)(a1 + v7);
    *(unsigned char *)(a1 + 58) = *((unsigned char *)a2 + 58);
    uint64_t v10 = sub_10008A3F0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v8, 1, v10))
    {
      uint64_t v13 = sub_10000903C(&qword_1000A1DB0);
      memcpy(v9, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_10007EBE4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_10008A3F0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_10007ECBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (const void *)(a2 + v6);
  uint64_t v8 = (void *)(a1 + v6);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v9 = sub_10008A3F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v7, 1, v9))
  {
    uint64_t v12 = sub_10000903C(&qword_1000A1DB0);
    memcpy(v8, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_10007EE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_10008A3F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000903C(&qword_1000A1DB0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_10007F008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (const void *)(a2 + v5);
  uint64_t v7 = (void *)(a1 + v5);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v8 = sub_10008A3F0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    uint64_t v10 = sub_10000903C(&qword_1000A1DB0);
    memcpy(v7, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_10007F144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  __int16 v8 = *(_WORD *)(a2 + 57);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(_WORD *)(a1 + 57) = v8;
  uint64_t v12 = sub_10008A3F0();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10000903C(&qword_1000A1DB0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_10007F304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007F318);
}

uint64_t sub_10007F318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10000903C(&qword_1000A1DB0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_10007F3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007F3EC);
}

uint64_t sub_10007F3EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_10000903C(&qword_1000A1DB0);
    __int16 v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10007F498()
{
  sub_10007E0B0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10007F548(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007F5A4(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A1DB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007F604(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007F66C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007F944(a1, a2, a3, a4, &qword_1000A1898, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_10007F6A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000903C(&qword_1000A1890);
  uint64_t v10 = *(void *)(sub_10000903C(&qword_1000A1038) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_10008B5B0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10000903C(&qword_1000A1038) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10007FBC4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_10007F910(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007F944(a1, a2, a3, a4, &qword_1000A1888, type metadata accessor for UpNextEntry, type metadata accessor for UpNextEntry);
}

uint64_t sub_10007F944(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000903C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_10008B5B0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10007FD20(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_10007FBC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_10000903C(&qword_1000A1038) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

uint64_t sub_10007FD20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_10008B5D0();
  __break(1u);
  return result;
}

char *sub_10007FE7C(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A1DB0);
  __chkstk_darwin(v2 - 8);
  char v70 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10008A3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100089F80();
  uint64_t v7 = *(void *)(v68 - 8);
  uint64_t v8 = __chkstk_darwin(v68);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  char v67 = (char *)&v58 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v66 = (char *)&v58 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v58 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  BOOL v20 = (char *)&v58 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v23 = (char *)&v58 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v58 - v24;
  if (*(void *)(a1 + 8))
  {
    uint64_t v69 = a1;
    if (qword_1000A0FD8 != -1) {
      swift_once();
    }
    sub_100089F70();
    uint64_t v26 = (char *)sub_10007F944(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
    unint64_t v28 = *((void *)v26 + 2);
    unint64_t v27 = *((void *)v26 + 3);
    uint64_t v63 = v5;
    uint64_t v64 = v4;
    uint64_t v62 = v10;
    if (v28 >= v27 >> 1) {
      uint64_t v26 = (char *)sub_10007F944(v27 > 1, v28 + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
    }
    *((void *)v26 + 2) = v28 + 1;
    uint64_t v29 = v7;
    uint64_t v30 = v7 + 32;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    unint64_t v32 = (*(unsigned __int8 *)(v30 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 48);
    uint64_t v33 = *(void *)(v30 + 40);
    uint64_t v34 = v25;
    uint64_t v35 = v68;
    v31(&v26[v32 + v33 * v28], v34, v68);
    uint64_t v36 = v69;
    if (*(void *)(v69 + 24))
    {
      if (qword_1000A0FE0 != -1) {
        swift_once();
      }
      sub_100089F70();
      unint64_t v38 = *((void *)v26 + 2);
      unint64_t v37 = *((void *)v26 + 3);
      if (v38 >= v37 >> 1) {
        uint64_t v26 = (char *)sub_10007F944(v37 > 1, v38 + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
      }
      *((void *)v26 + 2) = v38 + 1;
      v31(&v26[v32 + v38 * v33], v23, v35);
      uint64_t v5 = v63;
      uint64_t v4 = v64;
      uint64_t v7 = v29;
      uint64_t v10 = v62;
LABEL_12:
      uint64_t v36 = v69;
      goto LABEL_22;
    }
    uint64_t v5 = v63;
    uint64_t v4 = v64;
    uint64_t v7 = v29;
    uint64_t v10 = v62;
  }
  else if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v26 = (char *)_swiftEmptyArrayStorage;
    uint64_t v35 = v68;
    uint64_t v36 = a1;
  }
  else
  {
    uint64_t v61 = v7;
    uint64_t v69 = a1;
    uint64_t v39 = *(void *)(a1 + 32);
    if (qword_1000A0FE8 != -1) {
      swift_once();
    }
    uint64_t v71 = v39;
    sub_10008B670();
    sub_100089F70();
    swift_bridgeObjectRelease();
    uint64_t v26 = (char *)sub_10007F944(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
    unint64_t v41 = *((void *)v26 + 2);
    unint64_t v40 = *((void *)v26 + 3);
    if (v41 >= v40 >> 1) {
      uint64_t v26 = (char *)sub_10007F944(v40 > 1, v41 + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
    }
    uint64_t v35 = v68;
    *((void *)v26 + 2) = v41 + 1;
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
    unint64_t v60 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    uint64_t v59 = *(void *)(v61 + 72);
    v42(&v26[v60 + v59 * v41], v20, v35);
    if ((*(unsigned char *)(v69 + 56) & 1) == 0)
    {
      uint64_t v58 = v42;
      uint64_t v55 = *(void *)(v69 + 48);
      if (qword_1000A0FF0 != -1) {
        swift_once();
      }
      uint64_t v71 = v55;
      sub_10008B670();
      sub_100089F70();
      swift_bridgeObjectRelease();
      unint64_t v57 = *((void *)v26 + 2);
      unint64_t v56 = *((void *)v26 + 3);
      uint64_t v7 = v61;
      if (v57 >= v56 >> 1) {
        uint64_t v26 = (char *)sub_10007F944(v56 > 1, v57 + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
      }
      uint64_t v35 = v68;
      *((void *)v26 + 2) = v57 + 1;
      v58(&v26[v60 + v57 * v59], v17, v35);
      goto LABEL_12;
    }
    uint64_t v7 = v61;
    uint64_t v36 = v69;
  }
LABEL_22:
  if (*(unsigned char *)(v36 + 57) != 2)
  {
    if (qword_1000A0FF8 != -1) {
      swift_once();
    }
    sub_100089F70();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = (char *)sub_10007F944(0, *((void *)v26 + 2) + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
    }
    unint64_t v44 = *((void *)v26 + 2);
    unint64_t v43 = *((void *)v26 + 3);
    if (v44 >= v43 >> 1) {
      uint64_t v26 = (char *)sub_10007F944(v43 > 1, v44 + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
    }
    *((void *)v26 + 2) = v44 + 1;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v26[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v44], v66, v35);
  }
  uint64_t v45 = (uint64_t)v70;
  if (*(unsigned char *)(v36 + 58))
  {
    if (qword_1000A1000 != -1) {
      swift_once();
    }
    if (qword_1000A1008 != -1) {
      swift_once();
    }
    sub_100089F70();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = (char *)sub_10007F944(0, *((void *)v26 + 2) + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
    }
    unint64_t v47 = *((void *)v26 + 2);
    unint64_t v46 = *((void *)v26 + 3);
    if (v47 >= v46 >> 1) {
      uint64_t v26 = (char *)sub_10007F944(v46 > 1, v47 + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
    }
    *((void *)v26 + 2) = v47 + 1;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v26[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v47], v67, v35);
    uint64_t v45 = (uint64_t)v70;
  }
  uint64_t v48 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  sub_10007F604(v36 + *(int *)(v48 + 40), v45);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v45, 1, v4) == 1)
  {
    sub_10007F5A4(v45);
  }
  else
  {
    uint64_t v49 = v7;
    uint64_t v50 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v65, v45, v4);
    sub_10008A3D0();
    if (v51)
    {
      if (qword_1000A1010 != -1) {
        swift_once();
      }
      sub_100089F70();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = (char *)sub_10007F944(0, *((void *)v26 + 2) + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
      }
      unint64_t v53 = *((void *)v26 + 2);
      unint64_t v52 = *((void *)v26 + 3);
      if (v53 >= v52 >> 1) {
        uint64_t v26 = (char *)sub_10007F944(v52 > 1, v53 + 1, 1, (unint64_t)v26, qword_1000A3490, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
      }
      *((void *)v26 + 2) = v53 + 1;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v26[((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v53], v10, v35);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v50, v4);
  }
  return v26;
}

uint64_t sub_100080ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

void sub_100080AD4()
{
  sub_100081554();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_100080B7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_10008A050();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000903C(&qword_1000A1048);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 40);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 36));
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
  }
  swift_retain();
  return a1;
}

uint64_t sub_100080D04(uint64_t a1)
{
  uint64_t v2 = sub_10008A050();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return swift_release();
}

char *sub_100080DD4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10008A050();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000903C(&qword_1000A1048);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 40);
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  swift_retain();
  return a1;
}

char *sub_100080F10(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10008A050();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10000903C(&qword_1000A1048);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1000810C0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10008A050();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000903C(&qword_1000A1048);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 40);
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_1000811F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10008A050();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10000903C(&qword_1000A1048);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 40);
  *(void *)&a1[*(int *)(a3 + 36)] = *(void *)&a2[*(int *)(a3 + 36)];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  swift_release();
  return a1;
}

uint64_t sub_100081390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000813A4);
}

uint64_t sub_1000813A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000903C(&qword_1000A1048);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100081468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008147C);
}

uint64_t sub_10008147C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000903C(&qword_1000A1048);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for WidgetLink()
{
  return sub_10005206C();
}

void sub_100081554()
{
  if (!qword_1000A17B8)
  {
    sub_10008A050();
    unint64_t v0 = sub_10008B530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A17B8);
    }
  }
}

uint64_t sub_1000815AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000815F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008AAD0();
  __n128 v5 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return sub_10008AAE0();
}

uint64_t sub_1000816E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10008AAD0();
  __n128 v6 = __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return sub_10008AAE0();
}

uint64_t sub_1000817E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v86 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  __n128 v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v70 - v8;
  uint64_t v9 = sub_10008A7B0();
  uint64_t v84 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v82 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10008A790();
  uint64_t v89 = a1;
  uint64_t v91 = *(void *)(a1 + 24);
  uint64_t v117 = v91;
  long long v118 = &protocol witness table for _PaddingLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v75 = v11;
  uint64_t v73 = WitnessTable;
  uint64_t v13 = sub_10008AD00();
  uint64_t v76 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v74 = (char *)&v70 - v14;
  uint64_t v15 = swift_getWitnessTable();
  unint64_t v16 = sub_100082674();
  uint64_t v92 = v13;
  uint64_t v113 = v13;
  uint64_t v114 = v9;
  uint64_t v97 = v9;
  uint64_t v96 = v15;
  uint64_t v115 = v15;
  unint64_t v116 = v16;
  uint64_t v17 = v2;
  unint64_t v95 = v16;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v78 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v72 = (char *)&v70 - v19;
  sub_10000E49C(&qword_1000A3520);
  uint64_t v79 = OpaqueTypeMetadata2;
  uint64_t v20 = sub_10008A790();
  uint64_t v80 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v77 = (char *)&v70 - v21;
  uint64_t v94 = v22;
  uint64_t v23 = sub_10008A790();
  uint64_t v83 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v81 = (char *)&v70 - v27;
  uint64_t v28 = sub_10000903C(&qword_1000A1048);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10008A050();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  unint64_t v37 = (char *)&v70 - v36;
  uint64_t v88 = sub_10008AAF0();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v93 = (char *)&v70 - v38;
  sub_1000826CC(v17, (uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    uint64_t v39 = sub_100082734((uint64_t)v30);
    (*(void (**)(uint64_t))(v17 + *(int *)(v89 + 40)))(v39);
    unint64_t v40 = v85;
    uint64_t v41 = v91;
    sub_100050FA4(v6, v4, v91);
    uint64_t v42 = *(void (**)(char *, uint64_t))(v86 + 8);
    v42(v6, v4);
    sub_100050FA4(v40, v4, v41);
    uint64_t v113 = v92;
    uint64_t v114 = v97;
    uint64_t v115 = v96;
    unint64_t v116 = v95;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v44 = sub_100082794();
    uint64_t v111 = OpaqueTypeConformance2;
    unint64_t v112 = v44;
    uint64_t v109 = swift_getWitnessTable();
    long long v110 = &protocol witness table for _PaddingLayout;
    swift_getWitnessTable();
    sub_1000816E8((uint64_t)v6, v23, v4);
    v42(v6, v4);
    v42(v40, v4);
  }
  else
  {
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    uint64_t v71 = v37;
    v45(v37, v30, v31);
    uint64_t v46 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 16))(v34, v37, v31);
    __chkstk_darwin(v46);
    uint64_t v47 = v91;
    *(&v70 - 4) = v4;
    *(&v70 - 3) = v47;
    *(&v70 - 2) = v17;
    uint64_t v48 = v74;
    sub_10008ACF0();
    uint64_t v49 = v82;
    sub_10008A7A0();
    uint64_t v50 = v92;
    uint64_t v51 = v97;
    uint64_t v86 = v31;
    unint64_t v52 = v72;
    uint64_t v75 = v17;
    uint64_t v53 = v96;
    uint64_t v85 = (char *)v4;
    unint64_t v54 = v95;
    sub_10008AE60();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v49, v51);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v50);
    uint64_t v102 = sub_10008AFB0();
    sub_10008ABD0();
    uint64_t v113 = v50;
    uint64_t v114 = v51;
    uint64_t v115 = v53;
    unint64_t v116 = v54;
    uint64_t v55 = swift_getOpaqueTypeConformance2();
    unint64_t v56 = v77;
    uint64_t v57 = v79;
    sub_10008AE40();
    swift_release();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v52, v57);
    sub_10008AC20();
    unint64_t v58 = sub_100082794();
    uint64_t v100 = v55;
    unint64_t v101 = v58;
    uint64_t v59 = v94;
    uint64_t v60 = swift_getWitnessTable();
    sub_10008AF60();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v56, v59);
    uint64_t v98 = v60;
    uint64_t v41 = v91;
    char v99 = &protocol witness table for _PaddingLayout;
    uint64_t v61 = swift_getWitnessTable();
    uint64_t v62 = v81;
    sub_100050FA4(v25, v23, v61);
    uint64_t v63 = *(void (**)(char *, uint64_t))(v83 + 8);
    v63(v25, v23);
    sub_100050FA4(v62, v23, v61);
    sub_1000815F0((uint64_t)v25, v23);
    v63(v25, v23);
    v63(v62, v23);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v71, v86);
  }
  uint64_t v113 = v92;
  uint64_t v114 = v97;
  uint64_t v115 = v96;
  unint64_t v116 = v95;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  unint64_t v65 = sub_100082794();
  uint64_t v107 = v64;
  unint64_t v108 = v65;
  uint64_t v105 = swift_getWitnessTable();
  __n128 v106 = &protocol witness table for _PaddingLayout;
  uint64_t v103 = swift_getWitnessTable();
  uint64_t v104 = v41;
  uint64_t v66 = v88;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v68 = v93;
  sub_100050FA4(v93, v66, v67);
  return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v68, v66);
}

uint64_t sub_10008241C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v20[1] = a4;
  v20[0] = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10008A790();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v20 - v14;
  uint64_t v16 = type metadata accessor for WidgetLink();
  (*(void (**)(void))(a1 + *(int *)(v16 + 40)))();
  sub_10008AC20();
  sub_10008AF60();
  (*(void (**)(char *, uint64_t))(v20[0] + 8))(v8, a2);
  void v20[2] = a3;
  void v20[3] = &protocol witness table for _PaddingLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100050FA4(v12, v9, WitnessTable);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  sub_100050FA4(v15, v9, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

unint64_t sub_100082674()
{
  unint64_t result = qword_1000A3518;
  if (!qword_1000A3518)
  {
    sub_10008A7B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3518);
  }
  return result;
}

uint64_t sub_1000826CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000903C(&qword_1000A1048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100082734(uint64_t a1)
{
  uint64_t v2 = sub_10000903C(&qword_1000A1048);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100082794()
{
  unint64_t result = qword_1000A3528;
  if (!qword_1000A3528)
  {
    sub_10000E49C(&qword_1000A3520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3528);
  }
  return result;
}

uint64_t sub_1000827F0@<X0>(uint64_t a1@<X8>)
{
  return sub_10008241C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1000827FC()
{
  return swift_getWitnessTable();
}

unint64_t sub_1000829CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_1000090AC(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10000903C(&qword_1000A1DE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10008B1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_10000903C(&qword_1000A1DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_10008B220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100082B9C(uint64_t a1, uint64_t a2)
{
  sub_100009700(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_10008B1F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10008B220();
    char v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100082CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1000090AC(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_10008B1F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_10008B220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    void *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100082E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1000090AC(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_100009700(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100015614(a1 + v10, &qword_1000A1DE0);
    sub_10000903C(&qword_1000A1DE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_10008B1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100015614(a1 + v14, &qword_1000A1DD8);
    sub_10000903C(&qword_1000A1DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_10008B220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100082FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10000903C(&qword_1000A1DE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10008B1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_10000903C(&qword_1000A1DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_10008B220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100083180(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_100009700(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_100015614(a1 + v10, &qword_1000A1DE0);
    uint64_t v13 = sub_10000903C(&qword_1000A1DE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_10008B1F0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (char *)a2 + v15;
    sub_100015614(a1 + v15, &qword_1000A1DD8);
    uint64_t v18 = sub_10000903C(&qword_1000A1DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_10008B220();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100083340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100083354);
}

uint64_t sub_100083354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10000903C(&qword_1000A1DF0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000903C(&qword_1000A1DE8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100083480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100083494);
}

uint64_t sub_100083494(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v8 = sub_10000903C(&qword_1000A1DF0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000903C(&qword_1000A1DE8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for Logo()
{
  uint64_t result = qword_1000A3590;
  if (!qword_1000A3590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100083610()
{
  sub_10008371C(319, (unint64_t *)&unk_1000A1E68, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_10008371C(319, &qword_1000A1E60, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10008371C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10008A660();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100083770()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10008378C()
{
  qword_1000A3530 = 0x4024000000000000;
}

uint64_t sub_10008379C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v81 = a1;
  uint64_t v3 = sub_10008B220();
  uint64_t v70 = *(void *)(v3 - 8);
  uint64_t v71 = v3;
  __chkstk_darwin(v3);
  uint64_t v67 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000903C(&qword_1000A1048);
  __chkstk_darwin(v5 - 8);
  uint64_t v69 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10000903C(&qword_1000A35D0);
  __chkstk_darwin(v68);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10000903C(&qword_1000A35D8);
  __chkstk_darwin(v72);
  uint64_t v76 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10000903C(&qword_1000A35E0);
  __chkstk_darwin(v78);
  uint64_t v75 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000903C(&qword_1000A35E8);
  __chkstk_darwin(v11 - 8);
  uint64_t v77 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000903C(&qword_1000A35F0);
  uint64_t v79 = *(void *)(v13 - 8);
  uint64_t v80 = v13;
  __chkstk_darwin(v13);
  uint64_t v74 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v73 = (uint64_t)&v67 - v16;
  uint64_t v17 = type metadata accessor for Logo();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10008B1F0();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v67 - v25;
  sub_10006ACE4((uint64_t)&v67 - v25);
  sub_10008B1D0();
  char v27 = sub_10008B1C0();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v21 + 8);
  v28(v23, v20);
  v28(v26, v20);
  sub_1000842C0(v2, (uint64_t)v19);
  if (v27)
  {
    sub_100084324((uint64_t)v19);
  }
  else
  {
    uint64_t v29 = *(void *)v19;
    char v30 = v19[8];
    sub_1000090AC(*(void *)v19, v30);
    char v31 = sub_10006A9AC(v29, v30);
    sub_100009700(v29, v30);
    sub_100084324((uint64_t)v19);
    if ((v31 & 1) == 0)
    {
      uint64_t v65 = 1;
      uint64_t v60 = v80;
      uint64_t v64 = v81;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v64, v65, 1, v60);
    }
  }
  uint64_t v32 = v67;
  sub_10006ABB0(v67);
  uint64_t v33 = v69;
  sub_10007D6A8(v32, v69);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v32, v71);
  uint64_t v34 = sub_10008A050();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
  sub_10001547C(v33, (uint64_t)v8, &qword_1000A1048);
  uint64_t v35 = v68;
  *(void *)&v8[*(int *)(v68 + 36)] = 0;
  uint64_t v36 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v8[*(int *)(v35 + 40)];
  *uint64_t v36 = sub_100083F28;
  v36[1] = 0;
  if (qword_1000A1018 != -1) {
    swift_once();
  }
  char v37 = sub_10008ABD0();
  sub_10008A630();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v46 = v76;
  sub_1000155B0((uint64_t)v8, v76, &qword_1000A35D0);
  uint64_t v47 = v46 + *(int *)(v72 + 36);
  *(unsigned char *)uint64_t v47 = v37;
  *(void *)(v47 + 8) = v39;
  *(void *)(v47 + 16) = v41;
  *(void *)(v47 + 24) = v43;
  *(void *)(v47 + 32) = v45;
  *(unsigned char *)(v47 + 40) = 0;
  sub_100015614((uint64_t)v8, &qword_1000A35D0);
  uint64_t v48 = *(void *)v2;
  char v49 = *(unsigned char *)(v2 + 8);
  sub_1000090AC(*(void *)v2, v49);
  char v50 = sub_10006A9AC(v48, v49);
  sub_100009700(v48, v49);
  sub_1000090AC(v48, v49);
  char v51 = sub_10006A9AC(v48, v49);
  sub_100009700(v48, v49);
  if (v50) {
    unint64_t v52 = 0xC010000000000000;
  }
  else {
    unint64_t v52 = 0;
  }
  if (v51) {
    unint64_t v53 = 0xC010000000000000;
  }
  else {
    unint64_t v53 = 0;
  }
  char v54 = sub_10008ABD0();
  uint64_t v55 = v75;
  sub_1000155B0(v46, v75, &qword_1000A35D8);
  uint64_t v56 = v55 + *(int *)(v78 + 36);
  *(unsigned char *)uint64_t v56 = v54;
  *(void *)(v56 + 8) = v52;
  *(_OWORD *)(v56 + 16) = xmmword_10008EE90;
  *(void *)(v56 + 32) = v53;
  *(unsigned char *)(v56 + 40) = 0;
  sub_100015614(v46, &qword_1000A35D8);
  sub_100084380();
  uint64_t v57 = (uint64_t)v77;
  sub_10008AEF0();
  sub_100015614(v55, &qword_1000A35E0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v59 = v74;
  sub_1000155B0(v57, v74, &qword_1000A35E8);
  uint64_t v60 = v80;
  uint64_t v61 = v59 + *(int *)(v80 + 36);
  *(void *)uint64_t v61 = KeyPath;
  *(unsigned char *)(v61 + 8) = 0;
  sub_100015614(v57, &qword_1000A35E8);
  uint64_t v62 = v73;
  sub_10001547C(v59, v73, &qword_1000A35F0);
  uint64_t v63 = v62;
  uint64_t v64 = v81;
  sub_10001547C(v63, v81, &qword_1000A35F0);
  uint64_t v65 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v64, v65, 1, v60);
}

uint64_t sub_100083F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_10008A770();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10000903C(&qword_1000A3610);
  uint64_t v5 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10000903C(&qword_1000A3618);
  uint64_t v8 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10008B040();
  uint64_t v12 = sub_10008AC80();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v11;
  unint64_t v34 = KeyPath;
  uint64_t v35 = v12;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for DynamicTypeSize.large(_:), v1);
  uint64_t v14 = sub_10000903C(&qword_1000A3620);
  unint64_t v15 = sub_1000844AC();
  sub_10008AEA0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v33 = v14;
  unint64_t v34 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v16 = v30;
  sub_10008AE50();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  if (qword_1000A1018 != -1) {
    swift_once();
  }
  char v17 = sub_10008ABD0();
  sub_10008A630();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v31;
  uint64_t v26 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v32, v10, v31);
  uint64_t v28 = v26 + *(int *)(sub_10000903C(&qword_1000A3630) + 36);
  *(unsigned char *)uint64_t v28 = v17;
  *(void *)(v28 + 8) = v19;
  *(void *)(v28 + 16) = v21;
  *(void *)(v28 + 24) = v23;
  *(void *)(v28 + 32) = v25;
  *(unsigned char *)(v28 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v27);
}

uint64_t sub_1000842C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100084324(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100084380()
{
  unint64_t result = qword_1000A35F8;
  if (!qword_1000A35F8)
  {
    sub_10000E49C(&qword_1000A35E0);
    sub_1000843FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A35F8);
  }
  return result;
}

unint64_t sub_1000843FC()
{
  unint64_t result = qword_1000A3600;
  if (!qword_1000A3600)
  {
    sub_10000E49C(&qword_1000A35D8);
    sub_100015428(&qword_1000A3608, &qword_1000A35D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3600);
  }
  return result;
}

unint64_t sub_1000844AC()
{
  unint64_t result = qword_1000A3628;
  if (!qword_1000A3628)
  {
    sub_10000E49C(&qword_1000A3620);
    sub_100015428(&qword_1000A27F8, &qword_1000A2800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3628);
  }
  return result;
}

unint64_t sub_100084550()
{
  unint64_t result = qword_1000A3638;
  if (!qword_1000A3638)
  {
    sub_10000E49C(&qword_1000A3640);
    sub_100084638(&qword_1000A3648, &qword_1000A35F0, (void (*)(void))sub_1000845FC, (void (*)(void))sub_1000846C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3638);
  }
  return result;
}

uint64_t sub_1000845FC()
{
  return sub_100084638(&qword_1000A3650, &qword_1000A35E8, (void (*)(void))sub_100084380, (void (*)(void))sub_100015264);
}

uint64_t sub_100084638(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000E49C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000846C0()
{
  unint64_t result = qword_1000A3658;
  if (!qword_1000A3658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3658);
  }
  return result;
}

uint64_t sub_100084714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100084728);
}

uint64_t sub_100084728(uint64_t a1, uint64_t a2)
{
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Entry - 8) + 48);

  return v5(a1, a2, Entry);
}

uint64_t sub_100084794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000847A8);
}

uint64_t sub_1000847A8(uint64_t a1, uint64_t a2)
{
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Entry - 8) + 56);

  return v5(a1, a2, a2, Entry);
}

uint64_t type metadata accessor for EpisodeListWidgetXL()
{
  uint64_t result = qword_1000A36B8;
  if (!qword_1000A36B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100084864()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100084880@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100084948(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t (*)(void))type metadata accessor for Logo, &qword_1000A2200).n128_u64[0];
  return result;
}

double sub_1000848E4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100084948(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t (*)(void))type metadata accessor for WidgetEmptyText, &qword_1000A21F8).n128_u64[0];
  return result;
}

__n128 sub_100084948@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(void), uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10008B4D0();
    uint64_t v28 = (void *)sub_10008AB90();
    sub_10008A500();

    uint64_t v19 = a17;
  }
  sub_10008A800();
  sub_100087E54(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(sub_10000903C(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  void v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_100084B18@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11, char a12, double a13, char a14)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a12) {
    a11 = a7;
  }
  if (a14) {
    a13 = a11;
  }
  if (a7 > a11 || a11 > a13)
  {
LABEL_22:
    sub_10008B4D0();
    uint64_t v24 = (void *)sub_10008AB90();
    sub_10008A500();
  }
  sub_10008A800();
  *(double *)a9 = a10;
  *(_OWORD *)(a9 + 56) = v29;
  *(_OWORD *)(a9 + 72) = v30;
  *(_OWORD *)(a9 + 88) = v31;
  *(_OWORD *)(a9 + 104) = v32;
  double result = *(double *)&v26;
  *(_OWORD *)(a9 + 8) = v26;
  *(_OWORD *)(a9 + 24) = v27;
  *(_OWORD *)(a9 + 40) = v28;
  return result;
}

void sub_100084CC8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_10008AFA0();
  uint64_t v51 = *(void *)(v3 - 8);
  *(void *)&long long v52 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000903C(&qword_1000A36F8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10000903C(&qword_1000A3700);
  __chkstk_darwin(v53);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v54 = (uint64_t)&v50 - v12;
  uint64_t v13 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000903C(&qword_1000A3708);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000903C(&qword_1000A3710);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v50 - v24;
  uint64_t v26 = a1[3];
  if (*(void *)(v26 + 16))
  {
    sub_100087E54(v26 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), (uint64_t)v16, type metadata accessor for UpNextEntry.Episode);
    sub_100085278((uint64_t)v16, (uint64_t)v19);
    sub_100087EBC((uint64_t)v16, type metadata accessor for UpNextEntry.Episode);
    type metadata accessor for EpisodeListWidgetXL();
    char v27 = sub_10008ABD0();
    sub_10008A630();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    sub_1000155B0((uint64_t)v19, (uint64_t)v22, &qword_1000A3708);
    long long v36 = &v22[*(int *)(v20 + 36)];
    *long long v36 = v27;
    *((void *)v36 + 1) = v29;
    *((void *)v36 + 2) = v31;
    *((void *)v36 + 3) = v33;
    *((void *)v36 + 4) = v35;
    v36[40] = 0;
    sub_100015614((uint64_t)v19, &qword_1000A3708);
    sub_10001547C((uint64_t)v22, (uint64_t)v25, &qword_1000A3710);
    *(void *)uint64_t v8 = sub_10008AA80();
    *((void *)v8 + 1) = 0;
    v8[16] = 1;
    uint64_t v37 = sub_10000903C(&qword_1000A3718);
    sub_100086BD8(a1, &v8[*(int *)(v37 + 44)]);
    sub_10000903C(&qword_1000A1978);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_10008DB20;
    uint64_t v39 = enum case for Color.RGBColorSpace.sRGB(_:);
    uint64_t v40 = v52;
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 104);
    v41(v5, enum case for Color.RGBColorSpace.sRGB(_:), v52);
    *(void *)(v38 + 32) = sub_10008AFF0();
    v41(v5, v39, v40);
    *(void *)(v38 + 40) = sub_10008AFF0();
    uint64_t v56 = v38;
    sub_10008B420();
    sub_10008B110();
    sub_10008B1A0();
    sub_10008B1B0();
    sub_10008A710();
    uint64_t v42 = v56;
    long long v52 = v57;
    uint64_t v43 = v58;
    uint64_t v44 = v59;
    uint64_t KeyPath = swift_getKeyPath();
    sub_1000155B0((uint64_t)v8, (uint64_t)v10, &qword_1000A36F8);
    uint64_t v46 = &v10[*(int *)(v53 + 36)];
    *(void *)uint64_t v46 = v42;
    *(_OWORD *)(v46 + 8) = v52;
    *((void *)v46 + 3) = v43;
    *((void *)v46 + 4) = v44;
    *((void *)v46 + 5) = KeyPath;
    v46[48] = 0;
    sub_100015614((uint64_t)v8, &qword_1000A36F8);
    uint64_t v47 = v54;
    sub_10001547C((uint64_t)v10, v54, &qword_1000A3700);
    sub_1000155B0((uint64_t)v25, (uint64_t)v22, &qword_1000A3710);
    sub_1000155B0(v47, (uint64_t)v10, &qword_1000A3700);
    uint64_t v48 = v55;
    sub_1000155B0((uint64_t)v22, v55, &qword_1000A3710);
    uint64_t v49 = sub_10000903C(&qword_1000A3720);
    sub_1000155B0((uint64_t)v10, v48 + *(int *)(v49 + 48), &qword_1000A3700);
    sub_100015614(v47, &qword_1000A3700);
    sub_100015614((uint64_t)v25, &qword_1000A3710);
    sub_100015614((uint64_t)v10, &qword_1000A3700);
    sub_100015614((uint64_t)v22, &qword_1000A3710);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100085278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for EpisodeListWidgetXL();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v42 = *(void *)(v43 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v46 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v40 + 64);
  uint64_t v7 = v5 - 8;
  uint64_t v41 = v5 - 8;
  __chkstk_darwin(v5 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000903C(&qword_1000A1048);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v10;
  uint64_t v11 = sub_10000903C(&qword_1000A3768);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000903C(&qword_1000A3770);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000903C(&qword_1000A1FF8);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(int *)(v7 + 68);
  uint64_t v38 = (void *)a1;
  sub_1000155B0(a1 + v23, (uint64_t)v10, &qword_1000A1048);
  uint64_t v24 = v39;
  sub_100087E54(a1, v39, type metadata accessor for UpNextEntry.Episode);
  sub_100087E54(v44, v46, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetXL);
  unint64_t v25 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v26 = (v6 + *(unsigned __int8 *)(v43 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v27 = swift_allocObject();
  sub_100087D84(v24, v27 + v25, type metadata accessor for UpNextEntry.Episode);
  sub_100087D84(v46, v27 + v26, (uint64_t (*)(void))type metadata accessor for EpisodeListWidgetXL);
  sub_10001547C((uint64_t)v37, (uint64_t)v14, &qword_1000A1048);
  *(void *)&v14[*(int *)(v12 + 44)] = 0;
  uint64_t v28 = (id (**)@<X0>(uint64_t@<X8>))&v14[*(int *)(v12 + 48)];
  void *v28 = sub_100087C00;
  v28[1] = (id (*)@<X0>(uint64_t@<X8>))v27;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000155B0((uint64_t)v14, (uint64_t)v18, &qword_1000A3768);
  uint64_t v30 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v30 = KeyPath;
  v30[8] = 1;
  sub_100015614((uint64_t)v14, &qword_1000A3768);
  uint64_t v32 = *v38;
  uint64_t v31 = v38[1];
  uint64_t v33 = v38;
  sub_1000155B0((uint64_t)v18, (uint64_t)v22, &qword_1000A3770);
  uint64_t v34 = &v22[*(int *)(v20 + 60)];
  *(void *)uint64_t v34 = v32;
  *((void *)v34 + 1) = v31;
  swift_bridgeObjectRetain();
  sub_100015614((uint64_t)v18, &qword_1000A3770);
  char v35 = *(void *)((char *)v33 + *(int *)(v41 + 92)) != 0;
  uint64_t v47 = v33;
  sub_10004D384(v35, (void (*)(uint64_t, __n128))sub_100087D7C, v45);
  return sub_100015614((uint64_t)v22, &qword_1000A1FF8);
}

id sub_1000856D8@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t a1)@<X1>, uint64_t a3@<X8>)
{
  v29[1] = a3;
  uint64_t v5 = sub_10000903C(&qword_1000A1060);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[0] = sub_10000903C(&qword_1000A3778);
  __chkstk_darwin(v29[0]);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_10008AA70();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v10 = sub_10000903C(&qword_1000A3780);
  sub_100085A38((uint64_t)a1, a2, &v9[*(int *)(v10 + 44)]);
  sub_10000903C(&qword_1000A1D50);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10008DE00;
  uint64_t v12 = a1[8];
  *(void *)(v11 + 32) = a1[7];
  *(void *)(v11 + 40) = v12;
  uint64_t v13 = a1[3];
  *(void *)(v11 + 48) = a1[2];
  *(void *)(v11 + 56) = v13;
  uint64_t v14 = a1[10];
  *(void *)(v11 + 64) = a1[9];
  *(void *)(v11 + 72) = v14;
  uint64_t v15 = (char *)a1 + *(int *)(type metadata accessor for UpNextEntry.Episode(0) + 88);
  uint64_t v16 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v17 = &v15[*(int *)(v16 + 32)];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)(v11 + 80) = *(void *)v17;
  *(void *)(v11 + 88) = v18;
  sub_1000155B0((uint64_t)&v15[*(int *)(v16 + 24)], (uint64_t)v7, &qword_1000A1060);
  uint64_t v19 = sub_10008A4B0();
  uint64_t v20 = *(void *)(v19 - 8);
  LODWORD(v15) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 == 1)
  {
    sub_100015614((uint64_t)v7, &qword_1000A1060);
  }
  else
  {
    sub_10008A4A0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);
  }
  id result = (id)AXDurationStringForDurationWithSeconds();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v23 = sub_10008B360();
    uint64_t v25 = v24;

    *(void *)(v11 + 96) = v23;
    *(void *)(v11 + 104) = v25;
    uint64_t v30 = v11;
    sub_10000903C(&qword_1000A1D40);
    sub_100015428(&qword_1000A1F10, &qword_1000A1D40);
    uint64_t v26 = sub_10008B2E0();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v30 = v26;
    uint64_t v31 = v28;
    sub_100015428(&qword_1000A3788, &qword_1000A3778);
    sub_100031338();
    sub_10008AEE0();
    swift_bridgeObjectRelease();
    return (id)sub_100015614((uint64_t)v9, &qword_1000A3778);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100085A38@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t a1)@<X1>, void *a3@<X8>)
{
  __n128 v125 = a2;
  Swift::String_optional v136 = a3;
  uint64_t v135 = type metadata accessor for WidgetEmptyText();
  __chkstk_darwin(v135);
  uint64_t v117 = &v106[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v131 = sub_10000903C(&qword_1000A3790);
  __chkstk_darwin(v131);
  Swift::String v134 = &v106[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v133 = sub_10000903C(&qword_1000A3798);
  __chkstk_darwin(v133);
  long long v124 = &v106[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v121 = type metadata accessor for PlayButtonLarge(0);
  __chkstk_darwin(v121);
  long long v122 = &v106[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  char v123 = &v106[-v9];
  uint64_t v120 = sub_10008AC90();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  long long v118 = &v106[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10000903C(&qword_1000A1990);
  __chkstk_darwin(v11 - 8);
  unint64_t v116 = &v106[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v109 = type metadata accessor for EpisodeCaptionView();
  __chkstk_darwin(v109);
  uint64_t v111 = &v106[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v110 = sub_10000903C(&qword_1000A1B80);
  __chkstk_darwin(v110);
  uint64_t v114 = &v106[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v112 = sub_10000903C(&qword_1000A2240);
  __chkstk_darwin(v112);
  uint64_t v115 = &v106[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = sub_10000903C(&qword_1000A2248);
  __chkstk_darwin(v113);
  long long v126 = &v106[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  long long v127 = &v106[-v18];
  uint64_t v19 = sub_10000903C(&qword_1000A37A0);
  __chkstk_darwin(v19 - 8);
  __int16 v132 = &v106[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  Swift::String v137 = &v106[-v22];
  uint64_t v23 = type metadata accessor for EpisodeViewStyle();
  __chkstk_darwin(v23);
  uint64_t v25 = &v106[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  uint64_t v28 = &v106[-v27];
  uint64_t v29 = type metadata accessor for UpNextEntry.Episode(0);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = &v106[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = type metadata accessor for WidgetArtworkView();
  uint64_t v33 = v32 - 8;
  __chkstk_darwin(v32);
  long long v130 = &v106[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v35);
  uint64_t v37 = &v106[-v36];
  __chkstk_darwin(v38);
  uint64_t v40 = &v106[-v39];
  uint64_t v128 = a1;
  sub_100087E54(a1, (uint64_t)v31, type metadata accessor for UpNextEntry.Episode);
  uint64_t v41 = enum case for WidgetFamily.systemExtraLarge(_:);
  uint64_t v42 = sub_10008B220();
  uint64_t v43 = *(void (**)(unsigned char *, void, uint64_t))(*(void *)(v42 - 8) + 104);
  unsigned int v107 = v41;
  uint64_t v44 = v41;
  uint64_t v45 = v43;
  v43(v28, v44, v42);
  swift_storeEnumTagMultiPayload();
  sub_100087E54((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
  uint64_t v108 = v23;
  if (swift_getEnumCaseMultiPayload() == 1) {
    double v46 = 8.0;
  }
  else {
    double v46 = 6.0;
  }
  sub_100087EBC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
  sub_100087EBC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for EpisodeViewStyle);
  sub_100087D84((uint64_t)v31, (uint64_t)v37, type metadata accessor for UpNextEntry.Episode);
  *(double *)&v37[*(int *)(v33 + 28)] = v46;
  long long v129 = v40;
  sub_100087D84((uint64_t)v37, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  int v47 = *((unsigned __int8 *)v125 + 16);
  if (v47 == 2)
  {
    __n128 v125 = type metadata accessor for UpNextEntry.Episode;
    uint64_t v48 = v128;
    uint64_t v49 = v111;
    sub_100087E54(v128, (uint64_t)v111, type metadata accessor for UpNextEntry.Episode);
    uint64_t v50 = v109;
    v49[*(int *)(v109 + 20)] = 1;
    v49[*(int *)(v50 + 24)] = 0;
    v49[*(int *)(v50 + 28)] = 1;
    sub_10008ACC0();
    uint64_t v51 = sub_10008AC50();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v53 = v114;
    sub_100087E54((uint64_t)v49, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for EpisodeCaptionView);
    uint64_t v54 = (uint64_t *)&v53[*(int *)(v110 + 36)];
    *uint64_t v54 = KeyPath;
    v54[1] = v51;
    sub_100087EBC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for EpisodeCaptionView);
    uint64_t v55 = enum case for Text.Case.uppercase(_:);
    uint64_t v56 = sub_10008AD40();
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = (uint64_t)v116;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 104))(v116, v55, v56);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
    uint64_t v59 = swift_getKeyPath();
    uint64_t v60 = (uint64_t)v115;
    uint64_t v61 = (uint64_t *)&v115[*(int *)(v112 + 36)];
    uint64_t v62 = sub_10000903C(&qword_1000A1988);
    sub_1000155B0(v58, (uint64_t)v61 + *(int *)(v62 + 28), &qword_1000A1990);
    *uint64_t v61 = v59;
    sub_1000155B0((uint64_t)v53, v60, &qword_1000A1B80);
    sub_100015614(v58, &qword_1000A1990);
    sub_100015614((uint64_t)v53, &qword_1000A1B80);
    uint64_t v63 = swift_getKeyPath();
    uint64_t v64 = v126;
    sub_1000155B0(v60, (uint64_t)v126, &qword_1000A2240);
    uint64_t v65 = &v64[*(int *)(v113 + 36)];
    *(void *)uint64_t v65 = v63;
    v65[8] = 0;
    sub_100015614(v60, &qword_1000A2240);
    uint64_t v66 = (uint64_t)v64;
    uint64_t v67 = v127;
    sub_10001547C(v66, (uint64_t)v127, &qword_1000A2248);
    uint64_t v68 = *(void *)(v48 + 80);
    uint64_t v138 = *(void *)(v48 + 72);
    uint64_t v139 = v68;
    sub_100031338();
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_10008ADE0();
    uint64_t v71 = v70;
    char v73 = v72 & 1;
    sub_10008AC30();
    uint64_t v74 = v119;
    uint64_t v75 = v118;
    uint64_t v76 = v120;
    (*(void (**)(unsigned char *, void, uint64_t))(v119 + 104))(v118, enum case for Font.Leading.tight(_:), v120);
    sub_10008ACB0();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v75, v76);
    uint64_t v77 = sub_10008AD50();
    uint64_t v79 = v78;
    LOBYTE(v76) = v80;
    uint64_t v82 = v81;
    swift_release();
    sub_10001546C(v69, v71, v73);
    swift_bridgeObjectRelease();
    uint64_t v83 = v123;
    sub_100087E54(v128, (uint64_t)v123, v125);
    uint64_t v84 = sub_10008B130();
    uint64_t v85 = (uint64_t *)&v83[*(int *)(v121 + 20)];
    *uint64_t v85 = v84;
    v85[1] = v86;
    uint64_t v87 = v126;
    sub_1000155B0((uint64_t)v67, (uint64_t)v126, &qword_1000A2248);
    uint64_t v88 = v122;
    sub_100087E54((uint64_t)v83, (uint64_t)v122, type metadata accessor for PlayButtonLarge);
    uint64_t v89 = v124;
    sub_1000155B0((uint64_t)v87, (uint64_t)v124, &qword_1000A2248);
    uint64_t v90 = (int *)sub_10000903C(&qword_1000A37A8);
    *(void *)&v89[v90[12]] = 0x4010000000000000;
    uint64_t v91 = &v89[v90[16]];
    *(void *)uint64_t v91 = v77;
    *((void *)v91 + 1) = v79;
    v91[16] = v76 & 1;
    *((void *)v91 + 3) = v82;
    *((void *)v91 + 4) = 0x3FF0000000000000;
    *(void *)&v89[v90[20]] = 0x4010000000000000;
    sub_100087E54((uint64_t)v88, (uint64_t)&v89[v90[24]], type metadata accessor for PlayButtonLarge);
    sub_100031774(v77, v79, v76 & 1);
    swift_bridgeObjectRetain();
    sub_100031774(v77, v79, v76 & 1);
    swift_bridgeObjectRetain();
    sub_100087EBC((uint64_t)v88, type metadata accessor for PlayButtonLarge);
    sub_10001546C(v77, v79, v76 & 1);
    swift_bridgeObjectRelease();
    sub_100015614((uint64_t)v87, &qword_1000A2248);
    sub_1000155B0((uint64_t)v89, (uint64_t)v134, &qword_1000A3798);
    swift_storeEnumTagMultiPayload();
    sub_100087DFC();
    sub_100015428(&qword_1000A37B0, &qword_1000A3798);
    sub_10008AAE0();
    sub_100015614((uint64_t)v89, &qword_1000A3798);
    sub_100087EBC((uint64_t)v83, type metadata accessor for PlayButtonLarge);
    sub_10001546C(v77, v79, v76 & 1);
    swift_bridgeObjectRelease();
    sub_100015614((uint64_t)v127, &qword_1000A2248);
  }
  else
  {
    char v92 = v47 & 1;
    uint64_t v93 = v117;
    v45(&v117[*(int *)(v135 + 20)], v107, v42);
    swift_storeEnumTagMultiPayload();
    unsigned char *v93 = v92;
    sub_100087E54((uint64_t)v93, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for WidgetEmptyText);
    swift_storeEnumTagMultiPayload();
    sub_100087DFC();
    sub_100015428(&qword_1000A37B0, &qword_1000A3798);
    sub_10008AAE0();
    sub_100087EBC((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for WidgetEmptyText);
  }
  sub_10008B130();
  sub_100084B18(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v138, 12.0, 0.0, 1, 0.0, 1);
  uint64_t v94 = v138;
  uint64_t v95 = v139;
  char v96 = v140;
  uint64_t v121 = v141;
  LODWORD(v122) = v142;
  char v123 = v143;
  LODWORD(v135) = v144;
  Swift::String v134 = v145;
  LODWORD(v133) = v146;
  uint64_t v131 = v147;
  LODWORD(v128) = v148;
  long long v127 = v149;
  LODWORD(v126) = v150;
  __n128 v125 = v151;
  long long v124 = v152;
  uint64_t v97 = (uint64_t)v129;
  uint64_t v98 = v130;
  sub_100087E54((uint64_t)v129, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  char v99 = v137;
  uint64_t v100 = v132;
  sub_1000155B0((uint64_t)v137, (uint64_t)v132, &qword_1000A37A0);
  unint64_t v101 = v136;
  void *v136 = 0x4030000000000000;
  uint64_t v102 = (int *)sub_10000903C(&qword_1000A37B8);
  sub_100087E54((uint64_t)v98, (uint64_t)v101 + v102[12], (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  *(void *)((char *)v101 + v102[16]) = 0x4020000000000000;
  sub_1000155B0((uint64_t)v100, (uint64_t)v101 + v102[20], &qword_1000A37A0);
  uint64_t v103 = (char *)v101 + v102[24];
  *(void *)uint64_t v103 = v94;
  *((void *)v103 + 1) = v95;
  v103[16] = v96;
  *((void *)v103 + 3) = v121;
  v103[32] = (char)v122;
  *((void *)v103 + 5) = v123;
  v103[48] = v135;
  *((void *)v103 + 7) = v134;
  v103[64] = v133;
  *((void *)v103 + 9) = v131;
  v103[80] = v128;
  *((void *)v103 + 11) = v127;
  v103[96] = (char)v126;
  uint64_t v104 = v124;
  *((void *)v103 + 13) = v125;
  *((void *)v103 + 14) = v104;
  sub_100015614((uint64_t)v99, &qword_1000A37A0);
  sub_100087EBC(v97, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
  sub_100015614((uint64_t)v100, &qword_1000A37A0);
  return sub_100087EBC((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for WidgetArtworkView);
}

uint64_t sub_100086A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UpNextEntry.Episode(0);
  uint64_t result = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v5 = *(void *)(a2 + *(int *)(v3 + 84));
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_10000E31C(v5);
    sub_10000903C(&qword_1000A1FF8);
    sub_100015428(&qword_1000A2018, &qword_1000A1FF8);
    sub_100031338();
    sub_10000E368();
    sub_10008ADF0();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100086BD8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_10000903C(&qword_1000A3728);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000903C(&qword_1000A3730);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A3738);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v41 = *(int *)(type metadata accessor for EpisodeListWidgetXL() + 20);
  uint64_t v16 = *(uint64_t *)((char *)a1 + v41);
  *(void *)uint64_t v5 = sub_10008A9B0();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v17 = sub_10000903C(&qword_1000A3740);
  sub_10008700C(a1, (uint64_t)&v5[*(int *)(v17 + 44)]);
  char v18 = sub_10008ABC0();
  sub_10008A630();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_1000155B0((uint64_t)v5, (uint64_t)v8, &qword_1000A3728);
  uint64_t v27 = &v8[*(int *)(v6 + 36)];
  char *v27 = v18;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_100015614((uint64_t)v5, &qword_1000A3728);
  sub_100087324();
  sub_10008AE50();
  sub_100015614((uint64_t)v8, &qword_1000A3730);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v12, v9);
  uint64_t v28 = a1[3];
  uint64_t v29 = *(void *)(v28 + 16);
  if (!v29)
  {
    __break(1u);
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void *)(type metadata accessor for UpNextEntry.Episode(0) - 8);
    uint64_t v32 = sub_100031454(v28, v28 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)), 1, (2 * v29) | 1);
    goto LABEL_7;
  }
  sub_10008B6A0();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v30 = (void *)swift_dynamicCastClass();
  if (!v30)
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = _swiftEmptyArrayStorage;
  }
  uint64_t v31 = v30[2];
  swift_release();
  if (v31 != v29 - 1) {
    goto LABEL_9;
  }
  uint64_t v32 = (void *)swift_dynamicCastClass();
  if (!v32)
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = _swiftEmptyArrayStorage;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t v33 = *(uint64_t *)((char *)a1 + v41);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v34(v12, v15, v9);
  uint64_t v35 = v42;
  *(void *)uint64_t v42 = v16;
  uint64_t v36 = (int *)sub_10000903C(&qword_1000A3758);
  v34(&v35[v36[12]], v12, v9);
  *(void *)&v35[v36[16]] = 0x4034000000000000;
  uint64_t v37 = &v35[v36[20]];
  *(void *)uint64_t v37 = v32;
  *((void *)v37 + 1) = 4;
  v37[16] = 2;
  *((void *)v37 + 3) = 0x4028000000000000;
  *((void *)v37 + 4) = v33;
  *(void *)&v35[v36[24]] = v33;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v10 + 8);
  swift_bridgeObjectRetain();
  v38(v15, v9);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v38)(v12, v9);
}

uint64_t sub_10008700C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logo();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v34 = v11;
  uint64_t v35 = v12;
  sub_100031338();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_10008ADE0();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_10008ACE0();
  uint64_t v18 = sub_10008AD50();
  uint64_t v31 = v19;
  uint64_t v32 = v18;
  char v21 = v20;
  uint64_t v33 = v22;
  swift_release();
  char v23 = v21 & 1;
  sub_10001546C(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)uint64_t v7 = swift_getKeyPath();
  v7[8] = 0;
  uint64_t v25 = (uint64_t *)&v7[*(int *)(v5 + 28)];
  *uint64_t v25 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (uint64_t *)&v7[*(int *)(v5 + 32)];
  uint64_t *v26 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DD8);
  swift_storeEnumTagMultiPayload();
  sub_100087D84((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Logo);
  sub_100087E54((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Logo);
  uint64_t v28 = v31;
  uint64_t v27 = v32;
  *(void *)a2 = v32;
  *(void *)(a2 + 8) = v28;
  *(unsigned char *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v33;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  *(unsigned char *)(a2 + 64) = 1;
  uint64_t v29 = sub_10000903C(&qword_1000A3760);
  sub_100087E54((uint64_t)v7, a2 + *(int *)(v29 + 64), (uint64_t (*)(void))type metadata accessor for Logo);
  sub_100031774(v27, v28, v23);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100087EBC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Logo);
  sub_100087EBC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Logo);
  sub_10001546C(v27, v28, v23);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1000872CC(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0x3FD999999999999ALL;
  uint64_t v3 = sub_10000903C(&qword_1000A36F0);
  sub_100084CC8(v1, a1 + *(int *)(v3 + 44));
}

unint64_t sub_100087324()
{
  unint64_t result = qword_1000A3748;
  if (!qword_1000A3748)
  {
    sub_10000E49C(&qword_1000A3730);
    sub_100015428(&qword_1000A3750, &qword_1000A3728);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3748);
  }
  return result;
}

uint64_t sub_1000873DC()
{
  uint64_t v1 = (int *)type metadata accessor for UpNextEntry.Episode(0);
  uint64_t v58 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v55 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v2 = *(void *)(type metadata accessor for EpisodeListWidgetXL() - 8);
  uint64_t v61 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v56 = (v58 + 16) & ~v58;
  uint64_t v57 = *(void *)(v2 + 64);
  uint64_t v59 = v0;
  uint64_t v3 = v0 + v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v56 + v1[10];
  uint64_t v5 = sub_10008A170();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v1[12];
  uint64_t v9 = sub_10008A340();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  uint64_t v60 = v7;
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v11 = *(unsigned __int8 *)(v8 + 32);
    if (v11 != 255) {
      sub_1000096D4(*(void *)(v8 + 16), *(void *)(v8 + 24), v11);
    }
    int v12 = *(unsigned __int8 *)(v8 + 64);
    if (v12 != 255) {
      sub_1000096EC(*(id *)(v8 + 56), v12);
    }
    int v13 = *(unsigned __int8 *)(v8 + 80);
    if (v13 != 255) {
      sub_1000096EC(*(id *)(v8 + 72), v13);
    }
    int v14 = *(unsigned __int8 *)(v8 + 96);
    if (v14 != 255) {
      sub_1000096EC(*(id *)(v8 + 88), v14);
    }
    int v15 = *(unsigned __int8 *)(v8 + 112);
    if (v15 != 255) {
      sub_1000096EC(*(id *)(v8 + 104), v15);
    }
    int v16 = *(unsigned __int8 *)(v8 + 128);
    if (v16 != 255) {
      sub_1000096EC(*(id *)(v8 + 120), v16);
    }
    uint64_t v17 = v8 + *(int *)(v9 + 44);
    uint64_t v18 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v60;
  }
  uint64_t v19 = v3 + v1[13];
  if (!v10(v19, 1, v9))
  {
    swift_bridgeObjectRelease();
    int v20 = *(unsigned __int8 *)(v19 + 32);
    if (v20 != 255) {
      sub_1000096D4(*(void *)(v19 + 16), *(void *)(v19 + 24), v20);
    }
    int v21 = *(unsigned __int8 *)(v19 + 64);
    if (v21 != 255) {
      sub_1000096EC(*(id *)(v19 + 56), v21);
    }
    int v22 = *(unsigned __int8 *)(v19 + 80);
    if (v22 != 255) {
      sub_1000096EC(*(id *)(v19 + 72), v22);
    }
    int v23 = *(unsigned __int8 *)(v19 + 96);
    if (v23 != 255) {
      sub_1000096EC(*(id *)(v19 + 88), v23);
    }
    int v24 = *(unsigned __int8 *)(v19 + 112);
    if (v24 != 255) {
      sub_1000096EC(*(id *)(v19 + 104), v24);
    }
    uint64_t v25 = v7;
    int v26 = *(unsigned __int8 *)(v19 + 128);
    if (v26 != 255) {
      sub_1000096EC(*(id *)(v19 + 120), v26);
    }
    uint64_t v27 = v19 + *(int *)(v9 + 44);
    uint64_t v28 = sub_10008A300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v25;
  }

  uint64_t v29 = v3 + v1[15];
  uint64_t v30 = sub_10008A050();
  uint64_t v31 = *(void *)(v30 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30)) {
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  }
  uint64_t v32 = v3 + v1[19];
  if (!v7(v32, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v32, v5);
  }
  uint64_t v33 = v3 + v1[20];
  if (!v7(v33, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v33, v5);
  }
  if (*(void *)(v3 + v1[21]))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v34 = v3 + v1[22];
  uint64_t v35 = sub_10000903C(&qword_1000A1050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
  {
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v36(v34, v5);
    v36(v34 + *(int *)(v35 + 36), v5);
  }
  uint64_t v37 = (v56 + v55 + v61) & ~v61;
  uint64_t v38 = type metadata accessor for WidgetPredictedPlayState();
  uint64_t v39 = v34 + *(int *)(v38 + 20);
  uint64_t v40 = sub_10008A740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  uint64_t v41 = v34 + *(int *)(v38 + 24);
  uint64_t v42 = sub_10008A4B0();
  uint64_t v43 = *(void *)(v42 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = v59 + v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t Entry = (int *)type metadata accessor for UpNextEntry(0);
  uint64_t v46 = v59 + v37 + Entry[7];
  uint64_t v47 = sub_10008A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);

  uint64_t v48 = v59 + v37 + Entry[9];
  unsigned int v49 = v60(v48, 1, v5);
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v49) {
    v50(v48, v5);
  }
  v50(v44 + Entry[10], v5);
  uint64_t v51 = v44 + Entry[11];
  uint64_t v52 = sub_10008B290();
  uint64_t v53 = *(void *)(v52 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52)) {
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
  }

  return _swift_deallocObject(v59, v37 + v57, v58 | v61 | 7);
}

id sub_100087C00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for UpNextEntry.Episode(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for EpisodeListWidgetXL() - 8);
  uint64_t v7 = (uint64_t (*)(uint64_t))(v1
                                       + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));

  return sub_1000856D8((void *)(v1 + v4), v7, a1);
}

uint64_t sub_100087CD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10008A8C0();
  *a1 = result;
  return result;
}

uint64_t sub_100087D00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10008A8C0();
  *a1 = result;
  return result;
}

uint64_t sub_100087D2C()
{
  return sub_10008A8D0();
}

uint64_t sub_100087D54()
{
  return sub_10008A8D0();
}

uint64_t sub_100087D7C(uint64_t a1)
{
  return sub_100086A8C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100087D84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100087DFC()
{
  unint64_t result = qword_1000A1B50;
  if (!qword_1000A1B50)
  {
    type metadata accessor for WidgetEmptyText();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A1B50);
  }
  return result;
}

uint64_t sub_100087E54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100087EBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100087F20()
{
  unint64_t result = qword_1000A37C0;
  if (!qword_1000A37C0)
  {
    sub_10000E49C(&qword_1000A36F0);
    sub_100015428(&qword_1000A1A10, &qword_1000A1A18);
    sub_100015428(&qword_1000A37C8, &qword_1000A37D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37C0);
  }
  return result;
}

uint64_t sub_100087FE4()
{
  return sub_10008A850();
}

uint64_t sub_100088008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100088A98(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100088034@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_10000903C(&qword_1000A37E0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000903C(&qword_1000A37E8);
  uint64_t v5 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000903C(&qword_1000A37F0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  __chkstk_darwin(v8);
  int v26 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EpisodeListWidgetMain();
  sub_100088C74(&qword_1000A37F8, (void (*)(uint64_t))type metadata accessor for EpisodeListWidgetMain);
  sub_100088758();
  sub_10008B250();
  sub_10008AA20();
  unint64_t v11 = sub_1000887AC();
  sub_10008AAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10008AA20();
  uint64_t v31 = v1;
  unint64_t v32 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  int v13 = v26;
  uint64_t v14 = v27;
  sub_10008AAA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  sub_10000903C(&qword_1000A3810);
  uint64_t v16 = sub_10008B220();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10008F170;
  unint64_t v21 = v20 + v19;
  int v22 = *(void (**)(unint64_t, void, uint64_t))(v17 + 104);
  v22(v20 + v19, enum case for WidgetFamily.systemSmall(_:), v16);
  v22(v21 + v18, enum case for WidgetFamily.systemMedium(_:), v16);
  v22(v21 + 2 * v18, enum case for WidgetFamily.systemLarge(_:), v16);
  v22(v21 + 3 * v18, enum case for WidgetFamily.systemExtraLarge(_:), v16);
  uint64_t v31 = v15;
  unint64_t v32 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v28;
  sub_10008AAB0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v23);
}

uint64_t sub_100088534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100088808(a1, a2);
  uint64_t v3 = (int *)type metadata accessor for EpisodeListWidgetMain();
  unint64_t v4 = (uint64_t *)(a2 + v3[5]);
  uint64_t *v4 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t *)(a2 + v3[6]);
  uint64_t *v5 = swift_getKeyPath();
  sub_10000903C(&qword_1000A2488);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (uint64_t *)(a2 + v3[7]);
  uint64_t *v6 = swift_getKeyPath();
  sub_10000903C(&qword_1000A2490);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a2 + v3[8];
  *(void *)uint64_t v7 = swift_getKeyPath();
  *(unsigned char *)(v7 + 8) = 0;
  uint64_t v8 = (uint64_t *)(a2 + v3[9]);
  uint64_t *v8 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t *)(a2 + v3[10]);
  *uint64_t v9 = swift_getKeyPath();
  sub_10000903C(&qword_1000A14E8);

  return swift_storeEnumTagMultiPayload();
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_1000886D8()
{
  unint64_t result = qword_1000A37D8;
  if (!qword_1000A37D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsWidget()
{
  return &type metadata for PodcastsWidget;
}

uint64_t sub_10008873C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100088758()
{
  unint64_t result = qword_1000A3800;
  if (!qword_1000A3800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3800);
  }
  return result;
}

unint64_t sub_1000887AC()
{
  unint64_t result = qword_1000A3808;
  if (!qword_1000A3808)
  {
    sub_10000E49C(&qword_1000A37E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3808);
  }
  return result;
}

uint64_t sub_100088808(uint64_t a1, uint64_t a2)
{
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Entry - 8) + 16))(a2, a1, Entry);
  return a2;
}

uint64_t sub_10008886C()
{
  sub_10008A920();
  sub_100088C74(&qword_1000A3818, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  sub_10008A990();
  return v1;
}

uint64_t sub_1000888E8@<X0>(unsigned char *a1@<X8>)
{
  sub_10008A920();
  sub_100088C74(&qword_1000A3818, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  uint64_t result = sub_10008A990();
  *a1 = v3;
  return result;
}

uint64_t sub_100088978()
{
  return sub_10008A930();
}

uint64_t sub_10008899C()
{
  return sub_10008A930();
}

uint64_t sub_1000889C0()
{
  return sub_10008A940();
}

uint64_t sub_1000889E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100088A98(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100088A10()
{
  return sub_10008A870();
}

uint64_t sub_100088A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100088A98(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_100088A74()
{
  return sub_10008A860();
}

uint64_t sub_100088A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100088B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100088A98(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100088BAC()
{
  return sub_10008A940();
}

uint64_t sub_100088BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100088A98(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100088C10()
{
  return sub_10008A850();
}

uint64_t sub_100088C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100088A98(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100088C74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100088CBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100088D88()
{
  sub_10006B27C();
  sub_10008A990();
  return v1;
}

uint64_t sub_100088DC4()
{
  uint64_t v0 = sub_10008AFA0();
  __n128 v1 = __chkstk_darwin(v0);
  (*(void (**)(char *, void, __n128))(v3 + 104))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Color.RGBColorSpace.sRGB(_:), v1);
  uint64_t result = sub_10008AFE0();
  qword_1000A5790 = result;
  return result;
}

void sub_100088EAC(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100088EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1000893AC();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_100088F1C(int a1, char *a2, int a3, uint64_t a4)
{
  int v21 = a1;
  int v22 = a3;
  uint64_t v6 = sub_10008A650();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10008B1F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008B1E0();
  char v14 = sub_10008B1C0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v11 + 8);
  v15(v13, v10);
  if (v14)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a4, v6);
    v15(a2, v10);
    return 3;
  }
  else if (v21)
  {
    uint64_t v17 = a4;
    if (v22)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a4, v6);
      v15(a2, v10);
      return 0;
    }
    else
    {
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
      char v18 = sub_10008A640();
      unint64_t v19 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v19(v17, v6);
      v15(a2, v10);
      v19((uint64_t)v9, v6);
      if (v18) {
        return 2;
      }
      else {
        return 1;
      }
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a4, v6);
    v15(a2, v10);
    return 4;
  }
}

uint64_t getEnumTagSinglePayload for PodcastsWidgetColorScheme(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PodcastsWidgetColorScheme(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008931CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsWidgetColorScheme()
{
  return &type metadata for PodcastsWidgetColorScheme;
}

unint64_t sub_100089358()
{
  unint64_t result = qword_1000A3820;
  if (!qword_1000A3820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3820);
  }
  return result;
}

unint64_t sub_1000893AC()
{
  unint64_t result = qword_1000A3828;
  if (!qword_1000A3828)
  {
    sub_10000E49C(&qword_1000A3830);
    sub_100089358();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3828);
  }
  return result;
}

uint64_t sub_100089420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100089434);
}

uint64_t sub_100089434(uint64_t a1, uint64_t a2)
{
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Entry - 8) + 48);

  return v5(a1, a2, Entry);
}

uint64_t sub_1000894A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000894B4);
}

uint64_t sub_1000894B4(uint64_t a1, uint64_t a2)
{
  uint64_t Entry = type metadata accessor for UpNextEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Entry - 8) + 56);

  return v5(a1, a2, a2, Entry);
}

uint64_t type metadata accessor for EpisodeListWidgetMedium()
{
  uint64_t result = qword_1000A3890;
  if (!qword_1000A3890) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100089570()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008958C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_10000903C(&qword_1000A38E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000903C(&qword_1000A38E8);
  __chkstk_darwin(v6);
  int v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000903C(&qword_1000A38F0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v36 = (char *)&v36 - v14;
  *(void *)uint64_t v5 = sub_10008A9B0();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v15 = sub_10000903C(&qword_1000A38F8);
  sub_1000898B0((uint64_t *)a1, (uint64_t)&v5[*(int *)(v15 + 44)]);
  char v16 = sub_10008ABC0();
  uint64_t v17 = *(int *)(type metadata accessor for EpisodeListWidgetMedium() + 20);
  sub_10008A630();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_1000155B0((uint64_t)v5, (uint64_t)v8, &qword_1000A38E0);
  int v26 = &v8[*(int *)(v6 + 36)];
  char *v26 = v16;
  *((void *)v26 + 1) = v19;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v23;
  *((void *)v26 + 4) = v25;
  v26[40] = 0;
  sub_100015614((uint64_t)v5, &qword_1000A38E0);
  sub_100089C8C();
  sub_10008AE50();
  sub_100015614((uint64_t)v8, &qword_1000A38E8);
  uint64_t v27 = v36;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v36, v12, v9);
  uint64_t v28 = *(void *)(a1 + 24);
  char v29 = *(unsigned char *)(a1 + 16);
  uint64_t v30 = *(void *)(a1 + v17);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v31(v12, v27, v9);
  unint64_t v32 = v37;
  v31(v37, v12, v9);
  uint64_t v33 = &v32[*(int *)(sub_10000903C(&qword_1000A3910) + 48)];
  *(void *)uint64_t v33 = v28;
  *((void *)v33 + 1) = 2;
  v33[16] = v29;
  *((void *)v33 + 3) = 0x4020000000000000;
  *((void *)v33 + 4) = v30;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
  swift_bridgeObjectRetain_n();
  v34(v27, v9);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v34)(v12, v9);
}

uint64_t sub_1000898B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logo();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v42 = v11;
  uint64_t v43 = v12;
  sub_100031338();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_10008ADE0();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_10008ACE0();
  uint64_t v18 = sub_10008AD50();
  uint64_t v39 = v19;
  uint64_t v40 = v18;
  char v21 = v20;
  uint64_t v41 = v22;
  swift_release();
  char v23 = v21 & 1;
  sub_10001546C(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v15) = sub_10008ABE0();
  sub_10008A630();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  *(void *)uint64_t v7 = swift_getKeyPath();
  v7[8] = 0;
  uint64_t v33 = (uint64_t *)&v7[*(int *)(v5 + 28)];
  *uint64_t v33 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = (uint64_t *)&v7[*(int *)(v5 + 32)];
  *uint64_t v34 = swift_getKeyPath();
  sub_10000903C(&qword_1000A1DD8);
  swift_storeEnumTagMultiPayload();
  sub_100089D44((uint64_t)v7, (uint64_t)v10);
  sub_1000842C0((uint64_t)v10, (uint64_t)v7);
  uint64_t v36 = v39;
  uint64_t v35 = v40;
  *(void *)a2 = v40;
  *(void *)(a2 + 8) = v36;
  *(unsigned char *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v41;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = v15;
  *(void *)(a2 + 64) = v26;
  *(void *)(a2 + 72) = v28;
  *(void *)(a2 + 80) = v30;
  *(void *)(a2 + 88) = v32;
  *(unsigned char *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(unsigned char *)(a2 + 112) = 1;
  uint64_t v37 = sub_10000903C(&qword_1000A3918);
  sub_1000842C0((uint64_t)v7, a2 + *(int *)(v37 + 64));
  sub_100031774(v35, v36, v23);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100084324((uint64_t)v10);
  sub_100084324((uint64_t)v7);
  sub_10001546C(v35, v36, v23);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100089B64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000903C(&qword_1000A38C8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_10008AA70();
  *((void *)v6 + 1) = 0x4024000000000000;
  v6[16] = 0;
  uint64_t v7 = sub_10000903C(&qword_1000A38D0);
  sub_10008958C(v2, &v6[*(int *)(v7 + 44)]);
  char v8 = sub_10008AC20();
  sub_10008A630();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_1000155B0((uint64_t)v6, a1, &qword_1000A38C8);
  uint64_t v17 = a1 + *(int *)(sub_10000903C(&qword_1000A38D8) + 36);
  *(unsigned char *)uint64_t v17 = v8;
  *(void *)(v17 + 8) = v10;
  *(void *)(v17 + 16) = v12;
  *(void *)(v17 + 24) = v14;
  *(void *)(v17 + 32) = v16;
  *(unsigned char *)(v17 + 40) = 0;
  return sub_100015614((uint64_t)v6, &qword_1000A38C8);
}

unint64_t sub_100089C8C()
{
  unint64_t result = qword_1000A3900;
  if (!qword_1000A3900)
  {
    sub_10000E49C(&qword_1000A38E8);
    sub_100015428(&qword_1000A3908, &qword_1000A38E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3900);
  }
  return result;
}

uint64_t sub_100089D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100089DAC()
{
  unint64_t result = qword_1000A3920;
  if (!qword_1000A3920)
  {
    sub_10000E49C(&qword_1000A38D8);
    sub_100015428(&qword_1000A3928, &qword_1000A38C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3920);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_100089E70()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t sub_100089E80()
{
  return static AppIntent.description.getter();
}

uint64_t sub_100089E90()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t sub_100089EA0()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t sub_100089EC0()
{
  return type metadata accessor for IntentDialog();
}

uint64_t sub_100089ED0()
{
  return static IntentResult.result<>()();
}

uint64_t sub_100089EE0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100089EF0()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_100089F00()
{
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_100089F10()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t sub_100089F20()
{
  return static FormatStyle<>.time(pattern:)();
}

uint64_t sub_100089F30()
{
  return static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
}

uint64_t sub_100089F40()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_100089F50()
{
  return JSONDecoder.init()();
}

uint64_t sub_100089F60()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_100089F70()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_100089F80()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t sub_100089F90()
{
  return URLComponents.queryItems.setter();
}

uint64_t sub_100089FA0()
{
  return URLComponents.url.getter();
}

uint64_t sub_100089FB0()
{
  return URLComponents.host.setter();
}

uint64_t sub_100089FC0()
{
  return URLComponents.scheme.setter();
}

uint64_t sub_100089FD0()
{
  return URLComponents.init()();
}

uint64_t sub_100089FE0()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_100089FF0()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_10008A000()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_10008A010(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_10008A020()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_10008A030()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10008A040()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_10008A050()
{
  return type metadata accessor for URL();
}

uint64_t sub_10008A060()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008A070()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t sub_10008A080()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_10008A090()
{
  return Date.ISO8601Format(_:)();
}

uint64_t sub_10008A0A0()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_10008A0B0()
{
  return type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator();
}

uint64_t sub_10008A0C0()
{
  return type metadata accessor for Date.ISO8601FormatStyle.DateSeparator();
}

uint64_t sub_10008A0D0()
{
  return type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator();
}

uint64_t sub_10008A0E0()
{
  return Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)();
}

uint64_t sub_10008A0F0()
{
  return type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator();
}

uint64_t sub_10008A100()
{
  return type metadata accessor for Date.ISO8601FormatStyle();
}

uint64_t sub_10008A110()
{
  return Date.addingTimeInterval(_:)();
}

uint64_t sub_10008A120()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_10008A130()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_10008A140()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t sub_10008A150()
{
  return static Date.now.getter();
}

uint64_t sub_10008A160()
{
  return Date.init()();
}

uint64_t sub_10008A170()
{
  return type metadata accessor for Date();
}

uint64_t sub_10008A180()
{
  return UUID.uuidString.getter();
}

uint64_t sub_10008A190()
{
  return UUID.init()();
}

uint64_t sub_10008A1A0()
{
  return type metadata accessor for UUID();
}

uint64_t sub_10008A1B0()
{
  return static Locale.current.getter();
}

uint64_t sub_10008A1C0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_10008A1D0()
{
  return type metadata accessor for Calendar.MatchingPolicy();
}

uint64_t sub_10008A1E0()
{
  return Calendar.enumerateDates(startingAfter:matching:matchingPolicy:repeatedTimePolicy:direction:using:)();
}

uint64_t sub_10008A1F0()
{
  return type metadata accessor for Calendar.SearchDirection();
}

uint64_t sub_10008A200()
{
  return type metadata accessor for Calendar.RepeatedTimePolicy();
}

uint64_t sub_10008A210()
{
  return Calendar.date(bySettingHour:minute:second:of:matchingPolicy:repeatedTimePolicy:direction:)();
}

uint64_t sub_10008A220()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t sub_10008A230()
{
  return static Calendar.current.getter();
}

uint64_t sub_10008A240()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_10008A250()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_10008A260()
{
  return TimeZone.init(secondsFromGMT:)();
}

uint64_t sub_10008A270()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_10008A280()
{
  return dispatch thunk of ImageProvider.placeholder(for:)();
}

uint64_t sub_10008A290()
{
  return dispatch thunk of ImageProvider.load(artwork:)();
}

uint64_t sub_10008A2A0()
{
  return ImageProvider.placeholder(for:)();
}

uint64_t sub_10008A2B0()
{
  return WidgetImageProvider.load(artwork:)();
}

uint64_t sub_10008A2C0()
{
  return WidgetImageProvider.init()();
}

uint64_t sub_10008A2D0()
{
  return type metadata accessor for WidgetImageProvider();
}

uint64_t sub_10008A2E0()
{
  return isFeatureEnabled(_:)();
}

uint64_t sub_10008A2F0()
{
  return type metadata accessor for Podcasts();
}

uint64_t sub_10008A300()
{
  return type metadata accessor for ArtworkCrop();
}

uint64_t sub_10008A310()
{
  return EpisodeType.rawValue.getter();
}

uint64_t sub_10008A320()
{
  return ArtworkModel.preferredRequest.getter();
}

uint64_t sub_10008A330()
{
  return static ArtworkModel.== infix(_:_:)();
}

uint64_t sub_10008A340()
{
  return type metadata accessor for ArtworkModel();
}

uint64_t sub_10008A350()
{
  return ArtworkRequest.replacingEffects(_:)();
}

uint64_t sub_10008A360()
{
  return ArtworkRequest.resized(to:displayScale:)();
}

uint64_t sub_10008A370()
{
  return type metadata accessor for ArtworkRequest();
}

uint64_t sub_10008A380()
{
  return type metadata accessor for EyebrowBuilder.ListContext();
}

uint64_t sub_10008A390()
{
  return type metadata accessor for EyebrowBuilder.Style();
}

uint64_t sub_10008A3A0()
{
  return EyebrowBuilder.caption.getter();
}

uint64_t sub_10008A3B0()
{
  return EyebrowBuilder.init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)();
}

uint64_t sub_10008A3C0()
{
  return type metadata accessor for EyebrowBuilder();
}

uint64_t sub_10008A3D0()
{
  return MetricsWidgetContext.encodeToString()().value._countAndFlagsBits;
}

uint64_t sub_10008A3E0()
{
  return MetricsWidgetContext.init(widgetID:name:size:subjectID:)();
}

uint64_t sub_10008A3F0()
{
  return type metadata accessor for MetricsWidgetContext();
}

uint64_t sub_10008A400()
{
  return type metadata accessor for EpisodeListenNowReason();
}

uint64_t sub_10008A410()
{
  return EyebrowBuilderSourceCopy.init(source:)();
}

uint64_t sub_10008A420()
{
  return type metadata accessor for EyebrowBuilderSourceCopy();
}

uint64_t sub_10008A430()
{
  return PlayButtonTimeFormatHelper.widgetCountDownHelper.getter();
}

uint64_t sub_10008A440()
{
  return PlayButtonTimeFormatHelper.FormatStyle.formatStyleUnits.getter();
}

uint64_t sub_10008A450()
{
  return PlayButtonTimeFormatHelper.FormatStyle.calendarUnits.getter();
}

uint64_t sub_10008A460()
{
  return static PlayButtonTimeFormatHelper.FormatStyle.== infix(_:_:)();
}

uint64_t sub_10008A470()
{
  return PlayButtonTimeFormatHelper.formatStyle.getter();
}

uint64_t sub_10008A480()
{
  return PlayButtonTimeFormatHelper.showsProgressBar.getter();
}

uint64_t sub_10008A490()
{
  return PlayButtonTimeFormatHelper.init(timeLeft:duration:)();
}

uint64_t sub_10008A4A0()
{
  return PlayButtonTimeFormatHelper.timeLeft.getter();
}

uint64_t sub_10008A4B0()
{
  return type metadata accessor for PlayButtonTimeFormatHelper();
}

uint64_t sub_10008A4C0()
{
  return AbbreviatedTimeIntervalFormatter.Configuration.init(relativeTo:currentYearReferenceDate:allowedSpan:)();
}

uint64_t sub_10008A4D0()
{
  return type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
}

uint64_t sub_10008A4E0()
{
  return type metadata accessor for TimeSpan();
}

uint64_t sub_10008A4F0()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t sub_10008A500()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_10008A510()
{
  return static Logger.widget.getter();
}

uint64_t sub_10008A520()
{
  return static Logger.artwork.getter();
}

uint64_t sub_10008A530()
{
  return Logger.logObject.getter();
}

uint64_t sub_10008A540()
{
  return type metadata accessor for Logger();
}

uint64_t sub_10008A550()
{
  return Publishers.Sequence.init(sequence:)();
}

uint64_t sub_10008A560()
{
  return static Subscribers.Demand.unlimited.getter();
}

uint64_t sub_10008A570()
{
  return AnyCancellable.store(in:)();
}

uint64_t sub_10008A580()
{
  return Just.init(_:)();
}

uint64_t sub_10008A590()
{
  return Publisher.makeOptional.getter();
}

uint64_t sub_10008A5A0()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_10008A5B0()
{
  return Publisher.combineLatest<A, B>(_:_:)();
}

uint64_t sub_10008A5C0()
{
  return Publisher.map<A>(_:)();
}

uint64_t sub_10008A5D0()
{
  return Publisher.catch<A>(_:)();
}

uint64_t sub_10008A5E0()
{
  return Publisher.collect()();
}

uint64_t sub_10008A5F0()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_10008A600()
{
  return Publisher<>.flatMap<A>(maxPublishers:_:)();
}

uint64_t sub_10008A610()
{
  return Animatable<>.animatableData.modify();
}

uint64_t sub_10008A620()
{
  return static Animatable<>._makeAnimatable(value:inputs:)();
}

uint64_t sub_10008A630()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_10008A640()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t sub_10008A650()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_10008A660()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_10008A670()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_10008A680()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_10008A690()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_10008A6A0()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_10008A6B0()
{
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t sub_10008A6C0()
{
  return LayoutSubview.place(at:anchor:proposal:)();
}

uint64_t sub_10008A6D0()
{
  return type metadata accessor for LayoutSubview();
}

uint64_t sub_10008A6F0()
{
  return type metadata accessor for LayoutSubviews();
}

uint64_t sub_10008A700()
{
  return LayoutSubviews.subscript.getter();
}

uint64_t sub_10008A710()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t sub_10008A720()
{
  return PlaybackButton.init<A>(interval:state:intent:systemImage:alignment:)();
}

uint64_t sub_10008A730()
{
  return static PlaybackButton.State.== infix(_:_:)();
}

uint64_t sub_10008A740()
{
  return type metadata accessor for PlaybackButton.State();
}

uint64_t sub_10008A750()
{
  return type metadata accessor for PlaybackButton();
}

uint64_t sub_10008A760()
{
  return DynamicTypeSize.isAccessibilitySize.getter();
}

uint64_t sub_10008A770()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t sub_10008A780()
{
  return ModifiedContent<>.accessibility(removeTraits:)();
}

uint64_t sub_10008A790()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t sub_10008A7A0()
{
  return PlainButtonStyle.init()();
}

uint64_t sub_10008A7B0()
{
  return type metadata accessor for PlainButtonStyle();
}

uint64_t sub_10008A7C0()
{
  return static RedactionReasons.placeholder.getter();
}

uint64_t sub_10008A7D0()
{
  return type metadata accessor for RedactionReasons();
}

uint64_t sub_10008A7E0()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_10008A7F0()
{
  return type metadata accessor for _BlendModeEffect();
}

uint64_t sub_10008A800()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_10008A810()
{
  return type metadata accessor for _OverlayModifier();
}

uint64_t sub_10008A820()
{
  return static ContentTransition.interpolate.getter();
}

uint64_t sub_10008A830()
{
  return static ContentTransition.identity.getter();
}

uint64_t sub_10008A840()
{
  return type metadata accessor for ContentTransition();
}

uint64_t sub_10008A850()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10008A860()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_10008A870()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_10008A880()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_10008A890()
{
  return EnvironmentValues.contentTransition.setter();
}

uint64_t sub_10008A8A0()
{
  return EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_10008A8B0()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_10008A8C0()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_10008A8D0()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_10008A8E0()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_10008A8F0()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_10008A900()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_10008A910()
{
  return EnvironmentValues.textCase.setter();
}

uint64_t sub_10008A920()
{
  return type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey();
}

uint64_t sub_10008A930()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_10008A940()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_10008A950()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_10008A960()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_10008A970()
{
  return EnvironmentValues.init()();
}

uint64_t sub_10008A980()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_10008A990()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_10008A9A0()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10008A9B0()
{
  return static VerticalAlignment.top.getter();
}

uint64_t sub_10008A9C0()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_10008A9D0()
{
  return LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
}

void sub_10008A9E0(Swift::String a1)
{
}

void sub_10008A9F0(Swift::String a1)
{
}

uint64_t sub_10008AA00()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10008AA10()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t sub_10008AA20()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_10008AA30()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t sub_10008AA40()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_10008AA50()
{
  return static AccessibilityTraits.isImage.getter();
}

uint64_t sub_10008AA60()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t sub_10008AA70()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_10008AA80()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_10008AA90()
{
  return static PlaybackButtonStyle<>.pill(dateStyle:)();
}

uint64_t sub_10008AAA0()
{
  return WidgetConfiguration.description(_:)();
}

uint64_t sub_10008AAB0()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_10008AAC0()
{
  return WidgetConfiguration.configurationDisplayName(_:)();
}

uint64_t sub_10008AAD0()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t sub_10008AAE0()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10008AAF0()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t sub_10008AB00()
{
  return type metadata accessor for _ViewModifier_Content();
}

uint64_t sub_10008AB10()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_10008AB20()
{
  return type metadata accessor for PillPlaybackButtonStyle();
}

uint64_t sub_10008AB30()
{
  return ToggleStyleConfiguration.isOn.getter();
}

uint64_t sub_10008AB40()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t sub_10008AB50()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_10008AB60()
{
  return static ContainerBackgroundPlacement.widget.getter();
}

uint64_t sub_10008AB70()
{
  return type metadata accessor for ContainerBackgroundPlacement();
}

uint64_t sub_10008AB80()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t sub_10008AB90()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_10008ABA0()
{
  return static Axis.Set.horizontal.getter();
}

uint64_t sub_10008ABB0()
{
  return Axis.rawValue.getter();
}

uint64_t sub_10008ABC0()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_10008ABD0()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_10008ABE0()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_10008ABF0()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_10008AC00()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_10008AC10()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_10008AC20()
{
  return static Edge.Set.vertical.getter();
}

uint64_t sub_10008AC30()
{
  return static Font.subheadline.getter();
}

uint64_t sub_10008AC40()
{
  return static Font.body.getter();
}

uint64_t sub_10008AC50()
{
  return Font.bold()();
}

uint64_t sub_10008AC60()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_10008AC70()
{
  return static Font.system(size:weight:design:)();
}

uint64_t sub_10008AC80()
{
  return static Font.title3.getter();
}

uint64_t sub_10008AC90()
{
  return type metadata accessor for Font.Leading();
}

uint64_t sub_10008ACA0()
{
  return static Font.callout.getter();
}

uint64_t sub_10008ACB0()
{
  return Font.leading(_:)();
}

uint64_t sub_10008ACC0()
{
  return static Font.caption2.getter();
}

uint64_t sub_10008ACD0()
{
  return static Font.footnote.getter();
}

uint64_t sub_10008ACE0()
{
  return static Font.headline.getter();
}

uint64_t sub_10008ACF0()
{
  return Link.init(destination:label:)();
}

uint64_t sub_10008AD00()
{
  return type metadata accessor for Link();
}

uint64_t sub_10008AD10()
{
  return Text.collapsible()();
}

uint64_t sub_10008AD20()
{
  return Text.contentTransition(_:)();
}

uint64_t sub_10008AD30()
{
  return Text.accessibilityLabel(_:)();
}

uint64_t sub_10008AD40()
{
  return type metadata accessor for Text.Case();
}

uint64_t sub_10008AD50()
{
  return Text.font(_:)();
}

uint64_t sub_10008AD60()
{
  return type metadata accessor for Text.DateStyle.UnitsConfiguration.Style();
}

uint64_t sub_10008AD70()
{
  return Text.DateStyle.UnitsConfiguration.init(units:style:)();
}

uint64_t sub_10008AD80()
{
  return type metadata accessor for Text.DateStyle.UnitsConfiguration();
}

uint64_t sub_10008AD90()
{
  return static Text.DateStyle.timer.getter();
}

uint64_t sub_10008ADA0()
{
  return static Text.DateStyle.relative(unitConfiguration:)();
}

uint64_t sub_10008ADB0()
{
  return type metadata accessor for Text.DateStyle();
}

uint64_t sub_10008ADC0()
{
  return Text.init(_:style:)();
}

uint64_t sub_10008ADD0()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_10008ADE0()
{
  return Text.init<A>(_:)();
}

uint64_t sub_10008ADF0()
{
  return View.accessibilityAction<A, B>(named:intent:)();
}

uint64_t sub_10008AE00()
{
  return View.widgetAccentable(_:)();
}

uint64_t sub_10008AE10()
{
  return View.widgetURL(_:)();
}

uint64_t sub_10008AE20()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_10008AE30()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_10008AE40()
{
  return View.background<A>(_:ignoresSafeAreaEdges:)();
}

uint64_t sub_10008AE50()
{
  return View.unredacted()();
}

uint64_t sub_10008AE60()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t sub_10008AE70()
{
  return View.toggleStyle<A>(_:)();
}

uint64_t sub_10008AE80()
{
  return View.accessibility(label:)();
}

uint64_t sub_10008AE90()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10008AEA0()
{
  return View.dynamicTypeSize(_:)();
}

uint64_t sub_10008AEB0()
{
  return View.dynamicTypeSize<A>(_:)();
}

uint64_t sub_10008AEC0()
{
  return View.hyphenationFactor(_:)();
}

uint64_t sub_10008AED0()
{
  return View.accessibilityLabel(_:)();
}

uint64_t sub_10008AEE0()
{
  return View.accessibilityLabel<A>(_:)();
}

uint64_t sub_10008AEF0()
{
  return View.accessibilityHidden(_:)();
}

uint64_t sub_10008AF00()
{
  return View.containerBackground<A>(for:alignment:content:)();
}

uint64_t sub_10008AF10()
{
  return View.playbackButtonStyle<A>(_:)();
}

uint64_t sub_10008AF20()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_10008AF30()
{
  return View.playbackButtonProgress(_:)();
}

uint64_t sub_10008AF40()
{
  return View.hidden()();
}

uint64_t sub_10008AF50()
{
  return View.overlay<A>(alignment:content:)();
}

uint64_t sub_10008AF60()
{
  return View.padding(_:_:)();
}

uint64_t sub_10008AF70()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_10008AF80()
{
  return View.redacted(reason:)();
}

uint64_t sub_10008AF90()
{
  return Color.init(uiColor:)();
}

uint64_t sub_10008AFA0()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t sub_10008AFB0()
{
  return static Color.clear.getter();
}

uint64_t sub_10008AFC0()
{
  return static Color.white.getter();
}

uint64_t sub_10008AFD0()
{
  return Color.opacity(_:)();
}

uint64_t sub_10008AFE0()
{
  return Color.init(_:red:green:blue:opacity:)();
}

uint64_t sub_10008AFF0()
{
  return Color.init(_:white:opacity:)();
}

uint64_t sub_10008B000()
{
  return Color.init(_:)();
}

uint64_t sub_10008B010()
{
  return Image.init(uiImage:)();
}

uint64_t sub_10008B020()
{
  return Image.init(systemName:)();
}

uint64_t sub_10008B030()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_10008B040()
{
  return Image.init(_internalSystemName:)();
}

uint64_t sub_10008B050()
{
  return Image.widgetAccentedRenderingMode(_:)();
}

uint64_t sub_10008B060()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_10008B070()
{
  return static Layout._makeLayoutView(root:inputs:body:)();
}

uint64_t sub_10008B080()
{
  return Layout.updateCache(_:subviews:)();
}

uint64_t sub_10008B090()
{
  return static Layout.layoutProperties.getter();
}

uint64_t sub_10008B0A0()
{
  return Layout.spacing(subviews:cache:)();
}

uint64_t sub_10008B0B0()
{
  return Layout<>.makeCache(subviews:)();
}

uint64_t sub_10008B0C0()
{
  return Toggle.init<A>(isOn:intent:label:)();
}

uint64_t sub_10008B0D0()
{
  return static Widget.main()();
}

uint64_t sub_10008B0E0()
{
  return type metadata accessor for Capsule();
}

uint64_t sub_10008B0F0()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10008B100()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_10008B110()
{
  return Gradient.init(colors:)();
}

uint64_t sub_10008B120()
{
  return static Alignment.top.getter();
}

uint64_t sub_10008B130()
{
  return static Alignment.center.getter();
}

uint64_t sub_10008B140()
{
  return static Alignment.leading.getter();
}

uint64_t sub_10008B150()
{
  return static Alignment.trailing.getter();
}

uint64_t sub_10008B160()
{
  return type metadata accessor for BlendMode();
}

uint64_t sub_10008B170()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t sub_10008B180()
{
  return static UnitPoint.top.getter();
}

uint64_t sub_10008B190()
{
  return static UnitPoint.bottom.getter();
}

uint64_t sub_10008B1A0()
{
  return static UnitPoint.leading.getter();
}

uint64_t sub_10008B1B0()
{
  return static UnitPoint.trailing.getter();
}

uint64_t sub_10008B1C0()
{
  return static WidgetRenderingMode.== infix(_:_:)();
}

uint64_t sub_10008B1D0()
{
  return static WidgetRenderingMode.vibrant.getter();
}

uint64_t sub_10008B1E0()
{
  return static WidgetRenderingMode.accented.getter();
}

uint64_t sub_10008B1F0()
{
  return type metadata accessor for WidgetRenderingMode();
}

uint64_t sub_10008B200()
{
  return static WidgetAccentedRenderingMode.fullColor.getter();
}

uint64_t sub_10008B210()
{
  return type metadata accessor for WidgetAccentedRenderingMode();
}

uint64_t sub_10008B220()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_10008B250()
{
  return StaticConfiguration.init<A>(kind:provider:content:)();
}

uint64_t sub_10008B260()
{
  return static TimelineReloadPolicy.after(_:)();
}

uint64_t sub_10008B270()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_10008B280()
{
  return TimelineEntryRelevance.init(score:duration:)();
}

uint64_t sub_10008B290()
{
  return type metadata accessor for TimelineEntryRelevance();
}

uint64_t sub_10008B2A0()
{
  return TimelineProviderContext.family.getter();
}

uint64_t sub_10008B2B0()
{
  return type metadata accessor for TimelineProviderContext();
}

uint64_t sub_10008B2C0()
{
  return Timeline.init(entries:policy:)();
}

uint64_t sub_10008B2D0()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_10008B2E0()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10008B2F0()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_10008B300()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_10008B310()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_10008B320()
{
  return type metadata accessor for String.IntentInputOptions();
}

uint64_t sub_10008B330()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_10008B340()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_10008B350()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10008B360()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008B370()
{
  return String.init(localized:defaultValue:table:bundle:locale:comment:)();
}

uint64_t sub_10008B380()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10008B390()
{
  return static String.eyebrowSeparatorSymbol.getter();
}

uint64_t sub_10008B3A0()
{
  return String.hash(into:)();
}

void sub_10008B3B0(Swift::String a1)
{
}

Swift::Int sub_10008B3C0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_10008B3D0(Swift::String repeating, Swift::Int count)
{
  return String.init(repeating:count:)(repeating, count)._countAndFlagsBits;
}

uint64_t sub_10008B3E0()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_10008B3F0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_10008B400()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10008B410()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008B420()
{
  return specialized Array._endMutation()();
}

uint64_t sub_10008B430()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10008B440()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_10008B450()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10008B460()
{
  return Double.description.getter();
}

uint64_t sub_10008B470()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_10008B480()
{
  return Collection.isNotEmpty.getter();
}

uint64_t sub_10008B490()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t sub_10008B4A0()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_10008B4B0()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_10008B4C0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10008B4D0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_10008B4E0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10008B4F0()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t sub_10008B500()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_10008B510()
{
  return MTPodcast.artworkModel.getter();
}

uint64_t sub_10008B520()
{
  return static OS_os_log.widget.getter();
}

uint64_t sub_10008B530()
{
  return type metadata accessor for Optional();
}

uint64_t sub_10008B540()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10008B550()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10008B560()
{
  return StringProtocol.localizedUppercase.getter();
}

uint64_t sub_10008B570()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_10008B580()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10008B590()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10008B5A0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10008B5B0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10008B5C0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10008B5D0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_10008B5E0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10008B5F0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10008B600()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10008B610()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10008B620()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10008B630()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10008B640()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10008B650()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

Swift::Int sub_10008B660(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_10008B670()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10008B680()
{
  return type metadata accessor for FloatingPointRoundingRule();
}

uint64_t sub_10008B690()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10008B6A0()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_10008B6B0()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t sub_10008B6C0()
{
  return Hasher.init(_seed:)();
}

void sub_10008B6D0(Swift::UInt a1)
{
}

void sub_10008B6E0(Swift::UInt8 a1)
{
}

void sub_10008B6F0(Swift::UInt64 a1)
{
}

Swift::Int sub_10008B700()
{
  return Hasher._finalize()();
}

uint64_t sub_10008B710()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_10008B720()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_10008B730()
{
  return static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
}

uint64_t sub_10008B740()
{
  return type metadata accessor for Duration.TimeFormatStyle.Pattern();
}

uint64_t sub_10008B750()
{
  return type metadata accessor for Duration.TimeFormatStyle();
}

uint64_t sub_10008B760()
{
  return static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
}

uint64_t sub_10008B770()
{
  return type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
}

uint64_t sub_10008B780()
{
  return static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide(rounded:)();
}

uint64_t sub_10008B790()
{
  return type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
}

uint64_t sub_10008B7A0()
{
  return static Duration.UnitsFormatStyle.UnitWidth.narrow.getter();
}

uint64_t sub_10008B7B0()
{
  return type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
}

uint64_t sub_10008B7C0()
{
  return type metadata accessor for Duration.UnitsFormatStyle();
}

uint64_t sub_10008B7D0()
{
  return Duration.formatted<A>(_:)();
}

uint64_t sub_10008B7E0()
{
  return static Duration.seconds(_:)();
}

uint64_t AXDurationStringForDurationWithSeconds()
{
  return _AXDurationStringForDurationWithSeconds();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

uint64_t NSPersistentStringForMTDisplayType()
{
  return _NSPersistentStringForMTDisplayType();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _MTLogCategoryDatabase()
{
  return __MTLogCategoryDatabase();
}

uint64_t _MTLogCategoryDefault()
{
  return __MTLogCategoryDefault();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_enumerationMutation(id obj)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

id objc_msgSend_AND_(void *a1, const char *a2, ...)
{
  return [a1 AND:];
}

id objc_msgSend__fetchRequestForDistinctSeasons(void *a1, const char *a2, ...)
{
  return _[a1 _fetchRequestForDistinctSeasons];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_adamID(void *a1, const char *a2, ...)
{
  return _[a1 adamID];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_applyShowTypeSetting_(void *a1, const char *a2, ...)
{
  return [a1 applyShowTypeSetting:];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_author(void *a1, const char *a2, ...)
{
  return _[a1 author];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return [a1 countByEnumeratingWithState:objects:count:];
}

id objc_msgSend_databaseID(void *a1, const char *a2, ...)
{
  return _[a1 databaseID];
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceReferenceDate:];
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 didChangeValueForKey:];
}

id objc_msgSend_episodeForUuid_(void *a1, const char *a2, ...)
{
  return [a1 episodeForUuid:];
}

id objc_msgSend_episodeUuid(void *a1, const char *a2, ...)
{
  return _[a1 episodeUuid];
}

id objc_msgSend_executeFetchRequest_error_(void *a1, const char *a2, ...)
{
  return [a1 executeFetchRequest:error];
}

id objc_msgSend_feedChangedDate(void *a1, const char *a2, ...)
{
  return _[a1 feedChangedDate];
}

id objc_msgSend_feedURL(void *a1, const char *a2, ...)
{
  return _[a1 feedURL];
}

id objc_msgSend_fetchRequestWithEntityName_(void *a1, const char *a2, ...)
{
  return [a1 fetchRequestWithEntityName:];
}

id objc_msgSend_findEpisodeWithRequest_(void *a1, const char *a2, ...)
{
  return [a1 findEpisodeWithRequest:];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_flags(void *a1, const char *a2, ...)
{
  return _[a1 flags];
}

id objc_msgSend_hasHTML(void *a1, const char *a2, ...)
{
  return _[a1 hasHTML];
}

id objc_msgSend_identifiers(void *a1, const char *a2, ...)
{
  return _[a1 identifiers];
}

id objc_msgSend_imageURL(void *a1, const char *a2, ...)
{
  return _[a1 imageURL];
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isSerialShowTypeInFeed(void *a1, const char *a2, ...)
{
  return _[a1 isSerialShowTypeInFeed];
}

id objc_msgSend_isValidShowTypeSetting_(void *a1, const char *a2, ...)
{
  return [a1 isValidShowTypeSetting:];
}

id objc_msgSend_itemDescription(void *a1, const char *a2, ...)
{
  return _[a1 itemDescription];
}

id objc_msgSend_lastDatePlayed(void *a1, const char *a2, ...)
{
  return _[a1 lastDatePlayed];
}

id objc_msgSend_lastImplicitlyFollowedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastImplicitlyFollowedDate];
}

id objc_msgSend_latestSeasonNumber(void *a1, const char *a2, ...)
{
  return _[a1 latestSeasonNumber];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lenientSharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 lenientSharedInstance];
}

id objc_msgSend_library(void *a1, const char *a2, ...)
{
  return _[a1 library];
}

id objc_msgSend_listenNowEpisode(void *a1, const char *a2, ...)
{
  return _[a1 listenNowEpisode];
}

id objc_msgSend_logAndThrow_(void *a1, const char *a2, ...)
{
  return [a1 logAndThrow:];
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectContext];
}

id objc_msgSend_markPlaylistsForUpdate(void *a1, const char *a2, ...)
{
  return _[a1 markPlaylistsForUpdate];
}

id objc_msgSend_markSubscriptionSyncDirty_for_(void *a1, const char *a2, ...)
{
  return [a1 markSubscriptionSyncDirty:for:];
}

id objc_msgSend_modifiedDate(void *a1, const char *a2, ...)
{
  return _[a1 modifiedDate];
}

id objc_msgSend_mt_compactMap_(void *a1, const char *a2, ...)
{
  return [a1 mt_compactMap:];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_needsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 needsUpdate];
}

id objc_msgSend_newestEpisodeWithFilter_(void *a1, const char *a2, ...)
{
  return [a1 newestEpisodeWithFilter:];
}

id objc_msgSend_nextEpisodeUuid(void *a1, const char *a2, ...)
{
  return _[a1 nextEpisodeUuid];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return [a1 numberWithLongLong:];
}

id objc_msgSend_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsInEntity:predicate:sortDescriptors:returnsObjectsAsFaults:limit:");
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return [a1 performBlockAndWait:];
}

id objc_msgSend_persistentID(void *a1, const char *a2, ...)
{
  return _[a1 persistentID];
}

id objc_msgSend_playbackNewestToOldest(void *a1, const char *a2, ...)
{
  return _[a1 playbackNewestToOldest];
}

id objc_msgSend_playlist(void *a1, const char *a2, ...)
{
  return _[a1 playlist];
}

id objc_msgSend_playlistIfDefault(void *a1, const char *a2, ...)
{
  return _[a1 playlistIfDefault];
}

id objc_msgSend_playlistSettings(void *a1, const char *a2, ...)
{
  return _[a1 playlistSettings];
}

id objc_msgSend_podcast(void *a1, const char *a2, ...)
{
  return _[a1 podcast];
}

id objc_msgSend_podcastForFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 podcastForFeedUrl:];
}

id objc_msgSend_podcastUuidForFeedUrlString_ctx_(void *a1, const char *a2, ...)
{
  return [a1 podcastUuidForFeedUrlString:ctx:];
}

id objc_msgSend_predicateForEpisodeType_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodeType:];
}

id objc_msgSend_predicateForEpisodesWithSeasonNumbersOnPodcastUuid_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEpisodesWithSeasonNumbersOnPodcastUuid];
}

id objc_msgSend_predicateForNotHiddenNotImplicitlyFollowedPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 predicateForNotHiddenNotImplicitlyFollowedPodcasts];
}

id objc_msgSend_predicateForPodcast_(void *a1, const char *a2, ...)
{
  return [a1 predicateForPodcast];
}

id objc_msgSend_predicateForSeasonNumberWithNoEpisodeNumber_(void *a1, const char *a2, ...)
{
  return [a1 predicateForSeasonNumberWithNoEpisodeNumber];
}

id objc_msgSend_predicateForSubscriptionSyncType_(void *a1, const char *a2, ...)
{
  return [a1 predicateForSubscriptionSyncType:];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithFormat:];
}

id objc_msgSend_saveInCurrentBlock(void *a1, const char *a2, ...)
{
  return _[a1 saveInCurrentBlock];
}

id objc_msgSend_seasonNumbers(void *a1, const char *a2, ...)
{
  return _[a1 seasonNumbers];
}

id objc_msgSend_seasonSortDescriptorsForSortOrder(void *a1, const char *a2, ...)
{
  return _[a1 seasonSortDescriptorsForSortOrder];
}

id objc_msgSend_seasonTrailerInSeason_(void *a1, const char *a2, ...)
{
  return [a1 seasonTrailerInSeason:];
}

id objc_msgSend_setEpisodeGuid_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeGuid:];
}

id objc_msgSend_setEpisodeTitle_(void *a1, const char *a2, ...)
{
  return [a1 setEpisodeTitle:];
}

id objc_msgSend_setExcludeUnentitled_(void *a1, const char *a2, ...)
{
  return [a1 setExcludeUnentitled:];
}

id objc_msgSend_setFetchLimit_(void *a1, const char *a2, ...)
{
  return [a1 setFetchLimit:];
}

id objc_msgSend_setFlags_(void *a1, const char *a2, ...)
{
  return [a1 setFlags:];
}

id objc_msgSend_setListenNowEpisode_(void *a1, const char *a2, ...)
{
  return [a1 setListenNowEpisode];
}

id objc_msgSend_setModifiedDate_(void *a1, const char *a2, ...)
{
  return [a1 setModifiedDate:];
}

id objc_msgSend_setNeedsUpdate_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsUpdate:];
}

id objc_msgSend_setPersistentID_(void *a1, const char *a2, ...)
{
  return [a1 setPersistentID:];
}

id objc_msgSend_setPodcastFeedUrl_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastFeedUrl];
}

id objc_msgSend_setPodcastTitle_(void *a1, const char *a2, ...)
{
  return [a1 setPodcastTitle:];
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setPredicate:];
}

id objc_msgSend_setPrimitiveValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setPrimitiveValue:forKey:];
}

id objc_msgSend_setPropertiesToFetch_(void *a1, const char *a2, ...)
{
  return [a1 setPropertiesToFetch:];
}

id objc_msgSend_setResultType_(void *a1, const char *a2, ...)
{
  return [a1 setResultType:];
}

id objc_msgSend_setReturnsDistinctResults_(void *a1, const char *a2, ...)
{
  return [a1 setReturnsDistinctResults:];
}

id objc_msgSend_setSortAscending_(void *a1, const char *a2, ...)
{
  return [a1 setSortAscending:];
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 setSortDescriptors:];
}

id objc_msgSend_setStoreTrackId_(void *a1, const char *a2, ...)
{
  return [a1 setStoreTrackId:];
}

id objc_msgSend_setStreamUrl_(void *a1, const char *a2, ...)
{
  return [a1 setStreamUrl:];
}

id objc_msgSend_setUuid_(void *a1, const char *a2, ...)
{
  return [a1 setUuid:];
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return [a1 setWithArray:];
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_showTypeInFeed(void *a1, const char *a2, ...)
{
  return _[a1 showTypeInFeed];
}

id objc_msgSend_showTypeSetting(void *a1, const char *a2, ...)
{
  return _[a1 showTypeSetting];
}

id objc_msgSend_sortAscending(void *a1, const char *a2, ...)
{
  return _[a1 sortAscending];
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorWithKey:ascending:];
}

id objc_msgSend_sortDescriptorWithKey_ascending_selector_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorWithKey:ascending:selector:];
}

id objc_msgSend_sortDescriptorsForPlayOrderByEpisodeNumber(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForPlayOrderByEpisodeNumber];
}

id objc_msgSend_sortDescriptorsForPlayOrderByPubDate(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptorsForPlayOrderByPubDate];
}

id objc_msgSend_sortDescriptorsForPubDateAscending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorsForPubDateAscending:];
}

id objc_msgSend_sortOrderAscForShowType_(void *a1, const char *a2, ...)
{
  return [a1 sortOrderAscForShowType:];
}

id objc_msgSend_storeCollectionId(void *a1, const char *a2, ...)
{
  return _[a1 storeCollectionId];
}

id objc_msgSend_streamURL(void *a1, const char *a2, ...)
{
  return _[a1 streamURL];
}

id objc_msgSend_stringBySmartlyStrippingHTML(void *a1, const char *a2, ...)
{
  return _[a1 stringBySmartlyStrippingHTML];
}

id objc_msgSend_subscribed(void *a1, const char *a2, ...)
{
  return _[a1 subscribed];
}

id objc_msgSend_syncType(void *a1, const char *a2, ...)
{
  return _[a1 syncType];
}

id objc_msgSend_timestampBoundByNow_(void *a1, const char *a2, ...)
{
  return [a1 timestampBoundByNow:];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_universalStore(void *a1, const char *a2, ...)
{
  return _[a1 universalStore];
}

id objc_msgSend_upNextForPodcastUuid_excludeExplicit_ctx_(void *a1, const char *a2, ...)
{
  return [a1 upNextForPodcastUuid:excludeExplicit:ctx:];
}

id objc_msgSend_updateAvg(void *a1, const char *a2, ...)
{
  return _[a1 updateAvg];
}

id objc_msgSend_updateStdDev(void *a1, const char *a2, ...)
{
  return _[a1 updateStdDev];
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _[a1 uuid];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:];
}

id objc_msgSend_vendorID(void *a1, const char *a2, ...)
{
  return _[a1 vendorID];
}

id objc_msgSend_webpageURL(void *a1, const char *a2, ...)
{
  return _[a1 webpageURL];
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 willChangeValueForKey:];
}